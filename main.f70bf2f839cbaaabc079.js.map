{"version":3,"sources":["webpack:///./src/app/store/session/session-dispatcher.ts","webpack:///./src/app/store/session/session-dispatcher.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/id-generator.service.ts","webpack:///./src/app/core/services/id-generator.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-metadata.ts","webpack:///./src/app/shared/pipes/fullname.pipe.ts","webpack:///./src/app/core/routing-guards/account-status-guard-helper.ts","webpack:///./src/app/core/routing-guards/account-status-guard-helper.ts.pre-build-optimizer.js","webpack:///./src/app/model/codes-enums/enums.ts","webpack:///./src/app/model/codes-enums/enums.ts.pre-build-optimizer.js","webpack:///./src/app/shared/model.component.ts","webpack:///./src/app/core/services/holidays.service.ts","webpack:///./src/app/core/services/holidays.service.ts.pre-build-optimizer.js","webpack:///./src/app/shared/read-more/read-more.component.ts","webpack:///./src/app/shared/read-more/read-more.component.ts.pre-build-optimizer.js","webpack:///./src/app/dashboard/dashboard-view.service.ts","webpack:///./src/app/dashboard/dashboard-view.service.ts.pre-build-optimizer.js","webpack:///./src/app/model/codes-enums/us-state-codes.ts","webpack:///./src/app/model/codes-enums/index.ts","webpack:///./src/app/shared/input/input-text.component.ts","webpack:///./src/app/shared/input/input-text.component.ts.pre-build-optimizer.js","webpack:///./src/environments/environment.ts","webpack:///./src/environments/version.ts","webpack:///./src/app/core/e2e-check.ts","webpack:///./src/app/store/entity/entity-services/tax-location.service.ts","webpack:///./src/app/store/entity/entity-services/tax-location.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/tax-services/tax-rates.service.ts","webpack:///./src/app/core/services/tax-services/tax-rates.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/tax-services/tax-save-helper.service.ts","webpack:///./src/app/core/services/tax-services/tax-save-helper.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/tax-services/tax-collector.service.ts","webpack:///./src/app/core/services/tax-services/tax-collector.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/sp-route-reuse-strategy.ts.pre-build-optimizer.js","webpack:///./src/app/core/sp-route-reuse-strategy.ts","webpack:///./src/app/shared/input/input-select.component.ts","webpack:///./src/app/shared/input/input-select.component.ts.pre-build-optimizer.js","webpack:///./src/app/core/routing-guards/auth-failed-guard.ts","webpack:///./src/app/core/routing-guards/auth-failed-guard.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/employee-tax.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/employee-tax.service.ts","webpack:///./src/app/store/entity/entity-services/company-entity-helper.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/company-entity-helper.service.ts","webpack:///./src/app/shared/input/multi-mask.directive.ts","webpack:///./src/app/shared/input/multi-mask.directive.ts.pre-build-optimizer.js","webpack:///./src/app/shared/pipes/ssn.pipe.ts","webpack:///./src/app/store/entity/entity-dispatcher.ts","webpack:///./src/app/store/entity/entity-dispatcher.ts.pre-build-optimizer.js","webpack:///./src/app/shared/amount-or-percent-value/amount-or-percent-value.component.ts","webpack:///./src/app/store/entity/company-package.service.ts","webpack:///./src/app/store/entity/company-package.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/session/session.service.ts","webpack:///./src/app/store/session/session.service.ts.pre-build-optimizer.js","webpack:///./src/app/shared/input/control-wrap.component.ts","webpack:///./src/app/store/entity/entity-services/current-company-entity-collection-service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/current-company-entity-collection-service.ts","webpack:///./src/app/core/services/tin-check.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/tin-check.service.ts","webpack:///./src/app/core/window.ts","webpack:///./src/app/shared/pipes/household-filer-status.pipe.ts","webpack:///./src/app/core/services/location-services/interfaces.ts","webpack:///./src/app/shared/docs/view-docs.component.ts","webpack:///./src/app/core/guid-fns.ts","webpack:///./src/app/shared/pipes/yes-no.pipe.ts","webpack:///./src/app/shared/pipes/subject-exempt.pipe.ts","webpack:///./src/app/core/services/busy.service.ts","webpack:///./src/app/core/services/busy.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/utils/date-utils.ts","webpack:///./src/app/core/saver.ts","webpack:///./src/app/core/saver.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/title.service.ts","webpack:///./src/app/core/services/title.service.ts.pre-build-optimizer.js","webpack:///./src/app/shared/pipes/address.pipe.ts","webpack:///./src/app/shared/pipes/address.pipe.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/toast.service.ts","webpack:///./src/app/core/services/toast.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/logger.service.ts","webpack:///./src/app/core/services/logger.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/review.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/review.service.ts","webpack:///./src/app/core/routing-guards/single-page-status-guard.ts.pre-build-optimizer.js","webpack:///./src/app/core/routing-guards/single-page-status-guard.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/store/entity/entity-services/entity-helper.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/entity-helper.service.ts","webpack:///./src/app/store/session/reducer.ts.pre-build-optimizer.js","webpack:///./src/app/store/session/reducer.ts","webpack:///./src/app/shared/input/multi-mask-helper.ts","webpack:///./src/app/core/services/auth-services/oidc-token.service.ts","webpack:///./src/app/core/services/auth-services/oidc-token.service.ts.pre-build-optimizer.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/core/utils/household-filer-utils.ts","webpack:///./src/app/core/well-known-routes.ts","webpack:///./src/app/shared/address/address-form.component.ts.pre-build-optimizer.js","webpack:///./src/app/shared/address/address-form.component.ts","webpack:///./src/app/core/services/tax-services/tax-behavior.service.ts","webpack:///./src/app/core/services/tax-services/tax-behavior.service.ts.pre-build-optimizer.js","webpack:///./src/app/shared/address/address-modal.component.ts.pre-build-optimizer.js","webpack:///./src/app/shared/address/address-modal.component.ts","webpack:///./src/app/core/utils/ee-utils.ts","webpack:///./src/app/store/entity/entity-services/earning.service.ts","webpack:///./src/app/store/entity/entity-services/earning.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/company.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/company.service.ts","webpack:///./src/app/shared/datepicker/datepicker-popup.component.ts","webpack:///./src/app/shared/datepicker/datepicker-popup.component.ts.pre-build-optimizer.js","webpack:///./src/app/shared/input/input-date.component.ts","webpack:///./src/app/shared/input/input-date.component.ts.pre-build-optimizer.js","webpack:///./src/app/shared/date-range-pay-period/date-range-pay-period-vm.ts","webpack:///./src/app/shared/date-range-pay-period/date-range-pay-period-vm.ts.pre-build-optimizer.js","webpack:///./src/app/shared/date-range-pay-period/date-range-pay-period.component.ts","webpack:///./src/app/shared/date-range-pay-period/date-range-pay-period.component.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/esign.service.ts","webpack:///./src/app/core/services/esign.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/utils/datenum-enum.ts","webpack:///./src/app/core/utils/checkdate-utils.ts","webpack:///./src/app/core/utils/utils.ts","webpack:///./src/app/core/utils/change-item-factory.ts","webpack:///./src/app/core/utils/is-promise.ts","webpack:///./src/app/core/utils/subsink.ts","webpack:///./src/app/core/utils/subsink.ts.pre-build-optimizer.js","webpack:///./src/app/core/utils/index.ts","webpack:///./src/app/account-details/account-details.module.ts","webpack:///./src/app/store/session/actions.ts","webpack:///./src/app/core/routing-guards/page-leave-guard.ts","webpack:///./src/app/core/routing-guards/page-leave-guard.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/auth-services/oidc-signup-user.ts","webpack:///./src/app/core/services/auth-services/oidc-signup-user.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/auth-services/auth-data.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/auth-services/auth-data.service.ts","webpack:///./src/app/core/services/auth-services/auth.service.ts","webpack:///./src/app/core/services/auth-services/auth.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/location-services/browser-geolocation.service.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/model/codes-enums/code.ts","webpack:///./src/app/model/codes-enums/code.ts.pre-build-optimizer.js","webpack:///./src/app/store/validation/validator.ts.pre-build-optimizer.js","webpack:///./src/app/store/validation/validator.ts","webpack:///./src/app/core/routing-guards/admin-console-guard.ts","webpack:///./src/app/core/routing-guards/admin-console-guard.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/location-services/address-finder.service.ts","webpack:///./src/app/shared/pipes/state-name.pipe.ts","webpack:///./src/app/shared/pipes/state-name.pipe.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/sort-comparers.ts","webpack:///./src/app/store/validation/validation-trigger.service.ts","webpack:///./src/app/store/validation/validation-trigger.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/index.ts","webpack:///./src/app/shared/radio-group/radio-group.component.ts","webpack:///./src/app/shared/radio-group/radio-group.component.ts.pre-build-optimizer.js","webpack:///./src/app/shared/accordion/accordion.component.ts","webpack:///./src/app/shared/accordion/accordion.component.ts.pre-build-optimizer.js","webpack:///./src/app/shared/input/date-util.ts","webpack:///./src/app/store/entity/entity-services/company-tax.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/company-tax.service.ts","webpack:///./src/app/core/services/chat.service.ts","webpack:///./src/app/core/services/chat.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/session/session-selectors.ts","webpack:///./src/app/store/session/session-selectors.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/stats.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/stats.service.ts","webpack:///./src/app/store/entity/entity-selectors.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-selectors.ts","webpack:///./src/app/shared/contact-cust-support.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/shared/contact-cust-support.component.ts.ContactCustomerSupportComponent.html","webpack:///./src/app/shared/docs/documents-list.component.ts","webpack:///./src/app/core/utils/address-utils.ts","webpack:///./src/app/core/services/auth-services/oidc-manager-factory.ts","webpack:///./src/app/core/services/auth-services/oidc-manager-factory.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/tax-services/tax-models.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/tax-services/tax-models.ts","webpack:///./src/app/shared/pipes/phone.pipe.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/module-import-check.ts","webpack:///./src/app/core/routing-guards/index.ts","webpack:///./src/app/shared/nav-bottom.component.ts","webpack:///./src/app/core/services/location-services/google-places.service.ts","webpack:///./src/app/core/services/location-services/google-places.service.ts.pre-build-optimizer.js","webpack:///./src/app/shared/pipes/company-kind.pipe.ts","webpack:///./src/app/store/validation/validation.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/validation/validation.service.ts","webpack:///./src/app/core/services/bank-routing-number.service.ts","webpack:///./src/app/core/services/bank-routing-number.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/routing-guards/data-entry-page-guard.ts.pre-build-optimizer.js","webpack:///./src/app/core/routing-guards/data-entry-page-guard.ts","webpack:///./src/app/shared/input/input-text.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/shared/input/input-text.component.html","webpack:///./src/app/core/services/iframe.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/iframe.service.ts","webpack:///./src/app/model/entities/company-entity-base.ts","webpack:///./src/app/model/entities/address.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/address.ts","webpack:///./src/app/model/entities/company-tax.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/company-tax.ts","webpack:///./src/app/model/entities/company-ancillary.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/company-ancillary.ts","webpack:///./src/app/model/entities/company-earning.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/company-earning.ts","webpack:///./src/app/model/entities/company-deduction.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/company-deduction.ts","webpack:///./src/app/model/entities/company.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/company.ts","webpack:///./src/app/model/entities/deduction.ts","webpack:///./src/app/model/entities/earning.ts","webpack:///./src/app/model/entities/document.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/employee-deduction.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/employee-payment-method.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/employee-payment-method.ts","webpack:///./src/app/model/entities/employee-tax.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/employee-tax.ts","webpack:///./src/app/model/entities/employee.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/employee.ts","webpack:///./src/app/model/entities/household-filers.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/envelope-signer.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/envelope.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/household-filers.ts","webpack:///./src/app/model/entities/stats.ts.pre-build-optimizer.js","webpack:///./src/app/model/entities/stats.ts","webpack:///./src/app/model/entities/user.ts.pre-build-optimizer.js","webpack:///./src/app/model/index.ts","webpack:///./src/app/shared/validation/validate-property.directive.ts.pre-build-optimizer.js","webpack:///./src/app/shared/validation/validate-property.directive.ts","webpack:///./src/app/shared/input/input-mask-catalog.ts.pre-build-optimizer.js","webpack:///./src/app/shared/input/input-mask-catalog.ts","webpack:///./src/app/shared/contact-cust-support.component.ts","webpack:///./src/app/shared/radio-group/radio-button.component.ts","webpack:///./src/app/shared/radio-group/radio-button.component.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/document-package.service.ts","webpack:///./src/app/store/entity/entity-services/document-package.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/routing-guards/account-view-guard.ts","webpack:///./src/app/core/routing-guards/account-view-guard.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/tax-services/tax.service.ts","webpack:///./src/app/core/services/tax-services/tax.service.ts.pre-build-optimizer.js","webpack:///./src/app/app-dev.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/mock-services/db.ts","webpack:///./src/app/mock-auth/jwt.service.ts","webpack:///./src/app/mock-auth/jwt.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-service-utils.ts","webpack:///./src/app/signup/signup.service.ts","webpack:///./src/app/signup/signup.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/http-interceptors/concurrency-http-interceptor.ts","webpack:///./src/app/mock-services/http-server-concurrency-interceptor.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/http-server-concurrency-interceptor.ts","webpack:///./src/app/mock-services/http-client-backend-service-sp.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/http-client-backend-service-sp.ts","webpack:///./src/app/mock-signin/mock-signin.component.ts","webpack:///./src/app/mock-services/in-mem-gen-extra-accounts.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-gen-extra-accounts.ts","webpack:///./src/app/mock-services/in-mem-account-state-transitions.ts","webpack:///./src/app/mock-services/in-mem-account.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-account.service.ts","webpack:///./src/app/mock-services/in-mem-address-validator.service.ts","webpack:///./src/app/mock-services/in-mem-address-validator.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-admin.service.ts","webpack:///./src/app/mock-services/in-mem-admin.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-company-package.service.ts","webpack:///./src/app/mock-services/in-mem-company-package.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/raw-deductions.ts","webpack:///./src/app/mock-services/raw-deductions-categories.ts","webpack:///./src/app/mock-services/master-data-deductions-loader.ts","webpack:///./src/app/mock-services/in-mem-deduction.service.ts","webpack:///./src/app/mock-services/in-mem-deduction.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/raw-earnings.ts","webpack:///./src/app/mock-services/in-mem-earning.service.ts","webpack:///./src/app/mock-services/in-mem-earning.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/master-data-earnings-loader.ts","webpack:///./src/app/mock-services/in-mem-ein.service.ts","webpack:///./src/app/mock-services/in-mem-ein.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-esign.service.ts","webpack:///./src/app/mock-services/in-mem-esign.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-enrollment.service.ts","webpack:///./src/app/mock-services/in-mem-enrollment.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-identity.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-identity.service.ts","webpack:///./src/app/mock-services/in-mem-save-entities-utils.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-save-entities-utils.ts","webpack:///./src/app/mock-services/in-mem-save-entities.service.ts","webpack:///./src/app/mock-services/in-mem-save-entities.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-tax.service.ts","webpack:///./src/app/mock-services/in-mem-tax.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-tax-rate.service.ts","webpack:///./src/app/mock-services/in-mem-tax-rate.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-mem-surepayroll.service.ts","webpack:///./src/app/mock-services/in-mem-surepayroll.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-memory-data.service.ts.pre-build-optimizer.js","webpack:///./src/app/mock-services/in-memory-data.service.ts","webpack:///./src/app/mock-signin/mock-signin.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/mock-signin/mock-signin.component.html","webpack:///./src/app/terms/terms.component.ts","webpack:///./src/app/terms/terms.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/terms/terms.component.html","webpack:///./src/app/failed/failed.component.ts","webpack:///./src/app/failed/failed.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/failed/failed.component.html","webpack:///./src/app/concurrency-failure/concurrency-failure.component.ts","webpack:///./src/app/concurrency-failure/concurrency-failure.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/concurrency-failure/concurrency-failure.component.html","webpack:///./src/app/auth-components/auth-failed.component.ts","webpack:///./src/app/auth-components/auth-failed.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/auth-components/auth-failed.component.ts.AuthFailedComponent.html","webpack:///./src/app/auth-components/oidc-callback.component.ts","webpack:///./src/app/auth-components/oidc-callback.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/auth-components/signed-out.component.ts","webpack:///./src/app/auth-components/signed-out.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/auth-components/signed-out.component.ts.SignedOutComponent.html","webpack:///./src/app/auth-components/unauthorized.component.ts","webpack:///./src/app/auth-components/unauthorized.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/auth-components/unauthorized.component.ts.UnauthorizedComponent.html","webpack:///./src/app/core-components/stepper/stepper.component.ts.pre-build-optimizer.js","webpack:///./src/app/core-components/stepper/stepper.component.ts","webpack:///./src/app/core-components/stepper/stepper.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/core-components/stepper/stepper.component.html","webpack:///./src/app/core-components/toolbar/toolbar.component.ts","webpack:///./src/app/core-components/toolbar/toolbar.component.ts.pre-build-optimizer.js","webpack:///./src/app/core/error-handling/sentry.functions.ts","webpack:///./src/app/core-components/toolbar/toolbar.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/core-components/toolbar/toolbar.component.html","webpack:///./src/app/core-components/spinner/spinner.component.ts","webpack:///./src/app/core-components/spinner/spinner.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/core-components/spinner/spinner.component.html","webpack:///./src/app/core-components/chat/chat.component.ts","webpack:///./src/app/core-components/chat/chat.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/core-components/chat/chat.component.html","webpack:///./src/app/app.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/app.component.html","webpack:///./src/app/core/analytics/analytics-event.ts","webpack:///./src/app/core/analytics/analytics.service.ts","webpack:///./src/app/core/analytics/analytics.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/analytics/providers/router-navigation-analytics.provider.ts","webpack:///./src/app/core/analytics/receivers/google-tagmanager.receiver.ts","webpack:///./src/app/core/analytics/receivers/google-tagmanager.receiver.ts.pre-build-optimizer.js","webpack:///./src/app/core/http-interceptors/busy-http-interceptor.ts","webpack:///./src/app/core/http-interceptors/read-only-http-interceptor.ts","webpack:///./src/app/core/http-interceptors/accept-json-only-http-interceptor.ts","webpack:///./src/app/core/http-interceptors/queued-request-http-interceptor.ts","webpack:///./src/app/core/http-interceptors/queued-request-http-interceptor.ts.pre-build-optimizer.js","webpack:///./src/app/core/http-interceptors/auth-http-interceptor.ts","webpack:///./src/app/core/http-interceptors/auth-http-interceptor.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/sp-entity-collection-dataservice.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/sp-entity-collection-dataservice.ts","webpack:///./src/app/shared/filter/filter-dateformat.ts.pre-build-optimizer.js","webpack:///./src/app/shared/filter/filter-dateformat.ts","webpack:///./src/app/mock-auth/mock-oidc-manager-proxy.ts","webpack:///./src/app/mock-auth/mock-oidc-manager-proxy.ts.pre-build-optimizer.js","webpack:///./src/app/mock-auth/mock-oidc-manager-factory.ts","webpack:///./src/app/mock-auth/mock-oidc-user-data.ts","webpack:///./src/app/mock-auth/mock-oidc-user.ts.pre-build-optimizer.js","webpack:///./src/app/mock-auth/mock-oidc-user.ts","webpack:///./src/app/mock-auth/mock-oidc-manager.ts","webpack:///./src/app/mock-auth/mock-oidc-manager.ts.pre-build-optimizer.js","webpack:///./src/app/core/error-handling/sentry-error-handler.ts.pre-build-optimizer.js","webpack:///./src/app/core/error-handling/sentry-error-handler.ts","webpack:///./src/app/mock-signin/mock-signin.module.ts.pre-build-optimizer.js","webpack:///./src/app/mock-signin/mock-signin.module.ts","webpack:///./src/app/app-routing.module.ts.pre-build-optimizer.js","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/core/analytics/analytics.module.ts","webpack:///./src/app/auth-components/auth-components.module.ts","webpack:///./src/app/core-components/core-components.module.ts","webpack:///./src/app/store/session/session-store.module.ts","webpack:///./src/app/store/entity/sp-entity-action-factory.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/sp-entity-action-factory.ts","webpack:///./src/app/store/entity/data-service-config.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/data-service-config.ts","webpack:///./src/app/store/entity/entity-services/ngrx-data-toast.service.ts","webpack:///./src/app/store/entity/entity-services/entity-services.module.ts","webpack:///./src/app/store/entity/entity-store.module.ts","webpack:///./src/app/store/app-store.module.ts","webpack:///./src/app/core/error-handling/sentry-enricher.ts","webpack:///./src/app/core/error-handling/auth-error-enricher.ts","webpack:///./src/app/core/error-handling/auth-error-enricher.ts.pre-build-optimizer.js","webpack:///./src/app/core/error-handling/logger-enricher.ts","webpack:///./src/app/core/error-handling/sentry.module.ts","webpack:///./src/app/store/validation/validation.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/mock-services/mock-services.module.ts","webpack:///./src/app/mock-auth/mock-auth.module.ts","webpack:///./src/app/store/validation/default-validators.ts.pre-build-optimizer.js","webpack:///./src/app/store/validation/default-validators.ts","webpack:///./src/app/model/validators/must-have-employees-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/must-have-employees-validator.ts","webpack:///./src/app/core/services/tax-services/tax-utils.ts","webpack:///./src/app/model/validators/federal-taxes-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/federal-taxes-validator.ts","webpack:///./src/app/model/validators/state-taxes-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/state-taxes-validator.ts","webpack:///./src/app/model/validators/employee-taxes-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/employee-taxes-validator.ts","webpack:///./src/app/model/validators/username-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/username-validator.ts","webpack:///./src/app/model/validators/password-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/password-validator.ts","webpack:///./src/app/model/validators/household-filer-must-exist-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/household-filer-must-exist-validator.ts","webpack:///./src/app/model/validators/earnings-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/earnings-validator.ts","webpack:///./src/app/model/validators/checkdate-criteria-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/checkdate-criteria-validator.ts","webpack:///./src/app/model/validators/address-criteria-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/address-criteria-validator.ts","webpack:///./src/app/model/validators/document-signing-complete-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/document-signing-complete-validator.ts","webpack:///./src/app/model/validators/must-not-be-exempt-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/must-not-be-exempt-validator.ts","webpack:///./src/app/model/validators/dynamic-range-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/dynamic-range-validator.ts","webpack:///./src/app/model/validators/ein-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/ein-validator.ts","webpack:///./src/app/model/validators/verified-address-validator.ts.pre-build-optimizer.js","webpack:///./src/app/model/validators/verified-address-validator.ts","webpack:///./src/app/app-dev.module.ngfactory.js.pre-build-optimizer.js","webpack:///./src/main.ts","webpack:///./src/app/core/services/auth-services/oidc-manager-config.ts","webpack:///./src/app/core/services/location-services/geolocation.service.ts","webpack:///./src/app/store/validation/validation-metadata.ts","webpack:///./src/app/store/validation/validation-metadata.ts.pre-build-optimizer.js"],"names":["__webpack_require__","d","__webpack_exports__","SessionDispatcher","_actions__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_ngrx_store__WEBPACK_IMPORTED_MODULE_2__","_core_services_logger_service__WEBPACK_IMPORTED_MODULE_3__","store","logger","this","prototype","setAuthUser","authUser","dispatch","setCompanyPackageLoaded","isLoaded","setCompanyPackageLoading","isLoading","setCurrentAccount","companyId","userId","setCurrentCompanyEtag","etag","setCurrentEmployeeId","employeeId","setReadOnly","readOnly","ngInjectableDef","factory","token","providedIn","IdGeneratorService","_core_guid_fns__WEBPACK_IMPORTED_MODULE_0__","generateId","Object","entityMetadata","entitiesWithoutCompanyId","isCompanyEntity","companyCollectionDataMapper","selectDeductionId","selectCode","_sort_comparers__WEBPACK_IMPORTED_MODULE_0__","_utils__WEBPACK_IMPORTED_MODULE_1__","throwOnBadCollectionName","production","Address","Ancillary","Company","sortComparer","CompanyDeduction","CompanyDeductionParameter","CompanyTax","CompanyAncillary","CompanyEarning","Deduction","selectId","Document","Earning","Employee","EmployeeDeduction","EmployeeDeductionParameter","EmployeePaymentMethod","EmployeeTax","Envelope","EnvelopeSigner","HouseholdFilers","Stats","User","TaxRate","nonCompanyEntity","entityName","data","shouldThrow","keys","reduce","acc","key","Error","deduction","codeTypeId","earning","code","FullNamePipe","_core_utils__WEBPACK_IMPORTED_MODULE_0__","transform","person","okRoute","AccountStatusGuardHelper","rxjs__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_1__","rxjs_operators__WEBPACK_IMPORTED_MODULE_2__","rxjs_operators__WEBPACK_IMPORTED_MODULE_3__","rxjs_operators__WEBPACK_IMPORTED_MODULE_4__","rxjs_operators__WEBPACK_IMPORTED_MODULE_5__","rxjs_operators__WEBPACK_IMPORTED_MODULE_6__","rxjs_operators__WEBPACK_IMPORTED_MODULE_7__","_model__WEBPACK_IMPORTED_MODULE_8__","_core_well_known_routes__WEBPACK_IMPORTED_MODULE_9__","_angular_core__WEBPACK_IMPORTED_MODULE_10__","_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_11__","_store_session_session_service__WEBPACK_IMPORTED_MODULE_12__","_angular_router__WEBPACK_IMPORTED_MODULE_13__","authService","sessionService","router","_a","_b","_this","rerouteFactory","newRoute","extras","guardName","originalRoute","status","logEvent","navigate","replaceUrl","toAdminAccountView","AdminAccountView","adminBaseRoutes","Abandoned","Docs","Enrolled","Open","AutoMigrate","Operations","Migrating","Test","regularBaseRoutes","Documents","Dashboard","Processing","byAccountStatusOperatorFactory","adminRoutes","regularRoutes","company","isAdminOnce$","pipe","isAdmin","routeFn","Failed","isAdmin$","message","accountStatusAllows$","state","byStatusOperator","signedInWithCompanyPackage$","url","signedIn$","isSignedIn$","signedIn","setReroute","signin","withData$","companyPackageLoading$","loading","companyPackageLoaded$","loaded","currentCompany$","name","signout","AccountStatus","AccountStatusCodes","CompanyType","CompanyTypeCodes","CompanyTitles","EmployeeStatus","EmployeeType","EnvelopeStatus","FeinStatus","HouseholdFilersStatus","PaymentAccountType","PaymentStrategy","PaymentMethod","PayrollFrequency","PayrollFrequencyCodes","SectionStatus","SeinStatus","SexCodes","TaxExemptionReasonsCodes","TaxRateType","TaxTypeCode","UserRole","CalendarState","_code__WEBPACK_IMPORTED_MODULE_0__","displayName","value","FedFilingStatus","Corporation","GeneralPartnership","LLC","LimitedPartnership","SoleProprietorship","Household","NonProfit","Sex","StateFilingStatus","SuiStatus","TaxCategoryCode","TaxExemptionReason","Female","Male","InsuranceAgentsOrSolicitors","AgriculturalLabor","DomesticServiceInCollegeClubs","DeceasedWorkersWages","EmployersWhoseTaxabilityDependsUponNumberOfEmployees","ForeignWorkersPerformingTemporaryAgriculturalLabor","FamilyEmployees","FederalEmployees","FishingAndRelatedActivities","ForeignServiceByUSCitizens","HouseholdWorkers","IndustrialHomeworkers","ForeignGovernmentAndInternationalOrganizations","InternsWorkingInHospitals","Ministers","NewspaperCarriersUnder18","NewspaperAndMagazineVendors","MembersOfReligiousOrdersWhoveNotTakenVowOfPoverty","NonProfitOrganizations","PatientsEmployedByHospitals","Railroads","RealEstateAgentsAndDirectSellers","ReligiousExemption","SicknessOrInjuryPayments","EmployeesOfStateGovernmentsAndPoliticalSubdivisions","Students","NonResidentAlienFJMVisa","MembersOfReligiousOrdersWhoHaveTakenAVowOfPoverty","ModelComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","modelChange","ngOnChanges","changes","emit","notifyOfModelChange","HolidaysService","rxjs_operators__WEBPACK_IMPORTED_MODULE_1__","_environment__WEBPACK_IMPORTED_MODULE_3__","_angular_core__WEBPACK_IMPORTED_MODULE_4__","_angular_common_http__WEBPACK_IMPORTED_MODULE_5__","_logger_service__WEBPACK_IMPORTED_MODULE_6__","http","cachedHolidays","getHolidays","get","spApiRoot","e","holidays","map","Date","substr","filter","isNaN","getTime","error","ReadMoreComponent","sanitizer","collapsed","separatorTag","seeMoreLabel","seeLessLabel","tooLarge","hideSeeLess","defineProperty","_description","set","val","replace","_summary","input","pos","indexOf","getSummary","length","enumerable","configurable","getSafeHtml","ngOnInit","html","bypassSecurityTrustHtml","seeMore","seeLess","DashboardViewService","_model__WEBPACK_IMPORTED_MODULE_5__","_angular_core__WEBPACK_IMPORTED_MODULE_6__","_store_entity_entity_services_review_service__WEBPACK_IMPORTED_MODULE_7__","_store_session_session_service__WEBPACK_IMPORTED_MODULE_8__","_store_entity_entity_services_stats_service__WEBPACK_IMPORTED_MODULE_9__","reviewService","statsService","showIntro$","stats$","stats","aboutYouStatus","statuses$","aboutYouStatus$","bankInfoStatus$","companyInfoStatus$","companyTaxStatus$","employeesStatus$","aboutYou","bankInfo","companyInfo","companyTax","employees","vm$","currentUser$","isValid$","showIntro","statuses","user","isValid","Valid","canSignDocuments","aboutYouAction","getStatusAction","aboutYouClass","getStatusCss","aboutYouIcon","getStatusIcon","bankInfoAction","bankInfoClass","bankInfoIcon","companyInfoAction","companyInfoClass","companyInfoIcon","companyTaxAction","companyTaxClass","companyTaxIcon","employeesAction","employeesClass","employeesIcon","status-action","NotStarted","status-inprogress","Invalid","status-complete","USStateCodes","enums","InputTextComponent","inputMasks","changeDetector","modelContext","disabled","formatString","mask","placeholder","tooltip","type","blur","focus","onChange","onExit","onTouched","accessorOnChange","args","_i","arguments","accessorOnTouched","isDestroyed","open","previousValue","undefined","textMask","_group","group","_model","model","_modelType","modelType","maskConfig","getMaskForType","maskType","applyConfig","nameCounter","ngAfterViewInit","inputEl","child","nativeElement","autofocus","_maskType","detectChanges","ngOnDestroy","exit","writeValue","obj","currentValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","exitType","currentValuePreTrim","getValue","trim","onInput","isChanged","originalValue","escaped","toVm","setValue","onFocus","detach","enteringEdit","onBlur","reattach","editing","formattedValue","toView","getValueInternal","toString","propertyName","environment","version","env","apiRoot","authTracing","mockAuth","enableDeductions","enableMigration","mockServices","mockSpApiOnly","routerTracing","oidcAuthRealm","oidcClientId","oidcRedirectUri","oidcScope","googleAnalyticsKey","googlePlacesApiUrl","googleTagManagerKey","enableSentry","sentryUri","pardotFormHandlerUri","chatConfig","BUTTON_ID","DEPLOYMENT_ID","ORGANIZATION_ID","LIVEAGENT_SCRIPT_URL","CHAT_URL","TRACING","payrollLoginUrl","console","log","hostname","location","port","isE2E","window","search","includes","TaxLocationService","_model__WEBPACK_IMPORTED_MODULE_3__","_core_well_known_routes__WEBPACK_IMPORTED_MODULE_4__","_utils__WEBPACK_IMPORTED_MODULE_5__","_entity_selectors__WEBPACK_IMPORTED_MODULE_7__","EmployeeTaxLocation","create","ee","addresses","home","homeAddressId","find","addr","id","workId","workAddressId","work","eeLink","Employees","isExcludedFromTaxes","isEmployeeTaxExcluded","isHomeAddressVerified","isVerified","geoCode","isWorkAddressVerified","link","isTaxesExcluded","homeAddressName","homeLink","homeState","homeGeoCode","homeSchoolDistrictCode","schoolDistrictCode","homePsdCode","psdCode","workAddressName","workLink","workState","workGeoCode","workSchoolDistrictCode","workPsdCode","employeeType","Contractor","entitySelectors","initializeObservables","addresses$","address","entities$","addrs","a","isRemoved","employees$","employee","ees","employeeTaxLocations$","employeeTaxLocationsByState$","eeInputs","updateAcc","stateName","stateArray","push","employeeTaxStates$","locs","sort","companyLocations$","isHome","companyTaxStates$","tax_rates_service_TaxRatesService","TaxRatesService","cachedTaxRates","getTaxRates","of","core","tax_save_helper_service_TaxSaveHelperService","TaxSaveHelperService","companyTaxService","employeeTaxService","entityCacheDispatcher","saveTaxUrl","getEmployeeSavePack","employeesTaxes","first","allCachedEmployeeTaxes","employeeTaxes","taxes","employeeCachedTaxes","employeeLocation","buildEmployeeSavePack","tag","getCompanyFederalSavePack","companyFederalTaxes","combineLatest","companyTaxes","cachedCompanyFederalTaxes","taxTypeCode","Federal","allCompanyTaxes","mergeAndFlattenAllCompanyTaxes","einMap","buildTaxesEinMap","fein","setEinValues","buildCompanySavePack","getCompanyStateSavePack","companyStateTaxes","cachedCompanyStateTaxes","stateCode","getAllTaxesSavePack","tax_models","allCachedCompanyTaxes","concat","stateTaxes","forEach","t","allEmployeeTaxes","empTaxes","empSavePack","saveTaxPacks","packs","readOnly$","concatMap","saveTaxPacks_","pack","newTaxes","utils","add","updatedTaxes","update","removedTaxes","actuallyRemoved","element","saveEntities","cachedCompanyTaxes","removeTaxes","modifiedTax","getTax","cachedCompanyStateTax","interceptCompanyTaxEdit","uTax","assign","mtsTaxCode","every","upt","cachedEmployeeTaxes","employeeTax","cachedEmployeeTax","interceptEmployeeTaxEdit","newVal","oldVal","appliedForEin","ein","otherTaxes","tax","slice","einVal","dependentTaxes","mainTaxEinMap","behavior","useEINFromCode","dependentTaxEinMap","dependentTax","mainTax","company_tax_service","employee_tax_service","ngrx_data","session_service","tax_collector_service_TaxCollectorService","TaxCollectorService","taxBehaviorService","taxLocationService","taxProviderService","taxRateProviderService","taxSaveHelperService","validationTriggerService","recomputeTaxesSubject","Subject","buildObservable","computeTaxes","triggered","taxes$","tap","next","skip","taxPacks","saveEmployeeTaxes","taxPack","saveCompanyFederalTaxes","saveCompanyStateTaxes","allTaxes$","currentCompanyId$","result","employeeWithLocations","companyLocations","forkJoin","retrieveAllAvailableTaxes","catchError","observeOn","asap","withLatestFrom","apiData","companyTaxStates","taxesToCollect","taxRates","buildEmployeesTaxes","buildCompanyFederalTaxes","unverifiedCompanyStateAddresses","buildCompanyStateTaxes","switchMap","isCompanyPackageLoaded","shareReplay","subscribe","validate","employeesWithLocations","addressPairs","getAllAddressPairs","getAvailableTaxPairs","taxesAddressPairs","verifiedCompanyTaxes","verifiedCompanyAddressTaxes","verifiedEmployeeTaxes","verifiedEmployeeAddressTaxes","unverifiedAddressIds","companyAvailableTaxPairs","verifiedTaxAddressPairs","employeeAvailableTaxPairs","context","empDefaultTaxes","getEmployeeAlwaysAvailableTaxes","emp","empAvailableTaxes","buildEmployeeAvailableTaxes","companyDefaultTaxes","getCompanyAlwaysAvailableTaxes","buildCompanyAvailableTaxes","taxPair","companyAddressPair","defaultTax","addressPairRequest","companyAddress","availableTaxPairs","companyAddressesPairs","some","cl","getUnverifiableTaxPairIds","employeeLocations","employeeAddressesPairs","employeeWithLocation","employeesAvailableTaxPairs","defaultTaxes","employeeAvailableTaxes_1","employeesAvailableTaxes","cachedEmployeesTaxes","employeeAvailableTaxes","eeId","taxesWithBehaviors","orderTaxesFunc","behaviors","toCollectTax","cachedTax","description","isExempt","taxBehavior","tryGetEmployeeTaxBehavior","addressVerified","availableCompanyTaxes","unverifiedCompanyAddressStates","cachedFederalCompanyTaxes","getCompanyFederalTaxes","createCompanyTax","taxRate","r","tryGetCompanyTaxBehavior","allCompanyAddressesVerified","availableTaxes","stateTaxesToCollect","getCompanyStateTaxes","cachedStateCompanyTaxes","employeeLocationsInState","allEmployeeAddressesVerified","unverifiedStateCompanyAddress","employeesLocations","allCompanyStateAddressesVerified","allEmployeeStateAddressesVerified","addressPairsGroup","hasOwnProperty","k","b","priority","taxTypeCodesPriority","displayOrder","availableTax","rateType","isVariableRate","Fixed","Variable","FD","ST","CN","CT","SD","tax_behavior_service","tax_location_service","tax_service","validation_trigger_service","SpRouteReuseStrategy","extendStatics","_angular_router__WEBPACK_IMPORTED_MODULE_0__","__extends","setPrototypeOf","__proto__","Array","p","__","constructor","_super","apply","shouldDetach","route","handle","shouldAttach","retrieve","shouldReuseRoute","future","curr","InputSelectComponent","changed","classNames","onChanged","ngModel","control","markAsTouched","AuthFailedGuard","rxjs_operators__WEBPACK_IMPORTED_MODULE_0__","_core_well_known_routes__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_3__","_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_4__","canDeactivate","component","currentRoute","currentState","nextState","isSignedIn","SignedOut","EmployeeTaxService","_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_0__","_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__","helper","call","CompanyEntityHelperService","_entity_helper_service__WEBPACK_IMPORTED_MODULE_1__","_session_session_service__WEBPACK_IMPORTED_MODULE_2__","entityHelper","currentCompanyId","collectionServiceElementsFactory","currentUserId$","MultiMaskDirective","_multi_mask_helper__WEBPACK_IMPORTED_MODULE_1__","elementRef","onValueChange","maskOptions","format","guideChar","onTouchedCallback","onChangeCallback","maskHelper","hasAttribute","disabledText","dataValue","masks","currentMask","cln","ownerDocument","createElement","className","parentElement","appendChild","maskview","onInputChanged","event","resetMaskState","setNewValue","setMaskMatch","isExactMatch","parsedVal","maskMatch","getClosestMask","prevValue","cval_1","mask_1","ch_1","charAt","isLiteral","m","filledLength","repeat","substring","SsnPipe","text","padStart","EntityDispatcher","ngrx_data__WEBPACK_IMPORTED_MODULE_0__","_entity_entity_metadata__WEBPACK_IMPORTED_MODULE_1__","_session_actions__WEBPACK_IMPORTED_MODULE_2__","_core_services_logger_service__WEBPACK_IMPORTED_MODULE_4__","_ngrx_store__WEBPACK_IMPORTED_MODULE_5__","entityActionFactory","addAccount","collections","action","clearCollections","collectionNames","loadCompanyPackageSuccess","loadCompanyPackageError","loadDocumentPackageSuccess","loadDocumentPackageError","setUserInCache","ADD_ALL","AmountOrPercentValueComponent","isAmountChange","valueChange","setIsAmount","isAmountPropertyName","num","Number","parseFloat","propertyNameValue","company_package_service_CompanyPackageService","CompanyPackageService","busyService","sessionDispatcher","loadCompanyPackageByCompanyId","load$","loadData","finalize","busy$","scrubCompanyPackage","throwError","entity_metadata","JSON","stringify","entity_dispatcher","busy_service","fesm5_http","logger_service","session_dispatcher","session_service_SessionService","SessionService","companyPackageService","entityDispatcher","idGenerator","sessionSelectors","authUser$","currentEmployeeId$","currentCompanyEtag$","entityMap$","distinctUntilChanged","currentEmployee$","loadAccountWhenRegularUserSignsIn","setAccountStateTransitions$","clearCurrentAccount","companyEntityTypes","loadAccountByCompanyUserIds","emsg","_","reloadCurrentCompanyPackage","accountStateTransitions$","defer","accountStateTransitionsCached","response","prev","current","automaticTransition","allowAdminOverride","allowWithErrors","hideInUi","setAccountStatus","getByValue","post","entity_selectors","id_generator_service","session_selectors","ControlWrapComponent","renderer","viewContainer","tClose","ngAfterContentInit","el","classList","openTooltip","now","myRoot_1","root","setTimeout","tooltipDiv","querySelector","openKeypress","charCode","closeTooltip","relatedTarget","localName","isOpeningALink","preventDefault","tooltipButton","closeKeypress","CurrentCompanyEntityCollectionService","_entity_metadata__WEBPACK_IMPORTED_MODULE_3__","_core__WEBPACK_IMPORTED_MODULE_4__","subs","detectMixedCompany","unsubscribe","sink","selectors$","entityMap","source","createId","entity","options","changeSet","change","op","Upsert","upsert","TinCheckService","einLookupInterceptor","isBadFeinNumber","_angular_common_http__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_2__","_environment__WEBPACK_IMPORTED_MODULE_8__","_core_utils__WEBPACK_IMPORTED_MODULE_9__","_logger_service__WEBPACK_IMPORTED_MODULE_11__","__assign","s","i","n","tinCheckUrl","responses","_tinCheckCount","check","legalNameRaw","legalName","cachedResponse","cached","mockEinResponse","sanitizeXmlEntities","tinCheckResponse","toTinCheckResponse","cacheTinCheckResponse","callTinCheckService","cacheKey","params","serviceUnavailable","res","originalNameProvided","matchedName","verified","invalid","serviceResponse","clearCachedResponses","matchStatus","test","isGoodFeinNumber","WindowToken","HouseholdFilerStatusPipe","_app_model__WEBPACK_IMPORTED_MODULE_0__","Single","Joint","nullAutocompleteService","getPlacePredictions","callBack","ViewDocsComponent","esignService","iframeService","esignDone","bind","esignError","viewDocs","envelopeId","getEnvelopeUrl","show","applicationError","getGuidComb","seed","timePart","c","Math","random","YesNoBooleanPipe","SubjectExemptBooleanPipe","BusyService","_angular_core__WEBPACK_IMPORTED_MODULE_8__","busyCounter","busySubject","_message","asObservable","busy","increment","then","decrement","catch","reason","obs","busyWhileTrue$","loadings$","mapped","o","busyLoading$","services","loadings","loading$","busyLoading","msg","isBusyCore","dateToDateStruct","dateValue","inputDate","year","getFullYear","month","getMonth","day","getDate","dateStructToDate","_c","_d","UTC","dateToday","today","toISOString","Saver","SaverFactoryService","_services_logger_service__WEBPACK_IMPORTED_MODULE_5__","save$","save","isArray","NO_SAVE","go","errorHandler","results","TitleService","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__","ngTitle","routerEventsSubscription","events","routerState","firstChild","outlet","setTitle","AddressPipe","_utils_address_utils__WEBPACK_IMPORTED_MODULE_0__","ToastService","_core_e2e_check__WEBPACK_IMPORTED_MODULE_0__","_logger_service__WEBPACK_IMPORTED_MODULE_2__","ngx_toastr__WEBPACK_IMPORTED_MODULE_3__","toastr","openSnackBar","title","timeOut","LoggerService","_app_core_utils__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_2__","entriesSubject$","entries$","optionalParams","nextEntry","debug","warn","entry","join","getEmployeeId","ReviewService","_stats_service__WEBPACK_IMPORTED_MODULE_1__","aboutYouErrors$","bankInfoErrors$","companyInfoErrors$","companyTaxErrors$","employeeSetupErrors$","employeesErrors$","SinglePageStatusGuard","_model__WEBPACK_IMPORTED_MODULE_0__","_account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__","_core__WEBPACK_IMPORTED_MODULE_2__","accountStatusGuardHelper","canActivate","ifAccountStatusAllows$","canActivateChild","okStatuses","qi","SharedModule","EntityHelperService","ngrx_data__WEBPACK_IMPORTED_MODULE_1__","_core_services_id_generator_service__WEBPACK_IMPORTED_MODULE_2__","_ngrx_store__WEBPACK_IMPORTED_MODULE_4__","SESSION_STATE","sessionReducer","initialState","companyPackageLoaded","companyPackageLoading","currentCompanyEtag","currentEmployeeId","currentUserId","payload","split","normalizeId","MaskHelper","curmask","matchResult","matchesMask","isMatch","parsedValue","isMaskApplicable","char","isCharValid","validateCharOnPosition","parsedChar","inputChar","position","maskKey","RegExp","toLowerCase","ch","OidcTokenService","rxjs_ajax__WEBPACK_IMPORTED_MODULE_1__","_environment__WEBPACK_IMPORTED_MODULE_7__","signupTokenKey","clearSignupToken","caller","sessionStorage","getItem","removeItem","getSignupToken","parse","getAccessTokenFromIdentityServer","password","result$","grant_type","scope","client_id","username","email","sub","oidcSub","body","fromObject","headers","Content-Type","tokenRequest","method","crossDomain","postWithRxjsAjax","tokenResponse","setSignupToken","toke","setItem","./en-ca","./en-ca.js","webpackContext","req","webpackContextResolve","resolve","module","exports","getFilerName","hhf","primary","primaryFirstName","primaryLastName","spouseFirstName","spouseLastName","getHouseholdFilerDisplayVm","filingStatus","primaryName","primarySsn","spouseName","spouseSsn","WellKnownRoutes","isWellKnownRoute","WellKnownRoutes_entries","path","startsWith","AddressFormComponent","_utils__WEBPACK_IMPORTED_MODULE_6__","emptyAddress","street1","street2","city","zip","country","addressFinder","addressValidationService","geolocationService","failedValidation","confirmed","stateCodes","codes","isLookingUpAddresses","hadAttemptedAddressLookup","optionalColumns","county","jurisdiction","schoolDistrict","validateAddressSubject","cleanAddr","geolocate","subscribeAutocomplete","cacheAddress","validateAddress$","resetGeoValidStatus","validateAddress","suggestedAddresses","validation","handleAddressValidation","inline","hasSuggestion","disableBrowserAutocomplete","streetElement","addressChanges$","getAutocompleteAddress","addressPicked","onStreetOneBlur","validateIfChanged","onStateChanged","isCurrentAddressComplete","updateAddress","confirmAddress","pickedAddress","destroyed","geoCodeTouched","hasValidGeoCode","pickAddresses","hasAddressChanged","cachedAddress","localeCompare","addrValidation","addressLine1","addressLine2","schoolDistrictName","ifMultipleChoices","property","choice","TaxBehaviorService","_tax_models__WEBPACK_IMPORTED_MODULE_1__","TaxSelectorType","exceptions","isForEmployee","isForCompany","selectorType","Code","selectorValue","overwriteBehavior","hasExemption","shouldShow","hasWithholding","hasExemptionReason","requireUserInput","dontCollect","categoryDescription","filingStatuses","isEmployee","taxFormats","regEx","getBaseBehavior","applyCompanyRules","applyExceptions","shouldShowCompanyTax","doesCompanyTaxRequireInput","employeeTaxLocation","applyEmployeeRules","shouldShowEmployeeTax","doesEmployeeTaxRequireInput","hasEin","hasRate","hasFilingStatus","hasLowIncomeExempt","hasUbi","hasBusinessStartDate","taxEinFormats","rate","categoryCode","currentBehavior","isCompanyTax","isEmployeeTax","canCollect","applyException","theTax","theBehavior","theException","overwriteTax","exception","Description","CategoryDescription","AddressModalComponent","addressService","taxCollectorService","modalService","modalTitle","newAddr","addrMap","existing","savedAddr","deleteConfirmation","addOrEditAddress","existingAddress","isReadOnly","openAddressModal","removeAddress","removeAddressContent","canSave","hasSomeValue","editAddressContent","backdrop","getTrimmedNameParts","firstName","lastName","getFullName","hasName","EarningService","_environment__WEBPACK_IMPORTED_MODULE_6__","_angular_core__WEBPACK_IMPORTED_MODULE_7__","_entity_helper_service__WEBPACK_IMPORTED_MODULE_8__","_angular_common_http__WEBPACK_IMPORTED_MODULE_9__","_core_services_logger_service__WEBPACK_IMPORTED_MODULE_10__","earningsUrl","elements","loaded$","earnings$","earnings","newEarnings","dispatcher","addAllToCache","setLoaded","clearCache","CompanyService","_model__WEBPACK_IMPORTED_MODULE_2__","_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_6__","_session_session_service__WEBPACK_IMPORTED_MODULE_7__","newCompany","detectLegalNameChangeAfterVerify","feinStatus","Verified","legalNameVerified","unverifyFein","setIds","Unverified","legalNameVerificationSkipReason","createCompanyEvent","eventType","DatePickerPopupComponent","_core_utils__WEBPACK_IMPORTED_MODULE_1__","newValue","dateStruct","onValueChanged","changedDate","InputDateComponent","_date_util__WEBPACK_IMPORTED_MODULE_1__","flatpickr__WEBPACK_IMPORTED_MODULE_2__","flatpickr__WEBPACK_IMPORTED_MODULE_2___default","picker","allowedKeys","datePickerOptions","dateFormat","defaultDate","toDateType","minDate","maxDate","onChangePicker","refPicker","inputPicker","_angularComponent","openPicker","filterKeys","it","modelValue","toISOChicago","isValidDate","cleanField","setDate","getRenderValue","dateToUsLocale","selectedDates","dateStr","instance","date","date_range_pay_period_vm_DateRangePayPeriodvm","DateRangePayPeriodvm","_selectedFrequency","frequency","_toDate","_fromDate","_checkDate","_secondFromDate","_secondToDate","_secondCheckDate","isValidNgbDate","daysOffset","selectedFrequency","BiWeekly","Weekly","tDate","getQuarterlyStartDateFromEndDate","tempDate","app_core","daysInMonth","setMonth","getQuarterlyEndDateFromStartDate","setFromDateWithSync","SemiMonthly","Monthly","Quarterly","frequencyPeriodOffset","ng_bootstrap","setToDateWithSync","secondFromDate","date_range_pay_period_component_DateRangePayPeriodComponent","DateRangePayPeriodComponent","calendar","formatDate","_status","PeriodStart","_showFirstPeriodQuestion","_showFirstCheckQuestion","_showSecondPeriodQuestion","_showSecondCheckQuestion","navigationType","currentDate","minimumStartDate","maximumEndDate","dateRangevm","disabledCheckDateRule","getWeekday","before","minimumCheckDate","after","disablePeriodDateRule","scheduleDates","companyDates","firstPeriodEndOfMonth","firstCheckEndOfMonth","secondPeriodEndOfMonth","secondCheckEndOfMonth","updateScheduleDates","_holidaysTime","dateArray","x","findFirstAllowedCheckDate","Check","checkValidationRules","Disabled","disableAll","periodValidationRules","fromDate","periodStartDate","toDate","periodEndDate","checkDate","secondPeriodStartDate","secondToDate","secondPeriodEndDate","secondCheckDate","Annual","markDisabled","standardizedDate","markControlAsTouched","controlName","updateValueAndValidity","onDateSelection","IsFrequencyMonthly","updatePeriodEOM","PeriodEnd","onCheckDateChange","getEndOfMonthStatus","IsFrequencyQuarterly","endOfMonthStatus","showFirstPeriodQuestion","updatePeriodDatesBasedOnEOM","getMonthOffsetByFrequency","monthOffset","isEndOfMonth","endDate","firstDayOfMonth","onPeriodStartChange","onPeriodEndChange","showFirstCheckQuestion","onSecondPeriodEndChange","showSecondPeriodQuestion","getFirstPeriodStartFromSecondEndDate","onSecondPeriodEndOfMonthChange","daysInPrevMonth","onSecondCheckDateChange","showSecondCheckQuestion","onPeriodEndOfMonthChange","IsFrequencySemiMonthly","onEndOfMonthChange","isCheckDate","equals","isHovered","hoveredDate","isInside","isRange","EsignService","_environment__WEBPACK_IMPORTED_MODULE_1__","_angular_common_http__WEBPACK_IMPORTED_MODULE_3__","_busy_service__WEBPACK_IMPORTED_MODULE_4__","postEnvelope","signers","appUrl","origin","markEnvelopesSigned","MonthNumEnum","getFirstAllowedCheckDate","holidaysDateTime","businessDays","utcDate","getTimezoneOffset","centralTimeDate","moment_timezone","tz","isDST","getDay","getHours","getNgbDate","getFirstDayOfMonth","getDaysInMonth","getDateFromNgb","getMoment","ngbObj","newMoment","ngbDateToString","date_util","getNgbDateFromString","ngbDate","determineEndOfMonthStatus","lastDayOfCurrentMonth","determineEndOfQuarterStatus","dayOfMonth","March","December","June","September","areDifferent","newObject","oldObject","dictionaryToArray","dict","lowerCamelCase","upperCamelCase","toUpperCase","titleCase","$0","$1","$2","raw","objWithProtoType","validLegalNameCharSet","sanitizeLegalName","parseUrlParams","kv","getCookies","exclude","document","cookie","changeItemFactory","ChangeItemFactory","entities","Add","delete","entitiesOrIds","ids","Delete","updates","Update","isPromise","SubSink","_subs","subscriptions","subscription","address_utils","date_utils","ee_utils","AccountDetailsModule","SET_AUTH_USER","SET_CURRENT_ACCOUNT","SET_CURRENT_COMPANY_ETAG","SET_CURRENT_EMPLOYEE_ID","SET_COMPANY_PACKAGE_LOADED","SET_COMPANY_PACKAGE_LOADING","SET_READ_ONLY","LoadCompanyPackageError","SetAuthUser","SetCompanyEtag","SetCompanyPackageLoaded","SetCompanyPackageLoading","SetCurrentAccount","SetCurrentEmployeeId","SetReadOnly","PageLeaveGuard","_angular_core__WEBPACK_IMPORTED_MODULE_5__","_store_session_session_service__WEBPACK_IMPORTED_MODULE_6__","canLeaveAfterSave","OidcSignupUser","signupUserState","access_token","created","expires_in","expires_at","floor","token_type","auth_data_service_AuthDataService","AuthDataService","getAuthUser","oidcUser","getAuthUserFromServer","profile","quser","preferred_username","given_name","family_name","phone","phone_number","bcl","leadInfo","getLeadInfo","callPardotFormHandler","lead","name_1","match","ln","repairUser","newError","pardotVisitorId","pardotVisitorHandler","formData","FormData","append","promoCampaignId","priceCampaignId","partnerCode","shortCode","empty","cms_profile","leadid","pardotvisitorid","partnercode","shortcode","promocampaignid","pricecampaignid","remains","getOwnPropertySymbols","__rest","info","guid_fns","leadId","parameters","getPardotVisitorIdFromCookie","auth_service_AuthService","doNotRememberUrls","well_known_routes","AuthFailed","serviceName","AuthService","authDataService","mgrFactory","oidcTokenService","errorsSubject","BehaviorSubject","oidcUserSubject","ReplaySubject","errors$","reroutePathKey","eventsSubject","events$","oidcManager","initialize","clearStaleState","oidcUser$","expired","getAuthUserFromOidcUser","accessToken$","userRole","Administrator","signinRedirectCallback","getReroute","onAuthError","clearReroute","q","execute","signinRedirect","extraQueryParams","sendto","cms","never","navigateOnNextAuthUser","navigateAfterSignIn","pathname","hasSignInState","getUser","href","matches","localStorage","hide","signoutRedirect","authFailed","routeUrl","Admin","navigateByUrl","operationName","promise","from","getOidcUser","oidc_manager_factory","oidc_token_service","fesm5_router","iframe_service","BrowserGeolocationService","currentPositionSubject","currentPosition$","navigator","geolocation","getCurrentPosition","@app/abandoned/abandoned.module.ngfactory","@app/about-you/about-you.module.ngfactory","@app/account-view/account-view.module.ngfactory","@app/admin-console/admin-console.module.ngfactory","@app/company-bank-info/company-bank-info.module.ngfactory","@app/company-info/company-info.module.ngfactory","@app/company-tax-info/company-tax-info.module.ngfactory","@app/dashboard/dashboard.module.ngfactory","@app/deductions/company/company-deductions.module.ngfactory","@app/deductions/employee/employee-deductions.module.ngfactory","@app/documents/documents.module.ngfactory","@app/earnings/earnings.module.ngfactory","@app/employees/employees.module.ngfactory","@app/enrolled/enrolled.module.ngfactory","@app/processing/processing.module.ngfactory","@app/review/review.module.ngfactory","webpackAsyncContext","Promise","all","Codes","item","getByDisplayName","getDisplayName","Validator","AsyncValidator","ValidationError","validator","getErrorMessage","ctx","formatMessage","messageTemplate","template","p1","getPropertyValue","genericErrorMessage","propertyPath","ValidatorBase","getKey","getValidatorFunctionContext","validatorName","validatorFn","genError","AdminConsoleGuard","_core__WEBPACK_IMPORTED_MODULE_3__","_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_5__","_angular_router__WEBPACK_IMPORTED_MODULE_6__","canActivate$","AddressFinderService","loadLibrary","StateNamePipe","_model_codes_enums__WEBPACK_IMPORTED_MODULE_0__","sortByName","sortByFirstLast","ValidationTriggerService","_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_4__","triggerValidationsSubject","triggerValidations$","entityInfos$","saver","RadioGroupValueAccessorDirective","RadioGroupComponent","syncUiState","cleanUp","radioButtons","rb","sub1","v","valueChanged","splice","selectedValue","AccordionComponent","_expanded","expandedChange","toggle","expanded","DateUtil","maxValueMonth","parsed","parseDate","validMaxDayInMonth","isValidCalendarDate","renderAsUSLocale","pad","usDateTxt","dateVal","CompanyTaxService","_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_1__","_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_4__","federalTaxes$","stateTaxes$","State","stateAndLocalTaxes$","ChatService","_environment__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_3__","rxjs__WEBPACK_IMPORTED_MODULE_4__","rxjs_operators__WEBPACK_IMPORTED_MODULE_8__","chatInstalled","chatAgentSubject","chatAgent$","chatAgentLoaded$","loadChatLibrary","currentUser","firstUser","agent","init","addCustomDetail","complete","liveagentScriptUrl","ref","getElementsByTagName","script","src","parentNode","insertBefore","tick","liveagent","SessionSelectors","_ngrx_store__WEBPACK_IMPORTED_MODULE_0__","_model__WEBPACK_IMPORTED_MODULE_1__","_reducer__WEBPACK_IMPORTED_MODULE_2__","selectSessionState","selectAuthUser","selectCompanyPackageLoaded","selectCompanyPackageLoading","selectCurrentCompanyEtag","selectCurrentCompanyId","selectCurrentEmployeeId","selectCurrentUserId","selectIsAdmin","selectIsSignedIn","selectReadOnly","session$","select","StatsService","rxjs_operators__WEBPACK_IMPORTED_MODULE_9__","_model__WEBPACK_IMPORTED_MODULE_10__","_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_11__","_core_well_known_routes__WEBPACK_IMPORTED_MODULE_12__","_angular_core__WEBPACK_IMPORTED_MODULE_13__","_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_14__","_validation_validation_service__WEBPACK_IMPORTED_MODULE_15__","_entity_selectors__WEBPACK_IMPORTED_MODULE_16__","_session_session_service__WEBPACK_IMPORTED_MODULE_17__","_core_services_logger_service__WEBPACK_IMPORTED_MODULE_18__","validationService","trackedRoutes","AboutYou","CompanyInfo","CompanyTaxInfo","BankAccount","Review","statsCollection","getValidationErrors","dt","aboutYouLastDate","aboutYouStartDate","companyInfoLastDate","companyInfoStartDate","employeesLastDate","employeesStartDate","companyTaxInfoLastDate","companyTaxInfoStartDate","companyBankAccountLastDate","companyBankAccountStartDate","reviewLastDate","reviewStartDate","companyInfoStatus","employeesStatus","companyTaxInfoStatus","companyBankAccountStatus","err","validationErrors$","validateEntityCache","validationErrors","errors","ves","ve","calcSectionStatus","isActiveEEHomeAddressError","addrId_1","startDate","EntitySelectors","ngrx_data__WEBPACK_IMPORTED_MODULE_3__","entitySelectorsFactory","entitySelectors$Factory","collectionSelectors","entityCache$","entityCacheActive$","toActiveCache","toEntityInfos","getSelectors$","collectionName","register","employeeHelpers","entityCache","eeMap","removedEEs","removedHomeAddrs","entityTypes","activeCache","entityType","isMutated","eid","removed","entityInfos","ei","RenderType_ContactCustomerSupportComponent","View_ContactCustomerSupportComponent_0","encapsulation","styles","_l","_ck","_v","linkText","DocumentsListComponent","documentsViewService","download","doc","downloadLink","filename","getDocPdf","file","msSaveOrOpenBlob","addEventListener","click","removeEventListener","blobUrl","URL","createObjectURL","revokeObjectURL","addressToString","_e","isComplete","formatZip","zipFirstDigits","OidcManagerFactory","oidc_client__WEBPACK_IMPORTED_MODULE_0__","_oidc_manager_config__WEBPACK_IMPORTED_MODULE_1__","buildTaxBehavior","EMPTY_TAXES","PhonePipe","missingValue","padEnd","max","min","core_module_CoreModule","parentModule","titleService","moduleName","throwIfAlreadyLoaded","account_view_guard","admin_console_guard","auth_failed_guard","data_entry_page_guard","page_leave_guard","single_page_status_guard","NavBottomComponent","_core_well_known_routes__WEBPACK_IMPORTED_MODULE_0__","dashboardRoute","defaultRoute","disableBack","disableNext","disableReturnTo","returnTo","returnToLabel","back","backLabel","nextLabel","GooglePlacesService","_geolocation_service__WEBPACK_IMPORTED_MODULE_4__","_interfaces__WEBPACK_IMPORTED_MODULE_5__","googleMapsInstalled","isChrome","chrome","app","csi","_autocompleteService","setAutocompleteService","getGoogleMapsService","google","maps","ac","getAutocompletePlace","autocompleteService","componentRestrictions","types","toAddress","observer","autocomplete","places","Autocomplete","addListener","place","getPlace","geoSubscription","circle","Circle","center","lat","coords","latitude","lng","longitude","radius","accuracy","setBounds","getBounds","clearInstanceListeners","AutocompleteService","okStatus","PlacesServiceStatus","OK","getAutocompletePredictions","callback","predictions","apiUrl","setAttribute","address_components","parts","part","long_name","short_name","CompanyKindPipe","VALIDATION_ENTITY_METADATA","VALIDATOR_FACTORY","ValidationService","rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_9__","_validation_metadata__WEBPACK_IMPORTED_MODULE_10__","_validation_trigger_service__WEBPACK_IMPORTED_MODULE_11__","validationMetadata","factories","modelValidated","metadata","validateModel","async","predicate","modelValidationMetadata","getModelConfig","modelValidators","filterValidators","validators","modelValidator","isClient","isServer","evalCondition","getValidator","properties","propertyMetadata","propertyValidators","propertyValidator","asyncErrors","asyncResult","syncValidations","validateEntities","asyncValidations","conditionalEntities","entityInfo","modelMetadata","BankRoutingNumberService","_angular_common_http__WEBPACK_IMPORTED_MODULE_6__","_logger_service__WEBPACK_IMPORTED_MODULE_7__","cache","getBankName","routingNumber","errorOk","jsonp","DataEntryPageGuard","RenderType_InputTextComponent","View_InputTextComponent_0","_angular_common__WEBPACK_IMPORTED_MODULE_1__","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","_validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_3__","_store_validation_validation_service__WEBPACK_IMPORTED_MODULE_4__","angular2_text_mask__WEBPACK_IMPORTED_MODULE_5__","View_InputTextComponent_2","en","$event","ad","_co","View_InputTextComponent_3","View_InputTextComponent_1","ngIf","label","View_InputTextComponent_4","prepend","View_InputTextComponent_5","_handleInput","target","_compositionStart","_compositionEnd","ngStyle","font-family","p0_0","textMaskConfig","p1_0","spValidationStatus","spValidationFeedback","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","IframeService","receiveMessage","closeCallback","scrollTo","iframe","getElementById","style","display","overflow","contentWindow","iframeEvent","CompanyEntityBase","address_Address","isMain","createNewCompanyAddress","createNewEmployeeAddress","company_tax_extends","isActive","company_ancillary_extends","company_earning_extends","earningCode","company_deduction_extends","deductionCodeTypeId","abbreviation","defaultAbbreviation","defaultDescription","deductionPlanTaxOptionCode","company_extends","company_Company","codes_enums","isHousehold","doneAddingEmployees","bankName","enrollmentStartDate","feinValidationCount","isAgricultural","showEarningsTab","companyKind","WellKnownDeductionsCodeTypeId","deductionIsCustomType","DeductionPlanType","DeductionPlanMatchOptionType","RetirementPlans","RetirementPlanTypes","RetirementPlanApply","MatchTypes","EmployeeContributionModel","EarningsCategory","DeductionKeyValue","goal","employee_payment_method_extends","defaultAccountRn","defaultAccountBankName","defaultAccountNumber","defaultAccountName","split1AccountType","split1AccountRn","split1AccountBankName","split1AccountNumber","split1AccountName","split1Value","split1IsActive","split2AccountType","split2AccountRn","split2AccountBankName","split2AccountNumber","split2AccountName","split2Value","split2IsActive","employee_tax_extends","withholdingAllowance","extraWithholding","employee_extends","employee_Employee","canContact","isNewHire","isTerminated","hireDate","birthDate","sex","payType","payRate","overtimeRate","payFrequency","ssn","Terminated","NewHire","Active","household_filers_extends","household_filers_HouseholdFilers","primaryHasName","spouseHasName","stats_extends","FormDirective","ValidationStatusDirective","ValidationFeedbackDirective","ValidatePropertyDirective","AsyncValidatePropertyDirective","rxjs__WEBPACK_IMPORTED_MODULE_5__","rxjs__WEBPACK_IMPORTED_MODULE_6__","rxjs_operators__WEBPACK_IMPORTED_MODULE_10__","rxjs_operators__WEBPACK_IMPORTED_MODULE_11__","rxjs_operators__WEBPACK_IMPORTED_MODULE_12__","_core__WEBPACK_IMPORTED_MODULE_13__","changesSubject","controls","controls$","invalid$","buildStatusObservable","isInvalid","valid$","_spForceFeedback","forceValidationFeedback","changes$","getParamsFromRoot","change$","spForceFeedback","param","addControl","dir","removeControl","pending","pristine","dirty","touched","untouched","parent","valid","statusChanges","form","validClass","invalidClass","touched$","showFeedback","addClass","removeClass","_spTouched$","innerText","innerHTML","getValidationFeedback","feedback","modelAsString","lastModel","registerOnValidatorChange","getAsyncProperties","toErrorMap","lastPropertyValue","InputMaskCatalog","text_mask_addons_dist_textMaskAddons__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_2__","datePipe","decimalPipe","maskPresets","registerCurrencyMasks","registerMaskType","defaultToView","integerToVm","prefix","suffix","allowDecimal","includeThousandsSeparator","viewVal","parseInt","placeholderChar","withholdingAllowanceMask","showMask","decimalLimit","vmVal","dashedNumberToVm","keepCharPositions","baseMask","regMask","cv","inputText","guide","rawValue","ContactCustomerSupportComponent","RadioButtonComponent","isSelected","hasFocus","_selectedValue","calcIsSelected","_value","enforceStyle","styleName","active","remove","DocumentPackageService","_model__WEBPACK_IMPORTED_MODULE_7__","_angular_core__WEBPACK_IMPORTED_MODULE_9__","_entity_dispatcher__WEBPACK_IMPORTED_MODULE_10__","_entity_selectors__WEBPACK_IMPORTED_MODULE_11__","_angular_common_http__WEBPACK_IMPORTED_MODULE_12__","_session_session_service__WEBPACK_IMPORTED_MODULE_13__","documentPackage$","envelope","envelopeSigner","loadDocumentPackage","loadSignedEnvelopeId","userSigner","es","isEmbedded","completed","eSignEnvelopeId","AccountViewGuard","_account_status_guard_helper__WEBPACK_IMPORTED_MODULE_2__","TaxService","rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__","_environment__WEBPACK_IMPORTED_MODULE_4__","_busy_service__WEBPACK_IMPORTED_MODULE_7__","_logger_service__WEBPACK_IMPORTED_MODULE_8__","taxApiUrl","validateAddresses","homeAddress","workAddress","pairs","liveAddress","loadData$","homeDsCode","workDsCode","pair","AppDevModule","app_component_AppComponent","AppComponent","animationsDisabled","qa","fromString","disableAnimations","prepareRoute","activatedRouteData","disable","Db","CompanyVersion","jwt_service_JwtService","JwtService","header","alg","typ","base64url","encodedSource","CryptoJS","enc","Base64","createJwt","encodedData","encode","encodedHeader","signature","HmacSHA256","toUtf8","Utf8","createOkResponse$","createResponse$","angular_in_memory_web_api","createBadRequestResponse$","BAD_REQUEST","requestInfo","statusText","addCompanyEtagResponseHeader","db","createCompanyEtag","weakEtag","Etag","getSubFromRequest","authHeader","parsedToken","base64","atob","guardCompanyChange","existingCompany","status_1","newEcAccountUrl","newSpAccountUrl","subPrefix","concurrency_http_interceptor_ConcurrencyHttpInterceptor","ConcurrencyHttpInterceptor","companyService","intercept","requiresConcurrencyControl","handleConcurrencyRequest","Response","etagHeaderValue","clone","setHeaders","If-Match","res$","handleConcurrencyResponse","gotoConcurrencyFailure","ro","ConcurrencyFailure","http_server_concurrency_interceptor_HttpServerConcurrencyInterceptor","HttpServerConcurrencyInterceptor","inMemDataService","config","xhrFactory","handleRequest_","reqCore","revertCompanyVersion","precondition","createErrorResponse$","NaN","parseCompanyEtag","requestVersion","currentVersion","newVersion","newEtag","http_client_backend_service_sp_extends","noSavedMockDb","clearSavedMockDb","mockDbKey","http_client_backend_service_sp_HttpClientBackendServiceSp","HttpClientBackendServiceSp","getDbFromLocalStorage","saveDbToLocalStorage","httpClientInMemBackendServiceFactory","dbService","mock_signin_component_MockSigninComponent","MockSigninComponent","inMemoryDataService","mgrfactory","disableClearMockDb","showTestAccounts","mockOidcManager","proxy","useMock","vm","resetMockedData","createInitialMockDb","doSignin","toggleShowTestAccounts","in_mem_gen_extra_accounts_assign","companyTemplate","companyType","payrollFrequency","householdFilersTemplate","statsTemplate","userTemplate","accountStateTransitions","in_mem_account_service_assign","in_mem_account_service_InMemAccountService","InMemAccountService","getRequest","endsWith","postRequest","createNewAccount","ifSetAccountStatusReq","reqInfo","householdFilers","NO_CONTENT","createNoContentResponse$","u","username_1","errOptions_1","NOT_FOUND","setStatusReq","replyOptions_1","companyId_1","companyIx","findIndex","in_mem_address_validator_service_InMemAddressValidatorService","InMemAddressValidatorService","getAddressesList","in_mem_admin_service_InMemAdminService","InMemAdminService","getAccountList","rows","co","dbaName","query","has","text_1","orderBy_1","x_1","valueOf","count","pageNumber","pageSize","start","in_mem_company_package_service_InMemCompanyPackageService","InMemCompanyPackageService","getCompanyPackage","subEnding","pop","getCurrentUserIdFromRequest","companyDeduction","companyEarning","employeePaymentMethod","errOptions_2","collection","getDocumentPackage","errOptions_3","deductionModel","cpdCode","baseAccm","codeGroupId","codeGroup","codeType","hasPercent","retireAddon","hasGoal","employerOnly","primaryType","isSure401K","isCatchUp","deductionPlanMatchOptionCode","deductionPlanCode","planName","planDescription","codeTypeDesc","taxDed","howType","dedRptSw","inNet","checkPrnSw","isDisplayed","oneTimeDeduction","isEmployerDisplayed","deductionPlanGroupCode","deductionPlanGroup","parameterName","defaultDedRate","defaultHowType","deductionGroups","htmlDescription","isConverted","buildDeductionParameter","codeTextDescription","taxDeduction","defaultDeductionRate","in_mem_deduction_service_InMemDeductionService","InMemDeductionService","deductionMetadata","getDeductionTypeList","Set","dCodeId","paramRows","f","htmlDefinition","definition","canChangeAbbreviation","canChangeDescription","planCode","PRETAX","POSTTAX","NOEEDEDUCT","toDeductionPlanType","TWOTIER","NONELECTIV","NOORSINGLE","SNGLORTWO","NOMATCH","toDeductionPlanMatchOptionType","earningModel","shortDescription","earningsCategory","earningsGroupId","earningTypeId","earningTypeName","earningTaxTypeId","earningTaxType","in_mem_earning_service_InMemEarningService","InMemEarningService","earningMetadata","getAdditionalEarnings","in_mem_ein_service_InMemEinService","InMemEinService","tinCheck$","originalRequest","tin_check_service","tinCheckValidate","in_mem_esign_service_InMemEsignService","InMemEsignService","getEsignUrl","postEsignSend","sent","createdDate","statusDate","isWetSign","sig","old","postMarkEnvelopesCompleted","delivered","draft","local","canComplete","in_mem_enrollment_service_InMemEnrollmentService","InMemEnrollmentService","sucess","in_mem_identity_service_assign","tokenPrototype","nbf","exp","iss","aud","auth_time","idp","role","permission","amr","in_mem_identity_service_InMemIdentityService","InMemIdentityService","jwtService","reqBody","keyValuePairs","json","len","tmp","decodeURIComponent","decodeFormUrlBody","getMockToken","in_mem_save_entities_utils_assign","saveCompanyChangeSet","actionName","crudCounts","validateCrudCounts","sourceDb","coId_1","existingCo","coId","saveCompanyEntitiesGuard","saveCompanyEntities","saveCompanyEarningChangeSet","saveCompanyDeductionChangeSet","saveEmployeeDeductionChangeSet","saveEmployeeChangeSet","employeePay","errs","saveEmployeeEntitiesGuard","saveEmployeeEntities","changedDb","adds","ids_1","updates_1","up","upserts_1","found_1","updated","added","mutate","entityNames","cc","crudCount","cs","in_mem_save_entities_service_InMemSaveEntitiesService","InMemSaveEntitiesService","saveActions","saveEmployeeRemoved","saveAction","in_mem_tax_service_InMemTaxService","InMemTaxService","workGeoCodes","getTaxList","addSet","useUBIFromCodeAsEIN","canBeExempt","taxData","in_mem_tax_rate_service_InMemTaxRateService","InMemTaxRateService","suiRates","in_mem_tax_rate_service_holidays","allowSubjectRateZero","minAllowedRate","maxAllowedRate","newEmployerMin","newEmployerMax","detailsLink","in_mem_surepayroll_service_InMemSurepayrollService","InMemSurepayrollService","validateUsername$","passwordPolicy","createNewCompany","validateUsername","bclCode","ix","userKey","CONFLICT","in_memory_data_service_assign","in_memory_data_service_InMemoryDataService","InMemoryDataService","inMemAccountService","inMemAddressValidatorService","inMemAdminService","inMemCompanyPackageService","inMemDeductionService","inMemEarningService","inMemEinService","inMemEsignService","inMemEnrollmentService","inMemIdentityService","inMemSaveEntitiesService","inMemTaxService","inMemTaxRateService","inMemSurepayrollService","maxId","createInitialEmptyDb","createResourceNameMap","createDb","getJsonBody","clear","ajax","rawDb","counter","startDt","toUTCString","hf","genExtraAccounts","resourceNameMap","genId","mapCollectionName","parseRequestUrl","tweakUrl","matched","mapSpApiUrl","getMockSpApiOnly","getMocked","errOptions","FORBIDDEN","errorOnGetCollection","postMockSpApiOnly","postMocked","put","RenderType_MockSigninComponent","animation","definitions","height","opacity","overflow-y","offset","expr","timings","View_MockSigninComponent_1","success","View_MockSigninComponent_2","View_MockSigninComponent_3","View_MockSigninComponent_0","onClick","button","ctrlKey","metaKey","shiftKey","common","routerLink","onSubmit","onReset","fesm5_forms","ngSubmit","validate_property_directive","input_text_component_ngfactory","required","input_text_component","input_mask_catalog","model_component","MockSigninComponentNgFactory","auth_service","TermsComponent","RenderType_TermsComponent","View_TermsComponent_0","TermsComponentNgFactory","failed_component_FailedComponent","FailedComponent","navigationId","RenderType_FailedComponent","View_FailedComponent_0","contact_cust_support_component_ngfactory","contact_cust_support_component","FailedComponentNgFactory","concurrency_failure_component_ConcurrencyFailureComponent","ConcurrencyFailureComponent","refresh","history","RenderType_ConcurrencyFailureComponent","View_ConcurrencyFailureComponent_0","ConcurrencyFailureComponentNgFactory","AuthFailedComponent","RenderType_AuthFailedComponent","View_AuthFailedComponent_1","View_AuthFailedComponent_0","AuthFailedComponentNgFactory","OidcCallbackComponent","RenderType_OidcCallbackComponent","View_OidcCallbackComponent_0","OidcCallbackComponentNgFactory","SignedOutComponent","RenderType_SignedOutComponent","View_SignedOutComponent_0","SignedOutComponentNgFactory","UnauthorizedComponent","RenderType_UnauthorizedComponent","View_UnauthorizedComponent_0","UnauthorizedComponentNgFactory","stepper_component_assign","stepper_component_StepperComponent","StepperComponent","dashboardViewService","showStepper","sourceSteps","cssClass","steps","step","RenderType_StepperComponent","View_StepperComponent_3","klass","ngClass","$implicit","View_StepperComponent_4","View_StepperComponent_2","ngIfElse","View_StepperComponent_1","ngForOf","View_StepperComponent_0","toolbar_component_ToolbarVm","accountDetailsRoute","AccountView","adminConsoleRoute","showAccountDetailsLink","showDashboard","showEditToggle","toolbar_component_ToolbarComponent","ToolbarComponent","documentPackageService","currUser","startWith","thisArg","generator","currentReadOnly","successCallback","refreshUrl","y","g","trys","ops","verb","throw","return","Symbol","iterator","TypeError","done","__generator","reload","P","reject","fulfilled","rejected","toggleEdit","versionClicked","evt","RenderType_ToolbarComponent","View_ToolbarComponent_3","routerLinkActive","links","linksWithHrefs","View_ToolbarComponent_4","View_ToolbarComponent_5","View_ToolbarComponent_2","View_ToolbarComponent_1","dashboard_view_service","company_service","View_ToolbarComponent_0","SpinnerComponent","visible$","isBusy","spinning$","isDelayBusy","RenderType_SpinnerComponent","View_SpinnerComponent_1","View_SpinnerComponent_0","chatButtonId","ChatComponent","chatService","chatAgent","_laq","showWhenOnline","onlineEl","showWhenOffline","offlineEl","chatIconClicked","startChat","RenderType_ChatComponent","View_ChatComponent_0","RenderType_AppComponent","selector","optional","top","left","width","View_AppComponent_0","document_package_service","chat_service","AnalyticsEventType","AppComponentNgFactory","ANALYTICS_EVENT_PROVIDER","ANALYTICS_EVENT_RECEIVER","MAX_EVENTS_BUFFER","analytics_service_AnalyticsService","AnalyticsService","eventProviders","eventConsumers","loggerService","provider","consumer","router_navigation_analytics_provider_RouterAnalyticsNavigationProvider","tslib_es6","Navigate","urlAfterRedirects","tagInstalled","google_tagmanager_receiver_GoogleTagManagerReceiver","GoogleTagManagerReceiver","TagManagerKey","dataLayer","google_tagmanager_receiver_generator","toPromise","ev","BeginAction","EndAction","Exception","interval","skipWhile","take","whiteListUrls","busy_http_interceptor_BusyHttpInterceptor","BusyHttpInterceptor","request","w","read_only_http_interceptor_ReadOnlyHttpInterceptor","ReadOnlyHttpInterceptor","AcceptJsonOnlyHttpInterceptor","QueuedRequestReleaseType","queued_request_http_interceptor_QueuedRequest","QueuedRequest","requestObservable","signal","wasReleased","request$","Ok","errResponse","release","queued_request_http_interceptor_QueuedRequestHttpInterceptor","QueuedRequestHttpInterceptor","requestQueue","Cancel","requiresQueuing","queueRequest","createQueuedRequestObservable","inflight","errMessage","shift","auth_http_interceptor_AuthHttpInterceptor","AuthHttpInterceptor","withCredentials","accessToken","Authorization","authFailRoute","authResHeader","sp_entity_collection_dataservice_extends","sp_entity_collection_dataservice_SpEntityCollectionDataService","SpEntityCollectionDataService","httpUrlGenerator","getById","SpEntityCollectionDataServiceFactory","registerHttpResourceUrls","entityHttpResourceUrls","filter_dateformat_extends","padNumber","isNumber","toInteger","DateParserFormatter","yearAddition","separator","dayIndex","monthIndex","yearIndex","dateParts","parsedYear","parsedMonth","parsedDay","stringDate","stringDay","stringMonth","stringYear","OidcManagerProxy","realOidcManager","useReal","mock_oidc_manager_factory_MockOidcManagerFactory","MockOidcManagerFactory","oidc_client","oidc_manager_config","mockOidcUserData","mock_oidc_user_assign","fixed_session_state","mock_oidc_user_MockOidcUser","MockOidcUser","userData","isMockOidcUser","session_state","createFromOidcUser","createFromUserData","id_token","createMockSub","known","identityTokenPrototype","jwtDate","jwtExpire","createMockIdToken","roleArray","accessTokenPrototype","iat","createMockAccessToken","profilePrototype","createProfile","toStorageString","oidcStorageKey","nonce","sid","addHours","mock_oidc_manager_MockOidcManager","MockOidcManager","injector","_authService","getMockOidcUserFromStorage","reroutePath","oidcUserData","sentry_error_handler_extends","singleton","ignoreErrors","install","sentry_error_handler_SentryErrorHandler","SentryErrorHandler","handleError","originalError","CustomErrorHandler","ɵ0","MockSigninModule","app_routing_module_0","ɵ1","ɵ2","ɵ3","ɵ4","ɵ5","ɵ6","ɵ7","ɵ8","ɵ9","ɵ10","ɵ11","ɵ12","ɵ13","ɵ14","ɵ15","AppRoutingModule","AnalyticsModule","analyticsService","forRoot","providers","ngModule","AuthComponentsModule","CoreComponentsModule","SessionStoreModule","sp_entity_action_factory_extends","sp_entity_action_factory_assign","ADD_ONE_OPS","ADD_ONE","SAVE_ADD_ONE","UPSERT_ONE","sp_entity_action_factory_SpEntityActionFactory","SpEntityActionFactory","createCore","entityOp_1","entityOp","SAVE_DELETE_ONE","aop","data_service_config_extends","NoPluralizer","pluralize","showToast","ngrx_data_toast_service_NgrxDataToastService","actions$","toast","ea","EntityServicesModule","toastService","EntityStoreModule","AppStoreModule","SENTRY_ENRICHER","auth_error_enricher_AuthErrorEnricher","AuthErrorEnricher","adminEmail","level","tags","logger_enricher_LoggerServiceEnricher","LoggerServiceEnricher","sentry_module_SentryModule","SentryModule","ep","provide","useClass","multi","validation_module_ValidationModule","ValidationModule","validation_service","useValue","AppModule","taxCollector","MockServicesModule","MockAuthModule","default_validators_extends","default_validators_assign","RequiredValidator","validatorContext","MinLengthValidator","minLength","MaxLengthValidator","maxLength","RegExpValidator","expression","RangeValidator","minValue","maxValue","InvalidValuesValidator","values","CurrencyValidator","regExpValidator","makeCurrencyValidator","CompareValidator","otherValue","other","default_validators_DateValidator","DateValidator","__isDate","__parse","__isDateStruct","makeZipCodeValidator","makeEmailValidator","makePhoneValidator","makeSocialSecurityNumberValidator","makeNumericValidator","allowLeadingZeros","makeFeinValidator","ExpressionValidator","expressionFn","Function","must_have_employees_validator_extends","must_have_employees_validator_assign","must_have_employees_validator_MustHaveEmployeesValidator","MustHaveEmployeesValidator","isCompanyTaxValid","taxWithBehavior","ubi","businessStartDate","isValidEin","isValidRate","multi_mask_helper","formats","federal_taxes_validator_extends","federal_taxes_validator_assign","federal_taxes_validator_FederalTaxesValidator","FederalTaxesValidator","areTaxesValid","state_taxes_validator_extends","state_taxes_validator_assign","state_taxes_validator_StateTaxesValidator","StateTaxesValidator","invalidStates","missingTaxStates","employee_taxes_validator_extends","employee_taxes_validator_assign","employee_taxes_validator_EmployeeTaxesValidator","EmployeeTaxesValidator","employeeTaxesVm","exemptReasonCode","filingStatusVal","isValidFilingStatus","isValidExemptReason","isValidWithholdAllowance","isValidExtraWithhold","username_validator_extends","username_validator_assign","makeUsernameInvalidCharacterValidator","username_validator_UniqueUsernameValidator","UniqueUsernameValidator","password_validator_extends","password_validator_assign","password_validator_PasswordPolicyValidator","PasswordPolicyValidator","fetchPolicies","policies","validatePassword","household_filer_must_exist_validator_extends","household_filer_must_exist_validator_assign","household_filer_must_exist_validator_HouseholdFilerMustExistValidator","HouseholdFilerMustExistValidator","earnings_validator_extends","earnings_validator_assign","earnings_validator_EarningsNameValidator","EarningsNameValidator","ce","earningService","getValidatorEarnings$","earnings_validator_EarningsDescriptionValidator","EarningsDescriptionValidator","companyEarnings","DEFAULTEARNINGS","DEFAULTOTHERCOMPENSATION","checkdate_criteria_validator_extends","checkdate_criteria_validator_assign","checkdate_criteria_validator_CheckDateCriteriaValidator","CheckDateCriteriaValidator","holidaysService","holidayTimes","core_utils","address_criteria_validator_extends","address_criteria_validator_assign","address_criteria_validator_AddressCriteriaValidator","AddressCriteriaValidator","criteriaFn","criteria","document_signing_complete_validator_extends","document_signing_complete_validator_assign","document_signing_complete_validator_DocumentSigningCompleteValidator","DocumentSigningCompleteValidator","envelopes","must_not_be_exempt_validator_extends","must_not_be_exempt_validator_assign","must_not_be_exempt_validator_MustNotBeExemptValidator","MustNotBeExemptValidator","dynamic_range_validator_extends","dynamic_range_validator_assign","DynamicRangeValidator","minIsValid","maxIsValid","allowZeroProvider","allowZero","getVal","minProvider","maxProvider","betweenMessageTemplate","minMessageTemplate","maxMessageTemplate","project","myPath","prop","ein_validator_extends","ein_validator_assign","ein_validator_EinMaskValidator","EinMaskValidator","formatMessageTemplate","verified_address_validator_extends","verified_address_validator_assign","VerifiedAddressesValidator","companyMessageTemplate","employeeMessageTemplate","AppDevModuleNgFactory","router_ngfactory","ng_bootstrap_ngfactory","ngx_toastr_ngfactory","platform_browser","p0_1","p0_2","p2_0","p2_1","p2_2","p2_3","browser","animations","fesm5_animations","p3_0","p4_0","p4_1","p4_2","p5_0","p5_1","p5_2","p6_0","p7_0","optimisticAdd","optimisticDelete","optimisticUpdate","optimisticUpsert","optimisticSaveEntities","effects","store_devtools","ngx_toastr","interfaces","enableTracing","pathMatch","redirectTo","loadChildren","sp_route_reuse_strategy","angular2TextMask","shared_module","account_details_module","geolocation_service","browser_geolocation_service","address_finder_service","google_places_service","core_window","core_module","title_service","reducerFactory","metaReducers","reducer","sort_comparers","dataEncapsulation","delay","passThruUnknownUrl","timeout","toast_service","stats_service","tax_collector_service","http_client_in_memory_web_api_module","p14_0","p15_0","p16_0","p17_0","p18_0","p20_0","p21_0","p22_0","p23_0","p23_1","p24_0","p24_1","p25_0","p26_0","p27_0","p28_0","earning_service","holidays_service","defaults","condition","firstCheckDate","bankAccountRn","bankAccountNumber","hasPriorPayroll","needDeductionSetup","CompanyBankInfoVm","bankAccountNumberConfirm","HouseholdFedTaxViewModel","extends","EarningsGeneralEditorModel","defaultAccountType","EmployeePaymentAccountVm","accountName","accountNumber","accountRn","SignUpVm","DocumentsVm","signerFirstName","signerLastName","signerTitle","signerEmail","spouseEmail","TaxBehaviorWrapper<CompanyTax>","masksProvider","TaxBehaviorWrapper<EmployeeTax>","bootstrapModuleFactory","oidcManagerConfig","client_url","protocol","host","authority","redirect_uri","response_type","post_logout_redirect_uri","GeolocationService","ValidationMetadata","_validator__WEBPACK_IMPORTED_MODULE_0__","ValidatorMetadata","validatorFactories","groupConfig","asValidatorMetadata","isValidatorGroupConfig","validatorConfig","PropertyMetadata","_validators","ModelMetadata","parent_1","_properties","parent_2","entityHelpers","getModelConfigs","getModelConfigsCore"],"mappings":"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","file":"main.f70bf2f839cbaaabc079.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport * as Actions from './actions';\r\nimport { LoggerService } from '@core/services/logger.service';\r\nimport { SessionState } from './reducer';\r\nimport { AccountStatus, User } from '@model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SessionDispatcher {\r\n  constructor(private store: Store<SessionState>, private logger: LoggerService) {}\r\n\r\n  setAuthUser(authUser: User) {\r\n    this.store.dispatch(new Actions.SetAuthUser(authUser));\r\n  }\r\n\r\n  setCompanyPackageLoaded(isLoaded: boolean) {\r\n    this.store.dispatch(new Actions.SetCompanyPackageLoaded(isLoaded));\r\n  }\r\n\r\n  setCompanyPackageLoading(isLoading: boolean) {\r\n    this.store.dispatch(new Actions.SetCompanyPackageLoading(isLoading));\r\n  }\r\n\r\n  setCurrentAccount(companyId: string, userId: string) {\r\n    this.store.dispatch(new Actions.SetCurrentAccount(companyId, userId));\r\n  }\r\n\r\n  setCurrentCompanyEtag(etag: string) {\r\n    this.store.dispatch(new Actions.SetCompanyEtag(etag));\r\n  }\r\n\r\n  setCurrentEmployeeId(employeeId: string) {\r\n    this.store.dispatch(new Actions.SetCurrentEmployeeId(employeeId));\r\n  }\r\n\r\n  setReadOnly(readOnly: boolean) {\r\n    this.store.dispatch(new Actions.SetReadOnly(readOnly));\r\n  }\r\n\r\n}\r\n","import { Store } from '@ngrx/store';\nimport * as Actions from './actions';\nimport { LoggerService } from '@core/services/logger.service';\nimport { User } from '@model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"../../core/services/logger.service\";\nvar SessionDispatcher = /** @class */ (function () {\n    function SessionDispatcher(store, logger) {\n        this.store = store;\n        this.logger = logger;\n    }\n    SessionDispatcher.prototype.setAuthUser = function (authUser) {\n        this.store.dispatch(new Actions.SetAuthUser(authUser));\n    };\n    SessionDispatcher.prototype.setCompanyPackageLoaded = function (isLoaded) {\n        this.store.dispatch(new Actions.SetCompanyPackageLoaded(isLoaded));\n    };\n    SessionDispatcher.prototype.setCompanyPackageLoading = function (isLoading) {\n        this.store.dispatch(new Actions.SetCompanyPackageLoading(isLoading));\n    };\n    SessionDispatcher.prototype.setCurrentAccount = function (companyId, userId) {\n        this.store.dispatch(new Actions.SetCurrentAccount(companyId, userId));\n    };\n    SessionDispatcher.prototype.setCurrentCompanyEtag = function (etag) {\n        this.store.dispatch(new Actions.SetCompanyEtag(etag));\n    };\n    SessionDispatcher.prototype.setCurrentEmployeeId = function (employeeId) {\n        this.store.dispatch(new Actions.SetCurrentEmployeeId(employeeId));\n    };\n    SessionDispatcher.prototype.setReadOnly = function (readOnly) {\n        this.store.dispatch(new Actions.SetReadOnly(readOnly));\n    };\n    SessionDispatcher.ngInjectableDef = i0.defineInjectable({ factory: function SessionDispatcher_Factory() { return new SessionDispatcher(i0.inject(i1.Store), i0.inject(i2.LoggerService)); }, token: SessionDispatcher, providedIn: \"root\" });\n    return SessionDispatcher;\n}());\nexport { SessionDispatcher };\n","// Client-side id-generator\r\nimport { Injectable } from '@angular/core';\r\nimport { getGuidComb } from '@core/guid-fns';\r\n\r\n/*\r\n * Client-side id (key) generator\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class IdGeneratorService {\r\n  /** Generate nextId for new entities with number keys */\r\n  generateId(): string {\r\n    return getGuidComb();\r\n  }\r\n}\r\n","import { getGuidComb } from '@core/guid-fns';\nimport * as i0 from \"@angular/core\";\n/*\n * Client-side id (key) generator\n */\nvar IdGeneratorService = /** @class */ (function () {\n    function IdGeneratorService() {\n    }\n    /** Generate nextId for new entities with number keys */\n    IdGeneratorService.prototype.generateId = function () {\n        return getGuidComb();\n    };\n    IdGeneratorService.ngInjectableDef = i0.defineInjectable({ factory: function IdGeneratorService_Factory() { return new IdGeneratorService(); }, token: IdGeneratorService, providedIn: \"root\" });\n    return IdGeneratorService;\n}());\nexport { IdGeneratorService };\n","import { EntityMetadataMap } from 'ngrx-data';\r\nimport { sortByFirstLast, sortByName } from './sort-comparers';\r\nimport { upperCamelCase } from '@utils';\r\n\r\nimport { environment } from '@environment';\r\nimport { Earning } from '@app/model';\r\nimport { Deduction } from '@app/model';\r\n\r\n/** True if should throw when mapping collection whose name is bad. */\r\nexport const throwOnBadCollectionName = !environment.production;\r\n\r\nexport const entityMetadata: EntityMetadataMap = {\r\n  Address: {},\r\n  Ancillary: {},\r\n  Company: { sortComparer: sortByName },\r\n  CompanyDeduction: {},\r\n  CompanyDeductionParameter: {},\r\n  CompanyTax: {},\r\n  CompanyAncillary: {},\r\n  CompanyEarning: {},\r\n  Deduction: { selectId: selectDeductionId },\r\n  Document: {},\r\n  Earning: { selectId: selectCode },\r\n  Employee: { sortComparer: sortByFirstLast },\r\n  EmployeeDeduction: {},\r\n  EmployeeDeductionParameter: {},\r\n  EmployeePaymentMethod: {},\r\n  EmployeeTax: {},\r\n  Envelope: {},\r\n  EnvelopeSigner: {},\r\n  HouseholdFilers: {},\r\n  Stats: {},\r\n  User: { sortComparer: sortByName },\r\n  TaxRate: {},\r\n};\r\n\r\n/**\r\n * Entity types do NOT have a required companyId property.\r\n * All others are presumed to require a non-null companyId.\r\n */\r\nexport const entitiesWithoutCompanyId: { [entityName: string]: boolean } = {\r\n  Ancillary: true,\r\n  Company: true,\r\n  Deduction: true,\r\n  Earning: true,\r\n  TaxRate: true,\r\n  User: true\r\n};\r\n\r\n/**\r\n * Entity types that do NOT belong to a specific company.\r\n * See CompanyEffects.\r\n */\r\nexport const nonCompanyEntity: { [entityName: string]: boolean } = {\r\n  Ancillary: true,\r\n  Deduction: true,\r\n  Earning: true,\r\n  TaxRate: true\r\n};\r\n\r\n/** Does this entity type exist in metadata and belong to the set of Company-specific entity types */\r\nexport function isCompanyEntity(entityName: string): boolean {\r\n  return entityMetadata[entityName] && !nonCompanyEntity[entityName];\r\n}\r\n\r\n/** This app does not pluralize. The entity name is the collection resource name */\r\n\r\n/**\r\n * Translate table names to UpperCamelCase and keep only those that are company collections.\r\n * @param data Entity collection data from the server.\r\n * The server collection name may be lowerCamelCase.\r\n * This function accounts for that.\r\n */\r\nexport function companyCollectionDataMapper(\r\n  data: { [collection: string]: any[] },\r\n  shouldThrow = throwOnBadCollectionName\r\n) {\r\n  const keys = Object.keys(data);\r\n  const result = keys.reduce((acc, key) => {\r\n    const entityName = upperCamelCase(key);\r\n    if (isCompanyEntity(entityName)) {\r\n      acc[entityName] = data[key];\r\n    } else {\r\n      if (shouldThrow) {\r\n        throw new Error(`Unexpected data collection name \"${key}\"`);\r\n      }\r\n    }\r\n    return acc;\r\n  }, {} as { [collection: string]: any[] });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Return PK of Deduction metadata record\r\n */\r\nexport function selectDeductionId(deduction: Deduction) {\r\n  return deduction.codeTypeId;\r\n}\r\n/**\r\n * Return PK of Entity metadata record\r\n */\r\nexport function selectCode(earning: Earning) {\r\n  return earning.code;\r\n}\r\n","\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { getFullName } from '@core/utils';\r\n\r\n@Pipe({ name: 'fullname' })\r\nexport class FullNamePipe implements PipeTransform {\r\n    transform(person: { firstName: string, lastName: string }): string {\r\n        return getFullName(person);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavigationExtras, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { asapScheduler, Observable, of } from 'rxjs';\r\nimport { concatMap, filter, first, map, observeOn, tap } from 'rxjs/operators';\r\n\r\nimport { AccountStatus } from '@model';\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\nimport { Company } from '@model';\r\nimport { SessionService } from '@session';\r\nimport { WellKnownRoutes } from '@core/well-known-routes';\r\n\r\nexport interface AccountStatusGuardFns {\r\n  [status: string]: (guardName: string, originalRoute: string, status: string) => boolean;\r\n}\r\n\r\nexport const okRoute = () => true;\r\n\r\n/**\r\n * Helper service whose primary job is to determine if a route can be activated\r\n * based on the route, the user, and the current Account status.\r\n * Always re-routes if there is no signed-in user or no company package loaded.\r\n * See accountStatusAllows$.\r\n * Includes other utility methods.\r\n * Injected by router guards. It is not itself a router guard.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountStatusGuardHelper {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private sessionService: SessionService,\r\n    public router: Router\r\n  ) {\r\n    this.isAdminOnce$ = authService.isAdmin$.pipe(first());\r\n  }\r\n\r\n  /** Terminating observable emitting true if the signed-in user is an administrator. */\r\n  isAdminOnce$: Observable<boolean>;\r\n\r\n  /**\r\n   * Log a message about what this guard did\r\n   * when auth tracing is turned on.\r\n   * Typically log a re-routing event.\r\n   */\r\n  logEvent(guardName: string, message: string) {\r\n    this.authService.logEvent(`${guardName} ${message}`);\r\n  }\r\n\r\n  /**\r\n   * Create a function that will reroute to another app page,\r\n   * after logging this fact (if Auth Tracing is turned on).\r\n   * Delegates to Router.navigate().\r\n   * By default includes option that replaces original route URL in history.\r\n   */\r\n  rerouteFactory = (newRoute: string, extras?: NavigationExtras) =>\r\n    (guardName: string, originalRoute: string, status: string) => {\r\n      this.logEvent(\r\n        guardName,\r\n        `Company status is \"${status}\"; re-routing from \"${originalRoute}\" to \"${newRoute}\"`\r\n      );\r\n      this.router.navigate([newRoute], extras || { replaceUrl: true });\r\n      return false;\r\n  }\r\n\r\n  /**\r\n   * Returns a router canActivate's Observable<boolean> that determines if the user may\r\n   * activate this route or must not do so.\r\n   * In the later case, it re-routes the user to an appropriate page.\r\n   * If there is no signed in user or current company, the page cannot be activated and\r\n   * the side-effect of the guard re-routes to a safe page (see signedInWithCompanyPackage$).\r\n   * If there is a current company package, a status/route map determines the outcome.\r\n   * A status/route map is a map from CompanyStatus to a function that either allows activation\r\n   * or denies it and re-routes the user to another page.\r\n   * The caller supplies two such maps, one for admins and one for regular users.\r\n   * @param guardName The name of the guard that calls this function; for reporting.\r\n   * @param adminRoutes The admin's status/routes map.\r\n   * @param regularRoutes The regular user's status/routes map.\r\n   * @param state The router state indicating where the user intended to go; if the user is not signed-in\r\n   * this observable arranges for the app to try the route again after sign-in.\r\n   */\r\n  accountStatusAllows$(\r\n    guardName: string,\r\n    adminRoutes: AccountStatusGuardFns,\r\n    regularRoutes: AccountStatusGuardFns,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> {\r\n      const byStatusOperator = this.byAccountStatusOperatorFactory(adminRoutes, regularRoutes);\r\n      return this.signedInWithCompanyPackage$(guardName, state).pipe(\r\n        // if have company, decide based on CompanyStatus, else deny activation and re-route\r\n        concatMap(company => company ? byStatusOperator(company, guardName, state.url) : of(false))\r\n      );\r\n  }\r\n\r\n  // Given the two base status/route maps below, `accountStatusAllows$` would\r\n  // reject activation of all pages and re-route to an appropriate page regardless of status.\r\n  // A consumer of this helper will clone these maps and\r\n  // replace a re-route function with the `okRoute` function\r\n  // when the page-to-activate is permitted for the company's current AccountStatus\r\n\r\n  private toAdminAccountView = this.rerouteFactory(WellKnownRoutes.AdminAccountView);\r\n\r\n  /**\r\n   * Status/route map that re-routes ADMIN users to a safe page for all account statuses.\r\n   * Clone and modify to allow activation of a page for a particular status.\r\n   */\r\n  adminBaseRoutes: AccountStatusGuardFns = {\r\n    [AccountStatus.Abandoned]: this.toAdminAccountView,\r\n    [AccountStatus.Docs]: this.toAdminAccountView,\r\n    [AccountStatus.Enrolled]: this.toAdminAccountView,\r\n    [AccountStatus.Open]: this.toAdminAccountView,\r\n    [AccountStatus.AutoMigrate]: this.toAdminAccountView,\r\n    [AccountStatus.Operations]: this.toAdminAccountView,\r\n    [AccountStatus.Migrating]: this.toAdminAccountView,\r\n    [AccountStatus.Test]: this.toAdminAccountView\r\n  };\r\n\r\n  /**\r\n   * Status/route map that re-routes REGULAR users to a safe page for all account statuses.\r\n   * Clone and modify to allow activation of a page for a particular status.\r\n   */\r\n  regularBaseRoutes: AccountStatusGuardFns = {\r\n    [AccountStatus.Abandoned]: this.rerouteFactory(WellKnownRoutes.Abandoned),\r\n    [AccountStatus.Docs]: this.rerouteFactory(WellKnownRoutes.Documents),\r\n    [AccountStatus.Enrolled]: this.rerouteFactory(WellKnownRoutes.Enrolled),\r\n    [AccountStatus.Open]: this.rerouteFactory(WellKnownRoutes.Dashboard),\r\n    [AccountStatus.AutoMigrate]: this.rerouteFactory(WellKnownRoutes.Processing),\r\n    [AccountStatus.Operations]: this.rerouteFactory(WellKnownRoutes.Processing),\r\n    [AccountStatus.Migrating]: this.rerouteFactory(WellKnownRoutes.Processing),\r\n    [AccountStatus.Test]: this.rerouteFactory(WellKnownRoutes.Dashboard),\r\n  };\r\n\r\n  /**\r\n   * Observable emits the current user's company if that user is signed in and the company package is loaded.\r\n   * This is a terminating observable with side-effects.\r\n   * If signed out, navigates to sign-in and emits null.\r\n   * If signed in, waits for company package to finish loading, before emitting the company.\r\n   * If company package is not loaded, navigates to sign-out and emits null.\r\n   */\r\n  signedInWithCompanyPackage$(guardName: string, state: RouterStateSnapshot): Observable<Company> {\r\n    const signedIn$ = this.authService.isSignedIn$.pipe(\r\n      tap(signedIn => {\r\n        if (!signedIn) {\r\n          // Not signed in. Remember where user was trying to go and sign in.\r\n          this.authService.setReroute(state.url, guardName);\r\n          this.logEvent(guardName, `calling AuthService.signin() because user is not signed-in`);\r\n          this.authService.signin();\r\n        }\r\n      }),\r\n      first()\r\n    );\r\n\r\n    const doneLoading$ = this.sessionService.companyPackageLoading$.pipe(\r\n      tap(loading => {\r\n        if (loading) {\r\n          this.logEvent(guardName, 'SessionService is loading current user data');\r\n        }\r\n      }),\r\n      filter(loading => !loading),\r\n      first(),\r\n      observeOn(asapScheduler)\r\n    );\r\n\r\n    const withData$ = doneLoading$.pipe(\r\n      concatMap(() => this.sessionService.companyPackageLoaded$),\r\n      first(), // ensure terminates after first attempt\r\n      concatMap(loaded => (loaded ? this.sessionService.currentCompany$ : of<Company>(null))),\r\n      map(company => {\r\n        if (company) {\r\n          this.logEvent(guardName, `The current user's company is \"${company.name}\".`);\r\n        } else {\r\n          this.logEvent(guardName,\r\n            'SessionService data load must have failed because still not loaded after loading:false. Signing out.'\r\n          );\r\n          this.authService.signout();\r\n        }\r\n        return company;\r\n      })\r\n    );\r\n\r\n    return signedIn$.pipe(concatMap(signedIn => signedIn ? withData$ : of<Company>(null)));\r\n  }\r\n\r\n\r\n  /**\r\n   * Creates a function that uses a company's status to determine if the router should activate\r\n   * the current route or deny activation and re-route.\r\n   * Caller supplies two status/route maps, one for admins and one for regular users.\r\n   * A status/route map is a map from CompanyStatus to a function that either allows activation\r\n   * or denies it and re-routes the user to another page.\r\n   * @param guardName The name of the guard that calls this function; for reporting.\r\n   * @param adminRoutes The admin's status/routes map.\r\n   * @param regularRoutes The regular user's status/routes map.\r\n   * @returns A function that takes a Company and the guard name and returns\r\n   * a cold terminating Observable<boolean> that determines activation.\r\n   *\r\n   */\r\n  private byAccountStatusOperatorFactory = (\r\n    adminRoutes: AccountStatusGuardFns,\r\n    regularRoutes: AccountStatusGuardFns\r\n  ) => (company: Company, guardName: string, originalRoute: string) => this.isAdminOnce$.pipe(\r\n      map(isAdmin => {\r\n        const status = company.status;\r\n        let routeFn = isAdmin ? adminRoutes[status] : regularRoutes[status];\r\n        routeFn = routeFn || this.rerouteFactory(WellKnownRoutes.Failed);\r\n        return routeFn(guardName, originalRoute, status);\r\n      })\r\n    )\r\n}\r\n","import { Router } from '@angular/router';\nimport { asapScheduler, of } from 'rxjs';\nimport { concatMap, filter, first, map, observeOn, tap } from 'rxjs/operators';\nimport { AccountStatus } from '@model';\nimport { AuthService } from '@core/services/auth-services/auth.service';\nimport { SessionService } from '@session';\nimport { WellKnownRoutes } from '@core/well-known-routes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth-services/auth.service\";\nimport * as i2 from \"../../store/session/session.service\";\nimport * as i3 from \"@angular/router\";\nexport var okRoute = function () { return true; };\n/**\n * Helper service whose primary job is to determine if a route can be activated\n * based on the route, the user, and the current Account status.\n * Always re-routes if there is no signed-in user or no company package loaded.\n * See accountStatusAllows$.\n * Includes other utility methods.\n * Injected by router guards. It is not itself a router guard.\n */\nvar AccountStatusGuardHelper = /** @class */ (function () {\n    function AccountStatusGuardHelper(authService, sessionService, router) {\n        var _this = this;\n        this.authService = authService;\n        this.sessionService = sessionService;\n        this.router = router;\n        /**\n         * Create a function that will reroute to another app page,\n         * after logging this fact (if Auth Tracing is turned on).\n         * Delegates to Router.navigate().\n         * By default includes option that replaces original route URL in history.\n         */\n        this.rerouteFactory = function (newRoute, extras) {\n            return function (guardName, originalRoute, status) {\n                _this.logEvent(guardName, \"Company status is \\\"\" + status + \"\\\"; re-routing from \\\"\" + originalRoute + \"\\\" to \\\"\" + newRoute + \"\\\"\");\n                _this.router.navigate([newRoute], extras || { replaceUrl: true });\n                return false;\n            };\n        };\n        // Given the two base status/route maps below, `accountStatusAllows$` would\n        // reject activation of all pages and re-route to an appropriate page regardless of status.\n        // A consumer of this helper will clone these maps and\n        // replace a re-route function with the `okRoute` function\n        // when the page-to-activate is permitted for the company's current AccountStatus\n        this.toAdminAccountView = this.rerouteFactory(WellKnownRoutes.AdminAccountView);\n        /**\n         * Status/route map that re-routes ADMIN users to a safe page for all account statuses.\n         * Clone and modify to allow activation of a page for a particular status.\n         */\n        this.adminBaseRoutes = (_a = {},\n            _a[AccountStatus.Abandoned] = this.toAdminAccountView,\n            _a[AccountStatus.Docs] = this.toAdminAccountView,\n            _a[AccountStatus.Enrolled] = this.toAdminAccountView,\n            _a[AccountStatus.Open] = this.toAdminAccountView,\n            _a[AccountStatus.AutoMigrate] = this.toAdminAccountView,\n            _a[AccountStatus.Operations] = this.toAdminAccountView,\n            _a[AccountStatus.Migrating] = this.toAdminAccountView,\n            _a[AccountStatus.Test] = this.toAdminAccountView,\n            _a);\n        /**\n         * Status/route map that re-routes REGULAR users to a safe page for all account statuses.\n         * Clone and modify to allow activation of a page for a particular status.\n         */\n        this.regularBaseRoutes = (_b = {},\n            _b[AccountStatus.Abandoned] = this.rerouteFactory(WellKnownRoutes.Abandoned),\n            _b[AccountStatus.Docs] = this.rerouteFactory(WellKnownRoutes.Documents),\n            _b[AccountStatus.Enrolled] = this.rerouteFactory(WellKnownRoutes.Enrolled),\n            _b[AccountStatus.Open] = this.rerouteFactory(WellKnownRoutes.Dashboard),\n            _b[AccountStatus.AutoMigrate] = this.rerouteFactory(WellKnownRoutes.Processing),\n            _b[AccountStatus.Operations] = this.rerouteFactory(WellKnownRoutes.Processing),\n            _b[AccountStatus.Migrating] = this.rerouteFactory(WellKnownRoutes.Processing),\n            _b[AccountStatus.Test] = this.rerouteFactory(WellKnownRoutes.Dashboard),\n            _b);\n        /**\n         * Creates a function that uses a company's status to determine if the router should activate\n         * the current route or deny activation and re-route.\n         * Caller supplies two status/route maps, one for admins and one for regular users.\n         * A status/route map is a map from CompanyStatus to a function that either allows activation\n         * or denies it and re-routes the user to another page.\n         * @param guardName The name of the guard that calls this function; for reporting.\n         * @param adminRoutes The admin's status/routes map.\n         * @param regularRoutes The regular user's status/routes map.\n         * @returns A function that takes a Company and the guard name and returns\n         * a cold terminating Observable<boolean> that determines activation.\n         *\n         */\n        this.byAccountStatusOperatorFactory = function (adminRoutes, regularRoutes) { return function (company, guardName, originalRoute) { return _this.isAdminOnce$.pipe(map(function (isAdmin) {\n            var status = company.status;\n            var routeFn = isAdmin ? adminRoutes[status] : regularRoutes[status];\n            routeFn = routeFn || _this.rerouteFactory(WellKnownRoutes.Failed);\n            return routeFn(guardName, originalRoute, status);\n        })); }; };\n        this.isAdminOnce$ = authService.isAdmin$.pipe(first());\n        var _a, _b;\n    }\n    /**\n     * Log a message about what this guard did\n     * when auth tracing is turned on.\n     * Typically log a re-routing event.\n     */\n    AccountStatusGuardHelper.prototype.logEvent = function (guardName, message) {\n        this.authService.logEvent(guardName + \" \" + message);\n    };\n    /**\n     * Returns a router canActivate's Observable<boolean> that determines if the user may\n     * activate this route or must not do so.\n     * In the later case, it re-routes the user to an appropriate page.\n     * If there is no signed in user or current company, the page cannot be activated and\n     * the side-effect of the guard re-routes to a safe page (see signedInWithCompanyPackage$).\n     * If there is a current company package, a status/route map determines the outcome.\n     * A status/route map is a map from CompanyStatus to a function that either allows activation\n     * or denies it and re-routes the user to another page.\n     * The caller supplies two such maps, one for admins and one for regular users.\n     * @param guardName The name of the guard that calls this function; for reporting.\n     * @param adminRoutes The admin's status/routes map.\n     * @param regularRoutes The regular user's status/routes map.\n     * @param state The router state indicating where the user intended to go; if the user is not signed-in\n     * this observable arranges for the app to try the route again after sign-in.\n     */\n    AccountStatusGuardHelper.prototype.accountStatusAllows$ = function (guardName, adminRoutes, regularRoutes, state) {\n        var byStatusOperator = this.byAccountStatusOperatorFactory(adminRoutes, regularRoutes);\n        return this.signedInWithCompanyPackage$(guardName, state).pipe(\n        // if have company, decide based on CompanyStatus, else deny activation and re-route\n        concatMap(function (company) { return company ? byStatusOperator(company, guardName, state.url) : of(false); }));\n    };\n    /**\n     * Observable emits the current user's company if that user is signed in and the company package is loaded.\n     * This is a terminating observable with side-effects.\n     * If signed out, navigates to sign-in and emits null.\n     * If signed in, waits for company package to finish loading, before emitting the company.\n     * If company package is not loaded, navigates to sign-out and emits null.\n     */\n    AccountStatusGuardHelper.prototype.signedInWithCompanyPackage$ = function (guardName, state) {\n        var _this = this;\n        var signedIn$ = this.authService.isSignedIn$.pipe(tap(function (signedIn) {\n            if (!signedIn) {\n                // Not signed in. Remember where user was trying to go and sign in.\n                _this.authService.setReroute(state.url, guardName);\n                _this.logEvent(guardName, \"calling AuthService.signin() because user is not signed-in\");\n                _this.authService.signin();\n            }\n        }), first());\n        var doneLoading$ = this.sessionService.companyPackageLoading$.pipe(tap(function (loading) {\n            if (loading) {\n                _this.logEvent(guardName, 'SessionService is loading current user data');\n            }\n        }), filter(function (loading) { return !loading; }), first(), observeOn(asapScheduler));\n        var withData$ = doneLoading$.pipe(concatMap(function () { return _this.sessionService.companyPackageLoaded$; }), first(), // ensure terminates after first attempt\n        concatMap(function (loaded) { return (loaded ? _this.sessionService.currentCompany$ : of(null)); }), map(function (company) {\n            if (company) {\n                _this.logEvent(guardName, \"The current user's company is \\\"\" + company.name + \"\\\".\");\n            }\n            else {\n                _this.logEvent(guardName, 'SessionService data load must have failed because still not loaded after loading:false. Signing out.');\n                _this.authService.signout();\n            }\n            return company;\n        }));\n        return signedIn$.pipe(concatMap(function (signedIn) { return signedIn ? withData$ : of(null); }));\n    };\n    AccountStatusGuardHelper.ngInjectableDef = i0.defineInjectable({ factory: function AccountStatusGuardHelper_Factory() { return new AccountStatusGuardHelper(i0.inject(i1.AuthService), i0.inject(i2.SessionService), i0.inject(i3.Router)); }, token: AccountStatusGuardHelper, providedIn: \"root\" });\n    return AccountStatusGuardHelper;\n}());\nexport { AccountStatusGuardHelper };\n","import { Code, Codes } from './code';\r\n\r\n/** Account status (in the Company.status)*/\r\nexport enum AccountStatus {\r\n\r\n  /** User is actively entering data. */\r\n  Open = 'Open',\r\n\r\n  /**\r\n   * Awaiting signed docs after user reviewed, validated, and submitted for payroll.\r\n   * User cannot make more changes.\r\n   * Operations can.\r\n   */\r\n  Docs = 'Docs',\r\n\r\n  /** Done with docs and attempting to auto-migrate.  Will end up in either Operations or Enrolled. */\r\n  AutoMigrate = 'AutoMigrate',\r\n\r\n  /**\r\n   * Operations is working to get this account enrolled after user\r\n   * completed his/her part and signed the docs.\r\n   * Operations may make changes.\r\n   */\r\n  Operations = 'Operations',\r\n\r\n  /** DO NOT TOUCH! The system is in the middle of automatically migrating this account to payroll. */\r\n  Migrating = 'Migrating',\r\n\r\n  /** CLOSED! Account is enrolled in the payroll system.*/\r\n  Enrolled = 'Enrolled',\r\n\r\n  /**\r\n   * Test account, still active as determined by operations.\r\n   * Can still edit and even sign docs but will never be migrated to payroll.\r\n   */\r\n  Test = 'Test',\r\n\r\n  /**\r\n   * Abandoned by the user, as determined by operations.\r\n   * No more activity allowed.\r\n   * All users locked out. Admin must re-open to change.\r\n   * Will never be migrated to payroll in this state.\r\n   */\r\n  Abandoned = 'Abandoned',\r\n}\r\n\r\n/** AccountStatus enum codes */\r\nexport const AccountStatusCodes = new Codes([\r\n  // Order matters for select options.\r\n  // Reflects the primary workflow.\r\n  { displayName: 'Open', value: AccountStatus.Open },\r\n  { displayName: 'Docs', value: AccountStatus.Docs },\r\n  { displayName: 'AutoMigrate', value: AccountStatus.AutoMigrate },\r\n  { displayName: 'Operations', value: AccountStatus.Operations },\r\n  { displayName: 'Migrating', value: AccountStatus.Migrating },\r\n  { displayName: 'Enrolled', value: AccountStatus.Enrolled },\r\n  { displayName: 'Abandoned', value: AccountStatus.Abandoned },\r\n  { displayName: 'Test', value: AccountStatus.Test },\r\n]);\r\n\r\nexport enum CompanyType {\r\n  Corporation = 'Corporation',\r\n  GeneralPartnership = 'General Partnership',\r\n  LLC = 'Limited Liability Company',\r\n  LimitedPartnership = 'Limited Partnership',\r\n  SoleProprietorship = 'Sole Proprietorship',\r\n  Household = 'Household',\r\n  NonProfit = 'Non-Profit'\r\n}\r\n\r\nexport const CompanyTypeCodes = new Codes([\r\n  { displayName: 'Corporation', value: CompanyType.Corporation },\r\n  { displayName: 'General Partnership', value: CompanyType.GeneralPartnership },\r\n  { displayName: 'Limited Liability Company', value: CompanyType.LLC },\r\n  { displayName: 'Limited Partnership', value: CompanyType.LimitedPartnership },\r\n  { displayName: 'Sole Proprietorship', value: CompanyType.SoleProprietorship },\r\n  { displayName: 'Household', value: CompanyType.Household },\r\n  { displayName: 'Non-Profit', value: CompanyType.NonProfit },\r\n]);\r\n\r\nexport const CompanyTitles = {\r\n  [CompanyType.Corporation]: ['Officer', 'Owner', 'Principal', 'Accountant', 'Enrolled Agent'],\r\n  [CompanyType.GeneralPartnership]: ['Partner', 'Owner', 'Principal', 'Accountant', 'Enrolled Agent'],\r\n  [CompanyType.LLC]: ['Member', 'LLC Member', 'Principal', 'Accountant', 'Enrolled Agent'],\r\n  [CompanyType.LimitedPartnership]: ['Partner', 'Limited Partner', 'Principal', 'Accountant', 'Enrolled Agent'],\r\n  [CompanyType.SoleProprietorship]: ['Owner', 'Officer', 'Principal', 'Accountant', 'Enrolled Agent'],\r\n  [CompanyType.Household]: ['Owner', 'Power of Attorney', 'Accountant', 'Enrolled Agent'],\r\n  [CompanyType.NonProfit]: ['Partner', 'Owner', 'Officer', 'Executive Director', 'Principal', 'Accountant', 'Enrolled Agent'],\r\n};\r\n\r\nexport enum EmployeeStatus {\r\n  Active = 'active',\r\n  NewHire = 'newhire',\r\n  Terminated = 'terminated'\r\n}\r\n\r\nexport enum EmployeeType {\r\n  Contractor = 'contractor',\r\n  FullTime = 'fulltime',\r\n  Officer = 'officer',\r\n  PartTime = 'parttime',\r\n}\r\n\r\n/** From DocuSign */\r\nexport enum EnvelopeStatus {\r\n  /** Created locally, not pushed to DocuSign */\r\n  local = 'local',\r\n  /** Pushed to DocuSign in \"draft\" status (docs and recipients can still be added) */\r\n  draft = 'draft',\r\n  /** Pushed to DocuSign in \"sent\" status (sent by email OR available for in-app signing) */\r\n  sent = 'sent',\r\n  /** Received? */\r\n  delivered = 'delivered',\r\n  /** Signed */\r\n  completed = 'completed',\r\n  /** Refused to sign */\r\n  declined = 'declined',\r\n  /** Voided in DocuSign */\r\n  voided = 'voided'\r\n}\r\n\r\nexport enum FedFilingStatus {\r\n  Single = 'single',\r\n  Married = 'married',\r\n  MarriedFilinglySeparately = 'married-filing-separately'\r\n}\r\n\r\nexport enum FeinStatus {\r\n  /** The FEIN number is intrinsically invalid */\r\n  Invalid = 'invalid',\r\n  /** The entered FEIN has been verified and matches the Legal Name */\r\n  Verified = 'verified',\r\n  /**  Well-formed FEIN has been entered but is not verified */\r\n  Unverified = 'unverified'\r\n}\r\n\r\nexport enum HouseholdFilersStatus {\r\n  Single = 'single', // 'Single / Head of Household'\r\n  Joint = 'joint'\r\n}\r\n\r\n/** EE Payment account type, e.g, \"Checking\" */\r\nexport enum PaymentAccountType {\r\n  Checking = 'Checking',\r\n  Savings = 'Savings',\r\n  PrintedCheck = 'Printed Check'\r\n}\r\n\r\n/** Whether EE is paid as a single amount, split by $, or split by % */\r\nexport enum PaymentStrategy {\r\n  SinglePayment = 'single-payment',\r\n  SplitAmount = 'split-amount',\r\n  SplitPercent = 'split-percent'\r\n}\r\n\r\n/** Whether EE is paid entirely by check or by deposit or both */\r\nexport enum PaymentMethod {\r\n  PrintedCheck = 'paper-check',\r\n  DepositOrPaycard = 'deposit-or-paycard',\r\n  Both = 'both'\r\n}\r\n\r\nexport enum PayrollFrequency {\r\n  Weekly = 'Weekly',\r\n  BiWeekly = 'Bi-Weekly',\r\n  SemiMonthly = 'Semi-Monthly',\r\n  Monthly = 'Monthly',\r\n  Quarterly = 'Quarterly',\r\n  Annual = 'Annual'\r\n}\r\n\r\nexport const PayrollFrequencyCodes = new Codes([\r\n  // Order matters for select options.\r\n  { displayName: 'Weekly', value: 'Weekly' },\r\n  { displayName: 'Bi-Weekly (Every Other Week)', value: 'Bi-Weekly' },\r\n  { displayName: 'Semi-Monthly (Twice a Month)', value: 'Semi-Monthly' },\r\n  { displayName: 'Monthly', value: 'Monthly' },\r\n  // { displayName: 'Quarterly', value: 'Quarterly' } // removed temporarily PKSP-20550\r\n]);\r\n\r\nexport enum SectionStatus {\r\n  NotStarted = 'NotStarted',\r\n  Invalid = 'Invalid',\r\n  Valid = 'Valid'\r\n}\r\n\r\nexport enum SeinStatus {\r\n  AppliedFor = 'applied-for',\r\n  Unverified = 'unverified',\r\n  Invalid = 'invalid',\r\n  NA = 'na',\r\n  Verified = 'verified',\r\n  UseFein = 'use-fein',\r\n}\r\n\r\nexport enum Sex {\r\n  Female = 'F',\r\n  Male = 'M'\r\n}\r\n\r\nexport const SexCodes = new Codes([\r\n  { displayName: 'Female', value: Sex.Female },\r\n  { displayName: 'Male', value: Sex.Male },\r\n]);\r\n\r\nexport enum StateFilingStatus {\r\n  Single = 'single',\r\n  Married = 'married',\r\n  MarriedFilingSeparately = 'married-filing-separately'\r\n}\r\n\r\nexport enum SuiStatus {\r\n  AppliedFor = 'applied-for',\r\n  Unverified = 'unverified',\r\n  Invalid = 'invalid',\r\n  Verified = 'verified',\r\n}\r\n\r\nexport enum TaxCategoryCode {\r\n  FederalWH = 'FEDWT',\r\n  FutaER = 'FUTAER'\r\n}\r\n\r\nexport enum TaxExemptionReason {\r\n  InsuranceAgentsOrSolicitors = 'AGRIC',\r\n  AgriculturalLabor = 'AGRIC',\r\n  DomesticServiceInCollegeClubs = 'CLUB',\r\n  DeceasedWorkersWages = 'DECEAS',\r\n  EmployersWhoseTaxabilityDependsUponNumberOfEmployees = 'EMPNO',\r\n  ForeignWorkersPerformingTemporaryAgriculturalLabor = 'FAGRI',\r\n  FamilyEmployees = 'FAMILY',\r\n  FederalEmployees = 'FEDEMP',\r\n  FishingAndRelatedActivities = 'FISH',\r\n  ForeignServiceByUSCitizens = 'FORCIT',\r\n  HouseholdWorkers = 'HWORK',\r\n  IndustrialHomeworkers = 'INDUST',\r\n  ForeignGovernmentAndInternationalOrganizations = 'INTER',\r\n  InternsWorkingInHospitals = 'INTERN',\r\n  Ministers = 'MINIST',\r\n  NewspaperCarriersUnder18 = 'NEW18',\r\n  NewspaperAndMagazineVendors = 'NEWSV',\r\n  MembersOfReligiousOrdersWhoveNotTakenVowOfPoverty = 'NPOV',\r\n  NonProfitOrganizations = 'NPROFIT',\r\n  PatientsEmployedByHospitals = 'PATIENT',\r\n  Railroads = 'RAIL',\r\n  RealEstateAgentsAndDirectSellers = 'REAL',\r\n  ReligiousExemption = 'RELIG',\r\n  SicknessOrInjuryPayments = 'SICKPAY',\r\n  EmployeesOfStateGovernmentsAndPoliticalSubdivisions = 'STATE',\r\n  Students = 'STUDENT',\r\n  NonResidentAlienFJMVisa = 'VISA',\r\n  MembersOfReligiousOrdersWhoHaveTakenAVowOfPoverty = 'VPOV',\r\n}\r\n\r\nexport const TaxExemptionReasonsCodes = new Codes([\r\n  // Order matters for select options.\r\n  { displayName: 'Insurance agents or solicitors', value: TaxExemptionReason.InsuranceAgentsOrSolicitors },\r\n  { displayName: 'Agricultural labor', value: TaxExemptionReason.AgriculturalLabor },\r\n  { displayName: 'Domestic service in college clubs', value: TaxExemptionReason.DomesticServiceInCollegeClubs },\r\n  { displayName: 'Deceased worker\\'s wages', value: TaxExemptionReason.DeceasedWorkersWages },\r\n  {\r\n    displayName: 'Employers whose taxability depends upon number of employees',\r\n    value: TaxExemptionReason.EmployersWhoseTaxabilityDependsUponNumberOfEmployees\r\n  },\r\n  {\r\n    displayName: 'Foreign workers performing temporary agricultural labor',\r\n    value: TaxExemptionReason.ForeignWorkersPerformingTemporaryAgriculturalLabor\r\n  },\r\n  { displayName: 'Family employees', value: TaxExemptionReason.FamilyEmployees },\r\n  { displayName: 'Federal employees', value: TaxExemptionReason.FederalEmployees },\r\n  { displayName: 'Fishing and related activities', value: TaxExemptionReason.FishingAndRelatedActivities },\r\n  { displayName: 'Foreign service by US citizens', value: TaxExemptionReason.ForeignServiceByUSCitizens },\r\n  { displayName: 'Household workers', value: TaxExemptionReason.HouseholdWorkers },\r\n  { displayName: 'Industrial homeworkers', value: TaxExemptionReason.IndustrialHomeworkers },\r\n  {\r\n    displayName: 'Foreign government and International organizations',\r\n    value: TaxExemptionReason.ForeignGovernmentAndInternationalOrganizations\r\n  },\r\n  { displayName: 'Interns working in hospitals', value: TaxExemptionReason.InternsWorkingInHospitals },\r\n  { displayName: 'Ministers', value: TaxExemptionReason.Ministers },\r\n  { displayName: 'Newspaper carriers under 18', value: TaxExemptionReason.NewspaperCarriersUnder18 },\r\n  { displayName: 'Newspaper and magazine vendors', value: TaxExemptionReason.NewspaperAndMagazineVendors },\r\n  {\r\n    displayName: 'Members of religious orders who\\'ve not taken vow of poverty',\r\n    value: TaxExemptionReason.MembersOfReligiousOrdersWhoveNotTakenVowOfPoverty\r\n  },\r\n  { displayName: 'Non-profit organizations', value: TaxExemptionReason.NonProfitOrganizations },\r\n  { displayName: 'Patients employed by hospitals', value: TaxExemptionReason.PatientsEmployedByHospitals },\r\n  { displayName: 'Railroads', value: TaxExemptionReason.Railroads },\r\n  { displayName: 'Real estate agents and direct sellers', value: TaxExemptionReason.RealEstateAgentsAndDirectSellers },\r\n  { displayName: 'Religious Exemption', value: TaxExemptionReason.ReligiousExemption },\r\n  { displayName: 'Sickness or injury payments', value: TaxExemptionReason.SicknessOrInjuryPayments },\r\n  {\r\n    displayName: 'Employees of state governments and political subdivisions',\r\n    value: TaxExemptionReason.EmployeesOfStateGovernmentsAndPoliticalSubdivisions\r\n  },\r\n  { displayName: 'Students', value: TaxExemptionReason.Students },\r\n  { displayName: 'Non-Resident Alien F/J/M Visa', value: TaxExemptionReason.NonResidentAlienFJMVisa },\r\n  {\r\n    displayName: 'Members of religious orders who have taken a vow of poverty',\r\n    value: TaxExemptionReason.MembersOfReligiousOrdersWhoHaveTakenAVowOfPoverty\r\n  }\r\n]);\r\n\r\nexport enum TaxRateType {\r\n  Fixed = 'Default',\r\n  Variable = 'Variable'\r\n}\r\n\r\nexport enum TaxTypeCode {\r\n  Federal = 'FD',\r\n  State = 'ST',\r\n  County = 'CN',\r\n  City = 'CT',\r\n  SchoolDistrict = 'SD'\r\n}\r\nexport enum UserRole {\r\n  /** SP ecommerce administrator with full access to all companies */\r\n  Administrator = 'Administrator',\r\n\r\n  /**\r\n   * Agent empowered to enroll a company, such as a CPA.\r\n   * An agent could access multiple companies.\r\n   * Not implemented yet.\r\n   */\r\n  // Agent = 'Agent',\r\n\r\n  /**\r\n   * A user who can fully enroll a single company.\r\n   * Not necessarily the principal/signer.\r\n   */\r\n  Approver = 'Approver'\r\n\r\n  /**\r\n   * An employee self-serve user, restricted to EE functions\r\n   * Not implemented yet.\r\n   */\r\n  // Employee = 'Employee',\r\n\r\n  /**\r\n   * SP sales person with wide (but not unlimited) access to all companies.\r\n   * Not implemented yet.\r\n   */\r\n  // Sales = 'Sales'\r\n}\r\n\r\nexport enum CalendarState {\r\n  Disabled = '',\r\n  PeriodStart = 'from',\r\n  PeriodEnd = 'to',\r\n  Check = 'check',\r\n  SecondPeriodStart = 'secondFrom',\r\n  SecondPeriodEnd = 'secondTo',\r\n  SecondCheck = 'secondCheck'\r\n}\r\n","import { Codes } from './code';\n/** Account status (in the Company.status)*/\nexport var AccountStatus;\n(function (AccountStatus) {\n    /** User is actively entering data. */\n    AccountStatus[\"Open\"] = \"Open\";\n    /**\n     * Awaiting signed docs after user reviewed, validated, and submitted for payroll.\n     * User cannot make more changes.\n     * Operations can.\n     */\n    AccountStatus[\"Docs\"] = \"Docs\";\n    /** Done with docs and attempting to auto-migrate.  Will end up in either Operations or Enrolled. */\n    AccountStatus[\"AutoMigrate\"] = \"AutoMigrate\";\n    /**\n     * Operations is working to get this account enrolled after user\n     * completed his/her part and signed the docs.\n     * Operations may make changes.\n     */\n    AccountStatus[\"Operations\"] = \"Operations\";\n    /** DO NOT TOUCH! The system is in the middle of automatically migrating this account to payroll. */\n    AccountStatus[\"Migrating\"] = \"Migrating\";\n    /** CLOSED! Account is enrolled in the payroll system.*/\n    AccountStatus[\"Enrolled\"] = \"Enrolled\";\n    /**\n     * Test account, still active as determined by operations.\n     * Can still edit and even sign docs but will never be migrated to payroll.\n     */\n    AccountStatus[\"Test\"] = \"Test\";\n    /**\n     * Abandoned by the user, as determined by operations.\n     * No more activity allowed.\n     * All users locked out. Admin must re-open to change.\n     * Will never be migrated to payroll in this state.\n     */\n    AccountStatus[\"Abandoned\"] = \"Abandoned\";\n})(AccountStatus || (AccountStatus = {}));\n/** AccountStatus enum codes */\nexport var AccountStatusCodes = new Codes([\n    // Order matters for select options.\n    // Reflects the primary workflow.\n    { displayName: 'Open', value: AccountStatus.Open },\n    { displayName: 'Docs', value: AccountStatus.Docs },\n    { displayName: 'AutoMigrate', value: AccountStatus.AutoMigrate },\n    { displayName: 'Operations', value: AccountStatus.Operations },\n    { displayName: 'Migrating', value: AccountStatus.Migrating },\n    { displayName: 'Enrolled', value: AccountStatus.Enrolled },\n    { displayName: 'Abandoned', value: AccountStatus.Abandoned },\n    { displayName: 'Test', value: AccountStatus.Test },\n]);\nexport var CompanyType;\n(function (CompanyType) {\n    CompanyType[\"Corporation\"] = \"Corporation\";\n    CompanyType[\"GeneralPartnership\"] = \"General Partnership\";\n    CompanyType[\"LLC\"] = \"Limited Liability Company\";\n    CompanyType[\"LimitedPartnership\"] = \"Limited Partnership\";\n    CompanyType[\"SoleProprietorship\"] = \"Sole Proprietorship\";\n    CompanyType[\"Household\"] = \"Household\";\n    CompanyType[\"NonProfit\"] = \"Non-Profit\";\n})(CompanyType || (CompanyType = {}));\nexport var CompanyTypeCodes = new Codes([\n    { displayName: 'Corporation', value: CompanyType.Corporation },\n    { displayName: 'General Partnership', value: CompanyType.GeneralPartnership },\n    { displayName: 'Limited Liability Company', value: CompanyType.LLC },\n    { displayName: 'Limited Partnership', value: CompanyType.LimitedPartnership },\n    { displayName: 'Sole Proprietorship', value: CompanyType.SoleProprietorship },\n    { displayName: 'Household', value: CompanyType.Household },\n    { displayName: 'Non-Profit', value: CompanyType.NonProfit },\n]);\nexport var CompanyTitles = (_a = {},\n    _a[CompanyType.Corporation] = ['Officer', 'Owner', 'Principal', 'Accountant', 'Enrolled Agent'],\n    _a[CompanyType.GeneralPartnership] = ['Partner', 'Owner', 'Principal', 'Accountant', 'Enrolled Agent'],\n    _a[CompanyType.LLC] = ['Member', 'LLC Member', 'Principal', 'Accountant', 'Enrolled Agent'],\n    _a[CompanyType.LimitedPartnership] = ['Partner', 'Limited Partner', 'Principal', 'Accountant', 'Enrolled Agent'],\n    _a[CompanyType.SoleProprietorship] = ['Owner', 'Officer', 'Principal', 'Accountant', 'Enrolled Agent'],\n    _a[CompanyType.Household] = ['Owner', 'Power of Attorney', 'Accountant', 'Enrolled Agent'],\n    _a[CompanyType.NonProfit] = ['Partner', 'Owner', 'Officer', 'Executive Director', 'Principal', 'Accountant', 'Enrolled Agent'],\n    _a);\nexport var EmployeeStatus;\n(function (EmployeeStatus) {\n    EmployeeStatus[\"Active\"] = \"active\";\n    EmployeeStatus[\"NewHire\"] = \"newhire\";\n    EmployeeStatus[\"Terminated\"] = \"terminated\";\n})(EmployeeStatus || (EmployeeStatus = {}));\nexport var EmployeeType;\n(function (EmployeeType) {\n    EmployeeType[\"Contractor\"] = \"contractor\";\n    EmployeeType[\"FullTime\"] = \"fulltime\";\n    EmployeeType[\"Officer\"] = \"officer\";\n    EmployeeType[\"PartTime\"] = \"parttime\";\n})(EmployeeType || (EmployeeType = {}));\n/** From DocuSign */\nexport var EnvelopeStatus;\n(function (EnvelopeStatus) {\n    /** Created locally, not pushed to DocuSign */\n    EnvelopeStatus[\"local\"] = \"local\";\n    /** Pushed to DocuSign in \"draft\" status (docs and recipients can still be added) */\n    EnvelopeStatus[\"draft\"] = \"draft\";\n    /** Pushed to DocuSign in \"sent\" status (sent by email OR available for in-app signing) */\n    EnvelopeStatus[\"sent\"] = \"sent\";\n    /** Received? */\n    EnvelopeStatus[\"delivered\"] = \"delivered\";\n    /** Signed */\n    EnvelopeStatus[\"completed\"] = \"completed\";\n    /** Refused to sign */\n    EnvelopeStatus[\"declined\"] = \"declined\";\n    /** Voided in DocuSign */\n    EnvelopeStatus[\"voided\"] = \"voided\";\n})(EnvelopeStatus || (EnvelopeStatus = {}));\nexport var FedFilingStatus;\n(function (FedFilingStatus) {\n    FedFilingStatus[\"Single\"] = \"single\";\n    FedFilingStatus[\"Married\"] = \"married\";\n    FedFilingStatus[\"MarriedFilinglySeparately\"] = \"married-filing-separately\";\n})(FedFilingStatus || (FedFilingStatus = {}));\nexport var FeinStatus;\n(function (FeinStatus) {\n    /** The FEIN number is intrinsically invalid */\n    FeinStatus[\"Invalid\"] = \"invalid\";\n    /** The entered FEIN has been verified and matches the Legal Name */\n    FeinStatus[\"Verified\"] = \"verified\";\n    /**  Well-formed FEIN has been entered but is not verified */\n    FeinStatus[\"Unverified\"] = \"unverified\";\n})(FeinStatus || (FeinStatus = {}));\nexport var HouseholdFilersStatus;\n(function (HouseholdFilersStatus) {\n    HouseholdFilersStatus[\"Single\"] = \"single\";\n    HouseholdFilersStatus[\"Joint\"] = \"joint\";\n})(HouseholdFilersStatus || (HouseholdFilersStatus = {}));\n/** EE Payment account type, e.g, \"Checking\" */\nexport var PaymentAccountType;\n(function (PaymentAccountType) {\n    PaymentAccountType[\"Checking\"] = \"Checking\";\n    PaymentAccountType[\"Savings\"] = \"Savings\";\n    PaymentAccountType[\"PrintedCheck\"] = \"Printed Check\";\n})(PaymentAccountType || (PaymentAccountType = {}));\n/** Whether EE is paid as a single amount, split by $, or split by % */\nexport var PaymentStrategy;\n(function (PaymentStrategy) {\n    PaymentStrategy[\"SinglePayment\"] = \"single-payment\";\n    PaymentStrategy[\"SplitAmount\"] = \"split-amount\";\n    PaymentStrategy[\"SplitPercent\"] = \"split-percent\";\n})(PaymentStrategy || (PaymentStrategy = {}));\n/** Whether EE is paid entirely by check or by deposit or both */\nexport var PaymentMethod;\n(function (PaymentMethod) {\n    PaymentMethod[\"PrintedCheck\"] = \"paper-check\";\n    PaymentMethod[\"DepositOrPaycard\"] = \"deposit-or-paycard\";\n    PaymentMethod[\"Both\"] = \"both\";\n})(PaymentMethod || (PaymentMethod = {}));\nexport var PayrollFrequency;\n(function (PayrollFrequency) {\n    PayrollFrequency[\"Weekly\"] = \"Weekly\";\n    PayrollFrequency[\"BiWeekly\"] = \"Bi-Weekly\";\n    PayrollFrequency[\"SemiMonthly\"] = \"Semi-Monthly\";\n    PayrollFrequency[\"Monthly\"] = \"Monthly\";\n    PayrollFrequency[\"Quarterly\"] = \"Quarterly\";\n    PayrollFrequency[\"Annual\"] = \"Annual\";\n})(PayrollFrequency || (PayrollFrequency = {}));\nexport var PayrollFrequencyCodes = new Codes([\n    // Order matters for select options.\n    { displayName: 'Weekly', value: 'Weekly' },\n    { displayName: 'Bi-Weekly (Every Other Week)', value: 'Bi-Weekly' },\n    { displayName: 'Semi-Monthly (Twice a Month)', value: 'Semi-Monthly' },\n    { displayName: 'Monthly', value: 'Monthly' },\n]);\nexport var SectionStatus;\n(function (SectionStatus) {\n    SectionStatus[\"NotStarted\"] = \"NotStarted\";\n    SectionStatus[\"Invalid\"] = \"Invalid\";\n    SectionStatus[\"Valid\"] = \"Valid\";\n})(SectionStatus || (SectionStatus = {}));\nexport var SeinStatus;\n(function (SeinStatus) {\n    SeinStatus[\"AppliedFor\"] = \"applied-for\";\n    SeinStatus[\"Unverified\"] = \"unverified\";\n    SeinStatus[\"Invalid\"] = \"invalid\";\n    SeinStatus[\"NA\"] = \"na\";\n    SeinStatus[\"Verified\"] = \"verified\";\n    SeinStatus[\"UseFein\"] = \"use-fein\";\n})(SeinStatus || (SeinStatus = {}));\nexport var Sex;\n(function (Sex) {\n    Sex[\"Female\"] = \"F\";\n    Sex[\"Male\"] = \"M\";\n})(Sex || (Sex = {}));\nexport var SexCodes = new Codes([\n    { displayName: 'Female', value: Sex.Female },\n    { displayName: 'Male', value: Sex.Male },\n]);\nexport var StateFilingStatus;\n(function (StateFilingStatus) {\n    StateFilingStatus[\"Single\"] = \"single\";\n    StateFilingStatus[\"Married\"] = \"married\";\n    StateFilingStatus[\"MarriedFilingSeparately\"] = \"married-filing-separately\";\n})(StateFilingStatus || (StateFilingStatus = {}));\nexport var SuiStatus;\n(function (SuiStatus) {\n    SuiStatus[\"AppliedFor\"] = \"applied-for\";\n    SuiStatus[\"Unverified\"] = \"unverified\";\n    SuiStatus[\"Invalid\"] = \"invalid\";\n    SuiStatus[\"Verified\"] = \"verified\";\n})(SuiStatus || (SuiStatus = {}));\nexport var TaxCategoryCode;\n(function (TaxCategoryCode) {\n    TaxCategoryCode[\"FederalWH\"] = \"FEDWT\";\n    TaxCategoryCode[\"FutaER\"] = \"FUTAER\";\n})(TaxCategoryCode || (TaxCategoryCode = {}));\nexport var TaxExemptionReason;\n(function (TaxExemptionReason) {\n    TaxExemptionReason[\"InsuranceAgentsOrSolicitors\"] = \"AGRIC\";\n    TaxExemptionReason[\"AgriculturalLabor\"] = \"AGRIC\";\n    TaxExemptionReason[\"DomesticServiceInCollegeClubs\"] = \"CLUB\";\n    TaxExemptionReason[\"DeceasedWorkersWages\"] = \"DECEAS\";\n    TaxExemptionReason[\"EmployersWhoseTaxabilityDependsUponNumberOfEmployees\"] = \"EMPNO\";\n    TaxExemptionReason[\"ForeignWorkersPerformingTemporaryAgriculturalLabor\"] = \"FAGRI\";\n    TaxExemptionReason[\"FamilyEmployees\"] = \"FAMILY\";\n    TaxExemptionReason[\"FederalEmployees\"] = \"FEDEMP\";\n    TaxExemptionReason[\"FishingAndRelatedActivities\"] = \"FISH\";\n    TaxExemptionReason[\"ForeignServiceByUSCitizens\"] = \"FORCIT\";\n    TaxExemptionReason[\"HouseholdWorkers\"] = \"HWORK\";\n    TaxExemptionReason[\"IndustrialHomeworkers\"] = \"INDUST\";\n    TaxExemptionReason[\"ForeignGovernmentAndInternationalOrganizations\"] = \"INTER\";\n    TaxExemptionReason[\"InternsWorkingInHospitals\"] = \"INTERN\";\n    TaxExemptionReason[\"Ministers\"] = \"MINIST\";\n    TaxExemptionReason[\"NewspaperCarriersUnder18\"] = \"NEW18\";\n    TaxExemptionReason[\"NewspaperAndMagazineVendors\"] = \"NEWSV\";\n    TaxExemptionReason[\"MembersOfReligiousOrdersWhoveNotTakenVowOfPoverty\"] = \"NPOV\";\n    TaxExemptionReason[\"NonProfitOrganizations\"] = \"NPROFIT\";\n    TaxExemptionReason[\"PatientsEmployedByHospitals\"] = \"PATIENT\";\n    TaxExemptionReason[\"Railroads\"] = \"RAIL\";\n    TaxExemptionReason[\"RealEstateAgentsAndDirectSellers\"] = \"REAL\";\n    TaxExemptionReason[\"ReligiousExemption\"] = \"RELIG\";\n    TaxExemptionReason[\"SicknessOrInjuryPayments\"] = \"SICKPAY\";\n    TaxExemptionReason[\"EmployeesOfStateGovernmentsAndPoliticalSubdivisions\"] = \"STATE\";\n    TaxExemptionReason[\"Students\"] = \"STUDENT\";\n    TaxExemptionReason[\"NonResidentAlienFJMVisa\"] = \"VISA\";\n    TaxExemptionReason[\"MembersOfReligiousOrdersWhoHaveTakenAVowOfPoverty\"] = \"VPOV\";\n})(TaxExemptionReason || (TaxExemptionReason = {}));\nexport var TaxExemptionReasonsCodes = new Codes([\n    // Order matters for select options.\n    { displayName: 'Insurance agents or solicitors', value: TaxExemptionReason.InsuranceAgentsOrSolicitors },\n    { displayName: 'Agricultural labor', value: TaxExemptionReason.AgriculturalLabor },\n    { displayName: 'Domestic service in college clubs', value: TaxExemptionReason.DomesticServiceInCollegeClubs },\n    { displayName: 'Deceased worker\\'s wages', value: TaxExemptionReason.DeceasedWorkersWages },\n    {\n        displayName: 'Employers whose taxability depends upon number of employees',\n        value: TaxExemptionReason.EmployersWhoseTaxabilityDependsUponNumberOfEmployees\n    },\n    {\n        displayName: 'Foreign workers performing temporary agricultural labor',\n        value: TaxExemptionReason.ForeignWorkersPerformingTemporaryAgriculturalLabor\n    },\n    { displayName: 'Family employees', value: TaxExemptionReason.FamilyEmployees },\n    { displayName: 'Federal employees', value: TaxExemptionReason.FederalEmployees },\n    { displayName: 'Fishing and related activities', value: TaxExemptionReason.FishingAndRelatedActivities },\n    { displayName: 'Foreign service by US citizens', value: TaxExemptionReason.ForeignServiceByUSCitizens },\n    { displayName: 'Household workers', value: TaxExemptionReason.HouseholdWorkers },\n    { displayName: 'Industrial homeworkers', value: TaxExemptionReason.IndustrialHomeworkers },\n    {\n        displayName: 'Foreign government and International organizations',\n        value: TaxExemptionReason.ForeignGovernmentAndInternationalOrganizations\n    },\n    { displayName: 'Interns working in hospitals', value: TaxExemptionReason.InternsWorkingInHospitals },\n    { displayName: 'Ministers', value: TaxExemptionReason.Ministers },\n    { displayName: 'Newspaper carriers under 18', value: TaxExemptionReason.NewspaperCarriersUnder18 },\n    { displayName: 'Newspaper and magazine vendors', value: TaxExemptionReason.NewspaperAndMagazineVendors },\n    {\n        displayName: 'Members of religious orders who\\'ve not taken vow of poverty',\n        value: TaxExemptionReason.MembersOfReligiousOrdersWhoveNotTakenVowOfPoverty\n    },\n    { displayName: 'Non-profit organizations', value: TaxExemptionReason.NonProfitOrganizations },\n    { displayName: 'Patients employed by hospitals', value: TaxExemptionReason.PatientsEmployedByHospitals },\n    { displayName: 'Railroads', value: TaxExemptionReason.Railroads },\n    { displayName: 'Real estate agents and direct sellers', value: TaxExemptionReason.RealEstateAgentsAndDirectSellers },\n    { displayName: 'Religious Exemption', value: TaxExemptionReason.ReligiousExemption },\n    { displayName: 'Sickness or injury payments', value: TaxExemptionReason.SicknessOrInjuryPayments },\n    {\n        displayName: 'Employees of state governments and political subdivisions',\n        value: TaxExemptionReason.EmployeesOfStateGovernmentsAndPoliticalSubdivisions\n    },\n    { displayName: 'Students', value: TaxExemptionReason.Students },\n    { displayName: 'Non-Resident Alien F/J/M Visa', value: TaxExemptionReason.NonResidentAlienFJMVisa },\n    {\n        displayName: 'Members of religious orders who have taken a vow of poverty',\n        value: TaxExemptionReason.MembersOfReligiousOrdersWhoHaveTakenAVowOfPoverty\n    }\n]);\nexport var TaxRateType;\n(function (TaxRateType) {\n    TaxRateType[\"Fixed\"] = \"Default\";\n    TaxRateType[\"Variable\"] = \"Variable\";\n})(TaxRateType || (TaxRateType = {}));\nexport var TaxTypeCode;\n(function (TaxTypeCode) {\n    TaxTypeCode[\"Federal\"] = \"FD\";\n    TaxTypeCode[\"State\"] = \"ST\";\n    TaxTypeCode[\"County\"] = \"CN\";\n    TaxTypeCode[\"City\"] = \"CT\";\n    TaxTypeCode[\"SchoolDistrict\"] = \"SD\";\n})(TaxTypeCode || (TaxTypeCode = {}));\nexport var UserRole;\n(function (UserRole) {\n    /** SP ecommerce administrator with full access to all companies */\n    UserRole[\"Administrator\"] = \"Administrator\";\n    /**\n     * Agent empowered to enroll a company, such as a CPA.\n     * An agent could access multiple companies.\n     * Not implemented yet.\n     */\n    // Agent = 'Agent',\n    /**\n     * A user who can fully enroll a single company.\n     * Not necessarily the principal/signer.\n     */\n    UserRole[\"Approver\"] = \"Approver\";\n    /**\n     * An employee self-serve user, restricted to EE functions\n     * Not implemented yet.\n     */\n    // Employee = 'Employee',\n    /**\n     * SP sales person with wide (but not unlimited) access to all companies.\n     * Not implemented yet.\n     */\n    // Sales = 'Sales'\n})(UserRole || (UserRole = {}));\nexport var CalendarState;\n(function (CalendarState) {\n    CalendarState[\"Disabled\"] = \"\";\n    CalendarState[\"PeriodStart\"] = \"from\";\n    CalendarState[\"PeriodEnd\"] = \"to\";\n    CalendarState[\"Check\"] = \"check\";\n    CalendarState[\"SecondPeriodStart\"] = \"secondFrom\";\n    CalendarState[\"SecondPeriodEnd\"] = \"secondTo\";\n    CalendarState[\"SecondCheck\"] = \"secondCheck\";\n})(CalendarState || (CalendarState = {}));\nvar _a;\n","import { Component, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sp-model',\r\n  template: '<ng-content></ng-content>'\r\n})\r\nexport class ModelComponent implements OnChanges {\r\n  @Input() model: any;\r\n  @Input() modelType: string;\r\n  @Input() group: string;\r\n  @Output() modelChange = new EventEmitter<any>();\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.modelChange.emit();\r\n  }\r\n\r\n  notifyOfModelChange() {\r\n    this.modelChange.emit();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environment';\r\nimport { LoggerService } from '@core/services/logger.service';\r\n\r\n\r\n/**\r\n * Gets list of Holidays for check date validation as string[]\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class HolidaysService {\r\n    private cachedHolidays: Date[] = null;\r\n\r\n    constructor(private http: HttpClient, private logger: LoggerService) { }\r\n\r\n    /**\r\n     * Get bank holidays\r\n     * @returns Terminating observable of cached bank holidays. Do not have to unsubscribe.\r\n     */\r\n    getHolidays(): Observable<Date[]> {\r\n        if (this.cachedHolidays != null) {\r\n            return of(this.cachedHolidays);\r\n        }\r\n\r\n        const url = environment.spApiRoot + '/taxapi/taxes/holidays';\r\n        return this.http.get<string[]>(url).pipe(\r\n            map(e => {\r\n                const holidays = e\r\n                ? e.map(d => new Date(d.substr(0, 19))).filter(d => !isNaN(d.getTime()))\r\n                : [];\r\n                return this.cachedHolidays = holidays;\r\n            }),\r\n            catchError(error => {\r\n              this.logger.error('Failed getting holidays', error);\r\n              return of([]);\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '@environment';\nimport { LoggerService } from '@core/services/logger.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./logger.service\";\n/**\n * Gets list of Holidays for check date validation as string[]\n */\nvar HolidaysService = /** @class */ (function () {\n    function HolidaysService(http, logger) {\n        this.http = http;\n        this.logger = logger;\n        this.cachedHolidays = null;\n    }\n    /**\n     * Get bank holidays\n     * @returns Terminating observable of cached bank holidays. Do not have to unsubscribe.\n     */\n    HolidaysService.prototype.getHolidays = function () {\n        var _this = this;\n        if (this.cachedHolidays != null) {\n            return of(this.cachedHolidays);\n        }\n        var url = environment.spApiRoot + '/taxapi/taxes/holidays';\n        return this.http.get(url).pipe(map(function (e) {\n            var holidays = e\n                ? e.map(function (d) { return new Date(d.substr(0, 19)); }).filter(function (d) { return !isNaN(d.getTime()); })\n                : [];\n            return _this.cachedHolidays = holidays;\n        }), catchError(function (error) {\n            _this.logger.error('Failed getting holidays', error);\n            return of([]);\n        }));\n    };\n    HolidaysService.ngInjectableDef = i0.defineInjectable({ factory: function HolidaysService_Factory() { return new HolidaysService(i0.inject(i1.HttpClient), i0.inject(i2.LoggerService)); }, token: HolidaysService, providedIn: \"root\" });\n    return HolidaysService;\n}());\nexport { HolidaysService };\n","import { OnInit, Component, Input } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'sp-read-more',\r\n    templateUrl: './read-more.component.html'\r\n})\r\nexport class ReadMoreComponent implements OnInit {\r\n    @Input() collapsed = true;\r\n    @Input() separatorTag = '<summary/>';\r\n    @Input() seeMoreLabel = 'See More';\r\n    @Input() seeLessLabel = 'See Less';\r\n    tooLarge = false;\r\n    @Input() hideSeeLess = false;\r\n\r\n    private _description: string;\r\n    @Input()\r\n    get description(): string {\r\n        return this._description;\r\n    }\r\n    set description(val: string) {\r\n        this._description = removeSummary(this.separatorTag, val);\r\n        this._summary = getSummary(this.separatorTag, val);\r\n        this.collapsed = (this._description.length > this._summary.length);\r\n        this.tooLarge = (this._description.length > this._summary.length);\r\n    }\r\n    get descriptionHtml(): SafeHtml {\r\n        return this.getSafeHtml(this._description);\r\n    }\r\n\r\n    private _summary: string;\r\n    @Input()\r\n    get summaryHtml(): SafeHtml {\r\n        return this.getSafeHtml(this._summary);\r\n    }\r\n\r\n    constructor(private sanitizer: DomSanitizer) {}\r\n    ngOnInit() {}\r\n\r\n    private getSafeHtml(html: string): SafeHtml {\r\n        // Security: `html` is always authored by the SP deduction's team and\r\n        // is considered to be safe.\r\n        return this.sanitizer.bypassSecurityTrustHtml(html);\r\n    }\r\n\r\n    get showSummary(): boolean {\r\n      return this.tooLarge && this.collapsed;\r\n    }\r\n    get showAll(): boolean {\r\n      return (this.tooLarge && !this.collapsed) || !this.tooLarge;\r\n    }\r\n    get showSeeMore(): boolean {\r\n      return this.tooLarge && !this.hideSeeLess;\r\n    }\r\n\r\n    seeMore() {\r\n        this.collapsed = false;\r\n    }\r\n    seeLess() {\r\n        this.collapsed = true;\r\n    }\r\n}\r\n\r\n/** find the summary part and return the header: */\r\nexport function getSummary(separatorTag: string, input: string): string {\r\n    if (!input) {\r\n        return '';\r\n    }\r\n    const pos = input.indexOf(separatorTag);\r\n    if (pos < 0) {\r\n        return input;\r\n    }\r\n    return input.substr(0, pos);\r\n}\r\n/** reomves summary header */\r\nexport function removeSummary(separatorTag: string, input: string): string {\r\n    if (!input) {\r\n        return '';\r\n    }\r\n    return input.replace(separatorTag, '');\r\n}\r\n","import { OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nvar ReadMoreComponent = /** @class */ (function () {\n    function ReadMoreComponent(sanitizer) {\n        this.sanitizer = sanitizer;\n        this.collapsed = true;\n        this.separatorTag = '<summary/>';\n        this.seeMoreLabel = 'See More';\n        this.seeLessLabel = 'See Less';\n        this.tooLarge = false;\n        this.hideSeeLess = false;\n    }\n    Object.defineProperty(ReadMoreComponent.prototype, \"description\", {\n        get: function () {\n            return this._description;\n        },\n        set: function (val) {\n            this._description = removeSummary(this.separatorTag, val);\n            this._summary = getSummary(this.separatorTag, val);\n            this.collapsed = (this._description.length > this._summary.length);\n            this.tooLarge = (this._description.length > this._summary.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReadMoreComponent.prototype, \"descriptionHtml\", {\n        get: function () {\n            return this.getSafeHtml(this._description);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReadMoreComponent.prototype, \"summaryHtml\", {\n        get: function () {\n            return this.getSafeHtml(this._summary);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReadMoreComponent.prototype.ngOnInit = function () { };\n    ReadMoreComponent.prototype.getSafeHtml = function (html) {\n        // Security: `html` is always authored by the SP deduction's team and\n        // is considered to be safe.\n        return this.sanitizer.bypassSecurityTrustHtml(html);\n    };\n    Object.defineProperty(ReadMoreComponent.prototype, \"showSummary\", {\n        get: function () {\n            return this.tooLarge && this.collapsed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReadMoreComponent.prototype, \"showAll\", {\n        get: function () {\n            return (this.tooLarge && !this.collapsed) || !this.tooLarge;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReadMoreComponent.prototype, \"showSeeMore\", {\n        get: function () {\n            return this.tooLarge && !this.hideSeeLess;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReadMoreComponent.prototype.seeMore = function () {\n        this.collapsed = false;\n    };\n    ReadMoreComponent.prototype.seeLess = function () {\n        this.collapsed = true;\n    };\n    return ReadMoreComponent;\n}());\nexport { ReadMoreComponent };\n/** find the summary part and return the header: */\nexport function getSummary(separatorTag, input) {\n    if (!input) {\n        return '';\n    }\n    var pos = input.indexOf(separatorTag);\n    if (pos < 0) {\n        return input;\n    }\n    return input.substr(0, pos);\n}\n/** reomves summary header */\nexport function removeSummary(separatorTag, input) {\n    if (!input) {\n        return '';\n    }\n    return input.replace(separatorTag, '');\n}\n","import { Injectable } from '@angular/core';\r\nimport { ReviewService } from '@entity/entity-services';\r\n\r\nimport { Observable, combineLatest, of } from 'rxjs';\r\nimport { distinctUntilChanged, filter, first, map, shareReplay, tap } from 'rxjs/operators';\r\n\r\nimport { DashboardVm, ReviewStatusCss } from './dashboard-vm';\r\nimport { SectionStatus, User } from '@model';\r\nimport { SessionService } from '@session';\r\nimport { StatsService } from '@entity';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DashboardViewService {\r\n  vm$: Observable<DashboardVm>;\r\n\r\n  constructor(\r\n    reviewService: ReviewService,\r\n    sessionService: SessionService,\r\n    statsService: StatsService\r\n  ) {\r\n    // show the intro text if the stats record is new (no id)\r\n    const showIntro$ = statsService.stats$.pipe(\r\n      map(stats => !stats.aboutYouStatus),\r\n      distinctUntilChanged()\r\n    );\r\n\r\n    // Watch out! CombineLatest only supports a limited number of args before it loses types.\r\n    const statuses$ = combineLatest(\r\n      reviewService.aboutYouStatus$,\r\n      reviewService.bankInfoStatus$,\r\n      reviewService.companyInfoStatus$,\r\n      reviewService.companyTaxStatus$,\r\n      reviewService.employeesStatus$\r\n    ).pipe(\r\n      map(([aboutYou, bankInfo, companyInfo, companyTax, employees]) => ({\r\n        aboutYou,\r\n        bankInfo,\r\n        companyInfo,\r\n        companyTax,\r\n        employees\r\n      }))\r\n    );\r\n\r\n    // Watch out! CombineLatest only supports a limited number of args before it loses types.\r\n    this.vm$ = combineLatest(\r\n      sessionService.currentCompany$,\r\n      sessionService.currentUser$,\r\n      sessionService.isAdmin$,\r\n      reviewService.isValid$,\r\n      showIntro$,\r\n      statuses$\r\n    ).pipe(\r\n      filter(([company, user]) => !!company && !!user),\r\n      map(([company, user, isAdmin, isValid, showIntro, statuses]) => {\r\n        const result = {\r\n          company,\r\n          user,\r\n          isAdmin,\r\n          isValid: canSignDocuments(isValid, statuses),\r\n          showIntro,\r\n\r\n          aboutYouAction: getStatusAction(statuses.aboutYou),\r\n          aboutYouClass: getStatusCss(statuses.aboutYou),\r\n          aboutYouIcon: getStatusIcon(statuses.aboutYou),\r\n          bankInfoAction: getStatusAction(statuses.bankInfo),\r\n          bankInfoClass: getStatusCss(statuses.bankInfo),\r\n          bankInfoIcon: getStatusIcon(statuses.bankInfo),\r\n          companyInfoAction: getStatusAction(statuses.companyInfo),\r\n          companyInfoClass: getStatusCss(statuses.companyInfo),\r\n          companyInfoIcon: getStatusIcon(statuses.companyInfo),\r\n          companyTaxAction: getStatusAction(statuses.companyTax),\r\n          companyTaxClass: getStatusCss(statuses.companyTax),\r\n          companyTaxIcon: getStatusIcon(statuses.companyTax),\r\n          employeesAction: getStatusAction(statuses.employees),\r\n          employeesClass: getStatusCss(statuses.employees),\r\n          employeesIcon: getStatusIcon(statuses.employees)\r\n        } as DashboardVm;\r\n        return result;\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n}\r\n\r\nfunction canSignDocuments(isValid: boolean, statuses: any) {\r\n  return (\r\n    isValid &&\r\n    statuses.aboutYou === SectionStatus.Valid &&\r\n    statuses.bankInfo === SectionStatus.Valid &&\r\n    statuses.companyInfo === SectionStatus.Valid &&\r\n    statuses.companyTax === SectionStatus.Valid &&\r\n    statuses.employees === SectionStatus.Valid\r\n  );\r\n}\r\n\r\nfunction getStatusCss(status: SectionStatus): ReviewStatusCss {\r\n  return {\r\n    'status-action': status === SectionStatus.NotStarted,\r\n    'status-inprogress': status === SectionStatus.Invalid,\r\n    'status-complete': status === SectionStatus.Valid\r\n  };\r\n}\r\n\r\nfunction getStatusAction(status: SectionStatus) {\r\n  if (status === SectionStatus.NotStarted) {\r\n    return 'Start';\r\n  } else if (status === SectionStatus.Invalid) {\r\n    return 'Update';\r\n  } else {\r\n    return 'Edit';\r\n  }\r\n}\r\n\r\nfunction getStatusIcon(status: SectionStatus) {\r\n  if (status === SectionStatus.NotStarted) {\r\n    return 'adjust';\r\n  } else if (status === SectionStatus.Invalid) {\r\n    return 'error_outline';\r\n  } else {\r\n    return 'check';\r\n  }\r\n}\r\n","import { ReviewService } from '@entity/entity-services';\nimport { Observable, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay } from 'rxjs/operators';\nimport { SectionStatus } from '@model';\nimport { SessionService } from '@session';\nimport { StatsService } from '@entity';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../store/entity/entity-services/review.service\";\nimport * as i2 from \"../store/session/session.service\";\nimport * as i3 from \"../store/entity/entity-services/stats.service\";\nvar DashboardViewService = /** @class */ (function () {\n    function DashboardViewService(reviewService, sessionService, statsService) {\n        // show the intro text if the stats record is new (no id)\n        var showIntro$ = statsService.stats$.pipe(map(function (stats) { return !stats.aboutYouStatus; }), distinctUntilChanged());\n        // Watch out! CombineLatest only supports a limited number of args before it loses types.\n        var statuses$ = combineLatest(reviewService.aboutYouStatus$, reviewService.bankInfoStatus$, reviewService.companyInfoStatus$, reviewService.companyTaxStatus$, reviewService.employeesStatus$).pipe(map(function (_a) {\n            var aboutYou = _a[0], bankInfo = _a[1], companyInfo = _a[2], companyTax = _a[3], employees = _a[4];\n            return ({\n                aboutYou: aboutYou,\n                bankInfo: bankInfo,\n                companyInfo: companyInfo,\n                companyTax: companyTax,\n                employees: employees\n            });\n        }));\n        // Watch out! CombineLatest only supports a limited number of args before it loses types.\n        this.vm$ = combineLatest(sessionService.currentCompany$, sessionService.currentUser$, sessionService.isAdmin$, reviewService.isValid$, showIntro$, statuses$).pipe(filter(function (_a) {\n            var company = _a[0], user = _a[1];\n            return !!company && !!user;\n        }), map(function (_a) {\n            var company = _a[0], user = _a[1], isAdmin = _a[2], isValid = _a[3], showIntro = _a[4], statuses = _a[5];\n            var result = {\n                company: company,\n                user: user,\n                isAdmin: isAdmin,\n                isValid: canSignDocuments(isValid, statuses),\n                showIntro: showIntro,\n                aboutYouAction: getStatusAction(statuses.aboutYou),\n                aboutYouClass: getStatusCss(statuses.aboutYou),\n                aboutYouIcon: getStatusIcon(statuses.aboutYou),\n                bankInfoAction: getStatusAction(statuses.bankInfo),\n                bankInfoClass: getStatusCss(statuses.bankInfo),\n                bankInfoIcon: getStatusIcon(statuses.bankInfo),\n                companyInfoAction: getStatusAction(statuses.companyInfo),\n                companyInfoClass: getStatusCss(statuses.companyInfo),\n                companyInfoIcon: getStatusIcon(statuses.companyInfo),\n                companyTaxAction: getStatusAction(statuses.companyTax),\n                companyTaxClass: getStatusCss(statuses.companyTax),\n                companyTaxIcon: getStatusIcon(statuses.companyTax),\n                employeesAction: getStatusAction(statuses.employees),\n                employeesClass: getStatusCss(statuses.employees),\n                employeesIcon: getStatusIcon(statuses.employees)\n            };\n            return result;\n        }), shareReplay(1));\n    }\n    DashboardViewService.ngInjectableDef = i0.defineInjectable({ factory: function DashboardViewService_Factory() { return new DashboardViewService(i0.inject(i1.ReviewService), i0.inject(i2.SessionService), i0.inject(i3.StatsService)); }, token: DashboardViewService, providedIn: \"root\" });\n    return DashboardViewService;\n}());\nexport { DashboardViewService };\nfunction canSignDocuments(isValid, statuses) {\n    return (isValid &&\n        statuses.aboutYou === SectionStatus.Valid &&\n        statuses.bankInfo === SectionStatus.Valid &&\n        statuses.companyInfo === SectionStatus.Valid &&\n        statuses.companyTax === SectionStatus.Valid &&\n        statuses.employees === SectionStatus.Valid);\n}\nfunction getStatusCss(status) {\n    return {\n        'status-action': status === SectionStatus.NotStarted,\n        'status-inprogress': status === SectionStatus.Invalid,\n        'status-complete': status === SectionStatus.Valid\n    };\n}\nfunction getStatusAction(status) {\n    if (status === SectionStatus.NotStarted) {\n        return 'Start';\n    }\n    else if (status === SectionStatus.Invalid) {\n        return 'Update';\n    }\n    else {\n        return 'Edit';\n    }\n}\nfunction getStatusIcon(status) {\n    if (status === SectionStatus.NotStarted) {\n        return 'adjust';\n    }\n    else if (status === SectionStatus.Invalid) {\n        return 'error_outline';\n    }\n    else {\n        return 'check';\n    }\n}\n","import { Codes } from './code';\r\n\r\nexport const USStateCodes = new Codes([\r\n  { displayName: 'Alabama', value: 'AL' },\r\n  { displayName: 'Alaska', value: 'AK' },\r\n  { displayName: 'Arizona', value: 'AZ' },\r\n  { displayName: 'Arkansas', value: 'AR' },\r\n  { displayName: 'California', value: 'CA' },\r\n  { displayName: 'Colorado', value: 'CO' },\r\n  { displayName: 'Connecticut', value: 'CT' },\r\n  { displayName: 'Delaware', value: 'DE' },\r\n  { displayName: 'District of Columbia', value: 'DC' },\r\n  { displayName: 'Florida', value: 'FL' },\r\n  { displayName: 'Georgia', value: 'GA' },\r\n  { displayName: 'Hawaii', value: 'HI' },\r\n  { displayName: 'Idaho', value: 'ID' },\r\n  { displayName: 'Illinois', value: 'IL' },\r\n  { displayName: 'Indiana', value: 'IN' },\r\n  { displayName: 'Iowa', value: 'IA' },\r\n  { displayName: 'Kansas', value: 'KS' },\r\n  { displayName: 'Kentucky', value: 'KY' },\r\n  { displayName: 'Louisiana', value: 'LA' },\r\n  { displayName: 'Maine', value: 'ME' },\r\n  { displayName: 'Maryland', value: 'MD' },\r\n  { displayName: 'Massachusetts', value: 'MA' },\r\n  { displayName: 'Michigan', value: 'MI' },\r\n  { displayName: 'Minnesota', value: 'MN' },\r\n  { displayName: 'Mississippi', value: 'MS' },\r\n  { displayName: 'Missouri', value: 'MO' },\r\n  { displayName: 'Montana', value: 'MT' },\r\n  { displayName: 'Nebraska', value: 'NE' },\r\n  { displayName: 'Nevada', value: 'NV' },\r\n  { displayName: 'New Hampshire', value: 'NH' },\r\n  { displayName: 'New Jersey', value: 'NJ' },\r\n  { displayName: 'New Mexico', value: 'NM' },\r\n  { displayName: 'New York', value: 'NY' },\r\n  { displayName: 'North Carolina', value: 'NC' },\r\n  { displayName: 'North Dakota', value: 'ND' },\r\n  { displayName: 'Ohio', value: 'OH' },\r\n  { displayName: 'Oklahoma', value: 'OK' },\r\n  { displayName: 'Oregon', value: 'OR' },\r\n  { displayName: 'Pennsylvania', value: 'PA' },\r\n  { displayName: 'Rhode Island', value: 'RI' },\r\n  { displayName: 'South Carolina', value: 'SC' },\r\n  { displayName: 'South Dakota', value: 'SD' },\r\n  { displayName: 'Tennessee', value: 'TN' },\r\n  { displayName: 'Texas', value: 'TX' },\r\n  { displayName: 'Utah', value: 'UT' },\r\n  { displayName: 'Vermont', value: 'VT' },\r\n  { displayName: 'Virginia', value: 'VA' },\r\n  { displayName: 'Washington', value: 'WA' },\r\n  { displayName: 'West Virginia', value: 'WV' },\r\n  { displayName: 'Wisconsin', value: 'WI' },\r\n  { displayName: 'Wyoming', value: 'WY' },\r\n\r\n  // { displayName: 'American Samoa', value: 'AS' },\r\n  // { displayName: 'Federated States of Micronesia', value: 'FM' },\r\n  // { displayName: 'Guam', value: 'GU' },\r\n  // { displayName: 'Marshall Islands', value: 'MH' },\r\n  // { displayName: 'Northern Mariana Islands', value: 'MP' },\r\n  // { displayName: 'Palau', value: 'PW' },\r\n  // { displayName: 'Puerto Rico', value: 'PR' },\r\n  // { displayName: 'Virgin Islands', value: 'VI' }\r\n]);\r\n","export * from './code';\r\nexport * from './enums';\r\nexport * from './us-state-codes';\r\n","import {\r\n  AfterViewInit, Component, EventEmitter, ElementRef, Input,\r\n  OnInit, OnDestroy, Output, ViewChild, Optional, ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgModel } from '@angular/forms';\r\n\r\nimport { ExitType, ExitEvent } from '@shared/interfaces';\r\nimport { ModelComponent } from '@shared/model.component';\r\nimport { InputMaskCatalog } from '@shared/input/input-mask-catalog';\r\nimport { InputMaskConfig } from '@shared/input/input-mask-config';\r\nimport { TextMaskConfig } from 'angular2-text-mask';\r\n\r\n@Component({\r\n  selector: 'sp-input',\r\n  templateUrl: './input-text.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: InputTextComponent,\r\n      multi: true\r\n    }\r\n  ],\r\n})\r\nexport class InputTextComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnDestroy {\r\n  static nameCounter = 0;\r\n\r\n  @Input() append: string;\r\n  @Input() autofocus?: boolean;\r\n  @Input() classNames: string;\r\n  @Input() disabled = false;\r\n  @Input() formatString = 'yyyy-MM-dd';\r\n\r\n  @Input() set group(value: string) { this._group = value; }\r\n  private _group: string;\r\n\r\n  @Input() guide?: boolean;\r\n  @Input() keepCharPositions?: boolean;\r\n  @Input() label: string;\r\n  // Mask properties\r\n  @Input() mask: Array<string | RegExp> | ((raw: string) => Array<string | RegExp>) | false = false; // false => no mask\r\n\r\n  @Input() set model(value: any) { this._model = value; }\r\n  private _model: any;\r\n\r\n  @Input() set modelType(value: string) { this._modelType = value; }\r\n  private _modelType: string;\r\n\r\n  @Input() name: string;\r\n  @Input() placeholder = '';\r\n  @Input() placeholderChar?: string;\r\n  @Input() prepend: string;\r\n  @Input() propertyName: string;\r\n  @Input() showMask?: boolean;\r\n  @Input() tooltip = false;\r\n  @Input() type = 'text';\r\n\r\n  @ViewChild('child') child: ElementRef;\r\n\r\n  @Output() blur = new EventEmitter();\r\n  @Output() focus = new EventEmitter();\r\n  @Output() onChange = new EventEmitter<string>();\r\n  @Output() onExit = new EventEmitter<ExitEvent>();\r\n  @Output() onTouched = new EventEmitter();\r\n\r\n  private accessorOnChange = (...args: any[]) => { };\r\n  private accessorOnTouched = (...args: any[]) => { };\r\n  private currentValue: string;\r\n  private editing: boolean;\r\n  private enteringEdit: boolean;\r\n  private inputEl: HTMLInputElement;\r\n  private isDestroyed = false;\r\n  public maskConfig: InputMaskConfig;\r\n  private  _maskType: string;\r\n  open = false;\r\n  private originalValue: string;\r\n  private previousValue: string = undefined;\r\n  textMask: TextMaskConfig = {mask : false};\r\n\r\n  constructor(\r\n    private inputMasks: InputMaskCatalog,\r\n    private changeDetector: ChangeDetectorRef,\r\n    @Optional() public modelContext?: ModelComponent) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.maskConfig = this.inputMasks.getMaskForType(this.maskType);\r\n    if (this.maskConfig) {\r\n      this.inputMasks.applyConfig(this, this.maskConfig);\r\n    }\r\n    this.name = (this.name || '') + '$' + InputTextComponent.nameCounter++;\r\n    // this.classNames = 'form-control ' + (this.classNames || '');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.inputEl = this.child.nativeElement;\r\n    if (this.autofocus) {\r\n      this.inputEl.focus();\r\n    }\r\n  }\r\n\r\n  /** Get the latest data-bound group. If not bound, get group from modelContext. */\r\n  get group(): string {\r\n    return this._group || (this.modelContext && this.modelContext.group);\r\n  }\r\n\r\n  /** Get the latest data-bound model. If not bound, get model from modelContext. */\r\n  get model(): any {\r\n    return this._model || (this.modelContext && this.modelContext.model);\r\n  }\r\n\r\n  /** Get the latest data-bound model type. If not bound, get model type from modelContext. */\r\n  get modelType(): string {\r\n    return this._modelType || (this.modelContext && this.modelContext.modelType);\r\n  }\r\n\r\n  get maskType(): string {\r\n    return this._maskType;\r\n  }\r\n\r\n  @Input()\r\n  set maskType(value: string) {\r\n    this._maskType = value;\r\n    if (!value) {\r\n      this.textMask = {mask : false};\r\n      this.detectChanges();\r\n      return;\r\n    }\r\n    this.maskConfig = this.inputMasks.getMaskForType(this.maskType);\r\n    if (this.maskConfig) {\r\n      this.inputMasks.applyConfig(this, this.maskConfig);\r\n      this.detectChanges();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.isDestroyed = true;\r\n    this.exit('destroyed');\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.currentValue = obj;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.accessorOnChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.accessorOnTouched = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n  private detectChanges() {\r\n    if (!this.isDestroyed) {\r\n      this.changeDetector.detectChanges();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit onExit after user exits control\r\n   * @param exitType {ExitType} How the user exited the control\r\n   */\r\n  exit(exitType: ExitType) {\r\n    // Auto-trim on exit; could add a NoTrim option if necessary.\r\n    const currentValuePreTrim = this.getValue();\r\n    const currentValue = typeof currentValuePreTrim === 'string'\r\n      ? (currentValuePreTrim || '').trim()\r\n      : currentValuePreTrim;\r\n    if (currentValuePreTrim !== currentValue) {\r\n      // update and announce the change;\r\n      this.onInput(currentValue);\r\n    }\r\n    this.onExit.emit({ exitType, isChanged: this.originalValue !== currentValue });\r\n    this.originalValue = currentValue;\r\n    this.detectChanges();\r\n  }\r\n\r\n  /** User pressed escape. Restores original value and exits */\r\n  escaped() {\r\n    // undo change\r\n    const currentValue = this.inputEl.value;\r\n    if (currentValue !== this.originalValue) {\r\n      this.onInput(this.originalValue);\r\n    }\r\n    this.exit('escapeKey');\r\n  }\r\n\r\n  onInput(value: string) {\r\n    if (this.originalValue == null) {\r\n      this.originalValue = this.getValue();\r\n    }\r\n    if (this.maskConfig) {\r\n      value =  this.maskConfig.toVm(value, this.modelType);\r\n    }\r\n\r\n    this.setValue(value);\r\n    this.accessorOnChange(this.getValue());\r\n    this.onChange.emit(this.getValue());\r\n    if (this.modelContext) {\r\n      this.modelContext.notifyOfModelChange();\r\n    }\r\n    this.detectChanges();\r\n  }\r\n\r\n  onFocus(): void {\r\n    // Prevent Angular for raising errors due to modified binding values between detection cycles\r\n    // by performing manual change detection during edit operations\r\n    this.changeDetector.detach();\r\n    this.focus.emit();\r\n    this.enteringEdit  = true;\r\n  }\r\n\r\n  onBlur(): void {\r\n    this.changeDetector.reattach();\r\n    this.editing  = false;\r\n    this.enteringEdit = false;\r\n    this.accessorOnTouched();\r\n    this.onTouched.emit();\r\n    this.blur.emit();\r\n    this.exit('blur');\r\n    this.open = false;\r\n  }\r\n\r\n  getValue(): string {\r\n    if (this.maskConfig) {\r\n      const formattedValue = this.maskConfig.toView(this.getValueInternal(), this.editing, this.formatString);\r\n      if (this.enteringEdit) {\r\n          this.editing = true; // Set editing after first value read\r\n          this.enteringEdit = false;\r\n      }\r\n      return formattedValue;\r\n    }\r\n    const val = this.getValueInternal();\r\n    return val != null ? val.toString() : null;\r\n  }\r\n\r\n  private getValueInternal(): string {\r\n    if (this.model && this.modelType && this.propertyName) {\r\n      return this.model[this.propertyName];\r\n    }\r\n\r\n    return this.currentValue;\r\n  }\r\n\r\n  setValue(value: string): void {\r\n    if (this.model && this.modelType && this.propertyName) {\r\n      this.model[this.propertyName] = value;\r\n    }\r\n\r\n    this.currentValue = value;\r\n  }\r\n}\r\n","import { AfterViewInit, EventEmitter, ElementRef, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { ModelComponent } from '@shared/model.component';\nimport { InputMaskCatalog } from '@shared/input/input-mask-catalog';\nvar InputTextComponent = /** @class */ (function () {\n    function InputTextComponent(inputMasks, changeDetector, modelContext) {\n        this.inputMasks = inputMasks;\n        this.changeDetector = changeDetector;\n        this.modelContext = modelContext;\n        this.disabled = false;\n        this.formatString = 'yyyy-MM-dd';\n        // Mask properties\n        this.mask = false; // false => no mask\n        this.placeholder = '';\n        this.tooltip = false;\n        this.type = 'text';\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.onChange = new EventEmitter();\n        this.onExit = new EventEmitter();\n        this.onTouched = new EventEmitter();\n        this.accessorOnChange = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n        };\n        this.accessorOnTouched = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n        };\n        this.isDestroyed = false;\n        this.open = false;\n        this.previousValue = undefined;\n        this.textMask = { mask: false };\n    }\n    Object.defineProperty(InputTextComponent.prototype, \"group\", {\n        /** Get the latest data-bound group. If not bound, get group from modelContext. */\n        get: function () {\n            return this._group || (this.modelContext && this.modelContext.group);\n        },\n        set: function (value) { this._group = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputTextComponent.prototype, \"model\", {\n        /** Get the latest data-bound model. If not bound, get model from modelContext. */\n        get: function () {\n            return this._model || (this.modelContext && this.modelContext.model);\n        },\n        set: function (value) { this._model = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputTextComponent.prototype, \"modelType\", {\n        /** Get the latest data-bound model type. If not bound, get model type from modelContext. */\n        get: function () {\n            return this._modelType || (this.modelContext && this.modelContext.modelType);\n        },\n        set: function (value) { this._modelType = value; },\n        enumerable: true,\n        configurable: true\n    });\n    InputTextComponent.prototype.ngOnInit = function () {\n        this.maskConfig = this.inputMasks.getMaskForType(this.maskType);\n        if (this.maskConfig) {\n            this.inputMasks.applyConfig(this, this.maskConfig);\n        }\n        this.name = (this.name || '') + '$' + InputTextComponent.nameCounter++;\n        // this.classNames = 'form-control ' + (this.classNames || '');\n    };\n    InputTextComponent.prototype.ngAfterViewInit = function () {\n        this.inputEl = this.child.nativeElement;\n        if (this.autofocus) {\n            this.inputEl.focus();\n        }\n    };\n    Object.defineProperty(InputTextComponent.prototype, \"maskType\", {\n        get: function () {\n            return this._maskType;\n        },\n        set: function (value) {\n            this._maskType = value;\n            if (!value) {\n                this.textMask = { mask: false };\n                this.detectChanges();\n                return;\n            }\n            this.maskConfig = this.inputMasks.getMaskForType(this.maskType);\n            if (this.maskConfig) {\n                this.inputMasks.applyConfig(this, this.maskConfig);\n                this.detectChanges();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    InputTextComponent.prototype.ngOnDestroy = function () {\n        this.isDestroyed = true;\n        this.exit('destroyed');\n    };\n    InputTextComponent.prototype.writeValue = function (obj) {\n        this.currentValue = obj;\n    };\n    InputTextComponent.prototype.registerOnChange = function (fn) {\n        this.accessorOnChange = fn;\n    };\n    InputTextComponent.prototype.registerOnTouched = function (fn) {\n        this.accessorOnTouched = fn;\n    };\n    InputTextComponent.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    InputTextComponent.prototype.detectChanges = function () {\n        if (!this.isDestroyed) {\n            this.changeDetector.detectChanges();\n        }\n    };\n    /**\n     * Emit onExit after user exits control\n     * @param exitType {ExitType} How the user exited the control\n     */\n    InputTextComponent.prototype.exit = function (exitType) {\n        // Auto-trim on exit; could add a NoTrim option if necessary.\n        var currentValuePreTrim = this.getValue();\n        var currentValue = typeof currentValuePreTrim === 'string'\n            ? (currentValuePreTrim || '').trim()\n            : currentValuePreTrim;\n        if (currentValuePreTrim !== currentValue) {\n            // update and announce the change;\n            this.onInput(currentValue);\n        }\n        this.onExit.emit({ exitType: exitType, isChanged: this.originalValue !== currentValue });\n        this.originalValue = currentValue;\n        this.detectChanges();\n    };\n    /** User pressed escape. Restores original value and exits */\n    InputTextComponent.prototype.escaped = function () {\n        // undo change\n        var currentValue = this.inputEl.value;\n        if (currentValue !== this.originalValue) {\n            this.onInput(this.originalValue);\n        }\n        this.exit('escapeKey');\n    };\n    InputTextComponent.prototype.onInput = function (value) {\n        if (this.originalValue == null) {\n            this.originalValue = this.getValue();\n        }\n        if (this.maskConfig) {\n            value = this.maskConfig.toVm(value, this.modelType);\n        }\n        this.setValue(value);\n        this.accessorOnChange(this.getValue());\n        this.onChange.emit(this.getValue());\n        if (this.modelContext) {\n            this.modelContext.notifyOfModelChange();\n        }\n        this.detectChanges();\n    };\n    InputTextComponent.prototype.onFocus = function () {\n        // Prevent Angular for raising errors due to modified binding values between detection cycles\n        // by performing manual change detection during edit operations\n        this.changeDetector.detach();\n        this.focus.emit();\n        this.enteringEdit = true;\n    };\n    InputTextComponent.prototype.onBlur = function () {\n        this.changeDetector.reattach();\n        this.editing = false;\n        this.enteringEdit = false;\n        this.accessorOnTouched();\n        this.onTouched.emit();\n        this.blur.emit();\n        this.exit('blur');\n        this.open = false;\n    };\n    InputTextComponent.prototype.getValue = function () {\n        if (this.maskConfig) {\n            var formattedValue = this.maskConfig.toView(this.getValueInternal(), this.editing, this.formatString);\n            if (this.enteringEdit) {\n                this.editing = true; // Set editing after first value read\n                this.enteringEdit = false;\n            }\n            return formattedValue;\n        }\n        var val = this.getValueInternal();\n        return val != null ? val.toString() : null;\n    };\n    InputTextComponent.prototype.getValueInternal = function () {\n        if (this.model && this.modelType && this.propertyName) {\n            return this.model[this.propertyName];\n        }\n        return this.currentValue;\n    };\n    InputTextComponent.prototype.setValue = function (value) {\n        if (this.model && this.modelType && this.propertyName) {\n            this.model[this.propertyName] = value;\n        }\n        this.currentValue = value;\n    };\n    InputTextComponent.nameCounter = 0;\n    return InputTextComponent;\n}());\nexport { InputTextComponent };\n","import { APP_VERSION } from './version';\r\nimport { Environment } from './environment.interface';\r\n\r\n// The file contents for the local MOCKING environment which runs with mock services rather than SurePayroll services\r\n// Build with the \"mock\" environment scripts\r\n\r\nexport const environment: Environment = {\r\n  production: false,\r\n  version: APP_VERSION,\r\n  env: 'mock',\r\n  // ECommerce web api (no trailing '/'), e.g\r\n  // 'https://my.prodserver.com',\r\n  apiRoot: 'http://localhost:5105',\r\n\r\n  /** You must run on port 5009 or 5015 if you turn mockServices:false **/\r\n\r\n  authTracing: false, // report authentication steps to the console\r\n  mockAuth: false, // mock authentication, even if mockServices is false; requires server-side changes\r\n  enableDeductions: true, // DELETE FROM CODEBASE WHEN DEDUCTIONS GOES LIVE.\r\n  enableMigration: true, // enable mock migration via button on Admin Console (testing purposes only!\r\n  mockServices: true, // loads in-memory-web-api and other mock services when true.\r\n  mockSpApiOnly: false, // mock SP API calls but ALL OTHER calls pass through\r\n  routerTracing: false, // Angular router reports all navigation events to the console\r\n\r\n  /*** IdentityServer (OIDC) endpoints ***/\r\n  oidcAuthRealm: 'https://devidentity.surepayroll.com',\r\n  oidcClientId: 'ecommerce',\r\n  oidcRedirectUri: 'oidc-callback',\r\n  oidcScope: 'document enrollment enrollment_api openid profile phone role permission tax tax_api cms_profile',\r\n\r\n  /*** SurePayroll API  (not ECommerce) root path. No trailing slash! ***/\r\n  spApiRoot: 'https://devcoreapi.surepayroll.com',\r\n\r\n  // Google Analytics Key\r\n  googleAnalyticsKey: 'UA-119769894-1',\r\n  // Ward's private key on loan to the project\r\n  googlePlacesApiUrl: 'https://maps.googleapis.com/maps/api/js?key=AIzaSyBl3MM25oNKAgODg9RzYYDqkiYNPQRNqY4&libraries=places',\r\n  // googlePlacesApiUrl: 'https://maps.googleapis.com/maps/api/js?client=gme-paychexinc&libraries=places',\r\n\r\n  // Google Tag Manager Key\r\n  googleTagManagerKey: 'GTM-T7N5RDJ',\r\n\r\n  // Sentry.io error reporting service\r\n  enableSentry: false,\r\n  // Sentry.io error reporting service URI\r\n  sentryUri: 'https://c87cb8b815ec4e9baf41916056886e0f@sentry.io/1262423',\r\n\r\n  // Pardot for handler uri\r\n  pardotFormHandlerUri: 'https://easy.surepayroll.com/l/35372/2019-01-17/skx4d3',\r\n\r\n  // Chat Live Agent Fields\r\n  chatConfig: {\r\n    BUTTON_ID: '5731b000000012J',\r\n    DEPLOYMENT_ID: '5721b0000004CEm',\r\n    ORGANIZATION_ID: '00D1b0000000kTv',\r\n    LIVEAGENT_SCRIPT_URL:\r\n      'https://c.la4-c2cs-dfw.salesforceliveagent.com/content/g/js/43.0/deployment.js',\r\n    CHAT_URL: 'https://d.la4-c2cs-dfw.salesforceliveagent.com/chat',\r\n    TRACING: true\r\n  },\r\n\r\n  // env specific link on Enrolled page - Sign in to your payroll account now\r\n  payrollLoginUrl: 'https://devsecure.surepayroll.local/SPF/Login/Auth.aspx'\r\n};\r\n\r\nif (environment.mockSpApiOnly) {\r\n  environment.mockServices = true; // Has to be true to mock the SP APIs.\r\n}\r\n\r\nif (!environment.production) {\r\n  console.log('ECommerce App Environment: ', environment);\r\n\r\n  const { hostname, port } = location;\r\n  if (\r\n    environment.mockServices !== true &&\r\n    hostname === 'localhost' &&\r\n    '5009|5015'.indexOf(port) < 0\r\n  ) {\r\n    throw new Error(\r\n      'You cannot run in localhost with mockServices:false EXCEPT on ports 5009 or 5015'\r\n    );\r\n  }\r\n}\r\n","export const APP_VERSION = '0.2.12';\r\n","/** True if running under e2e testing (e.g., launch URL ends `?e2e`) */\r\nexport const isE2E =  window.location.search.includes('e2e');\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map, shareReplay } from 'rxjs/operators';\r\n\r\nimport { Address, Employee, EmployeeType } from '@model';\r\nimport { EntitySelectors } from '../entity-selectors';\r\nimport { WellKnownRoutes } from '@core/well-known-routes';\r\n\r\nimport { getFullName } from '@utils';\r\n\r\n/** A ViewModel of the Employee's work and home addresses for tax purposes */\r\nexport class EmployeeTaxLocation {\r\n  /** id is Employee's id */\r\n  id: string;\r\n  link: string;\r\n  name: string;\r\n\r\n  isVerified: boolean;\r\n  isTaxesExcluded: boolean;\r\n\r\n  // homeAddress: Address;\r\n  homeAddressId: string;\r\n  isHomeAddressVerified: boolean;\r\n  homeAddressName: string;\r\n  homeLink: string;\r\n  homeState: string;\r\n  homeGeoCode: string;\r\n  homeSchoolDistrictCode?: number;\r\n  homePsdCode?: number;\r\n\r\n  // workAddress: Address;\r\n  workAddressId: string;\r\n  isWorkAddressVerified: boolean;\r\n  workAddressName: string;\r\n  workLink: string;\r\n  workState: string;\r\n  workGeoCode: string;\r\n  workSchoolDistrictCode?: number;\r\n  workPsdCode?: number;\r\n\r\n  constructor() { }\r\n\r\n  static create(ee: Employee, addresses: Address[]): EmployeeTaxLocation {\r\n    const homeId = ee.homeAddressId;\r\n    const home = Address.create(\r\n      homeId ? addresses.find(addr => addr.id === ee.homeAddressId) : undefined\r\n    );\r\n    const workId = ee.workAddressId;\r\n    const work = Address.create(\r\n      workId ? addresses.find(addr => addr.id === ee.workAddressId) : undefined\r\n    );\r\n    const eeLink = `${WellKnownRoutes.Employees}/${ee.id}`;\r\n    const isExcludedFromTaxes = this.isEmployeeTaxExcluded(ee);\r\n\r\n    // Don't exclusively trust the isVerified property as that can potentially be set erroneously\r\n    const isHomeAddressVerified = home.isVerified && home.geoCode != null && home.geoCode.length !== 0;\r\n    const isWorkAddressVerified = work.isVerified && work.geoCode != null && work.geoCode.length !== 0;\r\n\r\n    return {\r\n      /** id is Employee's id */\r\n      id: ee.id,\r\n      link: eeLink,\r\n      name: getFullName(ee),\r\n\r\n      isVerified: isWorkAddressVerified && isHomeAddressVerified,\r\n      isTaxesExcluded: isExcludedFromTaxes,\r\n\r\n      // homeAddress: home,\r\n      homeAddressId: home.id,\r\n      isHomeAddressVerified: isHomeAddressVerified,\r\n      homeAddressName: home.toString(),\r\n      homeLink: eeLink + '/personal',\r\n      homeState: home.state,\r\n      homeGeoCode: home.geoCode,\r\n      homeSchoolDistrictCode: home.schoolDistrictCode,\r\n      homePsdCode: home.psdCode,\r\n\r\n      // workAddress: work,\r\n      workAddressId: workId,\r\n      isWorkAddressVerified: isWorkAddressVerified,\r\n      workAddressName: work.toString(),\r\n      workLink: eeLink + '/employment',\r\n      workState: work.state,\r\n      workGeoCode: work.geoCode,\r\n      workSchoolDistrictCode: work.schoolDistrictCode,\r\n      workPsdCode: work.psdCode\r\n    } as EmployeeTaxLocation;\r\n  }\r\n\r\n  private static isEmployeeTaxExcluded(ee: Employee): boolean {\r\n    return ee.employeeType === EmployeeType.Contractor;\r\n  }\r\n}\r\n\r\n/**\r\n * Hash of the states for which taxes should be collected.\r\n * The values are the EE state tax calculation inputs for each EE in that state.\r\n * These are states in which an EE works or lives.\r\n */\r\nexport interface EmployeeTaxLocationsByState {\r\n  [state: string]: EmployeeTaxLocation[];\r\n}\r\n\r\n/**\r\n * Hash of the states for which we collect Company-level state tax information.\r\n * The states are the keys.\r\n * The values are the count of EEs working or living in that state.\r\n * The count will be zero when the Company has a location in that state\r\n * but no EE lives or works in that location or any other location in that state.\r\n */\r\nexport interface CompanyTaxStateEmployeeCounts {\r\n  [state: string]: number;\r\n}\r\n\r\n/** Hash of work address and the EEs working there */\r\nexport interface CompanyLocationEmployees {\r\n  [addressId: string]: {\r\n    address: Address;\r\n    employees: Employee[];\r\n  };\r\n}\r\n\r\n/**\r\n * Creates observables Address, Employee, and Company information that\r\n * drives how we calculate U.S. State taxes for the EEs who live and work in those states.\r\n * These observables also help determine the State-specific documents that must be signed.\r\n * And they reveal which addresses are associated with an EE and, therefore, cannot be removed.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class TaxLocationService {\r\n  /**\r\n   * Observable of array holding each Employee's work and home address for state tax purposes\r\n   */\r\n  employeeTaxLocations$: Observable<EmployeeTaxLocation[]>;\r\n\r\n  /**\r\n   * Observable of a hash of the states in which an EE lives or works.\r\n   * The keys are the states.\r\n   * The values are arrays of EE work and home address (EmployeeTaxLocation) in that state.\r\n   */\r\n  employeeTaxLocationsByState$: Observable<EmployeeTaxLocationsByState>;\r\n\r\n\r\n  /** States in which tax will be owed and paid because an EE works or lives in that state */\r\n  employeeTaxStates$: Observable<string[]>;\r\n\r\n  /**\r\n   * Observable of the states in which we collect State Tax information\r\n   * because the Company has a location in that state or an EE living in that state.\r\n   */\r\n  companyTaxStates$: Observable<string[]>;\r\n\r\n  /**\r\n   * Observable of the addresses the company contains\r\n   */\r\n  companyLocations$: Observable<Address[]>;\r\n\r\n  /**\r\n   * Observable of the count of EEs in each state with a work location or an EE home address\r\n   * We collect State Tax information about these states.\r\n   * This observable tells us how many employees live or work in that state.\r\n   * Could be zero if a company location in the state has no EEs working or living there\r\n   */\r\n  companyTaxStateEmployeeCounts$: Observable<CompanyTaxStateEmployeeCounts>;\r\n\r\n  constructor(private entitySelectors: EntitySelectors) {\r\n    this.initializeObservables();\r\n  }\r\n\r\n  initializeObservables() {\r\n\r\n    // Addresses that are active and have a U.S. state\r\n    const addresses$ = this.entitySelectors.address.entities$.pipe(\r\n      map(addrs => addrs.filter(a => !a.isRemoved && a.state)),\r\n      shareReplay(1)\r\n    );\r\n\r\n    // Employees that are \"live\" (not removed)\r\n    const employees$ = this.entitySelectors.employee.entities$.pipe(\r\n      map(ees => ees.filter(ee => !ee.isRemoved)),\r\n      shareReplay(1)\r\n    );\r\n\r\n    // Work & home addresses for all live EEs\r\n    this.employeeTaxLocations$ = combineLatest(\r\n      addresses$,\r\n      employees$\r\n    ).pipe(\r\n      map(([addrs, ees]) =>\r\n        addrs == null || addrs.length === 0 ||\r\n          ees == null || ees.length === 0\r\n          ? [] : ees.map(ee => EmployeeTaxLocation.create(ee, addrs))),\r\n      shareReplay(1)\r\n    );\r\n\r\n    // Hash of states with arrays of EE work/home address in that state\r\n    this.employeeTaxLocationsByState$ = this.employeeTaxLocations$.pipe(\r\n      map(eeInputs => {\r\n        return eeInputs.reduce(\r\n          (acc, input) => {\r\n            updateAcc(input.homeState);\r\n            updateAcc(input.workState);\r\n            return acc;\r\n\r\n            function updateAcc(stateName: string) {\r\n              if (!stateName) {\r\n                return; // ignore a no-state address\r\n              }\r\n              const stateArray = acc[stateName];\r\n              if (stateArray) {\r\n                if (-1 === stateArray.indexOf(input)) {\r\n                  stateArray.push(input);\r\n                }\r\n              } else {\r\n                acc[stateName] = [input];\r\n              }\r\n              return acc;\r\n            }\r\n          },\r\n          {} as EmployeeTaxLocationsByState\r\n        );\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n\r\n    // The states where an EE is taxed, sorted alphabetically\r\n    this.employeeTaxStates$ = this.employeeTaxLocationsByState$.pipe(\r\n      map(locs => Object.keys(locs).sort()),\r\n      shareReplay(1)\r\n    );\r\n\r\n    // The company's work locations\r\n    this.companyLocations$ = addresses$.pipe(map(addrs => addrs.filter(a => !a.isHome)));\r\n\r\n    // The list of states in which the Company has an address or an EE has a home address.\r\n    this.companyTaxStates$ = addresses$.pipe(\r\n      map(addresses => addresses.reduce((acc, address) => {\r\n        if (!acc.includes(address.state)) { acc.push(address.state); }\r\n        return acc;\r\n      }, []).sort()),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n}\r\n","import { combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Address, EmployeeType } from '@model';\nimport { EntitySelectors } from '../entity-selectors';\nimport { WellKnownRoutes } from '@core/well-known-routes';\nimport { getFullName } from '@utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../entity-selectors\";\n/** A ViewModel of the Employee's work and home addresses for tax purposes */\nvar EmployeeTaxLocation = /** @class */ (function () {\n    function EmployeeTaxLocation() {\n    }\n    EmployeeTaxLocation.create = function (ee, addresses) {\n        var homeId = ee.homeAddressId;\n        var home = Address.create(homeId ? addresses.find(function (addr) { return addr.id === ee.homeAddressId; }) : undefined);\n        var workId = ee.workAddressId;\n        var work = Address.create(workId ? addresses.find(function (addr) { return addr.id === ee.workAddressId; }) : undefined);\n        var eeLink = WellKnownRoutes.Employees + \"/\" + ee.id;\n        var isExcludedFromTaxes = this.isEmployeeTaxExcluded(ee);\n        // Don't exclusively trust the isVerified property as that can potentially be set erroneously\n        var isHomeAddressVerified = home.isVerified && home.geoCode != null && home.geoCode.length !== 0;\n        var isWorkAddressVerified = work.isVerified && work.geoCode != null && work.geoCode.length !== 0;\n        return {\n            /** id is Employee's id */\n            id: ee.id,\n            link: eeLink,\n            name: getFullName(ee),\n            isVerified: isWorkAddressVerified && isHomeAddressVerified,\n            isTaxesExcluded: isExcludedFromTaxes,\n            // homeAddress: home,\n            homeAddressId: home.id,\n            isHomeAddressVerified: isHomeAddressVerified,\n            homeAddressName: home.toString(),\n            homeLink: eeLink + '/personal',\n            homeState: home.state,\n            homeGeoCode: home.geoCode,\n            homeSchoolDistrictCode: home.schoolDistrictCode,\n            homePsdCode: home.psdCode,\n            // workAddress: work,\n            workAddressId: workId,\n            isWorkAddressVerified: isWorkAddressVerified,\n            workAddressName: work.toString(),\n            workLink: eeLink + '/employment',\n            workState: work.state,\n            workGeoCode: work.geoCode,\n            workSchoolDistrictCode: work.schoolDistrictCode,\n            workPsdCode: work.psdCode\n        };\n    };\n    EmployeeTaxLocation.isEmployeeTaxExcluded = function (ee) {\n        return ee.employeeType === EmployeeType.Contractor;\n    };\n    return EmployeeTaxLocation;\n}());\nexport { EmployeeTaxLocation };\n/**\n * Creates observables Address, Employee, and Company information that\n * drives how we calculate U.S. State taxes for the EEs who live and work in those states.\n * These observables also help determine the State-specific documents that must be signed.\n * And they reveal which addresses are associated with an EE and, therefore, cannot be removed.\n */\nvar TaxLocationService = /** @class */ (function () {\n    function TaxLocationService(entitySelectors) {\n        this.entitySelectors = entitySelectors;\n        this.initializeObservables();\n    }\n    TaxLocationService.prototype.initializeObservables = function () {\n        // Addresses that are active and have a U.S. state\n        var addresses$ = this.entitySelectors.address.entities$.pipe(map(function (addrs) { return addrs.filter(function (a) { return !a.isRemoved && a.state; }); }), shareReplay(1));\n        // Employees that are \"live\" (not removed)\n        var employees$ = this.entitySelectors.employee.entities$.pipe(map(function (ees) { return ees.filter(function (ee) { return !ee.isRemoved; }); }), shareReplay(1));\n        // Work & home addresses for all live EEs\n        this.employeeTaxLocations$ = combineLatest(addresses$, employees$).pipe(map(function (_a) {\n            var addrs = _a[0], ees = _a[1];\n            return addrs == null || addrs.length === 0 ||\n                ees == null || ees.length === 0\n                ? [] : ees.map(function (ee) { return EmployeeTaxLocation.create(ee, addrs); });\n        }), shareReplay(1));\n        // Hash of states with arrays of EE work/home address in that state\n        this.employeeTaxLocationsByState$ = this.employeeTaxLocations$.pipe(map(function (eeInputs) {\n            return eeInputs.reduce(function (acc, input) {\n                updateAcc(input.homeState);\n                updateAcc(input.workState);\n                return acc;\n                function updateAcc(stateName) {\n                    if (!stateName) {\n                        return; // ignore a no-state address\n                    }\n                    var stateArray = acc[stateName];\n                    if (stateArray) {\n                        if (-1 === stateArray.indexOf(input)) {\n                            stateArray.push(input);\n                        }\n                    }\n                    else {\n                        acc[stateName] = [input];\n                    }\n                    return acc;\n                }\n            }, {});\n        }), shareReplay(1));\n        // The states where an EE is taxed, sorted alphabetically\n        this.employeeTaxStates$ = this.employeeTaxLocationsByState$.pipe(map(function (locs) { return Object.keys(locs).sort(); }), shareReplay(1));\n        // The company's work locations\n        this.companyLocations$ = addresses$.pipe(map(function (addrs) { return addrs.filter(function (a) { return !a.isHome; }); }));\n        // The list of states in which the Company has an address or an EE has a home address.\n        this.companyTaxStates$ = addresses$.pipe(map(function (addresses) { return addresses.reduce(function (acc, address) {\n            if (!acc.includes(address.state)) {\n                acc.push(address.state);\n            }\n            return acc;\n        }, []).sort(); }), shareReplay(1));\n    };\n    TaxLocationService.ngInjectableDef = i0.defineInjectable({ factory: function TaxLocationService_Factory() { return new TaxLocationService(i0.inject(i1.EntitySelectors)); }, token: TaxLocationService, providedIn: \"root\" });\n    return TaxLocationService;\n}());\nexport { TaxLocationService };\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environment';\r\n\r\nimport { TaxRate } from './tax-models';\r\n\r\n/**\r\n * Gets tax rate data\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class TaxRatesService {\r\n    private cachedTaxRates: TaxRate[] = null;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getTaxRates(): Observable<TaxRate[]> {\r\n        if (this.cachedTaxRates != null) {\r\n            return of(this.cachedTaxRates);\r\n        }\r\n\r\n        const url = environment.spApiRoot + '/taxapi/taxes/suirates';\r\n        return this.http.get<TaxRate[]>(url).pipe(\r\n            map(e => {\r\n                this.cachedTaxRates = e;\r\n                return e;\r\n            }));\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '@environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/**\n * Gets tax rate data\n */\nvar TaxRatesService = /** @class */ (function () {\n    function TaxRatesService(http) {\n        this.http = http;\n        this.cachedTaxRates = null;\n    }\n    TaxRatesService.prototype.getTaxRates = function () {\n        var _this = this;\n        if (this.cachedTaxRates != null) {\n            return of(this.cachedTaxRates);\n        }\n        var url = environment.spApiRoot + '/taxapi/taxes/suirates';\n        return this.http.get(url).pipe(map(function (e) {\n            _this.cachedTaxRates = e;\n            return e;\n        }));\n    };\n    TaxRatesService.ngInjectableDef = i0.defineInjectable({ factory: function TaxRatesService_Factory() { return new TaxRatesService(i0.inject(i1.HttpClient)); }, token: TaxRatesService, providedIn: \"root\" });\n    return TaxRatesService;\n}());\nexport { TaxRatesService };\n","import { areDifferent } from '@core/utils';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { EntityCacheDispatcher } from 'ngrx-data';\r\n\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { concatMap, map, first } from 'rxjs/operators';\r\nimport { tag } from 'rxjs-spy/operators/tag';\r\n\r\nimport { changeItemFactory as cif } from '@utils';\r\nimport { CompanyTax, EmployeeTax, TaxTypeCode } from '@model';\r\nimport { CompanyTaxService } from '@entity/entity-services/company-tax.service';\r\nimport { EmployeeTaxService} from '@entity/entity-services/employee-tax.service';\r\nimport { environment } from '@environment';\r\n\r\nimport {\r\n    EMPTY_TAXES, ICompanyStateTaxes, ICompanyFederalTaxes, IEmployeeTaxes,\r\n    TaxSavePackage, ITaxes, TaxBehaviorWrapper\r\n} from './tax-models';\r\n\r\nimport { SessionService } from '@session';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TaxSaveHelperService {\r\n\r\n    private saveTaxUrl = environment.apiRoot + '/save/taxes';\r\n\r\n    constructor(\r\n        private companyTaxService: CompanyTaxService,\r\n        private employeeTaxService: EmployeeTaxService,\r\n        private entityCacheDispatcher: EntityCacheDispatcher,\r\n        private sessionService: SessionService\r\n    ) { }\r\n\r\n    /**\r\n     * Merges Employee Taxes.\r\n     * It looks at cached taxes and adds missing taxes, updates changed taxes and removes taxes that are no longer present.\r\n     * The result is a package with the 3 CUD operations.\r\n     *\r\n     * @param {IEmployeeTaxes} employeesTaxes the collection of taxes with there associated employees.\r\n     */\r\n    public getEmployeeSavePack(employeesTaxes: IEmployeeTaxes): Observable<TaxSavePackage<EmployeeTax>> {\r\n        return this.employeeTaxService.entities$.pipe(\r\n            first(),\r\n            map(allCachedEmployeeTaxes => {\r\n                // Get all the current employee taxes\r\n                const employeeTaxes: TaxBehaviorWrapper<EmployeeTax>[] = employeesTaxes.taxes;\r\n                const employeeCachedTaxes = allCachedEmployeeTaxes.filter(e => e.employeeId === employeesTaxes.employeeLocation.id);\r\n\r\n                const empSavePack = this.buildEmployeeSavePack(employeeTaxes, employeeCachedTaxes);\r\n\r\n                return empSavePack;\r\n            }),\r\n            tag('getEmployeeSavePack')\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Merges Company Federal Taxes.\r\n     * It looks at cached taxes and adds missing taxes, updates changed taxes and removes taxes that are no longer present.\r\n     * The result is a package with the 3 CUD operations.\r\n     *\r\n     * @param {ICompanyFederalTaxes} companyFederalTaxes the company federal taxes view model\r\n     * @param {ITaxes} taxes all the taxes\r\n     */\r\n    public getCompanyFederalSavePack(companyFederalTaxes: ICompanyFederalTaxes, taxes: ITaxes)\r\n        : Observable<TaxSavePackage<CompanyTax>> {\r\n        return combineLatest(this.sessionService.currentCompany$,\r\n            this.companyTaxService.entities$,\r\n            this.employeeTaxService.entities$).pipe(\r\n                first(),\r\n                map(([company, allCachedCompanyTaxes]) => {\r\n                    const companyTaxes = companyFederalTaxes.taxes;\r\n                    const cachedCompanyFederalTaxes = allCachedCompanyTaxes.filter(e => e.taxTypeCode === TaxTypeCode.Federal);\r\n\r\n                    // Get all available company taxes with updated ones taking priority then build the EIN map\r\n                    const allCompanyTaxes = this.mergeAndFlattenAllCompanyTaxes(companyTaxes, taxes);\r\n                    const einMap = this.buildTaxesEinMap(company.fein, allCompanyTaxes);\r\n\r\n                    // Set the EINs of the taxes\r\n                    this.setEinValues(companyTaxes, einMap);\r\n\r\n                    const companySavePack = this.buildCompanySavePack(companyTaxes, cachedCompanyFederalTaxes);\r\n\r\n                    return companySavePack;\r\n                }),\r\n                tag('getCompanyFederalSavePack')\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Merges Company State Taxes.\r\n     * It looks at cached taxes and adds missing taxes, updates changed taxes and removes taxes that are no longer present.\r\n     * The result is a package with the 3 CUD operations.\r\n     *\r\n     * @param {ICompanyStateTaxes} companyStateTaxes the company federal taxes view model\r\n     * @param {ITaxes} taxes all the taxes\r\n     */\r\n    public getCompanyStateSavePack(companyStateTaxes: ICompanyStateTaxes, taxes: ITaxes)\r\n        : Observable<TaxSavePackage<CompanyTax>> {\r\n        return combineLatest(this.sessionService.currentCompany$,\r\n            this.companyTaxService.entities$).pipe(\r\n                first(),\r\n                map(([company, allCachedCompanyTaxes]) => {\r\n                    const companyTaxes = companyStateTaxes.taxes;\r\n                    const cachedCompanyStateTaxes = allCachedCompanyTaxes.filter(e =>\r\n                        e.taxTypeCode !== TaxTypeCode.Federal && e.stateCode === companyStateTaxes.state);\r\n\r\n                    // Get all available company taxes with updated ones taking priority then build the EIN map\r\n                    const allCompanyTaxes = this.mergeAndFlattenAllCompanyTaxes(companyTaxes, taxes);\r\n                    const einMap = this.buildTaxesEinMap(company.fein, allCompanyTaxes);\r\n\r\n                    // Set the EINs of the taxes\r\n                    this.setEinValues(companyTaxes, einMap);\r\n\r\n                    const companySavePack = this.buildCompanySavePack(companyTaxes, cachedCompanyStateTaxes);\r\n\r\n                    return companySavePack;\r\n                }),\r\n                tag('getCompanyStateSavePack')\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Merges the Taxes ViewModel.\r\n     * It looks at cached taxes and adds missing taxes, updates changed taxes and removes taxes that are no longer present.\r\n     * The result is a package containing 2 packages (EE and Company taxes), each with the 3 CUD operations.\r\n     *\r\n     * @param {ITaxes} taxes all the taxes\r\n     */\r\n    public getAllTaxesSavePack(taxes: ITaxes): Observable<TaxSavePackage<EmployeeTax | CompanyTax>[]> {\r\n        if (taxes == null || taxes === EMPTY_TAXES) {\r\n            return of([]);\r\n        }\r\n\r\n        return combineLatest(this.sessionService.currentCompany$,\r\n            this.companyTaxService.entities$,\r\n            this.employeeTaxService.entities$).pipe(\r\n                first(),\r\n                map(([company, allCachedCompanyTaxes, allCachedEmployeeTaxes]) => {\r\n                    // Get all the company and employee taxes\r\n                    const allCompanyTaxes: TaxBehaviorWrapper<CompanyTax>[] = taxes.\r\n                        companyFederalTaxes.taxes.concat(taxes.companyStateTaxes.reduce((acc, stateTaxes) => {\r\n                            stateTaxes.taxes.forEach(t => {\r\n                                acc.push(t);\r\n                            });\r\n                            return acc;\r\n                        }, []));\r\n\r\n                    const allEmployeeTaxes: TaxBehaviorWrapper<EmployeeTax>[] = taxes.employeeTaxes.reduce((acc, empTaxes) => {\r\n                        empTaxes.taxes.forEach(t => {\r\n                            acc.push(t);\r\n                        });\r\n                        return acc;\r\n                    }, []);\r\n\r\n                    // Ein map\r\n                    const einMap = this.buildTaxesEinMap(company.fein, allCompanyTaxes);\r\n\r\n                    // Set the EINs of the taxes\r\n                    this.setEinValues(allCompanyTaxes, einMap);\r\n\r\n                    const empSavePack = this.buildEmployeeSavePack(allEmployeeTaxes, allCachedEmployeeTaxes);\r\n                    const companySavePack = this.buildCompanySavePack(allCompanyTaxes, allCachedCompanyTaxes);\r\n\r\n                    return [companySavePack, empSavePack];\r\n                }),\r\n                tag('getAllTaxesSavePack')\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Saves a collection of TaxSavePackage[] unless account is readOnly\r\n     * @param packs An array of TaxSavePackages\r\n     */\r\n    public saveTaxPacks(packs: TaxSavePackage<CompanyTax | EmployeeTax>[]): Observable<boolean> {\r\n      return this.sessionService.readOnly$.pipe(\r\n        first(),\r\n        concatMap(readOnly => readOnly ? of(true) : this.saveTaxPacks_(packs))\r\n      );\r\n    }\r\n\r\n    private saveTaxPacks_(packs: TaxSavePackage<CompanyTax | EmployeeTax>[]): Observable<boolean> {\r\n      const changes = <any[]>[];\r\n      packs.forEach(pack => {\r\n        if (!!pack.newTaxes && pack.newTaxes.length > 0) {\r\n          changes.push(cif.add(pack.modelType, pack.newTaxes));\r\n        }\r\n\r\n        if (!!pack.updatedTaxes && pack.updatedTaxes.length > 0) {\r\n          changes.push(cif.update(pack.modelType, pack.updatedTaxes));\r\n        }\r\n\r\n        if (!!pack.removedTaxes && pack.removedTaxes.length > 0) {\r\n          // isRemoved is a special remove\r\n          const actuallyRemoved = pack.removedTaxes.reduce((acc, element) => {\r\n            if (element.isRemoved === false) {\r\n              element.isRemoved = true;\r\n              acc.push(element);\r\n            }\r\n            return acc;\r\n          }, []);\r\n\r\n          if (actuallyRemoved.length > 0) {\r\n            changes.push(cif.update(pack.modelType, actuallyRemoved));\r\n          }\r\n        }\r\n      });\r\n\r\n      return changes.length === 0\r\n        ? of(true)\r\n        : this.entityCacheDispatcher.saveEntities({ changes }, this.saveTaxUrl).pipe(\r\n          tag('saveTaxPacks'),\r\n          map(() => true)\r\n        );\r\n    }\r\n\r\n    private buildCompanySavePack(companyTaxes: TaxBehaviorWrapper<CompanyTax>[], cachedCompanyTaxes: CompanyTax[])\r\n        : TaxSavePackage<CompanyTax> {\r\n        const newTaxes: CompanyTax[] = [];\r\n        const updatedTaxes: CompanyTax[] = [];\r\n        const removeTaxes: CompanyTax[] = [];\r\n\r\n        // Company taxes\r\n        // Merge the taxes with there cached counterpart or create new cached taxes\r\n        companyTaxes.forEach(companyTax => {\r\n            const modifiedTax = companyTax.getTax();\r\n            const cachedCompanyStateTax = cachedCompanyTaxes.find(t => t.id === modifiedTax.id);\r\n\r\n            // General company tax rules\r\n            this.interceptCompanyTaxEdit(modifiedTax, cachedCompanyStateTax);\r\n\r\n            if (cachedCompanyStateTax) {\r\n                // Update tax\r\n                const uTax = Object.assign({}, cachedCompanyStateTax, modifiedTax, {\r\n                    id: cachedCompanyStateTax.id,\r\n                    companyId: cachedCompanyStateTax.companyId,\r\n                    mtsTaxCode: cachedCompanyStateTax.mtsTaxCode\r\n                });\r\n\r\n                if (areDifferent(uTax, cachedCompanyStateTax, 'Company Tax')) {\r\n                    updatedTaxes.push(uTax);\r\n                }\r\n            } else {\r\n                // Add new tax\r\n                newTaxes.push(modifiedTax);\r\n            }\r\n        });\r\n\r\n        // Taxes that are no longer needed, removed them\r\n        cachedCompanyTaxes\r\n            .filter(t => companyTaxes.every(upt => upt.id !== t.id))\r\n            .forEach(t => removeTaxes.push(t));\r\n\r\n        return {\r\n            modelType: 'CompanyTax',\r\n            newTaxes: newTaxes,\r\n            updatedTaxes: updatedTaxes,\r\n            removedTaxes: removeTaxes\r\n        };\r\n    }\r\n\r\n    private buildEmployeeSavePack(employeeTaxes: TaxBehaviorWrapper<EmployeeTax>[], cachedEmployeeTaxes: EmployeeTax[])\r\n        : TaxSavePackage<EmployeeTax> {\r\n        const newTaxes: EmployeeTax[] = [];\r\n        const updatedTaxes: EmployeeTax[] = [];\r\n        const removeTaxes: EmployeeTax[] = [];\r\n\r\n        employeeTaxes.forEach(employeeTax => {\r\n            const modifiedTax = employeeTax.getTax();\r\n            const cachedEmployeeTax = cachedEmployeeTaxes.find(t => t.id === modifiedTax.id);\r\n\r\n            // General company tax rules\r\n            this.interceptEmployeeTaxEdit(modifiedTax, cachedEmployeeTax);\r\n\r\n            if (cachedEmployeeTax) {\r\n                // Update tax\r\n                const uTax = Object.assign({}, cachedEmployeeTax, modifiedTax, {\r\n                    id: cachedEmployeeTax.id,\r\n                    employeeId: cachedEmployeeTax.employeeId,\r\n                    companyId: cachedEmployeeTax.companyId,\r\n                    mtsTaxCode: cachedEmployeeTax.mtsTaxCode\r\n                });\r\n\r\n                if (areDifferent(uTax, cachedEmployeeTax)) {\r\n                    updatedTaxes.push(uTax);\r\n                }\r\n            } else {\r\n                // Add new tax\r\n                newTaxes.push(modifiedTax);\r\n            }\r\n        });\r\n\r\n        // Taxes that are no longer needed, removed them\r\n        cachedEmployeeTaxes\r\n            .filter(t => employeeTaxes.every(upt => upt.id !== t.id))\r\n            .forEach(t => removeTaxes.push(t));\r\n\r\n        return {\r\n            modelType: 'EmployeeTax',\r\n            newTaxes: newTaxes,\r\n            updatedTaxes: updatedTaxes,\r\n            removedTaxes: removeTaxes\r\n        };\r\n    }\r\n\r\n    private interceptCompanyTaxEdit(newVal: CompanyTax, oldVal: CompanyTax) {\r\n        if (newVal.appliedForEin) { newVal.ein = ''; }\r\n\r\n        newVal.isRemoved = false;\r\n    }\r\n\r\n    private interceptEmployeeTaxEdit(newVal: EmployeeTax, oldVal: EmployeeTax) {\r\n        newVal.isRemoved = false;\r\n    }\r\n\r\n    private mergeAndFlattenAllCompanyTaxes(otherTaxes: TaxBehaviorWrapper<CompanyTax>[], taxes: ITaxes): TaxBehaviorWrapper<CompanyTax>[] {\r\n        const allTaxesWithBehaviors = taxes.companyFederalTaxes.taxes.concat(taxes.companyStateTaxes.reduce((acc, stateTaxes) => {\r\n            stateTaxes.taxes.forEach(t => {\r\n                acc.push(t);\r\n            });\r\n            return acc;\r\n        }, []));\r\n\r\n        return allTaxesWithBehaviors.reduce((acc, tax) => {\r\n            if (acc.every(t => t.id !== tax.id)) {\r\n                acc.push(tax);\r\n            }\r\n\r\n            return acc;\r\n        }, otherTaxes.slice());\r\n    }\r\n\r\n    private setEinValues(taxes: TaxBehaviorWrapper<CompanyTax>[], einMap: { [mtsCode: string]: IEinMapVal }): any {\r\n        taxes.forEach(t => {\r\n            const einVal = einMap[t.mtsTaxCode];\r\n            if (einVal != null) {\r\n                t.ein = einVal.ein;\r\n                t.appliedForEin = einVal.appliedForEin;\r\n            }\r\n        });\r\n    }\r\n\r\n    private buildTaxesEinMap(fein: string, allCompanyTaxes: TaxBehaviorWrapper<CompanyTax>[])\r\n        : { [mtsCode: string]: IEinMapVal } {\r\n\r\n        const dependentTaxes: TaxBehaviorWrapper<CompanyTax>[] = [];\r\n\r\n        // These taxes are the correct ein codes based on the useEINFromCode property\r\n        const mainTaxEinMap: { [mtsCode: string]: IEinMapVal } = {};\r\n\r\n        // Seed root EINs, either we know them or they do not depend on any other tax (root)\r\n        allCompanyTaxes.forEach(companyTax => {\r\n            if (companyTax.taxTypeCode === TaxTypeCode.Federal) {\r\n                mainTaxEinMap[companyTax.mtsTaxCode] = { ein: fein, appliedForEin: false };\r\n                return;\r\n            }\r\n\r\n            if (companyTax.behavior.useEINFromCode == null) {\r\n                mainTaxEinMap[companyTax.mtsTaxCode] = { ein: companyTax.ein, appliedForEin: companyTax.appliedForEin };\r\n                return;\r\n            }\r\n\r\n            dependentTaxes.push(companyTax);\r\n        });\r\n\r\n        // Now for dependent taxes, other taxes that are non root\r\n        const dependentTaxEinMap: { [mtsCode: string]: IEinMapVal } = {};\r\n        dependentTaxes.forEach(dependentTax => {\r\n            const mainTax = mainTaxEinMap[dependentTax.behavior.useEINFromCode] || dependentTax;\r\n            dependentTaxEinMap[dependentTax.mtsTaxCode] = { ein: mainTax.ein, appliedForEin: mainTax.appliedForEin };\r\n        });\r\n\r\n        return Object.assign(mainTaxEinMap, dependentTaxEinMap);\r\n    }\r\n}\r\n\r\ninterface IEinMapVal {\r\n    ein: string;\r\n    appliedForEin: boolean;\r\n}\r\n","import { areDifferent } from '@core/utils';\nimport { EntityCacheDispatcher } from 'ngrx-data';\nimport { combineLatest, of } from 'rxjs';\nimport { concatMap, map, first } from 'rxjs/operators';\nimport { tag } from 'rxjs-spy/operators/tag';\nimport { changeItemFactory as cif } from '@utils';\nimport { TaxTypeCode } from '@model';\nimport { CompanyTaxService } from '@entity/entity-services/company-tax.service';\nimport { EmployeeTaxService } from '@entity/entity-services/employee-tax.service';\nimport { environment } from '@environment';\nimport { EMPTY_TAXES } from './tax-models';\nimport { SessionService } from '@session';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../store/entity/entity-services/company-tax.service\";\nimport * as i2 from \"../../../store/entity/entity-services/employee-tax.service\";\nimport * as i3 from \"ngrx-data\";\nimport * as i4 from \"../../../store/session/session.service\";\nvar TaxSaveHelperService = /** @class */ (function () {\n    function TaxSaveHelperService(companyTaxService, employeeTaxService, entityCacheDispatcher, sessionService) {\n        this.companyTaxService = companyTaxService;\n        this.employeeTaxService = employeeTaxService;\n        this.entityCacheDispatcher = entityCacheDispatcher;\n        this.sessionService = sessionService;\n        this.saveTaxUrl = environment.apiRoot + '/save/taxes';\n    }\n    /**\n     * Merges Employee Taxes.\n     * It looks at cached taxes and adds missing taxes, updates changed taxes and removes taxes that are no longer present.\n     * The result is a package with the 3 CUD operations.\n     *\n     * @param {IEmployeeTaxes} employeesTaxes the collection of taxes with there associated employees.\n     */\n    TaxSaveHelperService.prototype.getEmployeeSavePack = function (employeesTaxes) {\n        var _this = this;\n        return this.employeeTaxService.entities$.pipe(first(), map(function (allCachedEmployeeTaxes) {\n            // Get all the current employee taxes\n            var employeeTaxes = employeesTaxes.taxes;\n            var employeeCachedTaxes = allCachedEmployeeTaxes.filter(function (e) { return e.employeeId === employeesTaxes.employeeLocation.id; });\n            var empSavePack = _this.buildEmployeeSavePack(employeeTaxes, employeeCachedTaxes);\n            return empSavePack;\n        }), tag('getEmployeeSavePack'));\n    };\n    /**\n     * Merges Company Federal Taxes.\n     * It looks at cached taxes and adds missing taxes, updates changed taxes and removes taxes that are no longer present.\n     * The result is a package with the 3 CUD operations.\n     *\n     * @param {ICompanyFederalTaxes} companyFederalTaxes the company federal taxes view model\n     * @param {ITaxes} taxes all the taxes\n     */\n    TaxSaveHelperService.prototype.getCompanyFederalSavePack = function (companyFederalTaxes, taxes) {\n        var _this = this;\n        return combineLatest(this.sessionService.currentCompany$, this.companyTaxService.entities$, this.employeeTaxService.entities$).pipe(first(), map(function (_a) {\n            var company = _a[0], allCachedCompanyTaxes = _a[1];\n            var companyTaxes = companyFederalTaxes.taxes;\n            var cachedCompanyFederalTaxes = allCachedCompanyTaxes.filter(function (e) { return e.taxTypeCode === TaxTypeCode.Federal; });\n            // Get all available company taxes with updated ones taking priority then build the EIN map\n            var allCompanyTaxes = _this.mergeAndFlattenAllCompanyTaxes(companyTaxes, taxes);\n            var einMap = _this.buildTaxesEinMap(company.fein, allCompanyTaxes);\n            // Set the EINs of the taxes\n            _this.setEinValues(companyTaxes, einMap);\n            var companySavePack = _this.buildCompanySavePack(companyTaxes, cachedCompanyFederalTaxes);\n            return companySavePack;\n        }), tag('getCompanyFederalSavePack'));\n    };\n    /**\n     * Merges Company State Taxes.\n     * It looks at cached taxes and adds missing taxes, updates changed taxes and removes taxes that are no longer present.\n     * The result is a package with the 3 CUD operations.\n     *\n     * @param {ICompanyStateTaxes} companyStateTaxes the company federal taxes view model\n     * @param {ITaxes} taxes all the taxes\n     */\n    TaxSaveHelperService.prototype.getCompanyStateSavePack = function (companyStateTaxes, taxes) {\n        var _this = this;\n        return combineLatest(this.sessionService.currentCompany$, this.companyTaxService.entities$).pipe(first(), map(function (_a) {\n            var company = _a[0], allCachedCompanyTaxes = _a[1];\n            var companyTaxes = companyStateTaxes.taxes;\n            var cachedCompanyStateTaxes = allCachedCompanyTaxes.filter(function (e) {\n                return e.taxTypeCode !== TaxTypeCode.Federal && e.stateCode === companyStateTaxes.state;\n            });\n            // Get all available company taxes with updated ones taking priority then build the EIN map\n            var allCompanyTaxes = _this.mergeAndFlattenAllCompanyTaxes(companyTaxes, taxes);\n            var einMap = _this.buildTaxesEinMap(company.fein, allCompanyTaxes);\n            // Set the EINs of the taxes\n            _this.setEinValues(companyTaxes, einMap);\n            var companySavePack = _this.buildCompanySavePack(companyTaxes, cachedCompanyStateTaxes);\n            return companySavePack;\n        }), tag('getCompanyStateSavePack'));\n    };\n    /**\n     * Merges the Taxes ViewModel.\n     * It looks at cached taxes and adds missing taxes, updates changed taxes and removes taxes that are no longer present.\n     * The result is a package containing 2 packages (EE and Company taxes), each with the 3 CUD operations.\n     *\n     * @param {ITaxes} taxes all the taxes\n     */\n    TaxSaveHelperService.prototype.getAllTaxesSavePack = function (taxes) {\n        var _this = this;\n        if (taxes == null || taxes === EMPTY_TAXES) {\n            return of([]);\n        }\n        return combineLatest(this.sessionService.currentCompany$, this.companyTaxService.entities$, this.employeeTaxService.entities$).pipe(first(), map(function (_a) {\n            var company = _a[0], allCachedCompanyTaxes = _a[1], allCachedEmployeeTaxes = _a[2];\n            // Get all the company and employee taxes\n            var allCompanyTaxes = taxes.\n                companyFederalTaxes.taxes.concat(taxes.companyStateTaxes.reduce(function (acc, stateTaxes) {\n                stateTaxes.taxes.forEach(function (t) {\n                    acc.push(t);\n                });\n                return acc;\n            }, []));\n            var allEmployeeTaxes = taxes.employeeTaxes.reduce(function (acc, empTaxes) {\n                empTaxes.taxes.forEach(function (t) {\n                    acc.push(t);\n                });\n                return acc;\n            }, []);\n            // Ein map\n            var einMap = _this.buildTaxesEinMap(company.fein, allCompanyTaxes);\n            // Set the EINs of the taxes\n            _this.setEinValues(allCompanyTaxes, einMap);\n            var empSavePack = _this.buildEmployeeSavePack(allEmployeeTaxes, allCachedEmployeeTaxes);\n            var companySavePack = _this.buildCompanySavePack(allCompanyTaxes, allCachedCompanyTaxes);\n            return [companySavePack, empSavePack];\n        }), tag('getAllTaxesSavePack'));\n    };\n    /**\n     * Saves a collection of TaxSavePackage[] unless account is readOnly\n     * @param packs An array of TaxSavePackages\n     */\n    TaxSaveHelperService.prototype.saveTaxPacks = function (packs) {\n        var _this = this;\n        return this.sessionService.readOnly$.pipe(first(), concatMap(function (readOnly) { return readOnly ? of(true) : _this.saveTaxPacks_(packs); }));\n    };\n    TaxSaveHelperService.prototype.saveTaxPacks_ = function (packs) {\n        var changes = [];\n        packs.forEach(function (pack) {\n            if (!!pack.newTaxes && pack.newTaxes.length > 0) {\n                changes.push(cif.add(pack.modelType, pack.newTaxes));\n            }\n            if (!!pack.updatedTaxes && pack.updatedTaxes.length > 0) {\n                changes.push(cif.update(pack.modelType, pack.updatedTaxes));\n            }\n            if (!!pack.removedTaxes && pack.removedTaxes.length > 0) {\n                // isRemoved is a special remove\n                var actuallyRemoved = pack.removedTaxes.reduce(function (acc, element) {\n                    if (element.isRemoved === false) {\n                        element.isRemoved = true;\n                        acc.push(element);\n                    }\n                    return acc;\n                }, []);\n                if (actuallyRemoved.length > 0) {\n                    changes.push(cif.update(pack.modelType, actuallyRemoved));\n                }\n            }\n        });\n        return changes.length === 0\n            ? of(true)\n            : this.entityCacheDispatcher.saveEntities({ changes: changes }, this.saveTaxUrl).pipe(tag('saveTaxPacks'), map(function () { return true; }));\n    };\n    TaxSaveHelperService.prototype.buildCompanySavePack = function (companyTaxes, cachedCompanyTaxes) {\n        var _this = this;\n        var newTaxes = [];\n        var updatedTaxes = [];\n        var removeTaxes = [];\n        // Company taxes\n        // Merge the taxes with there cached counterpart or create new cached taxes\n        companyTaxes.forEach(function (companyTax) {\n            var modifiedTax = companyTax.getTax();\n            var cachedCompanyStateTax = cachedCompanyTaxes.find(function (t) { return t.id === modifiedTax.id; });\n            // General company tax rules\n            _this.interceptCompanyTaxEdit(modifiedTax, cachedCompanyStateTax);\n            if (cachedCompanyStateTax) {\n                // Update tax\n                var uTax = Object.assign({}, cachedCompanyStateTax, modifiedTax, {\n                    id: cachedCompanyStateTax.id,\n                    companyId: cachedCompanyStateTax.companyId,\n                    mtsTaxCode: cachedCompanyStateTax.mtsTaxCode\n                });\n                if (areDifferent(uTax, cachedCompanyStateTax, 'Company Tax')) {\n                    updatedTaxes.push(uTax);\n                }\n            }\n            else {\n                // Add new tax\n                newTaxes.push(modifiedTax);\n            }\n        });\n        // Taxes that are no longer needed, removed them\n        cachedCompanyTaxes\n            .filter(function (t) { return companyTaxes.every(function (upt) { return upt.id !== t.id; }); })\n            .forEach(function (t) { return removeTaxes.push(t); });\n        return {\n            modelType: 'CompanyTax',\n            newTaxes: newTaxes,\n            updatedTaxes: updatedTaxes,\n            removedTaxes: removeTaxes\n        };\n    };\n    TaxSaveHelperService.prototype.buildEmployeeSavePack = function (employeeTaxes, cachedEmployeeTaxes) {\n        var _this = this;\n        var newTaxes = [];\n        var updatedTaxes = [];\n        var removeTaxes = [];\n        employeeTaxes.forEach(function (employeeTax) {\n            var modifiedTax = employeeTax.getTax();\n            var cachedEmployeeTax = cachedEmployeeTaxes.find(function (t) { return t.id === modifiedTax.id; });\n            // General company tax rules\n            _this.interceptEmployeeTaxEdit(modifiedTax, cachedEmployeeTax);\n            if (cachedEmployeeTax) {\n                // Update tax\n                var uTax = Object.assign({}, cachedEmployeeTax, modifiedTax, {\n                    id: cachedEmployeeTax.id,\n                    employeeId: cachedEmployeeTax.employeeId,\n                    companyId: cachedEmployeeTax.companyId,\n                    mtsTaxCode: cachedEmployeeTax.mtsTaxCode\n                });\n                if (areDifferent(uTax, cachedEmployeeTax)) {\n                    updatedTaxes.push(uTax);\n                }\n            }\n            else {\n                // Add new tax\n                newTaxes.push(modifiedTax);\n            }\n        });\n        // Taxes that are no longer needed, removed them\n        cachedEmployeeTaxes\n            .filter(function (t) { return employeeTaxes.every(function (upt) { return upt.id !== t.id; }); })\n            .forEach(function (t) { return removeTaxes.push(t); });\n        return {\n            modelType: 'EmployeeTax',\n            newTaxes: newTaxes,\n            updatedTaxes: updatedTaxes,\n            removedTaxes: removeTaxes\n        };\n    };\n    TaxSaveHelperService.prototype.interceptCompanyTaxEdit = function (newVal, oldVal) {\n        if (newVal.appliedForEin) {\n            newVal.ein = '';\n        }\n        newVal.isRemoved = false;\n    };\n    TaxSaveHelperService.prototype.interceptEmployeeTaxEdit = function (newVal, oldVal) {\n        newVal.isRemoved = false;\n    };\n    TaxSaveHelperService.prototype.mergeAndFlattenAllCompanyTaxes = function (otherTaxes, taxes) {\n        var allTaxesWithBehaviors = taxes.companyFederalTaxes.taxes.concat(taxes.companyStateTaxes.reduce(function (acc, stateTaxes) {\n            stateTaxes.taxes.forEach(function (t) {\n                acc.push(t);\n            });\n            return acc;\n        }, []));\n        return allTaxesWithBehaviors.reduce(function (acc, tax) {\n            if (acc.every(function (t) { return t.id !== tax.id; })) {\n                acc.push(tax);\n            }\n            return acc;\n        }, otherTaxes.slice());\n    };\n    TaxSaveHelperService.prototype.setEinValues = function (taxes, einMap) {\n        taxes.forEach(function (t) {\n            var einVal = einMap[t.mtsTaxCode];\n            if (einVal != null) {\n                t.ein = einVal.ein;\n                t.appliedForEin = einVal.appliedForEin;\n            }\n        });\n    };\n    TaxSaveHelperService.prototype.buildTaxesEinMap = function (fein, allCompanyTaxes) {\n        var dependentTaxes = [];\n        // These taxes are the correct ein codes based on the useEINFromCode property\n        var mainTaxEinMap = {};\n        // Seed root EINs, either we know them or they do not depend on any other tax (root)\n        allCompanyTaxes.forEach(function (companyTax) {\n            if (companyTax.taxTypeCode === TaxTypeCode.Federal) {\n                mainTaxEinMap[companyTax.mtsTaxCode] = { ein: fein, appliedForEin: false };\n                return;\n            }\n            if (companyTax.behavior.useEINFromCode == null) {\n                mainTaxEinMap[companyTax.mtsTaxCode] = { ein: companyTax.ein, appliedForEin: companyTax.appliedForEin };\n                return;\n            }\n            dependentTaxes.push(companyTax);\n        });\n        // Now for dependent taxes, other taxes that are non root\n        var dependentTaxEinMap = {};\n        dependentTaxes.forEach(function (dependentTax) {\n            var mainTax = mainTaxEinMap[dependentTax.behavior.useEINFromCode] || dependentTax;\n            dependentTaxEinMap[dependentTax.mtsTaxCode] = { ein: mainTax.ein, appliedForEin: mainTax.appliedForEin };\n        });\n        return Object.assign(mainTaxEinMap, dependentTaxEinMap);\n    };\n    TaxSaveHelperService.ngInjectableDef = i0.defineInjectable({ factory: function TaxSaveHelperService_Factory() { return new TaxSaveHelperService(i0.inject(i1.CompanyTaxService), i0.inject(i2.EmployeeTaxService), i0.inject(i3.EntityCacheDispatcher), i0.inject(i4.SessionService)); }, token: TaxSaveHelperService, providedIn: \"root\" });\n    return TaxSaveHelperService;\n}());\nexport { TaxSaveHelperService };\n","import { Injectable } from '@angular/core';\r\n\r\nimport { asapScheduler, combineLatest, forkJoin, Observable, of, Subject } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  concatMap,\r\n  first,\r\n  map,\r\n  observeOn,\r\n  shareReplay,\r\n  skip,\r\n  switchMap,\r\n  tap,\r\n  withLatestFrom,\r\n} from 'rxjs/operators';\r\nimport { tag } from 'rxjs-spy/operators/tag';\r\n\r\nimport { Address, CompanyTax, EmployeeTax, TaxRateType, TaxTypeCode } from '@model';\r\n\r\n// Explicit file imports to avoid circular references\r\nimport { CompanyTaxService } from '@entity/entity-services/company-tax.service';\r\nimport { EmployeeTaxLocation, TaxLocationService } from '@entity/entity-services/tax-location.service';\r\nimport { EmployeeTaxService } from '@entity/entity-services/employee-tax.service';\r\nimport { SessionService } from '@session';\r\n\r\nimport {\r\n  EMPTY_TAXES,\r\n  IAddressPairRequest,\r\n  IAvailableTax,\r\n  IAvailableTaxAddressPair,\r\n  ICompanyFederalTaxes,\r\n  ICompanyStateTaxes,\r\n  IEmployeeTaxes,\r\n  ITaxes,\r\n  TaxBehaviorWrapper,\r\n  TaxRate\r\n} from './tax-models';\r\n\r\nimport { TaxBehaviorService } from './tax-behavior.service';\r\nimport { TaxRatesService } from './tax-rates.service';\r\nimport { TaxSaveHelperService } from './tax-save-helper.service';\r\nimport { TaxService } from './tax.service';\r\nimport { ValidationTriggerService } from '@app/store/validation';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TaxCollectorService {\r\n  /** Subject thats part of the tax recalculation trigger */\r\n  private recomputeTaxesSubject = new Subject();\r\n\r\n  /**\r\n   * This observable contains the merger between persisted taxes and the taxes that need to be collected.\r\n   */\r\n  public taxes$: Observable<ITaxes>;\r\n\r\n  constructor(\r\n    private companyTaxService: CompanyTaxService,\r\n    private employeeTaxService: EmployeeTaxService,\r\n    private sessionService: SessionService,\r\n    private taxBehaviorService: TaxBehaviorService,\r\n    private taxLocationService: TaxLocationService,\r\n    private taxProviderService: TaxService,\r\n    private taxRateProviderService: TaxRatesService,\r\n    private taxSaveHelperService: TaxSaveHelperService,\r\n    private validationTriggerService: ValidationTriggerService\r\n  ) {\r\n    this.buildObservable();\r\n  }\r\n\r\n  /**\r\n   * Recompute all the taxes that need to be collected based on the current employee addresses.\r\n   * The method will also save new and removed Company and Employee taxes to keep everything in sync.\r\n   */\r\n  public computeTaxes(): Observable<boolean> {\r\n    let triggered = false;\r\n    return this.taxes$.pipe(\r\n      // Close over triggered otherwise we will recompute twice\r\n      tap(() => {\r\n        if (triggered === false) {\r\n          triggered = true;\r\n          this.recomputeTaxesSubject.next();\r\n        }\r\n      }),\r\n      skip(1), // We need to skip the current result. taxes$ is hot\r\n      first(),\r\n      concatMap(taxes => this.taxSaveHelperService.getAllTaxesSavePack(taxes)),\r\n      concatMap(taxPacks => this.taxSaveHelperService.saveTaxPacks(taxPacks)),\r\n      tag('computeTaxes')\r\n    );\r\n  }\r\n\r\n  /** Save employee taxes */\r\n  public saveEmployeeTaxes(employeesTaxes: IEmployeeTaxes): Observable<boolean> {\r\n    return this.taxSaveHelperService\r\n      .getEmployeeSavePack(employeesTaxes)\r\n      .pipe(concatMap(taxPack => this.taxSaveHelperService.saveTaxPacks([taxPack])));\r\n  }\r\n\r\n  /** Save company federal taxes */\r\n  public saveCompanyFederalTaxes(companyFederalTaxes: ICompanyFederalTaxes): Observable<boolean> {\r\n    return this.taxes$.pipe(\r\n      first(),\r\n      concatMap(taxes =>\r\n        this.taxSaveHelperService.getCompanyFederalSavePack(companyFederalTaxes, taxes)\r\n      ),\r\n      concatMap(taxPack => this.taxSaveHelperService.saveTaxPacks([taxPack]))\r\n    );\r\n  }\r\n\r\n  /** Save company state taxes */\r\n  public saveCompanyStateTaxes(companyStateTaxes: ICompanyStateTaxes): Observable<boolean> {\r\n    return this.taxes$.pipe(\r\n      first(),\r\n      concatMap(taxes =>\r\n        this.taxSaveHelperService.getCompanyStateSavePack(companyStateTaxes, taxes)\r\n      ),\r\n      concatMap(taxPack => this.taxSaveHelperService.saveTaxPacks([taxPack]))\r\n    );\r\n  }\r\n\r\n  private buildObservable() {\r\n    const taxesDataSources$ = combineLatest(\r\n      this.sessionService.currentCompanyId$,\r\n      this.taxLocationService.employeeTaxLocations$,\r\n      this.taxLocationService.companyLocations$\r\n    );\r\n\r\n    const allTaxes$ = taxesDataSources$.pipe(\r\n      first(),\r\n      concatMap(result => {\r\n        const [companyId, employeeWithLocations, companyLocations] = result;\r\n        return forkJoin(\r\n          this.retrieveAllAvailableTaxes(companyId, employeeWithLocations, companyLocations),\r\n          // We must not allow this api to fail and taxes can work with an empty rates array\r\n          this.taxRateProviderService.getTaxRates().pipe(catchError((error: any) => of([])))\r\n        );\r\n      }),\r\n      observeOn(asapScheduler),\r\n      withLatestFrom(\r\n        this.companyTaxService.entities$, // CompanyTax[]\r\n        this.employeeTaxService.entities$, // EmployeeTAx[]\r\n        this.taxLocationService.companyTaxStates$ // UT, NY, ET\r\n      ),\r\n      map(([apiData, cachedCompanyTaxes, cachedEmployeesTaxes, companyTaxStates]) => {\r\n        const [taxesToCollect, taxRates] = apiData;\r\n\r\n        const employeeTaxes =\r\n          taxesToCollect.employeesTaxes.length === 0\r\n            ? []\r\n            : this.buildEmployeesTaxes(\r\n                taxesToCollect.companyId,\r\n                taxesToCollect.employeesTaxes,\r\n                cachedEmployeesTaxes\r\n              );\r\n\r\n        const companyFederalTaxes = this.buildCompanyFederalTaxes(\r\n          taxesToCollect.companyId,\r\n          taxesToCollect.companyTaxes,\r\n          taxesToCollect.unverifiedCompanyStateAddresses,\r\n          cachedCompanyTaxes,\r\n          taxRates\r\n        );\r\n\r\n        const companyStatesTaxes =\r\n          companyTaxStates.length === 0\r\n            ? []\r\n            : this.buildCompanyStateTaxes(\r\n                taxesToCollect,\r\n                companyTaxStates,\r\n                cachedCompanyTaxes,\r\n                taxRates\r\n              );\r\n\r\n        return {\r\n          employeeTaxes: employeeTaxes,\r\n          companyFederalTaxes: companyFederalTaxes,\r\n          companyStateTaxes: companyStatesTaxes\r\n        };\r\n      })\r\n    );\r\n\r\n    this.taxes$ = this.recomputeTaxesSubject.pipe(\r\n      concatMap(() => this.sessionService.companyPackageLoaded$.pipe(first())),\r\n      switchMap(isCompanyPackageLoaded =>\r\n        isCompanyPackageLoaded === true ? allTaxes$ : of(EMPTY_TAXES)\r\n      ),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this.sessionService.companyPackageLoaded$\r\n      .pipe(\r\n        skip(1) // When first starting dont issue an event until we are ready to go\r\n      )\r\n      .subscribe(e => {\r\n        return this.recomputeTaxesSubject.next();\r\n      });\r\n\r\n    this.taxes$.subscribe(() => {\r\n      this.validationTriggerService.validate();\r\n    });\r\n  }\r\n\r\n  private retrieveAllAvailableTaxes(\r\n    companyId: string,\r\n    employeesWithLocations: EmployeeTaxLocation[],\r\n    companyLocations: Address[]\r\n  ): Observable<IAllAvailableTaxes> {\r\n    const addressPairs = this.getAllAddressPairs(employeesWithLocations, companyLocations);\r\n\r\n    return this.taxProviderService.getAvailableTaxPairs(addressPairs).pipe(\r\n      map(taxesAddressPairs => {\r\n        // We filter out the unverified results from the tax pair api (duplicate ids)\r\n        const verifiedCompanyTaxes = this.verifiedCompanyAddressTaxes(\r\n          companyLocations,\r\n          taxesAddressPairs\r\n        );\r\n        const verifiedEmployeeTaxes = this.verifiedEmployeeAddressTaxes(\r\n          employeesWithLocations,\r\n          taxesAddressPairs\r\n        );\r\n\r\n        // All states that have company unverified addresses\r\n        const unverifiedCompanyAddressStates = companyLocations.reduce((acc, add) => {\r\n          if (\r\n            add.isVerified === false ||\r\n            verifiedCompanyTaxes.unverifiedAddressIds.includes(add.id)\r\n          ) {\r\n            if (acc.includes(add.state) === false) {\r\n              acc.push(add.state);\r\n            }\r\n          }\r\n          return acc;\r\n        }, []);\r\n\r\n        return {\r\n          unverifiedCompanyStateAddresses: unverifiedCompanyAddressStates,\r\n          companyAvailableTaxPairs: verifiedCompanyTaxes.verifiedTaxAddressPairs,\r\n          employeeAvailableTaxPairs: verifiedEmployeeTaxes.verifiedTaxAddressPairs\r\n        };\r\n      }),\r\n      map(context => {\r\n        // Build the employees. IEmployeeAvailableTaxes[]\r\n        const empDefaultTaxes = this.taxBehaviorService.getEmployeeAlwaysAvailableTaxes();\r\n        const employeeTaxes = employeesWithLocations.reduce(\r\n          (acc, emp) => {\r\n            const empAvailableTaxes = this.buildEmployeeAvailableTaxes(\r\n              emp,\r\n              context.employeeAvailableTaxPairs,\r\n              empDefaultTaxes\r\n            );\r\n            acc.push(empAvailableTaxes);\r\n            return acc;\r\n          },\r\n          <IEmployeeAvailableTaxes[]>[]\r\n        );\r\n\r\n        // Build the company taxes. IAvailableTax[]\r\n        const companyDefaultTaxes = this.taxBehaviorService.getCompanyAlwaysAvailableTaxes();\r\n        const companyTaxes = this.buildCompanyAvailableTaxes(\r\n          context.employeeAvailableTaxPairs,\r\n          context.companyAvailableTaxPairs,\r\n          companyDefaultTaxes\r\n        );\r\n\r\n        return <IAllAvailableTaxes>{\r\n          companyId: companyId,\r\n          unverifiedCompanyStateAddresses: context.unverifiedCompanyStateAddresses,\r\n          employeesTaxes: employeeTaxes,\r\n          companyTaxes: companyTaxes\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private buildCompanyAvailableTaxes(\r\n    employeeAvailableTaxPairs: IAvailableTaxAddressPair[],\r\n    companyAvailableTaxPairs: IAvailableTaxAddressPair[],\r\n    companyDefaultTaxes: IAvailableTax[]\r\n  ) {\r\n    const companyTaxes = employeeAvailableTaxPairs.reduce(\r\n      (acc, taxPair) => {\r\n        taxPair.taxes.forEach(tax => {\r\n          if (acc.every(e => e.code !== tax.code)) {\r\n            acc.push(tax);\r\n          }\r\n        });\r\n        return acc;\r\n      },\r\n      <IAvailableTax[]>[]\r\n    );\r\n\r\n    companyAvailableTaxPairs.forEach(companyAddressPair => {\r\n      companyAddressPair.taxes.forEach(tax => {\r\n        if (companyTaxes.every(e => e.code !== tax.code)) {\r\n          companyTaxes.push(tax);\r\n        }\r\n      });\r\n    });\r\n\r\n    companyDefaultTaxes.forEach(defaultTax => {\r\n      if (companyTaxes.every(t => t.code !== defaultTax.code)) {\r\n        companyTaxes.push(defaultTax);\r\n      }\r\n    });\r\n\r\n    return companyTaxes;\r\n  }\r\n\r\n  private getAllAddressPairs(\r\n    employeesWithLocations: EmployeeTaxLocation[],\r\n    companyLocations: Address[]\r\n  ): IAddressPairRequest[] {\r\n    // Employee addresses\r\n    const addressPairRequest = employeesWithLocations.reduce(\r\n      (acc, emp) => {\r\n        if (emp.isVerified && emp.isTaxesExcluded === false) {\r\n          acc.push({\r\n            // Were going to use the employee home Id to prevent guid collision with the address ids\r\n            id: emp.homeAddressId,\r\n            homeGeoCode: emp.homeGeoCode,\r\n            homePsdCode: emp.homePsdCode,\r\n            homeSchoolDistrictCode: emp.homeSchoolDistrictCode,\r\n            workGeoCode: emp.workGeoCode,\r\n            workPsdCode: emp.workPsdCode,\r\n            workSchoolDistrictCode: emp.workSchoolDistrictCode\r\n          });\r\n        }\r\n        return acc;\r\n      },\r\n      <IAddressPairRequest[]>[]\r\n    );\r\n\r\n    companyLocations.forEach(companyAddress => {\r\n      if (companyAddress.isVerified) {\r\n        addressPairRequest.push({\r\n          id: companyAddress.id,\r\n          homeGeoCode: companyAddress.geoCode,\r\n          homePsdCode: companyAddress.psdCode,\r\n          homeSchoolDistrictCode: companyAddress.schoolDistrictCode,\r\n          workGeoCode: companyAddress.geoCode,\r\n          workPsdCode: companyAddress.psdCode,\r\n          workSchoolDistrictCode: companyAddress.schoolDistrictCode\r\n        });\r\n      }\r\n    });\r\n\r\n    return addressPairRequest;\r\n  }\r\n\r\n  private verifiedCompanyAddressTaxes(\r\n    companyLocations: Address[],\r\n    availableTaxPairs: IAvailableTaxAddressPair[]\r\n  ) {\r\n    const companyAddressesPairs = availableTaxPairs.filter(e =>\r\n      companyLocations.some(cl => cl.id === e.id)\r\n    );\r\n    const unverifiedAddressIds = this.getUnverifiableTaxPairIds(companyAddressesPairs);\r\n    return {\r\n      unverifiedAddressIds: unverifiedAddressIds,\r\n      verifiedTaxAddressPairs: companyAddressesPairs.filter(\r\n        e => unverifiedAddressIds.includes(e.id) === false\r\n      )\r\n    };\r\n  }\r\n\r\n  private verifiedEmployeeAddressTaxes(\r\n    employeeLocations: EmployeeTaxLocation[],\r\n    availableTaxPairs: IAvailableTaxAddressPair[]\r\n  ) {\r\n    const employeeAddressesPairs = availableTaxPairs.filter(e =>\r\n      employeeLocations.some(cl => cl.homeAddressId === e.id)\r\n    );\r\n    const unverifiedAddressIds = this.getUnverifiableTaxPairIds(employeeAddressesPairs);\r\n    return {\r\n      unverifiedAddressIds: unverifiedAddressIds,\r\n      verifiedTaxAddressPairs: employeeAddressesPairs.filter(\r\n        e => unverifiedAddressIds.includes(e.id) === false\r\n      )\r\n    };\r\n  }\r\n\r\n  private buildEmployeeAvailableTaxes(\r\n    employeeWithLocation: EmployeeTaxLocation,\r\n    employeesAvailableTaxPairs: IAvailableTaxAddressPair[],\r\n    defaultTaxes: IAvailableTax[]\r\n  ): IEmployeeAvailableTaxes {\r\n    if (employeeWithLocation.isTaxesExcluded) {\r\n      return {\r\n        isVerified: employeeWithLocation.isVerified,\r\n        employeeLocation: employeeWithLocation,\r\n        taxes: []\r\n      };\r\n    }\r\n\r\n    const employeeAvailableTaxPairs = employeesAvailableTaxPairs.find(\r\n      e => e.id === employeeWithLocation.homeAddressId\r\n    );\r\n\r\n    // Did we find taxes for this employee?\r\n    if (employeeAvailableTaxPairs == null) {\r\n      return { isVerified: false, employeeLocation: employeeWithLocation, taxes: [] };\r\n    } else {\r\n      const employeeAvailableTaxes = employeeAvailableTaxPairs.taxes;\r\n      defaultTaxes.forEach(defaultTax => {\r\n        if (employeeAvailableTaxes.every(t => t.code !== defaultTax.code)) {\r\n          employeeAvailableTaxes.push(defaultTax);\r\n        }\r\n      });\r\n      return {\r\n        isVerified: true,\r\n        employeeLocation: employeeWithLocation,\r\n        taxes: employeeAvailableTaxes\r\n      };\r\n    }\r\n  }\r\n\r\n  // --------------------\r\n  // These methods create the final view model for employee taxes\r\n  // --------------------\r\n  private buildEmployeesTaxes(\r\n    companyId: string,\r\n    employeesAvailableTaxes: IEmployeeAvailableTaxes[],\r\n    cachedEmployeesTaxes: EmployeeTax[]\r\n  ): IEmployeeTaxes[] {\r\n    const employeesTaxes = employeesAvailableTaxes.map(employeeAvailableTaxes => {\r\n      const eeId = employeeAvailableTaxes.employeeLocation.id;\r\n      const cachedEmployeeTaxes = cachedEmployeesTaxes.filter(\r\n        t => t.employeeId === eeId && t.companyId === companyId\r\n      );\r\n\r\n      const taxesWithBehaviors = employeeAvailableTaxes.taxes.sort(this.orderTaxesFunc).reduce(\r\n        (behaviors, toCollectTax) => {\r\n          let cachedTax = cachedEmployeeTaxes.find(t => t.mtsTaxCode === toCollectTax.code);\r\n\r\n          if (cachedTax == null) {\r\n            cachedTax = EmployeeTax.create({\r\n              id: this.sessionService.generateId(),\r\n              companyId: companyId,\r\n              employeeId: eeId,\r\n              name: toCollectTax.description,\r\n              mtsTaxCode: toCollectTax.code,\r\n              stateCode: toCollectTax.stateCode,\r\n              taxTypeCode: <TaxTypeCode>toCollectTax.taxTypeCode,\r\n              isExempt: false\r\n            });\r\n          }\r\n\r\n          const taxBehavior = this.taxBehaviorService.tryGetEmployeeTaxBehavior(\r\n            cachedTax,\r\n            toCollectTax,\r\n            employeeAvailableTaxes.employeeLocation\r\n          );\r\n\r\n          if (taxBehavior != null) {\r\n            behaviors.push(taxBehavior);\r\n          }\r\n\r\n          return behaviors;\r\n        },\r\n        <TaxBehaviorWrapper<EmployeeTax>[]>[]\r\n      );\r\n\r\n      const employeeTaxes = <IEmployeeTaxes>{\r\n        employeeLocation: employeeAvailableTaxes.employeeLocation,\r\n        addressVerified: employeeAvailableTaxes.isVerified,\r\n        taxes: taxesWithBehaviors\r\n      };\r\n\r\n      return employeeTaxes;\r\n    });\r\n\r\n    return employeesTaxes;\r\n  }\r\n\r\n  private buildCompanyFederalTaxes(\r\n    companyId: string,\r\n    availableCompanyTaxes: IAvailableTax[],\r\n    unverifiedCompanyAddressStates: string[],\r\n    cachedCompanyTaxes: CompanyTax[],\r\n    taxRates: TaxRate[]\r\n  ): ICompanyFederalTaxes {\r\n    const cachedFederalCompanyTaxes = cachedCompanyTaxes.filter(\r\n      e => (e.stateCode == null || e.stateCode === '') && e.taxTypeCode === TaxTypeCode.Federal\r\n    );\r\n\r\n    const companyFederalTaxes = this.getCompanyFederalTaxes(availableCompanyTaxes)\r\n      .sort(this.orderTaxesFunc)\r\n      .reduce(\r\n        (acc, toCollectTax) => {\r\n          let cachedTax = cachedFederalCompanyTaxes.find(t => t.mtsTaxCode === toCollectTax.code);\r\n          if (cachedTax == null) {\r\n            cachedTax = this.createCompanyTax(companyId, '', toCollectTax);\r\n          }\r\n          const taxRate = taxRates.find(r => r.code === toCollectTax.code);\r\n\r\n          const taxBehavior = this.taxBehaviorService.tryGetCompanyTaxBehavior(\r\n            cachedTax,\r\n            toCollectTax,\r\n            taxRate,\r\n            availableCompanyTaxes\r\n          );\r\n          if (taxBehavior != null) {\r\n            acc.push(taxBehavior);\r\n          }\r\n\r\n          return acc;\r\n        },\r\n        <TaxBehaviorWrapper<CompanyTax>[]>[]\r\n      );\r\n\r\n    return <ICompanyFederalTaxes>{\r\n      allCompanyAddressesVerified: unverifiedCompanyAddressStates.length !== 0,\r\n      taxes: companyFederalTaxes\r\n    };\r\n  }\r\n\r\n  private buildCompanyStateTaxes(\r\n    availableTaxes: IAllAvailableTaxes,\r\n    companyTaxStates: string[],\r\n    cachedCompanyTaxes: CompanyTax[],\r\n    taxRates: TaxRate[]\r\n  ): ICompanyStateTaxes[] {\r\n    const companyId = availableTaxes.companyId;\r\n    const availableCompanyTaxes = availableTaxes.companyTaxes;\r\n    const employeeAvailableTaxes = availableTaxes.employeesTaxes;\r\n    const unverifiedCompanyStateAddresses = availableTaxes.unverifiedCompanyStateAddresses;\r\n\r\n    const companyStatesTaxes = companyTaxStates.map(stateCode => {\r\n      const stateTaxesToCollect = this.getCompanyStateTaxes(stateCode, availableCompanyTaxes);\r\n      const cachedStateCompanyTaxes = cachedCompanyTaxes.filter(e => e.stateCode === stateCode);\r\n\r\n      const taxesWithBehaviors = stateTaxesToCollect.sort(this.orderTaxesFunc).reduce(\r\n        (acc, toCollectTax) => {\r\n          let cachedTax = cachedStateCompanyTaxes.find(t => t.mtsTaxCode === toCollectTax.code);\r\n          if (cachedTax == null) {\r\n            cachedTax = this.createCompanyTax(companyId, stateCode, toCollectTax);\r\n          }\r\n          const taxRate = taxRates.find(r => r.code === toCollectTax.code);\r\n\r\n          const taxBehavior = this.taxBehaviorService.tryGetCompanyTaxBehavior(\r\n            cachedTax,\r\n            toCollectTax,\r\n            taxRate,\r\n            availableCompanyTaxes\r\n          );\r\n\r\n          if (taxBehavior != null) {\r\n            acc.push(taxBehavior);\r\n          }\r\n\r\n          return acc;\r\n        },\r\n        <TaxBehaviorWrapper<CompanyTax>[]>[]\r\n      );\r\n\r\n      const employeeLocationsInState = employeeAvailableTaxes.reduce(\r\n        (acc, empAvailableTaxes) => {\r\n          if (\r\n            empAvailableTaxes.employeeLocation.homeState === stateCode ||\r\n            empAvailableTaxes.employeeLocation.workState === stateCode\r\n          ) {\r\n            acc.push({\r\n              isVerified: empAvailableTaxes.isVerified,\r\n              employeeLocation: empAvailableTaxes.employeeLocation\r\n            });\r\n          }\r\n\r\n          return acc;\r\n        },\r\n        <{ isVerified: boolean; employeeLocation: EmployeeTaxLocation }[]>[]\r\n      );\r\n\r\n      const allEmployeeAddressesVerified = employeeLocationsInState.every(e => e.isVerified);\r\n      const employeeLocations = employeeLocationsInState.map(e => e.employeeLocation);\r\n      const unverifiedStateCompanyAddress = unverifiedCompanyStateAddresses.includes(stateCode);\r\n\r\n      const companyStateTaxes = <ICompanyStateTaxes>{\r\n        state: stateCode,\r\n        employeesLocations: employeeLocations,\r\n        allCompanyStateAddressesVerified: unverifiedStateCompanyAddress,\r\n        allEmployeeStateAddressesVerified: allEmployeeAddressesVerified,\r\n        taxes: taxesWithBehaviors\r\n      };\r\n\r\n      return companyStateTaxes;\r\n    });\r\n\r\n    return companyStatesTaxes;\r\n  }\r\n\r\n  // --------------------\r\n  // Helper methods\r\n  // --------------------\r\n  private getUnverifiableTaxPairIds(availableTaxes: IAvailableTaxAddressPair[]): string[] {\r\n    const addressPairsGroup = availableTaxes.reduce(\r\n      (a, t) => {\r\n        if (a.hasOwnProperty(t.id) === false) {\r\n          a[t.id] = 1;\r\n        } else {\r\n          a[t.id] = a[t.id] + 1;\r\n        }\r\n\r\n        return a;\r\n      },\r\n      <any>{}\r\n    );\r\n\r\n    const uncertainAddressIds = Object.keys(addressPairsGroup).reduce((a, k) => {\r\n      if (addressPairsGroup[k] > 1) {\r\n        a.push(k);\r\n      }\r\n      return a;\r\n    }, []);\r\n\r\n    return uncertainAddressIds;\r\n  }\r\n\r\n  private static taxTypeCodesPriority: { [taxTypeCode: string]: number } = {\r\n    FD: 1,\r\n    ST: 2,\r\n    CN: 3,\r\n    CT: 4,\r\n    SD: 5\r\n  };\r\n\r\n  private orderTaxesFunc(a: IAvailableTax, b: IAvailableTax): number {\r\n    const priority = TaxCollectorService.taxTypeCodesPriority;\r\n\r\n    if (priority[a.taxTypeCode] < priority[b.taxTypeCode]) {\r\n      return -1;\r\n    } else if (priority[a.taxTypeCode] > priority[b.taxTypeCode]) {\r\n      return 1;\r\n    }\r\n\r\n    if (a.displayOrder < b.displayOrder) {\r\n      return -1;\r\n    } else if (a.displayOrder > b.displayOrder) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  private getCompanyFederalTaxes(availableTaxes: IAvailableTax[]): IAvailableTax[] {\r\n    return availableTaxes.filter(\r\n      e => (e.stateCode == null || e.stateCode === '') && e.taxTypeCode === 'FD'\r\n    );\r\n  }\r\n\r\n  private getCompanyStateTaxes(state: string, availableTaxes: IAvailableTax[]): IAvailableTax[] {\r\n    return availableTaxes.filter(e => e.stateCode === state && e.taxTypeCode !== 'FD');\r\n  }\r\n\r\n  private createCompanyTax(\r\n    companyId: string,\r\n    stateCode: string,\r\n    availableTax: IAvailableTax\r\n  ): CompanyTax {\r\n    const rateType =\r\n      availableTax.isVariableRate == null || availableTax.isVariableRate === false\r\n        ? TaxRateType.Fixed\r\n        : TaxRateType.Variable;\r\n\r\n    return CompanyTax.create({\r\n      id: this.sessionService.generateId(),\r\n      companyId: companyId,\r\n      name: availableTax.description,\r\n      mtsTaxCode: availableTax.code,\r\n      stateCode: stateCode,\r\n      rateType: rateType,\r\n      taxTypeCode: <TaxTypeCode>availableTax.taxTypeCode,\r\n      isExempt: false\r\n    });\r\n  }\r\n}\r\n\r\n// Company Tax Collector\r\ninterface IAllAvailableTaxes {\r\n  /** The company id */\r\n  companyId: string;\r\n\r\n  /** If a state has a company address that is unverified, ex: NY, CA ... */\r\n  unverifiedCompanyStateAddresses: string[];\r\n\r\n  /** The entire list of available taxes for all employees */\r\n  employeesTaxes: IEmployeeAvailableTaxes[];\r\n\r\n  /** The entire list of available taxes for the company */\r\n  companyTaxes: IAvailableTax[];\r\n}\r\n\r\ninterface IEmployeeAvailableTaxes {\r\n  /** Employee with tax location */\r\n  employeeLocation: EmployeeTaxLocation;\r\n\r\n  /** If the employee address pair was truly verified this status is confirmed by calling the tax api.\r\n   * Even if the employeeLocation is verified this status will reflect absolute reality  */\r\n  isVerified: boolean;\r\n\r\n  /** The array of available taxes */\r\n  taxes: IAvailableTax[];\r\n}\r\n","import { asapScheduler, combineLatest, forkJoin, of, Subject } from 'rxjs';\nimport { catchError, concatMap, first, map, observeOn, shareReplay, skip, switchMap, tap, withLatestFrom, } from 'rxjs/operators';\nimport { tag } from 'rxjs-spy/operators/tag';\nimport { CompanyTax, EmployeeTax, TaxRateType, TaxTypeCode } from '@model';\n// Explicit file imports to avoid circular references\nimport { CompanyTaxService } from '@entity/entity-services/company-tax.service';\nimport { TaxLocationService } from '@entity/entity-services/tax-location.service';\nimport { EmployeeTaxService } from '@entity/entity-services/employee-tax.service';\nimport { SessionService } from '@session';\nimport { EMPTY_TAXES } from './tax-models';\nimport { TaxBehaviorService } from './tax-behavior.service';\nimport { TaxRatesService } from './tax-rates.service';\nimport { TaxSaveHelperService } from './tax-save-helper.service';\nimport { TaxService } from './tax.service';\nimport { ValidationTriggerService } from '@app/store/validation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../store/entity/entity-services/company-tax.service\";\nimport * as i2 from \"../../../store/entity/entity-services/employee-tax.service\";\nimport * as i3 from \"../../../store/session/session.service\";\nimport * as i4 from \"./tax-behavior.service\";\nimport * as i5 from \"../../../store/entity/entity-services/tax-location.service\";\nimport * as i6 from \"./tax.service\";\nimport * as i7 from \"./tax-rates.service\";\nimport * as i8 from \"./tax-save-helper.service\";\nimport * as i9 from \"../../../store/validation/validation-trigger.service\";\nvar TaxCollectorService = /** @class */ (function () {\n    function TaxCollectorService(companyTaxService, employeeTaxService, sessionService, taxBehaviorService, taxLocationService, taxProviderService, taxRateProviderService, taxSaveHelperService, validationTriggerService) {\n        this.companyTaxService = companyTaxService;\n        this.employeeTaxService = employeeTaxService;\n        this.sessionService = sessionService;\n        this.taxBehaviorService = taxBehaviorService;\n        this.taxLocationService = taxLocationService;\n        this.taxProviderService = taxProviderService;\n        this.taxRateProviderService = taxRateProviderService;\n        this.taxSaveHelperService = taxSaveHelperService;\n        this.validationTriggerService = validationTriggerService;\n        /** Subject thats part of the tax recalculation trigger */\n        this.recomputeTaxesSubject = new Subject();\n        this.buildObservable();\n    }\n    /**\n     * Recompute all the taxes that need to be collected based on the current employee addresses.\n     * The method will also save new and removed Company and Employee taxes to keep everything in sync.\n     */\n    TaxCollectorService.prototype.computeTaxes = function () {\n        var _this = this;\n        var triggered = false;\n        return this.taxes$.pipe(\n        // Close over triggered otherwise we will recompute twice\n        tap(function () {\n            if (triggered === false) {\n                triggered = true;\n                _this.recomputeTaxesSubject.next();\n            }\n        }), skip(1), // We need to skip the current result. taxes$ is hot\n        first(), concatMap(function (taxes) { return _this.taxSaveHelperService.getAllTaxesSavePack(taxes); }), concatMap(function (taxPacks) { return _this.taxSaveHelperService.saveTaxPacks(taxPacks); }), tag('computeTaxes'));\n    };\n    /** Save employee taxes */\n    TaxCollectorService.prototype.saveEmployeeTaxes = function (employeesTaxes) {\n        var _this = this;\n        return this.taxSaveHelperService\n            .getEmployeeSavePack(employeesTaxes)\n            .pipe(concatMap(function (taxPack) { return _this.taxSaveHelperService.saveTaxPacks([taxPack]); }));\n    };\n    /** Save company federal taxes */\n    TaxCollectorService.prototype.saveCompanyFederalTaxes = function (companyFederalTaxes) {\n        var _this = this;\n        return this.taxes$.pipe(first(), concatMap(function (taxes) {\n            return _this.taxSaveHelperService.getCompanyFederalSavePack(companyFederalTaxes, taxes);\n        }), concatMap(function (taxPack) { return _this.taxSaveHelperService.saveTaxPacks([taxPack]); }));\n    };\n    /** Save company state taxes */\n    TaxCollectorService.prototype.saveCompanyStateTaxes = function (companyStateTaxes) {\n        var _this = this;\n        return this.taxes$.pipe(first(), concatMap(function (taxes) {\n            return _this.taxSaveHelperService.getCompanyStateSavePack(companyStateTaxes, taxes);\n        }), concatMap(function (taxPack) { return _this.taxSaveHelperService.saveTaxPacks([taxPack]); }));\n    };\n    TaxCollectorService.prototype.buildObservable = function () {\n        var _this = this;\n        var taxesDataSources$ = combineLatest(this.sessionService.currentCompanyId$, this.taxLocationService.employeeTaxLocations$, this.taxLocationService.companyLocations$);\n        var allTaxes$ = taxesDataSources$.pipe(first(), concatMap(function (result) {\n            var companyId = result[0], employeeWithLocations = result[1], companyLocations = result[2];\n            return forkJoin(_this.retrieveAllAvailableTaxes(companyId, employeeWithLocations, companyLocations), \n            // We must not allow this api to fail and taxes can work with an empty rates array\n            _this.taxRateProviderService.getTaxRates().pipe(catchError(function (error) { return of([]); })));\n        }), observeOn(asapScheduler), withLatestFrom(this.companyTaxService.entities$, // CompanyTax[]\n        this.employeeTaxService.entities$, // EmployeeTAx[]\n        this.taxLocationService.companyTaxStates$ // UT, NY, ET\n        ), map(function (_a) {\n            var apiData = _a[0], cachedCompanyTaxes = _a[1], cachedEmployeesTaxes = _a[2], companyTaxStates = _a[3];\n            var taxesToCollect = apiData[0], taxRates = apiData[1];\n            var employeeTaxes = taxesToCollect.employeesTaxes.length === 0\n                ? []\n                : _this.buildEmployeesTaxes(taxesToCollect.companyId, taxesToCollect.employeesTaxes, cachedEmployeesTaxes);\n            var companyFederalTaxes = _this.buildCompanyFederalTaxes(taxesToCollect.companyId, taxesToCollect.companyTaxes, taxesToCollect.unverifiedCompanyStateAddresses, cachedCompanyTaxes, taxRates);\n            var companyStatesTaxes = companyTaxStates.length === 0\n                ? []\n                : _this.buildCompanyStateTaxes(taxesToCollect, companyTaxStates, cachedCompanyTaxes, taxRates);\n            return {\n                employeeTaxes: employeeTaxes,\n                companyFederalTaxes: companyFederalTaxes,\n                companyStateTaxes: companyStatesTaxes\n            };\n        }));\n        this.taxes$ = this.recomputeTaxesSubject.pipe(concatMap(function () { return _this.sessionService.companyPackageLoaded$.pipe(first()); }), switchMap(function (isCompanyPackageLoaded) {\n            return isCompanyPackageLoaded === true ? allTaxes$ : of(EMPTY_TAXES);\n        }), shareReplay(1));\n        this.sessionService.companyPackageLoaded$\n            .pipe(skip(1) // When first starting dont issue an event until we are ready to go\n        )\n            .subscribe(function (e) {\n            return _this.recomputeTaxesSubject.next();\n        });\n        this.taxes$.subscribe(function () {\n            _this.validationTriggerService.validate();\n        });\n    };\n    TaxCollectorService.prototype.retrieveAllAvailableTaxes = function (companyId, employeesWithLocations, companyLocations) {\n        var _this = this;\n        var addressPairs = this.getAllAddressPairs(employeesWithLocations, companyLocations);\n        return this.taxProviderService.getAvailableTaxPairs(addressPairs).pipe(map(function (taxesAddressPairs) {\n            // We filter out the unverified results from the tax pair api (duplicate ids)\n            var verifiedCompanyTaxes = _this.verifiedCompanyAddressTaxes(companyLocations, taxesAddressPairs);\n            var verifiedEmployeeTaxes = _this.verifiedEmployeeAddressTaxes(employeesWithLocations, taxesAddressPairs);\n            // All states that have company unverified addresses\n            var unverifiedCompanyAddressStates = companyLocations.reduce(function (acc, add) {\n                if (add.isVerified === false ||\n                    verifiedCompanyTaxes.unverifiedAddressIds.includes(add.id)) {\n                    if (acc.includes(add.state) === false) {\n                        acc.push(add.state);\n                    }\n                }\n                return acc;\n            }, []);\n            return {\n                unverifiedCompanyStateAddresses: unverifiedCompanyAddressStates,\n                companyAvailableTaxPairs: verifiedCompanyTaxes.verifiedTaxAddressPairs,\n                employeeAvailableTaxPairs: verifiedEmployeeTaxes.verifiedTaxAddressPairs\n            };\n        }), map(function (context) {\n            // Build the employees. IEmployeeAvailableTaxes[]\n            var empDefaultTaxes = _this.taxBehaviorService.getEmployeeAlwaysAvailableTaxes();\n            var employeeTaxes = employeesWithLocations.reduce(function (acc, emp) {\n                var empAvailableTaxes = _this.buildEmployeeAvailableTaxes(emp, context.employeeAvailableTaxPairs, empDefaultTaxes);\n                acc.push(empAvailableTaxes);\n                return acc;\n            }, []);\n            // Build the company taxes. IAvailableTax[]\n            var companyDefaultTaxes = _this.taxBehaviorService.getCompanyAlwaysAvailableTaxes();\n            var companyTaxes = _this.buildCompanyAvailableTaxes(context.employeeAvailableTaxPairs, context.companyAvailableTaxPairs, companyDefaultTaxes);\n            return {\n                companyId: companyId,\n                unverifiedCompanyStateAddresses: context.unverifiedCompanyStateAddresses,\n                employeesTaxes: employeeTaxes,\n                companyTaxes: companyTaxes\n            };\n        }));\n    };\n    TaxCollectorService.prototype.buildCompanyAvailableTaxes = function (employeeAvailableTaxPairs, companyAvailableTaxPairs, companyDefaultTaxes) {\n        var companyTaxes = employeeAvailableTaxPairs.reduce(function (acc, taxPair) {\n            taxPair.taxes.forEach(function (tax) {\n                if (acc.every(function (e) { return e.code !== tax.code; })) {\n                    acc.push(tax);\n                }\n            });\n            return acc;\n        }, []);\n        companyAvailableTaxPairs.forEach(function (companyAddressPair) {\n            companyAddressPair.taxes.forEach(function (tax) {\n                if (companyTaxes.every(function (e) { return e.code !== tax.code; })) {\n                    companyTaxes.push(tax);\n                }\n            });\n        });\n        companyDefaultTaxes.forEach(function (defaultTax) {\n            if (companyTaxes.every(function (t) { return t.code !== defaultTax.code; })) {\n                companyTaxes.push(defaultTax);\n            }\n        });\n        return companyTaxes;\n    };\n    TaxCollectorService.prototype.getAllAddressPairs = function (employeesWithLocations, companyLocations) {\n        // Employee addresses\n        var addressPairRequest = employeesWithLocations.reduce(function (acc, emp) {\n            if (emp.isVerified && emp.isTaxesExcluded === false) {\n                acc.push({\n                    // Were going to use the employee home Id to prevent guid collision with the address ids\n                    id: emp.homeAddressId,\n                    homeGeoCode: emp.homeGeoCode,\n                    homePsdCode: emp.homePsdCode,\n                    homeSchoolDistrictCode: emp.homeSchoolDistrictCode,\n                    workGeoCode: emp.workGeoCode,\n                    workPsdCode: emp.workPsdCode,\n                    workSchoolDistrictCode: emp.workSchoolDistrictCode\n                });\n            }\n            return acc;\n        }, []);\n        companyLocations.forEach(function (companyAddress) {\n            if (companyAddress.isVerified) {\n                addressPairRequest.push({\n                    id: companyAddress.id,\n                    homeGeoCode: companyAddress.geoCode,\n                    homePsdCode: companyAddress.psdCode,\n                    homeSchoolDistrictCode: companyAddress.schoolDistrictCode,\n                    workGeoCode: companyAddress.geoCode,\n                    workPsdCode: companyAddress.psdCode,\n                    workSchoolDistrictCode: companyAddress.schoolDistrictCode\n                });\n            }\n        });\n        return addressPairRequest;\n    };\n    TaxCollectorService.prototype.verifiedCompanyAddressTaxes = function (companyLocations, availableTaxPairs) {\n        var companyAddressesPairs = availableTaxPairs.filter(function (e) {\n            return companyLocations.some(function (cl) { return cl.id === e.id; });\n        });\n        var unverifiedAddressIds = this.getUnverifiableTaxPairIds(companyAddressesPairs);\n        return {\n            unverifiedAddressIds: unverifiedAddressIds,\n            verifiedTaxAddressPairs: companyAddressesPairs.filter(function (e) { return unverifiedAddressIds.includes(e.id) === false; })\n        };\n    };\n    TaxCollectorService.prototype.verifiedEmployeeAddressTaxes = function (employeeLocations, availableTaxPairs) {\n        var employeeAddressesPairs = availableTaxPairs.filter(function (e) {\n            return employeeLocations.some(function (cl) { return cl.homeAddressId === e.id; });\n        });\n        var unverifiedAddressIds = this.getUnverifiableTaxPairIds(employeeAddressesPairs);\n        return {\n            unverifiedAddressIds: unverifiedAddressIds,\n            verifiedTaxAddressPairs: employeeAddressesPairs.filter(function (e) { return unverifiedAddressIds.includes(e.id) === false; })\n        };\n    };\n    TaxCollectorService.prototype.buildEmployeeAvailableTaxes = function (employeeWithLocation, employeesAvailableTaxPairs, defaultTaxes) {\n        if (employeeWithLocation.isTaxesExcluded) {\n            return {\n                isVerified: employeeWithLocation.isVerified,\n                employeeLocation: employeeWithLocation,\n                taxes: []\n            };\n        }\n        var employeeAvailableTaxPairs = employeesAvailableTaxPairs.find(function (e) { return e.id === employeeWithLocation.homeAddressId; });\n        // Did we find taxes for this employee?\n        if (employeeAvailableTaxPairs == null) {\n            return { isVerified: false, employeeLocation: employeeWithLocation, taxes: [] };\n        }\n        else {\n            var employeeAvailableTaxes_1 = employeeAvailableTaxPairs.taxes;\n            defaultTaxes.forEach(function (defaultTax) {\n                if (employeeAvailableTaxes_1.every(function (t) { return t.code !== defaultTax.code; })) {\n                    employeeAvailableTaxes_1.push(defaultTax);\n                }\n            });\n            return {\n                isVerified: true,\n                employeeLocation: employeeWithLocation,\n                taxes: employeeAvailableTaxes_1\n            };\n        }\n    };\n    // --------------------\n    // These methods create the final view model for employee taxes\n    // --------------------\n    TaxCollectorService.prototype.buildEmployeesTaxes = function (companyId, employeesAvailableTaxes, cachedEmployeesTaxes) {\n        var _this = this;\n        var employeesTaxes = employeesAvailableTaxes.map(function (employeeAvailableTaxes) {\n            var eeId = employeeAvailableTaxes.employeeLocation.id;\n            var cachedEmployeeTaxes = cachedEmployeesTaxes.filter(function (t) { return t.employeeId === eeId && t.companyId === companyId; });\n            var taxesWithBehaviors = employeeAvailableTaxes.taxes.sort(_this.orderTaxesFunc).reduce(function (behaviors, toCollectTax) {\n                var cachedTax = cachedEmployeeTaxes.find(function (t) { return t.mtsTaxCode === toCollectTax.code; });\n                if (cachedTax == null) {\n                    cachedTax = EmployeeTax.create({\n                        id: _this.sessionService.generateId(),\n                        companyId: companyId,\n                        employeeId: eeId,\n                        name: toCollectTax.description,\n                        mtsTaxCode: toCollectTax.code,\n                        stateCode: toCollectTax.stateCode,\n                        taxTypeCode: toCollectTax.taxTypeCode,\n                        isExempt: false\n                    });\n                }\n                var taxBehavior = _this.taxBehaviorService.tryGetEmployeeTaxBehavior(cachedTax, toCollectTax, employeeAvailableTaxes.employeeLocation);\n                if (taxBehavior != null) {\n                    behaviors.push(taxBehavior);\n                }\n                return behaviors;\n            }, []);\n            var employeeTaxes = {\n                employeeLocation: employeeAvailableTaxes.employeeLocation,\n                addressVerified: employeeAvailableTaxes.isVerified,\n                taxes: taxesWithBehaviors\n            };\n            return employeeTaxes;\n        });\n        return employeesTaxes;\n    };\n    TaxCollectorService.prototype.buildCompanyFederalTaxes = function (companyId, availableCompanyTaxes, unverifiedCompanyAddressStates, cachedCompanyTaxes, taxRates) {\n        var _this = this;\n        var cachedFederalCompanyTaxes = cachedCompanyTaxes.filter(function (e) { return (e.stateCode == null || e.stateCode === '') && e.taxTypeCode === TaxTypeCode.Federal; });\n        var companyFederalTaxes = this.getCompanyFederalTaxes(availableCompanyTaxes)\n            .sort(this.orderTaxesFunc)\n            .reduce(function (acc, toCollectTax) {\n            var cachedTax = cachedFederalCompanyTaxes.find(function (t) { return t.mtsTaxCode === toCollectTax.code; });\n            if (cachedTax == null) {\n                cachedTax = _this.createCompanyTax(companyId, '', toCollectTax);\n            }\n            var taxRate = taxRates.find(function (r) { return r.code === toCollectTax.code; });\n            var taxBehavior = _this.taxBehaviorService.tryGetCompanyTaxBehavior(cachedTax, toCollectTax, taxRate, availableCompanyTaxes);\n            if (taxBehavior != null) {\n                acc.push(taxBehavior);\n            }\n            return acc;\n        }, []);\n        return {\n            allCompanyAddressesVerified: unverifiedCompanyAddressStates.length !== 0,\n            taxes: companyFederalTaxes\n        };\n    };\n    TaxCollectorService.prototype.buildCompanyStateTaxes = function (availableTaxes, companyTaxStates, cachedCompanyTaxes, taxRates) {\n        var _this = this;\n        var companyId = availableTaxes.companyId;\n        var availableCompanyTaxes = availableTaxes.companyTaxes;\n        var employeeAvailableTaxes = availableTaxes.employeesTaxes;\n        var unverifiedCompanyStateAddresses = availableTaxes.unverifiedCompanyStateAddresses;\n        var companyStatesTaxes = companyTaxStates.map(function (stateCode) {\n            var stateTaxesToCollect = _this.getCompanyStateTaxes(stateCode, availableCompanyTaxes);\n            var cachedStateCompanyTaxes = cachedCompanyTaxes.filter(function (e) { return e.stateCode === stateCode; });\n            var taxesWithBehaviors = stateTaxesToCollect.sort(_this.orderTaxesFunc).reduce(function (acc, toCollectTax) {\n                var cachedTax = cachedStateCompanyTaxes.find(function (t) { return t.mtsTaxCode === toCollectTax.code; });\n                if (cachedTax == null) {\n                    cachedTax = _this.createCompanyTax(companyId, stateCode, toCollectTax);\n                }\n                var taxRate = taxRates.find(function (r) { return r.code === toCollectTax.code; });\n                var taxBehavior = _this.taxBehaviorService.tryGetCompanyTaxBehavior(cachedTax, toCollectTax, taxRate, availableCompanyTaxes);\n                if (taxBehavior != null) {\n                    acc.push(taxBehavior);\n                }\n                return acc;\n            }, []);\n            var employeeLocationsInState = employeeAvailableTaxes.reduce(function (acc, empAvailableTaxes) {\n                if (empAvailableTaxes.employeeLocation.homeState === stateCode ||\n                    empAvailableTaxes.employeeLocation.workState === stateCode) {\n                    acc.push({\n                        isVerified: empAvailableTaxes.isVerified,\n                        employeeLocation: empAvailableTaxes.employeeLocation\n                    });\n                }\n                return acc;\n            }, []);\n            var allEmployeeAddressesVerified = employeeLocationsInState.every(function (e) { return e.isVerified; });\n            var employeeLocations = employeeLocationsInState.map(function (e) { return e.employeeLocation; });\n            var unverifiedStateCompanyAddress = unverifiedCompanyStateAddresses.includes(stateCode);\n            var companyStateTaxes = {\n                state: stateCode,\n                employeesLocations: employeeLocations,\n                allCompanyStateAddressesVerified: unverifiedStateCompanyAddress,\n                allEmployeeStateAddressesVerified: allEmployeeAddressesVerified,\n                taxes: taxesWithBehaviors\n            };\n            return companyStateTaxes;\n        });\n        return companyStatesTaxes;\n    };\n    // --------------------\n    // Helper methods\n    // --------------------\n    TaxCollectorService.prototype.getUnverifiableTaxPairIds = function (availableTaxes) {\n        var addressPairsGroup = availableTaxes.reduce(function (a, t) {\n            if (a.hasOwnProperty(t.id) === false) {\n                a[t.id] = 1;\n            }\n            else {\n                a[t.id] = a[t.id] + 1;\n            }\n            return a;\n        }, {});\n        var uncertainAddressIds = Object.keys(addressPairsGroup).reduce(function (a, k) {\n            if (addressPairsGroup[k] > 1) {\n                a.push(k);\n            }\n            return a;\n        }, []);\n        return uncertainAddressIds;\n    };\n    TaxCollectorService.prototype.orderTaxesFunc = function (a, b) {\n        var priority = TaxCollectorService.taxTypeCodesPriority;\n        if (priority[a.taxTypeCode] < priority[b.taxTypeCode]) {\n            return -1;\n        }\n        else if (priority[a.taxTypeCode] > priority[b.taxTypeCode]) {\n            return 1;\n        }\n        if (a.displayOrder < b.displayOrder) {\n            return -1;\n        }\n        else if (a.displayOrder > b.displayOrder) {\n            return 1;\n        }\n        return 0;\n    };\n    TaxCollectorService.prototype.getCompanyFederalTaxes = function (availableTaxes) {\n        return availableTaxes.filter(function (e) { return (e.stateCode == null || e.stateCode === '') && e.taxTypeCode === 'FD'; });\n    };\n    TaxCollectorService.prototype.getCompanyStateTaxes = function (state, availableTaxes) {\n        return availableTaxes.filter(function (e) { return e.stateCode === state && e.taxTypeCode !== 'FD'; });\n    };\n    TaxCollectorService.prototype.createCompanyTax = function (companyId, stateCode, availableTax) {\n        var rateType = availableTax.isVariableRate == null || availableTax.isVariableRate === false\n            ? TaxRateType.Fixed\n            : TaxRateType.Variable;\n        return CompanyTax.create({\n            id: this.sessionService.generateId(),\n            companyId: companyId,\n            name: availableTax.description,\n            mtsTaxCode: availableTax.code,\n            stateCode: stateCode,\n            rateType: rateType,\n            taxTypeCode: availableTax.taxTypeCode,\n            isExempt: false\n        });\n    };\n    TaxCollectorService.taxTypeCodesPriority = {\n        FD: 1,\n        ST: 2,\n        CN: 3,\n        CT: 4,\n        SD: 5\n    };\n    TaxCollectorService.ngInjectableDef = i0.defineInjectable({ factory: function TaxCollectorService_Factory() { return new TaxCollectorService(i0.inject(i1.CompanyTaxService), i0.inject(i2.EmployeeTaxService), i0.inject(i3.SessionService), i0.inject(i4.TaxBehaviorService), i0.inject(i5.TaxLocationService), i0.inject(i6.TaxService), i0.inject(i7.TaxRatesService), i0.inject(i8.TaxSaveHelperService), i0.inject(i9.ValidationTriggerService)); }, token: TaxCollectorService, providedIn: \"root\" });\n    return TaxCollectorService;\n}());\nexport { TaxCollectorService };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { RouteReuseStrategy } from '@angular/router';\n/**\n * Router route re-use strategy that NEVER reuses a component instance.\n */\nvar SpRouteReuseStrategy = /** @class */ (function (_super) {\n    __extends(SpRouteReuseStrategy, _super);\n    function SpRouteReuseStrategy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SpRouteReuseStrategy.prototype.shouldDetach = function (route) {\n        return false;\n    };\n    SpRouteReuseStrategy.prototype.store = function (route, handle) {\n    };\n    SpRouteReuseStrategy.prototype.shouldAttach = function (route) {\n        return false;\n    };\n    SpRouteReuseStrategy.prototype.retrieve = function (route) {\n        return null;\n    };\n    SpRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return false;\n    };\n    return SpRouteReuseStrategy;\n}(RouteReuseStrategy));\nexport { SpRouteReuseStrategy };\n","/**\r\n * Router route re-use strategy that NEVER reuses a component instance\r\n * Essential because when you reuse a component, bad things happen.\r\n * In particular, the sp-input and validation controls aren't expecting the model to change.\r\n * UPDATE FEB 2019: those controls now listen for updates as of PKSP-22907 \"Element wrapper model fields\"\r\n * Can work around it with clever games like\r\n *   this.vm = null; // make sure there's an *ngIf=\"vm\"\r\n *   setTimeout(()=> this.vm = newVm);\r\n * But this is maddening and confusing. Don't bother!\r\n * Component re-use is a (dubious) performance enhancer that we don't need in this app.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot,  RouteReuseStrategy } from '@angular/router';\r\n\r\n/**\r\n * Router route re-use strategy that NEVER reuses a component instance.\r\n */\r\n@Injectable() // np providedIn because multi-provided\r\nexport class SpRouteReuseStrategy extends RouteReuseStrategy {\r\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\r\n    return false;\r\n  }\r\n  store(route: ActivatedRouteSnapshot, handle: {}): void {\r\n\r\n  }\r\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\r\n    return false;\r\n  }\r\n  retrieve(route: ActivatedRouteSnapshot): {} {\r\n    return null;\r\n  }\r\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\r\n    return false;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\r\nimport { NgModel } from '@angular/forms';\r\nimport { ModelComponent } from '../model.component';\r\n\r\n@Component({\r\n  selector: 'sp-select',\r\n  templateUrl: './input-select.component.html'\r\n})\r\nexport class InputSelectComponent implements OnInit {\r\n  static nameCounter = 0;\r\n\r\n  @Input() classNames: string;\r\n  @Input() disabled = false;\r\n\r\n  @Input() set group(value: string) { this._group = value; }\r\n  private _group: string;\r\n\r\n  @Input() label: string;\r\n\r\n  @Input() set model(value: any) { this._model = value; }\r\n  private _model: any;\r\n\r\n  @Input() set modelType(value: string) { this._modelType = value; }\r\n  private _modelType: string;\r\n\r\n  @Input() name: string;\r\n  @Input() propertyName: string;\r\n  @Output() changed = new EventEmitter();\r\n  @ViewChild('input') ngModel: NgModel;\r\n\r\n  private currentValue: any;\r\n\r\n  constructor(@Optional() public modelContext?: ModelComponent) { }\r\n\r\n  ngOnInit() {\r\n    this.name = (this.name || '') + '$' + InputSelectComponent.nameCounter++;\r\n    this.classNames = 'form-control ' + (this.classNames || '');\r\n  }\r\n\r\n  /** Get the latest data-bound group. If not bound, get group from modelContext. */\r\n  get group(): string {\r\n    return this._group || (this.modelContext && this.modelContext.group);\r\n  }\r\n\r\n  /** Get the latest data-bound model. If not bound, get model from modelContext. */\r\n  get model(): any {\r\n    return this._model || (this.modelContext && this.modelContext.model);\r\n  }\r\n\r\n  /** Get the latest data-bound model type. If not bound, get model type from modelContext. */\r\n  get modelType(): string {\r\n    return this._modelType || (this.modelContext && this.modelContext.modelType);\r\n  }\r\n\r\n  getValue(): string {\r\n    if (this.model && this.modelType && this.propertyName) {\r\n      return this.model[this.propertyName];\r\n    }\r\n\r\n    return this.currentValue;\r\n  }\r\n\r\n  setValue(value: string): void {\r\n    if (this.model && this.modelType && this.propertyName) {\r\n      this.model[this.propertyName] = value;\r\n    }\r\n\r\n    this.currentValue = value;\r\n    if (this.modelContext) {\r\n      this.modelContext.notifyOfModelChange();\r\n    }\r\n  }\r\n\r\n  onChanged(value: any) {\r\n    this.ngModel.control.markAsTouched();\r\n    this.changed.emit(value);\r\n  }\r\n}\r\n","import { EventEmitter, OnInit } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { ModelComponent } from '../model.component';\nvar InputSelectComponent = /** @class */ (function () {\n    function InputSelectComponent(modelContext) {\n        this.modelContext = modelContext;\n        this.disabled = false;\n        this.changed = new EventEmitter();\n    }\n    Object.defineProperty(InputSelectComponent.prototype, \"group\", {\n        /** Get the latest data-bound group. If not bound, get group from modelContext. */\n        get: function () {\n            return this._group || (this.modelContext && this.modelContext.group);\n        },\n        set: function (value) { this._group = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputSelectComponent.prototype, \"model\", {\n        /** Get the latest data-bound model. If not bound, get model from modelContext. */\n        get: function () {\n            return this._model || (this.modelContext && this.modelContext.model);\n        },\n        set: function (value) { this._model = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputSelectComponent.prototype, \"modelType\", {\n        /** Get the latest data-bound model type. If not bound, get model type from modelContext. */\n        get: function () {\n            return this._modelType || (this.modelContext && this.modelContext.modelType);\n        },\n        set: function (value) { this._modelType = value; },\n        enumerable: true,\n        configurable: true\n    });\n    InputSelectComponent.prototype.ngOnInit = function () {\n        this.name = (this.name || '') + '$' + InputSelectComponent.nameCounter++;\n        this.classNames = 'form-control ' + (this.classNames || '');\n    };\n    InputSelectComponent.prototype.getValue = function () {\n        if (this.model && this.modelType && this.propertyName) {\n            return this.model[this.propertyName];\n        }\n        return this.currentValue;\n    };\n    InputSelectComponent.prototype.setValue = function (value) {\n        if (this.model && this.modelType && this.propertyName) {\n            this.model[this.propertyName] = value;\n        }\n        this.currentValue = value;\n        if (this.modelContext) {\n            this.modelContext.notifyOfModelChange();\n        }\n    };\n    InputSelectComponent.prototype.onChanged = function (value) {\n        this.ngModel.control.markAsTouched();\n        this.changed.emit(value);\n    };\n    InputSelectComponent.nameCounter = 0;\n    return InputSelectComponent;\n}());\nexport { InputSelectComponent };\n","import { Injectable, NgModule } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, Routes } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { first, map } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\nimport { WellKnownRoutes } from '@core/well-known-routes';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthFailedGuard implements CanDeactivate<any> {\r\n\r\n  canDeactivate(\r\n    component: any,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot): Observable<boolean> {\r\n    return this.authService.isSignedIn$.pipe(\r\n      first(),\r\n      map(isSignedIn => {\r\n        if (isSignedIn) {\r\n          this.authService.signout();\r\n        }\r\n        const isSignedOutPage = nextState && nextState.url === WellKnownRoutes.SignedOut;\r\n        return isSignedOutPage;\r\n      }),\r\n    );\r\n  }\r\n  constructor(private authService: AuthService) {}\r\n}\r\n","import { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { first, map } from 'rxjs/operators';\nimport { AuthService } from '@core/services/auth-services/auth.service';\nimport { WellKnownRoutes } from '@core/well-known-routes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth-services/auth.service\";\nvar AuthFailedGuard = /** @class */ (function () {\n    function AuthFailedGuard(authService) {\n        this.authService = authService;\n    }\n    AuthFailedGuard.prototype.canDeactivate = function (component, currentRoute, currentState, nextState) {\n        var _this = this;\n        return this.authService.isSignedIn$.pipe(first(), map(function (isSignedIn) {\n            if (isSignedIn) {\n                _this.authService.signout();\n            }\n            var isSignedOutPage = nextState && nextState.url === WellKnownRoutes.SignedOut;\n            return isSignedOutPage;\n        }));\n    };\n    AuthFailedGuard.ngInjectableDef = i0.defineInjectable({ factory: function AuthFailedGuard_Factory() { return new AuthFailedGuard(i0.inject(i1.AuthService)); }, token: AuthFailedGuard, providedIn: \"root\" });\n    return AuthFailedGuard;\n}());\nexport { AuthFailedGuard };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\nimport { CurrentCompanyEntityCollectionService } from './current-company-entity-collection-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./company-entity-helper.service\";\nvar EmployeeTaxService = /** @class */ (function (_super) {\n    __extends(EmployeeTaxService, _super);\n    function EmployeeTaxService(helper) {\n        var _this = _super.call(this, 'EmployeeTax', helper) || this;\n        _this.helper = helper;\n        return _this;\n    }\n    EmployeeTaxService.ngInjectableDef = i0.defineInjectable({ factory: function EmployeeTaxService_Factory() { return new EmployeeTaxService(i0.inject(i1.CompanyEntityHelperService)); }, token: EmployeeTaxService, providedIn: \"root\" });\n    return EmployeeTaxService;\n}(CurrentCompanyEntityCollectionService));\nexport { EmployeeTaxService };\n","import { Injectable } from '@angular/core';\r\n\r\nimport { EmployeeTax } from '@model';\r\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\r\nimport { CurrentCompanyEntityCollectionService } from './current-company-entity-collection-service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EmployeeTaxService extends CurrentCompanyEntityCollectionService<EmployeeTax> {\r\n  constructor(protected helper: CompanyEntityHelperService) {\r\n    super('EmployeeTax', helper);\r\n  }\r\n}\r\n","import { EntityHelperService } from './entity-helper.service';\nimport { SessionService } from '@session';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./entity-helper.service\";\nimport * as i2 from \"../../session/session.service\";\n/**\n * Facade around methods and properties frequently needed when working with entities\n */\nvar CompanyEntityHelperService = /** @class */ (function () {\n    function CompanyEntityHelperService(entityHelper, sessionService) {\n        var _this = this;\n        this.entityHelper = entityHelper;\n        this.sessionService = sessionService;\n        this.sessionService.currentCompanyId$.subscribe(function (id) { return _this.currentCompanyId = id; });\n    }\n    Object.defineProperty(CompanyEntityHelperService.prototype, \"collectionServiceElementsFactory\", {\n        get: function () {\n            return this.entityHelper.collectionServiceElementsFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompanyEntityHelperService.prototype, \"currentCompany$\", {\n        get: function () {\n            return this.sessionService.currentCompany$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompanyEntityHelperService.prototype, \"currentCompanyId$\", {\n        get: function () {\n            return this.sessionService.currentCompanyId$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompanyEntityHelperService.prototype, \"currentUserId$\", {\n        /**\n         * Observable of the id of the current user for this account\n         * Not necessarily the authenticated user who could be an admin acting on the current user's behalf.\n         */\n        get: function () {\n            return this.sessionService.currentUserId$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompanyEntityHelperService.prototype, \"currentUser$\", {\n        /**\n         * Observable of the current user for this account.\n         * Not necessarily the authenticated user who could be an admin acting on the current user's behalf.\n         */\n        get: function () {\n            return this.sessionService.currentUser$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompanyEntityHelperService.prototype, \"entityCacheDispatcher\", {\n        get: function () {\n            return this.entityHelper.entityCacheDispatcher;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompanyEntityHelperService.prototype.generateId = function () {\n        return this.entityHelper.generateId();\n    };\n    Object.defineProperty(CompanyEntityHelperService.prototype, \"logger\", {\n        get: function () {\n            return this.entityHelper.logger;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompanyEntityHelperService.prototype, \"readOnly$\", {\n        /** emits true when the current company is \"read-only\" and saves are disallowed. */\n        get: function () {\n            return this.sessionService.readOnly$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompanyEntityHelperService.ngInjectableDef = i0.defineInjectable({ factory: function CompanyEntityHelperService_Factory() { return new CompanyEntityHelperService(i0.inject(i1.EntityHelperService), i0.inject(i2.SessionService)); }, token: CompanyEntityHelperService, providedIn: \"root\" });\n    return CompanyEntityHelperService;\n}());\nexport { CompanyEntityHelperService };\n","import { Injectable } from '@angular/core';\r\n\r\nimport { EntityHelperService } from './entity-helper.service';\r\nimport { SessionService } from '@session';\r\n\r\n/**\r\n * Facade around methods and properties frequently needed when working with entities\r\n */\r\n@Injectable({ providedIn: 'root'})\r\nexport class CompanyEntityHelperService {\r\n\r\n  /**\r\n   * Snapshot of the currentCompanyId$\r\n   * Internal use by CurrentCompanyEntityCollectionService only!\r\n   * Danger! It will change. Potential source of subtle bugs if you don't follow these rules:\r\n   * Never use this value beyond the lifespan of a single call.\r\n   * Never store it in a service constructor.\r\n   */\r\n  currentCompanyId: string;\r\n\r\n  constructor(\r\n    protected entityHelper: EntityHelperService,\r\n    private sessionService: SessionService,\r\n  ) {\r\n    this.sessionService.currentCompanyId$.subscribe(id => this.currentCompanyId = id);\r\n  }\r\n\r\n  get collectionServiceElementsFactory() {\r\n    return this.entityHelper.collectionServiceElementsFactory;\r\n  }\r\n\r\n  get currentCompany$() {\r\n    return this.sessionService.currentCompany$;\r\n  }\r\n\r\n  get currentCompanyId$() {\r\n    return this.sessionService.currentCompanyId$;\r\n  }\r\n\r\n  /**\r\n   * Observable of the id of the current user for this account\r\n   * Not necessarily the authenticated user who could be an admin acting on the current user's behalf.\r\n   */\r\n  get currentUserId$() {\r\n    return this.sessionService.currentUserId$;\r\n  }\r\n\r\n  /**\r\n   * Observable of the current user for this account.\r\n   * Not necessarily the authenticated user who could be an admin acting on the current user's behalf.\r\n   */\r\n  get currentUser$() {\r\n    return this.sessionService.currentUser$;\r\n  }\r\n\r\n  get entityCacheDispatcher() {\r\n    return this.entityHelper.entityCacheDispatcher;\r\n  }\r\n\r\n  generateId() {\r\n    return this.entityHelper.generateId();\r\n  }\r\n\r\n  get logger() {\r\n    return this.entityHelper.logger;\r\n  }\r\n\r\n  /** emits true when the current company is \"read-only\" and saves are disallowed. */\r\n  get readOnly$() {\r\n    return this.sessionService.readOnly$;\r\n  }\r\n\r\n}\r\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MaskHelper, MaskMatch } from './multi-mask-helper';\r\n\r\n// TODO:\r\n// 1) hook the ngModel rather than a custom binned dataValue input?\r\n\r\n@Directive({\r\n    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: MultiMaskDirective, multi: true }],\r\n    selector: '[spMultiMask]'\r\n})\r\nexport class MultiMaskDirective implements OnInit, ControlValueAccessor {\r\n\r\n    @Input()\r\n    public masks: string[];\r\n\r\n    @Input()\r\n    private dataValue: string;\r\n\r\n    @Input()\r\n    public disabledText: string;\r\n\r\n    @Output()\r\n    public onValueChange = new EventEmitter<string>();\r\n\r\n    private get value() {\r\n        return this.nativeElement.value;\r\n    }\r\n\r\n    private set value(val) {\r\n        this.nativeElement.value = val;\r\n    }\r\n\r\n    @Input()\r\n    public set disabled(value: boolean) {\r\n        this.nativeElement.disabled = value;\r\n        if (value && this.disabledText != null) {\r\n            this.value = this.disabledText;\r\n        } else {\r\n            this.value = this.dataValue || '';\r\n        }\r\n    }\r\n\r\n    public get disabled() {\r\n        return this.nativeElement.hasAttribute('disabled');\r\n    }\r\n\r\n    private get nativeElement(): HTMLInputElement {\r\n        return this.elementRef.nativeElement;\r\n    }\r\n\r\n    private maskHelper: MaskHelper;\r\n\r\n    private maskOptions = {\r\n        format: '',\r\n        guideChar: ''\r\n    };\r\n\r\n    private prevValue: string;\r\n    private maskview: HTMLInputElement;\r\n    private currentMask: string;\r\n\r\n    private onTouchedCallback: () => void = () => { };\r\n    private onChangeCallback: (_: any) => void = () => { };\r\n\r\n    constructor(private elementRef: ElementRef) {\r\n        this.maskHelper = new MaskHelper();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n\r\n        if (this.masks != null) {\r\n            this.currentMask = this.masks.length > 0 ? this.masks.sort((a, b) => a.length - b.length)[0] : '';\r\n\r\n            // add element behind to show mask, (instead of placeholder which disappears)\r\n            const cln = this.nativeElement.ownerDocument.createElement('input');\r\n            cln.className = 'form-control maskview';\r\n            this.nativeElement.parentElement.appendChild(cln);\r\n            cln.value = this.currentMask;\r\n            this.maskview = cln;\r\n        }\r\n\r\n        if (this.disabled === false) {\r\n            this.nativeElement.value = this.dataValue || '';\r\n        }\r\n    }\r\n\r\n    @HostListener('input', ['$event'])\r\n    public onInputChanged(event: any): void {\r\n        const val = this.value;\r\n\r\n        // Only run the mask change logic if we have any masks\r\n        if (this.disabled === false && this.masks != null && this.masks.length > 0) {\r\n            // The value has been cleared so we reset everything\r\n            if (val == null || val === '') {\r\n                this.resetMaskState();\r\n                this.setNewValue('');\r\n                this.setMaskMatch({ mask: this.currentMask || this.masks[0], isExactMatch: false, parsedVal: ''});\r\n                return;\r\n            }\r\n\r\n            // Validate the new value with given masks\r\n            const maskMatch = this.maskHelper.getClosestMask(this.value, this.masks, this.currentMask);\r\n\r\n            if (maskMatch.mask == null) {\r\n                // We could not validate the value so keep the prev valid one or empty\r\n                this.value = this.prevValue || '';\r\n            }\r\n\r\n            if (maskMatch.mask != null) { // && this.value !== maskMatch.parsedVal) {\r\n                this.currentMask = maskMatch.mask;\r\n                let cval = maskMatch.parsedVal;\r\n                const mask = maskMatch.mask;\r\n                // append the next mask char if it is a literal\r\n                if (mask.length > cval.length && this.prevValue && this.prevValue.length <= cval.length) {\r\n                    const ch = mask.charAt(cval.length);\r\n                    if (this.maskHelper.isLiteral(ch)) {\r\n\r\n                        // if there are multiple masks, only append the literal if it appears\r\n                        // at the same position in all the possible masks.\r\n                        if (this.masks.every(m => m.length <= cval.length || mask.charAt(cval.length) === ch)) {\r\n                            cval += ch;\r\n                        }\r\n                    }\r\n                }\r\n                this.value = cval;\r\n            }\r\n            this.setMaskMatch(maskMatch);\r\n        }\r\n\r\n        this.setNewValue(this.value);\r\n    }\r\n\r\n    public writeValue(value: string) {\r\n        if (value == null) { return; }\r\n\r\n        if (value === '') {\r\n            this.resetMaskState();\r\n            this.setNewValue(value);\r\n            return;\r\n        }\r\n\r\n        if (this.disabled === false && this.masks != null && this.masks.length > 0) {\r\n            const maskMatch = this.maskHelper.getClosestMask(value, this.masks, this.currentMask);\r\n            if (maskMatch.mask != null) {\r\n                this.setNewValue(maskMatch.parsedVal);\r\n                this.setMaskMatch(maskMatch);\r\n            }\r\n        }\r\n    }\r\n\r\n    public registerOnChange(fn: (_: any) => void) { this.onChangeCallback = fn; }\r\n    public registerOnTouched(fn: () => void) { this.onTouchedCallback = fn; }\r\n\r\n    private resetMaskState() {\r\n        this.maskOptions.format = '';\r\n    }\r\n\r\n    private setNewValue(newVal: string) {\r\n        this.prevValue = newVal;\r\n        this.dataValue = newVal;\r\n\r\n        this.onChangeCallback(this.dataValue);\r\n        this.onValueChange.emit(this.value);\r\n    }\r\n\r\n    /** set the value of the maskview element to the mask, with the filled elements\r\n     * replaced with spaces, so that only the unfilled portion of the mask is shown.\r\n     * e.g. mask = '####', parsedVal = '12' => maskview.value = '  ##'\r\n     */\r\n    private setMaskMatch(maskMatch: MaskMatch) {\r\n        if (maskMatch.mask === null) {\r\n            return; // leave displayed mask as-is\r\n        }\r\n        const filledLength = maskMatch.parsedVal && maskMatch.parsedVal.length || 0;\r\n        let mask = maskMatch.mask;\r\n        mask = ' '.repeat(filledLength) + mask.substring(filledLength);\r\n        this.maskview.value = mask;\r\n   }\r\n}\r\n","import { ElementRef, EventEmitter, OnInit } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { MaskHelper } from './multi-mask-helper';\n// TODO:\n// 1) hook the ngModel rather than a custom binned dataValue input?\nvar MultiMaskDirective = /** @class */ (function () {\n    function MultiMaskDirective(elementRef) {\n        this.elementRef = elementRef;\n        this.onValueChange = new EventEmitter();\n        this.maskOptions = {\n            format: '',\n            guideChar: ''\n        };\n        this.onTouchedCallback = function () { };\n        this.onChangeCallback = function () { };\n        this.maskHelper = new MaskHelper();\n    }\n    Object.defineProperty(MultiMaskDirective.prototype, \"value\", {\n        get: function () {\n            return this.nativeElement.value;\n        },\n        set: function (val) {\n            this.nativeElement.value = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MultiMaskDirective.prototype, \"disabled\", {\n        get: function () {\n            return this.nativeElement.hasAttribute('disabled');\n        },\n        set: function (value) {\n            this.nativeElement.disabled = value;\n            if (value && this.disabledText != null) {\n                this.value = this.disabledText;\n            }\n            else {\n                this.value = this.dataValue || '';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MultiMaskDirective.prototype, \"nativeElement\", {\n        get: function () {\n            return this.elementRef.nativeElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MultiMaskDirective.prototype.ngOnInit = function () {\n        if (this.masks != null) {\n            this.currentMask = this.masks.length > 0 ? this.masks.sort(function (a, b) { return a.length - b.length; })[0] : '';\n            // add element behind to show mask, (instead of placeholder which disappears)\n            var cln = this.nativeElement.ownerDocument.createElement('input');\n            cln.className = 'form-control maskview';\n            this.nativeElement.parentElement.appendChild(cln);\n            cln.value = this.currentMask;\n            this.maskview = cln;\n        }\n        if (this.disabled === false) {\n            this.nativeElement.value = this.dataValue || '';\n        }\n    };\n    MultiMaskDirective.prototype.onInputChanged = function (event) {\n        var val = this.value;\n        // Only run the mask change logic if we have any masks\n        if (this.disabled === false && this.masks != null && this.masks.length > 0) {\n            // The value has been cleared so we reset everything\n            if (val == null || val === '') {\n                this.resetMaskState();\n                this.setNewValue('');\n                this.setMaskMatch({ mask: this.currentMask || this.masks[0], isExactMatch: false, parsedVal: '' });\n                return;\n            }\n            // Validate the new value with given masks\n            var maskMatch = this.maskHelper.getClosestMask(this.value, this.masks, this.currentMask);\n            if (maskMatch.mask == null) {\n                // We could not validate the value so keep the prev valid one or empty\n                this.value = this.prevValue || '';\n            }\n            if (maskMatch.mask != null) {\n                this.currentMask = maskMatch.mask;\n                var cval_1 = maskMatch.parsedVal;\n                var mask_1 = maskMatch.mask;\n                // append the next mask char if it is a literal\n                if (mask_1.length > cval_1.length && this.prevValue && this.prevValue.length <= cval_1.length) {\n                    var ch_1 = mask_1.charAt(cval_1.length);\n                    if (this.maskHelper.isLiteral(ch_1)) {\n                        // if there are multiple masks, only append the literal if it appears\n                        // at the same position in all the possible masks.\n                        if (this.masks.every(function (m) { return m.length <= cval_1.length || mask_1.charAt(cval_1.length) === ch_1; })) {\n                            cval_1 += ch_1;\n                        }\n                    }\n                }\n                this.value = cval_1;\n            }\n            this.setMaskMatch(maskMatch);\n        }\n        this.setNewValue(this.value);\n    };\n    MultiMaskDirective.prototype.writeValue = function (value) {\n        if (value == null) {\n            return;\n        }\n        if (value === '') {\n            this.resetMaskState();\n            this.setNewValue(value);\n            return;\n        }\n        if (this.disabled === false && this.masks != null && this.masks.length > 0) {\n            var maskMatch = this.maskHelper.getClosestMask(value, this.masks, this.currentMask);\n            if (maskMatch.mask != null) {\n                this.setNewValue(maskMatch.parsedVal);\n                this.setMaskMatch(maskMatch);\n            }\n        }\n    };\n    MultiMaskDirective.prototype.registerOnChange = function (fn) { this.onChangeCallback = fn; };\n    MultiMaskDirective.prototype.registerOnTouched = function (fn) { this.onTouchedCallback = fn; };\n    MultiMaskDirective.prototype.resetMaskState = function () {\n        this.maskOptions.format = '';\n    };\n    MultiMaskDirective.prototype.setNewValue = function (newVal) {\n        this.prevValue = newVal;\n        this.dataValue = newVal;\n        this.onChangeCallback(this.dataValue);\n        this.onValueChange.emit(this.value);\n    };\n    /** set the value of the maskview element to the mask, with the filled elements\n     * replaced with spaces, so that only the unfilled portion of the mask is shown.\n     * e.g. mask = '####', parsedVal = '12' => maskview.value = '  ##'\n     */\n    MultiMaskDirective.prototype.setMaskMatch = function (maskMatch) {\n        if (maskMatch.mask === null) {\n            return; // leave displayed mask as-is\n        }\n        var filledLength = maskMatch.parsedVal && maskMatch.parsedVal.length || 0;\n        var mask = maskMatch.mask;\n        mask = ' '.repeat(filledLength) + mask.substring(filledLength);\n        this.maskview.value = mask;\n    };\n    return MultiMaskDirective;\n}());\nexport { MultiMaskDirective };\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'ssn' })\r\nexport class SsnPipe implements PipeTransform {\r\n  transform(value: number | string): string {\r\n    if (!value ) {\r\n      return 'missing';\r\n    } else {\r\n      value = value.toString();\r\n      const text = value.toString().replace(/[^\\d]+/g, '').padStart(9, '0');\r\n      return `${text.slice(0, 3)}-${text.slice(3, 5)}-${text.slice(5)}`;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, Store } from '@ngrx/store';\r\n\r\nimport {\r\n  ClearCollections,\r\n  EntityActionFactory, EntityCache, EntityCacheQuerySet, EntityOp,\r\n  LoadCollections\r\n} from 'ngrx-data';\r\n\r\nimport { Company, User } from '@model';\r\nimport { companyCollectionDataMapper } from '@entity/entity-metadata';\r\nimport { LoadCompanyPackageError } from '@session/actions';\r\nimport { LoggerService } from '@core/services/logger.service';\r\n\r\n/** Dispatch custom actions to the EntityCache and its collections */\r\n@Injectable({providedIn: 'root'})\r\nexport class EntityDispatcher {\r\n  constructor(\r\n    private entityActionFactory: EntityActionFactory,\r\n    private logger: LoggerService,\r\n    private store: Store<EntityCache>\r\n  ) {}\r\n\r\n  addAccount(company: Company, user: User) {\r\n    const collections: EntityCacheQuerySet = {Company: [company], User: [user]};\r\n    const action = new LoadCollections(collections, 'NewAccount');\r\n    this.store.dispatch(action);\r\n    return collections;\r\n  }\r\n\r\n  clearCollections(collectionNames: string[]) {\r\n    const action = new ClearCollections(collectionNames);\r\n    this.store.dispatch(action);\r\n  }\r\n\r\n  loadCompanyPackageSuccess(data: EntityCacheQuerySet): EntityCacheQuerySet {\r\n    data = companyCollectionDataMapper(data);\r\n    const action = new LoadCollections(data, 'CompanyPackage');\r\n    this.store.dispatch(action);\r\n    return data;\r\n  }\r\n\r\n  loadCompanyPackageError(currentCompanyId: string, error: any): any {\r\n    this.logger.error(`Error loading the company package for ${currentCompanyId}`, error);\r\n    const action = new LoadCompanyPackageError({currentCompanyId, error, tag: 'CompanyPackage'});\r\n    this.store.dispatch(action);\r\n    return error;\r\n  }\r\n\r\n  loadDocumentPackageSuccess(data: EntityCacheQuerySet): EntityCacheQuerySet {\r\n    data = companyCollectionDataMapper(data);\r\n    const action = new LoadCollections(data, 'DocumentPackage');\r\n    this.store.dispatch(action);\r\n    return data;\r\n  }\r\n\r\n  loadDocumentPackageError(currentCompanyId: string, error: any): any {\r\n    this.logger.error(`Error loading the document package for ${currentCompanyId}`, error);\r\n    const action = new LoadCompanyPackageError({currentCompanyId, error, tag: 'DocumentPackage'});\r\n    this.store.dispatch(action);\r\n    return error;\r\n  }\r\n\r\n  /** Replace all users in cache with this one */\r\n  setUserInCache(user: User) {\r\n    const action = this.entityActionFactory.create('User', EntityOp.ADD_ALL, user ? [user] : []);\r\n    this.store.dispatch(action);\r\n  }\r\n}\r\n","import { Store } from '@ngrx/store';\nimport { ClearCollections, EntityActionFactory, EntityOp, LoadCollections } from 'ngrx-data';\nimport { companyCollectionDataMapper } from '@entity/entity-metadata';\nimport { LoadCompanyPackageError } from '@session/actions';\nimport { LoggerService } from '@core/services/logger.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngrx-data\";\nimport * as i2 from \"../../core/services/logger.service\";\nimport * as i3 from \"@ngrx/store\";\n/** Dispatch custom actions to the EntityCache and its collections */\nvar EntityDispatcher = /** @class */ (function () {\n    function EntityDispatcher(entityActionFactory, logger, store) {\n        this.entityActionFactory = entityActionFactory;\n        this.logger = logger;\n        this.store = store;\n    }\n    EntityDispatcher.prototype.addAccount = function (company, user) {\n        var collections = { Company: [company], User: [user] };\n        var action = new LoadCollections(collections, 'NewAccount');\n        this.store.dispatch(action);\n        return collections;\n    };\n    EntityDispatcher.prototype.clearCollections = function (collectionNames) {\n        var action = new ClearCollections(collectionNames);\n        this.store.dispatch(action);\n    };\n    EntityDispatcher.prototype.loadCompanyPackageSuccess = function (data) {\n        data = companyCollectionDataMapper(data);\n        var action = new LoadCollections(data, 'CompanyPackage');\n        this.store.dispatch(action);\n        return data;\n    };\n    EntityDispatcher.prototype.loadCompanyPackageError = function (currentCompanyId, error) {\n        this.logger.error(\"Error loading the company package for \" + currentCompanyId, error);\n        var action = new LoadCompanyPackageError({ currentCompanyId: currentCompanyId, error: error, tag: 'CompanyPackage' });\n        this.store.dispatch(action);\n        return error;\n    };\n    EntityDispatcher.prototype.loadDocumentPackageSuccess = function (data) {\n        data = companyCollectionDataMapper(data);\n        var action = new LoadCollections(data, 'DocumentPackage');\n        this.store.dispatch(action);\n        return data;\n    };\n    EntityDispatcher.prototype.loadDocumentPackageError = function (currentCompanyId, error) {\n        this.logger.error(\"Error loading the document package for \" + currentCompanyId, error);\n        var action = new LoadCompanyPackageError({ currentCompanyId: currentCompanyId, error: error, tag: 'DocumentPackage' });\n        this.store.dispatch(action);\n        return error;\n    };\n    /** Replace all users in cache with this one */\n    EntityDispatcher.prototype.setUserInCache = function (user) {\n        var action = this.entityActionFactory.create('User', EntityOp.ADD_ALL, user ? [user] : []);\n        this.store.dispatch(action);\n    };\n    EntityDispatcher.ngInjectableDef = i0.defineInjectable({ factory: function EntityDispatcher_Factory() { return new EntityDispatcher(i0.inject(i1.EntityActionFactory), i0.inject(i2.LoggerService), i0.inject(i3.Store)); }, token: EntityDispatcher, providedIn: \"root\" });\n    return EntityDispatcher;\n}());\nexport { EntityDispatcher };\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sp-amount-or-percent-value',\r\n  templateUrl: './amount-or-percent-value.component.html'\r\n})\r\nexport class AmountOrPercentValueComponent implements OnInit {\r\n  @Input() model: any;\r\n  @Input() isAmountPropertyName: string;\r\n  @Input() propertyNameValue: string;\r\n\r\n  @Output() isAmountChange = new EventEmitter();\r\n  @Output() valueChange = new EventEmitter();\r\n\r\n  constructor() {\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  setIsAmount(value: boolean): void {\r\n    if (this.model && this.isAmountPropertyName) {\r\n      this.model[this.isAmountPropertyName] = value;\r\n      this.isAmountChange.emit();\r\n    }\r\n  }\r\n  setValue(value: string) {\r\n    const num = Number.parseFloat(value);\r\n\r\n    if (this.model && this.propertyNameValue) {\r\n      this.model[this.propertyNameValue] = num;\r\n    }\r\n    this.valueChange.emit();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { asapScheduler, Observable, throwError } from 'rxjs';\nimport { catchError, finalize, map, observeOn, tap } from 'rxjs/operators';\n\nimport { EntityCacheQuerySet } from 'ngrx-data';\n\nimport { Address, Employee } from '@model';\nimport { BusyService } from '@core/services/busy.service';\nimport { EntityDispatcher } from './entity-dispatcher';\nimport { entityMetadata } from '@entity/entity-metadata';\nimport { environment } from '@environment';\nimport { LoggerService } from '@core/services/logger.service';\nimport { SessionDispatcher } from '@session/session-dispatcher';\nimport { upperCamelCase } from '@utils';\n\n@Injectable({providedIn: 'root'})\nexport class CompanyPackageService {\n\n  constructor(\n    private entityCacheDispatcher: EntityDispatcher,\n    private busyService: BusyService,\n    private http: HttpClient,\n    private logger: LoggerService,\n    private sessionDispatcher: SessionDispatcher,\n  ) {}\n\n  /**\n   * Loads the \"CompanyPackage\" data for the given company.\n   * Toggles the companyPackageLoading$ flag.\n   * @param companyId The id of the company whose data should be loaded.\n   * @returns Terminating COLD observable of either the data collections if succeeded\n   * or error observable if failed.\n   * You must subscribe but you do not have to unsubscribe.\n   */\n  loadCompanyPackageByCompanyId(companyId: string): Observable<EntityCacheQuerySet> {\n    this.sessionDispatcher.setCompanyPackageLoading(true);\n    this.sessionDispatcher.setCompanyPackageLoaded(false);\n    const load$ = this.loadData(companyId).pipe(\n      tap(() => this.sessionDispatcher.setCompanyPackageLoaded(true)),\n      finalize(() => {\n        this.sessionDispatcher.setCompanyPackageLoading(false);\n      })\n    );\n    return this.busyService.busy$('Loading your account ...', load$);\n  }\n\n  private loadData(companyId: string): Observable<EntityCacheQuerySet> {\n    const url = `${environment.apiRoot}/companypackage/${companyId}`;\n    return this.http.get<EntityCacheQuerySet>(url).pipe(\n      // Ensure this takes at least one tick so that company.loading$ goes true, then false.\n      observeOn(asapScheduler),\n      map(data => this.scrubCompanyPackage(data)),\n      map(data => this.entityCacheDispatcher.loadCompanyPackageSuccess(data)),\n      catchError(error => {\n        this.entityCacheDispatcher.loadCompanyPackageError(companyId, error);\n        return throwError(error);\n      })\n    );\n  }\n\n  /**\n   * Remove \"bad\" data from the Company Package\n   * Ex: discard unrecognized entity types (shouldn't happen)\n   * Ex: we have orphaned addresses, perhaps because during EE creation, the home addr made it but not the EE.\n   * @param data Company Package data fresh from server\n   */\n  private scrubCompanyPackage(data: EntityCacheQuerySet) {\n    // Discard unrecognized entity types.\n    // Report them as an application error (must fix!) but allow app to continue.\n    // This filter prevents ngrx-data from throwing a fatal error when asked to load an unrecognized entity type.\n    data = Object.keys(data).reduce((acc, key) => {\n      if (!entityMetadata[upperCamelCase(key)]) {\n        this.logger.error(`Company Package error: ignoring unrecognized entity type \"${key}\"`);\n        delete data[key];\n      }\n      return data;\n    }, data);\n\n    // Hide orphaned addresses by locally setting isRemoved:false\n    const ees: Employee[] = data['employee'] || [];\n    (data['address'] as Address[] || []).forEach(addr => {\n        if (addr.isHome && null == ees.find(ee => ee.homeAddressId === addr.id)) {\n          // orphan: report and hide by setting isRemoved: true\n          this.logger.error(`Orphaned home address: ${JSON.stringify(addr)}`);\n          addr.isRemoved = true;\n        }\n        return addr;\n    });\n    return data;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { asapScheduler, throwError } from 'rxjs';\nimport { catchError, finalize, map, observeOn, tap } from 'rxjs/operators';\nimport { BusyService } from '@core/services/busy.service';\nimport { EntityDispatcher } from './entity-dispatcher';\nimport { entityMetadata } from '@entity/entity-metadata';\nimport { environment } from '@environment';\nimport { LoggerService } from '@core/services/logger.service';\nimport { SessionDispatcher } from '@session/session-dispatcher';\nimport { upperCamelCase } from '@utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./entity-dispatcher\";\nimport * as i2 from \"../../core/services/busy.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"../../core/services/logger.service\";\nimport * as i5 from \"../session/session-dispatcher\";\nvar CompanyPackageService = /** @class */ (function () {\n    function CompanyPackageService(entityCacheDispatcher, busyService, http, logger, sessionDispatcher) {\n        this.entityCacheDispatcher = entityCacheDispatcher;\n        this.busyService = busyService;\n        this.http = http;\n        this.logger = logger;\n        this.sessionDispatcher = sessionDispatcher;\n    }\n    /**\n     * Loads the \"CompanyPackage\" data for the given company.\n     * Toggles the companyPackageLoading$ flag.\n     * @param companyId The id of the company whose data should be loaded.\n     * @returns Terminating COLD observable of either the data collections if succeeded\n     * or error observable if failed.\n     * You must subscribe but you do not have to unsubscribe.\n     */\n    CompanyPackageService.prototype.loadCompanyPackageByCompanyId = function (companyId) {\n        var _this = this;\n        this.sessionDispatcher.setCompanyPackageLoading(true);\n        this.sessionDispatcher.setCompanyPackageLoaded(false);\n        var load$ = this.loadData(companyId).pipe(tap(function () { return _this.sessionDispatcher.setCompanyPackageLoaded(true); }), finalize(function () {\n            _this.sessionDispatcher.setCompanyPackageLoading(false);\n        }));\n        return this.busyService.busy$('Loading your account ...', load$);\n    };\n    CompanyPackageService.prototype.loadData = function (companyId) {\n        var _this = this;\n        var url = environment.apiRoot + \"/companypackage/\" + companyId;\n        return this.http.get(url).pipe(\n        // Ensure this takes at least one tick so that company.loading$ goes true, then false.\n        observeOn(asapScheduler), map(function (data) { return _this.scrubCompanyPackage(data); }), map(function (data) { return _this.entityCacheDispatcher.loadCompanyPackageSuccess(data); }), catchError(function (error) {\n            _this.entityCacheDispatcher.loadCompanyPackageError(companyId, error);\n            return throwError(error);\n        }));\n    };\n    /**\n     * Remove \"bad\" data from the Company Package\n     * Ex: discard unrecognized entity types (shouldn't happen)\n     * Ex: we have orphaned addresses, perhaps because during EE creation, the home addr made it but not the EE.\n     * @param data Company Package data fresh from server\n     */\n    CompanyPackageService.prototype.scrubCompanyPackage = function (data) {\n        var _this = this;\n        // Discard unrecognized entity types.\n        // Report them as an application error (must fix!) but allow app to continue.\n        // This filter prevents ngrx-data from throwing a fatal error when asked to load an unrecognized entity type.\n        data = Object.keys(data).reduce(function (acc, key) {\n            if (!entityMetadata[upperCamelCase(key)]) {\n                _this.logger.error(\"Company Package error: ignoring unrecognized entity type \\\"\" + key + \"\\\"\");\n                delete data[key];\n            }\n            return data;\n        }, data);\n        // Hide orphaned addresses by locally setting isRemoved:false\n        var ees = data['employee'] || [];\n        (data['address'] || []).forEach(function (addr) {\n            if (addr.isHome && null == ees.find(function (ee) { return ee.homeAddressId === addr.id; })) {\n                // orphan: report and hide by setting isRemoved: true\n                _this.logger.error(\"Orphaned home address: \" + JSON.stringify(addr));\n                addr.isRemoved = true;\n            }\n            return addr;\n        });\n        return data;\n    };\n    CompanyPackageService.ngInjectableDef = i0.defineInjectable({ factory: function CompanyPackageService_Factory() { return new CompanyPackageService(i0.inject(i1.EntityDispatcher), i0.inject(i2.BusyService), i0.inject(i3.HttpClient), i0.inject(i4.LoggerService), i0.inject(i5.SessionDispatcher)); }, token: CompanyPackageService, providedIn: \"root\" });\n    return CompanyPackageService;\n}());\nexport { CompanyPackageService };\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Dictionary } from 'ngrx-data';\r\n\r\nimport { combineLatest, defer, Observable, of, throwError } from 'rxjs';\r\nimport {\r\n  catchError, concatMap, distinctUntilChanged, finalize, first,\r\n  map, shareReplay, switchMap, withLatestFrom, tap\r\n} from 'rxjs/operators';\r\nimport { tag } from 'rxjs-spy/operators/tag';\r\n\r\nimport { AccountStatus, AccountStatusCodes, Company, Employee, User } from '@model';\r\nimport { AccountStateTransition, AccountStateTransitions } from './account-state-transition';\r\nimport { CompanyPackageService } from '@entity/company-package.service';\r\nimport { EntityDispatcher } from '../entity/entity-dispatcher';\r\nimport { EntitySelectors } from '../entity/entity-selectors';\r\nimport { getFullName } from '@core/utils';\r\nimport { environment } from '@environment';\r\nimport { entityMetadata, isCompanyEntity } from '@entity/entity-metadata';\r\nimport { IdGeneratorService } from '@core/services/id-generator.service';\r\nimport { LoggerService } from '@core/services/logger.service';\r\nimport { SessionDispatcher } from './session-dispatcher';\r\nimport { SessionSelectors } from './session-selectors';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SessionService {\r\n\r\n  /** Cached account status transitions  */\r\n  private accountStateTransitionsCached: AccountStateTransitions;\r\n\r\n  /** Account status transitions. Invariant during the session. */\r\n  accountStateTransitions$: Observable<AccountStateTransitions>;\r\n\r\n  /** The authenticated (signed in) user when not null */\r\n  authUser$: Observable<User>;\r\n\r\n  /** True when there is a loaded CompanyPackage */\r\n  companyPackageLoaded$: Observable<boolean>;\r\n\r\n  /** True when in the process of loading the CompanyPackage */\r\n  companyPackageLoading$: Observable<boolean>;\r\n  currentCompanyEtag$: Observable<string>;\r\n\r\n  /** The current company. Null when there is no current company */\r\n  currentCompany$: Observable<Company>;\r\n\r\n  /** The id of the current company. Empty string when there is no current company */\r\n  currentCompanyId$: Observable<string>;\r\n\r\n  /** The current employee. Null when there is no current employee */\r\n  currentEmployee$: Observable<Employee>;\r\n\r\n  /** The current employeeId. Null when there is no current employee */\r\n  currentEmployeeId$: Observable<string>;\r\n\r\n  /**\r\n   * The current user. Null when there is no current user\r\n   * Not necessarily the authenticated user who could be an admin acting on the current user's behalf.\r\n   */\r\n  currentUser$: Observable<User>;\r\n\r\n  /** The id of the current user. Empty string when there is no current company */\r\n  currentUserId$: Observable<string>;\r\n\r\n  /** Emit true when the signed-in AuthUser is an administrator. Will change w/ each sign-in and sign-out */\r\n  isAdmin$: Observable<boolean>;\r\n\r\n  /** True if there is a signed-in user */\r\n  isSignedIn$: Observable<boolean>;\r\n\r\n  /** emits true when the current company is \"read-only\" and saves are disallowed. */\r\n  readOnly$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private companyPackageService: CompanyPackageService,\r\n    private entityDispatcher: EntityDispatcher,\r\n    private entitySelectors: EntitySelectors,\r\n    private http: HttpClient,\r\n    private idGenerator: IdGeneratorService,\r\n    public logger: LoggerService,\r\n    private sessionDispatcher: SessionDispatcher,\r\n    private sessionSelectors: SessionSelectors\r\n  ) {\r\n    this.authUser$ = sessionSelectors.authUser$;\r\n    this.companyPackageLoaded$ = sessionSelectors.companyPackageLoaded$;\r\n    this.companyPackageLoading$ = sessionSelectors.companyPackageLoading$;\r\n    this.currentCompanyId$ = sessionSelectors.currentCompanyId$;\r\n    this.currentEmployeeId$ = sessionSelectors.currentEmployeeId$;\r\n    this.currentUserId$ = sessionSelectors.currentUserId$;\r\n    this.currentCompanyEtag$ = sessionSelectors.currentCompanyEtag$;\r\n    this.isAdmin$ = sessionSelectors.isAdmin$;\r\n    this.isSignedIn$ = sessionSelectors.isSignedIn$;\r\n    this.readOnly$ = sessionSelectors.readOnly$;\r\n\r\n    this.currentCompany$ = combineLatest(\r\n      this.currentCompanyId$,\r\n      entitySelectors.company.entityMap$\r\n    ).pipe(\r\n      map(([id, entityMap]) => entityMap[id]),\r\n      distinctUntilChanged(),\r\n      tag('currentCompany$'),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this.currentEmployee$ = combineLatest(\r\n      this.currentEmployeeId$,\r\n      entitySelectors.employee.entityMap$\r\n    ).pipe(\r\n      map(([id, entityMap]) => entityMap[id]),\r\n      distinctUntilChanged(),\r\n      tag('currentEmployee$'),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this.currentUser$ = combineLatest(\r\n      this.currentUserId$,\r\n      entitySelectors.user.entityMap$\r\n    ).pipe(\r\n      map(([id, entityMap]) => id ? entityMap[id] : null),\r\n      distinctUntilChanged(),\r\n      tag('currentUser$'),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this.loadAccountWhenRegularUserSignsIn();\r\n    this.setAccountStateTransitions$();\r\n  }\r\n\r\n  /** Clear the store of all company-specific collections + the User collection. A must during sign out */\r\n  clearCurrentAccount(): void {\r\n    this.setReadOnly(false);\r\n    this.sessionDispatcher.setCurrentAccount(null, null);\r\n    const companyEntityTypes = Object.keys(entityMetadata).filter(isCompanyEntity);\r\n    this.entityDispatcher.clearCollections(companyEntityTypes);\r\n  }\r\n\r\n  /**\r\n   * Generate a new GUID-like string identifier\r\n   */\r\n  generateId(): string {\r\n    return this.idGenerator.generateId();\r\n  }\r\n\r\n  /**\r\n   * Load the company package for a {companyId, userId} pair\r\n   * Clears the company collections\r\n   * and loads the company package for the given company and user.\r\n   * Set current company and user.\r\n   * @param companyId The id of the company to load.\r\n   * @param userId The id of the current user for the account.\r\n   *\r\n   * @returns A COLD, terminating observable like an HttpClient method.\r\n   * You MUST SUBSCRIBE to make it work.\r\n   * You do not have to unsubscribe.\r\n   * Emits true if succeeded; else returns error on the error channel.\r\n   */\r\n  loadAccountByCompanyUserIds(companyId: string, userId: string): Observable<boolean> {\r\n    this.clearCurrentAccount();\r\n\r\n    if (!companyId) {\r\n      return throwError(`Cannot load account without a company id`);\r\n    }\r\n\r\n    if (!userId) {\r\n      return throwError(`Cannot load account without a user id`);\r\n    }\r\n\r\n    this.sessionDispatcher.setCurrentAccount(companyId, userId);\r\n\r\n    return this.companyPackageService.loadCompanyPackageByCompanyId(companyId).pipe(\r\n      catchError(error => {\r\n        this.clearCurrentAccount();\r\n        // TODO: The app will die because bound to data no longer in cache. Navigate to safety first?\r\n        const emsg = `SessionService.loadAccountByCompanyUserIds failed for company: ${companyId} and user: ${userId}`;\r\n        this.logger.error(emsg);\r\n        return throwError(emsg);\r\n      }),\r\n      // return true upon success; don't want caller looking at the raw server data.\r\n      concatMap(_ => this.isAdmin$),\r\n      first(),\r\n      map(isAdmin => {\r\n        // admin starts with ReadOnly view of account; regular user can edit\r\n        this.setReadOnly(isAdmin);\r\n        return true;\r\n      }),\r\n      tag('loadAccountByCompanyUserIds')\r\n    );\r\n  }\r\n\r\n  private loadAccountWhenRegularUserSignsIn() {\r\n    this.authUser$.pipe(\r\n      withLatestFrom(this.isAdmin$),\r\n      switchMap(([authUser, isAdmin]) => {\r\n        if (authUser && !isAdmin) {\r\n          // This changed AuthUser is a regular user\r\n          // Change the current account to this user, who becomes the current user,\r\n          // and load that user's account data.\r\n          // Do not wait for this to succeed.\r\n          // If something must wait, such as a navigation guard,\r\n          // it should look at the state of companyPackageLoading$.\r\n          return this.loadAccountByCompanyUserIds(authUser.companyId, authUser.id);\r\n        } else {\r\n          return of(false);\r\n        }\r\n      })\r\n    )\r\n    // No need to unsubscribe because this service never dies.\r\n    .subscribe();\r\n  }\r\n\r\n  /**\r\n   * Reload the CompanyPackage for the current company and user.\r\n   * Error if either is missing/null\r\n   * @returns Cold, terminating observable which succeeds if the package reloaded\r\n   * or fails if it did not.\r\n   * You must subscribe but do not have to unsubscribe.\r\n   * Screwed if it fails because the attempt first erases the data in cache.\r\n   * TODO: Could recover by holding EntityCache copy and restoring it on failure.\r\n   */\r\n  reloadCurrentCompanyPackage(): Observable<boolean> {\r\n    return combineLatest(\r\n      this.currentCompanyId$,\r\n      this.currentUserId$\r\n    ).pipe(\r\n      first(),\r\n      concatMap(([companyId, userId]) => {\r\n        if (companyId && userId) {\r\n          return this.loadAccountByCompanyUserIds(companyId, userId);\r\n        } else {\r\n          return throwError('No companyId or userId');\r\n        }\r\n      }),\r\n      tag('reloadCurrentCompanyPackage')\r\n\r\n    );\r\n  }\r\n\r\n  /** Setup the observable of AccountStateTransitions */\r\n  private setAccountStateTransitions$() {\r\n    this.accountStateTransitions$ = defer(() => {\r\n      if (this.accountStateTransitionsCached) {\r\n        return of(this.accountStateTransitionsCached);\r\n      }\r\n\r\n      return this.http.get(`${environment.apiRoot}/account/accountStateTransitions`).pipe(\r\n        map((response: AccountStateTransition[]) => {\r\n          return response.reduce((prev, curr) => {\r\n            prev[curr.current] = prev[curr.current] || {};\r\n            prev[curr.current][curr.next] = {\r\n              next: curr.next,\r\n              automaticTransition: curr.automaticTransition,\r\n              allowAdminOverride: curr.allowAdminOverride,\r\n              allowWithErrors: curr.allowWithErrors,\r\n              hideInUi: curr.hideInUi\r\n            };\r\n            return prev;\r\n          }, {} as AccountStateTransitions);\r\n        }),\r\n        map(t => this.accountStateTransitionsCached = t)\r\n      );\r\n    }).pipe(shareReplay(1));\r\n  }\r\n\r\n  /**\r\n   * Change the current company's AccountStatus by sending a setStatus request to the server.\r\n   * If the server replies with success, reload the company package;\r\n   * the company should have the updated AccountStatus.\r\n   * @param status Change to this AccountStatus\r\n   * @returns Cold, terminating observable which succeeds if the status changed\r\n   * or fails if it did not.\r\n   * You must subscribe but do not have to unsubscribe.\r\n   */\r\n  setAccountStatus(status: AccountStatus): Observable<string[]> {\r\n    return combineLatest(\r\n      this.currentUserId$,\r\n      this.currentCompany$\r\n    ).pipe(\r\n      first(),\r\n      concatMap(([userId, company]) => {\r\n        if (!userId || !company) {\r\n          throw new Error('No current user or company');\r\n        } else if (!AccountStatusCodes.getByValue(status)) {\r\n          throw new Error(`Invalid status code, \"${status}\"`);\r\n        }\r\n        if (company.status === status) {\r\n          return of([]); // no need to change\r\n        }\r\n        const companyId = company.id;\r\n        const url = `${environment.apiRoot}/account/${companyId}/status`;\r\n        return this.http.post<string[]>(url, { status }).pipe(\r\n          concatMap(r => this.loadAccountByCompanyUserIds(companyId, userId).pipe(map(_ => r)))\r\n        );\r\n      }),\r\n      tag('setAccountStatus')\r\n    );\r\n  }\r\n\r\n  /** Set the etag for the current company  */\r\n  setCurrentCompanyEtag(etag: string) {\r\n    this.sessionDispatcher.setCurrentCompanyEtag(etag);\r\n  }\r\n\r\n  setCurrentEmployeeId(id: string) {\r\n    this.sessionDispatcher.setCurrentEmployeeId(id);\r\n  }\r\n\r\n  /** Set session read-only flag to true or false. */\r\n  setReadOnly(readOnly: boolean) {\r\n    this.sessionDispatcher.setReadOnly(readOnly);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { combineLatest, defer, of, throwError } from 'rxjs';\nimport { catchError, concatMap, distinctUntilChanged, first, map, shareReplay, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { tag } from 'rxjs-spy/operators/tag';\nimport { AccountStatusCodes } from '@model';\nimport { CompanyPackageService } from '@entity/company-package.service';\nimport { EntityDispatcher } from '../entity/entity-dispatcher';\nimport { EntitySelectors } from '../entity/entity-selectors';\nimport { environment } from '@environment';\nimport { entityMetadata, isCompanyEntity } from '@entity/entity-metadata';\nimport { IdGeneratorService } from '@core/services/id-generator.service';\nimport { LoggerService } from '@core/services/logger.service';\nimport { SessionDispatcher } from './session-dispatcher';\nimport { SessionSelectors } from './session-selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../entity/company-package.service\";\nimport * as i2 from \"../entity/entity-dispatcher\";\nimport * as i3 from \"../entity/entity-selectors\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"../../core/services/id-generator.service\";\nimport * as i6 from \"../../core/services/logger.service\";\nimport * as i7 from \"./session-dispatcher\";\nimport * as i8 from \"./session-selectors\";\nvar SessionService = /** @class */ (function () {\n    function SessionService(companyPackageService, entityDispatcher, entitySelectors, http, idGenerator, logger, sessionDispatcher, sessionSelectors) {\n        this.companyPackageService = companyPackageService;\n        this.entityDispatcher = entityDispatcher;\n        this.entitySelectors = entitySelectors;\n        this.http = http;\n        this.idGenerator = idGenerator;\n        this.logger = logger;\n        this.sessionDispatcher = sessionDispatcher;\n        this.sessionSelectors = sessionSelectors;\n        this.authUser$ = sessionSelectors.authUser$;\n        this.companyPackageLoaded$ = sessionSelectors.companyPackageLoaded$;\n        this.companyPackageLoading$ = sessionSelectors.companyPackageLoading$;\n        this.currentCompanyId$ = sessionSelectors.currentCompanyId$;\n        this.currentEmployeeId$ = sessionSelectors.currentEmployeeId$;\n        this.currentUserId$ = sessionSelectors.currentUserId$;\n        this.currentCompanyEtag$ = sessionSelectors.currentCompanyEtag$;\n        this.isAdmin$ = sessionSelectors.isAdmin$;\n        this.isSignedIn$ = sessionSelectors.isSignedIn$;\n        this.readOnly$ = sessionSelectors.readOnly$;\n        this.currentCompany$ = combineLatest(this.currentCompanyId$, entitySelectors.company.entityMap$).pipe(map(function (_a) {\n            var id = _a[0], entityMap = _a[1];\n            return entityMap[id];\n        }), distinctUntilChanged(), tag('currentCompany$'), shareReplay(1));\n        this.currentEmployee$ = combineLatest(this.currentEmployeeId$, entitySelectors.employee.entityMap$).pipe(map(function (_a) {\n            var id = _a[0], entityMap = _a[1];\n            return entityMap[id];\n        }), distinctUntilChanged(), tag('currentEmployee$'), shareReplay(1));\n        this.currentUser$ = combineLatest(this.currentUserId$, entitySelectors.user.entityMap$).pipe(map(function (_a) {\n            var id = _a[0], entityMap = _a[1];\n            return id ? entityMap[id] : null;\n        }), distinctUntilChanged(), tag('currentUser$'), shareReplay(1));\n        this.loadAccountWhenRegularUserSignsIn();\n        this.setAccountStateTransitions$();\n    }\n    /** Clear the store of all company-specific collections + the User collection. A must during sign out */\n    SessionService.prototype.clearCurrentAccount = function () {\n        this.setReadOnly(false);\n        this.sessionDispatcher.setCurrentAccount(null, null);\n        var companyEntityTypes = Object.keys(entityMetadata).filter(isCompanyEntity);\n        this.entityDispatcher.clearCollections(companyEntityTypes);\n    };\n    /**\n     * Generate a new GUID-like string identifier\n     */\n    SessionService.prototype.generateId = function () {\n        return this.idGenerator.generateId();\n    };\n    /**\n     * Load the company package for a {companyId, userId} pair\n     * Clears the company collections\n     * and loads the company package for the given company and user.\n     * Set current company and user.\n     * @param companyId The id of the company to load.\n     * @param userId The id of the current user for the account.\n     *\n     * @returns A COLD, terminating observable like an HttpClient method.\n     * You MUST SUBSCRIBE to make it work.\n     * You do not have to unsubscribe.\n     * Emits true if succeeded; else returns error on the error channel.\n     */\n    SessionService.prototype.loadAccountByCompanyUserIds = function (companyId, userId) {\n        var _this = this;\n        this.clearCurrentAccount();\n        if (!companyId) {\n            return throwError(\"Cannot load account without a company id\");\n        }\n        if (!userId) {\n            return throwError(\"Cannot load account without a user id\");\n        }\n        this.sessionDispatcher.setCurrentAccount(companyId, userId);\n        return this.companyPackageService.loadCompanyPackageByCompanyId(companyId).pipe(catchError(function (error) {\n            _this.clearCurrentAccount();\n            // TODO: The app will die because bound to data no longer in cache. Navigate to safety first?\n            var emsg = \"SessionService.loadAccountByCompanyUserIds failed for company: \" + companyId + \" and user: \" + userId;\n            _this.logger.error(emsg);\n            return throwError(emsg);\n        }), \n        // return true upon success; don't want caller looking at the raw server data.\n        concatMap(function (_) { return _this.isAdmin$; }), first(), map(function (isAdmin) {\n            // admin starts with ReadOnly view of account; regular user can edit\n            _this.setReadOnly(isAdmin);\n            return true;\n        }), tag('loadAccountByCompanyUserIds'));\n    };\n    SessionService.prototype.loadAccountWhenRegularUserSignsIn = function () {\n        var _this = this;\n        this.authUser$.pipe(withLatestFrom(this.isAdmin$), switchMap(function (_a) {\n            var authUser = _a[0], isAdmin = _a[1];\n            if (authUser && !isAdmin) {\n                // This changed AuthUser is a regular user\n                // Change the current account to this user, who becomes the current user,\n                // and load that user's account data.\n                // Do not wait for this to succeed.\n                // If something must wait, such as a navigation guard,\n                // it should look at the state of companyPackageLoading$.\n                return _this.loadAccountByCompanyUserIds(authUser.companyId, authUser.id);\n            }\n            else {\n                return of(false);\n            }\n        }))\n            .subscribe();\n    };\n    /**\n     * Reload the CompanyPackage for the current company and user.\n     * Error if either is missing/null\n     * @returns Cold, terminating observable which succeeds if the package reloaded\n     * or fails if it did not.\n     * You must subscribe but do not have to unsubscribe.\n     * Screwed if it fails because the attempt first erases the data in cache.\n     * TODO: Could recover by holding EntityCache copy and restoring it on failure.\n     */\n    SessionService.prototype.reloadCurrentCompanyPackage = function () {\n        var _this = this;\n        return combineLatest(this.currentCompanyId$, this.currentUserId$).pipe(first(), concatMap(function (_a) {\n            var companyId = _a[0], userId = _a[1];\n            if (companyId && userId) {\n                return _this.loadAccountByCompanyUserIds(companyId, userId);\n            }\n            else {\n                return throwError('No companyId or userId');\n            }\n        }), tag('reloadCurrentCompanyPackage'));\n    };\n    /** Setup the observable of AccountStateTransitions */\n    SessionService.prototype.setAccountStateTransitions$ = function () {\n        var _this = this;\n        this.accountStateTransitions$ = defer(function () {\n            if (_this.accountStateTransitionsCached) {\n                return of(_this.accountStateTransitionsCached);\n            }\n            return _this.http.get(environment.apiRoot + \"/account/accountStateTransitions\").pipe(map(function (response) {\n                return response.reduce(function (prev, curr) {\n                    prev[curr.current] = prev[curr.current] || {};\n                    prev[curr.current][curr.next] = {\n                        next: curr.next,\n                        automaticTransition: curr.automaticTransition,\n                        allowAdminOverride: curr.allowAdminOverride,\n                        allowWithErrors: curr.allowWithErrors,\n                        hideInUi: curr.hideInUi\n                    };\n                    return prev;\n                }, {});\n            }), map(function (t) { return _this.accountStateTransitionsCached = t; }));\n        }).pipe(shareReplay(1));\n    };\n    /**\n     * Change the current company's AccountStatus by sending a setStatus request to the server.\n     * If the server replies with success, reload the company package;\n     * the company should have the updated AccountStatus.\n     * @param status Change to this AccountStatus\n     * @returns Cold, terminating observable which succeeds if the status changed\n     * or fails if it did not.\n     * You must subscribe but do not have to unsubscribe.\n     */\n    SessionService.prototype.setAccountStatus = function (status) {\n        var _this = this;\n        return combineLatest(this.currentUserId$, this.currentCompany$).pipe(first(), concatMap(function (_a) {\n            var userId = _a[0], company = _a[1];\n            if (!userId || !company) {\n                throw new Error('No current user or company');\n            }\n            else if (!AccountStatusCodes.getByValue(status)) {\n                throw new Error(\"Invalid status code, \\\"\" + status + \"\\\"\");\n            }\n            if (company.status === status) {\n                return of([]); // no need to change\n            }\n            var companyId = company.id;\n            var url = environment.apiRoot + \"/account/\" + companyId + \"/status\";\n            return _this.http.post(url, { status: status }).pipe(concatMap(function (r) { return _this.loadAccountByCompanyUserIds(companyId, userId).pipe(map(function (_) { return r; })); }));\n        }), tag('setAccountStatus'));\n    };\n    /** Set the etag for the current company  */\n    SessionService.prototype.setCurrentCompanyEtag = function (etag) {\n        this.sessionDispatcher.setCurrentCompanyEtag(etag);\n    };\n    SessionService.prototype.setCurrentEmployeeId = function (id) {\n        this.sessionDispatcher.setCurrentEmployeeId(id);\n    };\n    /** Set session read-only flag to true or false. */\n    SessionService.prototype.setReadOnly = function (readOnly) {\n        this.sessionDispatcher.setReadOnly(readOnly);\n    };\n    SessionService.ngInjectableDef = i0.defineInjectable({ factory: function SessionService_Factory() { return new SessionService(i0.inject(i1.CompanyPackageService), i0.inject(i2.EntityDispatcher), i0.inject(i3.EntitySelectors), i0.inject(i4.HttpClient), i0.inject(i5.IdGeneratorService), i0.inject(i6.LoggerService), i0.inject(i7.SessionDispatcher), i0.inject(i8.SessionSelectors)); }, token: SessionService, providedIn: \"root\" });\n    return SessionService;\n}());\nexport { SessionService };\n","import {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  Input,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\n/**\r\n * Wrap a control in a div with a label, using bootstrap styles.\r\n * Saves a few keystrokes and makes the html somewhat nicer.\r\n * Example usage:\r\n      <sp-control label=\"First Name\">\r\n        <input type=\"text\" #input name=\"firstName\" [(ngModel)]=\"viewModel.firstName\">\r\n      </sp-control>\r\n * NOTE the #input hash is required on the inner <input> or <select> control.\r\n * Output:\r\n      <sp-control label=\"First Name\">\r\n        <div class=\"form-group\">\r\n          <label for=\"firstName\">First Name</label>\r\n          <input name=\"firstName\" type=\"text\" id=\"firstName\" class=\"form-control\" [(ngModel)]=\"viewModel.firstName\">\r\n        </div>\r\n      </sp-control>\r\n *\r\n */\r\n\r\n const CLICK_THREHOLD = 150; // ms\r\n\r\n@Component({\r\n  selector: 'sp-control',\r\n  templateUrl: './control-wrap.component.html'\r\n})\r\nexport class ControlWrapComponent implements AfterContentInit {\r\n  @Input() label: string;\r\n  @Input() tooltip = false;\r\n  @ContentChild('input') input: any;\r\n  @ViewChild('tooltipButton') tooltipButton: any;\r\n  @ViewChild('root') root: any;\r\n\r\n  id: string;\r\n  open = false;\r\n  tClose = 0;\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    private viewContainer: ViewContainerRef\r\n  ) {}\r\n\r\n  ngAfterContentInit(): void {\r\n    const el = this.input && this.input.nativeElement;\r\n    if (!el) {\r\n      return;\r\n    }\r\n    // Get the input's id. Assume we have name, since it's required by ngModel in a form\r\n    const id = el.id || el.name;\r\n    if (!el.id) {\r\n      // Add id to the input element so that the label will be tied to it (for screenreaders)\r\n      el.id = id;\r\n    }\r\n    this.id = id;\r\n\r\n    // add class=\"form-control\" if missing\r\n    el.classList.add('form-control');\r\n  }\r\n\r\n  openTooltip() {\r\n    const d = Date.now() - this.tClose;\r\n    if (d < CLICK_THREHOLD) {\r\n      return;\r\n    }\r\n    if (!this.open) {\r\n      const myRoot = this.root.nativeElement;\r\n      // give some millisecs to open the tooltip-div\r\n      this.open = true;\r\n      setTimeout(() => {\r\n        const tooltipDiv = myRoot.querySelector('#tooltipZone') as HTMLDivElement;\r\n        if (tooltipDiv) {\r\n          tooltipDiv.focus();\r\n        }\r\n      });\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n  openKeypress(event: any) {\r\n    if (event.charCode === 13 || event.charCode === 32) {\r\n      // intro or space\r\n      this.openTooltip();\r\n    }\r\n  }\r\n\r\n  closeTooltip(event: any = null) {\r\n    if (isOpeningALink(event)) {\r\n      // cancel closing to allow a.click() proceed\r\n      event.preventDefault = false;\r\n      return false;\r\n    }\r\n    this.tClose = Date.now();\r\n    this.open = false;\r\n    this.tooltipButton.nativeElement.focus();\r\n  }\r\n  closeKeypress(event: any) {\r\n    if (event.charCode === 13 || event.charCode === 32) {\r\n      // intro or escape or space\r\n      this.closeTooltip();\r\n    }\r\n  }\r\n}\r\n\r\nfunction isOpeningALink(event: any): boolean {\r\n  return event &&\r\n         event.type === 'blur' &&\r\n         event.relatedTarget &&\r\n         event.relatedTarget.localName === 'a';\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { EntityCollectionServiceBase, ChangeSetOperation } from 'ngrx-data';\nimport { combineLatest } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { entitiesWithoutCompanyId } from '../entity-metadata';\nimport { SubSink } from '@core';\n/**\n * A default EntityCollectionService whose entities$ are filtered to include only\n * those belonging to the current company\n */\nvar CurrentCompanyEntityCollectionService = /** @class */ (function (_super) {\n    __extends(CurrentCompanyEntityCollectionService, _super);\n    function CurrentCompanyEntityCollectionService(entityName, helper) {\n        var _this = _super.call(this, entityName, helper.collectionServiceElementsFactory) || this;\n        _this.entityName = entityName;\n        _this.helper = helper;\n        _this.subs = new SubSink();\n        _this.readOnly$ = _this.helper.readOnly$;\n        if (entitiesWithoutCompanyId[entityName]) {\n            throw new Error(\"Bad collection: '\" + entityName + \"' is not a company-owned entity type\");\n        }\n        _this.detectMixedCompany();\n        return _this;\n    }\n    CurrentCompanyEntityCollectionService.prototype.ngOnDestroy = function () {\n        this.subs.unsubscribe();\n    };\n    // Paranoia: trip wire to detect if any entity changes of THIS type belong to a different company\n    CurrentCompanyEntityCollectionService.prototype.detectMixedCompany = function () {\n        var _this = this;\n        // Service never dies but, as long as we're paranoid, we handle unsubscribe if the service does die.\n        this.subs.sink = combineLatest(this.helper.currentCompanyId$.pipe(filter(function (id) { return !!id; })), this.selectors$.entityMap$).subscribe(function (_a) {\n            var companyId = _a[0], entityMap = _a[1];\n            Object.keys(entityMap).forEach(function (key) {\n                if (entityMap[key].companyId !== companyId) {\n                    throw new Error(\"\\\"\" + _this.entityName + \"\\\" with id=\" + key + \" does not belong to the current company, \" + companyId + \".\");\n                }\n            });\n        });\n    };\n    /**\n     * Create a new entity as a clean clone of source entity data.\n     * Set its `id` if missing and createId: true.\n     * Set its `companyId` if missing.\n     * @param source source entity data.\n     * @param createId True if should generate id when missing.\n     * False by default because might save with upsert which only recognizes new deductions when they lack an id.\n     */\n    CurrentCompanyEntityCollectionService.prototype.create = function (source, createId) {\n        if (createId === void 0) { createId = false; }\n        // strip the prototype off before saving\n        source = Object.assign({}, source);\n        // if entity lacks an id and should have one, generate it.\n        if (!source.id && createId) {\n            source.id = this.helper.generateId();\n        }\n        // if entity lacks companyId, use the most recent snapshot currentCompanyId value\n        if (!source.companyId) {\n            source.companyId = this.helper.currentCompanyId;\n        }\n        return source;\n    };\n    /** Create entity from entity data and save it. Generates id if missing. */\n    CurrentCompanyEntityCollectionService.prototype.add = function (entity, options) {\n        return _super.prototype.add.call(this, this.create(entity, true), options); // generates the id if missing\n    };\n    /**\n     * Dispatch action to save multiple entity changes to remote storage.\n     * @param changeSet Either the entities to save, as an array of {ChangeSetItem}, or\n     * a ChangeSet that holds such changes.\n     * @param url The server url which receives the save request\n     * @param [options] options such as tag, correlationId, isOptimistic, and mergeStrategy.\n     * These values are defaulted if not supplied.\n     * @returns A terminating Observable<ChangeSet> with data returned from the server\n     * after server reports successful save OR the save error.\n     */\n    CurrentCompanyEntityCollectionService.prototype.saveEntities = function (changeSet, url, options) {\n        if (changeSet.changes.some(function (change) { return change.op === ChangeSetOperation.Upsert; })) {\n            throw new Error('ECommerce cannot multi-save an upsert operation because client must create id');\n        }\n        return this.helper.entityCacheDispatcher.saveEntities(changeSet, url, options);\n    };\n    CurrentCompanyEntityCollectionService.prototype.update = function (entity, options) {\n        if (!entity.id) {\n            throw new Error(\"'\" + this.entityName + \"' is missing its id\");\n        }\n        if (!entity.companyId || entity.companyId !== this.helper.currentCompanyId) {\n            throw new Error(\"'\" + this.entityName + \"' is missing its companyId or does not belong to the current company\");\n        }\n        // strip the prototype off before saving\n        return _super.prototype.update.call(this, Object.assign({}, entity), options);\n    };\n    /**\n     * Save new or updated entity to server.\n     * @param entity entity of type T to save to the server, either with add or update.\n     * @param [options] options that influence save and merge behavior\n     * @returns Observables of the save operation for that entity.\n     */\n    CurrentCompanyEntityCollectionService.prototype.upsert = function (entity, options) {\n        return entity.id ? this.update(entity, options) : this.add(entity, options);\n    };\n    return CurrentCompanyEntityCollectionService;\n}(EntityCollectionServiceBase));\nexport { CurrentCompanyEntityCollectionService };\n","import { OnDestroy } from '@angular/core';\r\nimport { ChangeSet, EntityActionOptions, EntityCollectionServiceBase, ChangeSetOperation } from 'ngrx-data';\r\n\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { concatMap, filter, map } from 'rxjs/operators';\r\n\r\nimport { CompanyEntityBase } from '@model';\r\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\r\nimport { entitiesWithoutCompanyId } from '../entity-metadata';\r\nimport { SubSink } from '@core';\r\n\r\n/**\r\n * A default EntityCollectionService whose entities$ are filtered to include only\r\n * those belonging to the current company\r\n */\r\nexport class CurrentCompanyEntityCollectionService<T extends CompanyEntityBase> extends EntityCollectionServiceBase<T>\r\n  implements OnDestroy {\r\n\r\n  private subs = new SubSink();\r\n\r\n  constructor(\r\n    public entityName: string,\r\n    protected helper: CompanyEntityHelperService\r\n  ) {\r\n    super(entityName, helper.collectionServiceElementsFactory);\r\n\r\n    if (entitiesWithoutCompanyId[entityName]) {\r\n      throw new Error(`Bad collection: '${entityName}' is not a company-owned entity type`);\r\n    }\r\n\r\n    this.detectMixedCompany();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  // Paranoia: trip wire to detect if any entity changes of THIS type belong to a different company\r\n  private detectMixedCompany() {\r\n    // Service never dies but, as long as we're paranoid, we handle unsubscribe if the service does die.\r\n    this.subs.sink = combineLatest(\r\n      this.helper.currentCompanyId$.pipe(filter(id => !!id)),\r\n      this.selectors$.entityMap$\r\n    ).subscribe(\r\n      ([companyId, entityMap]) => {\r\n        Object.keys(entityMap).forEach(key => {\r\n          if (entityMap[key].companyId !== companyId) {\r\n            throw new Error(`\"${this.entityName}\" with id=${key} does not belong to the current company, ${companyId}.`);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Create a new entity as a clean clone of source entity data.\r\n   * Set its `id` if missing and createId: true.\r\n   * Set its `companyId` if missing.\r\n   * @param source source entity data.\r\n   * @param createId True if should generate id when missing.\r\n   * False by default because might save with upsert which only recognizes new deductions when they lack an id.\r\n   */\r\n  create(source: T, createId = false): T {\r\n    // strip the prototype off before saving\r\n    source = Object.assign({}, source);\r\n\r\n    // if entity lacks an id and should have one, generate it.\r\n    if (!source.id && createId) {\r\n      source.id = this.helper.generateId();\r\n    }\r\n\r\n    // if entity lacks companyId, use the most recent snapshot currentCompanyId value\r\n    if (!source.companyId) {\r\n      source.companyId = this.helper.currentCompanyId;\r\n    }\r\n\r\n    return source;\r\n  }\r\n\r\n  /** Create entity from entity data and save it. Generates id if missing. */\r\n  add(entity: T, options?: EntityActionOptions) {\r\n    return super.add(this.create(entity, true), options); // generates the id if missing\r\n  }\r\n\r\n  readOnly$ = this.helper.readOnly$;\r\n\r\n  /**\r\n   * Dispatch action to save multiple entity changes to remote storage.\r\n   * @param changeSet Either the entities to save, as an array of {ChangeSetItem}, or\r\n   * a ChangeSet that holds such changes.\r\n   * @param url The server url which receives the save request\r\n   * @param [options] options such as tag, correlationId, isOptimistic, and mergeStrategy.\r\n   * These values are defaulted if not supplied.\r\n   * @returns A terminating Observable<ChangeSet> with data returned from the server\r\n   * after server reports successful save OR the save error.\r\n   */\r\n  saveEntities(changeSet: ChangeSet, url: string, options?: EntityActionOptions) {\r\n    if (changeSet.changes.some(change => change.op === ChangeSetOperation.Upsert)) {\r\n      throw new Error('ECommerce cannot multi-save an upsert operation because client must create id');\r\n    }\r\n    return this.helper.entityCacheDispatcher.saveEntities(changeSet, url, options);\r\n  }\r\n\r\n  update(entity: Partial<T>, options?: EntityActionOptions) {\r\n    if (!entity.id) {\r\n      throw new Error(`'${this.entityName}' is missing its id`);\r\n    }\r\n    if (!entity.companyId || entity.companyId !== this.helper.currentCompanyId) {\r\n      throw new Error(`'${this.entityName}' is missing its companyId or does not belong to the current company`);\r\n    }\r\n    // strip the prototype off before saving\r\n    return super.update(Object.assign({}, entity), options);\r\n  }\r\n\r\n  /**\r\n   * Save new or updated entity to server.\r\n   * @param entity entity of type T to save to the server, either with add or update.\r\n   * @param [options] options that influence save and merge behavior\r\n   * @returns Observables of the save operation for that entity.\r\n   */\r\n  upsert(entity: T, options?: EntityActionOptions) {\r\n    return entity.id ? this.update(entity, options) : this.add(entity, options);\r\n  }\r\n}\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { of, throwError } from 'rxjs';\nimport { catchError, concatMap, first, map, tap } from 'rxjs/operators';\nimport { environment } from '@environment';\nimport { LoggerService } from '@core/services/logger.service';\nimport { sanitizeLegalName } from '@core/utils';\nimport { SessionService } from '@session';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./logger.service\";\nimport * as i3 from \"../../store/session/session.service\";\nvar tinCheckUrl = environment.apiRoot + '/ein/lookup';\nvar TinCheckService = /** @class */ (function () {\n    function TinCheckService(http, logger, sessionService) {\n        this.http = http;\n        this.logger = logger;\n        // Cache of TinCheck Responses accumulated in this user session.\n        this.responses = {};\n        this._tinCheckCount = 0;\n        this.readOnly$ = sessionService.readOnly$;\n    }\n    /**\n     * Check with the TinCheck service if an FEIN/Legal Name combination is valid\n     * @returns Terminating observable of the TinCheck service response.\n     * Must subscribe but need not unsubscribe.\n     */\n    TinCheckService.prototype.check = function (fein, legalNameRaw) {\n        var _this = this;\n        var legalName = sanitizeLegalName(legalNameRaw);\n        if (isBadFeinNumber(fein) || !legalName) {\n            return throwError(new Error(\"Bad FEIN \\\"\" + fein + \"\\\" or empty legal name\"));\n        }\n        // Check the cached responses first.\n        var key = fein + '|' + legalName;\n        var cachedResponse = this.responses[key];\n        if (cachedResponse) {\n            return of(__assign({}, cachedResponse, { cached: true }));\n        }\n        var mockEinResponse = einLookupInterceptor(fein, legalName);\n        if (mockEinResponse) {\n            mockEinResponse.name = sanitizeXmlEntities(mockEinResponse.name);\n            var tinCheckResponse = this.toTinCheckResponse(fein, legalName, mockEinResponse);\n            this.cacheTinCheckResponse(tinCheckResponse);\n            return of(tinCheckResponse);\n        }\n        return this.readOnly$.pipe(first(), concatMap(function (readOnly) {\n            if (readOnly) {\n                throw new Error('Cannot verify FEIN in read-only mode');\n            }\n            return _this.callTinCheckService(fein, legalName, key);\n        }));\n    };\n    TinCheckService.prototype.callTinCheckService = function (fein, legalName, cacheKey) {\n        var _this = this;\n        var params = new HttpParams()\n            .set('ein', fein)\n            .set('name', legalName);\n        return this.http\n            .get(tinCheckUrl, { params: params })\n            .pipe(map(function (r) { return _this.toTinCheckResponse(fein, legalName, r); }), tap(function (r) {\n            _this.cacheTinCheckResponse(r);\n            if (r.serviceUnavailable) {\n                return; // do not count attempt\n            }\n            _this._tinCheckCount++; // bump count of successful TinCheck service calls\n        }), catchError(function (error) {\n            _this.logger.error(error);\n            var res = {\n                fein: fein,\n                originalNameProvided: legalName,\n                matchedName: null,\n                verified: false,\n                invalid: false,\n                error: true,\n                serviceUnavailable: false,\n                serviceResponse: error\n            };\n            return of(res);\n        }));\n    };\n    TinCheckService.prototype.cacheTinCheckResponse = function (r) {\n        if (r.serviceUnavailable) {\n            return; // Do not cache \"service unavailable\" responses. Want to retry them.\n        }\n        // cache the converted response.\n        var cacheKey = r.fein + '|' + r.originalNameProvided;\n        r.matchedName = sanitizeXmlEntities(r.matchedName);\n        this.responses[cacheKey] = r;\n        if (!r.verified && r.matchedName) {\n            //  also cache what the service says is the proper matching legal name\n            var key2 = r.fein + '|' + r.matchedName;\n            this.responses[key2] = {\n                fein: r.fein,\n                originalNameProvided: r.originalNameProvided,\n                matchedName: r.matchedName,\n                verified: true,\n                invalid: false,\n                error: false,\n                serviceUnavailable: false,\n                serviceResponse: r.serviceResponse\n            };\n        }\n    };\n    // Just in case and for testing\n    TinCheckService.prototype.clearCachedResponses = function () {\n        this.responses = {};\n    };\n    Object.defineProperty(TinCheckService.prototype, \"tinCheckCount\", {\n        get: function () {\n            return this._tinCheckCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TinCheckService.prototype.toTinCheckResponse = function (fein, originalNameProvided, r) {\n        var verified = r.matchStatus === 'Exact';\n        var invalid = r.matchStatus === 'Disallowed';\n        var serviceUnavailable = r.matchStatus === 'ServiceUnavailable';\n        var possibleMatch = (r.matchStatus === 'Partial' || r.matchStatus === 'Exact' || r.matchStatus === 'Error') ? r.name : '';\n        var res = {\n            fein: fein,\n            originalNameProvided: originalNameProvided,\n            matchedName: possibleMatch,\n            verified: verified,\n            invalid: invalid,\n            error: false,\n            serviceUnavailable: serviceUnavailable,\n            serviceResponse: r\n        };\n        return res;\n    };\n    TinCheckService.ngInjectableDef = i0.defineInjectable({ factory: function TinCheckService_Factory() { return new TinCheckService(i0.inject(i1.HttpClient), i0.inject(i2.LoggerService), i0.inject(i3.SessionService)); }, token: TinCheckService, providedIn: \"root\" });\n    return TinCheckService;\n}());\nexport { TinCheckService };\nfunction sanitizeXmlEntities(text) {\n    if (!text) {\n        return null;\n    }\n    return text.replace('&amp;', '&')\n        .replace('&amp;', '&') // Repeated for double encoding in TIN CHECK responses\n        .replace('&apos;', '\\'')\n        .replace('&quote;', '\"')\n        .replace('&lt;', '<')\n        .replace('&gt;', '>');\n}\n/**\n * Intercept well-known test FEINs and emulate the appropriate TinCheck server response data\n * @param ein: The FEIN\n * @param name: The candidate legal name\n * @returns Simulated TinCheck Service response data if intercepted, else null\n * Intercepted eins:\n *   11-1111111: 'partial' match,\n *   12-3456789: 'error' match,\n *   22-2222222: 'exact' match,\n *   33-3333333: 'disallowed' match,\n *   44-4444444: 'serviceUnavailable' match,\n *   55-5555555: 'none' match\n */\nexport function einLookupInterceptor(ein, name) {\n    if (!ein || !name) {\n        return null;\n    }\n    switch (ein) {\n        // Dev, Test, and Stage environments use these mocks\n        case '11-1111111':\n            return {\n                ein: ein,\n                name: name.substr(0, 25) + ' TEST',\n                matchStatus: 'Partial'\n            };\n        // Known to return matchStatus:'Error'\n        case '12-3456789':\n            return {\n                ein: ein,\n                name: 'NOT A REAL COMPANY',\n                matchStatus: 'Error'\n            };\n        case '22-2222222':\n            return {\n                ein: ein,\n                name: name,\n                matchStatus: 'Exact'\n            };\n        case '33-3333333':\n            return {\n                ein: ein,\n                name: '',\n                matchStatus: 'Disallowed'\n            };\n        case '44-4444444':\n            return {\n                ein: ein,\n                name: '',\n                matchStatus: 'ServiceUnavailable'\n            };\n        case '55-5555555':\n            return {\n                ein: ein,\n                name: '',\n                matchStatus: 'None'\n            };\n        default:\n            return null;\n    }\n}\n/**\n * Return true if the fein value is a badly-formed FEIN number.\n */\nexport function isBadFeinNumber(fein) {\n    if (fein === void 0) { fein = ''; }\n    return !isGoodFeinNumber(fein);\n}\n/**\n * Return true if the fein value is a well-formed FEIN number although it might not be a real FEIN.\n */\nexport function isGoodFeinNumber(fein) {\n    if (fein === void 0) { fein = ''; }\n    return fein && /\\d{2}-\\d{7}/.test(fein);\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, concatMap, first, map, tap } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environment';\r\nimport { LoggerService } from '@core/services/logger.service';\r\nimport { sanitizeLegalName } from '@core/utils';\r\nimport { SessionService } from '@session';\r\n\r\nconst tinCheckUrl = environment.apiRoot + '/ein/lookup';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class TinCheckService {\r\n\r\n  // Cache of TinCheck Responses accumulated in this user session.\r\n  private responses: {[key: string]: TinCheckResponse } = {};\r\n\r\n  private _tinCheckCount = 0;\r\n\r\n  private readOnly$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private logger: LoggerService,\r\n    sessionService: SessionService\r\n  ) {\r\n    this.readOnly$ = sessionService.readOnly$;\r\n  }\r\n\r\n  /**\r\n   * Check with the TinCheck service if an FEIN/Legal Name combination is valid\r\n   * @returns Terminating observable of the TinCheck service response.\r\n   * Must subscribe but need not unsubscribe.\r\n   */\r\n  check(fein: string, legalNameRaw: string): Observable<TinCheckResponse> {\r\n\r\n    const legalName = sanitizeLegalName(legalNameRaw);\r\n\r\n    if (isBadFeinNumber(fein) || !legalName) {\r\n      return throwError(\r\n        new Error(`Bad FEIN \"${fein}\" or empty legal name`)\r\n      );\r\n    }\r\n\r\n    // Check the cached responses first.\r\n    const key = fein + '|' + legalName;\r\n    const cachedResponse = this.responses[key];\r\n    if (cachedResponse) {\r\n      return of({ ...cachedResponse, cached: true });\r\n    }\r\n\r\n    const mockEinResponse = einLookupInterceptor(fein, legalName);\r\n    if (mockEinResponse) {\r\n      mockEinResponse.name = sanitizeXmlEntities(mockEinResponse.name);\r\n      const tinCheckResponse = this.toTinCheckResponse(fein, legalName, mockEinResponse);\r\n      this.cacheTinCheckResponse(tinCheckResponse);\r\n      return of(tinCheckResponse);\r\n    }\r\n\r\n    return this.readOnly$.pipe(\r\n      first(),\r\n      concatMap(readOnly => {\r\n        if (readOnly) {\r\n          throw new Error('Cannot verify FEIN in read-only mode');\r\n        }\r\n        return this.callTinCheckService(fein, legalName, key);\r\n      })\r\n    );\r\n  }\r\n\r\n  private callTinCheckService(fein: string, legalName: string, cacheKey: string): Observable<TinCheckResponse> {\r\n    const params = new HttpParams()\r\n    .set('ein', fein)\r\n    .set('name', legalName);\r\n\r\n    return this.http\r\n      .get(tinCheckUrl, { params })\r\n      .pipe(\r\n        map((r: EinLookupResponse) => this.toTinCheckResponse(fein, legalName, r)),\r\n        tap(r => {\r\n            this.cacheTinCheckResponse(r);\r\n            if (r.serviceUnavailable) {\r\n              return;  // do not count attempt\r\n            }\r\n            this._tinCheckCount++; // bump count of successful TinCheck service calls\r\n        }),\r\n        catchError(error => {\r\n          this.logger.error(error);\r\n          const res: TinCheckResponse = {\r\n            fein,\r\n            originalNameProvided: legalName,\r\n            matchedName: null,\r\n            verified: false,\r\n            invalid: false,\r\n            error: true,\r\n            serviceUnavailable: false,\r\n            serviceResponse: error\r\n          };\r\n          return of(res);\r\n        })\r\n      );\r\n  }\r\n\r\n  private cacheTinCheckResponse(r: TinCheckResponse) {\r\n    if (r.serviceUnavailable) {\r\n      return; // Do not cache \"service unavailable\" responses. Want to retry them.\r\n    }\r\n\r\n    // cache the converted response.\r\n    const cacheKey = r.fein + '|' + r.originalNameProvided;\r\n    r.matchedName = sanitizeXmlEntities(r.matchedName);\r\n    this.responses[cacheKey] = r;\r\n    if (!r.verified && r.matchedName) {\r\n      //  also cache what the service says is the proper matching legal name\r\n      const key2 = r.fein + '|' + r.matchedName;\r\n      this.responses[key2] = {\r\n        fein: r.fein,\r\n        originalNameProvided: r.originalNameProvided,\r\n        matchedName: r.matchedName,\r\n        verified: true,\r\n        invalid: false,\r\n        error: false,\r\n        serviceUnavailable: false,\r\n        serviceResponse: r.serviceResponse\r\n      };\r\n    }\r\n  }\r\n\r\n  // Just in case and for testing\r\n  clearCachedResponses() {\r\n    this.responses = {};\r\n  }\r\n\r\n  get tinCheckCount() {\r\n    return this._tinCheckCount;\r\n  }\r\n\r\n  private toTinCheckResponse(fein: string, originalNameProvided: string, r: EinLookupResponse): TinCheckResponse {\r\n    const verified = r.matchStatus === 'Exact';\r\n    const invalid = r.matchStatus === 'Disallowed' ;\r\n    const serviceUnavailable = r.matchStatus === 'ServiceUnavailable';\r\n    const possibleMatch = (r.matchStatus === 'Partial' || r.matchStatus === 'Exact' || r.matchStatus === 'Error') ? r.name : '';\r\n    const res: TinCheckResponse = {\r\n      fein,\r\n      originalNameProvided,\r\n      matchedName: possibleMatch,\r\n      verified,\r\n      invalid,\r\n      error: false,\r\n      serviceUnavailable,\r\n      serviceResponse: r\r\n    };\r\n    return res;\r\n  }\r\n}\r\n\r\nexport interface TinCheckResponse {\r\n  fein: string;\r\n  originalNameProvided: string;\r\n  matchedName: string;\r\n  verified: boolean;\r\n  invalid: boolean;\r\n  error: boolean;\r\n  serviceUnavailable: boolean;\r\n  serviceResponse: EinLookupResponse;\r\n  /** Response came from services cache of responses. Don't increment the attempts count */\r\n  cached?: boolean;\r\n}\r\n\r\ntype EinLookupMatchStatus = 'Exact' | 'Partial'| 'None' | 'Disallowed' | 'Error' | 'ServiceUnavailable';\r\n\r\nexport interface EinLookupResponse {\r\n  ein: string;\r\n  name: string;\r\n  matchStatus: EinLookupMatchStatus;\r\n}\r\n\r\nfunction sanitizeXmlEntities(text: string): string {\r\n  if (!text) {\r\n    return null;\r\n  }\r\n  return text.replace('&amp;', '&')\r\n             .replace('&amp;', '&')   // Repeated for double encoding in TIN CHECK responses\r\n             .replace('&apos;', '\\'')\r\n             .replace('&quote;', '\"')\r\n             .replace('&lt;', '<')\r\n             .replace('&gt;', '>');\r\n}\r\n\r\n/**\r\n * Intercept well-known test FEINs and emulate the appropriate TinCheck server response data\r\n * @param ein: The FEIN\r\n * @param name: The candidate legal name\r\n * @returns Simulated TinCheck Service response data if intercepted, else null\r\n * Intercepted eins:\r\n *   11-1111111: 'partial' match,\r\n *   12-3456789: 'error' match,\r\n *   22-2222222: 'exact' match,\r\n *   33-3333333: 'disallowed' match,\r\n *   44-4444444: 'serviceUnavailable' match,\r\n *   55-5555555: 'none' match\r\n */\r\nexport function einLookupInterceptor(ein: string, name: string): EinLookupResponse {\r\n  if (!ein || !name) {\r\n    return null;\r\n  }\r\n\r\n  switch (ein) {\r\n    // Dev, Test, and Stage environments use these mocks\r\n    case '11-1111111':\r\n      return {\r\n        ein,\r\n        name: name.substr(0, 25) + ' TEST',\r\n        matchStatus: 'Partial'\r\n      };\r\n\r\n    // Known to return matchStatus:'Error'\r\n    case '12-3456789':\r\n      return {\r\n        ein,\r\n        name: 'NOT A REAL COMPANY',\r\n        matchStatus: 'Error'\r\n      };\r\n\r\n    case '22-2222222':\r\n      return {\r\n        ein,\r\n        name: name,\r\n        matchStatus: 'Exact'\r\n      };\r\n\r\n    case '33-3333333':\r\n      return {\r\n        ein,\r\n        name: '',\r\n        matchStatus: 'Disallowed'\r\n      };\r\n\r\n    case '44-4444444':\r\n      return {\r\n        ein,\r\n        name: '',\r\n        matchStatus: 'ServiceUnavailable'\r\n      };\r\n\r\n    case '55-5555555':\r\n      return {\r\n        ein,\r\n        name: '',\r\n        matchStatus: 'None'\r\n      };\r\n    default:\r\n      return null;\r\n\r\n  }\r\n}\r\n\r\n/**\r\n * Return true if the fein value is a badly-formed FEIN number.\r\n */\r\nexport function isBadFeinNumber(fein: string = ''): boolean {\r\n  return !isGoodFeinNumber(fein);\r\n}\r\n\r\n/**\r\n * Return true if the fein value is a well-formed FEIN number although it might not be a real FEIN.\r\n */\r\nexport function isGoodFeinNumber(fein: string = ''): boolean {\r\n  return fein && /\\d{2}-\\d{7}/.test(fein);\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\n/** Token for registering the Window object in DI  */\r\nexport const WindowToken = new InjectionToken('Window',\r\n{ providedIn: 'root',\r\n  factory: windowProviderFactory }\r\n);\r\n\r\n/** Factory to provide the Window object */\r\nexport function windowProviderFactory() {\r\n  return window;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { HouseholdFilersStatus } from '@app/model';\r\n\r\n@Pipe({ name: 'householdFilerStatus' })\r\nexport class HouseholdFilerStatusPipe implements PipeTransform {\r\n  transform(value: HouseholdFilersStatus): string {\r\n    if (value === HouseholdFilersStatus.Single) {\r\n      return 'Single';\r\n    } else if (value === HouseholdFilersStatus.Joint) {\r\n      return 'Joint';\r\n    }\r\n    return 'missing';\r\n  }\r\n}\r\n","/**\r\n * Location services interfaces and types\r\n * Drawn from Google Maps API\r\n * https://developers.google.com/maps/documentation/javascript/reference/3\r\n */\r\n\r\n// https://developers.google.com/maps/documentation/javascript/reference/3/#Autocomplete\r\n/** Nullo version for when Autocomplete is unavailable. */\r\nexport const nullAutocomplete = {\r\n  getPlace: () => null as PlaceResult,\r\n  setBounds: (bounds: LatLngBounds) => {},\r\n  setOptions: (options: AutocompleteOptions) => {},\r\n  addListener: (eventName: string, callback: () => void) => {}\r\n};\r\n\r\n// https://developers.google.com/maps/documentation/javascript/reference/3/#Autocomplete\r\n/** AutoComplete class (partial) that attaches to an input element */\r\nexport type Autocomplete = typeof nullAutocomplete;\r\n\r\n// https://developers.google.com/maps/documentation/javascript/reference/3/#AutocompleteService\r\n/** Nullo version for when AutocompleteService is unavailable. */\r\nexport const nullAutocompleteService = {\r\n  getPlacePredictions: (\r\n    args: AutocompletionRequest,\r\n    callBack: (predictions: AutocompletePrediction[], status: string) => void\r\n  ) => {\r\n    callBack([], null);\r\n  }\r\n};\r\n\r\n// https://developers.google.com/maps/documentation/javascript/reference/3/#AutocompleteService\r\n/** Autocomplete Service class (partial), independent of any HTML control. */\r\nexport type AutocompleteService = typeof nullAutocompleteService;\r\n\r\n// Partial interface\r\n// https://developers.google.com/maps/documentation/javascript/reference/3/#AutocompleteOptions\r\n/** Argument to Autocomplete constructor and setOptions */\r\nexport interface AutocompleteOptions {\r\n  componentRestrictions: ComponentRestrictions;\r\n  input: string;\r\n  types: string[]; // use ['geocode']\r\n}\r\n\r\n// Partial interface\r\n// https://developers.google.com/maps/documentation/javascript/reference/3/#AutocompletePrediction\r\n/** Result of AutocompleteService.getPlacePredictions() */\r\nexport interface AutocompletePrediction {\r\n  /** Complete address as a string */\r\n  description: string;\r\n  /** Id to look up address details (see PlacesService.getDetails) */\r\n  place_id: string;\r\n}\r\n\r\n// Partial interface\r\n// https://developers.google.com/maps/documentation/javascript/reference/3/#AutocompletionRequest\r\n/** Argument to AutocompleteService.getPlacePredictions() */\r\nexport interface AutocompletionRequest {\r\n  componentRestrictions: ComponentRestrictions;\r\n  /** User's string input */\r\n  input: string;\r\n  location?: LatLngLiteral;\r\n  radius?: number; // meters\r\n  types: string[]; // use ['geocode']\r\n}\r\n\r\n// Partial interface\r\n/** Limit addresses to these countries (always limit to 'us' in this app) */\r\nexport interface ComponentRestrictions {\r\n  country: string | string[]; // must be 'us' for this app\r\n}\r\n\r\n// https://developers.google.com/maps/documentation/javascript/reference/3/#GeocoderAddressComponent\r\n/** Fragment of an address */\r\nexport interface GeocoderAddressComponent {\r\n  /** The full text of the address component, e.g., 'California' */\r\n  long_name: string;\r\n  /** The abbreviated, short text of the given address component, e.g., 'CA' */\r\n  short_name: string;\r\n  // https://developers.google.com/maps/documentation/geocoding/start#Types\r\n  /** An array of {GeocoderAddressType} strings denoting the type of this address component, e.g. ['route'] */\r\n  types: GeocoderAddressType[]; //\r\n}\r\n\r\n// Address fragments that we care about\r\n// https://developers.google.com/maps/documentation/geocoding/start#Types\r\n/** String denoting the type of an address component */\r\nexport type GeocoderAddressType =\r\n  | 'street_number'\r\n  | 'route' // street\r\n  | 'premise' // suite or building number\r\n  | 'locality' // city\r\n  | 'administrative_area_level_2' // county\r\n  | 'administrative_area_level_1' // state\r\n  | 'postal_code' // zip\r\n  | 'postal_code_suffix' // zip+4\r\n  | 'country'; // US\r\n\r\n/** Latitude Longitude Literal */\r\nexport interface LatLngLiteral {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\n// https://developers.google.com/maps/documentation/javascript/reference/3/#LatLngBounds\r\n/**\r\n * Autocomplete.setBounds() arg that represents a rectangle in geographical coordinates.\r\n * Can calculate with google.maps.Circle()\r\n */\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface LatLngBounds {}\r\n\r\n// Partial interface\r\n// https://developers.google.com/maps/documentation/javascript/reference/3/#PlaceResult\r\n/** Result of Autocomplete.getPlace() */\r\nexport interface PlaceResult {\r\n  place_id: string;\r\n  address_components: GeocoderAddressComponent[];\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { EsignService, LoggerService } from '@app/core';\r\nimport { IframeService } from '@app/core/services/iframe.service';\r\n\r\n@Component({\r\n  selector: 'sp-view-docs',\r\n  template: `\r\n  <button *ngIf=\"!!envelopeId\" class=\"btn btn-secondary btn-icon-combo mt-3\" type=\"button\"\r\n  (click)=\"viewDocs(envelopeId);\">\r\n    <span>View Signed Documents </span>\r\n    <i class=\"material-icons icon d-inline\">chevron_right</i>\r\n  </button>\r\n  `\r\n})\r\nexport class ViewDocsComponent {\r\n\r\n  @Input() envelopeId: string;\r\n\r\n  constructor(\r\n    private esignService: EsignService,\r\n    private iframeService: IframeService,\r\n    private logger: LoggerService,\r\n  ) {\r\n    this.esignDone = this.esignDone.bind(this);\r\n    this.esignError = this.esignError.bind(this);\r\n  }\r\n\r\n  viewDocs(envelopeId: string) {\r\n    this.esignService.getEnvelopeUrl(envelopeId).subscribe(url => {\r\n      if (url) {\r\n        this.iframeService.show(url, this.esignDone);\r\n      } else {\r\n        this.esignError('Document Signing service cannot find the documents',\r\n          `viewDocs: No envelope URL for envelope id=${envelopeId}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  private esignDone(status: string) {\r\n    if (status !== 'viewing_complete') {\r\n      this.esignError(null, `Unexpected document status ${status}`);\r\n    }\r\n  }\r\n\r\n  private esignError(message: string, applicationError?: string) {\r\n    if (applicationError) {\r\n      // error info for a programmer\r\n      this.logger.error(`ViewDocsComponent: ${applicationError}`);\r\n    }\r\n  }\r\n\r\n}\r\n","// Client-side id-generator\r\n// From breeze.core.getUuid\r\n/**\r\n * Creates a Universally Unique Identifier (AKA Guid)\r\n */\r\nexport function getUuid(): string {\r\n  // The original implementation is based on this SO answer:\r\n  // http://stackoverflow.com/a/2117523/200253\r\n  return 'xxxxxxxxxx4xxyxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    // tslint:disable-next-line:no-bitwise\r\n    const r = (Math.random() * 16) | 0,\r\n      // tslint:disable-next-line:no-bitwise\r\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n/**\r\n * Creates a pseudo-Guid (globally unique identifier)\r\n * whose trailing 6 bytes (12 hex digits) are time-based\r\n * Start either with the given getTime() value, seedTime,\r\n * or get the current time in ms.\r\n *\r\n * @param seed {number} - optional seed for reproducible time-part\r\n */\r\nexport function getGuidComb(seed?: number) {\r\n  // Each new Guid is greater than next if more than 1ms passes\r\n  // See http://thatextramile.be/blog/2009/05/using-the-guidcomb-identifier-strategy\r\n  // Based on breeze.core.getUuid which is based on this StackOverflow answer\r\n  // http://stackoverflow.com/a/2117523/200253\r\n  //\r\n  // Convert time value to hex: n.toString(16)\r\n  // Make sure it is 6 bytes long: ('00'+ ...).slice(-12) ... from the rear\r\n  // Replace LAST 6 bytes (12 hex digits) of regular Guid (that's where they sort in a Db)\r\n  //\r\n  // Play with this in jsFiddle: http://jsfiddle.net/wardbell/qS8aN/\r\n  const timePart = ('00' + (seed || new Date().getTime()).toString(16)).slice(-12);\r\n  return (\r\n    'xxxxxxxxxxxx4xxxyxxx'.replace(/[xy]/g, function(c) {\r\n      // tslint:disable:no-bitwise\r\n      const r = (Math.random() * 16) | 0,\r\n        v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n      return v.toString(16);\r\n    }) + timePart\r\n  );\r\n}\r\n\r\n// Sort comparison value that's good enough\r\nexport function guidComparer(l: string, r: string) {\r\n  const l_low = l.slice(-12);\r\n  const r_low = r.slice(-12);\r\n  return l_low !== r_low\r\n    ? l_low < r_low ? -1 : +(l_low !== r_low)\r\n    : l < r ? -1 : +(l !== r);\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'yesno' })\r\nexport class YesNoBooleanPipe implements PipeTransform {\r\n    transform(value: boolean): string {\r\n        return value == null ? 'Unknown' : (value ? 'Yes' : 'No');\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'subjectexempt' })\r\nexport class SubjectExemptBooleanPipe implements PipeTransform {\r\n  transform(value: boolean): string {\r\n    return value == null ? 'Undecided' : value === true ? 'Exempt' : 'Subject';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, forkJoin, timer } from 'rxjs';\r\nimport { finalize, filter, first, switchMap, mapTo } from 'rxjs/operators';\r\nimport { EntityCollectionServiceBase } from 'ngrx-data';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BusyService {\r\n\r\n  private busyCounter = 0;\r\n  private busySubject = new BehaviorSubject<boolean>(false);\r\n  private _message: string;\r\n  get message() {\r\n    return this._message;\r\n  }\r\n\r\n  get isBusy(): Observable<any> {\r\n    return this.busySubject.asObservable();\r\n  }\r\n\r\n  get isDelayBusy(): Observable<any> {\r\n    return this.busySubject.asObservable().pipe(switchMap(b => timer(1000).pipe(mapTo(b))));\r\n  }\r\n\r\n  busy<T>(op: Promise<T>): Promise<T> {\r\n    this.increment();\r\n    op.then(result => {\r\n      this.decrement();\r\n    }).catch((reason: any) => {\r\n      this.decrement();\r\n      throw reason;    // Rethrow error\r\n    });\r\n\r\n    return op;\r\n  }\r\n\r\n  /**\r\n   * Indicate busy until the observable completes\r\n   * @param obs Observable that the busy service should watch\r\n   * @return piped continuation of the source observable.\r\n   * Warning: busy and live forever if observable fails to terminate\r\n   */\r\n  busy$<T>(message: string, obs: Observable<T>): Observable<T> {\r\n    this.increment(message);\r\n    return obs.pipe(\r\n      finalize(() => this.decrement())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set busy flag and clear it when all loading$ observables return false\r\n   * @param message to show while busy\r\n   * @param loadings$ Observables of multiple loading flags\r\n   * @returns Observable that emits and terminates when all loading flags become false.\r\n   * Warning: busy and live forever if any loading flag observable fails to emit false\r\n   */\r\n  busyWhileTrue$(message: string, ...loadings$: Observable<boolean>[]): Observable<boolean[]> {\r\n    this.increment(message);\r\n    const mapped = loadings$.map(o => o.pipe(filter(loading => !loading), first()));\r\n    return forkJoin(mapped).pipe(\r\n      finalize(() => this.decrement())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set busy flag and clear it when every service's loading$ observables return false\r\n   * @param message to show while busy\r\n   * @param services Services with observable `loading$` flags.\r\n   * @returns Observable that emits and terminates when all loading flags become false.\r\n   * Warning: busy and live forever if any loading flag observable fails to emit false\r\n   */\r\n  busyLoading$(message: string, ...services: EntityCollectionServiceBase<any>[]): Observable<boolean[]> {\r\n    const loadings = services.map(s => s.loading$);\r\n    return this.busyWhileTrue$(message, ...loadings);\r\n  }\r\n\r\n  /**\r\n   * Set busy flag and clear it when all services.loading$ are false.\r\n   * Delegates to `busyLoading$` and subscribes for you.\r\n   */\r\n  busyLoading(message: string, ...services: EntityCollectionServiceBase<any>[]) {\r\n    return this.busyLoading$(message, ...services).subscribe();\r\n  }\r\n\r\n  increment(msg?: string) {\r\n    // only outermost message is shown\r\n    if (msg && !this.message) {\r\n      this._message = msg;\r\n    }\r\n    this.busyCounter++;\r\n    this.busySubject.next(this.isBusyCore);\r\n  }\r\n\r\n  decrement() {\r\n    if (this.busyCounter > 0) {\r\n      this.busyCounter--;\r\n    }\r\n    if (this.busyCounter <= 0) {\r\n      this._message = '';\r\n    }\r\n    this.busySubject.next(this.isBusyCore);\r\n  }\r\n\r\n  private get isBusyCore(): boolean {\r\n    return this.busyCounter > 0;\r\n  }\r\n}\r\n","import { BehaviorSubject, forkJoin, timer } from 'rxjs';\nimport { finalize, filter, first, switchMap, mapTo } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nvar BusyService = /** @class */ (function () {\n    function BusyService() {\n        this.busyCounter = 0;\n        this.busySubject = new BehaviorSubject(false);\n    }\n    Object.defineProperty(BusyService.prototype, \"message\", {\n        get: function () {\n            return this._message;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BusyService.prototype, \"isBusy\", {\n        get: function () {\n            return this.busySubject.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BusyService.prototype, \"isDelayBusy\", {\n        get: function () {\n            return this.busySubject.asObservable().pipe(switchMap(function (b) { return timer(1000).pipe(mapTo(b)); }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BusyService.prototype.busy = function (op) {\n        var _this = this;\n        this.increment();\n        op.then(function (result) {\n            _this.decrement();\n        }).catch(function (reason) {\n            _this.decrement();\n            throw reason; // Rethrow error\n        });\n        return op;\n    };\n    /**\n     * Indicate busy until the observable completes\n     * @param obs Observable that the busy service should watch\n     * @return piped continuation of the source observable.\n     * Warning: busy and live forever if observable fails to terminate\n     */\n    BusyService.prototype.busy$ = function (message, obs) {\n        var _this = this;\n        this.increment(message);\n        return obs.pipe(finalize(function () { return _this.decrement(); }));\n    };\n    /**\n     * Set busy flag and clear it when all loading$ observables return false\n     * @param message to show while busy\n     * @param loadings$ Observables of multiple loading flags\n     * @returns Observable that emits and terminates when all loading flags become false.\n     * Warning: busy and live forever if any loading flag observable fails to emit false\n     */\n    BusyService.prototype.busyWhileTrue$ = function (message) {\n        var _this = this;\n        var loadings$ = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            loadings$[_i - 1] = arguments[_i];\n        }\n        this.increment(message);\n        var mapped = loadings$.map(function (o) { return o.pipe(filter(function (loading) { return !loading; }), first()); });\n        return forkJoin(mapped).pipe(finalize(function () { return _this.decrement(); }));\n    };\n    /**\n     * Set busy flag and clear it when every service's loading$ observables return false\n     * @param message to show while busy\n     * @param services Services with observable `loading$` flags.\n     * @returns Observable that emits and terminates when all loading flags become false.\n     * Warning: busy and live forever if any loading flag observable fails to emit false\n     */\n    BusyService.prototype.busyLoading$ = function (message) {\n        var services = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            services[_i - 1] = arguments[_i];\n        }\n        var loadings = services.map(function (s) { return s.loading$; });\n        return this.busyWhileTrue$.apply(this, [message].concat(loadings));\n    };\n    /**\n     * Set busy flag and clear it when all services.loading$ are false.\n     * Delegates to `busyLoading$` and subscribes for you.\n     */\n    BusyService.prototype.busyLoading = function (message) {\n        var services = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            services[_i - 1] = arguments[_i];\n        }\n        return this.busyLoading$.apply(this, [message].concat(services)).subscribe();\n    };\n    BusyService.prototype.increment = function (msg) {\n        // only outermost message is shown\n        if (msg && !this.message) {\n            this._message = msg;\n        }\n        this.busyCounter++;\n        this.busySubject.next(this.isBusyCore);\n    };\n    BusyService.prototype.decrement = function () {\n        if (this.busyCounter > 0) {\n            this.busyCounter--;\n        }\n        if (this.busyCounter <= 0) {\n            this._message = '';\n        }\n        this.busySubject.next(this.isBusyCore);\n    };\n    Object.defineProperty(BusyService.prototype, \"isBusyCore\", {\n        get: function () {\n            return this.busyCounter > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BusyService.ngInjectableDef = i0.defineInjectable({ factory: function BusyService_Factory() { return new BusyService(); }, token: BusyService, providedIn: \"root\" });\n    return BusyService;\n}());\nexport { BusyService };\n","// TODO: These may be available from ngBootstrap\r\n// See around https://ng-bootstrap.github.io/#/components/datepicker/api#NgbDateParserFormatter\r\nexport { NgbDatepickerConfig, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NgbDatepickerConfig, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n/** Convert a date to an SP canonical date string. Leaves a string value untouched */\r\nexport function dateToString(dateValue: Date | string) {\r\n  return dateValue instanceof Date ? dateValue.toISOString() : dateValue;\r\n}\r\n\r\n/** Convert a date value (string or Date) to the ngbDatepicker date structure */\r\nexport function dateToDateStruct(dateValue: Date | string): NgbDateStruct | undefined {\r\n  const inputDate: Date =\r\n    dateValue instanceof Date ? dateValue : dateValue ? new Date(dateValue) : undefined;\r\n\r\n  return inputDate\r\n    ? {\r\n        year: inputDate.getFullYear(),\r\n        month: inputDate.getMonth() + 1,\r\n        day: inputDate.getDate()\r\n      }\r\n    : undefined;\r\n}\r\n\r\n/** Convert an ngbDatepicker date structure to a JavaScript Date */\r\nexport function dateStructToDate(model: NgbDateStruct): Date | undefined {\r\n  const { year = null, month = null, day = null } = model || {};\r\n  return year != null && month != null && day != null\r\n    ? // hours = 17 ensures midday in Chicago per requirements.\r\n      new Date(Date.UTC(year, month - 1, day, 17))\r\n    : null;\r\n}\r\n\r\n/*\r\n * Today's JavaScript Date as ISO string when time doesn't matter.\r\n * Returns midday today in Chicago, per SP requirements\r\n */\r\nexport function dateToday(): string {\r\n  const today = new Date();\r\n  const date = new Date(Date.UTC(today.getFullYear(), today.getMonth(), today.getDate(), 17));\r\n  return date.toISOString();\r\n}\r\n\r\n/**\r\n * Convert the presumptive date string into a date.\r\n * Returns bad dates as \"1/1/1970\" in Chicago timezone\r\n * @param date Date string\r\n */\r\nexport function safeToDate(date: string): Date {\r\n  const d = new Date(date);\r\n  // return guard date (1/1/1970) if bad date. At least we'll see it.\r\n  return isNaN(d.valueOf()) ? new Date(1970, 0, 1, 17) : d;\r\n}\r\n\r\n/**\r\n * Format a date (or date string) as \"mm/dd/yy\"\r\n * @param date A date or date as an ISO date string\r\n */\r\nexport function toMMDDYY(date: string | Date) {\r\n  if (date == null) {\r\n    return date;\r\n  }\r\n  try {\r\n    date = typeof date === 'string' ? new Date(date) : date;\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    return `${month < 10 ? '0' : ''}${month}/${day < 10 ? '0' : ''}${day}/${year}`;\r\n  } catch (e) {\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * Convert a ViewModel date to an entity-ready form, typically before save\r\n * @param vmDt ViewModel date in \"yyyy-mm-dd\" form\r\n * @param allowNull True (default) if date is allowed to be changed to falsy.\r\n */\r\nexport function vmDateToEntityDate(vmDt: string, allowNull = true) {\r\n  if (vmDt) {\r\n    try {\r\n      // Set timezone for midday Chicago per SP requirement\r\n      vmDt = new Date(vmDt + 'T17:00:00.000Z').toISOString();\r\n    } catch (e) {\r\n      vmDt = null;\r\n    }\r\n  }\r\n  if (!vmDt && !allowNull) {\r\n    throw new Error('Null dates are not allowed');\r\n  }\r\n  return vmDt;\r\n}\r\n/**\r\n * Convert an entity date string (with a time part) to ViewModel date (no time part).\r\n * Required for browser `<input type=\"date\">` to work (sigh)\r\n * @param entityDt Date string in ISO date format\r\n * @return the 'yyyy-mm-dd' part of the date.\r\n */\r\nexport function entityDateToVmDate(entityDt: string | Date) {\r\n  if (typeof entityDt !== 'string' && entityDt) {\r\n    entityDt = entityDt.toISOString();\r\n  }\r\n  return entityDt ? (entityDt as string).substr(0, 10) : null;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { combineLatest, forkJoin, Observable, of } from 'rxjs';\r\nimport { catchError, concatMap, first, map  } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from './services/logger.service';\r\n\r\nexport class Saver {\r\n\r\n  /** Nothing-to-save placeholder observable that Saver will ignore  */\r\n  static NO_SAVE = of(null);\r\n\r\n  private save$: Observable<any>[] = [];\r\n\r\n  /**\r\n   * Helper to compose an array of save observables returned by a save method within a canDeactivate.\r\n   *\r\n   * @param [logger] optional logger service to be used when save fails and no explicit errorHandler\r\n   * @example from AboutYouComponent\r\n   *\r\n   * save(): Observable<boolean> {\r\n   *   const saver = this.saveFactory.create(); // preferred\r\n   *   // const saver = new Saver(); // OK but lacks the logger\r\n   *\r\n   *   // Get fresh versions of the current Company and User\r\n   *   // and save each if it was changed here.\r\n   *   return this.modelData$.pipe(\r\n   *     concatMap(([company, user]) => {\r\n   *       if (this.isHousehold !== company.isHousehold) {\r\n   *         saver.add(this.companyService.update({ ...company, isHousehold: this.isHousehold }));\r\n   *       }\r\n   *       if (areDifferent(this.user, user, 'User')) {\r\n   *         saver.add(this.userService.update(this.user));\r\n   *       }\r\n   *       return saver.go(error => logger.error('Ouch!', error));\r\n   *     })\r\n   *   );\r\n   * }\r\n   *  ...\r\n   * canLeaveAfterSave() {\r\n   *    return this.save(); // router will call and subscribe.\r\n   * }\r\n   *\r\n   */\r\n  constructor(private logger?: LoggerService) {}\r\n\r\n  /**\r\n   * Adds saving Observable(s) (0, 1, ...) to the saver's collection.\r\n   * Exclude nulls and the NO_SAVE sentinel Observable.\r\n   * @returns This Saver instance, for method chaining.\r\n   */\r\n  add(...save: Observable<any>[]) {\r\n    save = Array.isArray(save) ? save : [save];\r\n    this.save$ = this.save$.concat(save.filter(s => s != null && s !== Saver.NO_SAVE));\r\n    return this;\r\n  }\r\n\r\n  // TODO: Add spinner here?\r\n\r\n  /**\r\n   * Return Observable<boolean> that combines multiple saver Observables in a single Observable\r\n   * that emits when all saver Observables terminate.\r\n   * Observable emits true if they all succeed and false if any of them fail.\r\n   * @param [errorHandler] Optional error handler returning Observable<boolean> or void.\r\n   *\r\n   * If fails, logs with errorHandler (if provided).\r\n   * If no errorHandler, logs the error with the logger service (if defined)\r\n   */\r\n  go(errorHandler?: (error: any) => Observable<boolean> | void): Observable<boolean> {\r\n    return this.save$.length === 0 ? of(true) : forkJoin(this.save$).pipe(\r\n      map(results => true),\r\n      catchError(error => {\r\n        if (errorHandler) {\r\n          return errorHandler(error) || of(false);\r\n        } else {\r\n          if (this.logger) {\r\n            this.logger.error(`Saver: save observable failed.`, error);\r\n          }\r\n          return of(false);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Creates an instance of a Saver with an injected LoggerService\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class SaverFactoryService {\r\n  constructor(private logger: LoggerService) {}\r\n\r\n  /** Create new instance of a Saver with a logger for errors */\r\n  create(): Saver {\r\n    return new Saver(this.logger);\r\n  }\r\n}\r\n","import { forkJoin, Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { LoggerService } from './services/logger.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/logger.service\";\nvar Saver = /** @class */ (function () {\n    /**\n     * Helper to compose an array of save observables returned by a save method within a canDeactivate.\n     *\n     * @param [logger] optional logger service to be used when save fails and no explicit errorHandler\n     * @example from AboutYouComponent\n     *\n     * save(): Observable<boolean> {\n     *   const saver = this.saveFactory.create(); // preferred\n     *   // const saver = new Saver(); // OK but lacks the logger\n     *\n     *   // Get fresh versions of the current Company and User\n     *   // and save each if it was changed here.\n     *   return this.modelData$.pipe(\n     *     concatMap(([company, user]) => {\n     *       if (this.isHousehold !== company.isHousehold) {\n     *         saver.add(this.companyService.update({ ...company, isHousehold: this.isHousehold }));\n     *       }\n     *       if (areDifferent(this.user, user, 'User')) {\n     *         saver.add(this.userService.update(this.user));\n     *       }\n     *       return saver.go(error => logger.error('Ouch!', error));\n     *     })\n     *   );\n     * }\n     *  ...\n     * canLeaveAfterSave() {\n     *    return this.save(); // router will call and subscribe.\n     * }\n     *\n     */\n    function Saver(logger) {\n        this.logger = logger;\n        this.save$ = [];\n    }\n    /**\n     * Adds saving Observable(s) (0, 1, ...) to the saver's collection.\n     * Exclude nulls and the NO_SAVE sentinel Observable.\n     * @returns This Saver instance, for method chaining.\n     */\n    Saver.prototype.add = function () {\n        var save = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            save[_i] = arguments[_i];\n        }\n        save = Array.isArray(save) ? save : [save];\n        this.save$ = this.save$.concat(save.filter(function (s) { return s != null && s !== Saver.NO_SAVE; }));\n        return this;\n    };\n    // TODO: Add spinner here?\n    /**\n     * Return Observable<boolean> that combines multiple saver Observables in a single Observable\n     * that emits when all saver Observables terminate.\n     * Observable emits true if they all succeed and false if any of them fail.\n     * @param [errorHandler] Optional error handler returning Observable<boolean> or void.\n     *\n     * If fails, logs with errorHandler (if provided).\n     * If no errorHandler, logs the error with the logger service (if defined)\n     */\n    Saver.prototype.go = function (errorHandler) {\n        var _this = this;\n        return this.save$.length === 0 ? of(true) : forkJoin(this.save$).pipe(map(function (results) { return true; }), catchError(function (error) {\n            if (errorHandler) {\n                return errorHandler(error) || of(false);\n            }\n            else {\n                if (_this.logger) {\n                    _this.logger.error(\"Saver: save observable failed.\", error);\n                }\n                return of(false);\n            }\n        }));\n    };\n    /** Nothing-to-save placeholder observable that Saver will ignore  */\n    Saver.NO_SAVE = of(null);\n    return Saver;\n}());\nexport { Saver };\n/**\n * Creates an instance of a Saver with an injected LoggerService\n */\nvar SaverFactoryService = /** @class */ (function () {\n    function SaverFactoryService(logger) {\n        this.logger = logger;\n    }\n    /** Create new instance of a Saver with a logger for errors */\n    SaverFactoryService.prototype.create = function () {\n        return new Saver(this.logger);\n    };\n    SaverFactoryService.ngInjectableDef = i0.defineInjectable({ factory: function SaverFactoryService_Factory() { return new SaverFactoryService(i0.inject(i1.LoggerService)); }, token: SaverFactoryService, providedIn: \"root\" });\n    return SaverFactoryService;\n}());\nexport { SaverFactoryService };\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { filter, map, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TitleService implements OnDestroy {\r\n  private routerEventsSubscription: Subscription;\r\n\r\n  constructor(private router: Router, private ngTitle: Title) {\r\n    this.routerEventsSubscription = router.events\r\n      .pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        map((event: NavigationEnd) => this.router.routerState.root),\r\n        map(route => {\r\n          while (route.firstChild) {\r\n            route = route.firstChild;\r\n          }\r\n          return route;\r\n        }),\r\n        filter(route => route.outlet === 'primary'),\r\n        switchMap(route => route.data)\r\n      )\r\n      .subscribe(data => this.ngTitle.setTitle(`SP ${data['title'] || ''}`));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.routerEventsSubscription.unsubscribe();\r\n  }\r\n}\r\n","import { OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/platform-browser\";\nvar TitleService = /** @class */ (function () {\n    function TitleService(router, ngTitle) {\n        var _this = this;\n        this.router = router;\n        this.ngTitle = ngTitle;\n        this.routerEventsSubscription = router.events\n            .pipe(filter(function (event) { return event instanceof NavigationEnd; }), map(function (event) { return _this.router.routerState.root; }), map(function (route) {\n            while (route.firstChild) {\n                route = route.firstChild;\n            }\n            return route;\n        }), filter(function (route) { return route.outlet === 'primary'; }), switchMap(function (route) { return route.data; }))\n            .subscribe(function (data) { return _this.ngTitle.setTitle(\"SP \" + (data['title'] || '')); });\n    }\n    TitleService.prototype.ngOnDestroy = function () {\n        this.routerEventsSubscription.unsubscribe();\n    };\n    TitleService.ngInjectableDef = i0.defineInjectable({ factory: function TitleService_Factory() { return new TitleService(i0.inject(i1.Router), i0.inject(i2.Title)); }, token: TitleService, providedIn: \"root\" });\n    return TitleService;\n}());\nexport { TitleService };\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { AddressLike, addressToString } from '@utils/address-utils';\r\n\r\n// Transform an address object into a single line of text\r\n@Pipe({ name: 'address', pure: true })\r\nexport class AddressPipe implements PipeTransform {\r\n  transform(address: AddressLike, ...args: any[]) {\r\n    return addressToString(address);\r\n  }\r\n}\r\n","import { PipeTransform } from '@angular/core';\nimport { addressToString } from '@utils/address-utils';\n// Transform an address object into a single line of text\nvar AddressPipe = /** @class */ (function () {\n    function AddressPipe() {\n    }\n    AddressPipe.prototype.transform = function (address) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return addressToString(address);\n    };\n    return AddressPipe;\n}());\nexport { AddressPipe };\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { isE2E } from '@core/e2e-check';\r\nimport { LoggerService } from '@core/services/logger.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastService {\r\n  constructor(private logger: LoggerService, private toastr: ToastrService) {}\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.show(message, action, 'success');\r\n  }\r\n\r\n  show(message: string, title: string, type: 'success'|'info'|'warning'|'error') {\r\n    this.logger.log(`${message} - ${title}`);\r\n    if (isE2E) {\r\n      return; // no toast during E2E tests\r\n    }\r\n    // setTimeout guards against `ExpressionChangedAfterItHasBeenCheckedError`\r\n    setTimeout(() => {\r\n      this.toastr.show(message, title, {\r\n        timeOut: 2000\r\n      }, type);\r\n    }, 0);\r\n\r\n  }\r\n}\r\n","import { ToastrService } from 'ngx-toastr';\nimport { isE2E } from '@core/e2e-check';\nimport { LoggerService } from '@core/services/logger.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./logger.service\";\nimport * as i2 from \"ngx-toastr\";\nvar ToastService = /** @class */ (function () {\n    function ToastService(logger, toastr) {\n        this.logger = logger;\n        this.toastr = toastr;\n    }\n    ToastService.prototype.openSnackBar = function (message, action) {\n        this.show(message, action, 'success');\n    };\n    ToastService.prototype.show = function (message, title, type) {\n        var _this = this;\n        this.logger.log(message + \" - \" + title);\n        if (isE2E) {\n            return; // no toast during E2E tests\n        }\n        // setTimeout guards against `ExpressionChangedAfterItHasBeenCheckedError`\n        setTimeout(function () {\n            _this.toastr.show(message, title, {\n                timeOut: 2000\n            }, type);\n        }, 0);\n    };\n    ToastService.ngInjectableDef = i0.defineInjectable({ factory: function ToastService_Factory() { return new ToastService(i0.inject(i1.LoggerService), i0.inject(i2.ToastrService)); }, token: ToastService, providedIn: \"root\" });\n    return ToastService;\n}());\nexport { ToastService };\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { stringify } from '@app/core/utils';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class LoggerService {\r\n\r\n  public entries$: Observable<LogEntry>;\r\n  private entriesSubject$: Subject<LogEntry>;\r\n\r\n  constructor() {\r\n      this.entriesSubject$ = new Subject<LogEntry>();\r\n      this.entries$ = this.entriesSubject$.asObservable();\r\n  }\r\n\r\n  log(message?: any, ...optionalParams: any[]) {\r\n    const args = [message, ...optionalParams];\r\n    console.log.apply(console, args);\r\n    this.nextEntry('log', args);\r\n  }\r\n\r\n  debug(message?: any, ...optionalParams: any[]) {\r\n    const args = [message, ...optionalParams];\r\n    console.debug ? console.debug.apply(console, args) : console.log.apply(console, args);\r\n    this.nextEntry('debug', args);\r\n  }\r\n\r\n  error(message?: any, ...optionalParams: any[]) {\r\n    const args = [message, ...optionalParams];\r\n    console.error.apply(console, args);\r\n    this.nextEntry('error', args);\r\n  }\r\n\r\n  warn(message?: any, ...optionalParams: any[]) {\r\n    const args = [message, ...optionalParams];\r\n    console.warn.apply(console, args);\r\n    this.nextEntry('warn', args);\r\n  }\r\n\r\n  private nextEntry(type: logType, args: any[]) {\r\n    this.entriesSubject$.next({\r\n      type: type,\r\n      entry: stringify(args).join('\\n')\r\n    });\r\n  }\r\n}\r\n\r\nexport type logType = 'log' | 'debug' | 'error' | 'warn';\r\n\r\nexport interface LogEntry {\r\n  type: logType;\r\n  entry: string;\r\n}\r\n","import { Subject } from 'rxjs';\nimport { stringify } from '@app/core/utils';\nimport * as i0 from \"@angular/core\";\nvar LoggerService = /** @class */ (function () {\n    function LoggerService() {\n        this.entriesSubject$ = new Subject();\n        this.entries$ = this.entriesSubject$.asObservable();\n    }\n    LoggerService.prototype.log = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var args = [message].concat(optionalParams);\n        console.log.apply(console, args);\n        this.nextEntry('log', args);\n    };\n    LoggerService.prototype.debug = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var args = [message].concat(optionalParams);\n        console.debug ? console.debug.apply(console, args) : console.log.apply(console, args);\n        this.nextEntry('debug', args);\n    };\n    LoggerService.prototype.error = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var args = [message].concat(optionalParams);\n        console.error.apply(console, args);\n        this.nextEntry('error', args);\n    };\n    LoggerService.prototype.warn = function (message) {\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        var args = [message].concat(optionalParams);\n        console.warn.apply(console, args);\n        this.nextEntry('warn', args);\n    };\n    LoggerService.prototype.nextEntry = function (type, args) {\n        this.entriesSubject$.next({\n            type: type,\n            entry: stringify(args).join('\\n')\n        });\n    };\n    LoggerService.ngInjectableDef = i0.defineInjectable({ factory: function LoggerService_Factory() { return new LoggerService(); }, token: LoggerService, providedIn: \"root\" });\n    return LoggerService;\n}());\nexport { LoggerService };\n","import { Observable } from 'rxjs';\nimport { StatsService } from './stats.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./stats.service\";\nexport function getEmployeeId(context, employees) {\n    var employeeId = context.model.employeeId || (context.modelType === 'Employee' && context.model.id);\n    if (employeeId) {\n        return employeeId;\n    }\n    var employee = employees.find(function (e) { return e.homeAddressId === context.model.id; });\n    // If no employee, the address is orphaned. This is a known temporary state ... or it should be temporary.\n    // TODO: we can avoid this with transactional save of EE and its Address during editing.\n    // Will also orphan an address or payment method if the EE is removed because\n    // not yet removing the EE's address and payment method at the same time.\n    // TODO: remove addr and payment method when an EE is removed; restore them when the EE is restored.\n    // WORKAROUND: Return null for now and make sure consumers ignore errors when there is no matching EE\n    return employee ? employee.id : null;\n}\nvar ReviewService = /** @class */ (function () {\n    function ReviewService(statsService) {\n        this.isValid$ = statsService.isValid$;\n        this.aboutYouStatus$ = statsService.aboutYouStatus$;\n        this.companyTaxStatus$ = statsService.companyTaxStatus$;\n        this.companyInfoStatus$ = statsService.companyInfoStatus$;\n        this.employeesStatus$ = statsService.employeesStatus$;\n        this.bankInfoStatus$ = statsService.bankInfoStatus$;\n        this.aboutYouErrors$ = statsService.aboutYouErrors$;\n        this.bankInfoErrors$ = statsService.bankInfoErrors$;\n        this.companyInfoErrors$ = statsService.companyInfoErrors$;\n        this.companyTaxErrors$ = statsService.companyTaxErrors$;\n        this.employeeSetupErrors$ = statsService.employeeSetupErrors$;\n        this.employeesErrors$ = statsService.employeesErrors$;\n    }\n    ReviewService.ngInjectableDef = i0.defineInjectable({ factory: function ReviewService_Factory() { return new ReviewService(i0.inject(i1.StatsService)); }, token: ReviewService, providedIn: \"root\" });\n    return ReviewService;\n}());\nexport { ReviewService };\n","import { Injectable } from '@angular/core';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\n\r\nimport { Employee, SectionStatus } from '@model';\r\nimport { ValidationError, ValidatorFunctionContext } from '@validation';\r\nimport { StatsService } from './stats.service';\r\n\r\nexport function getEmployeeId(context: ValidatorFunctionContext, employees: Employee[]) {\r\n  const employeeId = context.model.employeeId || (context.modelType === 'Employee' && context.model.id);\r\n  if (employeeId) { return employeeId; }\r\n  const employee = employees.find(e => e.homeAddressId === context.model.id);\r\n  // If no employee, the address is orphaned. This is a known temporary state ... or it should be temporary.\r\n  // TODO: we can avoid this with transactional save of EE and its Address during editing.\r\n  // Will also orphan an address or payment method if the EE is removed because\r\n  // not yet removing the EE's address and payment method at the same time.\r\n  // TODO: remove addr and payment method when an EE is removed; restore them when the EE is restored.\r\n  // WORKAROUND: Return null for now and make sure consumers ignore errors when there is no matching EE\r\n  return employee ? employee.id : null;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ReviewService {\r\n  aboutYouErrors$: Observable<ValidationError[]>;\r\n  bankInfoErrors$: Observable<ValidationError[]>;\r\n  companyInfoErrors$: Observable<ValidationError[]>;\r\n  companyTaxErrors$: Observable<ValidationError[]>;\r\n  employeeSetupErrors$: Observable<ValidationError[]>;\r\n  employeesErrors$: Observable<ValidationError[]>;\r\n\r\n  aboutYouStatus$: Observable<SectionStatus>;\r\n  companyTaxStatus$: Observable<SectionStatus>;\r\n  companyInfoStatus$: Observable<SectionStatus>;\r\n  employeesStatus$: Observable<SectionStatus>;\r\n  bankInfoStatus$: Observable<SectionStatus>;\r\n\r\n  isValid$: Observable<boolean>;\r\n\r\n  constructor(statsService: StatsService) {\r\n    this.isValid$ = statsService.isValid$;\r\n\r\n    this.aboutYouStatus$ = statsService.aboutYouStatus$;\r\n    this.companyTaxStatus$ = statsService.companyTaxStatus$;\r\n    this.companyInfoStatus$ = statsService.companyInfoStatus$;\r\n    this.employeesStatus$ = statsService.employeesStatus$;\r\n    this.bankInfoStatus$ = statsService.bankInfoStatus$;\r\n\r\n    this.aboutYouErrors$ = statsService.aboutYouErrors$;\r\n    this.bankInfoErrors$ = statsService.bankInfoErrors$;\r\n    this.companyInfoErrors$ = statsService.companyInfoErrors$;\r\n    this.companyTaxErrors$ = statsService.companyTaxErrors$;\r\n    this.employeeSetupErrors$ = statsService.employeeSetupErrors$;\r\n    this.employeesErrors$ = statsService.employeesErrors$;\r\n  }\r\n}\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AccountStatus } from '@model';\nimport { AccountStatusGuardHelper, okRoute } from './account-status-guard-helper';\nimport { WellKnownRoutes } from '@core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./account-status-guard-helper\";\nvar guardName = 'SinglePageStatusGuard';\n/**\n * Guard single-page route which can be activated only when the account's status permits it.\n * For example, if the route-to-activate is '/abandoned',\n * only an account whose status is \"Abandoned\" may activate it.\n * Not for routes with child routes.\n * Not for data entry page routes.\n */\nvar SinglePageStatusGuard = /** @class */ (function () {\n    function SinglePageStatusGuard(accountStatusGuardHelper) {\n        this.accountStatusGuardHelper = accountStatusGuardHelper;\n    }\n    SinglePageStatusGuard.prototype.canActivate = function (route, state) {\n        return this.ifAccountStatusAllows$(state);\n    };\n    SinglePageStatusGuard.prototype.canActivateChild = function (route, state) {\n        return this.ifAccountStatusAllows$(state);\n    };\n    SinglePageStatusGuard.prototype.ifAccountStatusAllows$ = function (state) {\n        // Start with route fns that reject activation of all routes.\n        var adminRoutes = __assign({}, this.accountStatusGuardHelper.adminBaseRoutes);\n        var regularRoutes = __assign({}, this.accountStatusGuardHelper.regularBaseRoutes);\n        // Decide which account status(es) allow activation of the pending route.\n        // For example, if the route-to-activate is '/abandoned',\n        // only an account whose status is \"Abandoned\" may activate it.\n        var okStatuses = [];\n        var url = state.url;\n        // strip off the query string (if any)\n        var qi = url.indexOf('?');\n        if (qi > -1) {\n            url = url.substr(0, qi);\n        }\n        switch (url) {\n            case WellKnownRoutes.Abandoned:\n                okStatuses = [AccountStatus.Abandoned];\n                break;\n            case WellKnownRoutes.Documents:\n                okStatuses = [AccountStatus.Docs, AccountStatus.Test];\n                adminRoutes[AccountStatus.Open] = okRoute; // special case\n                break;\n            case WellKnownRoutes.Enrolled:\n                okStatuses = [AccountStatus.Enrolled];\n                break;\n            case WellKnownRoutes.Processing:\n                okStatuses = [AccountStatus.AutoMigrate, AccountStatus.Operations, AccountStatus.Migrating];\n                break;\n        }\n        // This step allows activation of the pending route for \"ok statuses\"\n        okStatuses.forEach(function (status) {\n            adminRoutes[status] = okRoute;\n            regularRoutes[status] = okRoute;\n        });\n        return this.accountStatusGuardHelper.accountStatusAllows$(guardName, adminRoutes, regularRoutes, state);\n    };\n    SinglePageStatusGuard.ngInjectableDef = i0.defineInjectable({ factory: function SinglePageStatusGuard_Factory() { return new SinglePageStatusGuard(i0.inject(i1.AccountStatusGuardHelper)); }, token: SinglePageStatusGuard, providedIn: \"root\" });\n    return SinglePageStatusGuard;\n}());\nexport { SinglePageStatusGuard };\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  CanActivateChild,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AccountStatus } from '@model';\r\nimport { AccountStatusGuardHelper, AccountStatusGuardFns, okRoute } from './account-status-guard-helper';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\nconst guardName = 'SinglePageStatusGuard';\r\n\r\n/**\r\n * Guard single-page route which can be activated only when the account's status permits it.\r\n * For example, if the route-to-activate is '/abandoned',\r\n * only an account whose status is \"Abandoned\" may activate it.\r\n * Not for routes with child routes.\r\n * Not for data entry page routes.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class SinglePageStatusGuard implements CanActivate, CanActivateChild {\r\n  constructor(private accountStatusGuardHelper: AccountStatusGuardHelper) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.ifAccountStatusAllows$(state);\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.ifAccountStatusAllows$(state);\r\n  }\r\n\r\n  private ifAccountStatusAllows$(state: RouterStateSnapshot) {\r\n\r\n    // Start with route fns that reject activation of all routes.\r\n    const adminRoutes = { ... this.accountStatusGuardHelper.adminBaseRoutes };\r\n    const regularRoutes = { ... this.accountStatusGuardHelper.regularBaseRoutes };\r\n\r\n    // Decide which account status(es) allow activation of the pending route.\r\n    // For example, if the route-to-activate is '/abandoned',\r\n    // only an account whose status is \"Abandoned\" may activate it.\r\n    let okStatuses: string[] = [];\r\n\r\n    let url = state.url;\r\n\r\n    // strip off the query string (if any)\r\n    const qi = url.indexOf('?');\r\n    if (qi > -1) {\r\n      url = url.substr(0, qi);\r\n    }\r\n\r\n    switch (url) {\r\n      case WellKnownRoutes.Abandoned:\r\n        okStatuses = [AccountStatus.Abandoned];\r\n        break;\r\n      case WellKnownRoutes.Documents:\r\n        okStatuses = [AccountStatus.Docs, AccountStatus.Test];\r\n        adminRoutes[AccountStatus.Open] = okRoute; // special case\r\n        break;\r\n      case WellKnownRoutes.Enrolled:\r\n        okStatuses = [AccountStatus.Enrolled];\r\n        break;\r\n      case WellKnownRoutes.Processing:\r\n        okStatuses = [AccountStatus.AutoMigrate, AccountStatus.Operations, AccountStatus.Migrating];\r\n        break;\r\n    }\r\n\r\n    // This step allows activation of the pending route for \"ok statuses\"\r\n    okStatuses.forEach(status => {\r\n      adminRoutes[status] = okRoute;\r\n      regularRoutes[status] = okRoute;\r\n    });\r\n\r\n    return this.accountStatusGuardHelper.accountStatusAllows$(\r\n      guardName,\r\n      adminRoutes,\r\n      regularRoutes,\r\n      state\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n// Components & Directives\r\nimport { AccordionComponent } from './accordion';\r\nimport { AddressFormComponent } from './address/address-form.component';\r\nimport { AddressModalComponent } from './address/address-modal.component';\r\nimport { AmountOrPercentValueComponent } from './amount-or-percent-value/amount-or-percent-value.component';\r\nimport { ContactCustomerSupportComponent } from './contact-cust-support.component';\r\nimport { DatePickerPopupComponent } from './datepicker/datepicker-popup.component';\r\nimport { DateRangePayPeriodComponent } from './date-range-pay-period/date-range-pay-period.component';\r\nimport { DocumentsListComponent } from './docs/documents-list.component';\r\nimport { FilterComponent } from './filter/filter.component';\r\nimport { InputDateComponent } from './input/input-date.component';\r\nimport { InputSelectComponent, ButtonGroupComponent, ControlWrapComponent, MultiMaskDirective } from './input';\r\nimport { InputTextComponent } from './input/input-text.component';\r\nimport { PlaceholderComponent } from './placeholder.component';\r\nimport { ModelComponent } from './model.component';\r\nimport { NavBottomComponent } from './nav-bottom.component';\r\nimport { RadioGroupComponent, RadioButtonComponent, RadioGroupValueAccessorDirective } from './radio-group';\r\nimport { ReadMoreComponent } from './read-more/read-more.component';\r\nimport { ViewDocsComponent } from './docs/view-docs.component';\r\n\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport {\r\n  ValidatePropertyDirective, AsyncValidatePropertyDirective, ValidationStatusDirective,\r\n  ValidationFeedbackDirective, FormDirective\r\n} from './validation/validate-property.directive';\r\n\r\n// Pipes\r\nimport { AddressPipe } from './pipes/address.pipe';\r\nimport { CompanyKindPipe } from './pipes/company-kind.pipe';\r\nimport { FilterRemovedPipe } from './pipes/filter-removed.pipe';\r\nimport { FullNamePipe } from './pipes/fullname.pipe';\r\nimport { HouseholdFilerStatusPipe } from '@app/shared/pipes/household-filer-status.pipe';\r\nimport { PhonePipe } from './pipes/phone.pipe';\r\nimport { SsnPipe } from './pipes/ssn.pipe';\r\nimport { StateNamePipe } from './pipes/state-name.pipe';\r\nimport { SubjectExemptBooleanPipe } from './pipes/subject-exempt.pipe';\r\nimport { YesNoBooleanPipe } from './pipes/yes-no.pipe';\r\n\r\nexport const sharedModules = [\r\n  CommonModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  RouterModule,\r\n  NgbModule,\r\n  TextMaskModule\r\n];\r\n\r\nexport const declarables = [\r\n  AccordionComponent,\r\n  AddressFormComponent,\r\n  AddressModalComponent,\r\n  AddressPipe,\r\n  AmountOrPercentValueComponent,\r\n  ButtonGroupComponent,\r\n  CompanyKindPipe,\r\n  ContactCustomerSupportComponent,\r\n  ControlWrapComponent,\r\n  DatePickerPopupComponent,\r\n  DateRangePayPeriodComponent,\r\n  DocumentsListComponent,\r\n  FilterComponent,\r\n  FilterRemovedPipe,\r\n  FormDirective,\r\n  FullNamePipe,\r\n  HouseholdFilerStatusPipe,\r\n  InputDateComponent,\r\n  InputSelectComponent,\r\n  InputTextComponent,\r\n  MultiMaskDirective,\r\n  ModelComponent,\r\n  NavBottomComponent,\r\n  ReadMoreComponent,\r\n  PhonePipe,\r\n  PlaceholderComponent,\r\n  RadioButtonComponent,\r\n  RadioGroupComponent,\r\n  RadioGroupValueAccessorDirective,\r\n  SsnPipe,\r\n  StateNamePipe,\r\n  SubjectExemptBooleanPipe,\r\n  ValidatePropertyDirective, AsyncValidatePropertyDirective,\r\n  ValidationStatusDirective, ValidationFeedbackDirective,\r\n  ViewDocsComponent,\r\n  YesNoBooleanPipe\r\n];\r\n\r\n/**\r\n * App modules and declarables (components, directives, pipes) consumed by other modules.\r\n * Other modules gain access to them by importing this.SharedModule.\r\n * It is eagerly loaded when the application starts.\r\n */\r\n@NgModule({\r\n  imports: [sharedModules],\r\n  exports: [sharedModules, declarables],\r\n  declarations: [declarables]\r\n})\r\nexport class SharedModule { }\r\n","import { Store } from '@ngrx/store';\nimport { EntityCollectionServiceElementsFactory, EntityCacheDispatcher } from 'ngrx-data';\nimport { IdGeneratorService } from '@core/services/id-generator.service';\nimport { LoggerService } from '@core/services/logger.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngrx-data\";\nimport * as i2 from \"../../../core/services/id-generator.service\";\nimport * as i3 from \"../../../core/services/logger.service\";\nimport * as i4 from \"@ngrx/store\";\nvar EntityHelperService = /** @class */ (function () {\n    function EntityHelperService(collectionServiceElementsFactory, entityCacheDispatcher, idGenerator, logger, store) {\n        this.collectionServiceElementsFactory = collectionServiceElementsFactory;\n        this.entityCacheDispatcher = entityCacheDispatcher;\n        this.idGenerator = idGenerator;\n        this.logger = logger;\n        this.store = store;\n    }\n    /** Dispatch any action to the store */\n    EntityHelperService.prototype.dispatch = function (action) {\n        this.store.dispatch(action);\n    };\n    EntityHelperService.prototype.generateId = function () {\n        return this.idGenerator.generateId();\n    };\n    EntityHelperService.ngInjectableDef = i0.defineInjectable({ factory: function EntityHelperService_Factory() { return new EntityHelperService(i0.inject(i1.EntityCollectionServiceElementsFactory), i0.inject(i1.EntityCacheDispatcher), i0.inject(i2.IdGeneratorService), i0.inject(i3.LoggerService), i0.inject(i4.Store)); }, token: EntityHelperService, providedIn: \"root\" });\n    return EntityHelperService;\n}());\nexport { EntityHelperService };\n","import { Injectable } from '@angular/core';\r\nimport { Action, Store } from '@ngrx/store';\r\n\r\nimport { EntityCache, EntityCollectionServiceElementsFactory, EntityCacheDispatcher } from 'ngrx-data';\r\n\r\nimport { IdGeneratorService } from '@core/services/id-generator.service';\r\nimport { LoggerService } from '@core/services/logger.service';\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class EntityHelperService {\r\n  constructor(\r\n    public collectionServiceElementsFactory: EntityCollectionServiceElementsFactory,\r\n    public entityCacheDispatcher: EntityCacheDispatcher,\r\n    private idGenerator: IdGeneratorService,\r\n    public logger: LoggerService,\r\n    private store: Store<EntityCache>,\r\n  ) { }\r\n\r\n  /** Dispatch any action to the store */\r\n  dispatch(action: Action) {\r\n    this.store.dispatch(action);\r\n  }\r\n\r\n  generateId() {\r\n    return this.idGenerator.generateId();\r\n  }\r\n\r\n}\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport * as Actions from './actions';\nexport var SESSION_STATE = 'session';\nexport var initialState = {\n    authUser: null,\n    companyPackageLoaded: false,\n    companyPackageLoading: false,\n    currentCompanyId: null,\n    currentCompanyEtag: '',\n    currentEmployeeId: null,\n    currentUserId: null,\n    readOnly: false\n};\nexport function sessionReducer(state, action) {\n    if (state === void 0) { state = initialState; }\n    switch (action.type) {\n        // Keep cases in frequency of call order\n        // Set ETAG is called a ton\n        case Actions.SET_CURRENT_COMPANY_ETAG: {\n            var currentCompanyEtag = (action.payload || '').trim();\n            var currentCompanyId = state.currentCompanyId;\n            // Set it the etag if empty string OR\n            // if etag changed AND the current companyId is the same as the etag's companyId\n            var setIt = currentCompanyEtag === '' ||\n                (\n                // etag changed and ...\n                state.currentCompanyEtag !== currentCompanyEtag &&\n                    // new etag is for the current company\n                    // etag format is `{companyId}/{some-string}`\n                    currentCompanyId && currentCompanyId === currentCompanyEtag.split('/')[0]);\n            return setIt ? __assign({}, state, { currentCompanyEtag: currentCompanyEtag }) : state;\n        }\n        case Actions.SET_CURRENT_EMPLOYEE_ID: {\n            var currentEmployeeId = normalizeId(action.payload);\n            // Remove extra spaces and normalize empty to null\n            return currentEmployeeId === state.currentEmployeeId ? state : __assign({}, state, { currentEmployeeId: currentEmployeeId });\n        }\n        case Actions.SET_COMPANY_PACKAGE_LOADED: {\n            var companyPackageLoaded = !!action.payload;\n            return companyPackageLoaded === state.companyPackageLoaded ? state : __assign({}, state, { companyPackageLoaded: companyPackageLoaded });\n        }\n        case Actions.SET_COMPANY_PACKAGE_LOADING: {\n            var companyPackageLoading = !!action.payload;\n            return companyPackageLoading === state.companyPackageLoading ? state : __assign({}, state, { companyPackageLoading: companyPackageLoading });\n        }\n        case Actions.SET_CURRENT_ACCOUNT: {\n            var currentCompanyId = normalizeId(action.payload.currentCompanyId);\n            var currentUserId = normalizeId(action.payload.currentUserId);\n            // If no change in company and user ids, the account hasn't changed => same state\n            if (currentCompanyId === state.currentCompanyId &&\n                currentUserId === state.currentUserId) {\n                return state;\n            }\n            // Changing (or clearing) the current account\n            var currentEmployeeId = null;\n            // Assume change ids before loading new account\n            // Therefore the new account means cannot be loaded.\n            var companyPackageLoaded = false;\n            // Clear the etag if the proposed current companyId is null or not same as the etag's companyId\n            var currentCompanyEtag = state.currentCompanyEtag || '';\n            if (!currentCompanyId || currentCompanyEtag.split('/')[0] !== currentCompanyId) {\n                currentCompanyEtag = '';\n            }\n            return __assign({}, state, { currentCompanyEtag: currentCompanyEtag,\n                currentCompanyId: currentCompanyId,\n                currentEmployeeId: currentEmployeeId,\n                currentUserId: currentUserId,\n                companyPackageLoaded: companyPackageLoaded });\n        }\n        case Actions.SET_READ_ONLY: {\n            var readOnly = !!action.payload;\n            return readOnly === state.readOnly ? state : __assign({}, state, { readOnly: readOnly });\n        }\n        case Actions.SET_AUTH_USER: {\n            var authUser = action.payload;\n            return authUser === state.authUser ? state : __assign({}, state, { authUser: authUser });\n        }\n    }\n    return state;\n}\n/** Return trimmed string id or return null if is falsy (null, undefined, empty string). */\nfunction normalizeId(id) {\n    return id ? id.toString().trim() || null : null;\n}\n","import * as Actions from './actions';\r\nimport { User } from '@model';\r\n\r\nexport const SESSION_STATE = 'session';\r\n\r\nexport interface SessionState {\r\n  authUser: User;\r\n  companyPackageLoaded: boolean;\r\n  companyPackageLoading: boolean;\r\n  currentCompanyEtag: string;\r\n  currentCompanyId: string;\r\n  currentEmployeeId: string;\r\n  currentUserId: string;\r\n  readOnly: boolean;\r\n}\r\n\r\nexport const initialState: SessionState = {\r\n  authUser: null as User,\r\n  companyPackageLoaded: false,\r\n  companyPackageLoading: false,\r\n  currentCompanyId: null,\r\n  currentCompanyEtag: '',\r\n  currentEmployeeId: null,\r\n  currentUserId: null,\r\n  readOnly: false\r\n};\r\n\r\nexport function sessionReducer(\r\n  state = initialState,\r\n  action: Actions.All\r\n): SessionState {\r\n\r\n  switch (action.type) {\r\n    // Keep cases in frequency of call order\r\n\r\n    // Set ETAG is called a ton\r\n    case Actions.SET_CURRENT_COMPANY_ETAG: {\r\n      const currentCompanyEtag = (action.payload || '').trim();\r\n      const currentCompanyId = state.currentCompanyId;\r\n\r\n      // Set it the etag if empty string OR\r\n      // if etag changed AND the current companyId is the same as the etag's companyId\r\n      const setIt = currentCompanyEtag  === '' ||\r\n        (\r\n          // etag changed and ...\r\n          state.currentCompanyEtag !== currentCompanyEtag &&\r\n          // new etag is for the current company\r\n          // etag format is `{companyId}/{some-string}`\r\n          currentCompanyId && currentCompanyId === currentCompanyEtag.split('/')[0]\r\n        );\r\n\r\n      return setIt ? { ...state, currentCompanyEtag } : state;\r\n    }\r\n\r\n    case Actions.SET_CURRENT_EMPLOYEE_ID: {\r\n      const currentEmployeeId = normalizeId(action.payload);\r\n      // Remove extra spaces and normalize empty to null\r\n      return currentEmployeeId === state.currentEmployeeId ? state : { ...state, currentEmployeeId };\r\n    }\r\n\r\n    case Actions.SET_COMPANY_PACKAGE_LOADED: {\r\n      const companyPackageLoaded = !!action.payload;\r\n      return companyPackageLoaded === state.companyPackageLoaded ? state : { ...state, companyPackageLoaded };\r\n    }\r\n\r\n    case Actions.SET_COMPANY_PACKAGE_LOADING: {\r\n      const companyPackageLoading = !!action.payload;\r\n      return companyPackageLoading === state.companyPackageLoading ? state : { ...state, companyPackageLoading };\r\n    }\r\n\r\n    case Actions.SET_CURRENT_ACCOUNT: {\r\n      const currentCompanyId = normalizeId(action.payload.currentCompanyId);\r\n      const currentUserId = normalizeId(action.payload.currentUserId);\r\n\r\n      // If no change in company and user ids, the account hasn't changed => same state\r\n      if (currentCompanyId === state.currentCompanyId &&\r\n          currentUserId === state.currentUserId) {\r\n        return state;\r\n      }\r\n\r\n      // Changing (or clearing) the current account\r\n      const currentEmployeeId: string = null;\r\n\r\n      // Assume change ids before loading new account\r\n      // Therefore the new account means cannot be loaded.\r\n      const companyPackageLoaded = false;\r\n\r\n      // Clear the etag if the proposed current companyId is null or not same as the etag's companyId\r\n      let currentCompanyEtag = state.currentCompanyEtag || '';\r\n      if (!currentCompanyId || currentCompanyEtag.split('/')[0] !== currentCompanyId) {\r\n        currentCompanyEtag = '';\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        currentCompanyEtag,\r\n        currentCompanyId,\r\n        currentEmployeeId,\r\n        currentUserId,\r\n        companyPackageLoaded\r\n     };\r\n    }\r\n\r\n    case Actions.SET_READ_ONLY: {\r\n      const readOnly = !!action.payload;\r\n      return readOnly === state.readOnly ? state : { ...state, readOnly };\r\n    }\r\n\r\n    case Actions.SET_AUTH_USER: {\r\n      const authUser = action.payload;\r\n      return authUser === state.authUser ? state : { ...state, authUser };\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\n/** Return trimmed string id or return null if is falsy (null, undefined, empty string). */\r\nfunction normalizeId(id: string) {\r\n  return id ? id.toString().trim() || null : null;\r\n}\r\n","export const MASK_FLAGS = ['Æ', '#', '@', '*'];\r\n\r\nexport interface MaskMatch {\r\n    mask: string | null;\r\n    isExactMatch: boolean;\r\n    parsedVal: string;\r\n}\r\n\r\nexport class MaskHelper {\r\n    /**\r\n     * Get the closest mask for a given input and if any mask matches the input.\r\n     * There are 3 conditions for a valid mask:\r\n     * 1) It must return a mask if only one mask is available\r\n     * 2) It must return the next matching mask so the user can continue with input ex:\r\n     *    if there are 2 masks: ### and #### if the input is 123 the returned mask should be #### not ###\r\n     * 3) If there are no other masks return the most comprehensive one ex: if the status is like above\r\n     *    and the input is 1234 it should return #### as that is the latest matchable mask\r\n     */\r\n    public getClosestMask(value: string, masks: string[], curmask: string): MaskMatch {\r\n        // Only one mask ...\r\n        if (masks.length === 1) {\r\n            const mask = masks[0];\r\n            const matchResult = this.matchesMask(value, mask);\r\n            if (matchResult.isMatch) {\r\n                return { mask: mask, isExactMatch: matchResult.isExactMatch, parsedVal: matchResult.parsedValue };\r\n            }\r\n\r\n            return { mask: null, isExactMatch: false, parsedVal: matchResult.parsedValue };\r\n        }\r\n\r\n        // No input don't return anything\r\n        if (value == null || value === '') {\r\n            return { mask: null, isExactMatch: false, parsedVal: value };\r\n        }\r\n\r\n        // Return current mask if it works\r\n        if (curmask) {\r\n            const matchResult = this.matchesMask(value, curmask);\r\n            if (matchResult.isMatch) {\r\n                return { mask: curmask, isExactMatch: matchResult.isExactMatch, parsedVal: matchResult.parsedValue };\r\n            }\r\n        }\r\n\r\n        // Get the closest next mask for the input\r\n        // Ex: given masks: ddd and dddd.\r\n        // If the input is 12 return ddd.\r\n        // If the input is 123 return dddd.\r\n        // If the input is 1234 return dddd as that is 'the last' available match.\r\n        const sortedMasks = masks.sort((a, b) => b.length - a.length);\r\n        const closestMask = sortedMasks.reduce((a, mask) => {\r\n            const valSize = value.length;\r\n\r\n            // If the mask is less than the input we dont consider it\r\n            if (mask.length < valSize) {\r\n                return a;\r\n            }\r\n\r\n            const matchResult = this.matchesMask(value, mask);\r\n            if (matchResult.isMatch) {\r\n                // This mask matches the result but there is another more encompassing mask\r\n                if (matchResult.isExactMatch && a != null) {\r\n                    return {\r\n                        isExactMatch: true,\r\n                        mask: a.mask,\r\n                        parsedVal: matchResult.parsedValue\r\n                    };\r\n                }\r\n\r\n                // Return this mask\r\n                return {\r\n                    mask: mask,\r\n                    isExactMatch: matchResult.isExactMatch || (a != null && a.isExactMatch),\r\n                    parsedVal: matchResult.parsedValue\r\n                };\r\n            }\r\n\r\n            return a;\r\n        }, <{ mask: string, isExactMatch: boolean, parsedVal: string }>null);\r\n\r\n        if (!!closestMask) {\r\n            return closestMask;\r\n        }\r\n\r\n        return { mask: null, isExactMatch: false, parsedVal: value };\r\n    }\r\n\r\n    private matchesMask(value: string, mask: string): { isMatch: boolean, isExactMatch: boolean, parsedValue: string } {\r\n        if (value == null) {\r\n            return {\r\n                isMatch: false,\r\n                isExactMatch: false,\r\n                parsedValue: value\r\n            };\r\n        }\r\n\r\n        let isMaskApplicable = true;\r\n        const parsedValue = [];\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            const char = value.charAt(i);\r\n            const isCharValid = this.validateCharOnPosition(char, i, mask);\r\n\r\n            if (isCharValid.isValid === false) {\r\n                isMaskApplicable = false;\r\n                break;\r\n            }\r\n\r\n            parsedValue.push(isCharValid.parsedChar);\r\n        }\r\n\r\n        return {\r\n            isMatch: isMaskApplicable,\r\n            isExactMatch: isMaskApplicable && mask.length === value.length,\r\n            parsedValue: isMaskApplicable ? parsedValue.join('') : value\r\n        };\r\n    }\r\n\r\n    private validateCharOnPosition(inputChar: string, position: number, mask: string): { isValid: boolean, parsedChar: string } {\r\n        let regex: RegExp;\r\n        let isValid = false;\r\n        let parsedChar = inputChar;\r\n        const letterOrDigitRegEx = '[\\\\d\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z]';\r\n        const letterRegEx = '[\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z]';\r\n        const digitRegEx = '[\\\\d]';\r\n        const letterOrDigitOrSpecialRegEx = '[\\\\d\\\\u00C0-\\\\u1FFF\\\\u2C00-\\\\uD7FFa-zA-Z\\\\&\\\\\\']';\r\n\r\n        const maskKey = mask.charAt(position);\r\n        switch (maskKey) {\r\n            case '@':\r\n                regex = new RegExp(letterOrDigitRegEx);\r\n                isValid = regex.test(inputChar);\r\n                break;\r\n            case 'Æ':\r\n                regex = new RegExp(letterRegEx);\r\n                isValid = regex.test(inputChar);\r\n                break;\r\n            case '#':\r\n                regex = new RegExp(digitRegEx);\r\n                isValid = regex.test(inputChar);\r\n                break;\r\n            case '*':\r\n                regex = new RegExp(letterOrDigitOrSpecialRegEx);\r\n                isValid = regex.test(inputChar);\r\n                break;\r\n            default:\r\n                // Its probably just a literal\r\n                if (maskKey === inputChar) {\r\n                    isValid = true;\r\n                } else if (maskKey.toLowerCase() === inputChar.toLowerCase()) {\r\n                    isValid = true;\r\n                    parsedChar = maskKey;\r\n                } else {\r\n                    isValid = false;\r\n                }\r\n        }\r\n\r\n        return {\r\n            isValid: isValid,\r\n            parsedChar: parsedChar\r\n        };\r\n    }\r\n\r\n    isLiteral(ch: string): boolean {\r\n        if (!ch) { return false; }\r\n        ch = ch.charAt(0);\r\n        switch (ch) {\r\n            case '@':\r\n            case 'Æ':\r\n            case '#':\r\n            case '*':\r\n                return false;\r\n            default:\r\n                return true;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { ajax } from 'rxjs/ajax';\r\n\r\nimport { from, Observable, of, throwError } from 'rxjs';\r\nimport { catchError, concatMap, map, tap } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environment';\r\nimport { OidcSignupUser } from './oidc-signup-user';\r\nimport { OidcTokenResponse } from './oidc-token-response';\r\nimport { User } from '@model';\r\n\r\nconst serviceName = 'OidcTokenService';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OidcTokenService {\r\n  /** Log a significant Auth cycle event. Set by the AuthService into which this token service is injected. */\r\n  logEvent = (event: string) => {};\r\n\r\n  /** Key of the accessToken in browser storage that was captured during sign-up */\r\n  signupTokenKey = 'signupToken';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Clear the access token info acquired during sign-up in browser storage.\r\n   * @param [caller] caller's name\r\n   */\r\n  clearSignupToken(caller = serviceName) {\r\n    let token: string;\r\n    if (window.sessionStorage) {\r\n      token = sessionStorage.getItem(this.signupTokenKey);\r\n      if (token) {\r\n        sessionStorage.removeItem(this.signupTokenKey);\r\n        const msg = `${caller || 'caller'} cleared an existing signup token from browser storage`;\r\n        this.logEvent(msg);\r\n      }\r\n    }\r\n    return token;\r\n  }\r\n\r\n  /**\r\n   * Get the access token info acquired during sign-up from browser storage if it's available.\r\n   * @param [caller] caller's name\r\n   */\r\n  getSignupToken(caller = serviceName): OidcTokenResponse {\r\n    let token: string;\r\n    if (window.sessionStorage) {\r\n      token = sessionStorage.getItem(this.signupTokenKey);\r\n      const msg = `${caller || 'caller'} asked for signupToken from browser storage and will get ${\r\n        token ? token.substr(0, 50) : 'null'\r\n      }\"`;\r\n      this.logEvent(msg);\r\n    }\r\n    try {\r\n      return JSON.parse(token) as OidcTokenResponse;\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the SP API AccessToken after successful signup,\r\n   * with the username and password entered by the user during signup\r\n   */\r\n  getAccessTokenFromIdentityServer(\r\n    user: User,\r\n    password: string,\r\n    caller = serviceName\r\n  ): Observable<OidcTokenResponse> {\r\n    this.clearSignupToken();\r\n    const options = {\r\n      grant_type: 'password',\r\n      scope: environment.oidcScope,\r\n      client_id: environment.oidcClientId,\r\n      username: user.username,\r\n      password\r\n    };\r\n\r\n    // Strictly for mocking; the IdentityServer would error if we sent these\r\n    if (environment.mockServices) {\r\n      (options as any).email = user.email;\r\n      (options as any).sub = user.oidcSub;\r\n    }\r\n\r\n    let result$: Observable<OidcTokenResponse>;\r\n    const url = `${environment.oidcAuthRealm}/connect/token`;\r\n\r\n    if (environment.mockServices) {\r\n      // Cannot make HttpClient succeed.\r\n      // Browser refuses to give the client the results even though it gets them\r\n      // Missing a configuration step that isn't needed by RxJS.ajax or jQuery\r\n      // But ... if mocking, we will use HttpClient because in-mem-web-api is setup to intercept :-)\r\n      const body = new HttpParams({fromObject: options}).toString();\r\n      const headers = new HttpHeaders({'Content-Type': 'application/x-www-form-urlencoded' });\r\n      result$ = this.http.post<OidcTokenResponse>( url, body, { headers });\r\n    } else {\r\n      result$ = postWithRxjsAjax(url, options);\r\n    }\r\n\r\n    return result$.pipe(\r\n      tap(tokenResponse => this.setSignupToken(tokenResponse, caller)),\r\n      catchError(error => of(null)) // OK if errors; user will just have to sign-in.\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the access token info into browser storage .\r\n   * @param token API access token info acquired during sign-up\r\n   * @param [caller] caller's name\r\n   */\r\n  setSignupToken(token: OidcTokenResponse, caller = serviceName) {\r\n    if (window.sessionStorage) {\r\n      const toke = token ? JSON.stringify(token) : null;\r\n      if (toke) {\r\n        sessionStorage.setItem(this.signupTokenKey, toke);\r\n        const msg = `${caller || 'caller'} set signupToken to ${\r\n          toke ? toke.substr(0, 50) : 'null'\r\n        }\"`;\r\n        this.logEvent(msg);\r\n      } else {\r\n        this.clearSignupToken(caller);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction postWithRxjsAjax(url: string, tokenRequest: {}) {\r\n  return ajax({\r\n    method: 'POST',\r\n    crossDomain: true,\r\n    url,\r\n    body: tokenRequest,\r\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n  }).pipe(map(r => r.response as OidcTokenResponse));\r\n}\r\n\r\n// <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\" type=\"text/javascript\"></script>\r\n// return postWithjQuery(url, options) // works, if you load jQuery just to get Ajax\r\nfunction postWithjQuery(url: string, tokenRequest: {}) {\r\n  return from((window as any)['$'].ajax({\r\n    type: 'POST',\r\n    crossDomain: true,\r\n    url: url,\r\n    data: tokenRequest,\r\n    dataType: 'json',\r\n    contentType: 'application/x-www-form-urlencoded'\r\n  }) as Observable<OidcTokenResponse>);\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ajax } from 'rxjs/ajax';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { environment } from '@environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar serviceName = 'OidcTokenService';\nvar OidcTokenService = /** @class */ (function () {\n    function OidcTokenService(http) {\n        this.http = http;\n        /** Log a significant Auth cycle event. Set by the AuthService into which this token service is injected. */\n        this.logEvent = function (event) { };\n        /** Key of the accessToken in browser storage that was captured during sign-up */\n        this.signupTokenKey = 'signupToken';\n    }\n    /**\n     * Clear the access token info acquired during sign-up in browser storage.\n     * @param [caller] caller's name\n     */\n    OidcTokenService.prototype.clearSignupToken = function (caller) {\n        if (caller === void 0) { caller = serviceName; }\n        var token;\n        if (window.sessionStorage) {\n            token = sessionStorage.getItem(this.signupTokenKey);\n            if (token) {\n                sessionStorage.removeItem(this.signupTokenKey);\n                var msg = (caller || 'caller') + \" cleared an existing signup token from browser storage\";\n                this.logEvent(msg);\n            }\n        }\n        return token;\n    };\n    /**\n     * Get the access token info acquired during sign-up from browser storage if it's available.\n     * @param [caller] caller's name\n     */\n    OidcTokenService.prototype.getSignupToken = function (caller) {\n        if (caller === void 0) { caller = serviceName; }\n        var token;\n        if (window.sessionStorage) {\n            token = sessionStorage.getItem(this.signupTokenKey);\n            var msg = (caller || 'caller') + \" asked for signupToken from browser storage and will get \" + (token ? token.substr(0, 50) : 'null') + \"\\\"\";\n            this.logEvent(msg);\n        }\n        try {\n            return JSON.parse(token);\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * Get the SP API AccessToken after successful signup,\n     * with the username and password entered by the user during signup\n     */\n    OidcTokenService.prototype.getAccessTokenFromIdentityServer = function (user, password, caller) {\n        var _this = this;\n        if (caller === void 0) { caller = serviceName; }\n        this.clearSignupToken();\n        var options = {\n            grant_type: 'password',\n            scope: environment.oidcScope,\n            client_id: environment.oidcClientId,\n            username: user.username,\n            password: password\n        };\n        // Strictly for mocking; the IdentityServer would error if we sent these\n        if (environment.mockServices) {\n            options.email = user.email;\n            options.sub = user.oidcSub;\n        }\n        var result$;\n        var url = environment.oidcAuthRealm + \"/connect/token\";\n        if (environment.mockServices) {\n            // Cannot make HttpClient succeed.\n            // Browser refuses to give the client the results even though it gets them\n            // Missing a configuration step that isn't needed by RxJS.ajax or jQuery\n            // But ... if mocking, we will use HttpClient because in-mem-web-api is setup to intercept :-)\n            var body = new HttpParams({ fromObject: options }).toString();\n            var headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' });\n            result$ = this.http.post(url, body, { headers: headers });\n        }\n        else {\n            result$ = postWithRxjsAjax(url, options);\n        }\n        return result$.pipe(tap(function (tokenResponse) { return _this.setSignupToken(tokenResponse, caller); }), catchError(function (error) { return of(null); }) // OK if errors; user will just have to sign-in.\n        );\n    };\n    /**\n     * Set the access token info into browser storage .\n     * @param token API access token info acquired during sign-up\n     * @param [caller] caller's name\n     */\n    OidcTokenService.prototype.setSignupToken = function (token, caller) {\n        if (caller === void 0) { caller = serviceName; }\n        if (window.sessionStorage) {\n            var toke = token ? JSON.stringify(token) : null;\n            if (toke) {\n                sessionStorage.setItem(this.signupTokenKey, toke);\n                var msg = (caller || 'caller') + \" set signupToken to \" + (toke ? toke.substr(0, 50) : 'null') + \"\\\"\";\n                this.logEvent(msg);\n            }\n            else {\n                this.clearSignupToken(caller);\n            }\n        }\n    };\n    OidcTokenService.ngInjectableDef = i0.defineInjectable({ factory: function OidcTokenService_Factory() { return new OidcTokenService(i0.inject(i1.HttpClient)); }, token: OidcTokenService, providedIn: \"root\" });\n    return OidcTokenService;\n}());\nexport { OidcTokenService };\nfunction postWithRxjsAjax(url, tokenRequest) {\n    return ajax({\n        method: 'POST',\n        crossDomain: true,\n        url: url,\n        body: tokenRequest,\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n    }).pipe(map(function (r) { return r.response; }));\n}\n// <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\" type=\"text/javascript\"></script>\n// return postWithjQuery(url, options) // works, if you load jQuery just to get Ajax\nfunction postWithjQuery(url, tokenRequest) {\n    return from(window['$'].ajax({\n        type: 'POST',\n        crossDomain: true,\n        url: url,\n        data: tokenRequest,\n        dataType: 'json',\n        contentType: 'application/x-www-form-urlencoded'\n    }));\n}\n","var map = {\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { HouseholdFilers } from '@model';\r\n\r\nexport interface HouseholdFilerDisplayVm {\r\n  filingStatus: string;\r\n  primaryName: string;\r\n  primarySsn: string;\r\n  spouseName: string;\r\n  spouseSsn: string;\r\n}\r\n\r\nexport function getFilerName(hhf: HouseholdFilers, primary = true) {\r\n  const name = primary\r\n    ? (hhf.primaryFirstName || '') + ' ' +  (hhf.primaryLastName || '')\r\n    : (hhf.spouseFirstName || '') + ' ' +  (hhf.spouseLastName || '' );\r\n  return (name.trim()) || 'missing';\r\n}\r\n\r\nexport function getHouseholdFilerDisplayVm(hhf: HouseholdFilers) {\r\n  return ( hhf ?\r\n   {\r\n      filingStatus: hhf.filingStatus,\r\n      primaryName: getFilerName(hhf),\r\n      primarySsn: hhf.primarySsn,\r\n      spouseName: getFilerName(hhf, false),\r\n      spouseSsn: hhf.spouseSsn,\r\n    } :\r\n    {\r\n      filingStatus: null as string,\r\n      primaryName: 'missing',\r\n      primarySsn: null as string,\r\n      spouseName: 'missing',\r\n      spouseSsn: null as string\r\n    }\r\n  );\r\n}\r\n","export enum WellKnownRoutes {\r\n  Abandoned = '/abandoned',\r\n  AboutYou = '/about-you',\r\n  AccountView = '/account-view',\r\n  Admin = '/admin',\r\n  AdminAccountView = '/admin/account-view',\r\n  AuthFailed = '/error',\r\n  BankAccount = '/company-bank-account',\r\n  CompanyDeductions = '/employees/company-deductions',\r\n  CompanyInfo = '/company-info',\r\n  CompanyTaxInfo = '/tax-info',\r\n  ConcurrencyFailure = '/concurrency-failure',\r\n  Dashboard = '/dashboard',\r\n  Documents = '/documents',\r\n  Earnings = '/employees/earnings',\r\n  Employees = '/employees',\r\n  Enrolled = '/enrolled',\r\n  Failed = '/failed',\r\n  Processing = '/processing',\r\n  Review = '/review',\r\n  SignedOut = '/signed-out',\r\n  Signup = '/signup',\r\n  SignupSuccess = '/signup/success',\r\n  Unauthorized = '/unauthorized',\r\n}\r\nexport const WellKnownRoutes_entries = Object.keys(WellKnownRoutes).map(k => WellKnownRoutes[k as any] as WellKnownRoutes);\r\n\r\nexport function isWellKnownRoute(path: string) {\r\n  return WellKnownRoutes_entries.some(entry => path.startsWith(entry));\r\n}\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { ChangeDetectorRef, EventEmitter, OnDestroy, OnInit, ViewRef } from '@angular/core';\nimport { of, Subject } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { USStateCodes } from '@model';\nimport { AddressFinderService, GeolocationService } from '@core';\nimport { addressToString, isComplete, SubSink } from '@utils';\nimport { TaxAddressValidationService, } from '@core/services/tax-services';\nimport { InputTextComponent } from '@shared/input'; // full path to avoid circularity\nimport { SessionService } from '@session';\nexport var emptyAddress = {\n    street1: '',\n    street2: '',\n    city: '',\n    state: '',\n    zip: '',\n    country: 'US',\n    geoCode: '',\n    schoolDistrictCode: null,\n    psdCode: null,\n    isVerified: false\n};\nvar AddressFormComponent = /** @class */ (function () {\n    function AddressFormComponent(addressFinder, addressValidationService, changeDetector, geolocationService, sessionService) {\n        this.addressFinder = addressFinder;\n        this.addressValidationService = addressValidationService;\n        this.changeDetector = changeDetector;\n        this.geolocationService = geolocationService;\n        this.failedValidation = new EventEmitter();\n        this.confirmed = new EventEmitter();\n        this.stateCodes = USStateCodes.codes;\n        this.isLookingUpAddresses = false;\n        this.hadAttemptedAddressLookup = false;\n        this.optionalColumns = {\n            county: false,\n            jurisdiction: false,\n            schoolDistrict: false\n        };\n        this.subs = new SubSink();\n        this.validateAddressSubject = new Subject();\n        this.isAdmin$ = sessionService.isAdmin$;\n    }\n    AddressFormComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.address == null) {\n            throw new Error('AddressForm requires an address object (even {}) will do');\n        }\n        // update the address object passed by the parent component\n        // with missing fields from 'emptyAddress' but ...\n        var cleanAddr = __assign({}, emptyAddress, this.address);\n        cleanAddr.isVerified = cleanAddr.isVerified && !!cleanAddr.geoCode;\n        // DO NOT change the address object reference. Use Object.assign() to modify.\n        Object.assign(this.address, cleanAddr);\n        this.geolocate();\n        this.subscribeAutocomplete();\n        this.cacheAddress(this.address);\n        // Validate address when triggered via subject\n        var validateAddress$ = this.validateAddressSubject.pipe(debounceTime(100), switchMap(function () {\n            _this.isLookingUpAddresses = true;\n            _this.resetGeoValidStatus();\n            // Create address snapshot and validate it (if possible)\n            var addr = Object.assign({}, _this.address);\n            return isComplete(addr)\n                ? _this.addressValidationService.validateAddress(addr)\n                : of({ isValid: false, suggestedAddresses: [] });\n        }));\n        this.subs.sink = validateAddress$.subscribe(function (validation) { return _this.handleAddressValidation(validation); });\n        if (!this.inline && this.addressValidationService.hasSuggestion(this.address)) {\n            this.validateAddress();\n        }\n        var inputEl = this.streetElement.child.nativeElement;\n        this.addressFinder.disableBrowserAutocomplete(inputEl);\n    };\n    AddressFormComponent.prototype.ngOnDestroy = function () {\n        this.subs.unsubscribe();\n    };\n    AddressFormComponent.prototype.subscribeAutocomplete = function () {\n        var _this = this;\n        if (this.addressChanges$) {\n            return; // already subscribing to address changes\n        }\n        this.addressChanges$ = this.addressFinder.getAutocompleteAddress(this.streetElement.child.nativeElement);\n        // Null if address finder wasn't ready. Try again on next focus.\n        if (this.addressChanges$) {\n            this.subs.sink = this.addressChanges$.subscribe(function (address) {\n                // User picked an address when street1 is truthy; else user pressed Enter key.\n                if (address.street1) {\n                    _this.resetGeoValidStatus();\n                    _this.addressPicked(address);\n                }\n            });\n        }\n    };\n    AddressFormComponent.prototype.geolocate = function () {\n        this.geolocationService.update();\n    };\n    AddressFormComponent.prototype.onFocus = function () {\n        this.subscribeAutocomplete();\n    };\n    AddressFormComponent.prototype.onStreetOneBlur = function () {\n        var _this = this;\n        // Must distinguish between a user entering street value and a user picking a Google Places address\n        // THIS IS A HACK. BEWARE OF CHANGES TO GOOGLE PLACES API BEHAVIOR\n        // If the google places API changes, this detection strategy might change also.\n        setTimeout(function () {\n            // When user simply enters the street and leaves the input box without picking a google place,\n            // the value in the input box and the value in address.street1 are the same.\n            // When user picks a google place, after one tick,\n            // google places fills the input box value with the picked address\n            // That value differs from the user-entered value which is bound to street1.\n            if (_this.address.street1 === _this.streetElement.child.nativeElement.value) {\n                _this.validateIfChanged(); // user entered a value rather than picking an address.\n            }\n        }, 0);\n    };\n    AddressFormComponent.prototype.onStateChanged = function () {\n        this.validateIfChanged();\n    };\n    AddressFormComponent.prototype.onBlur = function () {\n        this.validateIfChanged();\n    };\n    AddressFormComponent.prototype.validateAddress = function () {\n        this.validateAddressSubject.next();\n    };\n    AddressFormComponent.prototype.isCurrentAddressComplete = function () {\n        return isComplete(this.address);\n    };\n    AddressFormComponent.prototype.updateAddress = function (address) {\n        Object.assign(this.address, address);\n        this.cacheAddress(this.address);\n    };\n    AddressFormComponent.prototype.confirmAddress = function (pickedAddress) {\n        Object.assign(this.address, {\n            street1: pickedAddress.street1,\n            city: pickedAddress.city,\n            state: pickedAddress.state,\n            zip: pickedAddress.zip,\n            geoCode: pickedAddress.geoCode,\n            schoolDistrictCode: pickedAddress.schoolDistrictCode,\n            psdCode: pickedAddress.psdCode,\n            isVerified: !!pickedAddress.geoCode\n        });\n        this.cacheAddress(this.address);\n        if (!this.changeDetector.destroyed) {\n            this.changeDetector.detectChanges();\n        }\n        this.confirmed.emit(this.address);\n    };\n    AddressFormComponent.prototype.geoCodeTouched = function () {\n        if (!this.hasValidGeoCode) {\n            this.address.isVerified = false;\n        }\n    };\n    Object.defineProperty(AddressFormComponent.prototype, \"hasValidGeoCode\", {\n        get: function () {\n            return this.address != null && this.address.geoCode != null && this.address.geoCode.length === 9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AddressFormComponent.prototype.addressPicked = function (address) {\n        // Need to clear the address and trigger a change detection before assigning the suggested address, otherwise a strange bug happens\n        // where clicking multiple times through the Places dropdown with same Street address will leave full address inside the textbox\n        // because address.street1 does not change yet the input text was forcibly changed, therefore Angular will not force an UI update.\n        Object.assign(this.address, emptyAddress);\n        this.changeDetector.detectChanges(); // because no ng event occurs when clicking Places dropdown\n        // update the address object passed by the parent component\n        Object.assign(this.address, emptyAddress, address);\n        this.changeDetector.detectChanges();\n        this.validateIfChanged();\n    };\n    AddressFormComponent.prototype.resetGeoValidStatus = function () {\n        // Clear prev address results\n        this.pickAddresses = [];\n        // Clear the address\n        this.address.isVerified = false;\n        this.address.geoCode = '';\n        this.address.schoolDistrictCode = null;\n        this.address.psdCode = null;\n        this.changeDetector.detectChanges();\n    };\n    AddressFormComponent.prototype.hasAddressChanged = function () {\n        return this.cachedAddress == null ||\n            addressToString(this.address).localeCompare(addressToString(this.cachedAddress)) !== 0;\n    };\n    AddressFormComponent.prototype.handleAddressValidation = function (addrValidation) {\n        var pickAddresses = addrValidation.suggestedAddresses.map(function (e) {\n            return {\n                street1: e.addressLine1,\n                street2: e.addressLine2,\n                city: e.city,\n                state: e.state,\n                zip: e.zip,\n                country: 'US',\n                geoCode: e.geoCode,\n                schoolDistrictCode: e.schoolDistrict,\n                psdCode: e.psdCode,\n                county: e.county,\n                jurisdiction: e.jurisdiction,\n                schoolDistrict: e.schoolDistrictName\n            };\n        });\n        if (addrValidation.isValid) {\n            this.confirmAddress(pickAddresses[0]);\n        }\n        else if (this.inline) {\n            this.failedValidation.emit(true);\n        }\n        else {\n            this.pickAddresses = pickAddresses;\n            this.optionalColumns = {\n                county: this.ifMultipleChoices('county'),\n                jurisdiction: this.ifMultipleChoices('jurisdiction'),\n                schoolDistrict: this.ifMultipleChoices('schoolDistrict')\n            };\n        }\n        this.cacheAddress(this.address);\n        this.isLookingUpAddresses = false;\n        this.hadAttemptedAddressLookup = true;\n        if (!this.changeDetector.destroyed) {\n            this.changeDetector.detectChanges();\n        }\n    };\n    /**\n     * Return true if the pickAddresses have more than one value for the given property.\n     * @param property The address property to examine, e.g., 'County'\n     */\n    AddressFormComponent.prototype.ifMultipleChoices = function (property) {\n        var choices = this.pickAddresses.reduce(function (acc, addr) {\n            var choice = addr[property];\n            return choice && -1 === acc.indexOf(choice) ? acc.concat(choice) : acc;\n        }, []);\n        return choices.length > 1;\n    };\n    // Cache the address so we dont compare on each address change\n    AddressFormComponent.prototype.cacheAddress = function (address) {\n        this.cachedAddress = Object.assign({}, address);\n    };\n    AddressFormComponent.prototype.validateIfChanged = function () {\n        if (this.hasAddressChanged()) {\n            this.resetGeoValidStatus();\n            if (this.isCurrentAddressComplete()) {\n                this.validateAddress();\n            }\n        }\n    };\n    return AddressFormComponent;\n}());\nexport { AddressFormComponent };\n","import { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, ViewRef } from '@angular/core';\r\n\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, switchMap } from 'rxjs/operators';\r\n\r\nimport { Address, USStateCodes } from '@model';\r\nimport { AddressFinderService, GeolocationService } from '@core';\r\nimport { AddressLike, addressToString, GeoAddressLike, isComplete, SubSink } from '@utils';\r\nimport { IAddressValidation, TaxAddressValidationService,  } from '@core/services/tax-services';\r\nimport { InputTextComponent } from '@shared/input'; // full path to avoid circularity\r\nimport { SessionService } from '@session';\r\n\r\n/** For initializing forms */\r\ntype AddressWithGeoLike = AddressLike & GeoAddressLike;\r\ntype ExtendedAddress = AddressWithGeoLike & {\r\n  county?: string;\r\n  jurisdiction?: string;\r\n  schoolDistrict: string;\r\n};\r\n\r\nexport const emptyAddress: AddressWithGeoLike = {\r\n  street1: '',\r\n  street2: '',\r\n  city: '',\r\n  state: '',\r\n  zip: '',\r\n  country: 'US',\r\n  geoCode: '',\r\n  schoolDistrictCode: null,\r\n  psdCode: null,\r\n  isVerified: false\r\n};\r\n\r\n@Component({\r\n  selector: 'sp-address-form',\r\n  templateUrl: './address-form.component.html'\r\n})\r\nexport class AddressFormComponent implements OnInit, OnDestroy {\r\n  @Input() address: AddressWithGeoLike;\r\n  @Input() inline: boolean;\r\n  @Output() failedValidation = new EventEmitter();\r\n  @Output() confirmed = new EventEmitter<AddressWithGeoLike>();\r\n  @ViewChild('street1') streetElement: InputTextComponent;\r\n\r\n  stateCodes = USStateCodes.codes;\r\n\r\n  private addressChanges$: Observable<AddressLike>;\r\n  private cachedAddress: AddressWithGeoLike;\r\n  isAdmin$: Observable<boolean>;\r\n  isLookingUpAddresses = false;\r\n  hadAttemptedAddressLookup = false;\r\n  optionalColumns = {\r\n    county: false,\r\n    jurisdiction: false,\r\n    schoolDistrict: false\r\n  };\r\n  pickAddresses: ExtendedAddress[];\r\n  private subs = new SubSink();\r\n  private validateAddressSubject = new Subject();\r\n\r\n  constructor(\r\n    private addressFinder: AddressFinderService,\r\n    private addressValidationService: TaxAddressValidationService,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private geolocationService: GeolocationService,\r\n    sessionService: SessionService\r\n  ) {\r\n    this.isAdmin$ = sessionService.isAdmin$;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.address == null) {\r\n      throw new Error('AddressForm requires an address object (even {}) will do');\r\n    }\r\n    // update the address object passed by the parent component\r\n    // with missing fields from 'emptyAddress' but ...\r\n    const cleanAddr = { ...emptyAddress, ...this.address };\r\n    cleanAddr.isVerified = cleanAddr.isVerified && !!cleanAddr.geoCode;\r\n    // DO NOT change the address object reference. Use Object.assign() to modify.\r\n    Object.assign(this.address, cleanAddr);\r\n\r\n    this.geolocate();\r\n    this.subscribeAutocomplete();\r\n\r\n    this.cacheAddress(this.address);\r\n\r\n    // Validate address when triggered via subject\r\n    const validateAddress$ = this.validateAddressSubject.pipe(\r\n      debounceTime(100),\r\n      switchMap(() => {\r\n        this.isLookingUpAddresses = true;\r\n        this.resetGeoValidStatus();\r\n\r\n        // Create address snapshot and validate it (if possible)\r\n        const addr = Object.assign({}, this.address);\r\n        return isComplete(addr)\r\n          ? this.addressValidationService.validateAddress(addr)\r\n          : of({ isValid: false, suggestedAddresses: [] });\r\n      })\r\n    );\r\n\r\n    this.subs.sink = validateAddress$.subscribe(validation => this.handleAddressValidation(validation));\r\n\r\n    if (!this.inline && this.addressValidationService.hasSuggestion(this.address)) {\r\n      this.validateAddress();\r\n    }\r\n\r\n    const inputEl = this.streetElement.child.nativeElement as HTMLInputElement;\r\n    this.addressFinder.disableBrowserAutocomplete(inputEl);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  subscribeAutocomplete() {\r\n    if (this.addressChanges$) {\r\n      return; // already subscribing to address changes\r\n    }\r\n\r\n    this.addressChanges$ = this.addressFinder.getAutocompleteAddress(\r\n      this.streetElement.child.nativeElement\r\n    );\r\n\r\n    // Null if address finder wasn't ready. Try again on next focus.\r\n    if (this.addressChanges$) {\r\n      this.subs.sink = this.addressChanges$.subscribe(address => {\r\n        // User picked an address when street1 is truthy; else user pressed Enter key.\r\n        if (address.street1) {\r\n          this.resetGeoValidStatus();\r\n          this.addressPicked(address);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  geolocate() {\r\n    this.geolocationService.update();\r\n  }\r\n\r\n  onFocus() {\r\n    this.subscribeAutocomplete();\r\n  }\r\n\r\n  onStreetOneBlur() {\r\n    // Must distinguish between a user entering street value and a user picking a Google Places address\r\n    // THIS IS A HACK. BEWARE OF CHANGES TO GOOGLE PLACES API BEHAVIOR\r\n    // If the google places API changes, this detection strategy might change also.\r\n    setTimeout(() => {\r\n      // When user simply enters the street and leaves the input box without picking a google place,\r\n      // the value in the input box and the value in address.street1 are the same.\r\n      // When user picks a google place, after one tick,\r\n      // google places fills the input box value with the picked address\r\n      // That value differs from the user-entered value which is bound to street1.\r\n      if (this.address.street1 === this.streetElement.child.nativeElement.value) {\r\n        this.validateIfChanged(); // user entered a value rather than picking an address.\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  onStateChanged() {\r\n    this.validateIfChanged();\r\n  }\r\n\r\n  onBlur() {\r\n    this.validateIfChanged();\r\n  }\r\n\r\n  validateAddress() {\r\n    this.validateAddressSubject.next();\r\n  }\r\n\r\n  isCurrentAddressComplete(): boolean {\r\n    return isComplete(this.address);\r\n  }\r\n\r\n  updateAddress(address: Address) {\r\n    Object.assign(this.address, address);\r\n    this.cacheAddress(this.address);\r\n  }\r\n\r\n  confirmAddress(pickedAddress: ExtendedAddress) {\r\n    Object.assign(this.address, {\r\n      street1: pickedAddress.street1,\r\n      city: pickedAddress.city,\r\n      state: pickedAddress.state,\r\n      zip: pickedAddress.zip,\r\n      geoCode: pickedAddress.geoCode,\r\n      schoolDistrictCode: pickedAddress.schoolDistrictCode,\r\n      psdCode: pickedAddress.psdCode,\r\n      isVerified: !!pickedAddress.geoCode\r\n    });\r\n\r\n    this.cacheAddress(this.address);\r\n    if (!(this.changeDetector as ViewRef).destroyed) {\r\n      this.changeDetector.detectChanges();\r\n    }\r\n    this.confirmed.emit(this.address);\r\n  }\r\n\r\n  geoCodeTouched() {\r\n    if (!this.hasValidGeoCode) {\r\n      this.address.isVerified = false;\r\n    }\r\n  }\r\n\r\n  get hasValidGeoCode() {\r\n    return this.address != null && this.address.geoCode != null && this.address.geoCode.length === 9;\r\n  }\r\n\r\n  private addressPicked(address: AddressLike) {\r\n    // Need to clear the address and trigger a change detection before assigning the suggested address, otherwise a strange bug happens\r\n    // where clicking multiple times through the Places dropdown with same Street address will leave full address inside the textbox\r\n    // because address.street1 does not change yet the input text was forcibly changed, therefore Angular will not force an UI update.\r\n    Object.assign(this.address, emptyAddress);\r\n    this.changeDetector.detectChanges(); // because no ng event occurs when clicking Places dropdown\r\n\r\n    // update the address object passed by the parent component\r\n    Object.assign(this.address, emptyAddress, address);\r\n    this.changeDetector.detectChanges();\r\n\r\n    this.validateIfChanged();\r\n  }\r\n\r\n  private resetGeoValidStatus() {\r\n    // Clear prev address results\r\n    this.pickAddresses = [];\r\n\r\n    // Clear the address\r\n    this.address.isVerified = false;\r\n    this.address.geoCode = '';\r\n    this.address.schoolDistrictCode = null;\r\n    this.address.psdCode = null;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  private hasAddressChanged(): boolean {\r\n    return this.cachedAddress == null ||\r\n      addressToString(this.address).localeCompare(addressToString(this.cachedAddress)) !== 0;\r\n  }\r\n\r\n  private handleAddressValidation(addrValidation: IAddressValidation) {\r\n    const pickAddresses = addrValidation.suggestedAddresses.map(e => {\r\n      return <ExtendedAddress>{\r\n        street1: e.addressLine1,\r\n        street2: e.addressLine2,\r\n        city: e.city,\r\n        state: e.state,\r\n        zip: e.zip,\r\n        country: 'US',\r\n        geoCode: e.geoCode,\r\n        schoolDistrictCode: e.schoolDistrict,\r\n        psdCode: e.psdCode,\r\n        county: e.county,\r\n        jurisdiction: e.jurisdiction,\r\n        schoolDistrict: e.schoolDistrictName\r\n      };\r\n    });\r\n\r\n    if (addrValidation.isValid) {\r\n      this.confirmAddress(pickAddresses[0]);\r\n    } else if (this.inline) {\r\n      this.failedValidation.emit(true);\r\n    } else {\r\n      this.pickAddresses = pickAddresses;\r\n      this.optionalColumns = {\r\n        county: this.ifMultipleChoices('county'),\r\n        jurisdiction: this.ifMultipleChoices('jurisdiction'),\r\n        schoolDistrict: this.ifMultipleChoices('schoolDistrict')\r\n      };\r\n    }\r\n\r\n    this.cacheAddress(this.address);\r\n    this.isLookingUpAddresses = false;\r\n    this.hadAttemptedAddressLookup = true;\r\n\r\n    if (!(this.changeDetector as ViewRef).destroyed) {\r\n      this.changeDetector.detectChanges();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return true if the pickAddresses have more than one value for the given property.\r\n   * @param property The address property to examine, e.g., 'County'\r\n   */\r\n  private ifMultipleChoices(property: keyof ExtendedAddress) {\r\n    const choices = this.pickAddresses.reduce((acc, addr) => {\r\n      const choice = addr[property];\r\n      return choice && -1 === acc.indexOf(choice) ? acc.concat(choice) : acc;\r\n    }, []);\r\n    return choices.length > 1;\r\n  }\r\n\r\n  // Cache the address so we dont compare on each address change\r\n  private cacheAddress(address: AddressWithGeoLike) {\r\n    this.cachedAddress = Object.assign({}, address);\r\n  }\r\n\r\n  private validateIfChanged() {\r\n    if (this.hasAddressChanged()) {\r\n      this.resetGeoValidStatus();\r\n\r\n      if (this.isCurrentAddressComplete()) {\r\n        this.validateAddress();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { CompanyTax, EmployeeTax, TaxTypeCode, TaxCategoryCode } from '@model';\r\nimport { EmployeeTaxLocation } from '@entity';\r\nimport { ITaxBehavior, IAvailableTax, TaxBehaviorWrapper, buildTaxBehavior, TaxRate } from './tax-models';\r\n\r\nenum TaxSelectorType {\r\n    None,\r\n    Code,\r\n    Description,\r\n    CategoryDescription\r\n}\r\n\r\ninterface IBehaviorException {\r\n    isForEmployee: boolean;\r\n    isForCompany: boolean;\r\n    selectorType: TaxSelectorType;\r\n    selectorValue: string;\r\n    overwriteBehavior?: Partial<ITaxBehavior>;\r\n    overwriteTax?: Partial<CompanyTax> | Partial<EmployeeTax>;\r\n\r\n    /** If this tax should be ignored. It fill be NEVER COLLECTED and so NEVER SAVED!\r\n     * Be care what taxes are annotated as don't collect */\r\n    dontCollect?: boolean;\r\n}\r\n\r\ninterface IDefaultTaxes {\r\n    isForEmployee: boolean;\r\n    isForCompany: boolean;\r\n\r\n    availableTax: IAvailableTax;\r\n}\r\n\r\n\r\n/** Exceptions to the rule. We can inject custom tax properties here to enrich the api metadata\r\n * Ex: if a tax has withholding allowance, UBI or a rate, even tax level data like the name.\r\n * This is applied after the api behavior so it takes precedence!\r\n *  - isForEmployee and isForCompany can be used to filter if the exception applies to company and/or employee taxes\r\n *  - selectorType and selectorValue filter out the taxes the behavior is applied to\r\n *  - overwriteBehavior: overwrites ITaxBehavior that handles display/behavior\r\n *  - overwriteTax: overwrites the actual tax, chan change values, names, even the mtsTaxCode, use wisely\r\n */\r\nconst exceptions: IBehaviorException[] = [\r\n    {\r\n        // All WH taxes codes end with 0000-001. Ex: FE0000-001 or NY0000-001\r\n        isForEmployee: true,\r\n        isForCompany: false,\r\n        selectorType: TaxSelectorType.Code,\r\n        selectorValue: '0000-001',\r\n        overwriteBehavior: {\r\n            hasExemption: true,\r\n            shouldShow: true,\r\n            hasWithholding: true\r\n        }\r\n    },\r\n    {\r\n        // The FUTA has exempt reasons\r\n        isForEmployee: true,\r\n        isForCompany: false,\r\n        selectorType: TaxSelectorType.Code,\r\n        selectorValue: 'FE0000-010',\r\n        overwriteBehavior: {\r\n            hasExemptionReason: true\r\n        }\r\n    },\r\n    {\r\n        // All unemployment taxes codes end with 0000-010. Ex: FE0000-010 or NY0000-010\r\n        isForEmployee: true,\r\n        isForCompany: false,\r\n        selectorType: TaxSelectorType.Code,\r\n        selectorValue: '0000-010',\r\n        overwriteBehavior: {\r\n            hasExemption: true,\r\n            shouldShow: true,\r\n            requireUserInput: true\r\n        }\r\n    },\r\n    // TAXES THAT ARE EXCLUDED FROM THE API\r\n    {\r\n        // The FIN is collected explicitly so we can exclude it, its the: Federal Tax ID Number\r\n        isForEmployee: false,\r\n        isForCompany: true,\r\n        selectorType: TaxSelectorType.Code,\r\n        selectorValue: 'FE0000-001',\r\n        dontCollect: true\r\n    }\r\n];\r\n\r\n/** These are hard coded taxes that the tax logic should always present\r\n * If the api can't be called because there are no addresses we would still show\r\n * these taxes, when the api call is performed the data is overwritten by the api one */\r\nconst defaultTaxes: IDefaultTaxes[] = [\r\n    {\r\n        isForEmployee: true,\r\n        isForCompany: false,\r\n        availableTax: <IAvailableTax>{\r\n            categoryDescription: 'Federal W/H',\r\n            code: 'FE0000-001',\r\n            description: 'FEDERAL WH',\r\n            displayOrder: 3,\r\n            filingStatuses: [\r\n                { code: 'H', description: 'Head of Household' },\r\n                { code: 'M', description: 'Married' },\r\n                { code: 'S', description: 'Single' }\r\n            ],\r\n            isEmployee: true,\r\n            isVariableRate: false,\r\n            stateCode: null,\r\n            taxFormats: [{ stateCode: 'US', format: '##-#######', regEx: '\\d{2}\\-\\d{7}' }],\r\n            taxTypeCode: 'FD'\r\n        }\r\n    },\r\n    {\r\n        isForEmployee: true,\r\n        isForCompany: true,\r\n        availableTax: <IAvailableTax>{\r\n            categoryDescription: 'FUTA Employer',\r\n            code: 'FE0000-010',\r\n            description: 'FUTA ER',\r\n            displayOrder: 14,\r\n            filingStatuses: null,\r\n            isEmployee: false,\r\n            isVariableRate: false,\r\n            stateCode: null,\r\n            taxFormats: null,\r\n            taxTypeCode: 'FD',\r\n        }\r\n    }\r\n];\r\n\r\n/**\r\n * Given a CompanyTax or a EmployeeTax this server will produce associated ITaxBehavior's.\r\n * There seems to be varied exceptions to how a tax should behave based on the unique code,\r\n * state, description or other. This service encapsulates those exceptions and provides a future\r\n * plugin point for returning a \"generic\" tax behavior\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class TaxBehaviorService {\r\n\r\n    constructor() { }\r\n\r\n    public getEmployeeAlwaysAvailableTaxes(): IAvailableTax[] {\r\n        return defaultTaxes.filter(e => e.isForEmployee).map(t => t.availableTax);\r\n    }\r\n\r\n    public getCompanyAlwaysAvailableTaxes(): IAvailableTax[] {\r\n        return defaultTaxes.filter(e => e.isForCompany).map(t => t.availableTax);\r\n    }\r\n\r\n    /**\r\n     * Wraps the CompanyTax object into a behavior container. It also mutates the tax object based on some simple rules.\r\n     * If the api returns `null` the tax must be ignored\r\n     *\r\n     * @param tax The CompanyTax.\r\n     * @param availableTax The available tax for the associated employee tax. This should come from the backend api.\r\n     * @param taxRate The associated tax rate for the company tax.\r\n     */\r\n    public tryGetCompanyTaxBehavior(tax: CompanyTax, availableTax: IAvailableTax, taxRate: TaxRate, availableTaxes: IAvailableTax[])\r\n        : TaxBehaviorWrapper<CompanyTax> | null {\r\n\r\n        let behavior = this.getBaseBehavior(availableTax);\r\n\r\n        // This is the behavior buildup phase\r\n        behavior = this.applyCompanyRules(behavior, tax, availableTax, taxRate, availableTaxes);\r\n\r\n        behavior = this.applyExceptions(tax, availableTax, behavior, true, false);\r\n        if (behavior == null) {\r\n            return null;\r\n        }\r\n\r\n        // If the tax can be hidden from the user in normal screens\r\n        behavior.shouldShow = this.shouldShowCompanyTax(tax, behavior);\r\n\r\n        // If the tax requires user input. In other words if the default is not enough\r\n        // Ex: Rates or FilingStatus\r\n        behavior.requireUserInput = this.doesCompanyTaxRequireInput(tax, behavior);\r\n\r\n        return buildTaxBehavior(tax, behavior);\r\n    }\r\n\r\n    /**\r\n     * Wraps the EmployeeTax object into a behavior container. It also mutates the tax object based on some simple rules.\r\n     * If the api returns `null` the tax must be ignored\r\n     *\r\n     * @param tax The EmployeeTax.\r\n     * @param availableTax The available tax for the associated employee tax. This should come from the backend api.\r\n     * @param employeeTaxLocation The employee.\r\n     */\r\n    public tryGetEmployeeTaxBehavior(tax: EmployeeTax, availableTax: IAvailableTax, employeeTaxLocation: EmployeeTaxLocation)\r\n        : TaxBehaviorWrapper<EmployeeTax> | null {\r\n\r\n        let behavior = this.getBaseBehavior(availableTax);\r\n\r\n        // This is the behavior buildup phase\r\n        behavior = this.applyEmployeeRules(behavior, tax, availableTax, employeeTaxLocation);\r\n\r\n        behavior = this.applyExceptions(tax, availableTax, behavior, false, true);\r\n        if (behavior == null) {\r\n            return null;\r\n        }\r\n\r\n        // If the tax can be hidden from the user in normal screens\r\n        // Ex: federal MED tax\r\n        behavior.shouldShow = this.shouldShowEmployeeTax(tax, behavior);\r\n\r\n        // If the tax requires user input. In other words if the default is not enough\r\n        // Ex: Rates or FilingStatus\r\n        behavior.requireUserInput = this.doesEmployeeTaxRequireInput(tax, behavior);\r\n\r\n        return buildTaxBehavior(tax, behavior);\r\n    }\r\n\r\n    private getBaseBehavior(availableTax: IAvailableTax): ITaxBehavior {\r\n        return <ITaxBehavior>{\r\n            shouldShow: false,\r\n            requireUserInput: false,\r\n\r\n            hasExemption: false,\r\n            hasExemptionReason: false,\r\n            hasEin: false,\r\n            hasRate: false,\r\n            hasFilingStatus: false,\r\n            hasWithholding: false,\r\n            hasLowIncomeExempt: false,\r\n            hasUbi: false,\r\n            hasBusinessStartDate: false,\r\n\r\n            taxEinFormats: availableTax.taxFormats || [],\r\n            filingStatuses: availableTax.filingStatuses || [],\r\n            rate: null,\r\n\r\n            useEINFromCode: availableTax.useEINFromCode,\r\n            categoryCode: <TaxCategoryCode>availableTax.categoryCode\r\n        };\r\n    }\r\n\r\n    private applyCompanyRules(currentBehavior: ITaxBehavior, tax: CompanyTax, availableTax: IAvailableTax, taxRate: TaxRate,\r\n        availableTaxes: IAvailableTax[]): ITaxBehavior {\r\n\r\n        // Taxes that are state or local level have no exempt option\r\n        if (tax.taxTypeCode === TaxTypeCode.Federal) {\r\n            currentBehavior.hasExemption = true;\r\n        } else {\r\n            currentBehavior.hasExemption = false;\r\n        }\r\n\r\n        // All company taxes have EIN. Its just that some of them dont show it.\r\n        currentBehavior.hasEin =\r\n            // Never ask for EINs on federal taxes\r\n            tax.taxTypeCode !== TaxTypeCode.Federal &&\r\n            // Do we have a reference useEINFromCode. If not we are root (take ein)\r\n            (availableTax.useEINFromCode == null ||\r\n                // If the reference tax is available then we don't need to retrieve the ein\r\n                availableTaxes.every(t => t.code !== availableTax.useEINFromCode));\r\n\r\n        // Is the isVariableRate = true. Then we need to ask for a rate.\r\n        if (availableTax.isVariableRate != null && availableTax.isVariableRate === true) {\r\n            currentBehavior.hasRate = true;\r\n            currentBehavior.rate = taxRate;\r\n        }\r\n\r\n        // Taxes that have ein code have an exempt option\r\n        if (currentBehavior.hasEin) {\r\n            currentBehavior.hasExemption = true;\r\n        }\r\n\r\n        return currentBehavior;\r\n    }\r\n\r\n    private applyEmployeeRules(currentBehavior: ITaxBehavior, tax: EmployeeTax,\r\n        availableTax: IAvailableTax, employeeTaxLocation: EmployeeTaxLocation): ITaxBehavior {\r\n        // A employee can't be exempt from federal taxes\r\n        currentBehavior.hasExemption = tax.taxTypeCode === TaxTypeCode.Federal ? false : true;\r\n\r\n        // Does the tax category have at least one filingStatuses? If so filingStatuses is required.\r\n        if (availableTax.filingStatuses != null && availableTax.filingStatuses.length > 0) {\r\n            currentBehavior.hasFilingStatus = true;\r\n        }\r\n\r\n        // If the employee is a 1099 Contractor he can't chose to be exempt but automatically is\r\n        if (employeeTaxLocation.isTaxesExcluded) {\r\n            tax.isExempt = true;\r\n            currentBehavior.hasExemption = false;\r\n        }\r\n\r\n        return currentBehavior;\r\n    }\r\n\r\n    private applyExceptions(tax: CompanyTax | EmployeeTax, availableTax: IAvailableTax,\r\n        currentBehavior: ITaxBehavior, isCompanyTax: boolean, isEmployeeTax: boolean): ITaxBehavior {\r\n        let canCollect = true;\r\n\r\n        const applyException = function (theTax: CompanyTax | EmployeeTax, theBehavior: ITaxBehavior, theException: IBehaviorException)\r\n            : boolean {\r\n            if (theException.dontCollect != null && theException.dontCollect === true) {\r\n                return false;\r\n            }\r\n\r\n            if (theException.overwriteBehavior != null) {\r\n                Object.assign(theBehavior, theException.overwriteBehavior);\r\n            }\r\n\r\n            if (theException.overwriteTax != null) {\r\n                Object.assign(theTax, theException.overwriteTax);\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        exceptions.forEach(exception => {\r\n            const isEmployeeTaxException = isEmployeeTax && exception.isForEmployee;\r\n            const isCompanyTaxException = isCompanyTax && exception.isForCompany;\r\n\r\n            if (isEmployeeTaxException === false && isCompanyTaxException === false) {\r\n                return;\r\n            }\r\n\r\n            if (exception.selectorType === TaxSelectorType.Code &&\r\n                tax.mtsTaxCode.includes(exception.selectorValue)) {\r\n                canCollect = applyException(tax, currentBehavior, exception);\r\n            }\r\n\r\n            if (exception.selectorType === TaxSelectorType.Description &&\r\n                availableTax.description.toLowerCase().includes(exception.selectorValue.toLowerCase())) {\r\n                canCollect = applyException(tax, currentBehavior, exception);\r\n            }\r\n\r\n            if (exception.selectorType === TaxSelectorType.CategoryDescription &&\r\n                availableTax.categoryDescription.toLowerCase().includes(exception.selectorValue.toLowerCase())) {\r\n                canCollect = applyException(tax, currentBehavior, exception);\r\n            }\r\n        });\r\n\r\n        if (<boolean>canCollect === false) {\r\n            return null;\r\n        }\r\n\r\n        return currentBehavior;\r\n    }\r\n\r\n    private shouldShowCompanyTax(tax: CompanyTax, taxBehavior: ITaxBehavior): boolean {\r\n        return true;\r\n    }\r\n\r\n    private shouldShowEmployeeTax(tax: EmployeeTax, taxBehavior: ITaxBehavior): boolean {\r\n        return taxBehavior.shouldShow || tax.taxTypeCode !== TaxTypeCode.Federal;\r\n    }\r\n\r\n    private doesCompanyTaxRequireInput(tax: CompanyTax, taxBehavior: ITaxBehavior): boolean {\r\n        // We by default show the taxes if:\r\n        // 1) There is a EIN to be filled in\r\n        // 2) There is a variable rate to collect\r\n        // 3) Has UBI, a WA taxes thing\r\n        // 4) Has business start date, a WA taxes thing\r\n        return taxBehavior.requireUserInput || taxBehavior.hasEin || taxBehavior.hasRate ||\r\n            taxBehavior.hasUbi || taxBehavior.hasBusinessStartDate;\r\n    }\r\n\r\n    private doesEmployeeTaxRequireInput(tax: EmployeeTax, taxBehavior: ITaxBehavior): boolean {\r\n        // We default to show the taxes if:\r\n        // 1) There is a filling status to collect\r\n        // 2) There is withholding\r\n        // 3) There is low income exemption\r\n        return taxBehavior.requireUserInput || taxBehavior.hasFilingStatus || taxBehavior.hasWithholding ||\r\n            taxBehavior.hasLowIncomeExempt;\r\n    }\r\n}\r\n","import { TaxTypeCode } from '@model';\nimport { buildTaxBehavior } from './tax-models';\nimport * as i0 from \"@angular/core\";\nvar TaxSelectorType;\n(function (TaxSelectorType) {\n    TaxSelectorType[TaxSelectorType[\"None\"] = 0] = \"None\";\n    TaxSelectorType[TaxSelectorType[\"Code\"] = 1] = \"Code\";\n    TaxSelectorType[TaxSelectorType[\"Description\"] = 2] = \"Description\";\n    TaxSelectorType[TaxSelectorType[\"CategoryDescription\"] = 3] = \"CategoryDescription\";\n})(TaxSelectorType || (TaxSelectorType = {}));\n/** Exceptions to the rule. We can inject custom tax properties here to enrich the api metadata\n * Ex: if a tax has withholding allowance, UBI or a rate, even tax level data like the name.\n * This is applied after the api behavior so it takes precedence!\n *  - isForEmployee and isForCompany can be used to filter if the exception applies to company and/or employee taxes\n *  - selectorType and selectorValue filter out the taxes the behavior is applied to\n *  - overwriteBehavior: overwrites ITaxBehavior that handles display/behavior\n *  - overwriteTax: overwrites the actual tax, chan change values, names, even the mtsTaxCode, use wisely\n */\nvar exceptions = [\n    {\n        // All WH taxes codes end with 0000-001. Ex: FE0000-001 or NY0000-001\n        isForEmployee: true,\n        isForCompany: false,\n        selectorType: TaxSelectorType.Code,\n        selectorValue: '0000-001',\n        overwriteBehavior: {\n            hasExemption: true,\n            shouldShow: true,\n            hasWithholding: true\n        }\n    },\n    {\n        // The FUTA has exempt reasons\n        isForEmployee: true,\n        isForCompany: false,\n        selectorType: TaxSelectorType.Code,\n        selectorValue: 'FE0000-010',\n        overwriteBehavior: {\n            hasExemptionReason: true\n        }\n    },\n    {\n        // All unemployment taxes codes end with 0000-010. Ex: FE0000-010 or NY0000-010\n        isForEmployee: true,\n        isForCompany: false,\n        selectorType: TaxSelectorType.Code,\n        selectorValue: '0000-010',\n        overwriteBehavior: {\n            hasExemption: true,\n            shouldShow: true,\n            requireUserInput: true\n        }\n    },\n    // TAXES THAT ARE EXCLUDED FROM THE API\n    {\n        // The FIN is collected explicitly so we can exclude it, its the: Federal Tax ID Number\n        isForEmployee: false,\n        isForCompany: true,\n        selectorType: TaxSelectorType.Code,\n        selectorValue: 'FE0000-001',\n        dontCollect: true\n    }\n];\n/** These are hard coded taxes that the tax logic should always present\n * If the api can't be called because there are no addresses we would still show\n * these taxes, when the api call is performed the data is overwritten by the api one */\nvar defaultTaxes = [\n    {\n        isForEmployee: true,\n        isForCompany: false,\n        availableTax: {\n            categoryDescription: 'Federal W/H',\n            code: 'FE0000-001',\n            description: 'FEDERAL WH',\n            displayOrder: 3,\n            filingStatuses: [\n                { code: 'H', description: 'Head of Household' },\n                { code: 'M', description: 'Married' },\n                { code: 'S', description: 'Single' }\n            ],\n            isEmployee: true,\n            isVariableRate: false,\n            stateCode: null,\n            taxFormats: [{ stateCode: 'US', format: '##-#######', regEx: '\\d{2}\\-\\d{7}' }],\n            taxTypeCode: 'FD'\n        }\n    },\n    {\n        isForEmployee: true,\n        isForCompany: true,\n        availableTax: {\n            categoryDescription: 'FUTA Employer',\n            code: 'FE0000-010',\n            description: 'FUTA ER',\n            displayOrder: 14,\n            filingStatuses: null,\n            isEmployee: false,\n            isVariableRate: false,\n            stateCode: null,\n            taxFormats: null,\n            taxTypeCode: 'FD',\n        }\n    }\n];\n/**\n * Given a CompanyTax or a EmployeeTax this server will produce associated ITaxBehavior's.\n * There seems to be varied exceptions to how a tax should behave based on the unique code,\n * state, description or other. This service encapsulates those exceptions and provides a future\n * plugin point for returning a \"generic\" tax behavior\n */\nvar TaxBehaviorService = /** @class */ (function () {\n    function TaxBehaviorService() {\n    }\n    TaxBehaviorService.prototype.getEmployeeAlwaysAvailableTaxes = function () {\n        return defaultTaxes.filter(function (e) { return e.isForEmployee; }).map(function (t) { return t.availableTax; });\n    };\n    TaxBehaviorService.prototype.getCompanyAlwaysAvailableTaxes = function () {\n        return defaultTaxes.filter(function (e) { return e.isForCompany; }).map(function (t) { return t.availableTax; });\n    };\n    /**\n     * Wraps the CompanyTax object into a behavior container. It also mutates the tax object based on some simple rules.\n     * If the api returns `null` the tax must be ignored\n     *\n     * @param tax The CompanyTax.\n     * @param availableTax The available tax for the associated employee tax. This should come from the backend api.\n     * @param taxRate The associated tax rate for the company tax.\n     */\n    TaxBehaviorService.prototype.tryGetCompanyTaxBehavior = function (tax, availableTax, taxRate, availableTaxes) {\n        var behavior = this.getBaseBehavior(availableTax);\n        // This is the behavior buildup phase\n        behavior = this.applyCompanyRules(behavior, tax, availableTax, taxRate, availableTaxes);\n        behavior = this.applyExceptions(tax, availableTax, behavior, true, false);\n        if (behavior == null) {\n            return null;\n        }\n        // If the tax can be hidden from the user in normal screens\n        behavior.shouldShow = this.shouldShowCompanyTax(tax, behavior);\n        // If the tax requires user input. In other words if the default is not enough\n        // Ex: Rates or FilingStatus\n        behavior.requireUserInput = this.doesCompanyTaxRequireInput(tax, behavior);\n        return buildTaxBehavior(tax, behavior);\n    };\n    /**\n     * Wraps the EmployeeTax object into a behavior container. It also mutates the tax object based on some simple rules.\n     * If the api returns `null` the tax must be ignored\n     *\n     * @param tax The EmployeeTax.\n     * @param availableTax The available tax for the associated employee tax. This should come from the backend api.\n     * @param employeeTaxLocation The employee.\n     */\n    TaxBehaviorService.prototype.tryGetEmployeeTaxBehavior = function (tax, availableTax, employeeTaxLocation) {\n        var behavior = this.getBaseBehavior(availableTax);\n        // This is the behavior buildup phase\n        behavior = this.applyEmployeeRules(behavior, tax, availableTax, employeeTaxLocation);\n        behavior = this.applyExceptions(tax, availableTax, behavior, false, true);\n        if (behavior == null) {\n            return null;\n        }\n        // If the tax can be hidden from the user in normal screens\n        // Ex: federal MED tax\n        behavior.shouldShow = this.shouldShowEmployeeTax(tax, behavior);\n        // If the tax requires user input. In other words if the default is not enough\n        // Ex: Rates or FilingStatus\n        behavior.requireUserInput = this.doesEmployeeTaxRequireInput(tax, behavior);\n        return buildTaxBehavior(tax, behavior);\n    };\n    TaxBehaviorService.prototype.getBaseBehavior = function (availableTax) {\n        return {\n            shouldShow: false,\n            requireUserInput: false,\n            hasExemption: false,\n            hasExemptionReason: false,\n            hasEin: false,\n            hasRate: false,\n            hasFilingStatus: false,\n            hasWithholding: false,\n            hasLowIncomeExempt: false,\n            hasUbi: false,\n            hasBusinessStartDate: false,\n            taxEinFormats: availableTax.taxFormats || [],\n            filingStatuses: availableTax.filingStatuses || [],\n            rate: null,\n            useEINFromCode: availableTax.useEINFromCode,\n            categoryCode: availableTax.categoryCode\n        };\n    };\n    TaxBehaviorService.prototype.applyCompanyRules = function (currentBehavior, tax, availableTax, taxRate, availableTaxes) {\n        // Taxes that are state or local level have no exempt option\n        if (tax.taxTypeCode === TaxTypeCode.Federal) {\n            currentBehavior.hasExemption = true;\n        }\n        else {\n            currentBehavior.hasExemption = false;\n        }\n        // All company taxes have EIN. Its just that some of them dont show it.\n        currentBehavior.hasEin =\n            // Never ask for EINs on federal taxes\n            tax.taxTypeCode !== TaxTypeCode.Federal &&\n                // Do we have a reference useEINFromCode. If not we are root (take ein)\n                (availableTax.useEINFromCode == null ||\n                    // If the reference tax is available then we don't need to retrieve the ein\n                    availableTaxes.every(function (t) { return t.code !== availableTax.useEINFromCode; }));\n        // Is the isVariableRate = true. Then we need to ask for a rate.\n        if (availableTax.isVariableRate != null && availableTax.isVariableRate === true) {\n            currentBehavior.hasRate = true;\n            currentBehavior.rate = taxRate;\n        }\n        // Taxes that have ein code have an exempt option\n        if (currentBehavior.hasEin) {\n            currentBehavior.hasExemption = true;\n        }\n        return currentBehavior;\n    };\n    TaxBehaviorService.prototype.applyEmployeeRules = function (currentBehavior, tax, availableTax, employeeTaxLocation) {\n        // A employee can't be exempt from federal taxes\n        currentBehavior.hasExemption = tax.taxTypeCode === TaxTypeCode.Federal ? false : true;\n        // Does the tax category have at least one filingStatuses? If so filingStatuses is required.\n        if (availableTax.filingStatuses != null && availableTax.filingStatuses.length > 0) {\n            currentBehavior.hasFilingStatus = true;\n        }\n        // If the employee is a 1099 Contractor he can't chose to be exempt but automatically is\n        if (employeeTaxLocation.isTaxesExcluded) {\n            tax.isExempt = true;\n            currentBehavior.hasExemption = false;\n        }\n        return currentBehavior;\n    };\n    TaxBehaviorService.prototype.applyExceptions = function (tax, availableTax, currentBehavior, isCompanyTax, isEmployeeTax) {\n        var canCollect = true;\n        var applyException = function (theTax, theBehavior, theException) {\n            if (theException.dontCollect != null && theException.dontCollect === true) {\n                return false;\n            }\n            if (theException.overwriteBehavior != null) {\n                Object.assign(theBehavior, theException.overwriteBehavior);\n            }\n            if (theException.overwriteTax != null) {\n                Object.assign(theTax, theException.overwriteTax);\n            }\n            return true;\n        };\n        exceptions.forEach(function (exception) {\n            var isEmployeeTaxException = isEmployeeTax && exception.isForEmployee;\n            var isCompanyTaxException = isCompanyTax && exception.isForCompany;\n            if (isEmployeeTaxException === false && isCompanyTaxException === false) {\n                return;\n            }\n            if (exception.selectorType === TaxSelectorType.Code &&\n                tax.mtsTaxCode.includes(exception.selectorValue)) {\n                canCollect = applyException(tax, currentBehavior, exception);\n            }\n            if (exception.selectorType === TaxSelectorType.Description &&\n                availableTax.description.toLowerCase().includes(exception.selectorValue.toLowerCase())) {\n                canCollect = applyException(tax, currentBehavior, exception);\n            }\n            if (exception.selectorType === TaxSelectorType.CategoryDescription &&\n                availableTax.categoryDescription.toLowerCase().includes(exception.selectorValue.toLowerCase())) {\n                canCollect = applyException(tax, currentBehavior, exception);\n            }\n        });\n        if (canCollect === false) {\n            return null;\n        }\n        return currentBehavior;\n    };\n    TaxBehaviorService.prototype.shouldShowCompanyTax = function (tax, taxBehavior) {\n        return true;\n    };\n    TaxBehaviorService.prototype.shouldShowEmployeeTax = function (tax, taxBehavior) {\n        return taxBehavior.shouldShow || tax.taxTypeCode !== TaxTypeCode.Federal;\n    };\n    TaxBehaviorService.prototype.doesCompanyTaxRequireInput = function (tax, taxBehavior) {\n        // We by default show the taxes if:\n        // 1) There is a EIN to be filled in\n        // 2) There is a variable rate to collect\n        // 3) Has UBI, a WA taxes thing\n        // 4) Has business start date, a WA taxes thing\n        return taxBehavior.requireUserInput || taxBehavior.hasEin || taxBehavior.hasRate ||\n            taxBehavior.hasUbi || taxBehavior.hasBusinessStartDate;\n    };\n    TaxBehaviorService.prototype.doesEmployeeTaxRequireInput = function (tax, taxBehavior) {\n        // We default to show the taxes if:\n        // 1) There is a filling status to collect\n        // 2) There is withholding\n        // 3) There is low income exemption\n        return taxBehavior.requireUserInput || taxBehavior.hasFilingStatus || taxBehavior.hasWithholding ||\n            taxBehavior.hasLowIncomeExempt;\n    };\n    TaxBehaviorService.ngInjectableDef = i0.defineInjectable({ factory: function TaxBehaviorService_Factory() { return new TaxBehaviorService(); }, token: TaxBehaviorService, providedIn: \"root\" });\n    return TaxBehaviorService;\n}());\nexport { TaxBehaviorService };\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { ElementRef } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, concatMap, first, map } from 'rxjs/operators';\nimport { AddressService } from '@entity';\nimport { areDifferent } from '@utils';\nimport { TaxCollectorService } from '@app/core/services/tax-services/tax-collector.service';\nvar AddressModalComponent = /** @class */ (function () {\n    function AddressModalComponent(addressService, taxCollectorService, modalService) {\n        var _this = this;\n        this.addressService = addressService;\n        this.taxCollectorService = taxCollectorService;\n        this.modalService = modalService;\n        /** Modal title */\n        this.modalTitle = 'Address';\n        this.save = function (newAddr) {\n            if (!newAddr) {\n                return of(null); // nothing to save\n            }\n            return _this.addressService.entityMap$.pipe(first(), concatMap(function (addrMap) {\n                var existing = addrMap[newAddr.id];\n                if (existing && !areDifferent(newAddr, existing)) {\n                    return of(null); // no change\n                }\n                var saveObservable = existing\n                    ? _this.addressService.update(newAddr)\n                    : _this.addressService.add(newAddr);\n                return saveObservable.pipe(\n                // After saving address, re-compute taxes and save them\n                // then pass the saved address along\n                concatMap(function (savedAddr) {\n                    return _this.taxCollectorService.computeTaxes().pipe(map(function (_) { return savedAddr; }));\n                }));\n            }));\n        };\n    }\n    Object.defineProperty(AddressModalComponent.prototype, \"isDeleteConfirmed\", {\n        get: function () {\n            return /delete/i.test(this.deleteConfirmation);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Open the location editor modal for an existing address and save the address if user changes it.\n     * Does nothing if read-only.\n     * @param existingAddress Address to edit\n     * @param [title] Title to display in modal editor\n     * @returns Cold, terminating observable of the saved, new-or-updated Address or null if no change.\n     * Must subscribe but no need to unsubscribe.\n     */\n    AddressModalComponent.prototype.addOrEditAddress = function (existingAddress, title) {\n        var _this = this;\n        this.address = Object.assign({}, existingAddress); // remove prototype while cloning.\n        var modalTitle = title || this.address.id == null ? 'Add Address' : 'Edit Address';\n        return this.addressService.readOnly$.pipe(first(), concatMap(function (isReadOnly) {\n            return isReadOnly\n                ? of(null)\n                : _this.openAddressModal(modalTitle).pipe(concatMap(function (newAddr) { return _this.save(newAddr); }));\n        }));\n    };\n    /**\n     * Open a delete confirmation dialog and\n     * save a \"removed\" address if user confirms \"delete\".\n     * Does nothing if read-only.\n     * @param existingAddress Address to delete/remove\n     * @returns Cold, terminating observable of the saved Address with isRemoved:true or null if no change.\n     * Must subscribe but no need to unsubscribe.\n     */\n    AddressModalComponent.prototype.removeAddress = function (existingAddress) {\n        var _this = this;\n        this.deleteConfirmation = '';\n        this.address = __assign({}, existingAddress);\n        return this.addressService.readOnly$.pipe(first(), concatMap(function (isReadOnly) {\n            return isReadOnly\n                ? of(null)\n                : from(_this.modalService.open(_this.removeAddressContent).result).pipe(map(function (result) { return /delete/i.test(result) ? __assign({}, existingAddress, { isRemoved: true }) : null; }), catchError(function (error) { return of(null); }), // dismissed\n                concatMap(function (newAddr) { return _this.save(newAddr); }));\n        }));\n    };\n    /** Internal to component */\n    AddressModalComponent.prototype.canSave = function () {\n        var canSave = this.hasSomeValue(this.address.city) &&\n            this.hasSomeValue(this.address.street1) &&\n            this.hasSomeValue(this.address.zip) &&\n            this.hasSomeValue(this.address.state);\n        return canSave;\n    };\n    /**\n     * Open the address modal to add or edit an address\n     * @param [title] Title to display in modal editor\n     * @returns Address if added/edited or null canceled dismissed.\n     */\n    AddressModalComponent.prototype.openAddressModal = function (title) {\n        var _this = this;\n        this.modalTitle = title || 'Address';\n        return from(this.modalService.open(this.editAddressContent, { backdrop: 'static' }).result).pipe(map(function (result) { return result === 'save' ? _this.address : null; }), catchError(function (error) { return of(null); }) // dismissed\n        );\n    };\n    AddressModalComponent.prototype.hasSomeValue = function (val) {\n        return val != null && val.length > 0;\n    };\n    return AddressModalComponent;\n}());\nexport { AddressModalComponent };\n","import { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { from, Observable, of, ReplaySubject } from 'rxjs';\r\nimport { catchError, concatMap, first, map, mergeMap } from 'rxjs/operators';\r\n\r\nimport { Address } from '@model';\r\nimport { AddressService } from '@entity';\r\nimport { areDifferent } from '@utils';\r\nimport { TaxCollectorService } from '@app/core/services/tax-services/tax-collector.service';\r\n\r\n@Component({\r\n  selector: 'sp-address-modal',\r\n  templateUrl: './address-modal.component.html'\r\n})\r\n/**\r\n * Modal Address Editor\r\n */\r\nexport class AddressModalComponent {\r\n\r\n  @ViewChild('editAddressContent') editAddressContent: ElementRef;\r\n  @ViewChild('removeAddressContent') removeAddressContent: ElementRef;\r\n\r\n  /** Modal title */\r\n  modalTitle = 'Address';\r\n\r\n  /** The Address to edit with modal address editor. Internal to component  */\r\n  address: Address;\r\n\r\n  /** User's delete confirmation. Internal to component */\r\n  deleteConfirmation: '';\r\n  get isDeleteConfirmed() {\r\n    return /delete/i.test(this.deleteConfirmation);\r\n  }\r\n\r\n  constructor(private addressService: AddressService, private taxCollectorService: TaxCollectorService, private modalService: NgbModal) { }\r\n\r\n  /**\r\n   * Open the location editor modal for an existing address and save the address if user changes it.\r\n   * Does nothing if read-only.\r\n   * @param existingAddress Address to edit\r\n   * @param [title] Title to display in modal editor\r\n   * @returns Cold, terminating observable of the saved, new-or-updated Address or null if no change.\r\n   * Must subscribe but no need to unsubscribe.\r\n   */\r\n  addOrEditAddress(existingAddress: Address, title?: string): Observable<Address> {\r\n    this.address = Object.assign({}, existingAddress); // remove prototype while cloning.\r\n    const modalTitle = title || this.address.id == null ? 'Add Address' : 'Edit Address';\r\n\r\n    return this.addressService.readOnly$.pipe(\r\n      first(),\r\n      concatMap(isReadOnly => {\r\n        return isReadOnly\r\n          ? of(null)\r\n          : this.openAddressModal(modalTitle).pipe(\r\n            concatMap(newAddr => this.save(newAddr))\r\n          );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Open a delete confirmation dialog and\r\n   * save a \"removed\" address if user confirms \"delete\".\r\n   * Does nothing if read-only.\r\n   * @param existingAddress Address to delete/remove\r\n   * @returns Cold, terminating observable of the saved Address with isRemoved:true or null if no change.\r\n   * Must subscribe but no need to unsubscribe.\r\n   */\r\n  removeAddress(existingAddress: Address): Observable<Address> {\r\n    this.deleteConfirmation = '';\r\n    this.address = { ...existingAddress };\r\n\r\n    return this.addressService.readOnly$.pipe(\r\n      first(),\r\n      concatMap(isReadOnly => {\r\n        return isReadOnly\r\n          ? of(null)\r\n          : from(this.modalService.open(this.removeAddressContent).result).pipe(\r\n          map(result => /delete/i.test(result) ? { ...existingAddress, isRemoved: true } : null),\r\n          catchError(error => of(null)), // dismissed\r\n          concatMap(newAddr => this.save(newAddr))\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /** Internal to component */\r\n  canSave(): boolean {\r\n    const canSave = this.hasSomeValue(this.address.city) &&\r\n      this.hasSomeValue(this.address.street1) &&\r\n      this.hasSomeValue(this.address.zip) &&\r\n      this.hasSomeValue(this.address.state);\r\n    return canSave;\r\n  }\r\n\r\n  /**\r\n   * Open the address modal to add or edit an address\r\n   * @param [title] Title to display in modal editor\r\n   * @returns Address if added/edited or null canceled dismissed.\r\n   */\r\n  private openAddressModal(title?: string): Observable<Address> {\r\n    this.modalTitle = title || 'Address';\r\n    return from(this.modalService.open(this.editAddressContent, { backdrop: 'static' }).result).pipe(\r\n      map(result => result === 'save' ? this.address : null),\r\n      catchError(error => of(null)) // dismissed\r\n    );\r\n  }\r\n\r\n  private save = (newAddr: Address): Observable<Address> => {\r\n    if (!newAddr) {\r\n      return of(null); // nothing to save\r\n    }\r\n\r\n    return this.addressService.entityMap$.pipe(\r\n      first(),\r\n      concatMap(addrMap => {\r\n        const existing = addrMap[newAddr.id];\r\n        if (existing && !areDifferent(newAddr, existing)) {\r\n          return of(null); // no change\r\n        }\r\n\r\n        const saveObservable = existing\r\n          ? this.addressService.update(newAddr)\r\n          : this.addressService.add(newAddr);\r\n\r\n        return saveObservable.pipe(\r\n          // After saving address, re-compute taxes and save them\r\n          // then pass the saved address along\r\n          concatMap(savedAddr =>\r\n            this.taxCollectorService.computeTaxes().pipe(map(_ => savedAddr))\r\n          )\r\n        );\r\n      }),\r\n    );\r\n  }\r\n\r\n  private hasSomeValue(val: string | null) {\r\n    return val != null && val.length > 0;\r\n  }\r\n}\r\n","/** Get Employee status from the Employee */\r\nexport function employeeStatus(ee: {isTerminated: boolean, isNewHire: boolean}) {\r\n  return ee.isTerminated ? 'terminated' : ee.isNewHire ? 'newHire' : 'active';\r\n}\r\n\r\n/** Get the {firstName, lastName}, trimmed of extra spaces */\r\nexport function getTrimmedNameParts(ee: { firstName: string, lastName: string }) {\r\n  return ee ? {\r\n      firstName: (ee.firstName || '').trim(),\r\n      lastName: (ee.lastName || '').trim()\r\n    } : {\r\n      firstName: '',\r\n      lastName: ''\r\n    };\r\n}\r\n\r\n/** Return full name as (first + ' ' + last) */\r\nexport function getFullName(person: { firstName: string, lastName: string }) {\r\n  const { firstName, lastName } = getTrimmedNameParts(person);\r\n  return (firstName + ' ' + lastName).trim();\r\n}\r\n\r\n/** Return true if this employee view model has both first and last name */\r\nexport function hasName(ee: { firstName: string, lastName: string }): boolean {\r\n  const { firstName, lastName } = getTrimmedNameParts(ee);\r\n  return '' !== firstName && '' !== lastName;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { EntityDispatcher } from 'ngrx-data';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, shareReplay, concatMap, catchError, withLatestFrom } from 'rxjs/operators';\r\n\r\nimport { Earning } from '@app/model';\r\nimport { EntityHelperService } from './entity-helper.service';\r\nimport { environment } from '@environment';\r\nimport { LoggerService } from '@app/core';\r\n\r\nconst earningsUrl = environment.apiRoot + '/earnings';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class EarningService {\r\n\r\n  /**\r\n   * Non-terminating observable of ECommerce Earning master metadata\r\n   * Return cached earnings if already loaded, else loads from server.\r\n   * If server load fails, returns previous earnings (if any)\r\n   * @returns Cold, non-terminating observable of earnings. Must subscribe and unsubscribe.\r\n   */\r\n  earnings$: Observable<Earning[]>;\r\n\r\n  /** Non-terminating, boolean observable indicating if earnings have been loaded successfully */\r\n  loaded$: Observable<boolean>;\r\n\r\n  private dispatcher: EntityDispatcher<Earning>;\r\n\r\n  constructor(\r\n    entityHelper: EntityHelperService,\r\n    private http: HttpClient,\r\n    private logger: LoggerService\r\n  ) {\r\n    const elements = entityHelper.collectionServiceElementsFactory.create<Earning>('Earning');\r\n\r\n    this.loaded$ = elements.selectors$.loaded$;\r\n\r\n    this.earnings$ = elements.selectors$.entities$.pipe(\r\n      withLatestFrom(this.loaded$),\r\n      concatMap(([earnings, loaded]) => {\r\n        if (loaded) {\r\n          return of(earnings);\r\n        } else {\r\n          return this.http.get<Earning[]>(earningsUrl).pipe(\r\n            map(newEarnings => {\r\n              this.dispatcher.addAllToCache(newEarnings);\r\n              return newEarnings;\r\n            }),\r\n            catchError(error => {\r\n               // Swallow error and return previous earnings (if any)\r\n               this.logger.error('Earnings service failed to return earnings', error);\r\n               this.dispatcher.setLoaded(true); // pretend it loaded successfully\r\n               return of(earnings);\r\n            })\r\n          );\r\n        }\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this.dispatcher = elements.dispatcher;\r\n\r\n  }\r\n\r\n  /**\r\n   * Clear the Earnings master metadata in cache.\r\n   */\r\n  clearCache() {\r\n    this.dispatcher.clearCache(); // also clears loaded$ flag\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { map, shareReplay, concatMap, catchError, withLatestFrom } from 'rxjs/operators';\nimport { EntityHelperService } from './entity-helper.service';\nimport { environment } from '@environment';\nimport { LoggerService } from '@app/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./entity-helper.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../../../core/services/logger.service\";\nvar earningsUrl = environment.apiRoot + '/earnings';\nvar EarningService = /** @class */ (function () {\n    function EarningService(entityHelper, http, logger) {\n        var _this = this;\n        this.http = http;\n        this.logger = logger;\n        var elements = entityHelper.collectionServiceElementsFactory.create('Earning');\n        this.loaded$ = elements.selectors$.loaded$;\n        this.earnings$ = elements.selectors$.entities$.pipe(withLatestFrom(this.loaded$), concatMap(function (_a) {\n            var earnings = _a[0], loaded = _a[1];\n            if (loaded) {\n                return of(earnings);\n            }\n            else {\n                return _this.http.get(earningsUrl).pipe(map(function (newEarnings) {\n                    _this.dispatcher.addAllToCache(newEarnings);\n                    return newEarnings;\n                }), catchError(function (error) {\n                    // Swallow error and return previous earnings (if any)\n                    _this.logger.error('Earnings service failed to return earnings', error);\n                    _this.dispatcher.setLoaded(true); // pretend it loaded successfully\n                    return of(earnings);\n                }));\n            }\n        }), shareReplay(1));\n        this.dispatcher = elements.dispatcher;\n    }\n    /**\n     * Clear the Earnings master metadata in cache.\n     */\n    EarningService.prototype.clearCache = function () {\n        this.dispatcher.clearCache(); // also clears loaded$ flag\n    };\n    EarningService.ngInjectableDef = i0.defineInjectable({ factory: function EarningService_Factory() { return new EarningService(i0.inject(i1.EntityHelperService), i0.inject(i2.HttpClient), i0.inject(i3.LoggerService)); }, token: EarningService, providedIn: \"root\" });\n    return EarningService;\n}());\nexport { EarningService };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { HttpClient } from '@angular/common/http';\nimport { EntityCollectionServiceBase, ChangeSet, EntityActionOptions } from 'ngrx-data';\nimport { throwError } from 'rxjs';\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\nimport { FeinStatus } from '@model';\nimport { environment } from '@environment';\nimport { SessionService } from '@session';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./company-entity-helper.service\";\nimport * as i3 from \"../../session/session.service\";\n/**\n * Service to manage the Company entity collection\n */\nvar CompanyService = /** @class */ (function (_super) {\n    __extends(CompanyService, _super);\n    function CompanyService(http, helper, sessionService) {\n        var _this = _super.call(this, 'Company', helper.collectionServiceElementsFactory) || this;\n        _this.http = http;\n        _this.helper = helper;\n        _this.sessionService = sessionService;\n        /** emits true when the current company is \"read-only\" and saves are disallowed. */\n        _this.readOnly$ = _this.helper.readOnly$;\n        return _this;\n    }\n    Object.defineProperty(CompanyService.prototype, \"currentCompany$\", {\n        get: function () {\n            return this.sessionService.currentCompany$;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompanyService.prototype.add = function (newCompany) {\n        return throwError('Do not call add. Create a company through sign up');\n    };\n    /**\n     * Detect if the legal name changed after the FEIN and name were verified.\n     * If it was, un-verify the FEIN.\n     */\n    CompanyService.prototype.detectLegalNameChangeAfterVerify = function (company) {\n        // If the fedTaxVm thinks the FEIN is verified but ...\n        if (company && company.feinStatus === FeinStatus.Verified &&\n            // there is no verified legal name or the verified legal name is not the Company legal name\n            (!company.legalNameVerified ||\n                company.legalNameVerified !== company.legalName)) {\n            // then the FEIN is no longer verified\n            this.unverifyFein(company);\n        }\n    };\n    /**\n     * Dispatch action to save multiple entity changes to remote storage.\n     * @param changes Either the entities to save, as an array of {ChangeSetItem}, or\n     * a ChangeSet that holds such changes.\n     * @param url The server url which receives the save request\n     * @param [options] options such as tag, correlationId, isOptimistic, and mergeStrategy.\n     * These values are defaulted if not supplied.\n     * @returns A terminating Observable<ChangeSet> with data returned from the server\n     * after server reports successful save OR the save error.\n     */\n    CompanyService.prototype.saveEntities = function (changes, url, options) {\n        return this.helper.entityCacheDispatcher.saveEntities(changes, url, options);\n    };\n    /** Set id and companyId on the entity if missing */\n    CompanyService.prototype.setIds = function (entity) {\n        // if entity lacks an id, generate one.\n        if (!entity.id) {\n            entity.id = this.helper.generateId();\n        }\n        // if entity lacks companyId, use the most recent snapshot currentCompanyId value\n        if (!entity.companyId) {\n            entity.companyId = this.helper.currentCompanyId;\n        }\n    };\n    /**\n     * Set the FEIN information in the company to the unverified state\n     */\n    CompanyService.prototype.unverifyFein = function (company) {\n        company.feinStatus = FeinStatus.Unverified;\n        company.legalNameVerified = null;\n        company.legalNameVerificationSkipReason = null;\n    };\n    CompanyService.prototype.createCompanyEvent = function (eventType) {\n        var url = environment.apiRoot + \"/company/event\";\n        var body = { type: eventType };\n        return this.http.post(url, body);\n    };\n    CompanyService.ngInjectableDef = i0.defineInjectable({ factory: function CompanyService_Factory() { return new CompanyService(i0.inject(i1.HttpClient), i0.inject(i2.CompanyEntityHelperService), i0.inject(i3.SessionService)); }, token: CompanyService, providedIn: \"root\" });\n    return CompanyService;\n}(EntityCollectionServiceBase));\nexport { CompanyService };\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { EntityCollectionServiceBase, ChangeSet, EntityActionOptions, ChangeSetOperation } from 'ngrx-data';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\r\nimport { Company, FeinStatus, CompanyEntityBase } from '@model';\r\nimport { environment } from '@environment';\r\nimport { SessionService } from '@session';\r\n\r\ninterface CompanyFeinPartial {\r\n  feinStatus: FeinStatus;\r\n  legalName: string;\r\n  legalNameVerified: string;\r\n  legalNameVerificationSkipReason: string;\r\n}\r\n\r\n/**\r\n * Service to manage the Company entity collection\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class CompanyService extends EntityCollectionServiceBase<Company> {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private helper: CompanyEntityHelperService,\r\n    private sessionService: SessionService\r\n  ) {\r\n    super('Company', helper.collectionServiceElementsFactory);\r\n  }\r\n\r\n  get currentCompany$() {\r\n    return this.sessionService.currentCompany$;\r\n  }\r\n\r\n  add(newCompany: Company): Observable<Company> {\r\n    return throwError('Do not call add. Create a company through sign up');\r\n  }\r\n\r\n  /**\r\n   * Detect if the legal name changed after the FEIN and name were verified.\r\n   * If it was, un-verify the FEIN.\r\n   */\r\n  detectLegalNameChangeAfterVerify(company: CompanyFeinPartial) {\r\n    // If the fedTaxVm thinks the FEIN is verified but ...\r\n    if (company && company.feinStatus === FeinStatus.Verified &&\r\n      // there is no verified legal name or the verified legal name is not the Company legal name\r\n      (!company.legalNameVerified ||\r\n        company.legalNameVerified !== company.legalName)) {\r\n        // then the FEIN is no longer verified\r\n        this.unverifyFein(company);\r\n      }\r\n  }\r\n\r\n  /** emits true when the current company is \"read-only\" and saves are disallowed. */\r\n  readOnly$ = this.helper.readOnly$;\r\n\r\n  /**\r\n   * Dispatch action to save multiple entity changes to remote storage.\r\n   * @param changes Either the entities to save, as an array of {ChangeSetItem}, or\r\n   * a ChangeSet that holds such changes.\r\n   * @param url The server url which receives the save request\r\n   * @param [options] options such as tag, correlationId, isOptimistic, and mergeStrategy.\r\n   * These values are defaulted if not supplied.\r\n   * @returns A terminating Observable<ChangeSet> with data returned from the server\r\n   * after server reports successful save OR the save error.\r\n   */\r\n  saveEntities(changes: ChangeSet, url: string, options?: EntityActionOptions) {\r\n    return this.helper.entityCacheDispatcher.saveEntities(changes, url, options);\r\n  }\r\n\r\n  /** Set id and companyId on the entity if missing */\r\n  setIds(entity: CompanyEntityBase) {\r\n    // if entity lacks an id, generate one.\r\n    if (!entity.id) {\r\n      entity.id = this.helper.generateId();\r\n    }\r\n\r\n    // if entity lacks companyId, use the most recent snapshot currentCompanyId value\r\n    if (!entity.companyId) {\r\n      entity.companyId = this.helper.currentCompanyId;\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Set the FEIN information in the company to the unverified state\r\n   */\r\n  unverifyFein(company: CompanyFeinPartial) {\r\n    company.feinStatus = FeinStatus.Unverified;\r\n    company.legalNameVerified = null;\r\n    company.legalNameVerificationSkipReason = null;\r\n  }\r\n\r\n  createCompanyEvent(eventType: string) {\r\n    const url = environment.apiRoot + `/company/event`;\r\n    const body = { type: eventType };\r\n\r\n    return this.http.post(url, body);\r\n  }\r\n}\r\n","import { Component, Input, Renderer2, ViewChild, Output, EventEmitter, Optional, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { dateStructToDate, dateToDateStruct, dateToString, NgbDateStruct } from '@core/utils';\r\nimport { ModelComponent } from '../model.component';\r\n\r\n@Component({\r\n  selector: 'sp-datepicker',\r\n  templateUrl: './datepicker-popup.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: DatePickerPopupComponent,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class DatePickerPopupComponent implements ControlValueAccessor, OnInit {\r\n  static nameCounter = 0;\r\n\r\n  @Input() disabled = false;\r\n\r\n  @Input() set group(value: string) { this._group = value; }\r\n  private _group: string;\r\n\r\n  @Input() label: string;\r\n\r\n  @Input() set model(value: any) { this._model = value; }\r\n  private _model: any;\r\n\r\n  @Input() set modelType(value: string) { this._modelType = value; }\r\n  private _modelType: string;\r\n\r\n  @Input() name: string;\r\n  @Input() type = 'text';\r\n  @Input() placeholder = '';\r\n  @Input() propertyName: string;\r\n\r\n  @ViewChild('child') child: any;\r\n\r\n  @Output() focus = new EventEmitter();\r\n  @Output() blur = new EventEmitter();\r\n  @Output() onChange = new EventEmitter();\r\n  @Output() onTouched = new EventEmitter();\r\n\r\n  private accessorOnChange = (...args: any[]) => {};\r\n  private accessorOnTouched = (...args: any[]) => {};\r\n  private currentValue: Date | string;\r\n  dateStruct: NgbDateStruct;\r\n\r\n  constructor(@Optional() public modelContext?: ModelComponent) { }\r\n\r\n  ngOnInit() {\r\n    this.name = (this.name || '') + '$' + DatePickerPopupComponent.nameCounter++;\r\n  }\r\n\r\n  /** Get the latest data-bound group. If not bound, get group from modelContext. */\r\n  get group(): string {\r\n    return this._group || (this.modelContext && this.modelContext.group);\r\n  }\r\n\r\n  /** Get the latest data-bound model. If not bound, get model from modelContext. */\r\n  get model(): any {\r\n    return this._model || (this.modelContext && this.modelContext.model);\r\n  }\r\n\r\n  /** Get the latest data-bound model type. If not bound, get model type from modelContext. */\r\n  get modelType(): string {\r\n    return this._modelType || (this.modelContext && this.modelContext.modelType);\r\n  }\r\n\r\n  writeValue(dateValue: Date | string): void {\r\n    this.currentValue = dateValue;\r\n    delete this.dateStruct;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.accessorOnChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.accessorOnTouched = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  onValueChanged() {\r\n    const changedDate = dateStructToDate(this.getValue());\r\n    this.accessorOnChange(changedDate);\r\n    this.onChange.emit(changedDate);\r\n  }\r\n\r\n  onFocus(): void {\r\n    this.focus.emit();\r\n  }\r\n\r\n  onBlur = (newValue: string) => {\r\n    this.accessorOnTouched();\r\n    this.onTouched.emit();\r\n  }\r\n\r\n  getValue(): NgbDateStruct {\r\n    if (!this.dateStruct) {\r\n      if (this.model && this.modelType && this.propertyName) {\r\n        this.dateStruct = dateToDateStruct(this.model[this.propertyName]);\r\n      } else {\r\n        this.dateStruct = dateToDateStruct(this.currentValue);\r\n      }\r\n    }\r\n\r\n    return this.dateStruct;\r\n  }\r\n\r\n  setValue(value: NgbDateStruct): void {\r\n    this.dateStruct = value;\r\n    const dateValue = dateStructToDate(value);\r\n\r\n    if (this.model && this.modelType && this.propertyName) {\r\n      this.model[this.propertyName] = dateValue;\r\n    }\r\n\r\n    this.currentValue = dateValue;\r\n    if (this.modelContext) {\r\n      this.modelContext.notifyOfModelChange();\r\n    }\r\n  }\r\n}\r\n","import { EventEmitter, OnInit } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { dateStructToDate, dateToDateStruct, NgbDateStruct } from '@core/utils';\nimport { ModelComponent } from '../model.component';\nvar DatePickerPopupComponent = /** @class */ (function () {\n    function DatePickerPopupComponent(modelContext) {\n        var _this = this;\n        this.modelContext = modelContext;\n        this.disabled = false;\n        this.type = 'text';\n        this.placeholder = '';\n        this.focus = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.onChange = new EventEmitter();\n        this.onTouched = new EventEmitter();\n        this.accessorOnChange = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n        };\n        this.accessorOnTouched = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n        };\n        this.onBlur = function (newValue) {\n            _this.accessorOnTouched();\n            _this.onTouched.emit();\n        };\n    }\n    Object.defineProperty(DatePickerPopupComponent.prototype, \"group\", {\n        /** Get the latest data-bound group. If not bound, get group from modelContext. */\n        get: function () {\n            return this._group || (this.modelContext && this.modelContext.group);\n        },\n        set: function (value) { this._group = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatePickerPopupComponent.prototype, \"model\", {\n        /** Get the latest data-bound model. If not bound, get model from modelContext. */\n        get: function () {\n            return this._model || (this.modelContext && this.modelContext.model);\n        },\n        set: function (value) { this._model = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatePickerPopupComponent.prototype, \"modelType\", {\n        /** Get the latest data-bound model type. If not bound, get model type from modelContext. */\n        get: function () {\n            return this._modelType || (this.modelContext && this.modelContext.modelType);\n        },\n        set: function (value) { this._modelType = value; },\n        enumerable: true,\n        configurable: true\n    });\n    DatePickerPopupComponent.prototype.ngOnInit = function () {\n        this.name = (this.name || '') + '$' + DatePickerPopupComponent.nameCounter++;\n    };\n    DatePickerPopupComponent.prototype.writeValue = function (dateValue) {\n        this.currentValue = dateValue;\n        delete this.dateStruct;\n    };\n    DatePickerPopupComponent.prototype.registerOnChange = function (fn) {\n        this.accessorOnChange = fn;\n    };\n    DatePickerPopupComponent.prototype.registerOnTouched = function (fn) {\n        this.accessorOnTouched = fn;\n    };\n    DatePickerPopupComponent.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    DatePickerPopupComponent.prototype.onValueChanged = function () {\n        var changedDate = dateStructToDate(this.getValue());\n        this.accessorOnChange(changedDate);\n        this.onChange.emit(changedDate);\n    };\n    DatePickerPopupComponent.prototype.onFocus = function () {\n        this.focus.emit();\n    };\n    DatePickerPopupComponent.prototype.getValue = function () {\n        if (!this.dateStruct) {\n            if (this.model && this.modelType && this.propertyName) {\n                this.dateStruct = dateToDateStruct(this.model[this.propertyName]);\n            }\n            else {\n                this.dateStruct = dateToDateStruct(this.currentValue);\n            }\n        }\n        return this.dateStruct;\n    };\n    DatePickerPopupComponent.prototype.setValue = function (value) {\n        this.dateStruct = value;\n        var dateValue = dateStructToDate(value);\n        if (this.model && this.modelType && this.propertyName) {\n            this.model[this.propertyName] = dateValue;\n        }\n        this.currentValue = dateValue;\n        if (this.modelContext) {\n            this.modelContext.notifyOfModelChange();\n        }\n    };\n    DatePickerPopupComponent.nameCounter = 0;\n    return DatePickerPopupComponent;\n}());\nexport { DatePickerPopupComponent };\n","import {\r\n  AfterViewInit, Component, EventEmitter, ElementRef, Input,\r\n  OnInit, OnDestroy, Output, ViewChild, Optional, ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ExitType, ExitEvent } from '@app/shared/interfaces';\r\nimport { ModelComponent } from '@app/shared/model.component';\r\nimport { DateUtil } from './date-util';\r\nimport flatpickr from 'flatpickr';\r\nimport { Instance } from 'flatpickr/dist/types/instance';\r\n\r\n@Component({\r\n  selector: 'sp-date',\r\n  templateUrl: './input-date.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: InputDateComponent,\r\n      multi: true\r\n    }\r\n  ],\r\n})\r\nexport class InputDateComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnDestroy {\r\n  static nameCounter = 0;\r\n\r\n  @Input() append: string;\r\n  @Input() autofocus?: boolean;\r\n  @Input() classNames: string;\r\n  @Input() defaultDate: string | Date;\r\n  @Input() disabled = false;\r\n\r\n  @Input() set group(value: string) { this._group = value; }\r\n  private _group: string;\r\n\r\n  @Input() label: string;\r\n  @Input() maxDate: string | Date;\r\n  @Input() minDate: string | Date;\r\n\r\n  @Input() set model(value: any) { this._model = value; }\r\n  private _model: any;\r\n\r\n  @Input() set modelType(value: string) { this._modelType = value; }\r\n  private _modelType: string;\r\n\r\n  @Input() name: string;\r\n  @Input() picker = true;\r\n  @Input() placeholder = 'mm/dd/yyyy';\r\n  @Input() prepend: string;\r\n  @Input() propertyName: string;\r\n  @Input() tooltip = false;\r\n\r\n  @ViewChild('child') child: ElementRef;\r\n  @ViewChild('inputPicker') inputPicker: ElementRef;\r\n\r\n  @Output() blur = new EventEmitter();\r\n  @Output() focus = new EventEmitter();\r\n  @Output() onChange = new EventEmitter<string>();\r\n  @Output() onExit = new EventEmitter<ExitEvent>();\r\n  @Output() onTouched = new EventEmitter();\r\n\r\n  open = false;\r\n  private accessorOnChange = (...args: any[]) => { };\r\n  private accessorOnTouched = (...args: any[]) => { };\r\n  private currentValue: string;\r\n  private originalValue: string;\r\n  private inputEl: HTMLInputElement;\r\n  private isDestroyed = false;\r\n  private refPicker: Instance;\r\n\r\n  constructor(\r\n    private changeDetector: ChangeDetectorRef,\r\n    @Optional() public modelContext?: ModelComponent) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.name = (this.name || '') + '$' + InputDateComponent.nameCounter++;\r\n\r\n    if (this.picker) {\r\n      const datePickerOptions = {\r\n        dateFormat: 'm/d/Y',\r\n        defaultDate: toDateType(this.defaultDate),\r\n        minDate: toDateType(this.minDate),\r\n        maxDate: toDateType(this.maxDate),\r\n        onChange: onChangePicker\r\n      };\r\n      this.refPicker = flatpickr(this.inputPicker.nativeElement, datePickerOptions) as Instance;\r\n      (<any> this.refPicker)._angularComponent = this;\r\n    }\r\n  }\r\n\r\n  /** Get the latest data-bound group. If not bound, get group from modelContext. */\r\n  get group(): string {\r\n    return this._group || (this.modelContext && this.modelContext.group);\r\n  }\r\n\r\n  /** Get the latest data-bound model. If not bound, get model from modelContext. */\r\n  get model(): any {\r\n    return this._model || (this.modelContext && this.modelContext.model);\r\n  }\r\n\r\n  /** Get the latest data-bound model type. If not bound, get model type from modelContext. */\r\n  get modelType(): string {\r\n    return this._modelType || (this.modelContext && this.modelContext.modelType);\r\n  }\r\n\r\n  openPicker() {\r\n    if (this.refPicker) {\r\n      this.refPicker.open();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.inputEl = this.child.nativeElement;\r\n    if (this.autofocus) {\r\n      this.inputEl.focus();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.isDestroyed = true;\r\n    this.exit('destroyed');\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.currentValue = obj;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.accessorOnChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.accessorOnTouched = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  private allowedKeys = [ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\r\n    '-', '/', '.', ' ', 'ArrowLeft', 'ArrowRight', 'Tab',\r\n    'Enter', 'Return', 'Escape', 'Backspace', 'Delete' ];\r\n\r\n  filterKeys(event: any) {\r\n    if (!this.allowedKeys.find(it => it === event.key)) {\r\n      event.preventDefault(); // Cancel event. Not allowed key.\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit onExit after user exits control\r\n   * @param exitType {ExitType} How the user exited the control\r\n   */\r\n  exit(exitType: ExitType) {\r\n    // Auto-trim on exit; could add a NoTrim option if necessary.\r\n    const currentValuePreTrim = this.getValue();\r\n    const currentValue = typeof currentValuePreTrim === 'string'\r\n      ? (currentValuePreTrim || '').trim()\r\n      : currentValuePreTrim;\r\n    if (currentValuePreTrim !== currentValue) {\r\n      // update and announce the change;\r\n      this.onInput(currentValue);\r\n    }\r\n    this.onExit.emit({ exitType, isChanged: this.originalValue !== currentValue });\r\n    this.originalValue = currentValue;\r\n    this.detectChanges();\r\n  }\r\n\r\n  /** User pressed escape. Restores original value and exits */\r\n  escaped() {\r\n    // undo change\r\n    const currentValue = this.inputEl.value;\r\n    if (currentValue !== this.originalValue) {\r\n      this.onInput(this.originalValue);\r\n    }\r\n    this.exit('escapeKey');\r\n  }\r\n\r\n  onInput(value: string) {\r\n    let modelValue: any = null;\r\n\r\n    if (this.originalValue == null) {\r\n      this.originalValue = this.getValue();\r\n    }\r\n\r\n    modelValue = DateUtil.toISOChicago(value);\r\n    this.setValue(modelValue);\r\n\r\n    this.accessorOnChange(modelValue);\r\n    this.onChange.emit(modelValue);\r\n    if (this.modelContext) {\r\n      this.modelContext.notifyOfModelChange();\r\n    }\r\n    this.detectChanges();\r\n  }\r\n\r\n  onFocus(): void {\r\n    // Prevent Angular for raising errors due to modified binding values between detection cycles\r\n    // by performing manual change detection during edit operations\r\n    this.changeDetector.detach();\r\n    this.focus.emit();\r\n  }\r\n\r\n  onBlur(): void {\r\n    this.changeDetector.reattach();\r\n\r\n    const currentValue = this.inputEl.value;\r\n    if (DateUtil.isValidDate(currentValue)) {\r\n      this.onInput(currentValue);\r\n    } else {\r\n      this.cleanField();\r\n    }\r\n\r\n    this.accessorOnTouched();\r\n    this.onTouched.emit();\r\n    this.blur.emit();\r\n    this.exit('blur');\r\n    this.open = false;\r\n\r\n    // update value in picker\r\n    if (this.refPicker) {\r\n      this.refPicker.setDate(this.getValue());\r\n    }\r\n  }\r\n\r\n  private cleanField(): void {\r\n    this.inputEl.value = '';\r\n    this.onInput('');\r\n    this.setValue('');\r\n  }\r\n\r\n  /** Returns the render-representation to user (a projection of the model) */\r\n  getRenderValue(): string {\r\n    const model = this.getValue();\r\n    const rendered = DateUtil.dateToUsLocale(model);\r\n    return rendered;\r\n  }\r\n\r\n  /* Returns the model-represation value */\r\n  getValue(): string {\r\n    const val = this.getValueInternal();\r\n    const val2 = (val != null) ? val.toString() : null;\r\n    return val2;\r\n  }\r\n\r\n  private getValueInternal(): string {\r\n    if (this.model && this.modelType && this.propertyName) {\r\n      this.currentValue = this.model[this.propertyName];\r\n    }\r\n    return this.currentValue;\r\n  }\r\n\r\n  setValue(modelValue: string): void {\r\n    if (this.model && this.modelType && this.propertyName) {\r\n      this.model[this.propertyName] = modelValue;\r\n    }\r\n    this.currentValue = modelValue;\r\n  }\r\n\r\n  private detectChanges() {\r\n    if (!this.isDestroyed) {\r\n      this.changeDetector.detectChanges();\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction onChangePicker(selectedDates: Date[], dateStr: string, instance: Instance) {\r\n  const modelValue = DateUtil.toISOChicago(dateStr);\r\n  (<any> instance)._angularComponent.setValue(modelValue);\r\n}\r\n\r\nfunction toDateType(date: string | Date): Date {\r\n  let res: Date;\r\n  if (typeof date === 'string') {\r\n    res = new Date(Date.parse(date));\r\n  } else {\r\n    res = date;\r\n  }\r\n  return res;\r\n}\r\n","import { AfterViewInit, EventEmitter, ElementRef, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { ModelComponent } from '@app/shared/model.component';\nimport { DateUtil } from './date-util';\nimport flatpickr from 'flatpickr';\nvar InputDateComponent = /** @class */ (function () {\n    function InputDateComponent(changeDetector, modelContext) {\n        this.changeDetector = changeDetector;\n        this.modelContext = modelContext;\n        this.disabled = false;\n        this.picker = true;\n        this.placeholder = 'mm/dd/yyyy';\n        this.tooltip = false;\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.onChange = new EventEmitter();\n        this.onExit = new EventEmitter();\n        this.onTouched = new EventEmitter();\n        this.open = false;\n        this.accessorOnChange = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n        };\n        this.accessorOnTouched = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n        };\n        this.isDestroyed = false;\n        this.allowedKeys = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n            '-', '/', '.', ' ', 'ArrowLeft', 'ArrowRight', 'Tab',\n            'Enter', 'Return', 'Escape', 'Backspace', 'Delete'];\n    }\n    Object.defineProperty(InputDateComponent.prototype, \"group\", {\n        /** Get the latest data-bound group. If not bound, get group from modelContext. */\n        get: function () {\n            return this._group || (this.modelContext && this.modelContext.group);\n        },\n        set: function (value) { this._group = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputDateComponent.prototype, \"model\", {\n        /** Get the latest data-bound model. If not bound, get model from modelContext. */\n        get: function () {\n            return this._model || (this.modelContext && this.modelContext.model);\n        },\n        set: function (value) { this._model = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InputDateComponent.prototype, \"modelType\", {\n        /** Get the latest data-bound model type. If not bound, get model type from modelContext. */\n        get: function () {\n            return this._modelType || (this.modelContext && this.modelContext.modelType);\n        },\n        set: function (value) { this._modelType = value; },\n        enumerable: true,\n        configurable: true\n    });\n    InputDateComponent.prototype.ngOnInit = function () {\n        this.name = (this.name || '') + '$' + InputDateComponent.nameCounter++;\n        if (this.picker) {\n            var datePickerOptions = {\n                dateFormat: 'm/d/Y',\n                defaultDate: toDateType(this.defaultDate),\n                minDate: toDateType(this.minDate),\n                maxDate: toDateType(this.maxDate),\n                onChange: onChangePicker\n            };\n            this.refPicker = flatpickr(this.inputPicker.nativeElement, datePickerOptions);\n            this.refPicker._angularComponent = this;\n        }\n    };\n    InputDateComponent.prototype.openPicker = function () {\n        if (this.refPicker) {\n            this.refPicker.open();\n        }\n    };\n    InputDateComponent.prototype.ngAfterViewInit = function () {\n        this.inputEl = this.child.nativeElement;\n        if (this.autofocus) {\n            this.inputEl.focus();\n        }\n    };\n    InputDateComponent.prototype.ngOnDestroy = function () {\n        this.isDestroyed = true;\n        this.exit('destroyed');\n    };\n    InputDateComponent.prototype.writeValue = function (obj) {\n        this.currentValue = obj;\n    };\n    InputDateComponent.prototype.registerOnChange = function (fn) {\n        this.accessorOnChange = fn;\n    };\n    InputDateComponent.prototype.registerOnTouched = function (fn) {\n        this.accessorOnTouched = fn;\n    };\n    InputDateComponent.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    InputDateComponent.prototype.filterKeys = function (event) {\n        if (!this.allowedKeys.find(function (it) { return it === event.key; })) {\n            event.preventDefault(); // Cancel event. Not allowed key.\n        }\n    };\n    /**\n     * Emit onExit after user exits control\n     * @param exitType {ExitType} How the user exited the control\n     */\n    InputDateComponent.prototype.exit = function (exitType) {\n        // Auto-trim on exit; could add a NoTrim option if necessary.\n        var currentValuePreTrim = this.getValue();\n        var currentValue = typeof currentValuePreTrim === 'string'\n            ? (currentValuePreTrim || '').trim()\n            : currentValuePreTrim;\n        if (currentValuePreTrim !== currentValue) {\n            // update and announce the change;\n            this.onInput(currentValue);\n        }\n        this.onExit.emit({ exitType: exitType, isChanged: this.originalValue !== currentValue });\n        this.originalValue = currentValue;\n        this.detectChanges();\n    };\n    /** User pressed escape. Restores original value and exits */\n    InputDateComponent.prototype.escaped = function () {\n        // undo change\n        var currentValue = this.inputEl.value;\n        if (currentValue !== this.originalValue) {\n            this.onInput(this.originalValue);\n        }\n        this.exit('escapeKey');\n    };\n    InputDateComponent.prototype.onInput = function (value) {\n        var modelValue = null;\n        if (this.originalValue == null) {\n            this.originalValue = this.getValue();\n        }\n        modelValue = DateUtil.toISOChicago(value);\n        this.setValue(modelValue);\n        this.accessorOnChange(modelValue);\n        this.onChange.emit(modelValue);\n        if (this.modelContext) {\n            this.modelContext.notifyOfModelChange();\n        }\n        this.detectChanges();\n    };\n    InputDateComponent.prototype.onFocus = function () {\n        // Prevent Angular for raising errors due to modified binding values between detection cycles\n        // by performing manual change detection during edit operations\n        this.changeDetector.detach();\n        this.focus.emit();\n    };\n    InputDateComponent.prototype.onBlur = function () {\n        this.changeDetector.reattach();\n        var currentValue = this.inputEl.value;\n        if (DateUtil.isValidDate(currentValue)) {\n            this.onInput(currentValue);\n        }\n        else {\n            this.cleanField();\n        }\n        this.accessorOnTouched();\n        this.onTouched.emit();\n        this.blur.emit();\n        this.exit('blur');\n        this.open = false;\n        // update value in picker\n        if (this.refPicker) {\n            this.refPicker.setDate(this.getValue());\n        }\n    };\n    InputDateComponent.prototype.cleanField = function () {\n        this.inputEl.value = '';\n        this.onInput('');\n        this.setValue('');\n    };\n    /** Returns the render-representation to user (a projection of the model) */\n    InputDateComponent.prototype.getRenderValue = function () {\n        var model = this.getValue();\n        var rendered = DateUtil.dateToUsLocale(model);\n        return rendered;\n    };\n    /* Returns the model-represation value */\n    InputDateComponent.prototype.getValue = function () {\n        var val = this.getValueInternal();\n        var val2 = (val != null) ? val.toString() : null;\n        return val2;\n    };\n    InputDateComponent.prototype.getValueInternal = function () {\n        if (this.model && this.modelType && this.propertyName) {\n            this.currentValue = this.model[this.propertyName];\n        }\n        return this.currentValue;\n    };\n    InputDateComponent.prototype.setValue = function (modelValue) {\n        if (this.model && this.modelType && this.propertyName) {\n            this.model[this.propertyName] = modelValue;\n        }\n        this.currentValue = modelValue;\n    };\n    InputDateComponent.prototype.detectChanges = function () {\n        if (!this.isDestroyed) {\n            this.changeDetector.detectChanges();\n        }\n    };\n    InputDateComponent.nameCounter = 0;\n    return InputDateComponent;\n}());\nexport { InputDateComponent };\nfunction onChangePicker(selectedDates, dateStr, instance) {\n    var modelValue = DateUtil.toISOChicago(dateStr);\n    instance._angularComponent.setValue(modelValue);\n}\nfunction toDateType(date) {\n    var res;\n    if (typeof date === 'string') {\n        res = new Date(Date.parse(date));\n    }\n    else {\n        res = date;\n    }\n    return res;\n}\n","import { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PayrollFrequency } from '@app/model';\r\nimport { getNgbDate,  getDateFromNgb, getDaysInMonth } from '@app/core';\r\n\r\nexport class DateRangePayPeriodvm {\r\n  private _selectedFrequency: string;\r\n  private _fromDate: NgbDate;\r\n  private _toDate: NgbDate;\r\n  private _checkDate: NgbDate;\r\n  private _secondFromDate: NgbDate;\r\n  private _secondToDate: NgbDate;\r\n  private _secondCheckDate: NgbDate;\r\n  private _isFromDate: boolean;\r\n\r\n  constructor() {}\r\n\r\n  set selectedFrequency(frequency: string) {\r\n    this._selectedFrequency = frequency;\r\n    this._toDate = null;\r\n    this._fromDate = null;\r\n    this._checkDate = null;\r\n    this._secondFromDate = null;\r\n    this._secondToDate = null;\r\n    this._secondCheckDate = null;\r\n  }\r\n  get selectedFrequency() {\r\n    return this._selectedFrequency;\r\n  }\r\n  set toDate(value: NgbDate) {\r\n    if (this.isValidNgbDate(value)) {\r\n      this._toDate = value;\r\n    }\r\n  }\r\n  get toDate() {\r\n    return this._toDate;\r\n  }\r\n  set fromDate(value: NgbDate) {\r\n    if (this.isValidNgbDate(value)) {\r\n      this._fromDate = value;\r\n    }\r\n  }\r\n  get fromDate() {\r\n    return this._fromDate;\r\n  }\r\n  set checkDate(value: NgbDate) {\r\n    if (this.isValidNgbDate(value)) {\r\n      this._checkDate = value;\r\n    }\r\n  }\r\n  get checkDate() {\r\n    return this._checkDate;\r\n  }\r\n  get secondFromDate() {\r\n    return this._secondFromDate;\r\n  }\r\n  set secondFromDate(value: NgbDate) {\r\n    if (this.isValidNgbDate(value)) {\r\n      this._secondFromDate = value;\r\n    }\r\n  }\r\n  get secondToDate() {\r\n    return this._secondToDate;\r\n  }\r\n  set secondToDate(value: NgbDate) {\r\n    if (this.isValidNgbDate(value)) {\r\n      this._secondToDate = value;\r\n    }\r\n  }\r\n  get secondCheckDate() {\r\n    return this._secondCheckDate;\r\n  }\r\n  set secondCheckDate(value: NgbDate) {\r\n    if (this.isValidNgbDate(value)) {\r\n      this._secondCheckDate = value;\r\n    }\r\n  }\r\n  get frequencyPeriodOffset() {\r\n    let daysOffset = 0;\r\n    if (this.selectedFrequency === PayrollFrequency.BiWeekly) {\r\n      daysOffset = 13;\r\n    } else if (this.selectedFrequency === PayrollFrequency.Weekly) {\r\n      daysOffset = 6;\r\n    }\r\n    return daysOffset;\r\n  }\r\n\r\n  private isValidNgbDate(value: NgbDate) {\r\n    if (!value) {\r\n      return true;\r\n    }\r\n    const tDate = new Date(value.year, value.month - 1, value.day);\r\n    if (!isNaN(tDate.getTime())) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getQuarterlyStartDateFromEndDate(date: NgbDate) {\r\n    const tempDate = getDateFromNgb(date);\r\n    if (tempDate) {\r\n      const daysInMonth = getDaysInMonth(tempDate.getFullYear(), tempDate.getMonth() - 3);\r\n      if (tempDate.getDate() > daysInMonth) {\r\n        tempDate.setDate(daysInMonth);\r\n      }\r\n      tempDate.setMonth(tempDate.getMonth() - 3);\r\n      tempDate.setDate(tempDate.getDate() + 1);\r\n    }\r\n    return getNgbDate(tempDate);\r\n  }\r\n\r\n  getQuarterlyEndDateFromStartDate(date: NgbDate) {\r\n    const tempDate = getDateFromNgb(date);\r\n    if (tempDate) {\r\n      const daysInMonth = getDaysInMonth(tempDate.getFullYear(), tempDate.getMonth() + 3);\r\n      if (tempDate.getDate() > daysInMonth) {\r\n        tempDate.setDate(daysInMonth);\r\n      }\r\n      tempDate.setMonth(tempDate.getMonth() + 3);\r\n      tempDate.setDate(tempDate.getDate() - 1);\r\n    }\r\n    return getNgbDate(tempDate);\r\n  }\r\n\r\n  setFromDateWithSync(value: NgbDate) {\r\n    if (this.isValidNgbDate(value)) {\r\n      this._fromDate = value;\r\n    }\r\n    if ( this._selectedFrequency === PayrollFrequency.SemiMonthly) {\r\n      return;\r\n    }\r\n\r\n    let tempDate: Date;\r\n    if (this._selectedFrequency === PayrollFrequency.Monthly) {\r\n      let day: number;\r\n\r\n      // If the To date falls on a day that is not present on the next month\r\n      // Set to the end of the month day\r\n      if ((value.day - 1) > getDaysInMonth(value.year, value.month)) {\r\n        day = getDaysInMonth(value.year, value.month);\r\n      } else {  // Set to the day-1 on the next month\r\n        day = value.day - 1;\r\n      }\r\n      tempDate = new Date (value.year, value.month, day);\r\n    } else if (this._selectedFrequency === PayrollFrequency.Quarterly) {\r\n      tempDate =  getDateFromNgb(this.getQuarterlyEndDateFromStartDate(value));\r\n    } else {\r\n      tempDate = new Date(value.year, value.month - 1, value.day + this.frequencyPeriodOffset);\r\n    }\r\n\r\n    this._toDate = new NgbDate(tempDate.getFullYear(), tempDate.getMonth() + 1, tempDate.getDate());\r\n  }\r\n\r\n  setToDateWithSync(value: NgbDate) {\r\n    if (this.isValidNgbDate(value)) {\r\n      this._toDate = value;\r\n    }\r\n    if (this._selectedFrequency === PayrollFrequency.SemiMonthly) {\r\n      if (value === null) {\r\n        this.secondFromDate = null;\r\n      } else {\r\n        const tDate = new Date(value.year, value.month - 1, value.day + 1);\r\n        this.secondFromDate = new NgbDate(tDate.getFullYear(), tDate.getMonth() + 1, tDate.getDate());\r\n      }\r\n      return;\r\n    }\r\n\r\n    let tempDate: Date;\r\n    if (this._selectedFrequency === PayrollFrequency.Monthly) {\r\n      let day: number;\r\n      let month: number;\r\n\r\n      // If the From Date falls on a day that is not present in the previous month\r\n      // Set it to first day of the current month.\r\n      if ((value.day + 1) > getDaysInMonth(value.year, value.month - 2)) {\r\n        month = value.month - 1 ;\r\n        day = 1;\r\n      } else {  // Set to the day+1 on the previous month\r\n        day = value.day + 1;\r\n        month = value.month - 2;\r\n      }\r\n      tempDate = new Date(value.year, month, day);\r\n    } else if (this._selectedFrequency === PayrollFrequency.Quarterly) {\r\n      tempDate =  getDateFromNgb(this.getQuarterlyStartDateFromEndDate(value));\r\n    } else {\r\n      tempDate = new Date(value.year, value.month - 1, value.day - this.frequencyPeriodOffset);\r\n    }\r\n\r\n    this._fromDate = new NgbDate(tempDate.getFullYear(), tempDate.getMonth() + 1, tempDate.getDate());\r\n  }\r\n}\r\n","import { NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { PayrollFrequency } from '@app/model';\nimport { getNgbDate, getDateFromNgb, getDaysInMonth } from '@app/core';\nvar DateRangePayPeriodvm = /** @class */ (function () {\n    function DateRangePayPeriodvm() {\n    }\n    Object.defineProperty(DateRangePayPeriodvm.prototype, \"selectedFrequency\", {\n        get: function () {\n            return this._selectedFrequency;\n        },\n        set: function (frequency) {\n            this._selectedFrequency = frequency;\n            this._toDate = null;\n            this._fromDate = null;\n            this._checkDate = null;\n            this._secondFromDate = null;\n            this._secondToDate = null;\n            this._secondCheckDate = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodvm.prototype, \"toDate\", {\n        get: function () {\n            return this._toDate;\n        },\n        set: function (value) {\n            if (this.isValidNgbDate(value)) {\n                this._toDate = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodvm.prototype, \"fromDate\", {\n        get: function () {\n            return this._fromDate;\n        },\n        set: function (value) {\n            if (this.isValidNgbDate(value)) {\n                this._fromDate = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodvm.prototype, \"checkDate\", {\n        get: function () {\n            return this._checkDate;\n        },\n        set: function (value) {\n            if (this.isValidNgbDate(value)) {\n                this._checkDate = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodvm.prototype, \"secondFromDate\", {\n        get: function () {\n            return this._secondFromDate;\n        },\n        set: function (value) {\n            if (this.isValidNgbDate(value)) {\n                this._secondFromDate = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodvm.prototype, \"secondToDate\", {\n        get: function () {\n            return this._secondToDate;\n        },\n        set: function (value) {\n            if (this.isValidNgbDate(value)) {\n                this._secondToDate = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodvm.prototype, \"secondCheckDate\", {\n        get: function () {\n            return this._secondCheckDate;\n        },\n        set: function (value) {\n            if (this.isValidNgbDate(value)) {\n                this._secondCheckDate = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodvm.prototype, \"frequencyPeriodOffset\", {\n        get: function () {\n            var daysOffset = 0;\n            if (this.selectedFrequency === PayrollFrequency.BiWeekly) {\n                daysOffset = 13;\n            }\n            else if (this.selectedFrequency === PayrollFrequency.Weekly) {\n                daysOffset = 6;\n            }\n            return daysOffset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DateRangePayPeriodvm.prototype.isValidNgbDate = function (value) {\n        if (!value) {\n            return true;\n        }\n        var tDate = new Date(value.year, value.month - 1, value.day);\n        if (!isNaN(tDate.getTime())) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    DateRangePayPeriodvm.prototype.getQuarterlyStartDateFromEndDate = function (date) {\n        var tempDate = getDateFromNgb(date);\n        if (tempDate) {\n            var daysInMonth = getDaysInMonth(tempDate.getFullYear(), tempDate.getMonth() - 3);\n            if (tempDate.getDate() > daysInMonth) {\n                tempDate.setDate(daysInMonth);\n            }\n            tempDate.setMonth(tempDate.getMonth() - 3);\n            tempDate.setDate(tempDate.getDate() + 1);\n        }\n        return getNgbDate(tempDate);\n    };\n    DateRangePayPeriodvm.prototype.getQuarterlyEndDateFromStartDate = function (date) {\n        var tempDate = getDateFromNgb(date);\n        if (tempDate) {\n            var daysInMonth = getDaysInMonth(tempDate.getFullYear(), tempDate.getMonth() + 3);\n            if (tempDate.getDate() > daysInMonth) {\n                tempDate.setDate(daysInMonth);\n            }\n            tempDate.setMonth(tempDate.getMonth() + 3);\n            tempDate.setDate(tempDate.getDate() - 1);\n        }\n        return getNgbDate(tempDate);\n    };\n    DateRangePayPeriodvm.prototype.setFromDateWithSync = function (value) {\n        if (this.isValidNgbDate(value)) {\n            this._fromDate = value;\n        }\n        if (this._selectedFrequency === PayrollFrequency.SemiMonthly) {\n            return;\n        }\n        var tempDate;\n        if (this._selectedFrequency === PayrollFrequency.Monthly) {\n            var day = void 0;\n            // If the To date falls on a day that is not present on the next month\n            // Set to the end of the month day\n            if ((value.day - 1) > getDaysInMonth(value.year, value.month)) {\n                day = getDaysInMonth(value.year, value.month);\n            }\n            else {\n                day = value.day - 1;\n            }\n            tempDate = new Date(value.year, value.month, day);\n        }\n        else if (this._selectedFrequency === PayrollFrequency.Quarterly) {\n            tempDate = getDateFromNgb(this.getQuarterlyEndDateFromStartDate(value));\n        }\n        else {\n            tempDate = new Date(value.year, value.month - 1, value.day + this.frequencyPeriodOffset);\n        }\n        this._toDate = new NgbDate(tempDate.getFullYear(), tempDate.getMonth() + 1, tempDate.getDate());\n    };\n    DateRangePayPeriodvm.prototype.setToDateWithSync = function (value) {\n        if (this.isValidNgbDate(value)) {\n            this._toDate = value;\n        }\n        if (this._selectedFrequency === PayrollFrequency.SemiMonthly) {\n            if (value === null) {\n                this.secondFromDate = null;\n            }\n            else {\n                var tDate = new Date(value.year, value.month - 1, value.day + 1);\n                this.secondFromDate = new NgbDate(tDate.getFullYear(), tDate.getMonth() + 1, tDate.getDate());\n            }\n            return;\n        }\n        var tempDate;\n        if (this._selectedFrequency === PayrollFrequency.Monthly) {\n            var day = void 0;\n            var month = void 0;\n            // If the From Date falls on a day that is not present in the previous month\n            // Set it to first day of the current month.\n            if ((value.day + 1) > getDaysInMonth(value.year, value.month - 2)) {\n                month = value.month - 1;\n                day = 1;\n            }\n            else {\n                day = value.day + 1;\n                month = value.month - 2;\n            }\n            tempDate = new Date(value.year, month, day);\n        }\n        else if (this._selectedFrequency === PayrollFrequency.Quarterly) {\n            tempDate = getDateFromNgb(this.getQuarterlyStartDateFromEndDate(value));\n        }\n        else {\n            tempDate = new Date(value.year, value.month - 1, value.day - this.frequencyPeriodOffset);\n        }\n        this._fromDate = new NgbDate(tempDate.getFullYear(), tempDate.getMonth() + 1, tempDate.getDate());\n    };\n    return DateRangePayPeriodvm;\n}());\nexport { DateRangePayPeriodvm };\n","import { Component, Input, Output, EventEmitter, OnInit, AfterViewInit } from '@angular/core';\r\nimport { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ScheduleDates } from './schedule-dates';\r\nimport { PayrollFrequency } from '@app/model';\r\nimport { CalendarState } from '@model/codes-enums/enums';\r\nimport { getFirstAllowedCheckDate, getNgbDate, ngbDateToString, getFirstDayOfMonth, getDateFromNgb, getDaysInMonth } from '@app/core';\r\nimport { formatDate, determineEndOfMonthStatus, determineEndOfQuarterStatus, getNgbDateFromString } from '@app/core';\r\nimport { DateRangePayPeriodvm } from './date-range-pay-period-vm';\r\nimport { NgModel } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'sp-date-range-pay-period',\r\n  templateUrl: './date-range-pay-period.component.html'\r\n})\r\n\r\nexport class DateRangePayPeriodComponent implements OnInit, AfterViewInit {\r\n\r\n  formatDate  = formatDate;\r\n  CalendarState = CalendarState;\r\n  private hoveredDate: NgbDate;\r\n  private _selectedFrequency: string;\r\n  private _holidaysTime: number[];\r\n  /* Initial status set to from date */\r\n  private _status = CalendarState.PeriodStart;\r\n  private _showFirstPeriodQuestion = false;\r\n  private _showFirstCheckQuestion = false;\r\n  private _showSecondPeriodQuestion = false;\r\n  private _showSecondCheckQuestion = false;\r\n  navigationType = 'arrows';\r\n  markDisabled: any;\r\n  calendar: NgbCalendar;\r\n  minimumCheckDate: NgbDate;\r\n  currentDate = new Date();\r\n  minimumStartDate: NgbDate = getNgbDate(new Date(\r\n    this.currentDate.getFullYear() - 1,\r\n    this.currentDate.getMonth(),\r\n    this.currentDate.getDate()));\r\n  maximumEndDate: NgbDate = getNgbDate(new Date(\r\n    this.currentDate.getFullYear() + 1,\r\n    this.currentDate.getMonth(),\r\n    this.currentDate.getDate()));\r\n  dateRangevm = new DateRangePayPeriodvm();\r\n\r\n  // Rule for disabling the check dates on the calendar\r\n  disabledCheckDateRule = ((date: NgbDate) =>\r\n  (this.selectedFrequency !== PayrollFrequency.SemiMonthly\r\n    && this.selectedFrequency !== PayrollFrequency.Monthly\r\n    && this.selectedFrequency !== PayrollFrequency.Quarterly\r\n    && this.calendar.getWeekday(date) >= 6 )\r\n      || date.before(this.minimumCheckDate)\r\n      || date.after(this.maximumEndDate));\r\n\r\n  // Rule for disabling the period dates on the calendar\r\n  disablePeriodDateRule = ((date: NgbDate) =>\r\n   date.before(this.minimumStartDate)\r\n   || date.after(this.maximumEndDate));\r\n\r\n\r\n  constructor(calendar: NgbCalendar) {\r\n    this.calendar = calendar;\r\n  }\r\n\r\n  // #region Inputs & Outputs\r\n  @Input()\r\n  set selectedFrequency(frequency: string) {\r\n    this._selectedFrequency = frequency;\r\n    this.dateRangevm.selectedFrequency = frequency;\r\n    if (this.companyDates != null) {\r\n      this._showFirstPeriodQuestion = false;\r\n      this._showFirstCheckQuestion = false;\r\n      this._showSecondPeriodQuestion = false;\r\n      this._showSecondCheckQuestion = false;\r\n      this.companyDates.firstPeriodEndOfMonth = null;\r\n      this.companyDates.firstCheckEndOfMonth = null;\r\n      this.companyDates.secondPeriodEndOfMonth = null;\r\n      this.companyDates.secondCheckEndOfMonth = null;\r\n      this.status = CalendarState.PeriodStart;\r\n      this.updateScheduleDates();\r\n    }\r\n  }\r\n  get selectedFrequency() {\r\n    return this._selectedFrequency;\r\n  }\r\n\r\n  get holidayTimes() {\r\n    return this._holidaysTime;\r\n  }\r\n\r\n  @Input()\r\n  set holidays(dateArray: Date[]) {\r\n    if (dateArray) {\r\n      this._holidaysTime = dateArray.map(x => x.getTime());\r\n    }\r\n    this.minimumCheckDate = this.findFirstAllowedCheckDate();\r\n  }\r\n\r\n  @Input() companyDates: ScheduleDates;\r\n  @Output() scheduleDates = new EventEmitter<ScheduleDates>();\r\n  // #endregion Inputs & Outputs\r\n\r\n  // #region Getters and Setters for EOM display flags\r\n  get showFirstPeriodQuestion() {\r\n    return this._showFirstPeriodQuestion;\r\n  }\r\n  set showFirstPeriodQuestion(val: boolean) {\r\n    if (val !== this._showFirstPeriodQuestion && val) {\r\n      this.companyDates.firstPeriodEndOfMonth = true;\r\n    }\r\n    this._showFirstPeriodQuestion = val;\r\n  }\r\n\r\n  get showFirstCheckQuestion() {\r\n    return this._showFirstCheckQuestion;\r\n  }\r\n  set showFirstCheckQuestion(val: boolean) {\r\n    if (val !== this._showFirstCheckQuestion && val) {\r\n      this.companyDates.firstCheckEndOfMonth = true;\r\n    }\r\n    this._showFirstCheckQuestion = val;\r\n  }\r\n\r\n  get showSecondPeriodQuestion() {\r\n    return this._showSecondPeriodQuestion;\r\n  }\r\n  set showSecondPeriodQuestion(val: boolean) {\r\n    if (val !== this._showSecondPeriodQuestion && val) {\r\n      this.companyDates.secondPeriodEndOfMonth = true;\r\n    }\r\n    this._showSecondPeriodQuestion = val;\r\n  }\r\n\r\n  get showSecondCheckQuestion() {\r\n    return this._showSecondCheckQuestion;\r\n  }\r\n  set showSecondCheckQuestion(val: boolean) {\r\n    if (val !== this._showSecondCheckQuestion && val) {\r\n      this.companyDates.secondCheckEndOfMonth = true;\r\n    }\r\n    this._showSecondCheckQuestion = val;\r\n  }\r\n  // #endregion Getters and Setters for EOM display flags\r\n\r\n  /* Detect status changes -- if check date is being selected, disable weekends */\r\n  set status(value: CalendarState) {\r\n    this._status = value;\r\n    if (value === CalendarState.Check) {\r\n      this.checkValidationRules();\r\n    } else if (value === CalendarState.Disabled) {\r\n      this.disableAll();\r\n    } else {\r\n      this.periodValidationRules();\r\n    }\r\n  }\r\n  get status() {\r\n    return this._status;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dateRangevm.fromDate = getNgbDateFromString(this.companyDates.periodStartDate);\r\n    this.dateRangevm.toDate = getNgbDateFromString(this.companyDates.periodEndDate);\r\n    this.dateRangevm.checkDate = getNgbDateFromString(this.companyDates.checkDate);\r\n    this.dateRangevm.secondFromDate = getNgbDateFromString(this.companyDates.secondPeriodStartDate);\r\n    this.dateRangevm.secondToDate = getNgbDateFromString(this.companyDates.secondPeriodEndDate);\r\n    this.dateRangevm.secondCheckDate = getNgbDateFromString(this.companyDates.secondCheckDate);\r\n\r\n    this._showFirstPeriodQuestion = determineEndOfMonthStatus(new Date(this.companyDates.periodEndDate)) === null;\r\n    this._showFirstCheckQuestion = determineEndOfMonthStatus(new Date(this.companyDates.checkDate)) === null;\r\n    this._showSecondPeriodQuestion = determineEndOfMonthStatus(new Date(this.companyDates.secondPeriodEndDate)) === null;\r\n    this._showSecondCheckQuestion = determineEndOfMonthStatus(new Date(this.companyDates.secondCheckDate)) === null;\r\n\r\n    this.minimumCheckDate = this.findFirstAllowedCheckDate();\r\n    if (this.dateRangevm.fromDate && this.dateRangevm.toDate && this.dateRangevm.checkDate) {\r\n      this.status = CalendarState.Disabled;\r\n    } else {\r\n      this.status = CalendarState.PeriodStart;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.scheduleDates.emit(this.companyDates);\r\n  }\r\n\r\n  get IsFrequencySemiMonthly() {\r\n    return this.selectedFrequency === PayrollFrequency.SemiMonthly;\r\n  }\r\n\r\n  get IsFrequencyMonthly() {\r\n    return this.selectedFrequency === PayrollFrequency.Monthly;\r\n  }\r\n\r\n  get IsFrequencyQuarterly() {\r\n    return this.selectedFrequency === PayrollFrequency.Quarterly;\r\n  }\r\n\r\n  get IsFrequencyAnnual() {\r\n    return this.selectedFrequency === PayrollFrequency.Annual;\r\n  }\r\n\r\n  private checkValidationRules() {\r\n    this.markDisabled = this.disabledCheckDateRule;\r\n  }\r\n\r\n  private periodValidationRules() {\r\n    this.markDisabled = this.disablePeriodDateRule;\r\n  }\r\n\r\n  private disableAll() {\r\n    this.markDisabled = (date: NgbDate) => true;\r\n  }\r\n\r\n  // Get the first allowed check date\r\n  private findFirstAllowedCheckDate() {\r\n    const standardizedDate = getFirstAllowedCheckDate(this._holidaysTime);\r\n    return getNgbDate(standardizedDate);\r\n  }\r\n\r\n  // Trigger validators of a specific control\r\n  markControlAsTouched(controlName: NgModel) {\r\n    if (controlName.control.value) {\r\n      controlName.control.markAsTouched();\r\n      controlName.control.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  // Date Range picker control event handler\r\n  onDateSelection(date: NgbDate) {\r\n      if (this.status === CalendarState.PeriodStart) {\r\n        this.dateRangevm.setFromDateWithSync(date);\r\n        if (this.IsFrequencyMonthly) {\r\n          this.updatePeriodEOM(this.dateRangevm.toDate);\r\n        }\r\n        this.status = CalendarState.Check;\r\n      } else if (this.status === CalendarState.PeriodEnd) {\r\n        this.dateRangevm.setToDateWithSync(date);\r\n        if (this.IsFrequencyMonthly) {\r\n          this.updatePeriodEOM(date);\r\n        }\r\n        this.status = CalendarState.Check;\r\n      } else {\r\n        this.dateRangevm.checkDate = date;\r\n        if (this.IsFrequencyMonthly) {\r\n          this.onCheckDateChange(date);\r\n        }\r\n      }\r\n      if (this.dateRangevm.fromDate && this.dateRangevm.toDate && this.dateRangevm.checkDate) {\r\n        this.status = CalendarState.Disabled;\r\n      }\r\n    this.updateScheduleDates();\r\n  }\r\n\r\n  getEndOfMonthStatus(date: NgbDate) {\r\n    return date === null ? false\r\n    : this.IsFrequencyQuarterly ? determineEndOfQuarterStatus(getDateFromNgb(date))\r\n    : determineEndOfMonthStatus(getDateFromNgb(date));\r\n  }\r\n\r\n  // #region Monthly handlers\r\n  updatePeriodEOM(date: NgbDate) {\r\n    const endOfMonthStatus = this.getEndOfMonthStatus(date);\r\n    if (endOfMonthStatus !== null) {\r\n      this.companyDates.firstPeriodEndOfMonth = endOfMonthStatus;\r\n      this.showFirstPeriodQuestion = false;\r\n    } else {\r\n      this.showFirstPeriodQuestion = true;\r\n    }\r\n\r\n    this.updatePeriodDatesBasedOnEOM(this.companyDates.firstPeriodEndOfMonth, date);\r\n  }\r\n\r\n  getMonthOffsetByFrequency() {\r\n    let monthOffset = 0;\r\n    if (this.selectedFrequency) {\r\n      switch (this.selectedFrequency) {\r\n        case PayrollFrequency.Monthly:\r\n          monthOffset = 1;\r\n          break;\r\n        case PayrollFrequency.Quarterly:\r\n          monthOffset = 3;\r\n          break;\r\n        case PayrollFrequency.Annual:\r\n          monthOffset = 12;\r\n          break;\r\n      }\r\n    }\r\n    return monthOffset;\r\n  }\r\n\r\n  // Update the from date and to date based on the end of month status question\r\n  private updatePeriodDatesBasedOnEOM(isEndOfMonth: boolean, date?: NgbDate) {\r\n    let endDate;\r\n    if (date) { endDate = date; } else { endDate = this.dateRangevm.toDate; }\r\n\r\n    if (isEndOfMonth) {\r\n      const firstDayOfMonth = getFirstDayOfMonth(endDate.year, endDate.month - this.getMonthOffsetByFrequency());\r\n      this.dateRangevm.setFromDateWithSync(getNgbDate(firstDayOfMonth));\r\n    } else {\r\n      this.dateRangevm.setToDateWithSync(endDate);\r\n    }\r\n  }\r\n  // #endregion Monthly handlers\r\n\r\n  // #region date Event Handlers\r\n  onPeriodStartChange(date: NgbDate) {\r\n    if (this.IsFrequencyQuarterly) {\r\n      this.dateRangevm.setFromDateWithSync(date);\r\n      this.updatePeriodEOM(this.dateRangevm.toDate);\r\n    }\r\n\r\n    this.updateScheduleDates();\r\n  }\r\n\r\n  onPeriodEndChange(date: NgbDate) {\r\n    this.dateRangevm.setToDateWithSync(date);\r\n    const endOfMonthStatus = this.getEndOfMonthStatus(date);\r\n\r\n    if (endOfMonthStatus !== null) {\r\n      this.companyDates.firstPeriodEndOfMonth = endOfMonthStatus;\r\n      this.showFirstPeriodQuestion = false;\r\n    } else {\r\n      this.showFirstPeriodQuestion = true;\r\n    }\r\n\r\n    if (this.IsFrequencyQuarterly) {\r\n      this.updatePeriodEOM(this.dateRangevm.toDate);\r\n    }\r\n\r\n    this.updateScheduleDates();\r\n  }\r\n\r\n  onCheckDateChange(date: NgbDate) {\r\n    const endOfMonthStatus = this.getEndOfMonthStatus(date);\r\n    if (endOfMonthStatus !== null) {\r\n      this.companyDates.firstCheckEndOfMonth = endOfMonthStatus;\r\n      this.showFirstCheckQuestion = false;\r\n    } else {\r\n      this.showFirstCheckQuestion = true;\r\n    }\r\n\r\n    this.updateScheduleDates();\r\n  }\r\n\r\n  onSecondPeriodEndChange(date: NgbDate) {\r\n    const endOfMonthStatus = this.getEndOfMonthStatus(date);\r\n    if (endOfMonthStatus !== null) {\r\n      this.companyDates.secondPeriodEndOfMonth = endOfMonthStatus;\r\n      this.showSecondPeriodQuestion = false;\r\n    } else {\r\n      this.showSecondPeriodQuestion = true;\r\n    }\r\n\r\n    // Update the first Start Date from the second period end date\r\n    this.dateRangevm.setFromDateWithSync(this.getFirstPeriodStartFromSecondEndDate(date));\r\n    this.onSecondPeriodEndOfMonthChange(this.companyDates.secondPeriodEndOfMonth);\r\n\r\n    this.updateScheduleDates();\r\n  }\r\n\r\n  getFirstPeriodStartFromSecondEndDate(date: NgbDate) {\r\n    const tempDate = getDateFromNgb(date);\r\n    if (tempDate) {\r\n      const daysInPrevMonth = getDaysInMonth(tempDate.getFullYear(), tempDate.getMonth() - 1);\r\n      if (tempDate.getDate() > daysInPrevMonth) {\r\n        tempDate.setDate(daysInPrevMonth);\r\n      }\r\n      tempDate.setMonth(tempDate.getMonth() - 1);\r\n      tempDate.setDate(tempDate.getDate() + 1);\r\n    }\r\n    return getNgbDate(tempDate);\r\n  }\r\n\r\n  onSecondCheckDateChange(date: NgbDate) {\r\n    const endOfMonthStatus = this.getEndOfMonthStatus(date);\r\n    if (endOfMonthStatus !== null) {\r\n      this.companyDates.secondCheckEndOfMonth = endOfMonthStatus;\r\n      this.showSecondCheckQuestion = false;\r\n    } else {\r\n      this.showSecondCheckQuestion = true;\r\n    }\r\n\r\n    this.updateScheduleDates();\r\n  }\r\n\r\n  onPeriodEndOfMonthChange(isEndOfMonth: boolean) {\r\n    if ((this.IsFrequencyMonthly || this.IsFrequencyQuarterly) && typeof isEndOfMonth === 'boolean') {\r\n      this.updatePeriodDatesBasedOnEOM(isEndOfMonth);\r\n    }\r\n    this.updateScheduleDates();\r\n  }\r\n\r\n  onSecondPeriodEndOfMonthChange(isEndOfMonth: boolean) {\r\n    if (this.IsFrequencySemiMonthly && typeof isEndOfMonth === 'boolean') {\r\n      const endDate = this.dateRangevm.secondToDate;\r\n\r\n      if (isEndOfMonth) {\r\n        const firstDayOfMonth = getFirstDayOfMonth(endDate.year, endDate.month - 1);\r\n        this.dateRangevm.setFromDateWithSync(getNgbDate(firstDayOfMonth));\r\n      } else {\r\n        this.dateRangevm.setFromDateWithSync(this.getFirstPeriodStartFromSecondEndDate(endDate));\r\n      }\r\n    }\r\n    this.updateScheduleDates();\r\n  }\r\n\r\n  onEndOfMonthChange(val: string) {\r\n    this.scheduleDates.emit(this.companyDates);\r\n  }\r\n  // #endregion date event handlers\r\n\r\n  // Update the company dates and emit\r\n  updateScheduleDates() {\r\n    this.companyDates.checkDate = ngbDateToString(this.dateRangevm.checkDate);\r\n    this.companyDates.periodStartDate = ngbDateToString(this.dateRangevm.fromDate);\r\n    this.companyDates.periodEndDate = ngbDateToString(this.dateRangevm.toDate);\r\n\r\n    if (this.IsFrequencySemiMonthly) {\r\n      this.companyDates.secondCheckDate = ngbDateToString(this.dateRangevm.secondCheckDate);\r\n      this.companyDates.secondPeriodStartDate = ngbDateToString(this.dateRangevm.secondFromDate);\r\n      this.companyDates.secondPeriodEndDate = ngbDateToString(this.dateRangevm.secondToDate);\r\n    }\r\n\r\n    this.scheduleDates.emit(this.companyDates);\r\n  }\r\n\r\n\r\n  // #region css styling helpers\r\n  isCheckDate(date: NgbDate) {\r\n    return date.equals(this.dateRangevm.checkDate);\r\n  }\r\n\r\n  isHovered(date: NgbDate) {\r\n    return this.dateRangevm.fromDate && !this.dateRangevm.toDate\r\n    && this.hoveredDate && date.after(this.dateRangevm.fromDate) && date.before(this.hoveredDate);\r\n  }\r\n\r\n  isInside(date: NgbDate) {\r\n    return date.after(this.dateRangevm.fromDate) && date.before(this.dateRangevm.toDate);\r\n  }\r\n\r\n  isRange(date: NgbDate) {\r\n    return date.equals(this.dateRangevm.fromDate) || date.equals(this.dateRangevm.toDate) || this.isInside(date) || this.isHovered(date);\r\n  }\r\n\r\n  get showCheckDateCssClass() {\r\n    return this.status === CalendarState.Check;\r\n  }\r\n\r\n  get showPeriodDateCssClass() {\r\n    return this.status === CalendarState.PeriodStart || this.status === CalendarState.PeriodEnd;\r\n  }\r\n  // #endregion css styling helpers\r\n}\r\n","import { EventEmitter, OnInit, AfterViewInit } from '@angular/core';\nimport { NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\nimport { ScheduleDates } from './schedule-dates';\nimport { PayrollFrequency } from '@app/model';\nimport { CalendarState } from '@model/codes-enums/enums';\nimport { getFirstAllowedCheckDate, getNgbDate, ngbDateToString, getFirstDayOfMonth, getDateFromNgb, getDaysInMonth } from '@app/core';\nimport { formatDate, determineEndOfMonthStatus, determineEndOfQuarterStatus, getNgbDateFromString } from '@app/core';\nimport { DateRangePayPeriodvm } from './date-range-pay-period-vm';\nvar DateRangePayPeriodComponent = /** @class */ (function () {\n    function DateRangePayPeriodComponent(calendar) {\n        var _this = this;\n        this.formatDate = formatDate;\n        this.CalendarState = CalendarState;\n        /* Initial status set to from date */\n        this._status = CalendarState.PeriodStart;\n        this._showFirstPeriodQuestion = false;\n        this._showFirstCheckQuestion = false;\n        this._showSecondPeriodQuestion = false;\n        this._showSecondCheckQuestion = false;\n        this.navigationType = 'arrows';\n        this.currentDate = new Date();\n        this.minimumStartDate = getNgbDate(new Date(this.currentDate.getFullYear() - 1, this.currentDate.getMonth(), this.currentDate.getDate()));\n        this.maximumEndDate = getNgbDate(new Date(this.currentDate.getFullYear() + 1, this.currentDate.getMonth(), this.currentDate.getDate()));\n        this.dateRangevm = new DateRangePayPeriodvm();\n        // Rule for disabling the check dates on the calendar\n        this.disabledCheckDateRule = (function (date) {\n            return (_this.selectedFrequency !== PayrollFrequency.SemiMonthly\n                && _this.selectedFrequency !== PayrollFrequency.Monthly\n                && _this.selectedFrequency !== PayrollFrequency.Quarterly\n                && _this.calendar.getWeekday(date) >= 6)\n                || date.before(_this.minimumCheckDate)\n                || date.after(_this.maximumEndDate);\n        });\n        // Rule for disabling the period dates on the calendar\n        this.disablePeriodDateRule = (function (date) {\n            return date.before(_this.minimumStartDate)\n                || date.after(_this.maximumEndDate);\n        });\n        this.scheduleDates = new EventEmitter();\n        this.calendar = calendar;\n    }\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"selectedFrequency\", {\n        get: function () {\n            return this._selectedFrequency;\n        },\n        // #region Inputs & Outputs\n        set: function (frequency) {\n            this._selectedFrequency = frequency;\n            this.dateRangevm.selectedFrequency = frequency;\n            if (this.companyDates != null) {\n                this._showFirstPeriodQuestion = false;\n                this._showFirstCheckQuestion = false;\n                this._showSecondPeriodQuestion = false;\n                this._showSecondCheckQuestion = false;\n                this.companyDates.firstPeriodEndOfMonth = null;\n                this.companyDates.firstCheckEndOfMonth = null;\n                this.companyDates.secondPeriodEndOfMonth = null;\n                this.companyDates.secondCheckEndOfMonth = null;\n                this.status = CalendarState.PeriodStart;\n                this.updateScheduleDates();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"holidayTimes\", {\n        get: function () {\n            return this._holidaysTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"holidays\", {\n        set: function (dateArray) {\n            if (dateArray) {\n                this._holidaysTime = dateArray.map(function (x) { return x.getTime(); });\n            }\n            this.minimumCheckDate = this.findFirstAllowedCheckDate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"showFirstPeriodQuestion\", {\n        // #endregion Inputs & Outputs\n        // #region Getters and Setters for EOM display flags\n        get: function () {\n            return this._showFirstPeriodQuestion;\n        },\n        set: function (val) {\n            if (val !== this._showFirstPeriodQuestion && val) {\n                this.companyDates.firstPeriodEndOfMonth = true;\n            }\n            this._showFirstPeriodQuestion = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"showFirstCheckQuestion\", {\n        get: function () {\n            return this._showFirstCheckQuestion;\n        },\n        set: function (val) {\n            if (val !== this._showFirstCheckQuestion && val) {\n                this.companyDates.firstCheckEndOfMonth = true;\n            }\n            this._showFirstCheckQuestion = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"showSecondPeriodQuestion\", {\n        get: function () {\n            return this._showSecondPeriodQuestion;\n        },\n        set: function (val) {\n            if (val !== this._showSecondPeriodQuestion && val) {\n                this.companyDates.secondPeriodEndOfMonth = true;\n            }\n            this._showSecondPeriodQuestion = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"showSecondCheckQuestion\", {\n        get: function () {\n            return this._showSecondCheckQuestion;\n        },\n        set: function (val) {\n            if (val !== this._showSecondCheckQuestion && val) {\n                this.companyDates.secondCheckEndOfMonth = true;\n            }\n            this._showSecondCheckQuestion = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"status\", {\n        get: function () {\n            return this._status;\n        },\n        // #endregion Getters and Setters for EOM display flags\n        /* Detect status changes -- if check date is being selected, disable weekends */\n        set: function (value) {\n            this._status = value;\n            if (value === CalendarState.Check) {\n                this.checkValidationRules();\n            }\n            else if (value === CalendarState.Disabled) {\n                this.disableAll();\n            }\n            else {\n                this.periodValidationRules();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DateRangePayPeriodComponent.prototype.ngOnInit = function () {\n        this.dateRangevm.fromDate = getNgbDateFromString(this.companyDates.periodStartDate);\n        this.dateRangevm.toDate = getNgbDateFromString(this.companyDates.periodEndDate);\n        this.dateRangevm.checkDate = getNgbDateFromString(this.companyDates.checkDate);\n        this.dateRangevm.secondFromDate = getNgbDateFromString(this.companyDates.secondPeriodStartDate);\n        this.dateRangevm.secondToDate = getNgbDateFromString(this.companyDates.secondPeriodEndDate);\n        this.dateRangevm.secondCheckDate = getNgbDateFromString(this.companyDates.secondCheckDate);\n        this._showFirstPeriodQuestion = determineEndOfMonthStatus(new Date(this.companyDates.periodEndDate)) === null;\n        this._showFirstCheckQuestion = determineEndOfMonthStatus(new Date(this.companyDates.checkDate)) === null;\n        this._showSecondPeriodQuestion = determineEndOfMonthStatus(new Date(this.companyDates.secondPeriodEndDate)) === null;\n        this._showSecondCheckQuestion = determineEndOfMonthStatus(new Date(this.companyDates.secondCheckDate)) === null;\n        this.minimumCheckDate = this.findFirstAllowedCheckDate();\n        if (this.dateRangevm.fromDate && this.dateRangevm.toDate && this.dateRangevm.checkDate) {\n            this.status = CalendarState.Disabled;\n        }\n        else {\n            this.status = CalendarState.PeriodStart;\n        }\n    };\n    DateRangePayPeriodComponent.prototype.ngAfterViewInit = function () {\n        this.scheduleDates.emit(this.companyDates);\n    };\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"IsFrequencySemiMonthly\", {\n        get: function () {\n            return this.selectedFrequency === PayrollFrequency.SemiMonthly;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"IsFrequencyMonthly\", {\n        get: function () {\n            return this.selectedFrequency === PayrollFrequency.Monthly;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"IsFrequencyQuarterly\", {\n        get: function () {\n            return this.selectedFrequency === PayrollFrequency.Quarterly;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"IsFrequencyAnnual\", {\n        get: function () {\n            return this.selectedFrequency === PayrollFrequency.Annual;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DateRangePayPeriodComponent.prototype.checkValidationRules = function () {\n        this.markDisabled = this.disabledCheckDateRule;\n    };\n    DateRangePayPeriodComponent.prototype.periodValidationRules = function () {\n        this.markDisabled = this.disablePeriodDateRule;\n    };\n    DateRangePayPeriodComponent.prototype.disableAll = function () {\n        this.markDisabled = function (date) { return true; };\n    };\n    // Get the first allowed check date\n    DateRangePayPeriodComponent.prototype.findFirstAllowedCheckDate = function () {\n        var standardizedDate = getFirstAllowedCheckDate(this._holidaysTime);\n        return getNgbDate(standardizedDate);\n    };\n    // Trigger validators of a specific control\n    DateRangePayPeriodComponent.prototype.markControlAsTouched = function (controlName) {\n        if (controlName.control.value) {\n            controlName.control.markAsTouched();\n            controlName.control.updateValueAndValidity();\n        }\n    };\n    // Date Range picker control event handler\n    DateRangePayPeriodComponent.prototype.onDateSelection = function (date) {\n        if (this.status === CalendarState.PeriodStart) {\n            this.dateRangevm.setFromDateWithSync(date);\n            if (this.IsFrequencyMonthly) {\n                this.updatePeriodEOM(this.dateRangevm.toDate);\n            }\n            this.status = CalendarState.Check;\n        }\n        else if (this.status === CalendarState.PeriodEnd) {\n            this.dateRangevm.setToDateWithSync(date);\n            if (this.IsFrequencyMonthly) {\n                this.updatePeriodEOM(date);\n            }\n            this.status = CalendarState.Check;\n        }\n        else {\n            this.dateRangevm.checkDate = date;\n            if (this.IsFrequencyMonthly) {\n                this.onCheckDateChange(date);\n            }\n        }\n        if (this.dateRangevm.fromDate && this.dateRangevm.toDate && this.dateRangevm.checkDate) {\n            this.status = CalendarState.Disabled;\n        }\n        this.updateScheduleDates();\n    };\n    DateRangePayPeriodComponent.prototype.getEndOfMonthStatus = function (date) {\n        return date === null ? false\n            : this.IsFrequencyQuarterly ? determineEndOfQuarterStatus(getDateFromNgb(date))\n                : determineEndOfMonthStatus(getDateFromNgb(date));\n    };\n    // #region Monthly handlers\n    DateRangePayPeriodComponent.prototype.updatePeriodEOM = function (date) {\n        var endOfMonthStatus = this.getEndOfMonthStatus(date);\n        if (endOfMonthStatus !== null) {\n            this.companyDates.firstPeriodEndOfMonth = endOfMonthStatus;\n            this.showFirstPeriodQuestion = false;\n        }\n        else {\n            this.showFirstPeriodQuestion = true;\n        }\n        this.updatePeriodDatesBasedOnEOM(this.companyDates.firstPeriodEndOfMonth, date);\n    };\n    DateRangePayPeriodComponent.prototype.getMonthOffsetByFrequency = function () {\n        var monthOffset = 0;\n        if (this.selectedFrequency) {\n            switch (this.selectedFrequency) {\n                case PayrollFrequency.Monthly:\n                    monthOffset = 1;\n                    break;\n                case PayrollFrequency.Quarterly:\n                    monthOffset = 3;\n                    break;\n                case PayrollFrequency.Annual:\n                    monthOffset = 12;\n                    break;\n            }\n        }\n        return monthOffset;\n    };\n    // Update the from date and to date based on the end of month status question\n    DateRangePayPeriodComponent.prototype.updatePeriodDatesBasedOnEOM = function (isEndOfMonth, date) {\n        var endDate;\n        if (date) {\n            endDate = date;\n        }\n        else {\n            endDate = this.dateRangevm.toDate;\n        }\n        if (isEndOfMonth) {\n            var firstDayOfMonth = getFirstDayOfMonth(endDate.year, endDate.month - this.getMonthOffsetByFrequency());\n            this.dateRangevm.setFromDateWithSync(getNgbDate(firstDayOfMonth));\n        }\n        else {\n            this.dateRangevm.setToDateWithSync(endDate);\n        }\n    };\n    // #endregion Monthly handlers\n    // #region date Event Handlers\n    DateRangePayPeriodComponent.prototype.onPeriodStartChange = function (date) {\n        if (this.IsFrequencyQuarterly) {\n            this.dateRangevm.setFromDateWithSync(date);\n            this.updatePeriodEOM(this.dateRangevm.toDate);\n        }\n        this.updateScheduleDates();\n    };\n    DateRangePayPeriodComponent.prototype.onPeriodEndChange = function (date) {\n        this.dateRangevm.setToDateWithSync(date);\n        var endOfMonthStatus = this.getEndOfMonthStatus(date);\n        if (endOfMonthStatus !== null) {\n            this.companyDates.firstPeriodEndOfMonth = endOfMonthStatus;\n            this.showFirstPeriodQuestion = false;\n        }\n        else {\n            this.showFirstPeriodQuestion = true;\n        }\n        if (this.IsFrequencyQuarterly) {\n            this.updatePeriodEOM(this.dateRangevm.toDate);\n        }\n        this.updateScheduleDates();\n    };\n    DateRangePayPeriodComponent.prototype.onCheckDateChange = function (date) {\n        var endOfMonthStatus = this.getEndOfMonthStatus(date);\n        if (endOfMonthStatus !== null) {\n            this.companyDates.firstCheckEndOfMonth = endOfMonthStatus;\n            this.showFirstCheckQuestion = false;\n        }\n        else {\n            this.showFirstCheckQuestion = true;\n        }\n        this.updateScheduleDates();\n    };\n    DateRangePayPeriodComponent.prototype.onSecondPeriodEndChange = function (date) {\n        var endOfMonthStatus = this.getEndOfMonthStatus(date);\n        if (endOfMonthStatus !== null) {\n            this.companyDates.secondPeriodEndOfMonth = endOfMonthStatus;\n            this.showSecondPeriodQuestion = false;\n        }\n        else {\n            this.showSecondPeriodQuestion = true;\n        }\n        // Update the first Start Date from the second period end date\n        this.dateRangevm.setFromDateWithSync(this.getFirstPeriodStartFromSecondEndDate(date));\n        this.onSecondPeriodEndOfMonthChange(this.companyDates.secondPeriodEndOfMonth);\n        this.updateScheduleDates();\n    };\n    DateRangePayPeriodComponent.prototype.getFirstPeriodStartFromSecondEndDate = function (date) {\n        var tempDate = getDateFromNgb(date);\n        if (tempDate) {\n            var daysInPrevMonth = getDaysInMonth(tempDate.getFullYear(), tempDate.getMonth() - 1);\n            if (tempDate.getDate() > daysInPrevMonth) {\n                tempDate.setDate(daysInPrevMonth);\n            }\n            tempDate.setMonth(tempDate.getMonth() - 1);\n            tempDate.setDate(tempDate.getDate() + 1);\n        }\n        return getNgbDate(tempDate);\n    };\n    DateRangePayPeriodComponent.prototype.onSecondCheckDateChange = function (date) {\n        var endOfMonthStatus = this.getEndOfMonthStatus(date);\n        if (endOfMonthStatus !== null) {\n            this.companyDates.secondCheckEndOfMonth = endOfMonthStatus;\n            this.showSecondCheckQuestion = false;\n        }\n        else {\n            this.showSecondCheckQuestion = true;\n        }\n        this.updateScheduleDates();\n    };\n    DateRangePayPeriodComponent.prototype.onPeriodEndOfMonthChange = function (isEndOfMonth) {\n        if ((this.IsFrequencyMonthly || this.IsFrequencyQuarterly) && typeof isEndOfMonth === 'boolean') {\n            this.updatePeriodDatesBasedOnEOM(isEndOfMonth);\n        }\n        this.updateScheduleDates();\n    };\n    DateRangePayPeriodComponent.prototype.onSecondPeriodEndOfMonthChange = function (isEndOfMonth) {\n        if (this.IsFrequencySemiMonthly && typeof isEndOfMonth === 'boolean') {\n            var endDate = this.dateRangevm.secondToDate;\n            if (isEndOfMonth) {\n                var firstDayOfMonth = getFirstDayOfMonth(endDate.year, endDate.month - 1);\n                this.dateRangevm.setFromDateWithSync(getNgbDate(firstDayOfMonth));\n            }\n            else {\n                this.dateRangevm.setFromDateWithSync(this.getFirstPeriodStartFromSecondEndDate(endDate));\n            }\n        }\n        this.updateScheduleDates();\n    };\n    DateRangePayPeriodComponent.prototype.onEndOfMonthChange = function (val) {\n        this.scheduleDates.emit(this.companyDates);\n    };\n    // #endregion date event handlers\n    // Update the company dates and emit\n    DateRangePayPeriodComponent.prototype.updateScheduleDates = function () {\n        this.companyDates.checkDate = ngbDateToString(this.dateRangevm.checkDate);\n        this.companyDates.periodStartDate = ngbDateToString(this.dateRangevm.fromDate);\n        this.companyDates.periodEndDate = ngbDateToString(this.dateRangevm.toDate);\n        if (this.IsFrequencySemiMonthly) {\n            this.companyDates.secondCheckDate = ngbDateToString(this.dateRangevm.secondCheckDate);\n            this.companyDates.secondPeriodStartDate = ngbDateToString(this.dateRangevm.secondFromDate);\n            this.companyDates.secondPeriodEndDate = ngbDateToString(this.dateRangevm.secondToDate);\n        }\n        this.scheduleDates.emit(this.companyDates);\n    };\n    // #region css styling helpers\n    DateRangePayPeriodComponent.prototype.isCheckDate = function (date) {\n        return date.equals(this.dateRangevm.checkDate);\n    };\n    DateRangePayPeriodComponent.prototype.isHovered = function (date) {\n        return this.dateRangevm.fromDate && !this.dateRangevm.toDate\n            && this.hoveredDate && date.after(this.dateRangevm.fromDate) && date.before(this.hoveredDate);\n    };\n    DateRangePayPeriodComponent.prototype.isInside = function (date) {\n        return date.after(this.dateRangevm.fromDate) && date.before(this.dateRangevm.toDate);\n    };\n    DateRangePayPeriodComponent.prototype.isRange = function (date) {\n        return date.equals(this.dateRangevm.fromDate) || date.equals(this.dateRangevm.toDate) || this.isInside(date) || this.isHovered(date);\n    };\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"showCheckDateCssClass\", {\n        get: function () {\n            return this.status === CalendarState.Check;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateRangePayPeriodComponent.prototype, \"showPeriodDateCssClass\", {\n        get: function () {\n            return this.status === CalendarState.PeriodStart || this.status === CalendarState.PeriodEnd;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DateRangePayPeriodComponent;\n}());\nexport { DateRangePayPeriodComponent };\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map} from 'rxjs/operators';\r\n\r\nimport { environment } from '@environment';\r\nimport { Envelope, EnvelopeSigner } from '@model';\r\nimport { BusyService } from '@app/core/services/busy.service';\r\n\r\nexport interface EsignEnvelopeResponse {\r\n  envelope: Envelope;\r\n  status: string;\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class EsignService {\r\n  constructor (private http: HttpClient, private busyService: BusyService) {}\r\n\r\n  /**\r\n   * Tell DocuSign to create an Envelope and optionally send an email to signer and spouse.\r\n   * @returns Cold, terminating observable with envelope and DocuSign's status (e.g., 'sent' if the email was sent).\r\n   * You must subscribe but do not have to unsubscribe.\r\n   */\r\n  postEnvelope(envelopeId: string, signers: EnvelopeSigner[]): Observable<EsignEnvelopeResponse> {\r\n    const eurl = environment.apiRoot + `/signing/esignsend/${envelopeId}`;\r\n    const params = { signers: signers };\r\n    return this.busyService.busy$('Building Documents ...',\r\n      this.http.post<EsignEnvelopeResponse>(eurl, params)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get a temporary Esign URL which enables short-term access to an ESign envelope\r\n   * @return Cold terminating observable emitting the URL\r\n   * You must subscribe but do not have to unsubscribe.\r\n   */\r\n  getEnvelopeUrl(envelopeId: string): Observable<string> {\r\n    const url = environment.apiRoot + `/signing/esigngeturl/${envelopeId}`;\r\n    const options = { params: {\r\n      apiRoot: environment.apiRoot,\r\n      appUrl: location.origin + '/assets/esign.html'\r\n    }};\r\n    return this.busyService.busy$('Opening DocuSign ...',\r\n      this.http.get<{ url: string }>(url, options).pipe(map(r => r.url))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Mark a company's envelopes as \"signed and complete\"\r\n   * @param companyId\r\n   * @returns Cold terminating boolean observable that emits true if operation was successful.\r\n   * You must subscribe but do not have to unsubscribe.\r\n   */\r\n  markEnvelopesSigned(companyId: string): Observable<boolean> {\r\n    const url = environment.apiRoot + `/envelope/complete`;\r\n    const body = { companyId: companyId };\r\n    return this.busyService.busy$('Updating document envelopes ...',\r\n      this.http.post<boolean>(url, body)\r\n    );\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '@environment';\nimport { BusyService } from '@app/core/services/busy.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./busy.service\";\nvar EsignService = /** @class */ (function () {\n    function EsignService(http, busyService) {\n        this.http = http;\n        this.busyService = busyService;\n    }\n    /**\n     * Tell DocuSign to create an Envelope and optionally send an email to signer and spouse.\n     * @returns Cold, terminating observable with envelope and DocuSign's status (e.g., 'sent' if the email was sent).\n     * You must subscribe but do not have to unsubscribe.\n     */\n    EsignService.prototype.postEnvelope = function (envelopeId, signers) {\n        var eurl = environment.apiRoot + (\"/signing/esignsend/\" + envelopeId);\n        var params = { signers: signers };\n        return this.busyService.busy$('Building Documents ...', this.http.post(eurl, params));\n    };\n    /**\n     * Get a temporary Esign URL which enables short-term access to an ESign envelope\n     * @return Cold terminating observable emitting the URL\n     * You must subscribe but do not have to unsubscribe.\n     */\n    EsignService.prototype.getEnvelopeUrl = function (envelopeId) {\n        var url = environment.apiRoot + (\"/signing/esigngeturl/\" + envelopeId);\n        var options = { params: {\n                apiRoot: environment.apiRoot,\n                appUrl: location.origin + '/assets/esign.html'\n            } };\n        return this.busyService.busy$('Opening DocuSign ...', this.http.get(url, options).pipe(map(function (r) { return r.url; })));\n    };\n    /**\n     * Mark a company's envelopes as \"signed and complete\"\n     * @param companyId\n     * @returns Cold terminating boolean observable that emits true if operation was successful.\n     * You must subscribe but do not have to unsubscribe.\n     */\n    EsignService.prototype.markEnvelopesSigned = function (companyId) {\n        var url = environment.apiRoot + \"/envelope/complete\";\n        var body = { companyId: companyId };\n        return this.busyService.busy$('Updating document envelopes ...', this.http.post(url, body));\n    };\n    EsignService.ngInjectableDef = i0.defineInjectable({ factory: function EsignService_Factory() { return new EsignService(i0.inject(i1.HttpClient), i0.inject(i2.BusyService)); }, token: EsignService, providedIn: \"root\" });\n    return EsignService;\n}());\nexport { EsignService };\n","/**\r\n * Enum for the Javascript Day of week\r\n */\r\nexport enum DayNumEnum {\r\n  Sunday = 0,\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6\r\n}\r\n\r\n/**\r\n * Enum for the Javascript Date object month numbers\r\n */\r\nexport enum MonthNumEnum {\r\n  January = 0,\r\n  February = 1,\r\n  March = 2,\r\n  April = 3,\r\n  May = 4,\r\n  June = 5,\r\n  July = 6,\r\n  August = 7,\r\n  September = 8,\r\n  October = 9,\r\n  November = 10,\r\n  December = 11\r\n}\r\n","import * as moment from 'moment-timezone';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DateUtil } from '@app/shared/input/date-util';\r\nimport { MonthNumEnum } from './datenum-enum';\r\n\r\n\r\n/**\r\n * Get the first allowed check date from today or the given date (if current date is given)\r\n * @param holidaysDateTime Set of holidays as an array of milliseconds\r\n * @param currentDate Optional parameter for passing in the current date\r\n */\r\nexport function getFirstAllowedCheckDate(holidaysDateTime: number[], currentDate?: Date): Date {\r\n  let tempDate: Date;\r\n  if (currentDate) {\r\n    tempDate = currentDate;\r\n  } else { tempDate = new Date(); }\r\n\r\n  const utcDate = new Date(tempDate.getTime() + (tempDate.getTimezoneOffset() * 60000));\r\n  const centralTimeDate = new Date(utcDate.getTime() - (currentCentralOffset() * 60000));\r\n  const standardizedDate = new Date(centralTimeDate.getFullYear(), centralTimeDate.getMonth(), centralTimeDate.getDate());\r\n\r\n  let businessDays: number;\r\n  if (standardizedDate.getDay() === 6 || standardizedDate.getDay() === 0) {\r\n    businessDays = 3; // Since its a weekend\r\n  } else {\r\n    businessDays = centralTimeDate.getHours() > 15 ? 3 : 2;\r\n  }\r\n\r\n  while (businessDays > 0) {\r\n    standardizedDate.setDate(standardizedDate.getDate() + 1);\r\n    if (standardizedDate.getDay() !== 0 && standardizedDate.getDay() !== 6) {\r\n      businessDays--;\r\n      if (holidaysDateTime !== undefined\r\n        && holidaysDateTime.includes(standardizedDate.getTime())) {\r\n        businessDays++;\r\n      }\r\n    }\r\n  }\r\n  return standardizedDate;\r\n}\r\n\r\n/*\r\n *  Get the Current Central time offset for Daylight savings based on isDST()\r\n *  Returning 5 hours or 6 hours based on that\r\n */\r\nexport function currentCentralOffset() {\r\n  return moment().tz('America/Chicago').isDST() ? 300 : 360;\r\n}\r\n\r\n/**\r\n * Get the NgbDate object for the given date\r\n * @param date The date to convert to NgbDate\r\n */\r\nexport function getNgbDate(date: Date) {\r\n  if (isValidDate(date)) {\r\n    return new NgbDate(date.getFullYear(), date.getMonth() + 1, date.getDate());\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the validity of the date\r\n * Returns true if the given date is valid, otherwise false\r\n * @param date The date to check\r\n */\r\nexport function isValidDate(date: Date) {\r\n  return date instanceof Date && !isNaN(date.getTime());\r\n}\r\n\r\n/**\r\n * Get the first day Date object of the month\r\n * @param year year the month is in\r\n * @param month the month that we want to get the first day for\r\n */\r\nexport function getFirstDayOfMonth(year: number, month: number) {\r\n  return new Date(year, month, 1);\r\n}\r\n\r\n/**\r\n * Get the number of days in the given month\r\n * @param year year the month is in\r\n * @param month the month in question\r\n */\r\nexport function getDaysInMonth(year: number, month: number) {\r\n  return new Date(year, month + 1, 0).getDate();\r\n}\r\n\r\n/**\r\n * Get the Date for the given NgbDate object\r\n * @param date The NgbDate to convert to Date\r\n */\r\nexport function getDateFromNgb(date: NgbDate) {\r\n  if (date && date.day && date.month && date.year\r\n    && !isNaN(date.day) && !isNaN(date.month) && !isNaN(date.year)) {\r\n    return new Date(date.year, date.month - 1, date.day);\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Return the moment object for the given NgbDate\r\n * @param date The given NgbDate\r\n */\r\nexport function getMoment(date: NgbDate) {\r\n  // NgbDates use 1 for Jan, Moment uses 0, must subtract 1 month for proper date conversion\r\n  // (doing this through moment itself doesn't work properly)\r\n  const ngbObj = JSON.parse(JSON.stringify(date));\r\n  const newMoment = moment();\r\n\r\n  if (ngbObj) {\r\n    ngbObj.month--;\r\n    newMoment.month(ngbObj.month);\r\n    newMoment.date(ngbObj.day);\r\n    newMoment.year(ngbObj.year);\r\n  }\r\n\r\n  return newMoment;\r\n}\r\n\r\n/**\r\n * Convert the given NgbDate to a string in ISO Chicago\r\n * @param date The date to convert\r\n */\r\nexport function ngbDateToString(date: NgbDate) {\r\n  if (date) {\r\n    const newMoment = getMoment(date);\r\n    // Convert date to \"Mon Feb 01\" format\r\n    if (newMoment.isValid()) {\r\n      return DateUtil.toISOChicago(newMoment.format('L'));\r\n    }\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * Convert date to 'ddd MMM DD' string format\r\n * Ex: \"Mon Feb 01\"\r\n * @param date The NgbDate to convert\r\n */\r\nexport function formatDate(date: NgbDate) {\r\n  if (date) {\r\n    const newMoment = getMoment(date);\r\n    // Convert date to \"Mon Feb 01\" format\r\n    if (newMoment.isValid()) {\r\n      return newMoment.format('ddd MMM DD');\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get the NgbDate from the date in string format.\r\n * Return null if date is invalid\r\n */\r\nexport function getNgbDateFromString(date: string) {\r\n    let ngbDate: NgbDate = null;\r\n    const tempDate = new Date(date);\r\n    if (tempDate && !isNaN(tempDate.getTime()) && date != null) {\r\n      ngbDate = getNgbDate(tempDate);\r\n    }\r\n    return ngbDate;\r\n  }\r\n\r\n/**\r\n * Parse a string and return a date object adjusted with the offset\r\n * @param dateString The date in string format to parse\r\n */\r\nexport function getDateWithOffset(dateString: string) {\r\n  if (dateString) {\r\n    const date = new Date(dateString);\r\n    const userTimezoneOffset = date.getTimezoneOffset() * 60000;\r\n    return new Date(date.getTime() + userTimezoneOffset);\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n  /**\r\n   * Determine End of Month Status of a date\r\n   * If date is last day of month and 31st, then return true\r\n   * Else if date is last day of month and 30th, or 28th(feb), then return null\r\n   * Else return false since day selected cannot be a valid EOM\r\n   * Used to Show question if null is returned\r\n   * @param date the date to check\r\n   */\r\n  export function determineEndOfMonthStatus(date: Date) {\r\n    if (date) {\r\n      const lastDayOfCurrentMonth = getDaysInMonth(date.getFullYear(), date.getMonth());\r\n      if (date.getDate() === 31) {\r\n        return true;\r\n      } else if (lastDayOfCurrentMonth === date.getDate()) {\r\n        return null;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else { return false; }\r\n  }\r\n\r\n  /**\r\n   * Determine End of Quarter status of a date\r\n   * If date is last day of quarter and 31st for March and December, return true\r\n   * Else if date is last day of month for June and September, return null to ask question\r\n   * Else return false since the day cannot be a valid End of Quarter day\r\n   * @param date The date to determine if it falls on End of Quarter\r\n   */\r\n  export function determineEndOfQuarterStatus(date: Date) {\r\n    if (date) {\r\n      const month = date.getMonth();\r\n      const dayOfMonth = date.getDate();\r\n\r\n      if ((month === MonthNumEnum.March && dayOfMonth === 31)\r\n          || (month === MonthNumEnum.December && dayOfMonth === 31)) {\r\n        return true;\r\n      } else if ((month === MonthNumEnum.June && dayOfMonth === 30)\r\n          || (month === MonthNumEnum.September && dayOfMonth === 30)) {\r\n        return null;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else { return false; }\r\n  }\r\n","import { Params } from '@angular/router';\r\n\r\n/** Return true if the newObject differs from the oldObject or its ID is null/undefined */\r\nexport function areDifferent<T extends {id: any}>(newObject: T, oldObject: T, tag?: string) {\r\n  if (!newObject.id) {\r\n    return true; // always \"different\" (meaning should save) if id is missing | 0 | ''.\r\n  }\r\n  // The following technique would be slow if the objects were large and/or there are a lot of them.\r\n  // Strip off the prototype before comparing\r\n  const old = JSON.stringify(Object.assign({}, oldObject));\r\n  const nuw = JSON.stringify(Object.assign({}, newObject));\r\n  const isDiff = old !== nuw;\r\n  // Debugging: uncomment to see what changed\r\n  // if (isDiff) {\r\n  //   const pos = firstDiffBetweenStrings(old, nuw);\r\n  //   console.log(`\"${tag}\" diff at ${pos}`);\r\n  //   console.log('old: ' + old.substr(pos, 60));\r\n  //   console.log('new: ' + nuw.substr(pos, 60));\r\n  // }\r\n  return isDiff;\r\n}\r\n\r\n/**\r\n * Return an array of an object's own property values.\r\n * @param dict A \"dictionary\" object that is the source of values\r\n * @returns Array of object's own property values in arbitrary order. Values should be self-identifying!\r\n*/\r\nexport function dictionaryToArray<T = any>(dict: { [key: string]: T }): T[] {\r\n  return Object.keys(dict).map(p => dict[p]);\r\n}\r\n\r\n/**\r\n * Extract the entity from the ViewModel wrapper.\r\n * Assumes this VM is an application-standard wrapper consisting of entity properties\r\n * and ONE additional property,\r\n * 'x', which holds all view model properties and methods.\r\n * Use this fn to remove the 'x' view model material before saving.\r\n */\r\nexport function extractEntityFromVm<T, VMx>(vm: T & { x: VMx } & Indexable): T {\r\n  const { x, ...entity} = vm as any;\r\n  return entity as T;\r\n}\r\n\r\n/** Filter out removed items */\r\nexport function filterRemoved(items: { isRemoved: boolean }[]) {\r\n  return items ? items.filter(item => !item.isRemoved) : [];\r\n}\r\n\r\n/** return index of first difference between two strings */\r\nexport function firstDiffBetweenStrings(a: string, b: string) {\r\n  const shorterLength = Math.min(a.length, b.length);\r\n  for (let i = 0; i < shorterLength; i++) {\r\n      if (a[i] !== b[i]) {\r\n        return i;\r\n      }\r\n  }\r\n  if (a.length !== b.length) {\r\n    return shorterLength;\r\n  }\r\n  return -1;\r\n}\r\n\r\n/** Interface for an object that can be indexed with a string key */\r\nexport interface Indexable<T = any> {\r\n  [key: string]: T;\r\n}\r\n\r\n/**\r\n * Convert to \"lowerCamelCase\" in which the first letter of the name is lower case.\r\n * @param name Name to convert, without spaces or punctuation\r\n */\r\nexport function lowerCamelCase(name: string) {\r\n  return name && name.charAt(0).toLowerCase() + name.substring(1);\r\n}\r\n\r\n/**\r\n * Convert to \"UpperCamelCase\" in which the first letter of the name is upper case.\r\n * @param name Name to convert, without spaces or punctuation\r\n */\r\nexport function upperCamelCase(name: string) {\r\n  return name && name.charAt(0).toUpperCase() + name.substring(1);\r\n}\r\n\r\n/**\r\n * Convert a string to title case ('tHe caT IN The hat' => 'The Cat IN The Hat')\r\n */\r\nexport function titleCase(source: string) {\r\n  return source.replace(/\\b([a-z])(\\w+)/g, ($0, $1, $2) => $1.toUpperCase() + $2.toLowerCase());\r\n}\r\n\r\n/** strip the prototype and methods from the object */\r\nexport function raw(objWithProtoType: any) {\r\n  return Object.assign({}, objWithProtoType);\r\n}\r\n\r\n/**\r\n * Coerce the number to be a dollar in range with proper decimals\r\n * @param value Raw amount\r\n * @param [centsOk] True if cents are allowed; default false\r\n * @param [max] Maximum dollar value. Default max of $300,000\r\n * @param [min] Minimum dollar value. Default min of $0\r\n */\r\nexport function toDollars(value: number, centsOk = false, max?: number, min?: number) {\r\n  const dollars = Math.min((max || 300000), Math.max(value || 0, min || 0));\r\n\r\n  return centsOk ? (Math.round(dollars * 100)) / 100 : Math.round(dollars);\r\n}\r\n\r\n/**\r\n * Coerce the number to be an integer within a range\r\n * @param value Ram number\r\n * @param [max] Maximum integer value. Default max of 1000.\r\n * @param [min] Minimum integer value. Default min of 0.\r\n */\r\nexport function toInteger(value: number, max?: number, min?: number ) {\r\n  return Math.round(Math.min((max || 1000), Math.max(value || 0, min || 0)));\r\n}\r\n\r\n/**\r\n * Return the arguments as strings, using JSON.stringify iff necessary\r\n * @param args\r\n */\r\nexport function stringify(args: any[]): string[] {\r\n  const strings = args.map(a => {\r\n    let s = a ? a.toString() : a;\r\n    if (s && s.startsWith('[object')) {\r\n      s = JSON.stringify(a);\r\n    }\r\n    return s;\r\n  });\r\n  return strings;\r\n}\r\n\r\n// Accordingly with https://www.irs.gov/businesses/small-businesses-self-employed/online-ein-frequently-asked-questions\r\nconst validLegalNameCharSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789-&';\r\n\r\n/** Sanitize legal name */\r\nexport function sanitizeLegalName(legalName: string): string {\r\n  if (!legalName) {\r\n    return '';\r\n  }\r\n  let res = '';\r\n  for (let i = 0; i < legalName.length; i ++) {\r\n    const ch = legalName.toUpperCase().charAt(i);\r\n    if (validLegalNameCharSet.includes(ch, 0)) {\r\n      res += ch;\r\n    } else if (ch === '\\'') {\r\n      // skip apostrophe\r\n    } else if (ch === '+' || ch === '@' || ch === '.') {\r\n      res += ' ';\r\n    } else if (ch === '\\\\' || ch === '/') {\r\n      res += '-';\r\n    } else {\r\n      // skip\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\n/** Convert URL search string into key:value object.  Converts keys to all lowercase. */\r\nexport function parseUrlParams(search: string): Params {\r\n  const params: Params = {};\r\n  if (!search) { return params; }\r\n  if (search.startsWith('?')) { search = search.substring(1); }\r\n  search.split('&').forEach(p => {\r\n    const kv = p.split('=');\r\n    if (kv.length > 1) {\r\n      params[kv[0].toLowerCase()] = kv[1];\r\n    }\r\n  });\r\n  return params;\r\n}\r\n\r\n/** Get the cookies that start with the given name, and don't contain the exclude string */\r\nexport function getCookies(name: string, exclude?: string) {\r\n  const cookies = document.cookie.split(';').filter(function(c) {\r\n    c = c.trim();\r\n    return c.indexOf(name) === 0 && (!exclude || c.indexOf(exclude) < 0);\r\n  }).map(function(c) {\r\n    return c.trim().split('=')[1];\r\n  });\r\n  return cookies;\r\n}\r\n\r\n\r\n","import { ChangeSetOperation, ChangeSetAdd, ChangeSetDelete, ChangeSetUpdate, ChangeSetUpsert, Update } from 'ngrx-data';\r\nimport { raw } from './utils';\r\n/**\r\n * Create a ChangeItem for a multi-entity save\r\n * Similar to the one in ngrx-data.\r\n * Extended with ability to take entity args\r\n * and to clone and strip the prototype from the entities in the ChangeItem.\r\n */\r\nexport class ChangeItemFactory {\r\n\r\n  add<T>(entityName: string, entities: T | T[]): ChangeSetAdd<T> {\r\n    entities = Array.isArray(entities) ? entities : entities ? [entities] : [];\r\n    entities = entities.map(e => raw(e));\r\n    return { entityName, op: ChangeSetOperation.Add, entities };\r\n  }\r\n\r\n  delete<T extends {id: string}>\r\n    (entityName: string, entitiesOrIds: string | T | string[] | T[]): ChangeSetDelete {\r\n    const data = Array.isArray(entitiesOrIds) ? entitiesOrIds : entitiesOrIds ? [entitiesOrIds] : [];\r\n    const ids = data.map(e => typeof e === 'string' ? e : e.id);\r\n    return {entityName, op: ChangeSetOperation.Delete, entities: ids };\r\n  }\r\n\r\n  update<T extends {id: string}>(entityName: string, entities: T | T[]): ChangeSetUpdate<T> {\r\n    const updates = entities\r\n      ? (Array.isArray(entities) ? entities : [entities]).map(e => toUpdate(raw(e)))\r\n      : [];\r\n    return {entityName, op: ChangeSetOperation.Update, entities: updates };\r\n  }\r\n\r\n  upsert<T>(entityName: string, entities: T | T[]): ChangeSetUpsert<T> {\r\n    entities = Array.isArray(entities) ? entities : entities ? [entities] : [];\r\n    entities = entities.map(e => raw(e));\r\n    return {entityName, op: ChangeSetOperation.Upsert, entities };\r\n  }\r\n}\r\n\r\nexport const changeItemFactory = new ChangeItemFactory();\r\n\r\n/**\r\n * Convert an SP entity (or part of one) into an ngrx-data Update<T> object\r\n */\r\nexport function toUpdate(entity: {id: string | number}): Update<any> {\r\n  return {id: entity.id, changes: entity } as Update<any>;\r\n}\r\n","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return !!value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","const isFunction = (fn: any) => typeof fn === 'function';\r\n\r\nexport interface SubscriptionLike {\r\n  unsubscribe(): void;\r\n}\r\n\r\n/**\r\n * Subscription sink that holds Observable subscriptions\r\n * until you call unsubscribe on it in ngOnDestroy.\r\n * Copied from https://github.com/wardbell/subsink to avoid dependency on WB's github repo\r\n * Also available as `npm install subsink`\r\n */\r\nexport class SubSink {\r\n\r\n  protected _subs: SubscriptionLike[] = [];\r\n\r\n  /**\r\n   * Subscription sink that holds Observable subscriptions\r\n   * until you call unsubscribe on it in ngOnDestroy.\r\n   *\r\n   * @example\r\n   * In Angular:\r\n   * ```\r\n   *   private subs = new SubSink();\r\n   *   ...\r\n   *   this.subs.sink = observable$.subscribe(\r\n   *   this.subs.add(observable$.subscribe(...));\r\n   *   ...\r\n   *   ngOnDestroy() {\r\n   *     this.subs.unsubscribe();\r\n   *   }\r\n   * ```\r\n   */\r\n  constructor() {}\r\n\r\n  /**\r\n   * Add subscriptions to the tracked subscriptions\r\n   * @example\r\n   *  this.subs.add(observable$.subscribe(...));\r\n   */\r\n  add(...subscriptions: SubscriptionLike[]) {\r\n    this._subs = this._subs.concat(subscriptions);\r\n  }\r\n\r\n  /**\r\n   * Assign subscription to this sink to add it to the tracked subscriptions\r\n   * @example\r\n   *  this.subs.sink = observable$.subscribe(...);\r\n   */\r\n  set sink(subscription: SubscriptionLike) {\r\n    this._subs.push(subscription);\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to all subscriptions in ngOnDestroy()\r\n   * @example\r\n   *   ngOnDestroy() {\r\n   *     this.subs.unsubscribe();\r\n   *   }\r\n   */\r\n  unsubscribe() {\r\n    this._subs.forEach(sub => sub && isFunction(sub.unsubscribe) && sub.unsubscribe());\r\n    this._subs = [];\r\n  }\r\n}\r\n","var isFunction = function (fn) { return typeof fn === 'function'; };\nvar ɵ0 = isFunction;\n/**\n * Subscription sink that holds Observable subscriptions\n * until you call unsubscribe on it in ngOnDestroy.\n * Copied from https://github.com/wardbell/subsink to avoid dependency on WB's github repo\n * Also available as `npm install subsink`\n */\nvar SubSink = /** @class */ (function () {\n    /**\n     * Subscription sink that holds Observable subscriptions\n     * until you call unsubscribe on it in ngOnDestroy.\n     *\n     * @example\n     * In Angular:\n     * ```\n     *   private subs = new SubSink();\n     *   ...\n     *   this.subs.sink = observable$.subscribe(\n     *   this.subs.add(observable$.subscribe(...));\n     *   ...\n     *   ngOnDestroy() {\n     *     this.subs.unsubscribe();\n     *   }\n     * ```\n     */\n    function SubSink() {\n        this._subs = [];\n    }\n    /**\n     * Add subscriptions to the tracked subscriptions\n     * @example\n     *  this.subs.add(observable$.subscribe(...));\n     */\n    SubSink.prototype.add = function () {\n        var subscriptions = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            subscriptions[_i] = arguments[_i];\n        }\n        this._subs = this._subs.concat(subscriptions);\n    };\n    Object.defineProperty(SubSink.prototype, \"sink\", {\n        /**\n         * Assign subscription to this sink to add it to the tracked subscriptions\n         * @example\n         *  this.subs.sink = observable$.subscribe(...);\n         */\n        set: function (subscription) {\n            this._subs.push(subscription);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Unsubscribe to all subscriptions in ngOnDestroy()\n     * @example\n     *   ngOnDestroy() {\n     *     this.subs.unsubscribe();\n     *   }\n     */\n    SubSink.prototype.unsubscribe = function () {\n        this._subs.forEach(function (sub) { return sub && isFunction(sub.unsubscribe) && sub.unsubscribe(); });\n        this._subs = [];\n    };\n    return SubSink;\n}());\nexport { SubSink };\nexport { ɵ0 };\n","export * from './address-utils';\r\nexport * from './checkdate-utils';\r\nexport * from './async-await';\r\nexport * from './change-item-factory';\r\nexport * from './date-utils';\r\nexport * from './ee-utils';\r\nexport * from './gen-password';\r\nexport * from './household-filer-utils';\r\nexport * from './is-promise';\r\nexport * from './subsink';\r\nexport * from './utils';\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@app/shared';\r\n\r\nimport { AccountDetailsContainerComponent } from './account-details-container.component';\r\n\r\nimport { AccountDetailsAddressComponent } from './account-details-address.component';\r\nimport { AccountDetailsCompanyComponent } from './account-details-company.component';\r\nimport { AccountDetailsCompanyStateTaxComponent } from './account-details-companyStateTax.component';\r\nimport { AccountDetailsEarningsListComponent } from '@app/account-details/account-details-earnings-list.component';\r\nimport { AccountDetailsEmployeeComponent } from './account-details-employee.component';\r\nimport { AccountDetailsEmployeeSetupComponent } from './account-details-employee-setup.component';\r\nimport { AccountDetailsFedTaxComponent } from './account-details-fed-tax.component';\r\nimport { AccountDetailsUserComponent } from './account-details-user.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    AccountDetailsContainerComponent,\r\n\r\n    AccountDetailsAddressComponent,\r\n    AccountDetailsUserComponent,\r\n    AccountDetailsCompanyComponent,\r\n    AccountDetailsCompanyStateTaxComponent,\r\n    AccountDetailsEarningsListComponent,\r\n    AccountDetailsEmployeeComponent,\r\n    AccountDetailsEmployeeSetupComponent,\r\n    AccountDetailsFedTaxComponent\r\n  ],\r\n  exports: [ AccountDetailsContainerComponent ]\r\n})\r\nexport class AccountDetailsModule {}\r\n","import { Action } from '@ngrx/store';\r\nimport { AccountStatus, User } from '@model';\r\n\r\nexport const LOAD_COMPANY_PACKAGE_ERROR = 'sp/company-package-load/error';\r\n\r\nexport const SET_AUTH_USER = 'sp/auth-user/set';\r\nexport const SET_CURRENT_ACCOUNT = 'sp/current/account/set';\r\nexport const SET_CURRENT_COMPANY_ETAG = 'sp/current/company/etag/set';\r\nexport const SET_CURRENT_EMPLOYEE_ID = 'sp/current/employee/employee-id/set';\r\nexport const SET_COMPANY_PACKAGE_LOADED = 'sp/company-package-loaded/set';\r\nexport const SET_COMPANY_PACKAGE_LOADING = 'sp/company-package-loading/set';\r\nexport const SET_READ_ONLY = 'sp/read-only/set';\r\n\r\n/** Create action containing the error when fail to load data */\r\nexport class LoadCompanyPackageError implements Action {\r\n  readonly type = LOAD_COMPANY_PACKAGE_ERROR;\r\n  constructor(public readonly payload: {currentCompanyId: string, error: any, tag?: string}) {}\r\n}\r\n\r\nexport class SetAuthUser implements Action {\r\n  readonly type = SET_AUTH_USER;\r\n  constructor(public readonly payload: User) {}\r\n}\r\n\r\nexport class SetCompanyEtag implements Action {\r\n  readonly type = SET_CURRENT_COMPANY_ETAG;\r\n  constructor(public readonly payload: string) {}\r\n}\r\n\r\nexport class SetCompanyPackageLoaded implements Action {\r\n  readonly type = SET_COMPANY_PACKAGE_LOADED;\r\n  constructor(public readonly payload: boolean) {}\r\n}\r\n\r\nexport class SetCompanyPackageLoading implements Action {\r\n  readonly type = SET_COMPANY_PACKAGE_LOADING;\r\n  constructor(public readonly payload: boolean) {}\r\n}\r\n\r\nexport class SetCurrentAccount implements Action {\r\n  readonly type = SET_CURRENT_ACCOUNT;\r\n  readonly payload: { currentCompanyId: string, currentUserId: string };\r\n  constructor(currentCompanyId: string, currentUserId: string) {\r\n    this.payload = { currentCompanyId, currentUserId };\r\n  }\r\n}\r\n\r\nexport class SetCurrentEmployeeId implements Action {\r\n  readonly type = SET_CURRENT_EMPLOYEE_ID;\r\n  constructor(public readonly payload: string) {}\r\n}\r\n\r\nexport class SetReadOnly implements Action {\r\n  readonly type = SET_READ_ONLY;\r\n  constructor(public readonly payload: boolean) {}\r\n}\r\n\r\nexport type All =\r\n  | LoadCompanyPackageError\r\n  | SetAuthUser\r\n  | SetCompanyEtag\r\n  | SetCompanyPackageLoaded\r\n  | SetCompanyPackageLoading\r\n  | SetCurrentAccount\r\n  | SetCurrentEmployeeId\r\n  | SetReadOnly;\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { isObservable, of, Observable } from 'rxjs';\r\nimport { concatMap, first } from 'rxjs/operators';\r\n\r\nimport { isPromise } from '@core';\r\nimport { SessionService } from '@session';\r\n\r\n/**\r\n * Routing guard the asks a component if (when) the user can leave the page.\r\n * Implements the router's `CanDeactivate` by asking the component if it has\r\n * a `canLeaveAfterSave` method and calling that method if it does.\r\n * Don't bother if in ReadOnly mode\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class PageLeaveGuard implements CanDeactivate<any> {\r\n  private readOnly$: Observable<boolean>;\r\n\r\n  constructor(sessionService: SessionService) {\r\n    this.readOnly$ = sessionService.readOnly$;\r\n  }\r\n  canDeactivate (\r\n    component: any,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot\r\n  ): Observable<boolean> {\r\n    return this.readOnly$.pipe(\r\n      first(),\r\n      concatMap(readOnly => {\r\n        if (readOnly || component === null || !component.canLeaveAfterSave) {\r\n          return of(true);\r\n        }\r\n        const res = component.canLeaveAfterSave(component, currentRoute, currentState, nextState);\r\n        return isObservable(res) || isPromise(res) ? res : of(res) ;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { isObservable, of } from 'rxjs';\nimport { concatMap, first } from 'rxjs/operators';\nimport { isPromise } from '@core';\nimport { SessionService } from '@session';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../store/session/session.service\";\n/**\n * Routing guard the asks a component if (when) the user can leave the page.\n * Implements the router's `CanDeactivate` by asking the component if it has\n * a `canLeaveAfterSave` method and calling that method if it does.\n * Don't bother if in ReadOnly mode\n */\nvar PageLeaveGuard = /** @class */ (function () {\n    function PageLeaveGuard(sessionService) {\n        this.readOnly$ = sessionService.readOnly$;\n    }\n    PageLeaveGuard.prototype.canDeactivate = function (component, currentRoute, currentState, nextState) {\n        return this.readOnly$.pipe(first(), concatMap(function (readOnly) {\n            if (readOnly || component === null || !component.canLeaveAfterSave) {\n                return of(true);\n            }\n            var res = component.canLeaveAfterSave(component, currentRoute, currentState, nextState);\n            return isObservable(res) || isPromise(res) ? res : of(res);\n        }));\n    };\n    PageLeaveGuard.ngInjectableDef = i0.defineInjectable({ factory: function PageLeaveGuard_Factory() { return new PageLeaveGuard(i0.inject(i1.SessionService)); }, token: PageLeaveGuard, providedIn: \"root\" });\n    return PageLeaveGuard;\n}());\nexport { PageLeaveGuard };\n","import { OidcTokenResponse } from './oidc-token-response';\r\n\r\n/**\r\n * OidcUser-like object derived from the sign-up token response.\r\n * Has essential features of OidcUser for the purposes of accessing the SP APIs\r\n * and identifying the ecommerce authenticated user (AuthUser)\r\n */\r\nexport class OidcSignupUser {\r\n\r\n  /** Marks this OidcUser as a faked SignUp Oidc user */\r\n  static signupUserState = 'SIGNUP-OIDC-USER';\r\n\r\n  /** ECommerce server access token, acquired during sign-up */\r\n  access_token: string;\r\n\r\n  /** When the token response was received as MS from 1/1/1970 UTC  */\r\n  created: number;\r\n\r\n  /** Access token expires this many SECONDS from when created */\r\n  expires_in: number;\r\n\r\n  /** Access token expires this many SECONDS from 1/1/1970 UTC */\r\n  expires_at: number;\r\n\r\n  /** Marker to identify this as an OidcUser created from sign-up, not IdentityServer */\r\n  state = OidcSignupUser.signupUserState;\r\n\r\n  /** Token type from the ECommerce server */\r\n  token_type: string;\r\n\r\n  constructor(\r\n    /** Sign-up token response from ECommerce server */\r\n    private tokenResponse: OidcTokenResponse\r\n  ) {\r\n    this.access_token = tokenResponse.access_token;\r\n    this.created = Date.now();\r\n    this.expires_in = tokenResponse.expires_in;\r\n\r\n    // Calculate expiration DateTime (in seconds)\r\n    // Shorten by 30 seconds to be safe.\r\n    this.expires_at = Math.floor(this.created / 1000) + (this.expires_in - 30);\r\n    // Note: could have extracted the precise expiration from the access token but that would\r\n    // require use of the JWT parse library which currently is only in mock services\r\n\r\n    this.token_type = tokenResponse.token_type;\r\n  }\r\n\r\n  /** Is token expired? */\r\n  get expired() {\r\n    return Date.now() > (this.expires_at * 1000);\r\n  }\r\n}\r\n","/**\n * OidcUser-like object derived from the sign-up token response.\n * Has essential features of OidcUser for the purposes of accessing the SP APIs\n * and identifying the ecommerce authenticated user (AuthUser)\n */\nvar OidcSignupUser = /** @class */ (function () {\n    function OidcSignupUser(\n    /** Sign-up token response from ECommerce server */\n    tokenResponse) {\n        this.tokenResponse = tokenResponse;\n        /** Marker to identify this as an OidcUser created from sign-up, not IdentityServer */\n        this.state = OidcSignupUser.signupUserState;\n        this.access_token = tokenResponse.access_token;\n        this.created = Date.now();\n        this.expires_in = tokenResponse.expires_in;\n        // Calculate expiration DateTime (in seconds)\n        // Shorten by 30 seconds to be safe.\n        this.expires_at = Math.floor(this.created / 1000) + (this.expires_in - 30);\n        // Note: could have extracted the precise expiration from the access token but that would\n        // require use of the JWT parse library which currently is only in mock services\n        this.token_type = tokenResponse.token_type;\n    }\n    Object.defineProperty(OidcSignupUser.prototype, \"expired\", {\n        /** Is token expired? */\n        get: function () {\n            return Date.now() > (this.expires_at * 1000);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Marks this OidcUser as a faked SignUp Oidc user */\n    OidcSignupUser.signupUserState = 'SIGNUP-OIDC-USER';\n    return OidcSignupUser;\n}());\nexport { OidcSignupUser };\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { HttpClient } from '@angular/common/http';\nimport { of, throwError, empty } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '@environment';\nimport { titleCase, parseUrlParams, getCookies } from '@utils';\nimport { LoggerService } from '../logger.service';\nimport { getGuidComb } from '@core/guid-fns';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../logger.service\";\nvar AuthDataService = /** @class */ (function () {\n    function AuthDataService(http, logger) {\n        this.http = http;\n        this.logger = logger;\n        this.url = environment.apiRoot + \"/account/user\";\n    }\n    /**\n     * Get the authorized user from the server based on oidcSub\n     * @param oidcSub The id of the user from IdentityServer\n     * @returns  The corresponding application user with that oidcSub (or undefined if not found)\n     */\n    AuthDataService.prototype.getAuthUser = function (oidcUser) {\n        return (oidcUser && oidcUser.access_token) ? this.getAuthUserFromServer(oidcUser) : of(null);\n    };\n    /** Get the user from the server, and create if not exists */\n    AuthDataService.prototype.getAuthUserFromServer = function (oidcUser) {\n        var p = oidcUser.profile;\n        var quser = {\n            username: p.preferred_username,\n            firstName: p.given_name && p.given_name.trim(),\n            lastName: p.family_name && p.family_name.trim(),\n            oidcSub: p.sub,\n            email: p.email,\n            phone: p.phone_number,\n            bcl: p.bcl,\n        };\n        var leadInfo = this.getLeadInfo(p);\n        this.callPardotFormHandler(quser, leadInfo);\n        var params = __assign({}, quser, { lead: leadInfo });\n        return this.http.post(this.url, params).pipe(map(function (user) { return repairUser(user, oidcUser); }), catchError(function (error) {\n            if (error.status === 404) {\n                var newError = __assign({}, error, { message: \"Could not find an ECommerce user to match the signed-in user. Signing out.\" });\n                return throwError(newError);\n            }\n            return throwError(error);\n        }));\n    };\n    AuthDataService.prototype.callPardotFormHandler = function (user, leadInfo) {\n        var _this = this;\n        if (!leadInfo || !leadInfo.pardotVisitorId) {\n            return;\n        }\n        if (!environment.pardotVisitorHandler) {\n            this.logger.warn('pardotVisitorHandler not defined');\n            return;\n        }\n        var formData = new FormData();\n        formData.append('pardot_visitor_id', leadInfo.pardotVisitorId);\n        formData.append('email', user.email);\n        formData.append('first_name', user.firstName);\n        formData.append('last_name', user.lastName);\n        formData.append('phone_number', user.phone);\n        formData.append('username', user.username);\n        formData.append('promo_campaign_id', leadInfo.promoCampaignId);\n        formData.append('priceCampaignId', leadInfo.priceCampaignId);\n        formData.append('promoCampaignId', leadInfo.promoCampaignId);\n        formData.append('partner code', leadInfo.partnerCode);\n        formData.append('ShortCode', leadInfo.shortCode);\n        this.http.post(environment.pardotVisitorHandler, formData)\n            .pipe(catchError(function (error) {\n            _this.logger.warn(\"Pardot form handler error\", error);\n            return empty();\n        })).subscribe();\n    };\n    /** Get the CMS info from state.search */\n    AuthDataService.prototype.getLeadInfo = function (profile) {\n        // formId=222&leadId=333&pardotVisitorId=444&partnerCode=CITI&shortCode=XYZ&promoCampaignId=ADRP&priceCampaignId=555\n        if (!profile || !profile.cms_profile) {\n            return null;\n        }\n        var params = parseUrlParams(profile.cms_profile);\n        var leadid = params.leadid, pardotvisitorid = params.pardotvisitorid, partnercode = params.partnercode, shortcode = params.shortcode, promocampaignid = params.promocampaignid, pricecampaignid = params.pricecampaignid, remains = __rest(params, [\"leadid\", \"pardotvisitorid\", \"partnercode\", \"shortcode\", \"promocampaignid\", \"pricecampaignid\"]);\n        var info = {\n            id: getGuidComb(),\n            leadId: leadid,\n            pardotVisitorId: pardotvisitorid,\n            partnerCode: partnercode,\n            priceCampaignId: pricecampaignid,\n            promoCampaignId: promocampaignid,\n            shortCode: shortcode,\n            parameters: remains\n        };\n        if (!info.pardotVisitorId) {\n            info.pardotVisitorId = this.getPardotVisitorIdFromCookie();\n        }\n        return info;\n    };\n    AuthDataService.prototype.getPardotVisitorIdFromCookie = function () {\n        var pardotCookie = getCookies('visitor_id', '-hash');\n        var visitorId = pardotCookie[0];\n        return visitorId;\n    };\n    AuthDataService.ngInjectableDef = i0.defineInjectable({ factory: function AuthDataService_Factory() { return new AuthDataService(i0.inject(i1.HttpClient), i0.inject(i2.LoggerService)); }, token: AuthDataService, providedIn: \"root\" });\n    return AuthDataService;\n}());\nexport { AuthDataService };\nfunction repairUser(user, oidcUser) {\n    if (!user.firstName && !user.lastName) {\n        // No name. Try to get name from oidcUser.\n        var _a = oidcUser ? oidcUser.profile : {}, _b = _a.family_name, family_name = _b === void 0 ? null : _b, _c = _a.given_name, given_name = _c === void 0 ? null : _c;\n        user.firstName = given_name && given_name.trim();\n        user.lastName = family_name && family_name.trim();\n        // If couldn't get name from oidcUser, get it from the 'first.last@surepayroll.com' username.\n        if (!user.firstName && !user.lastName) {\n            var name_1 = user.username.match(/([^@])*/)[0];\n            var _d = titleCase(name_1).split('.'), fn = _d[0], ln = _d[1];\n            user.firstName = fn;\n            user.lastName = ln;\n        }\n        // If still no name, set to unknown.\n        if (!user.firstName && !user.lastName) {\n            user.firstName = 'Unknown';\n            user.lastName = 'User';\n        }\n    }\n    return user;\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { User as OidcUser } from 'oidc-client';\r\n\r\nimport { Observable, of, throwError, empty } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environment';\r\nimport { titleCase, parseUrlParams, getCookies } from '@utils';\r\nimport { User } from '@model';\r\nimport { SignupLeadInfo } from '@app/signup/signup-leadinfo';\r\nimport { LoggerService } from '../logger.service';\r\nimport { getGuidComb } from '@core/guid-fns';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthDataService {\r\n\r\n  private url = `${environment.apiRoot}/account/user`;\r\n\r\n  constructor(private http: HttpClient, private logger: LoggerService) {}\r\n\r\n  /**\r\n   * Get the authorized user from the server based on oidcSub\r\n   * @param oidcSub The id of the user from IdentityServer\r\n   * @returns  The corresponding application user with that oidcSub (or undefined if not found)\r\n   */\r\n  getAuthUser(oidcUser: OidcUser): Observable<User> {\r\n    return (oidcUser && oidcUser.access_token) ? this.getAuthUserFromServer(oidcUser) : of(null);\r\n  }\r\n\r\n  /** Get the user from the server, and create if not exists */\r\n  private getAuthUserFromServer(oidcUser: OidcUser): Observable<User> {\r\n    const p = oidcUser.profile;\r\n    const quser = {\r\n      username: p.preferred_username,\r\n      firstName: p.given_name && p.given_name.trim(),\r\n      lastName: p.family_name && p.family_name.trim(),\r\n      oidcSub: p.sub,\r\n      email: p.email,\r\n      phone: p.phone_number,\r\n      bcl: p.bcl,\r\n    };\r\n    const leadInfo = this.getLeadInfo(p);\r\n    this.callPardotFormHandler(quser, leadInfo);\r\n\r\n    const params = {...quser, lead: leadInfo };\r\n\r\n    return this.http.post<User>(this.url, params).pipe(\r\n      map(user => repairUser(user, oidcUser)),\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.status === 404) {\r\n          const newError: HttpErrorResponse = {\r\n            ...error,\r\n            message: `Could not find an ECommerce user to match the signed-in user. Signing out.`\r\n          };\r\n          return throwError(newError);\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  private callPardotFormHandler(user: Partial<User>, leadInfo: SignupLeadInfo) {\r\n    if (!leadInfo || !leadInfo.pardotVisitorId) {\r\n      return;\r\n    }\r\n    if (!(environment as any).pardotVisitorHandler) {\r\n      this.logger.warn('pardotVisitorHandler not defined');\r\n      return;\r\n    }\r\n    const formData: FormData = new FormData();\r\n    formData.append('pardot_visitor_id', leadInfo.pardotVisitorId);\r\n    formData.append('email', user.email);\r\n    formData.append('first_name', user.firstName);\r\n    formData.append('last_name', user.lastName);\r\n    formData.append('phone_number', user.phone);\r\n    formData.append('username', user.username);\r\n    formData.append('promo_campaign_id', leadInfo.promoCampaignId);\r\n    formData.append('priceCampaignId', leadInfo.priceCampaignId);\r\n    formData.append('promoCampaignId', leadInfo.promoCampaignId);\r\n    formData.append('partner code', leadInfo.partnerCode);\r\n    formData.append('ShortCode', leadInfo.shortCode);\r\n    this.http.post((environment as any).pardotVisitorHandler, formData)\r\n    .pipe(\r\n        catchError(error => {\r\n          this.logger.warn(`Pardot form handler error`, error);\r\n          return empty();\r\n        })).subscribe();\r\n  }\r\n\r\n\r\n  /** Get the CMS info from state.search */\r\n  private getLeadInfo(profile: { cms_profile: string }): SignupLeadInfo {\r\n    // formId=222&leadId=333&pardotVisitorId=444&partnerCode=CITI&shortCode=XYZ&promoCampaignId=ADRP&priceCampaignId=555\r\n    if (!profile || !profile.cms_profile) {\r\n      return null;\r\n    }\r\n    const params = parseUrlParams(profile.cms_profile);\r\n    const { leadid, pardotvisitorid, partnercode, shortcode, promocampaignid, pricecampaignid, ...remains } = params;\r\n    const info: SignupLeadInfo = {\r\n      id: getGuidComb(),\r\n      leadId: leadid,\r\n      pardotVisitorId: pardotvisitorid,\r\n      partnerCode: partnercode,\r\n      priceCampaignId: pricecampaignid,\r\n      promoCampaignId: promocampaignid,\r\n      shortCode: shortcode,\r\n      parameters: remains\r\n    };\r\n\r\n    if (!info.pardotVisitorId) {\r\n      info.pardotVisitorId = this.getPardotVisitorIdFromCookie();\r\n    }\r\n\r\n    return info;\r\n  }\r\n\r\n  private getPardotVisitorIdFromCookie(): string {\r\n    const pardotCookie = getCookies('visitor_id', '-hash');\r\n    const visitorId = pardotCookie[0];\r\n    return visitorId;\r\n  }\r\n\r\n}\r\n\r\nfunction repairUser(user: User, oidcUser: OidcUser) {\r\n  if (!user.firstName && !user.lastName) {\r\n    // No name. Try to get name from oidcUser.\r\n    const { family_name = null, given_name = null } = oidcUser ? oidcUser.profile : {};\r\n    user.firstName = given_name && given_name.trim();\r\n    user.lastName = family_name && family_name.trim();\r\n\r\n    // If couldn't get name from oidcUser, get it from the 'first.last@surepayroll.com' username.\r\n    if (!user.firstName && !user.lastName) {\r\n      const name = user.username.match(/([^@])*/)[0];\r\n      const [fn, ln] = titleCase(name).split('.');\r\n      user.firstName = fn;\r\n      user.lastName = ln;\r\n    }\r\n\r\n    // If still no name, set to unknown.\r\n    if (!user.firstName && !user.lastName) {\r\n      user.firstName = 'Unknown';\r\n      user.lastName = 'User';\r\n    }\r\n  }\r\n  return user;\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoggerService } from '@core/services/logger.service';\r\nimport { getFullName } from '@core/utils';\r\nimport { isWellKnownRoute, WellKnownRoutes } from '@core/well-known-routes';\r\nimport { environment } from '@environment';\r\nimport { User, UserRole } from '@model';\r\nimport { SessionDispatcher } from '@session/session-dispatcher';\r\nimport { User as OidcUser } from 'oidc-client';\r\nimport { BehaviorSubject, from, NEVER, Observable, of, ReplaySubject } from 'rxjs';\r\nimport { catchError, concatMap, first, map, shareReplay, filter } from 'rxjs/operators';\r\nimport { IframeService } from '../iframe.service';\r\nimport { AuthDataService } from './auth-data.service';\r\nimport { OidcManager } from './oidc-manager';\r\nimport { OidcManagerFactory } from './oidc-manager-factory';\r\nimport { OidcSignupUser } from './oidc-signup-user';\r\nimport { OidcTokenService } from './oidc-token.service';\r\n\r\n\r\nconst doNotRememberUrls: string[] = [\r\n  WellKnownRoutes.Abandoned,\r\n  WellKnownRoutes.AuthFailed,\r\n  WellKnownRoutes.Failed,\r\n  WellKnownRoutes.SignedOut,\r\n];\r\n\r\nconst serviceName = 'AuthService';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n  private errorsSubject = new BehaviorSubject<string>(null);\r\n  private oidcManager: OidcManager;\r\n  private oidcUserSubject = new ReplaySubject<OidcUser>(1);\r\n\r\n  /** Observable of the current user's API access token */\r\n  accessToken$: Observable<string>;\r\n  /**\r\n   * Observable of the authenticated Application user. Falsy if no authenticated user.\r\n   */\r\n  authUser$: Observable<User>;\r\n\r\n  /** Observable of errors caught during authorization */\r\n  errors$ = this.errorsSubject.asObservable();\r\n\r\n  /** Observable emitting true when the current AuthUser is an administrator */\r\n  isAdmin$: Observable<boolean>;\r\n\r\n  /** Observable emitting true if a user is signed in */\r\n  isSignedIn$: Observable<boolean>;\r\n\r\n  /** Observable of the current user from IdentityServer */\r\n  oidcUser$: Observable<OidcUser>;\r\n\r\n  /** Storage key for app path after user returns from IdentityServer */\r\n  reroutePathKey = 'reroutePathKey';\r\n\r\n  private eventsSubject = new BehaviorSubject(serviceName + 'created');\r\n  events$ = this.eventsSubject.asObservable();\r\n\r\n  constructor(\r\n    private authDataService: AuthDataService,\r\n    private logger: LoggerService,\r\n    mgrFactory: OidcManagerFactory,\r\n    private oidcTokenService: OidcTokenService,\r\n    private router: Router,\r\n    private sessionDispatcher: SessionDispatcher,\r\n    private iframeService: IframeService\r\n  ) {\r\n    if (environment.authTracing) {\r\n      this.events$.subscribe(event => this.logger.log('Auth Tracing: ' + event));\r\n    }\r\n    this.oidcManager = mgrFactory.create();\r\n    this.oidcTokenService.logEvent = this.logEvent.bind(this);\r\n\r\n    // initialize in the next tick, so dependencies on this constructor can be resolved first.\r\n    setTimeout(() => this.initialize(), 0);\r\n  }\r\n\r\n  private initialize() {\r\n    this.oidcManager.clearStaleState();\r\n\r\n    this.oidcUser$ = this.oidcUserSubject.pipe(\r\n      // Either a properly signed in OidcUser or null\r\n      // It must exist, have an access token, and not be expired\r\n      map(oidcUser => {\r\n        if (oidcUser) {\r\n          if (oidcUser.access_token && !oidcUser.expired) {\r\n            this.logEvent('oidcUser changed and appears valid');\r\n          } else {\r\n            this.logEvent('oidcUser changed but is invalid; returning null');\r\n            oidcUser = null;\r\n          }\r\n        } else {\r\n          this.logEvent('oidcUser changed to null');\r\n        }\r\n        return oidcUser;\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n\r\n    /**\r\n     * Observable of the authenticated app User, derived from changes to the OidcUser.\r\n     * Gets the app user from the back-end API when the OidcUser$ changes\r\n     */\r\n    this.authUser$ = this.oidcUser$.pipe(\r\n      concatMap(oidcUser => this.getAuthUserFromOidcUser(oidcUser)),\r\n      shareReplay(1)\r\n    );\r\n\r\n    // Let Session know about it whenever the AuthUser changes\r\n    // Never need to unsubscribe from self.\r\n    this.authUser$.subscribe(authUser => {\r\n      const name = getFullName(authUser);\r\n      this.logEvent(`${serviceName} set AuthUser named \"${name}\"; dispatching AuthUser to Session`);\r\n      this.sessionDispatcher.setAuthUser(authUser);\r\n    });\r\n\r\n    this.accessToken$ = this.oidcUser$.pipe(map(user => (user ? user.access_token : '')));\r\n\r\n    this.isAdmin$ = this.authUser$.pipe(\r\n      map(authUser => authUser && authUser.userRole === UserRole.Administrator)\r\n    );\r\n\r\n    this.isSignedIn$ = this.authUser$.pipe(\r\n      map(authUser => authUser != null),\r\n    );\r\n\r\n    // Attempt initial sign-in from stored user, without bouncing to /oidc-callback\r\n    this.signinRedirectCallback();\r\n  }\r\n\r\n  /** Log a significant Auth cycle event */\r\n  logEvent(event: string) {\r\n    this.eventsSubject.next(event);\r\n  }\r\n\r\n  // #region commands\r\n  /**\r\n   * Get the route AuthService. Will re-route to this route after successful signin.\r\n   * @param [caller] caller's name\r\n   */\r\n  getReroute(caller?: string) {\r\n    let route: string;\r\n    if (window.sessionStorage) {\r\n      route = sessionStorage.getItem(this.reroutePathKey);\r\n    }\r\n    this.logEvent(`${caller || 'caller'} asked for postSigninRoute from browser storage and will receive \"${route}\"`);\r\n    return route;\r\n  }\r\n\r\n  /**\r\n   * Called when an Auth-related error occurs while performing some process requiring authentication.\r\n   * This method resets authentication to a safe state prior to the post-error action.\r\n   * Caller is responsible for the action to take next.\r\n   */\r\n  onAuthError(reason: string) {\r\n    if (reason) {\r\n      this.logEvent(reason);\r\n    }\r\n    this.oidcTokenService.clearSignupToken();\r\n  }\r\n\r\n  /**\r\n   * Clear the re-route path in local browser storage.\r\n   * @param url of page to return to after signin. A falsy url clears the stash.\r\n   * @param [caller] caller's name\r\n   */\r\n  clearReroute(caller?: string) {\r\n    this.setReroute('', caller);\r\n  }\r\n\r\n  /**\r\n   * Stash (or clear) a route in local browser storage.\r\n   * AuthService will re-route to it after successful signin.\r\n   * @param url of page to return to after signin. A falsy url clears the stash.\r\n   * @param [caller] caller's name\r\n   */\r\n  setReroute(url: string, caller?: string) {\r\n    if (window.sessionStorage) {\r\n      let message: string;\r\n      if (url) {\r\n        if (doNotRememberUrls.includes(url) || !isWellKnownRoute(url)) {\r\n          message = `did not stash blacklisted url, \"${url}\" in browser storage`;\r\n        } else {\r\n          // trim off query string\r\n          const q = url.indexOf('?');\r\n          if (q > 0) {\r\n            url = url.substring(0, q);\r\n          }\r\n          sessionStorage.setItem(this.reroutePathKey, url);\r\n          message = `stashed postSigninRoute, \"${url}\", in browser storage`;\r\n        }\r\n      } else {\r\n        sessionStorage.removeItem(this.reroutePathKey);\r\n        message = 'cleared postSigninRoute in browser storage';\r\n      }\r\n      this.logEvent(`${caller || 'caller'} ${message}.`);\r\n    }\r\n  }\r\n\r\n\r\n  /** Leave the app and open the signin dialog on IdentityServer */\r\n  signin(): Observable<never> {\r\n    this.logEvent(serviceName + '.signin() called');\r\n    // Get query params from the url for sending to IdentityServer as part of the 'state'\r\n    // it will send them back after signin on oidcUser.state\r\n    // Can't use router here - it's not ready yet\r\n    let search = window.location.search;\r\n    if (search.startsWith('?')) {\r\n      search = search.substring(1);\r\n    }\r\n\r\n    return this.execute('signin', this.oidcManager.signinRedirect({\r\n      extraQueryParams: {\r\n        sendto: 'signup',\r\n        cms: search\r\n      }\r\n    })).pipe(concatMap(() => NEVER));\r\n  }\r\n\r\n  /**\r\n   * Prepare to navigate the next time AuthUser changes\r\n   * which will be after IdentityServer returns its OIDC user\r\n   */\r\n  private navigateOnNextAuthUser() {\r\n    this.authUser$.pipe(\r\n      filter(authUser => !!authUser),\r\n      first()\r\n    ).subscribe(authUser => {\r\n      this.logEvent(`${serviceName}.navigateForAuthUser() navigating with AuthUser, \"${getFullName(authUser)}\"`);\r\n      this.navigateAfterSignIn(authUser);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update the OIDC UserManager when called back after successful signin.\r\n   * @param [data] Always null from OidcCallbackComponent; has OIDC user data when mocked.\r\n   * @returns Terminating observable of the OIDC user\r\n   */\r\n  signinRedirectCallback(data?: any): Observable<OidcUser> {\r\n    this.logEvent(`${serviceName}.signinRedirectCallback() called with ${data ? '' : 'no'} data`);\r\n\r\n    // router not yet ready, so save requested url\r\n    const url = window.location.pathname;\r\n    this.setReroute(url, 'signinRedirectCallback');\r\n\r\n    this.navigateOnNextAuthUser();\r\n\r\n    if (!this.hasSignInState() && !data) {\r\n      // not really doing a redirect, so try to get current user\r\n      return this.execute('getUser',\r\n        this.oidcManager.getUser().then(oidcUser => {\r\n          this.logEvent(`${serviceName}.signinRedirectCallback() called getUser() and got ${oidcUser}`);\r\n          if (oidcUser && oidcUser.expires_in > 300) {\r\n            // This triggers fetch of application AuthUser\r\n            this.oidcUserSubject.next(oidcUser);\r\n          } else {\r\n            // Jump out of the app to the signin page\r\n            this.signin();\r\n          }\r\n          return oidcUser;\r\n        })\r\n      );\r\n    }\r\n\r\n    return this.execute(\r\n      'redirectCallback',\r\n      this.oidcManager.signinRedirectCallback(data).then(oidcUser => {\r\n        this.logEvent(`${serviceName}.signinRedirectCallback() received OIDC User ${oidcUser} from OIDC manager`);\r\n        // This triggers fetch of application AuthUser\r\n        this.oidcUserSubject.next(oidcUser);\r\n        return oidcUser;\r\n      }));\r\n  }\r\n\r\n  /** Determine if we have stored state to match the url state.  If we don't, and we call\r\n   * oidcManager.signinRedirectCallback, we get \"no matching state found in storage\".  So don't do that. */\r\n  private hasSignInState() {\r\n    const url = window.location.href;\r\n    if (!url.includes(environment.oidcRedirectUri) || !url.includes('&state=')) {\r\n      return false;\r\n    }\r\n    const matches = url.match(/state=([^&#]*)/);\r\n    const state = matches && matches[1];\r\n\r\n    const stateData = state && window.localStorage && window.localStorage.getItem('oidc.' + state);\r\n\r\n    return !!stateData;\r\n  }\r\n\r\n  /**\r\n   * Leave the app, sign-out on IdentityServer, ... and return to signed-out page\r\n   * If IdentityServer handles sign-out, observable never completes so that\r\n   * current page is blocked while browser navigates to IdentityServer.\r\n   * If authenticated with signup token, clear oidcUser and navigate to signed-out page immediately\r\n   */\r\n  signout(): void {\r\n    this.logEvent(serviceName + '.signout() called');\r\n    this.oidcTokenService.clearSignupToken(serviceName + '.signout()');\r\n    this.iframeService.hide();\r\n\r\n    this.oidcUserSubject.pipe(\r\n      first(),\r\n      concatMap(oidcUser => {\r\n        if (oidcUser && oidcUser.state === OidcSignupUser.signupUserState) {\r\n          this.oidcUserSubject.next(null); // also nulls the AuthUser\r\n          this.router.navigate([WellKnownRoutes.SignedOut]);\r\n        } else {\r\n          this.setReroute(WellKnownRoutes.SignedOut, serviceName + '.signout()');\r\n          // start execution of IdentityServer signout ...\r\n          this.execute('signout', this.oidcManager.signoutRedirect());\r\n          // clear oidcUser after execute starts and before IdentityServer finishes.\r\n          this.oidcUserSubject.next(null); // also nulls the AuthUser\r\n        }\r\n        return of();\r\n      })\r\n    ).subscribe(\r\n      null,\r\n      error => this.errorsSubject.next(error)\r\n    );\r\n    this.oidcUserSubject.next(null);\r\n  }\r\n\r\n  private authFailed(error: any) {\r\n    const reason = typeof error === 'string' ? error : !error ? '' : error.message ? error.message : error.toString();\r\n    this.errorsSubject.next(reason);\r\n    this.router.navigate([WellKnownRoutes.AuthFailed], {replaceUrl: true});\r\n  }\r\n\r\n  /**\r\n   * Navigate to an app page after successful signin.\r\n   * Which page depends on who the user is and whether the target route is in browser storage\r\n   * @param oidcUser signed in user\r\n   */\r\n  private navigateAfterSignIn(authUser: User) {\r\n    let routeUrl: string;\r\n    if (authUser) {\r\n\r\n      routeUrl = this.getReroute(serviceName + '.navigateAfterSignIn()');\r\n      if (routeUrl) {\r\n        this.clearReroute(serviceName + '.navigateAfterSignIn()');\r\n      }\r\n\r\n      // Administrators always start on the admin account list page ...\r\n      if (authUser.userRole === UserRole.Administrator) {\r\n        // ... unless deep linking into AdminAccountView for a particular companyId and userId\r\n        // Ex: ~/admin/account-view/14869218ca0645cea77d491325216e46/76d58284c1a04e3eb8080162c1bc45a9\r\n        if (!/\\/admin\\/account-view\\/[a-fA-F0-9]{32,}\\/[a-fA-F0-9]{32,}/.test(routeUrl)) {\r\n          routeUrl = WellKnownRoutes.Admin;\r\n        }\r\n        this.logEvent(`${serviceName} routing Administrator to \"${routeUrl}\" after signin`);\r\n      } else {\r\n        routeUrl = routeUrl || WellKnownRoutes.Dashboard;\r\n        this.logEvent(`${serviceName} routing regular user to \"${routeUrl}\" after signin`);\r\n      }\r\n\r\n    } else {\r\n      // Not fully signed in. No place to go.\r\n      // Could be because of\r\n      this.logEvent(`${serviceName}'s AuthUser is null after signin`);\r\n      return;\r\n    }\r\n    this.router.navigateByUrl(routeUrl, { replaceUrl: true });\r\n  }\r\n\r\n  private execute<T>(operationName: string, promise: Promise<T>): Observable<T> {\r\n    this.errorsSubject.next(null);\r\n    return from(\r\n      promise.catch((error: Error) => {\r\n        // TODO: Should log errors to a server\r\n        this.logger.error(`\"${operationName}\" failed`, error);\r\n        this.authFailed(error);\r\n        return null;\r\n      })\r\n    );\r\n  }\r\n\r\n  /** Get the application authenticated user based on an OidcUser */\r\n  private getAuthUserFromOidcUser(oidcUser: OidcUser): Observable<User> {\r\n    if (oidcUser) {\r\n      this.logEvent('fetch auth user from server based on OIDC user');\r\n      return this.authDataService.getAuthUser(oidcUser).pipe(\r\n        // scheduler ensures one tick, forcing async observation\r\n        // observeOn(asapScheduler),\r\n        catchError((error: any) => {\r\n          const sub = (oidcUser.profile && oidcUser.profile.sub) || 'unknown';\r\n          const emsg = `Error while getting AuthUser from server for oidcUser.sub=${sub}.`;\r\n          this.logger.error(emsg, error);\r\n          this.logEvent(emsg);\r\n          this.authFailed(error);\r\n          // Don't return error as that breaks subscriptions.\r\n          // Return null which clears the decks.\r\n          // authFailed() will take care of navigation.\r\n          return of(null);\r\n        })\r\n      );\r\n    } else {\r\n      this.logEvent('not fetching auth user because no OIDC user');\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the OidcUser (not the application user) from the OidcManager.\r\n   * Diagnostic. Not used.\r\n   */\r\n  private getOidcUser(): Observable<OidcUser> {\r\n    return from(this.oidcManager.getUser()\r\n      .catch((error: Error) => {\r\n        // TODO: Should log on the server\r\n        // this.logger.error(`\"${operationName}\" failed`, error);\r\n        this.errorsSubject.next(error.message ? error.message : error.toString());\r\n        return null;\r\n      })\r\n    );\r\n  }\r\n\r\n  // #endregion\r\n}\r\n","import { Router } from '@angular/router';\nimport { LoggerService } from '@core/services/logger.service';\nimport { getFullName } from '@core/utils';\nimport { isWellKnownRoute, WellKnownRoutes } from '@core/well-known-routes';\nimport { environment } from '@environment';\nimport { UserRole } from '@model';\nimport { SessionDispatcher } from '@session/session-dispatcher';\nimport { BehaviorSubject, from, NEVER, of, ReplaySubject } from 'rxjs';\nimport { catchError, concatMap, first, map, shareReplay, filter } from 'rxjs/operators';\nimport { IframeService } from '../iframe.service';\nimport { AuthDataService } from './auth-data.service';\nimport { OidcManagerFactory } from './oidc-manager-factory';\nimport { OidcSignupUser } from './oidc-signup-user';\nimport { OidcTokenService } from './oidc-token.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth-data.service\";\nimport * as i2 from \"../logger.service\";\nimport * as i3 from \"./oidc-manager-factory\";\nimport * as i4 from \"./oidc-token.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"../../../store/session/session-dispatcher\";\nimport * as i7 from \"../iframe.service\";\nvar doNotRememberUrls = [\n    WellKnownRoutes.Abandoned,\n    WellKnownRoutes.AuthFailed,\n    WellKnownRoutes.Failed,\n    WellKnownRoutes.SignedOut,\n];\nvar serviceName = 'AuthService';\nvar AuthService = /** @class */ (function () {\n    function AuthService(authDataService, logger, mgrFactory, oidcTokenService, router, sessionDispatcher, iframeService) {\n        var _this = this;\n        this.authDataService = authDataService;\n        this.logger = logger;\n        this.oidcTokenService = oidcTokenService;\n        this.router = router;\n        this.sessionDispatcher = sessionDispatcher;\n        this.iframeService = iframeService;\n        this.errorsSubject = new BehaviorSubject(null);\n        this.oidcUserSubject = new ReplaySubject(1);\n        /** Observable of errors caught during authorization */\n        this.errors$ = this.errorsSubject.asObservable();\n        /** Storage key for app path after user returns from IdentityServer */\n        this.reroutePathKey = 'reroutePathKey';\n        this.eventsSubject = new BehaviorSubject(serviceName + 'created');\n        this.events$ = this.eventsSubject.asObservable();\n        if (environment.authTracing) {\n            this.events$.subscribe(function (event) { return _this.logger.log('Auth Tracing: ' + event); });\n        }\n        this.oidcManager = mgrFactory.create();\n        this.oidcTokenService.logEvent = this.logEvent.bind(this);\n        // initialize in the next tick, so dependencies on this constructor can be resolved first.\n        setTimeout(function () { return _this.initialize(); }, 0);\n    }\n    AuthService.prototype.initialize = function () {\n        var _this = this;\n        this.oidcManager.clearStaleState();\n        this.oidcUser$ = this.oidcUserSubject.pipe(\n        // Either a properly signed in OidcUser or null\n        // It must exist, have an access token, and not be expired\n        map(function (oidcUser) {\n            if (oidcUser) {\n                if (oidcUser.access_token && !oidcUser.expired) {\n                    _this.logEvent('oidcUser changed and appears valid');\n                }\n                else {\n                    _this.logEvent('oidcUser changed but is invalid; returning null');\n                    oidcUser = null;\n                }\n            }\n            else {\n                _this.logEvent('oidcUser changed to null');\n            }\n            return oidcUser;\n        }), shareReplay(1));\n        /**\n         * Observable of the authenticated app User, derived from changes to the OidcUser.\n         * Gets the app user from the back-end API when the OidcUser$ changes\n         */\n        this.authUser$ = this.oidcUser$.pipe(concatMap(function (oidcUser) { return _this.getAuthUserFromOidcUser(oidcUser); }), shareReplay(1));\n        // Let Session know about it whenever the AuthUser changes\n        // Never need to unsubscribe from self.\n        this.authUser$.subscribe(function (authUser) {\n            var name = getFullName(authUser);\n            _this.logEvent(serviceName + \" set AuthUser named \\\"\" + name + \"\\\"; dispatching AuthUser to Session\");\n            _this.sessionDispatcher.setAuthUser(authUser);\n        });\n        this.accessToken$ = this.oidcUser$.pipe(map(function (user) { return (user ? user.access_token : ''); }));\n        this.isAdmin$ = this.authUser$.pipe(map(function (authUser) { return authUser && authUser.userRole === UserRole.Administrator; }));\n        this.isSignedIn$ = this.authUser$.pipe(map(function (authUser) { return authUser != null; }));\n        // Attempt initial sign-in from stored user, without bouncing to /oidc-callback\n        this.signinRedirectCallback();\n    };\n    /** Log a significant Auth cycle event */\n    AuthService.prototype.logEvent = function (event) {\n        this.eventsSubject.next(event);\n    };\n    // #region commands\n    /**\n     * Get the route AuthService. Will re-route to this route after successful signin.\n     * @param [caller] caller's name\n     */\n    AuthService.prototype.getReroute = function (caller) {\n        var route;\n        if (window.sessionStorage) {\n            route = sessionStorage.getItem(this.reroutePathKey);\n        }\n        this.logEvent((caller || 'caller') + \" asked for postSigninRoute from browser storage and will receive \\\"\" + route + \"\\\"\");\n        return route;\n    };\n    /**\n     * Called when an Auth-related error occurs while performing some process requiring authentication.\n     * This method resets authentication to a safe state prior to the post-error action.\n     * Caller is responsible for the action to take next.\n     */\n    AuthService.prototype.onAuthError = function (reason) {\n        if (reason) {\n            this.logEvent(reason);\n        }\n        this.oidcTokenService.clearSignupToken();\n    };\n    /**\n     * Clear the re-route path in local browser storage.\n     * @param url of page to return to after signin. A falsy url clears the stash.\n     * @param [caller] caller's name\n     */\n    AuthService.prototype.clearReroute = function (caller) {\n        this.setReroute('', caller);\n    };\n    /**\n     * Stash (or clear) a route in local browser storage.\n     * AuthService will re-route to it after successful signin.\n     * @param url of page to return to after signin. A falsy url clears the stash.\n     * @param [caller] caller's name\n     */\n    AuthService.prototype.setReroute = function (url, caller) {\n        if (window.sessionStorage) {\n            var message = void 0;\n            if (url) {\n                if (doNotRememberUrls.includes(url) || !isWellKnownRoute(url)) {\n                    message = \"did not stash blacklisted url, \\\"\" + url + \"\\\" in browser storage\";\n                }\n                else {\n                    // trim off query string\n                    var q = url.indexOf('?');\n                    if (q > 0) {\n                        url = url.substring(0, q);\n                    }\n                    sessionStorage.setItem(this.reroutePathKey, url);\n                    message = \"stashed postSigninRoute, \\\"\" + url + \"\\\", in browser storage\";\n                }\n            }\n            else {\n                sessionStorage.removeItem(this.reroutePathKey);\n                message = 'cleared postSigninRoute in browser storage';\n            }\n            this.logEvent((caller || 'caller') + \" \" + message + \".\");\n        }\n    };\n    /** Leave the app and open the signin dialog on IdentityServer */\n    AuthService.prototype.signin = function () {\n        this.logEvent(serviceName + '.signin() called');\n        // Get query params from the url for sending to IdentityServer as part of the 'state'\n        // it will send them back after signin on oidcUser.state\n        // Can't use router here - it's not ready yet\n        var search = window.location.search;\n        if (search.startsWith('?')) {\n            search = search.substring(1);\n        }\n        return this.execute('signin', this.oidcManager.signinRedirect({\n            extraQueryParams: {\n                sendto: 'signup',\n                cms: search\n            }\n        })).pipe(concatMap(function () { return NEVER; }));\n    };\n    /**\n     * Prepare to navigate the next time AuthUser changes\n     * which will be after IdentityServer returns its OIDC user\n     */\n    AuthService.prototype.navigateOnNextAuthUser = function () {\n        var _this = this;\n        this.authUser$.pipe(filter(function (authUser) { return !!authUser; }), first()).subscribe(function (authUser) {\n            _this.logEvent(serviceName + \".navigateForAuthUser() navigating with AuthUser, \\\"\" + getFullName(authUser) + \"\\\"\");\n            _this.navigateAfterSignIn(authUser);\n        });\n    };\n    /**\n     * Update the OIDC UserManager when called back after successful signin.\n     * @param [data] Always null from OidcCallbackComponent; has OIDC user data when mocked.\n     * @returns Terminating observable of the OIDC user\n     */\n    AuthService.prototype.signinRedirectCallback = function (data) {\n        var _this = this;\n        this.logEvent(serviceName + \".signinRedirectCallback() called with \" + (data ? '' : 'no') + \" data\");\n        // router not yet ready, so save requested url\n        var url = window.location.pathname;\n        this.setReroute(url, 'signinRedirectCallback');\n        this.navigateOnNextAuthUser();\n        if (!this.hasSignInState() && !data) {\n            // not really doing a redirect, so try to get current user\n            return this.execute('getUser', this.oidcManager.getUser().then(function (oidcUser) {\n                _this.logEvent(serviceName + \".signinRedirectCallback() called getUser() and got \" + oidcUser);\n                if (oidcUser && oidcUser.expires_in > 300) {\n                    // This triggers fetch of application AuthUser\n                    _this.oidcUserSubject.next(oidcUser);\n                }\n                else {\n                    // Jump out of the app to the signin page\n                    _this.signin();\n                }\n                return oidcUser;\n            }));\n        }\n        return this.execute('redirectCallback', this.oidcManager.signinRedirectCallback(data).then(function (oidcUser) {\n            _this.logEvent(serviceName + \".signinRedirectCallback() received OIDC User \" + oidcUser + \" from OIDC manager\");\n            // This triggers fetch of application AuthUser\n            _this.oidcUserSubject.next(oidcUser);\n            return oidcUser;\n        }));\n    };\n    /** Determine if we have stored state to match the url state.  If we don't, and we call\n     * oidcManager.signinRedirectCallback, we get \"no matching state found in storage\".  So don't do that. */\n    AuthService.prototype.hasSignInState = function () {\n        var url = window.location.href;\n        if (!url.includes(environment.oidcRedirectUri) || !url.includes('&state=')) {\n            return false;\n        }\n        var matches = url.match(/state=([^&#]*)/);\n        var state = matches && matches[1];\n        var stateData = state && window.localStorage && window.localStorage.getItem('oidc.' + state);\n        return !!stateData;\n    };\n    /**\n     * Leave the app, sign-out on IdentityServer, ... and return to signed-out page\n     * If IdentityServer handles sign-out, observable never completes so that\n     * current page is blocked while browser navigates to IdentityServer.\n     * If authenticated with signup token, clear oidcUser and navigate to signed-out page immediately\n     */\n    AuthService.prototype.signout = function () {\n        var _this = this;\n        this.logEvent(serviceName + '.signout() called');\n        this.oidcTokenService.clearSignupToken(serviceName + '.signout()');\n        this.iframeService.hide();\n        this.oidcUserSubject.pipe(first(), concatMap(function (oidcUser) {\n            if (oidcUser && oidcUser.state === OidcSignupUser.signupUserState) {\n                _this.oidcUserSubject.next(null); // also nulls the AuthUser\n                _this.router.navigate([WellKnownRoutes.SignedOut]);\n            }\n            else {\n                _this.setReroute(WellKnownRoutes.SignedOut, serviceName + '.signout()');\n                // start execution of IdentityServer signout ...\n                _this.execute('signout', _this.oidcManager.signoutRedirect());\n                // clear oidcUser after execute starts and before IdentityServer finishes.\n                _this.oidcUserSubject.next(null); // also nulls the AuthUser\n            }\n            return of();\n        })).subscribe(null, function (error) { return _this.errorsSubject.next(error); });\n        this.oidcUserSubject.next(null);\n    };\n    AuthService.prototype.authFailed = function (error) {\n        var reason = typeof error === 'string' ? error : !error ? '' : error.message ? error.message : error.toString();\n        this.errorsSubject.next(reason);\n        this.router.navigate([WellKnownRoutes.AuthFailed], { replaceUrl: true });\n    };\n    /**\n     * Navigate to an app page after successful signin.\n     * Which page depends on who the user is and whether the target route is in browser storage\n     * @param oidcUser signed in user\n     */\n    AuthService.prototype.navigateAfterSignIn = function (authUser) {\n        var routeUrl;\n        if (authUser) {\n            routeUrl = this.getReroute(serviceName + '.navigateAfterSignIn()');\n            if (routeUrl) {\n                this.clearReroute(serviceName + '.navigateAfterSignIn()');\n            }\n            // Administrators always start on the admin account list page ...\n            if (authUser.userRole === UserRole.Administrator) {\n                // ... unless deep linking into AdminAccountView for a particular companyId and userId\n                // Ex: ~/admin/account-view/14869218ca0645cea77d491325216e46/76d58284c1a04e3eb8080162c1bc45a9\n                if (!/\\/admin\\/account-view\\/[a-fA-F0-9]{32,}\\/[a-fA-F0-9]{32,}/.test(routeUrl)) {\n                    routeUrl = WellKnownRoutes.Admin;\n                }\n                this.logEvent(serviceName + \" routing Administrator to \\\"\" + routeUrl + \"\\\" after signin\");\n            }\n            else {\n                routeUrl = routeUrl || WellKnownRoutes.Dashboard;\n                this.logEvent(serviceName + \" routing regular user to \\\"\" + routeUrl + \"\\\" after signin\");\n            }\n        }\n        else {\n            // Not fully signed in. No place to go.\n            // Could be because of\n            this.logEvent(serviceName + \"'s AuthUser is null after signin\");\n            return;\n        }\n        this.router.navigateByUrl(routeUrl, { replaceUrl: true });\n    };\n    AuthService.prototype.execute = function (operationName, promise) {\n        var _this = this;\n        this.errorsSubject.next(null);\n        return from(promise.catch(function (error) {\n            // TODO: Should log errors to a server\n            _this.logger.error(\"\\\"\" + operationName + \"\\\" failed\", error);\n            _this.authFailed(error);\n            return null;\n        }));\n    };\n    /** Get the application authenticated user based on an OidcUser */\n    AuthService.prototype.getAuthUserFromOidcUser = function (oidcUser) {\n        var _this = this;\n        if (oidcUser) {\n            this.logEvent('fetch auth user from server based on OIDC user');\n            return this.authDataService.getAuthUser(oidcUser).pipe(\n            // scheduler ensures one tick, forcing async observation\n            // observeOn(asapScheduler),\n            catchError(function (error) {\n                var sub = (oidcUser.profile && oidcUser.profile.sub) || 'unknown';\n                var emsg = \"Error while getting AuthUser from server for oidcUser.sub=\" + sub + \".\";\n                _this.logger.error(emsg, error);\n                _this.logEvent(emsg);\n                _this.authFailed(error);\n                // Don't return error as that breaks subscriptions.\n                // Return null which clears the decks.\n                // authFailed() will take care of navigation.\n                return of(null);\n            }));\n        }\n        else {\n            this.logEvent('not fetching auth user because no OIDC user');\n            return of(null);\n        }\n    };\n    /**\n     * Get the OidcUser (not the application user) from the OidcManager.\n     * Diagnostic. Not used.\n     */\n    AuthService.prototype.getOidcUser = function () {\n        var _this = this;\n        return from(this.oidcManager.getUser()\n            .catch(function (error) {\n            // TODO: Should log on the server\n            // this.logger.error(`\"${operationName}\" failed`, error);\n            _this.errorsSubject.next(error.message ? error.message : error.toString());\n            return null;\n        }));\n    };\n    AuthService.ngInjectableDef = i0.defineInjectable({ factory: function AuthService_Factory() { return new AuthService(i0.inject(i1.AuthDataService), i0.inject(i2.LoggerService), i0.inject(i3.OidcManagerFactory), i0.inject(i4.OidcTokenService), i0.inject(i5.Router), i0.inject(i6.SessionDispatcher), i0.inject(i7.IframeService)); }, token: AuthService, providedIn: \"root\" });\n    return AuthService;\n}());\nexport { AuthService };\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, of } from 'rxjs';\r\nimport { GeolocationService } from './geolocation.service';\r\n/**\r\n * Find user's current geo location (Position) using browser's geoLocation feature\r\n */\r\n@Injectable() // providedIn not working, see GeolocationService\r\nexport class BrowserGeolocationService implements GeolocationService {\r\n  protected currentPositionSubject = new BehaviorSubject<Position>(null);\r\n  currentPosition$ = this.currentPositionSubject.asObservable();\r\n\r\n  update() {\r\n    if (navigator.geolocation) {\r\n      try {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          this.currentPositionSubject.next(position);\r\n        });\r\n      } catch (error) {\r\n        // do nothing\r\n      }\r\n    }\r\n  }\r\n}\r\n","var map = {\n\t\"@app/abandoned/abandoned.module.ngfactory\": [\n\t\t\"la8t\",\n\t\t21\n\t],\n\t\"@app/about-you/about-you.module.ngfactory\": [\n\t\t\"VsUi\",\n\t\t0,\n\t\t9\n\t],\n\t\"@app/account-view/account-view.module.ngfactory\": [\n\t\t\"Hr/G\",\n\t\t2,\n\t\t0,\n\t\t10\n\t],\n\t\"@app/admin-console/admin-console.module.ngfactory\": [\n\t\t\"ViXV\",\n\t\t2,\n\t\t0,\n\t\t11\n\t],\n\t\"@app/company-bank-info/company-bank-info.module.ngfactory\": [\n\t\t\"TrqF\",\n\t\t0,\n\t\t12\n\t],\n\t\"@app/company-info/company-info.module.ngfactory\": [\n\t\t\"KB4x\",\n\t\t3,\n\t\t0,\n\t\t13\n\t],\n\t\"@app/company-tax-info/company-tax-info.module.ngfactory\": [\n\t\t\"WHdS\",\n\t\t0,\n\t\t14\n\t],\n\t\"@app/dashboard/dashboard.module.ngfactory\": [\n\t\t\"uP/6\",\n\t\t15\n\t],\n\t\"@app/deductions/company/company-deductions.module.ngfactory\": [\n\t\t\"ASkv\",\n\t\t5,\n\t\t0,\n\t\t23\n\t],\n\t\"@app/deductions/employee/employee-deductions.module.ngfactory\": [\n\t\t\"goX7\",\n\t\t5,\n\t\t0,\n\t\t24\n\t],\n\t\"@app/documents/documents.module.ngfactory\": [\n\t\t\"TC9/\",\n\t\t0,\n\t\t18\n\t],\n\t\"@app/earnings/earnings.module.ngfactory\": [\n\t\t\"y4PW\",\n\t\t0,\n\t\t16\n\t],\n\t\"@app/employees/employees.module.ngfactory\": [\n\t\t\"9xIh\",\n\t\t3,\n\t\t4,\n\t\t0,\n\t\t17\n\t],\n\t\"@app/enrolled/enrolled.module.ngfactory\": [\n\t\t\"Vpq7\",\n\t\t0,\n\t\t20\n\t],\n\t\"@app/processing/processing.module.ngfactory\": [\n\t\t\"FYTE\",\n\t\t0,\n\t\t22\n\t],\n\t\"@app/review/review.module.ngfactory\": [\n\t\t\"Mxbm\",\n\t\t4,\n\t\t0,\n\t\t19\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"crnd\";\nmodule.exports = webpackAsyncContext;","export interface Code<T = any> {\r\n  displayName: string;\r\n  value: T;\r\n}\r\n\r\nexport class Codes<T = any> {\r\n  constructor(public codes: Code[]) {}\r\n\r\n  /** All of the code values */\r\n  get values() {\r\n    return this.codes.map(item => item.value);\r\n  }\r\n\r\n  /** All of the code display names */\r\n  get names() {\r\n    return this.codes.map(item => item.displayName);\r\n  }\r\n\r\n  /** Get the code object by its display name */\r\n  getByDisplayName(name: string) {\r\n    return name == null ? null : this.codes.find(item => item.displayName === name);\r\n  }\r\n\r\n  /** Get the code object by its value (the value of the property) */\r\n  getByValue(value: any) {\r\n    return value == null ? null : this.codes.find(item => item.value === value);\r\n  }\r\n\r\n  /** Get the code's display name, given the code value (AKA its \"code\")*/\r\n  getDisplayName(value: string) {\r\n    const code = this.getByValue(value);\r\n    return code ? code.displayName : '';\r\n  }\r\n\r\n  /** Get the code value, given the code's display name */\r\n  getValue(displayName: string) {\r\n    const code = this.getByDisplayName(displayName);\r\n    return code ? code.displayName : '';\r\n  }\r\n}\r\n","var Codes = /** @class */ (function () {\n    function Codes(codes) {\n        this.codes = codes;\n    }\n    Object.defineProperty(Codes.prototype, \"values\", {\n        /** All of the code values */\n        get: function () {\n            return this.codes.map(function (item) { return item.value; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Codes.prototype, \"names\", {\n        /** All of the code display names */\n        get: function () {\n            return this.codes.map(function (item) { return item.displayName; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Get the code object by its display name */\n    Codes.prototype.getByDisplayName = function (name) {\n        return name == null ? null : this.codes.find(function (item) { return item.displayName === name; });\n    };\n    /** Get the code object by its value (the value of the property) */\n    Codes.prototype.getByValue = function (value) {\n        return value == null ? null : this.codes.find(function (item) { return item.value === value; });\n    };\n    /** Get the code's display name, given the code value (AKA its \"code\")*/\n    Codes.prototype.getDisplayName = function (value) {\n        var code = this.getByValue(value);\n        return code ? code.displayName : '';\n    };\n    /** Get the code value, given the code's display name */\n    Codes.prototype.getValue = function (displayName) {\n        var code = this.getByDisplayName(displayName);\n        return code ? code.displayName : '';\n    };\n    return Codes;\n}());\nexport { Codes };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { of } from 'rxjs';\nimport { catchError, last, map } from 'rxjs/operators';\nvar ValidationError = /** @class */ (function () {\n    function ValidationError(key, context, validator) {\n        this.key = key;\n        this.context = context;\n        this.validator = validator;\n        if (!context) {\n            this.context = ((validator && validator.context) || {});\n        }\n    }\n    ValidationError.prototype.getErrorMessage = function (displayName) {\n        var ctx = __assign({}, this.context, { displayName: displayName || this.context.displayName || this.context.propertyName || '' });\n        return this.formatMessage(ctx.messageTemplate, ctx);\n    };\n    ValidationError.prototype.formatMessage = function (template, context) {\n        var _this = this;\n        return template\n            // replace tokens between % (e.g, %displayName%) with corresponding context property value.\n            ? template.replace(/%([\\w|\\.]+)%/g, function (match, p1) { return _this.getPropertyValue(context, p1); })\n            // Template is required. Getting here is a programmer error.\n            : ValidationError.genericErrorMessage;\n    };\n    ValidationError.prototype.getPropertyValue = function (context, path) {\n        var propertyPath = path && path.split('.');\n        var result = propertyPath && context\n            ? propertyPath.length === 1\n                ? context[propertyPath[0]]\n                : this.getPropertyValue(context[propertyPath[0]], propertyPath.slice(1).join('.'))\n            : '';\n        return result;\n    };\n    ValidationError.genericErrorMessage = 'Invalid value; contact customer support for assistance.';\n    return ValidationError;\n}());\nexport { ValidationError };\nvar ValidatorBase = /** @class */ (function () {\n    function ValidatorBase(name, group, context) {\n        this.name = name;\n        this.group = group;\n        this.context = context;\n        this.context = context || {};\n    }\n    ValidatorBase.prototype.getKey = function (context) {\n        var key = this.name;\n        if (this.group) {\n            key = key + \"_\" + this.group;\n        }\n        if (context && context.propertyName) {\n            key = key + \"_\" + context.propertyName;\n        }\n        return key;\n    };\n    ValidatorBase.prototype.getValidatorFunctionContext = function (value, context) {\n        if (!context) {\n            context = {};\n        }\n        return __assign({}, this.context, context, { displayName: context.displayName ||\n                this.context.displayName ||\n                context.propertyName ||\n                this.context.propertyName ||\n                '', value: value, validatorName: this.name });\n    };\n    return ValidatorBase;\n}());\nexport { ValidatorBase };\n/**\n * Validator whose synchronous validate method returns a boolean.\n */\nvar Validator = /** @class */ (function (_super) {\n    __extends(Validator, _super);\n    function Validator(name, group, validatorFn, context) {\n        var _this = _super.call(this, name, group, context) || this;\n        _this.validatorFn = validatorFn;\n        return _this;\n    }\n    /** Run this validator against the specified value.\n    @param value {Object} Value to validate\n    @param additionalContext {ValidationContext} Any additional contextual information that the Validator can make use of.\n    @return {ValidationError|null}  null if the value is valid; a ValidationError if the value fails validation.\n    */\n    Validator.prototype.validate = function (value, context) {\n        var ctx = this.getValidatorFunctionContext(value, context);\n        return this.validatorFn(value, ctx) ? null : new ValidationError(this.getKey(ctx), ctx, this);\n    };\n    return Validator;\n}(ValidatorBase));\nexport { Validator };\n/**\n * Validator whose validate method returns an observable boolean.\n * This observable is often asynchronous (as when validating on the server)\n * but could be synchronous (as any Observable can be).\n */\nvar AsyncValidator = /** @class */ (function (_super) {\n    __extends(AsyncValidator, _super);\n    function AsyncValidator(name, group, validatorFn, context) {\n        var _this = _super.call(this, name, group, context) || this;\n        _this.validatorFn = validatorFn;\n        return _this;\n    }\n    /** Run this validator against the specified value.\n    @param value {Object} Value to validate\n    @param additionalContext {ValidationContext} Any additional contextual information that the Validator can make use of.\n    @return {Observable<ValidationError | null>} A completing Observable of\n    null if the value is valid; a ValidationError if the value fails validation.\n    The observable must complete! If it emits multiple times, the last value is returned.\n    */\n    AsyncValidator.prototype.validate = function (value, context) {\n        var _this = this;\n        var ctx = this.getValidatorFunctionContext(value, context);\n        try {\n            return this.validatorFn(value, ctx).pipe(last(), map(function (isValid) { return isValid ? null : _this.genError(ctx); }), catchError(function (error) { return of(_this.genError(ctx)); }));\n        }\n        catch (error) {\n            return of(this.genError(ctx));\n        }\n    };\n    AsyncValidator.prototype.genError = function (ctx) {\n        return new ValidationError(this.getKey(ctx), ctx, this);\n    };\n    return AsyncValidator;\n}(ValidatorBase));\nexport { AsyncValidator };\n","import { Observable, of} from 'rxjs';\r\nimport { catchError, last, map } from 'rxjs/operators';\r\nimport { ModelMetadata } from './validation-metadata';\r\n\r\nexport interface ValidationContextBase {\r\n  messageTemplate: string;   // E.g. %displayName% is required\r\n  displayName?: string;\r\n  [propertyName: string]: any;\r\n}\r\n\r\nexport interface ValidationContext extends ValidationContextBase {\r\n  model: any;\r\n  modelType: string;\r\n  propertyName?: string;\r\n  metadata: ModelMetadata;\r\n  isClient: boolean;\r\n  isServer: boolean;\r\n}\r\n\r\nexport interface ValidatorFactory {\r\n  name: string;\r\n  fn: (group: string, context?: Partial<ValidationContextBase>) => Validator | AsyncValidator;\r\n}\r\n\r\nexport interface ValidatorFunctionContext extends ValidationContext {\r\n  value: any;\r\n  validatorName: string;\r\n}\r\n\r\n/**\r\n * Validate the value within a context containing a validation fn\r\n * @returns true if the value is valid; false if invalid.\r\n * Beware: validation framework evaluates result as truthy or falsy.\r\n */\r\nexport type ValidatorFunction = (value: any, context: ValidatorFunctionContext) => boolean;\r\n\r\n/**\r\n * Validate the value within a context containing a validation fn that returns an observable of boolean.\r\n * @returns Observable<true> if the value is valid; Observable<false> if invalid.\r\n * Beware: validation framework evaluates result as truthy or falsy.\r\n */\r\nexport type AsyncValidatorFunction = (value: any, context: ValidatorFunctionContext) => Observable<boolean>;\r\n\r\nexport class ValidationError {\r\n  constructor(readonly key: string, readonly context: ValidatorFunctionContext, readonly validator: ValidatorBase) {\r\n    if (!context) {\r\n      this.context = ((validator && validator.context) || {}) as ValidatorFunctionContext;\r\n    }\r\n  }\r\n\r\n  static genericErrorMessage = 'Invalid value; contact customer support for assistance.';\r\n\r\n  getErrorMessage(displayName?: string) {\r\n    const ctx = {\r\n      ...this.context,\r\n      displayName: displayName || this.context.displayName || this.context.propertyName || ''\r\n    };\r\n\r\n    return this.formatMessage(ctx.messageTemplate, ctx);\r\n  }\r\n\r\n  protected formatMessage(template: string, context: ValidationContext): string {\r\n    return template\r\n      // replace tokens between % (e.g, %displayName%) with corresponding context property value.\r\n      ? template.replace(/%([\\w|\\.]+)%/g, (match, p1) => this.getPropertyValue(context, p1))\r\n      // Template is required. Getting here is a programmer error.\r\n      : ValidationError.genericErrorMessage;\r\n  }\r\n\r\n  protected getPropertyValue(context: Partial<ValidationContext>, path: string): any {\r\n    const propertyPath = path && path.split('.');\r\n    const result =  propertyPath && context\r\n      ? propertyPath.length === 1\r\n        ? context[propertyPath[0]]\r\n        : this.getPropertyValue(context[propertyPath[0]], propertyPath.slice(1).join('.'))\r\n      : '';\r\n    return result;\r\n  }\r\n}\r\n\r\nexport abstract class ValidatorBase {\r\n  protected constructor(readonly name: string, readonly group: string, readonly context: ValidationContextBase) {\r\n    this.context = context || {} as ValidationContextBase;\r\n  }\r\n\r\n  protected getKey(context: ValidationContext): string {\r\n    let key = this.name;\r\n    if (this.group) {\r\n      key = `${key}_${this.group}`;\r\n    }\r\n    if (context && context.propertyName) {\r\n      key = `${key}_${context.propertyName}`;\r\n    }\r\n\r\n    return key;\r\n  }\r\n\r\n  protected getValidatorFunctionContext(value: any, context?: ValidationContext): ValidatorFunctionContext {\r\n    if (!context) {\r\n      context = {} as ValidationContext;\r\n    }\r\n\r\n    return {\r\n      ...this.context,\r\n      ...context,\r\n      displayName:\r\n        context.displayName ||\r\n        this.context.displayName ||\r\n        context.propertyName ||\r\n        this.context.propertyName ||\r\n        '',\r\n      value: value,\r\n      validatorName: this.name\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Validator whose synchronous validate method returns a boolean.\r\n */\r\nexport class Validator extends ValidatorBase {\r\n  constructor(name: string, group: string, private validatorFn: ValidatorFunction, context: ValidationContextBase) {\r\n    super(name, group, context);\r\n  }\r\n\r\n  /** Run this validator against the specified value.\r\n  @param value {Object} Value to validate\r\n  @param additionalContext {ValidationContext} Any additional contextual information that the Validator can make use of.\r\n  @return {ValidationError|null}  null if the value is valid; a ValidationError if the value fails validation.\r\n  */\r\n  validate(value: any, context?: ValidationContext): ValidationError | null {\r\n    const ctx = this.getValidatorFunctionContext(value, context);\r\n    return this.validatorFn(value, ctx) ? null : new ValidationError(this.getKey(ctx), ctx, this);\r\n  }\r\n}\r\n\r\n/**\r\n * Validator whose validate method returns an observable boolean.\r\n * This observable is often asynchronous (as when validating on the server)\r\n * but could be synchronous (as any Observable can be).\r\n */\r\nexport class AsyncValidator extends ValidatorBase {\r\n  constructor(name: string, group: string, private validatorFn: AsyncValidatorFunction, context: ValidationContextBase) {\r\n    super(name, group, context);\r\n  }\r\n\r\n  /** Run this validator against the specified value.\r\n  @param value {Object} Value to validate\r\n  @param additionalContext {ValidationContext} Any additional contextual information that the Validator can make use of.\r\n  @return {Observable<ValidationError | null>} A completing Observable of\r\n  null if the value is valid; a ValidationError if the value fails validation.\r\n  The observable must complete! If it emits multiple times, the last value is returned.\r\n  */\r\n  validate(value: any, context?: ValidationContext): Observable<ValidationError | null> {\r\n    const ctx = this.getValidatorFunctionContext(value, context);\r\n\r\n    try {\r\n      return this.validatorFn(value, ctx).pipe(\r\n        last(),\r\n        map(isValid => isValid ? null : this.genError(ctx)),\r\n        catchError(error => of(this.genError(ctx)))\r\n      );\r\n    } catch (error) {\r\n      return of(this.genError(ctx));\r\n    }\r\n  }\r\n\r\n  private genError(ctx?: ValidatorFunctionContext) {\r\n    return new ValidationError(this.getKey(ctx), ctx, this);\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { first, map } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\nimport { WellKnownRoutes } from '@core';\r\n/**\r\n * Guard a page that must be authenticated but is not tied to the Current Account\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class AdminConsoleGuard implements CanActivate, CanActivateChild {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.canActivate$('canActivate', route, state);\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.canActivate$('canActivateChild', route, state);\r\n  }\r\n\r\n  private canActivate$(method: string, route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return combineLatest(\r\n      this.authService.isAdmin$,\r\n      this.authService.isSignedIn$\r\n    ).pipe(\r\n      map(([isAdmin, isSignedIn]) => {\r\n        const caller = 'AdminConsoleGuard.' + method;\r\n\r\n        if (isSignedIn) {\r\n          this.authService.logEvent(`${caller} sees user is signed in`);\r\n          if (isAdmin) {\r\n            return true; // signed-in Admins can see the admin console\r\n          } else {\r\n            this.authService.logEvent(`${caller} re-routing non-Admin user from admin console to dashboard`);\r\n            this.router.navigate([WellKnownRoutes.Dashboard], { replaceUrl: true });\r\n            return false; // regular user can't see the admin console\r\n          }\r\n        } else {\r\n          this.authService.logEvent(`${caller} sees user is not signed in`);\r\n          this.authService.setReroute(state.url, '${caller}');\r\n          this.authService.logEvent(`${caller} called AuthService.signin()`);\r\n          this.authService.signin(); // re-navigates to signin page\r\n          return false; // not signed in.\r\n        }\r\n      }),\r\n      first()\r\n    );\r\n  }\r\n}\r\n","import { Router } from '@angular/router';\nimport { combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\nimport { AuthService } from '@core/services/auth-services/auth.service';\nimport { WellKnownRoutes } from '@core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth-services/auth.service\";\nimport * as i2 from \"@angular/router\";\n/**\n * Guard a page that must be authenticated but is not tied to the Current Account\n */\nvar AdminConsoleGuard = /** @class */ (function () {\n    function AdminConsoleGuard(authService, router) {\n        this.authService = authService;\n        this.router = router;\n    }\n    AdminConsoleGuard.prototype.canActivate = function (route, state) {\n        return this.canActivate$('canActivate', route, state);\n    };\n    AdminConsoleGuard.prototype.canActivateChild = function (route, state) {\n        return this.canActivate$('canActivateChild', route, state);\n    };\n    AdminConsoleGuard.prototype.canActivate$ = function (method, route, state) {\n        var _this = this;\n        return combineLatest(this.authService.isAdmin$, this.authService.isSignedIn$).pipe(map(function (_a) {\n            var isAdmin = _a[0], isSignedIn = _a[1];\n            var caller = 'AdminConsoleGuard.' + method;\n            if (isSignedIn) {\n                _this.authService.logEvent(caller + \" sees user is signed in\");\n                if (isAdmin) {\n                    return true; // signed-in Admins can see the admin console\n                }\n                else {\n                    _this.authService.logEvent(caller + \" re-routing non-Admin user from admin console to dashboard\");\n                    _this.router.navigate([WellKnownRoutes.Dashboard], { replaceUrl: true });\n                    return false; // regular user can't see the admin console\n                }\n            }\n            else {\n                _this.authService.logEvent(caller + \" sees user is not signed in\");\n                _this.authService.setReroute(state.url, '${caller}');\n                _this.authService.logEvent(caller + \" called AuthService.signin()\");\n                _this.authService.signin(); // re-navigates to signin page\n                return false; // not signed in.\n            }\n        }), first());\n    };\n    AdminConsoleGuard.ngInjectableDef = i0.defineInjectable({ factory: function AdminConsoleGuard_Factory() { return new AdminConsoleGuard(i0.inject(i1.AuthService), i0.inject(i2.Router)); }, token: AdminConsoleGuard, providedIn: \"root\" });\n    return AdminConsoleGuard;\n}());\nexport { AdminConsoleGuard };\n","import { Injectable } from '@angular/core';\r\nimport { empty, Observable, of } from 'rxjs';\r\n\r\nimport { AddressLike } from '@utils';\r\nimport { GooglePlacesService } from './google-places.service';\r\n/**\r\n * Look up addresses using a geo API\r\n * Noop version and the service's DI token\r\n * See GooglePlacesService.\r\n */\r\n/**\r\n * Find user's current geo location (Position)\r\n * Noop version and the service's DI token\r\n */\r\n@Injectable() // can't use providedIn\r\nexport class AddressFinderService {\r\n  /**\r\n   * Get address that user picked from address finder service.\r\n   * It is rarely as simple as returning information that the finder service has cached locally.\r\n   * The picked item is typically just a string and the service (e.g, Google Places)\r\n   * makes a call back to its server to retrieve address data.\r\n   * That call takes an unpredictable amount of time and can fail.\r\n   * @param input {HTMLInputElement} input element where user enters address.\r\n   * The FinderService listens for changes to that element and builds its picklist\r\n   * based on the user's keystrokes.\r\n   */\r\n  getAutocompleteAddress(inputEl: HTMLInputElement): Observable<AddressLike> {\r\n    return empty();\r\n  }\r\n\r\n  /** Load the library that supports this service */\r\n  loadLibrary(): void {}\r\n\r\n  /**\r\n   * Disable the browser's built-in autocomplete for the given element.\r\n   * @param inputEl {HTMLInputElement} input element where user enters address.\r\n   */\r\n  disableBrowserAutocomplete(inputEl: HTMLInputElement) {}\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { USStateCodes } from '@model/codes-enums';\r\n\r\n// Transform an address object into a single line of text\r\n@Pipe({ name: 'stateName', pure: true })\r\nexport class StateNamePipe implements PipeTransform {\r\n  transform(stateCode: string, ...args: any[]) {\r\n    return USStateCodes.getDisplayName((stateCode || '').toUpperCase()) || 'missing or invalid';\r\n  }\r\n}\r\n","import { PipeTransform } from '@angular/core';\nimport { USStateCodes } from '@model/codes-enums';\n// Transform an address object into a single line of text\nvar StateNamePipe = /** @class */ (function () {\n    function StateNamePipe() {\n    }\n    StateNamePipe.prototype.transform = function (stateCode) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return USStateCodes.getDisplayName((stateCode || '').toUpperCase()) || 'missing or invalid';\n    };\n    return StateNamePipe;\n}());\nexport { StateNamePipe };\n","export interface FirstLastType {\r\n  firstName: string;\r\n  lastName: string;\r\n}\r\n\r\n/** Sort Comparer to sort the entity collection by its name property */\r\nexport function sortByName(a: { name: string }, b: { name: string }): number {\r\n  try {\r\n    return a.name.localeCompare(b.name);\r\n  } catch (error) {\r\n    return 0;\r\n  }\r\n}\r\n\r\n/** Sort Comparer to sort the entity collection by its name property */\r\nexport function sortByFirstLast(a: FirstLastType, b: FirstLastType): number {\r\n  try {\r\n    const first = a.firstName.localeCompare(b.firstName);\r\n    return first === 0 ? a.lastName.localeCompare(b.lastName) : first;\r\n  } catch (error) {\r\n    return 0;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { combineLatest, ReplaySubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { EntityInfo, EntitySelectors } from '@entity/entity-selectors';\r\n\r\n// TODO: this service can be used to manually trigger validations.\r\n// Its needed to trigger validation after taxes buildup or potentially other none store stateful data services.\r\n@Injectable({ providedIn: 'root' })\r\nexport class ValidationTriggerService {\r\n    private triggerValidationsSubject = new ReplaySubject(1);\r\n    public triggerValidations$: Observable<EntityInfo[]>;\r\n\r\n    constructor(private entitySelectors: EntitySelectors) {\r\n        this.triggerValidations$ = combineLatest(\r\n            this.triggerValidationsSubject,\r\n            this.entitySelectors.entityInfos$\r\n        ).pipe(\r\n            map(([_, entities]) => entities)\r\n        );\r\n\r\n        this.triggerValidationsSubject.next();\r\n    }\r\n\r\n    public validate() {\r\n        this.triggerValidationsSubject.next();\r\n    }\r\n}\r\n","import { combineLatest, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EntitySelectors } from '@entity/entity-selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../entity/entity-selectors\";\n// TODO: this service can be used to manually trigger validations.\n// Its needed to trigger validation after taxes buildup or potentially other none store stateful data services.\nvar ValidationTriggerService = /** @class */ (function () {\n    function ValidationTriggerService(entitySelectors) {\n        this.entitySelectors = entitySelectors;\n        this.triggerValidationsSubject = new ReplaySubject(1);\n        this.triggerValidations$ = combineLatest(this.triggerValidationsSubject, this.entitySelectors.entityInfos$).pipe(map(function (_a) {\n            var _ = _a[0], entities = _a[1];\n            return entities;\n        }));\n        this.triggerValidationsSubject.next();\n    }\n    ValidationTriggerService.prototype.validate = function () {\n        this.triggerValidationsSubject.next();\n    };\n    ValidationTriggerService.ngInjectableDef = i0.defineInjectable({ factory: function ValidationTriggerService_Factory() { return new ValidationTriggerService(i0.inject(i1.EntitySelectors)); }, token: ValidationTriggerService, providedIn: \"root\" });\n    return ValidationTriggerService;\n}());\nexport { ValidationTriggerService };\n","export * from './e2e-check';\r\nexport * from './guid-fns';\r\n// do not export routing guards as this promotes circular references\r\nexport * from './saver';\r\nexport * from './services';\r\nexport * from './sp-route-reuse-strategy';\r\nexport * from './utils';\r\nexport * from './well-known-routes';\r\nexport * from './window';\r\n\r\nexport { CoreModule } from './core.module';\r\n","import {\r\n  Component, Input, Output, EventEmitter, ContentChildren,\r\n  OnDestroy, forwardRef, AfterViewInit, OnInit, Optional, Directive,\r\n  HostListener, AfterContentInit, Renderer2, ElementRef, ViewContainerRef, ViewChild\r\n} from '@angular/core';\r\nimport { RadioButtonComponent } from './radio-button.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ModelComponent } from '../model.component';\r\n\r\n@Directive({\r\n  selector: '[spRadioGroupValueAccessor]',\r\n  providers: [\r\n    { provide: NG_VALUE_ACCESSOR, useExisting: RadioGroupValueAccessorDirective, multi: true }\r\n  ]\r\n})\r\nexport class RadioGroupValueAccessorDirective implements AfterViewInit, OnDestroy, ControlValueAccessor {\r\n\r\n  private subscriptions: Subscription[] = [];\r\n  private disabled = false;\r\n  private accessorOnChange = (...args: any[]) => { };\r\n  private accessorOnTouched = (...args: any[]) => { };\r\n  private currentValue: string;\r\n\r\n  @Input() radioButtons: RadioButtonComponent[];\r\n  @Input() name: string;\r\n  @Output() modelChange = new EventEmitter();\r\n\r\n  writeValue(val: any) {\r\n    this.currentValue = val;\r\n    this.syncUiState(val);\r\n    this.modelChange.emit(val);\r\n  }\r\n  registerOnChange(fn: (_: any) => void) {\r\n    this.accessorOnChange = fn;\r\n  }\r\n  registerOnTouched(fn: (_: any) => void) {\r\n    this.accessorOnTouched = fn;\r\n  }\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  @HostListener('blur')\r\n  blur() {\r\n    this.accessorOnTouched();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.cleanUp();\r\n    // setTimeout: hack to avoid: ExpressionChangedAfterItHasBeenCheckedError\r\n    // https://github.com/angular/angular/issues/17572#issuecomment-309229619\r\n    setTimeout(() => {\r\n      if (this.radioButtons) {\r\n        this.radioButtons.forEach(\r\n          rb => {\r\n            rb.name = this.name; // propagate name\r\n            const sub1 = rb.valueChange.subscribe((v: any) => this.valueChanged(v));\r\n            this.subscriptions.push(sub1);\r\n          });\r\n      }\r\n      this.syncUiState(this.currentValue);\r\n    }, 0);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.cleanUp();\r\n  }\r\n\r\n  private valueChanged(v: any) {\r\n    this.currentValue = v;\r\n    this.accessorOnChange(this.currentValue);\r\n    this.syncUiState(this.currentValue);\r\n  }\r\n  private cleanUp() {\r\n    this.subscriptions.forEach(s => s.unsubscribe());\r\n    this.subscriptions.splice(0, this.subscriptions.length);\r\n  }\r\n\r\n  /** Sync UI with respect to model changes if needed: propagate state to children */\r\n  private syncUiState(val: any): void {\r\n    if (!this.radioButtons) {\r\n      return;\r\n    }\r\n    this.radioButtons.forEach(rb => rb.selectedValue = val);\r\n  }\r\n}\r\n\r\nconst CLICK_THRESHOLD = 150; // ms\r\n\r\n@Component({\r\n  selector: 'sp-radio-group',\r\n  templateUrl: './radio-group.component.html'\r\n})\r\nexport class RadioGroupComponent implements OnInit {\r\n  static nameCounter = 0;\r\n\r\n  @Input() label: string;\r\n  @Input() name: string;\r\n  @Input() propertyName: string;\r\n  @Input() tooltip = false;\r\n  @Output() change = new EventEmitter<string>();\r\n  @ViewChild('tooltipButton') tooltipButton: any;\r\n  @ViewChild('root') root: any;\r\n\r\n  @Input() set group(value: string) { this._group = value; }\r\n  private _group: string;\r\n  @Input() set model(value: any) { this._model = value; }\r\n  private _model: any;\r\n  @Input() set modelType(value: string) { this._modelType = value; }\r\n  private _modelType: string;\r\n\r\n  @ContentChildren(RadioButtonComponent) radioButtons: RadioButtonComponent[];\r\n\r\n  private currentValue: string;\r\n  open = false;\r\n  tClose = 0;\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    private viewContainer: ViewContainerRef,\r\n    @Optional() public modelContext?: ModelComponent\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.name = (this.name || '') + '$' + RadioGroupComponent.nameCounter++;\r\n  }\r\n\r\n  /** Get the latest data-bound group. If not bound, get group from modelContext. */\r\n  get group(): string {\r\n    return this._group || (this.modelContext && this.modelContext.group);\r\n  }\r\n\r\n  /** Get the latest data-bound model. If not bound, get model from modelContext. */\r\n  get model(): any {\r\n    return this._model || (this.modelContext && this.modelContext.model);\r\n  }\r\n\r\n  /** Get the latest data-bound model type. If not bound, get model type from modelContext. */\r\n  get modelType(): string {\r\n    return this._modelType || (this.modelContext && this.modelContext.modelType);\r\n  }\r\n\r\n  openTooltip() {\r\n    const d = Date.now() - this.tClose;\r\n    if (d < CLICK_THRESHOLD) {\r\n      return;\r\n    }\r\n    if (!this.open) {\r\n      const myRoot = this.root.nativeElement;\r\n      // give some millisecs to open the tooltip-div\r\n      this.open = true;\r\n      setTimeout(() => {\r\n        const tooltipDiv = myRoot.querySelector('#tooltipZone') as HTMLDivElement;\r\n        if (tooltipDiv) {\r\n          tooltipDiv.focus();\r\n        }\r\n      });\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n  openKeypress(event: any) {\r\n    if (event.charCode === 13 || event.charCode === 32) {\r\n      // intro or space\r\n      this.openTooltip();\r\n    }\r\n  }\r\n\r\n  closeTooltip() {\r\n    this.tClose = Date.now();\r\n    this.open = false;\r\n    this.tooltipButton.nativeElement.focus();\r\n  }\r\n\r\n  closeKeypress(event: any) {\r\n    if (event.charCode === 13 || event.charCode === 32) {\r\n      // intro or escape or space\r\n      this.closeTooltip();\r\n    }\r\n  }\r\n\r\n  getValue(): string {\r\n    if (this.model && this.modelType && this.propertyName) {\r\n      return this.model[this.propertyName];\r\n    }\r\n\r\n    return this.currentValue;\r\n  }\r\n\r\n  setValue(value: string): void {\r\n    if (this.model && this.modelType && this.propertyName) {\r\n      this.model[this.propertyName] = value;\r\n    }\r\n\r\n    this.currentValue = value;\r\n    if (this.modelContext) {\r\n      this.modelContext.notifyOfModelChange();\r\n    }\r\n    this.change.emit(this.currentValue);\r\n  }\r\n\r\n}\r\n","import { EventEmitter, OnDestroy, AfterViewInit, OnInit, Renderer2, ElementRef, ViewContainerRef } from '@angular/core';\nimport { RadioButtonComponent } from './radio-button.component';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { ModelComponent } from '../model.component';\nvar RadioGroupValueAccessorDirective = /** @class */ (function () {\n    function RadioGroupValueAccessorDirective() {\n        this.subscriptions = [];\n        this.disabled = false;\n        this.accessorOnChange = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n        };\n        this.accessorOnTouched = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n        };\n        this.modelChange = new EventEmitter();\n    }\n    RadioGroupValueAccessorDirective.prototype.writeValue = function (val) {\n        this.currentValue = val;\n        this.syncUiState(val);\n        this.modelChange.emit(val);\n    };\n    RadioGroupValueAccessorDirective.prototype.registerOnChange = function (fn) {\n        this.accessorOnChange = fn;\n    };\n    RadioGroupValueAccessorDirective.prototype.registerOnTouched = function (fn) {\n        this.accessorOnTouched = fn;\n    };\n    RadioGroupValueAccessorDirective.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    RadioGroupValueAccessorDirective.prototype.blur = function () {\n        this.accessorOnTouched();\n    };\n    RadioGroupValueAccessorDirective.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this.cleanUp();\n        // setTimeout: hack to avoid: ExpressionChangedAfterItHasBeenCheckedError\n        // https://github.com/angular/angular/issues/17572#issuecomment-309229619\n        setTimeout(function () {\n            if (_this.radioButtons) {\n                _this.radioButtons.forEach(function (rb) {\n                    rb.name = _this.name; // propagate name\n                    var sub1 = rb.valueChange.subscribe(function (v) { return _this.valueChanged(v); });\n                    _this.subscriptions.push(sub1);\n                });\n            }\n            _this.syncUiState(_this.currentValue);\n        }, 0);\n    };\n    RadioGroupValueAccessorDirective.prototype.ngOnDestroy = function () {\n        this.cleanUp();\n    };\n    RadioGroupValueAccessorDirective.prototype.valueChanged = function (v) {\n        this.currentValue = v;\n        this.accessorOnChange(this.currentValue);\n        this.syncUiState(this.currentValue);\n    };\n    RadioGroupValueAccessorDirective.prototype.cleanUp = function () {\n        this.subscriptions.forEach(function (s) { return s.unsubscribe(); });\n        this.subscriptions.splice(0, this.subscriptions.length);\n    };\n    /** Sync UI with respect to model changes if needed: propagate state to children */\n    RadioGroupValueAccessorDirective.prototype.syncUiState = function (val) {\n        if (!this.radioButtons) {\n            return;\n        }\n        this.radioButtons.forEach(function (rb) { return rb.selectedValue = val; });\n    };\n    return RadioGroupValueAccessorDirective;\n}());\nexport { RadioGroupValueAccessorDirective };\nvar CLICK_THRESHOLD = 150; // ms\nvar RadioGroupComponent = /** @class */ (function () {\n    function RadioGroupComponent(renderer, elementRef, viewContainer, modelContext) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.viewContainer = viewContainer;\n        this.modelContext = modelContext;\n        this.tooltip = false;\n        this.change = new EventEmitter();\n        this.open = false;\n        this.tClose = 0;\n    }\n    Object.defineProperty(RadioGroupComponent.prototype, \"group\", {\n        /** Get the latest data-bound group. If not bound, get group from modelContext. */\n        get: function () {\n            return this._group || (this.modelContext && this.modelContext.group);\n        },\n        set: function (value) { this._group = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadioGroupComponent.prototype, \"model\", {\n        /** Get the latest data-bound model. If not bound, get model from modelContext. */\n        get: function () {\n            return this._model || (this.modelContext && this.modelContext.model);\n        },\n        set: function (value) { this._model = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadioGroupComponent.prototype, \"modelType\", {\n        /** Get the latest data-bound model type. If not bound, get model type from modelContext. */\n        get: function () {\n            return this._modelType || (this.modelContext && this.modelContext.modelType);\n        },\n        set: function (value) { this._modelType = value; },\n        enumerable: true,\n        configurable: true\n    });\n    RadioGroupComponent.prototype.ngOnInit = function () {\n        this.name = (this.name || '') + '$' + RadioGroupComponent.nameCounter++;\n    };\n    RadioGroupComponent.prototype.openTooltip = function () {\n        var d = Date.now() - this.tClose;\n        if (d < CLICK_THRESHOLD) {\n            return;\n        }\n        if (!this.open) {\n            var myRoot_1 = this.root.nativeElement;\n            // give some millisecs to open the tooltip-div\n            this.open = true;\n            setTimeout(function () {\n                var tooltipDiv = myRoot_1.querySelector('#tooltipZone');\n                if (tooltipDiv) {\n                    tooltipDiv.focus();\n                }\n            });\n        }\n        else {\n            this.open = false;\n        }\n    };\n    RadioGroupComponent.prototype.openKeypress = function (event) {\n        if (event.charCode === 13 || event.charCode === 32) {\n            // intro or space\n            this.openTooltip();\n        }\n    };\n    RadioGroupComponent.prototype.closeTooltip = function () {\n        this.tClose = Date.now();\n        this.open = false;\n        this.tooltipButton.nativeElement.focus();\n    };\n    RadioGroupComponent.prototype.closeKeypress = function (event) {\n        if (event.charCode === 13 || event.charCode === 32) {\n            // intro or escape or space\n            this.closeTooltip();\n        }\n    };\n    RadioGroupComponent.prototype.getValue = function () {\n        if (this.model && this.modelType && this.propertyName) {\n            return this.model[this.propertyName];\n        }\n        return this.currentValue;\n    };\n    RadioGroupComponent.prototype.setValue = function (value) {\n        if (this.model && this.modelType && this.propertyName) {\n            this.model[this.propertyName] = value;\n        }\n        this.currentValue = value;\n        if (this.modelContext) {\n            this.modelContext.notifyOfModelChange();\n        }\n        this.change.emit(this.currentValue);\n    };\n    RadioGroupComponent.nameCounter = 0;\n    return RadioGroupComponent;\n}());\nexport { RadioGroupComponent };\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sp-accordion',\r\n  templateUrl: './accordion.component.html'\r\n})\r\nexport class AccordionComponent {\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input()\r\n  icon: string;\r\n\r\n  private _expanded = false;\r\n  @Input()\r\n  get expanded(): boolean {\r\n    return this._expanded;\r\n  }\r\n  set expanded(val: boolean) {\r\n    this._expanded = val;\r\n    this.expandedChange.emit(val);\r\n  }\r\n  @Output() expandedChange = new EventEmitter<boolean>();\r\n\r\n  constructor() {\r\n  }\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n}\r\n","import { EventEmitter } from '@angular/core';\nvar AccordionComponent = /** @class */ (function () {\n    function AccordionComponent() {\n        this._expanded = false;\n        this.expandedChange = new EventEmitter();\n    }\n    Object.defineProperty(AccordionComponent.prototype, \"expanded\", {\n        get: function () {\n            return this._expanded;\n        },\n        set: function (val) {\n            this._expanded = val;\n            this.expandedChange.emit(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AccordionComponent.prototype.toggle = function () {\n        this.expanded = !this.expanded;\n    };\n    return AccordionComponent;\n}());\nexport { AccordionComponent };\n","export interface DateInfo {\r\n  year: number;\r\n  month: number;\r\n  day: number;\r\n}\r\n\r\nconst maxValueMonth = [31, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // [ Dec Jan ... Dec ] /13\r\n\r\nexport class DateUtil {\r\n  /** Recognizes ISO, and US-locale dates */\r\n  public static isValidDate(text: string): boolean {\r\n    if (!text) {\r\n      return false;\r\n    }\r\n    const parsed = DateUtil.parseDate(text);\r\n    if (!parsed) {\r\n      return false;\r\n    }\r\n    return isValidCalendarDate(parsed);\r\n  }\r\n  public static parseDate(o: string): DateInfo {\r\n    let match: RegExpMatchArray;\r\n    let d: DateInfo = null;\r\n    if (match = o.match(/^(\\d{4}|\\d{2})\\s*-\\s*(\\d{2}|\\d{1})\\s*-\\s*(\\d{2}|\\d{1})$/)) {\r\n      d = { year: +match[1], month: +match[2], day: +match[3] };\r\n    // tslint:disable-next-line:max-line-length\r\n    } else if (match = o.match(/^(\\d{4})\\D?(0[1-9]|1[0-2])\\D?([12]\\d|0[1-9]|3[01])(\\D?([01]\\d|2[0-3])\\D?([0-5]\\d)\\D?([0-5]\\d)?\\D?(\\d{3})?([zZ]|([\\+-])([01]\\d|2[0-3])\\D?([0-5]\\d)?)?)?$/)) {\r\n      d = { year: +match[1], month: +match[2], day: +match[3] };\r\n    } else if (match = o.match(/^(\\d{1,2})\\s*[\\/-]\\s*(\\d{1,2})\\s*[\\/-]\\s*(\\d{4}|\\d{2})$/)) {\r\n      // CASE 3: MM/dd/yyyy - US style dates\r\n      d = { year: +match[3], month: +match[1], day: +match[2] };\r\n    } else if (match = o.match(/^(\\d{1,2})(\\d{2})(\\d{2,4})$/)) {\r\n      // CASE 4: MMddyy[yy] - US style dates (8 digit strict), no separators\r\n      d = { year: +match[3], month: +match[1], day: +match[2] };\r\n    } else if (match = o.match(/^(\\d{1,2})\\s+(\\d{1,2})\\s+(\\d{2,4})$/)) {\r\n      // CASE 5: M d yy[yy] - US style dates, separator: space\r\n      d = { year: +match[3], month: +match[1], day: +match[2] };\r\n    }\r\n    if (d) {\r\n      d.year = completeYear(d.year);\r\n    }\r\n    return d;\r\n  }\r\n  public static renderAsUSLocale(d: DateInfo): string {\r\n    return pad(d.month) + '/' + pad(d.day)  + '/' + d.year;\r\n  }\r\n  public static toISOChicago(usDateTxt: string): string {\r\n    if (DateUtil.isValidDate(usDateTxt)) {\r\n      const d = DateUtil.parseDate(usDateTxt);\r\n      return  d.year + '-' +\r\n              pad(d.month) + '-' +\r\n              pad(d.day)  +\r\n              'T17:00:00.000Z'; // 12am at Chicago timezone\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public static dateToUsLocale(dateVal: string): string {\r\n    if (!DateUtil.isValidDate(dateVal)) {\r\n      return dateVal; // preserve incomplete value\r\n    }\r\n    const d = DateUtil.parseDate(dateVal);\r\n    if (d) {\r\n      return DateUtil.renderAsUSLocale(d);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction pad(n: number): string {\r\n  const val = n.toString();\r\n  if (val.length === 1) {\r\n    return '0' + val;\r\n  }\r\n  return val;\r\n}\r\nfunction isValidCalendarDate(d: DateInfo): boolean {\r\n  if (!d.year || d.year < 0 || d.year > 2100 ) {\r\n    return false;\r\n  }\r\n  if (!d.month || d.month < 1 || d.month > 12 ) {\r\n    return false;\r\n  }\r\n  let validMaxDayInMonth = maxValueMonth[d.month];\r\n  if (d.month === 2 && !isLeapYear(d.year)) {\r\n    validMaxDayInMonth = 28;\r\n  }\r\n  if (!d.day || d.day < 1 || d.day > validMaxDayInMonth) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction isLeapYear(year: number): boolean {\r\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\r\n}\r\nfunction completeYear(year: number): number {\r\n  if (!year && year !== 0) {\r\n    return year;\r\n  }\r\n  if (year < 30) {\r\n    return (2000 + year); // assume XXI century\r\n  }\r\n  if (year < 100) {\r\n    return (1900 + year);  // assume XX century\r\n  }\r\n  return year;  // unable to complete\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TaxTypeCode } from '@model';\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\nimport { CurrentCompanyEntityCollectionService } from './current-company-entity-collection-service';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./company-entity-helper.service\";\nvar CompanyTaxService = /** @class */ (function (_super) {\n    __extends(CompanyTaxService, _super);\n    function CompanyTaxService(helper) {\n        var _this = _super.call(this, 'CompanyTax', helper) || this;\n        _this.helper = helper;\n        _this.federalTaxes$ = _this.entities$.pipe(map(function (taxes) { return taxes.filter(function (e) { return e.taxTypeCode === TaxTypeCode.Federal; }); }));\n        _this.stateTaxes$ = _this.entities$.pipe(map(function (taxes) { return taxes.filter(function (e) { return e.taxTypeCode === TaxTypeCode.State; }); }));\n        _this.stateAndLocalTaxes$ = _this.entities$.pipe(map(function (taxes) { return taxes.filter(function (e) { return e.taxTypeCode !== TaxTypeCode.Federal; }); }));\n        return _this;\n    }\n    CompanyTaxService.ngInjectableDef = i0.defineInjectable({ factory: function CompanyTaxService_Factory() { return new CompanyTaxService(i0.inject(i1.CompanyEntityHelperService)); }, token: CompanyTaxService, providedIn: \"root\" });\n    return CompanyTaxService;\n}(CurrentCompanyEntityCollectionService));\nexport { CompanyTaxService };\n","import { Injectable } from '@angular/core';\r\n\r\nimport { CompanyTax, TaxTypeCode } from '@model';\r\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\r\nimport { CurrentCompanyEntityCollectionService } from './current-company-entity-collection-service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CompanyTaxService extends CurrentCompanyEntityCollectionService<CompanyTax> {\r\n  constructor(protected helper: CompanyEntityHelperService) {\r\n    super('CompanyTax', helper);\r\n  }\r\n\r\n  federalTaxes$ = this.entities$.pipe(\r\n    map(taxes => taxes.filter(e => e.taxTypeCode === TaxTypeCode.Federal))\r\n  );\r\n\r\n  stateTaxes$ = this.entities$.pipe(\r\n    map(taxes => taxes.filter(e => e.taxTypeCode === TaxTypeCode.State))\r\n  );\r\n\r\n  stateAndLocalTaxes$ = this.entities$.pipe(\r\n    map(taxes => taxes.filter(e => e.taxTypeCode !== TaxTypeCode.Federal))\r\n  );\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '@environment';\r\n\r\nimport { combineLatest, EMPTY, interval, Observable, of, ReplaySubject } from 'rxjs';\r\nimport { filter, map, skipWhile, take } from 'rxjs/operators';\r\n\r\nimport { getFullName } from '@core/utils';\r\nimport { LoggerService } from '@core/services/logger.service';\r\nimport { SessionService } from '@session';\r\n\r\nconst chatConfig = environment.chatConfig;\r\n\r\ndeclare global {\r\n  interface Window {\r\n    liveagent?: any;\r\n    _laq?: any[];\r\n  }\r\n}\r\n\r\nlet chatInstalled = false;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n\r\n  private chatAgentSubject = new ReplaySubject<any>(1);\r\n  /** Terminating observable that emits the chat's \"liveagent\" when it becomes available and a regular user is signed in. */\r\n  chatAgent$ = this.chatAgentSubject.asObservable();\r\n\r\n  constructor(private logger: LoggerService, private sessionService: SessionService) {\r\n    const chatAgentLoaded$ = this.loadChatLibrary();\r\n\r\n    const currentUser$ = this.sessionService.currentUser$.pipe(\r\n      // only consider a \"real\" user (not an Admin)\r\n      filter(currentUser => currentUser != null)\r\n    );\r\n\r\n    combineLatest(\r\n      currentUser$,\r\n      chatAgentLoaded$\r\n    )\r\n    // Chat liveagent only allows one initialization with one email\r\n    .pipe(take(1))\r\n    .subscribe(\r\n      ([firstUser, agent]) => {\r\n        if (agent) {\r\n          agent.init(chatConfig.CHAT_URL, chatConfig.DEPLOYMENT_ID, chatConfig.ORGANIZATION_ID);\r\n          const name = getFullName(firstUser);\r\n          const email = firstUser.email;\r\n          let msg: string;\r\n          if (email) {\r\n            agent.addCustomDetail('Email', email, true);\r\n            msg = `Chat enabled for user \"${name}\" with email \"${email}\".`;\r\n          } else {\r\n            msg = `Chat enabled for user \"${name}\" who does not have email.`;\r\n          }\r\n          this.chatAgentSubject.next(agent);\r\n          if (chatConfig.TRACING) {\r\n            this.logger.log(msg);\r\n          }\r\n        } else {\r\n          this.logger.error('Chat liveagent did not load properly. Look for error.');\r\n        }\r\n        this.chatAgentSubject.complete(); // release all subscribers\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load the Salesforce Liveagent  (via dynamic script)\r\n   */\r\n  loadChatLibrary() {\r\n    // Gets the URL from environment\r\n    const liveagentScriptUrl = chatConfig.LIVEAGENT_SCRIPT_URL;\r\n\r\n    // no library if no key\r\n    if (!liveagentScriptUrl) {\r\n      return EMPTY;\r\n    }\r\n\r\n    if (!chatInstalled) {\r\n      chatInstalled = true; // only try to install it once\r\n      // load after the page's first script element\r\n      const ref = window.document.getElementsByTagName('script')[0];\r\n      const script = window.document.createElement('script');\r\n      script.src = liveagentScriptUrl;\r\n      ref.parentNode.insertBefore(script, ref);\r\n    }\r\n\r\n    // RxJS coolness: iterate until liveagent arrives or 15 x 1 second passes\r\n    return interval(1000).pipe(\r\n      skipWhile(tick => window.liveagent == null && tick < 15),\r\n      take(1),\r\n      map(_ => {\r\n        const agent = window.liveagent;\r\n        if (agent) {\r\n          if (chatConfig.TRACING) {\r\n            this.logger.log('Chat script loaded');\r\n          }\r\n        } else {\r\n          this.logger.error('Chat load timed out; look in console for script load error.');\r\n        }\r\n        return agent;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { environment } from '@environment';\nimport { combineLatest, EMPTY, interval, ReplaySubject } from 'rxjs';\nimport { filter, map, skipWhile, take } from 'rxjs/operators';\nimport { getFullName } from '@core/utils';\nimport { LoggerService } from '@core/services/logger.service';\nimport { SessionService } from '@session';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./logger.service\";\nimport * as i2 from \"../../store/session/session.service\";\nvar chatConfig = environment.chatConfig;\nvar chatInstalled = false;\nvar ChatService = /** @class */ (function () {\n    function ChatService(logger, sessionService) {\n        var _this = this;\n        this.logger = logger;\n        this.sessionService = sessionService;\n        this.chatAgentSubject = new ReplaySubject(1);\n        /** Terminating observable that emits the chat's \"liveagent\" when it becomes available and a regular user is signed in. */\n        this.chatAgent$ = this.chatAgentSubject.asObservable();\n        var chatAgentLoaded$ = this.loadChatLibrary();\n        var currentUser$ = this.sessionService.currentUser$.pipe(\n        // only consider a \"real\" user (not an Admin)\n        filter(function (currentUser) { return currentUser != null; }));\n        combineLatest(currentUser$, chatAgentLoaded$)\n            .pipe(take(1))\n            .subscribe(function (_a) {\n            var firstUser = _a[0], agent = _a[1];\n            if (agent) {\n                agent.init(chatConfig.CHAT_URL, chatConfig.DEPLOYMENT_ID, chatConfig.ORGANIZATION_ID);\n                var name_1 = getFullName(firstUser);\n                var email = firstUser.email;\n                var msg = void 0;\n                if (email) {\n                    agent.addCustomDetail('Email', email, true);\n                    msg = \"Chat enabled for user \\\"\" + name_1 + \"\\\" with email \\\"\" + email + \"\\\".\";\n                }\n                else {\n                    msg = \"Chat enabled for user \\\"\" + name_1 + \"\\\" who does not have email.\";\n                }\n                _this.chatAgentSubject.next(agent);\n                if (chatConfig.TRACING) {\n                    _this.logger.log(msg);\n                }\n            }\n            else {\n                _this.logger.error('Chat liveagent did not load properly. Look for error.');\n            }\n            _this.chatAgentSubject.complete(); // release all subscribers\n        });\n    }\n    /**\n     * Load the Salesforce Liveagent  (via dynamic script)\n     */\n    ChatService.prototype.loadChatLibrary = function () {\n        var _this = this;\n        // Gets the URL from environment\n        var liveagentScriptUrl = chatConfig.LIVEAGENT_SCRIPT_URL;\n        // no library if no key\n        if (!liveagentScriptUrl) {\n            return EMPTY;\n        }\n        if (!chatInstalled) {\n            chatInstalled = true; // only try to install it once\n            // load after the page's first script element\n            var ref = window.document.getElementsByTagName('script')[0];\n            var script = window.document.createElement('script');\n            script.src = liveagentScriptUrl;\n            ref.parentNode.insertBefore(script, ref);\n        }\n        // RxJS coolness: iterate until liveagent arrives or 15 x 1 second passes\n        return interval(1000).pipe(skipWhile(function (tick) { return window.liveagent == null && tick < 15; }), take(1), map(function (_) {\n            var agent = window.liveagent;\n            if (agent) {\n                if (chatConfig.TRACING) {\n                    _this.logger.log('Chat script loaded');\n                }\n            }\n            else {\n                _this.logger.error('Chat load timed out; look in console for script load error.');\n            }\n            return agent;\n        }));\n    };\n    ChatService.ngInjectableDef = i0.defineInjectable({ factory: function ChatService_Factory() { return new ChatService(i0.inject(i1.LoggerService), i0.inject(i2.SessionService)); }, token: ChatService, providedIn: \"root\" });\n    return ChatService;\n}());\nexport { ChatService };\n","import { Injectable } from '@angular/core';\r\nimport { Store, createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { User, UserRole } from '@model';\r\nimport { initialState, SessionState, SESSION_STATE } from './reducer';\r\n\r\n// #region selectors\r\nexport const selectSessionState = createFeatureSelector<SessionState>(SESSION_STATE);\r\n\r\nconst selectAuthUser = createSelector(\r\n  selectSessionState,\r\n  state => state.authUser\r\n);\r\n\r\nconst selectCompanyPackageLoaded = createSelector(\r\n  selectSessionState,\r\n  state => state.companyPackageLoaded\r\n);\r\n\r\nconst selectCompanyPackageLoading = createSelector(\r\n  selectSessionState,\r\n  state => state.companyPackageLoading\r\n);\r\n\r\nconst selectCurrentCompanyEtag = createSelector(\r\n  selectSessionState,\r\n  state => state.currentCompanyEtag\r\n);\r\n\r\nconst selectCurrentCompanyId = createSelector(\r\n  selectSessionState,\r\n  state => state.currentCompanyId\r\n);\r\n\r\nconst selectCurrentEmployeeId = createSelector(\r\n  selectSessionState,\r\n  state => state.currentEmployeeId\r\n);\r\n\r\nconst selectCurrentUserId = createSelector(\r\n  selectSessionState,\r\n  state => state.currentUserId\r\n);\r\n\r\nconst selectIsAdmin = createSelector(\r\n  selectSessionState,\r\n  state => state.authUser && state.authUser.userRole === UserRole.Administrator\r\n);\r\n\r\nconst selectIsSignedIn = createSelector(\r\n  selectSessionState,\r\n  state => state.authUser != null\r\n);\r\n\r\nconst selectReadOnly = createSelector(\r\n  selectSessionState,\r\n  state => state.readOnly\r\n);\r\n\r\n// #endregion selectors\r\n@Injectable({providedIn: 'root'})\r\nexport class SessionSelectors {\r\n\r\n  /** The full session state */\r\n  session$: Observable<SessionState>;\r\n\r\n  /** The authenticated (signed in) user. Null when not signed in. */\r\n  authUser$: Observable<User>;\r\n\r\n  /** True when there is a loaded CompanyPackage */\r\n  companyPackageLoaded$: Observable<boolean>;\r\n\r\n  /** True when in the process of loading the CompanyPackage */\r\n  companyPackageLoading$: Observable<boolean>;\r\n  currentCompanyEtag$: Observable<string>;\r\n\r\n  /** The id of the current company. Null when there is no current company */\r\n  currentCompanyId$: Observable<string>;\r\n\r\n  /** The id of the current employee. Null when there is no current employee */\r\n  currentEmployeeId$: Observable<string>;\r\n\r\n  /** The id of the current user. Null when there is no current user */\r\n  currentUserId$: Observable<string>;\r\n\r\n  /** True if there is a signed-in user and that user is an Admin */\r\n  isAdmin$: Observable<boolean>;\r\n\r\n  /** True if there is a signed-in user */\r\n  isSignedIn$: Observable<boolean>;\r\n  readOnly$: Observable<boolean>;\r\n\r\n  constructor(private store: Store<SessionState>) {\r\n    this.session$ = store.select(selectSessionState);\r\n\r\n    this.authUser$ = store.select(selectAuthUser);\r\n\r\n    this.companyPackageLoaded$ = store.select(selectCompanyPackageLoaded);\r\n    this.companyPackageLoading$ = store.select(selectCompanyPackageLoading);\r\n\r\n    this.currentCompanyEtag$ = store.select(selectCurrentCompanyEtag);\r\n    this.currentCompanyId$ = store.select(selectCurrentCompanyId);\r\n    this.currentEmployeeId$ = store.select(selectCurrentEmployeeId);\r\n    this.currentUserId$ = store.select(selectCurrentUserId);\r\n    this.isAdmin$ = store.select(selectIsAdmin);\r\n    this.isSignedIn$ = store.select(selectIsSignedIn);\r\n    this.readOnly$ = store.select(selectReadOnly);\r\n  }\r\n}\r\n","import { Store, createFeatureSelector, createSelector } from '@ngrx/store';\nimport { UserRole } from '@model';\nimport { SessionState, SESSION_STATE } from './reducer';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\n// #region selectors\nexport var selectSessionState = createFeatureSelector(SESSION_STATE);\nvar ɵ0 = function (state) { return state.authUser; };\nvar selectAuthUser = createSelector(selectSessionState, ɵ0);\nvar ɵ1 = function (state) { return state.companyPackageLoaded; };\nvar selectCompanyPackageLoaded = createSelector(selectSessionState, ɵ1);\nvar ɵ2 = function (state) { return state.companyPackageLoading; };\nvar selectCompanyPackageLoading = createSelector(selectSessionState, ɵ2);\nvar ɵ3 = function (state) { return state.currentCompanyEtag; };\nvar selectCurrentCompanyEtag = createSelector(selectSessionState, ɵ3);\nvar ɵ4 = function (state) { return state.currentCompanyId; };\nvar selectCurrentCompanyId = createSelector(selectSessionState, ɵ4);\nvar ɵ5 = function (state) { return state.currentEmployeeId; };\nvar selectCurrentEmployeeId = createSelector(selectSessionState, ɵ5);\nvar ɵ6 = function (state) { return state.currentUserId; };\nvar selectCurrentUserId = createSelector(selectSessionState, ɵ6);\nvar ɵ7 = function (state) { return state.authUser && state.authUser.userRole === UserRole.Administrator; };\nvar selectIsAdmin = createSelector(selectSessionState, ɵ7);\nvar ɵ8 = function (state) { return state.authUser != null; };\nvar selectIsSignedIn = createSelector(selectSessionState, ɵ8);\nvar ɵ9 = function (state) { return state.readOnly; };\nvar selectReadOnly = createSelector(selectSessionState, ɵ9);\n// #endregion selectors\nvar SessionSelectors = /** @class */ (function () {\n    function SessionSelectors(store) {\n        this.store = store;\n        this.session$ = store.select(selectSessionState);\n        this.authUser$ = store.select(selectAuthUser);\n        this.companyPackageLoaded$ = store.select(selectCompanyPackageLoaded);\n        this.companyPackageLoading$ = store.select(selectCompanyPackageLoading);\n        this.currentCompanyEtag$ = store.select(selectCurrentCompanyEtag);\n        this.currentCompanyId$ = store.select(selectCurrentCompanyId);\n        this.currentEmployeeId$ = store.select(selectCurrentEmployeeId);\n        this.currentUserId$ = store.select(selectCurrentUserId);\n        this.isAdmin$ = store.select(selectIsAdmin);\n        this.isSignedIn$ = store.select(selectIsSignedIn);\n        this.readOnly$ = store.select(selectReadOnly);\n    }\n    SessionSelectors.ngInjectableDef = i0.defineInjectable({ factory: function SessionSelectors_Factory() { return new SessionSelectors(i0.inject(i1.Store)); }, token: SessionSelectors, providedIn: \"root\" });\n    return SessionSelectors;\n}());\nexport { SessionSelectors };\nexport { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9 };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Router, NavigationEnd } from '@angular/router';\nimport { combineLatest, of } from 'rxjs';\nimport { concatMap, catchError, filter, map, withLatestFrom, shareReplay, distinctUntilChanged } from 'rxjs/operators';\nimport { Stats, SectionStatus } from '@model';\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\nimport { CurrentCompanyEntityCollectionService } from './current-company-entity-collection-service';\nimport { WellKnownRoutes } from '@core/well-known-routes'; // '@core' introduces circular dependency\nimport { ValidationService } from '@validation';\nimport { EntitySelectors } from '../entity-selectors';\nimport { SessionService } from '@session';\nimport { LoggerService } from '@app/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./company-entity-helper.service\";\nimport * as i2 from \"../../validation/validation.service\";\nimport * as i3 from \"../entity-selectors\";\nimport * as i4 from \"../../session/session.service\";\nimport * as i5 from \"../../../core/services/logger.service\";\nimport * as i6 from \"@angular/router\";\nvar StatsService = /** @class */ (function (_super) {\n    __extends(StatsService, _super);\n    function StatsService(helper, validationService, entitySelectors, sessionService, logger, router) {\n        var _this = _super.call(this, 'Stats', helper) || this;\n        _this.helper = helper;\n        _this.validationService = validationService;\n        _this.entitySelectors = entitySelectors;\n        _this.sessionService = sessionService;\n        _this.logger = logger;\n        _this.router = router;\n        _this.trackedRoutes = [\n            WellKnownRoutes.AboutYou,\n            WellKnownRoutes.CompanyInfo,\n            WellKnownRoutes.Employees,\n            WellKnownRoutes.CompanyTaxInfo,\n            WellKnownRoutes.BankAccount,\n            WellKnownRoutes.Review\n        ];\n        _this.stats$ = _this.entities$.pipe(map(function (statsCollection) {\n            // \"Cheating\" by assuming that collection only holds the current company stats\n            // new Stats should not be created here, only in SignupService, but this is a fallback for existing companies\n            return statsCollection[0] || new Stats();\n        }));\n        _this.getValidationErrors();\n        _this.aboutYou();\n        _this.bankInfo();\n        _this.companyInfo();\n        _this.companyTax();\n        _this.employees();\n        _this.statuses$ = combineLatest(_this.aboutYouStatus$, _this.bankInfoStatus$, _this.companyInfoStatus$, _this.companyTaxStatus$, _this.employeesStatus$).pipe(map(function (_a) {\n            var aboutYou = _a[0], bankInfo = _a[1], companyInfo = _a[2], companyTax = _a[3], employees = _a[4];\n            return ({\n                aboutYou: aboutYou,\n                bankInfo: bankInfo,\n                companyInfo: companyInfo,\n                companyTax: companyTax,\n                employees: employees\n            });\n        }), distinctUntilChanged(), shareReplay(1));\n        /**\n         * Listen for navigation to a tracked route (section).\n         * Store the time for that section in Stats and save it\n         */\n        _this.router.events.pipe(filter(isNavigationEnd), filter(function (event) { return _this.trackedRoutes.some(function (route) { return event.url.startsWith(route); }); }), withLatestFrom(sessionService.readOnly$, _this.stats$, _this.statuses$), concatMap(function (_a) {\n            var event = _a[0], readOnly = _a[1], stats = _a[2], statuses = _a[3];\n            var dt = new Date().toISOString();\n            var url = event.url;\n            if (url.startsWith(WellKnownRoutes.AboutYou)) {\n                stats.aboutYouLastDate = dt;\n                stats.aboutYouStartDate = stats.aboutYouStartDate || dt;\n            }\n            else if (url.startsWith(WellKnownRoutes.CompanyInfo)) {\n                stats.companyInfoLastDate = dt;\n                stats.companyInfoStartDate = stats.companyInfoStartDate || dt;\n            }\n            else if (url.startsWith(WellKnownRoutes.Employees)) {\n                stats.employeesLastDate = dt;\n                stats.employeesStartDate = stats.employeesStartDate || dt;\n            }\n            else if (url.startsWith(WellKnownRoutes.CompanyTaxInfo)) {\n                stats.companyTaxInfoLastDate = dt;\n                stats.companyTaxInfoStartDate = stats.companyTaxInfoStartDate || dt;\n            }\n            else if (url.startsWith(WellKnownRoutes.BankAccount)) {\n                stats.companyBankAccountLastDate = dt;\n                stats.companyBankAccountStartDate = stats.companyBankAccountStartDate || dt;\n            }\n            else if (url.startsWith(WellKnownRoutes.Review)) {\n                stats.reviewLastDate = dt;\n                stats.reviewStartDate = stats.reviewStartDate || dt;\n            }\n            // Get sections statuses\n            stats.aboutYouStatus = statuses.aboutYou;\n            stats.companyInfoStatus = statuses.companyInfo;\n            stats.employeesStatus = statuses.employees;\n            stats.companyTaxInfoStatus = statuses.companyTax;\n            stats.companyBankAccountStatus = statuses.bankInfo;\n            // Always save stats (unless ReadOnly) because always update a `LastDate`\n            return readOnly ? of(stats) : _this.upsert(stats).pipe(catchError(function (err) {\n                // should do something\n                // must catch here for error isolation else outer subscribe fails\n                logger.warn('Error saving stats', err, stats);\n                // Pretend everything was OK\n                return of(stats);\n            }));\n        })).subscribe();\n        function isNavigationEnd(event) {\n            return event instanceof NavigationEnd;\n        }\n        return _this;\n    }\n    StatsService.prototype.getValidationErrors = function () {\n        // Validate entire cache, excluding account status transition rules\n        this.validationErrors$ = this.validationService.validateEntityCache(function (v) { return !(v.group && v.group.startsWith('transition-')); })\n            .pipe(map(function (result) { return result.validationErrors; }), shareReplay(1));\n        this.isValid$ = this.validationErrors$.pipe(map(function (errors) { return errors.length === 0; }), distinctUntilChanged(), shareReplay(1));\n    };\n    StatsService.prototype.aboutYou = function () {\n        this.aboutYouErrors$ = this.validationErrors$.pipe(map(function (ves) {\n            return ves.filter(function (ve) { return ve.context.modelType === 'User'; });\n        }), shareReplay(1));\n        this.aboutYouStatus$ = combineLatest(this.stats$, this.aboutYouErrors$).pipe(map(function (_a) {\n            var stats = _a[0], aboutYouErrors = _a[1];\n            return calcSectionStatus(stats.aboutYouStartDate, aboutYouErrors);\n        }), distinctUntilChanged(), shareReplay(1));\n    };\n    StatsService.prototype.bankInfo = function () {\n        this.bankInfoErrors$ = this.validationErrors$.pipe(map(function (ves) {\n            return ves.filter(function (ve) {\n                return ve.validator.group === 'bank';\n            });\n        }), shareReplay(1));\n        this.bankInfoStatus$ = combineLatest(this.stats$, this.bankInfoErrors$).pipe(map(function (_a) {\n            var stats = _a[0], bankInfoErrors = _a[1];\n            return calcSectionStatus(stats.companyBankAccountStartDate, bankInfoErrors);\n        }), distinctUntilChanged(), shareReplay(1));\n    };\n    StatsService.prototype.companyInfo = function () {\n        this.companyInfoErrors$ = this.validationErrors$.pipe(map(function (ves) {\n            return ves.filter(function (ve) {\n                return !ve.validator.group &&\n                    (ve.context.modelType === 'Company' || ve.context.modelType === 'Address' && !ve.context.model.isHome);\n            });\n        }), shareReplay(1));\n        this.companyInfoStatus$ = combineLatest(this.stats$, this.companyInfoErrors$).pipe(map(function (_a) {\n            var stats = _a[0], companyInfoErrors = _a[1];\n            return calcSectionStatus(stats.companyInfoStartDate, companyInfoErrors);\n        }), distinctUntilChanged(), shareReplay(1));\n    };\n    StatsService.prototype.companyTax = function () {\n        this.companyTaxErrors$ = this.validationErrors$.pipe(map(function (ves) { return ves.filter(function (ve) {\n            return ve.validator.group === 'fedTax' || ve.validator.group === 'stateTax';\n        }); }), shareReplay(1));\n        this.companyTaxStatus$ = combineLatest(this.stats$, this.companyTaxErrors$).pipe(map(function (_a) {\n            var stats = _a[0], companyTaxErrors = _a[1];\n            return calcSectionStatus(stats.companyTaxInfoStartDate, companyTaxErrors);\n        }), distinctUntilChanged(), shareReplay(1));\n    };\n    StatsService.prototype.employees = function () {\n        var _this = this;\n        this.employeesErrors$ = combineLatest(this.entitySelectors.employee.entities$, this.validationErrors$).pipe(map(function (_a) {\n            var ees = _a[0], ves = _a[1];\n            return ves.filter(function (ve) {\n                var modelType = ve.context.modelType;\n                return (ve.validator.group === 'employeeSetup' ||\n                    (!ve.validator.group && (modelType === 'Employee' ||\n                        modelType === 'EmployeePaymentMethod' ||\n                        _this.isActiveEEHomeAddressError(ees, ve))));\n            });\n        }), shareReplay(1));\n        this.employeesStatus$ = combineLatest(this.stats$, this.employeesErrors$).pipe(map(function (_a) {\n            var stats = _a[0], employeesErrors = _a[1];\n            return calcSectionStatus(stats.employeesStartDate, employeesErrors);\n        }), distinctUntilChanged(), shareReplay(1));\n    };\n    StatsService.prototype.isActiveEEHomeAddressError = function (ees, ve) {\n        var addr = ve.context.model;\n        if (ve.context.modelType === 'Address' && addr.isHome && !addr.isRemoved) {\n            var addrId_1 = addr.id;\n            var ee = ees.find(function (e) { return e.homeAddressId === addrId_1; });\n            if (ee == null) {\n                // This should never happen after we have transactional saves!\n                // this.sessionService.logger.error(`Home address ${addrId} does not belong to any company EE`);\n                return false;\n            }\n            // Only report Address errors for active EEs.\n            return !ee.isRemoved;\n        }\n        return false;\n    };\n    StatsService.ngInjectableDef = i0.defineInjectable({ factory: function StatsService_Factory() { return new StatsService(i0.inject(i1.CompanyEntityHelperService), i0.inject(i2.ValidationService), i0.inject(i3.EntitySelectors), i0.inject(i4.SessionService), i0.inject(i5.LoggerService), i0.inject(i6.Router)); }, token: StatsService, providedIn: \"root\" });\n    return StatsService;\n}(CurrentCompanyEntityCollectionService));\nexport { StatsService };\nfunction calcSectionStatus(startDate, errors) {\n    return startDate ? errors.length > 0 ? SectionStatus.Invalid : SectionStatus.Valid : SectionStatus.NotStarted;\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationEnd, Event } from '@angular/router';\r\n\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { concatMap, catchError, filter, map, withLatestFrom, shareReplay, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { Address, Employee, Stats, SectionStatus} from '@model';\r\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\r\nimport { CurrentCompanyEntityCollectionService } from './current-company-entity-collection-service';\r\nimport { WellKnownRoutes } from '@core/well-known-routes';  // '@core' introduces circular dependency\r\nimport { ValidationService, ValidationError } from '@validation';\r\nimport { EntitySelectors } from '../entity-selectors';\r\nimport { SessionService } from '@session';\r\nimport { LoggerService } from '@app/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StatsService extends CurrentCompanyEntityCollectionService<Stats> {\r\n  /** Stats for the current company */\r\n  stats$: Observable<Stats>;\r\n\r\n  private trackedRoutes = [\r\n    WellKnownRoutes.AboutYou,\r\n    WellKnownRoutes.CompanyInfo,\r\n    WellKnownRoutes.Employees,\r\n    WellKnownRoutes.CompanyTaxInfo,\r\n    WellKnownRoutes.BankAccount,\r\n    WellKnownRoutes.Review\r\n  ];\r\n\r\n  private validationErrors$: Observable<ValidationError[]>;\r\n  aboutYouErrors$: Observable<ValidationError[]>;\r\n  bankInfoErrors$: Observable<ValidationError[]>;\r\n  companyInfoErrors$: Observable<ValidationError[]>;\r\n  companyTaxErrors$: Observable<ValidationError[]>;\r\n  employeeSetupErrors$: Observable<ValidationError[]>;\r\n  employeesErrors$: Observable<ValidationError[]>;\r\n\r\n  aboutYouStatus$: Observable<SectionStatus>;\r\n  companyTaxStatus$: Observable<SectionStatus>;\r\n  companyInfoStatus$: Observable<SectionStatus>;\r\n  employeesStatus$: Observable<SectionStatus>;\r\n  bankInfoStatus$: Observable<SectionStatus>;\r\n\r\n  isValid$: Observable<boolean>;\r\n\r\n  statuses$: Observable<{\r\n    aboutYou: SectionStatus;\r\n    companyTax: SectionStatus;\r\n    companyInfo: SectionStatus;\r\n    employees: SectionStatus;\r\n    bankInfo: SectionStatus;\r\n  }>;\r\n\r\n  constructor(\r\n    protected helper: CompanyEntityHelperService,\r\n    private validationService: ValidationService,\r\n    private entitySelectors: EntitySelectors,\r\n    private sessionService: SessionService,\r\n    private logger: LoggerService,\r\n    private router: Router\r\n  ) {\r\n    super('Stats', helper);\r\n\r\n    this.stats$ = this.entities$.pipe(\r\n      map(statsCollection => {\r\n        // \"Cheating\" by assuming that collection only holds the current company stats\r\n        // new Stats should not be created here, only in SignupService, but this is a fallback for existing companies\r\n        return statsCollection[0] || new Stats();\r\n      })\r\n    );\r\n\r\n    this.getValidationErrors();\r\n    this.aboutYou();\r\n    this.bankInfo();\r\n    this.companyInfo();\r\n    this.companyTax();\r\n    this.employees();\r\n\r\n    this.statuses$ = combineLatest(\r\n      this.aboutYouStatus$,\r\n      this.bankInfoStatus$,\r\n      this.companyInfoStatus$,\r\n      this.companyTaxStatus$,\r\n      this.employeesStatus$\r\n    ).pipe(\r\n      map(([\r\n        aboutYou,\r\n        bankInfo,\r\n        companyInfo,\r\n        companyTax,\r\n        employees\r\n      ]) => ({\r\n          aboutYou,\r\n          bankInfo,\r\n          companyInfo,\r\n          companyTax,\r\n          employees\r\n        })\r\n      ),\r\n      distinctUntilChanged(),\r\n      shareReplay(1)\r\n    );\r\n\r\n    /**\r\n     * Listen for navigation to a tracked route (section).\r\n     * Store the time for that section in Stats and save it\r\n     */\r\n    this.router.events.pipe(\r\n      filter(isNavigationEnd),\r\n      filter(event => this.trackedRoutes.some(route => event.url.startsWith(route))),\r\n      withLatestFrom(sessionService.readOnly$, this.stats$, this.statuses$),\r\n      concatMap(([event, readOnly, stats, statuses]) => {\r\n        const dt = new Date().toISOString();\r\n        const url = event.url;\r\n        if (url.startsWith(WellKnownRoutes.AboutYou)) {\r\n          stats.aboutYouLastDate = dt;\r\n          stats.aboutYouStartDate = stats.aboutYouStartDate || dt;\r\n        } else if (url.startsWith(WellKnownRoutes.CompanyInfo)) {\r\n          stats.companyInfoLastDate = dt;\r\n          stats.companyInfoStartDate = stats.companyInfoStartDate || dt;\r\n        } else if (url.startsWith(WellKnownRoutes.Employees)) {\r\n          stats.employeesLastDate = dt;\r\n          stats.employeesStartDate = stats.employeesStartDate || dt;\r\n        } else if (url.startsWith(WellKnownRoutes.CompanyTaxInfo)) {\r\n          stats.companyTaxInfoLastDate = dt;\r\n          stats.companyTaxInfoStartDate = stats.companyTaxInfoStartDate || dt;\r\n        } else if (url.startsWith(WellKnownRoutes.BankAccount)) {\r\n          stats.companyBankAccountLastDate = dt;\r\n          stats.companyBankAccountStartDate = stats.companyBankAccountStartDate || dt;\r\n        } else if (url.startsWith(WellKnownRoutes.Review)) {\r\n          stats.reviewLastDate = dt;\r\n          stats.reviewStartDate = stats.reviewStartDate || dt;\r\n        }\r\n        // Get sections statuses\r\n        stats.aboutYouStatus = statuses.aboutYou;\r\n        stats.companyInfoStatus = statuses.companyInfo;\r\n        stats.employeesStatus = statuses.employees;\r\n        stats.companyTaxInfoStatus = statuses.companyTax;\r\n        stats.companyBankAccountStatus = statuses.bankInfo;\r\n\r\n        // Always save stats (unless ReadOnly) because always update a `LastDate`\r\n        return readOnly ? of(stats) : this.upsert(stats).pipe(\r\n          catchError(err => {\r\n            // should do something\r\n            // must catch here for error isolation else outer subscribe fails\r\n            logger.warn('Error saving stats', err, stats);\r\n            // Pretend everything was OK\r\n            return of(stats);\r\n          })\r\n        );\r\n      })\r\n    ).subscribe();\r\n\r\n    function isNavigationEnd(event: Event): event is NavigationEnd {\r\n      return event instanceof NavigationEnd;\r\n    }\r\n  }\r\n\r\n  private getValidationErrors() {\r\n    // Validate entire cache, excluding account status transition rules\r\n    this.validationErrors$ = this.validationService.validateEntityCache(v => !(v.group && v.group.startsWith('transition-')))\r\n      .pipe(\r\n        map(result => result.validationErrors),\r\n        shareReplay(1)\r\n      );\r\n\r\n    this.isValid$ = this.validationErrors$.pipe(\r\n      map(errors => errors.length === 0),\r\n      distinctUntilChanged(),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  private aboutYou() {\r\n    this.aboutYouErrors$ = this.validationErrors$.pipe(\r\n      map(ves => {\r\n        return ves.filter(ve => ve.context.modelType === 'User');\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this.aboutYouStatus$ = combineLatest(this.stats$, this.aboutYouErrors$).pipe(\r\n      map(([stats, aboutYouErrors]) => calcSectionStatus(stats.aboutYouStartDate, aboutYouErrors)),\r\n      distinctUntilChanged(),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  private bankInfo() {\r\n    this.bankInfoErrors$ = this.validationErrors$.pipe(\r\n      map(ves => {\r\n        return ves.filter(ve => {\r\n          return ve.validator.group === 'bank';\r\n        });\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this.bankInfoStatus$ = combineLatest(this.stats$, this.bankInfoErrors$).pipe(\r\n      map(([stats, bankInfoErrors]) => calcSectionStatus(stats.companyBankAccountStartDate, bankInfoErrors)),\r\n      distinctUntilChanged(),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  private companyInfo() {\r\n    this.companyInfoErrors$ = this.validationErrors$.pipe(\r\n      map(ves => {\r\n        return ves.filter(ve => {\r\n          return !ve.validator.group &&\r\n            (ve.context.modelType === 'Company' || ve.context.modelType === 'Address' && !(ve.context.model as Address).isHome);\r\n        });\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this.companyInfoStatus$ = combineLatest(this.stats$, this.companyInfoErrors$).pipe(\r\n      map(([stats, companyInfoErrors]) => calcSectionStatus(stats.companyInfoStartDate, companyInfoErrors)),\r\n      distinctUntilChanged(),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  private companyTax() {\r\n    this.companyTaxErrors$ = this.validationErrors$.pipe(\r\n      map(ves => ves.filter(ve => {\r\n        return ve.validator.group === 'fedTax' || ve.validator.group === 'stateTax';\r\n      })),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this.companyTaxStatus$ = combineLatest(this.stats$, this.companyTaxErrors$).pipe(\r\n      map(([stats, companyTaxErrors]) => calcSectionStatus(stats.companyTaxInfoStartDate, companyTaxErrors)),\r\n      distinctUntilChanged(),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  private employees() {\r\n\r\n    this.employeesErrors$ = combineLatest(\r\n      this.entitySelectors.employee.entities$,\r\n      this.validationErrors$\r\n    ).pipe(\r\n      map(([ees, ves]) => {\r\n        return ves.filter(ve => {\r\n          const modelType = ve.context.modelType;\r\n          return (\r\n            ve.validator.group === 'employeeSetup' ||\r\n            (!ve.validator.group && (\r\n              modelType === 'Employee' ||\r\n              modelType === 'EmployeePaymentMethod' ||\r\n              this.isActiveEEHomeAddressError(ees, ve)\r\n            ))\r\n          );\r\n        });\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n\r\n\r\n    this.employeesStatus$ = combineLatest(\r\n      this.stats$,\r\n      this.employeesErrors$).pipe(\r\n        map(([stats, employeesErrors]) => calcSectionStatus(stats.employeesStartDate, employeesErrors)),\r\n        distinctUntilChanged(),\r\n        shareReplay(1)\r\n      );\r\n  }\r\n\r\n  private isActiveEEHomeAddressError(ees: Employee[], ve: ValidationError): boolean {\r\n    const addr = ve.context.model as Address;\r\n    if (ve.context.modelType === 'Address' && addr.isHome && !addr.isRemoved) {\r\n      const addrId = addr.id;\r\n      const ee = ees.find(e => e.homeAddressId === addrId);\r\n      if (ee == null) {\r\n        // This should never happen after we have transactional saves!\r\n        // this.sessionService.logger.error(`Home address ${addrId} does not belong to any company EE`);\r\n        return false;\r\n      }\r\n      // Only report Address errors for active EEs.\r\n      return !ee.isRemoved;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nfunction calcSectionStatus(startDate: string, errors: ValidationError[]) {\r\n  return startDate ? errors.length > 0 ? SectionStatus.Invalid : SectionStatus.Valid : SectionStatus.NotStarted;\r\n}\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { map, shareReplay } from 'rxjs/operators';\nimport { EntityCollectionServiceElementsFactory, EntitySelectors$Factory } from 'ngrx-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngrx-data\";\n/**\n * Get base-line EntitySelectors$ for any SP Entity collection\n * A registry of Observable selectors$.\n */\nvar EntitySelectors = /** @class */ (function () {\n    function EntitySelectors(entitySelectorsFactory, entitySelectors$Factory) {\n        this.entitySelectorsFactory = entitySelectorsFactory;\n        this.collectionSelectors = {};\n        this.entityCache$ = entitySelectors$Factory.entityCache$;\n        this.entityCacheActive$ = this.entityCache$.pipe(map(toActiveCache), shareReplay(1));\n        this.entityInfos$ = this.entityCache$.pipe(map(toEntityInfos), shareReplay(1));\n    }\n    /**\n     * Get the Observable selectors$ for the given collection.\n     * If not found in the registry, create and register, before returning.\n     */\n    EntitySelectors.prototype.getSelectors$ = function (collectionName) {\n        collectionName = (collectionName || '').trim();\n        if (!collectionName) {\n            throw new Error('Collection name is required');\n        }\n        var selectors$ = this.collectionSelectors[collectionName];\n        if (!selectors$) {\n            selectors$ = this.entitySelectorsFactory.create(collectionName).selectors$;\n            this.collectionSelectors[collectionName] = selectors$;\n        }\n        return selectors$;\n    };\n    EntitySelectors.prototype.register = function (selectors$) {\n        this.collectionSelectors[selectors$.entityName] = selectors$;\n    };\n    Object.defineProperty(EntitySelectors.prototype, \"address\", {\n        // #region well-known selectors$\n        /** Address EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('Address');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"company\", {\n        /** Company EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('Company');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"companyDeduction\", {\n        /** CompanyDeduction EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('CompanyDeduction');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"companyEarning\", {\n        /** CompanyEarning EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('CompanyEarning');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"deduction\", {\n        /** Deduction EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('Deduction');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"document\", {\n        /** Document EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('Document');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"earning\", {\n        /** Earning EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('Earning');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"employee\", {\n        /** Employee EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('Employee');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"employeeDeduction\", {\n        /** EmployeeDeduction EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('EmployeeDeduction');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"employeePaymentMethod\", {\n        /** EmployeePaymentMethod EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('EmployeePaymentMethod');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"envelope\", {\n        /** Envelope EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('Envelope');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"envelopeSigner\", {\n        /** EnvelopeSigner EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('EnvelopeSigner');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"householdFilers\", {\n        /** HouseholdFilers EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('HouseholdFilers');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"user\", {\n        /** User EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('User');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"companyTax\", {\n        /** CompanyTax EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('CompanyTax');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntitySelectors.prototype, \"employeeTax\", {\n        /** EmployeeTax EntitySelectors$ */\n        get: function () {\n            return this.getSelectors$('EmployeeTax');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EntitySelectors.ngInjectableDef = i0.defineInjectable({ factory: function EntitySelectors_Factory() { return new EntitySelectors(i0.inject(i1.EntityCollectionServiceElementsFactory), i0.inject(i1.EntitySelectors$Factory)); }, token: EntitySelectors, providedIn: \"root\" });\n    return EntitySelectors;\n}());\nexport { EntitySelectors };\n// #region entity cache selector functions\n// TODO: Only need these two helper variables until we do cascade delete\nfunction employeeHelpers(entityCache) {\n    var eeMap = entityCache['Employee'].entities;\n    var removedEEs = {};\n    var removedHomeAddrs = {};\n    Object.keys(eeMap).forEach(function (eeId) {\n        var ee = eeMap[eeId];\n        if (ee.isRemoved) {\n            removedEEs[eeId] = true;\n            removedHomeAddrs[ee.homeAddressId] = true;\n        }\n    });\n    return { removedEEs: removedEEs, removedHomeAddrs: removedHomeAddrs };\n}\n/** Re-create the EntityCache with just the active entities (none with isRemoved:true) */\nfunction toActiveCache(entityCache) {\n    var entityTypes = Object.keys(entityCache);\n    if (entityTypes.length === 0) {\n        return entityCache;\n    }\n    // TODO: Only need these two helper variables until we do cascade delete\n    var _a = employeeHelpers(entityCache), removedEEs = _a.removedEEs, removedHomeAddrs = _a.removedHomeAddrs;\n    var activeCache;\n    entityTypes.forEach(function (entityType) {\n        var entry = entityCache[entityType];\n        var entities = entry.entities;\n        var ids = entry.ids;\n        var isMutated = false;\n        Object.keys(entities).forEach(function (eid) {\n            var entity = entities[eid];\n            var removed = entity.isRemoved ? entity : null;\n            // TODO: remove after cascade delete\n            if (!removed) {\n                if (entityType === 'EmployeePaymentMethod') {\n                    removed = removedEEs[entity.employeeId] ? entity : null;\n                }\n                else if (entityType === 'Address') {\n                    removed = removedHomeAddrs[eid] ? entity : null;\n                }\n            }\n            if (removed) {\n                if (!isMutated) {\n                    isMutated = true;\n                    ids = ids.slice();\n                    entities = __assign({}, entities);\n                }\n                ids = ids.filter(function (id) { return id !== eid; });\n                delete entities[eid];\n            }\n        });\n        if (isMutated) {\n            entry = __assign({}, entry, { ids: ids, entities: __assign({}, entities) });\n            if (!activeCache) {\n                activeCache = __assign({}, entityCache);\n            }\n            activeCache[entityType] = entry;\n        }\n    });\n    return activeCache || entityCache;\n}\n// Note: `toEntityInfos` does not delegate to `toActiveCache` because this function is on a\n// reasonably hot code path in validation and this different implementation\n// should perform better as it has less to do than `toActiveCache`.\n/** Flatten EntityCache to array of EntityInfos of active (non-removed) entities */\nfunction toEntityInfos(entityCache) {\n    var entityTypes = Object.keys(entityCache);\n    if (entityTypes.length === 0) {\n        return [];\n    }\n    // TODO: Only need these two helper variables until we do cascade delete\n    var _a = employeeHelpers(entityCache), removedEEs = _a.removedEEs, removedHomeAddrs = _a.removedHomeAddrs;\n    return entityTypes.reduce(function (acc, entityType) {\n        var entityMap = entityCache[entityType].entities;\n        var entityInfos = Object.keys(entityMap)\n            .map(function (id) { return ({ entityType: entityType, entity: entityMap[id] }); })\n            .filter(function (e) { return !e.entity.isRemoved; });\n        // TODO: Remove these filters once we \"cascade delete\"\n        if (entityType === 'Address') {\n            entityInfos = entityInfos.filter(function (ei) { return !removedHomeAddrs[ei.entity.id]; });\n        }\n        else if (entityType === 'EmployeePaymentMethod') {\n            entityInfos = entityInfos.filter(function (ei) { return !removedEEs[ei.entity.employeeId]; });\n        }\n        return acc.concat(entityInfos);\n    }, []);\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nimport {\r\n  Dictionary, EntityCache, EntityCollectionServiceElementsFactory, EntitySelectors$, EntitySelectors$Factory\r\n} from 'ngrx-data';\r\n\r\nimport * as Model from '@model';\r\nimport { Indexable } from '@utils';\r\n\r\nexport interface EntityInfo {\r\n  entityType: string;\r\n  entity: any;\r\n}\r\n\r\n/**\r\n * Get base-line EntitySelectors$ for any SP Entity collection\r\n * A registry of Observable selectors$.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class EntitySelectors {\r\n\r\n  /** Observable of entire EntityCache, including the removed entities */\r\n  entityCache$: Observable<EntityCache>;\r\n\r\n  /** Observable of the entire \"active\" EntityCache (excludes removed entities) */\r\n  entityCacheActive$: Observable<EntityCache>;\r\n\r\n  /** Observable of all \"active\" entities as EntityInfos (excludes removed entities) */\r\n  entityInfos$: Observable<EntityInfo[]>;\r\n\r\n  private readonly collectionSelectors: { [name: string]: EntitySelectors$<any> } = {};\r\n\r\n  constructor(\r\n    private entitySelectorsFactory: EntityCollectionServiceElementsFactory,\r\n    entitySelectors$Factory: EntitySelectors$Factory\r\n  ) {\r\n    this.entityCache$ = entitySelectors$Factory.entityCache$;\r\n    this.entityCacheActive$ = this.entityCache$.pipe(map(toActiveCache), shareReplay(1));\r\n    this.entityInfos$ = this.entityCache$.pipe(map(toEntityInfos), shareReplay(1));\r\n  }\r\n\r\n  /**\r\n   * Get the Observable selectors$ for the given collection.\r\n   * If not found in the registry, create and register, before returning.\r\n   */\r\n  getSelectors$<T>(collectionName: string): EntitySelectors$<T> {\r\n    collectionName = (collectionName || '').trim();\r\n    if (!collectionName) {\r\n      throw new Error('Collection name is required');\r\n    }\r\n    let selectors$ = this.collectionSelectors[collectionName];\r\n    if (!selectors$) {\r\n      selectors$ = this.entitySelectorsFactory.create<T>(collectionName).selectors$;\r\n      this.collectionSelectors[collectionName] = selectors$;\r\n    }\r\n    return selectors$;\r\n  }\r\n\r\n  register<T>(selectors$: EntitySelectors$<T>) {\r\n    this.collectionSelectors[selectors$.entityName] = selectors$;\r\n  }\r\n\r\n  // #region well-known selectors$\r\n\r\n  /** Address EntitySelectors$ */\r\n  get address() {\r\n    return this.getSelectors$<Model.Address>('Address');\r\n  }\r\n\r\n  /** Company EntitySelectors$ */\r\n  get company() {\r\n    return this.getSelectors$<Model.Company>('Company');\r\n  }\r\n\r\n  /** CompanyDeduction EntitySelectors$ */\r\n  get companyDeduction() {\r\n    return this.getSelectors$<Model.CompanyDeduction>('CompanyDeduction');\r\n  }\r\n\r\n  /** CompanyEarning EntitySelectors$ */\r\n  get companyEarning() {\r\n    return this.getSelectors$<Model.CompanyEarning>('CompanyEarning');\r\n  }\r\n\r\n  /** Deduction EntitySelectors$ */\r\n  get deduction() {\r\n    return this.getSelectors$<Model.Deduction>('Deduction');\r\n  }\r\n\r\n  /** Document EntitySelectors$ */\r\n  get document() {\r\n    return this.getSelectors$<Model.Document>('Document');\r\n  }\r\n\r\n  /** Earning EntitySelectors$ */\r\n  get earning() {\r\n    return this.getSelectors$<Model.Earning>('Earning');\r\n  }\r\n\r\n  /** Employee EntitySelectors$ */\r\n  get employee() {\r\n    return this.getSelectors$<Model.Employee>('Employee');\r\n  }\r\n\r\n  /** EmployeeDeduction EntitySelectors$ */\r\n  get employeeDeduction() {\r\n    return this.getSelectors$<Model.EmployeeDeduction>('EmployeeDeduction');\r\n  }\r\n\r\n  /** EmployeePaymentMethod EntitySelectors$ */\r\n  get employeePaymentMethod() {\r\n    return this.getSelectors$<Model.EmployeePaymentMethod>('EmployeePaymentMethod');\r\n  }\r\n\r\n  /** Envelope EntitySelectors$ */\r\n  get envelope() {\r\n    return this.getSelectors$<Model.Envelope>('Envelope');\r\n  }\r\n\r\n  /** EnvelopeSigner EntitySelectors$ */\r\n  get envelopeSigner() {\r\n    return this.getSelectors$<Model.EnvelopeSigner>('EnvelopeSigner');\r\n  }\r\n\r\n  /** HouseholdFilers EntitySelectors$ */\r\n  get householdFilers() {\r\n    return this.getSelectors$<Model.HouseholdFilers>('HouseholdFilers');\r\n  }\r\n\r\n  /** User EntitySelectors$ */\r\n  get user() {\r\n    return this.getSelectors$<Model.User>('User');\r\n  }\r\n\r\n  /** CompanyTax EntitySelectors$ */\r\n  get companyTax() {\r\n    return this.getSelectors$<Model.CompanyTax>('CompanyTax');\r\n  }\r\n\r\n  /** EmployeeTax EntitySelectors$ */\r\n  get employeeTax() {\r\n    return this.getSelectors$<Model.EmployeeTax>('EmployeeTax');\r\n  }\r\n  // #endregion well-known selectors$\r\n}\r\n\r\n// #region entity cache selector functions\r\n// TODO: Only need these two helper variables until we do cascade delete\r\nfunction employeeHelpers(entityCache: EntityCache) {\r\n  const eeMap: Dictionary<Model.Employee> = entityCache['Employee'].entities;\r\n  const removedEEs: Indexable = {};\r\n  const removedHomeAddrs: Indexable = {};\r\n\r\n  Object.keys(eeMap).forEach(eeId => {\r\n    const ee = eeMap[eeId];\r\n    if (ee.isRemoved) {\r\n      removedEEs[eeId] = true;\r\n      removedHomeAddrs[ee.homeAddressId] = true;\r\n    }\r\n  });\r\n\r\n  return { removedEEs, removedHomeAddrs };\r\n}\r\n\r\n/** Re-create the EntityCache with just the active entities (none with isRemoved:true) */\r\nfunction toActiveCache(entityCache: EntityCache) {\r\n  const entityTypes = Object.keys(entityCache);\r\n  if (entityTypes.length === 0) {\r\n    return entityCache;\r\n  }\r\n\r\n  // TODO: Only need these two helper variables until we do cascade delete\r\n  const { removedEEs, removedHomeAddrs } = employeeHelpers(entityCache);\r\n  let activeCache: EntityCache;\r\n\r\n  entityTypes.forEach(entityType => {\r\n    let entry = entityCache[entityType];\r\n\r\n    let entities = entry.entities;\r\n    let ids = entry.ids as string[];\r\n    let isMutated = false;\r\n\r\n    Object.keys(entities).forEach(eid => {\r\n      const entity = entities[eid];\r\n      let removed = entity.isRemoved ? entity : null;\r\n\r\n      // TODO: remove after cascade delete\r\n      if (!removed) {\r\n        if (entityType === 'EmployeePaymentMethod') {\r\n          removed = removedEEs[entity.employeeId] ? entity : null;\r\n        } else if (entityType === 'Address') {\r\n          removed = removedHomeAddrs[eid] ? entity : null;\r\n        }\r\n      }\r\n\r\n      if (removed) {\r\n        if (!isMutated) {\r\n          isMutated = true;\r\n          ids = [...ids];\r\n          entities = { ...entities };\r\n        }\r\n        ids = ids.filter(id => id !== eid);\r\n        delete entities[eid];\r\n      }\r\n    });\r\n\r\n    if (isMutated) {\r\n      entry = { ...entry, ids, entities: { ...entities } };\r\n      if (!activeCache) {\r\n        activeCache = { ...entityCache };\r\n      }\r\n      activeCache[entityType] = entry;\r\n    }\r\n  });\r\n\r\n  return activeCache || entityCache;\r\n}\r\n\r\n// Note: `toEntityInfos` does not delegate to `toActiveCache` because this function is on a\r\n// reasonably hot code path in validation and this different implementation\r\n// should perform better as it has less to do than `toActiveCache`.\r\n\r\n/** Flatten EntityCache to array of EntityInfos of active (non-removed) entities */\r\nfunction toEntityInfos(entityCache: EntityCache): EntityInfo[] {\r\n  const entityTypes = Object.keys(entityCache);\r\n  if (entityTypes.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  // TODO: Only need these two helper variables until we do cascade delete\r\n  const { removedEEs, removedHomeAddrs } = employeeHelpers(entityCache);\r\n\r\n  return entityTypes.reduce((acc, entityType) => {\r\n    const entityMap = entityCache[entityType].entities;\r\n\r\n    let entityInfos = Object.keys(entityMap)\r\n      .map(id => ({ entityType, entity: entityMap[id] }))\r\n      .filter(e => !e.entity.isRemoved);\r\n\r\n    // TODO: Remove these filters once we \"cascade delete\"\r\n    if (entityType === 'Address') {\r\n      entityInfos = entityInfos.filter(ei => !removedHomeAddrs[ei.entity.id]);\r\n    } else if (entityType === 'EmployeePaymentMethod') {\r\n      entityInfos = entityInfos.filter(ei => !removedEEs[ei.entity.employeeId]);\r\n    }\r\n\r\n    return acc.concat(entityInfos);\r\n  }, [] as EntityInfo[]);\r\n}\r\n// #endregion entity cache selectors\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./contact-cust-support.component\";\nvar styles_ContactCustomerSupportComponent = [\"[_nghost-%COMP%]: { display: inline}\"];\nvar RenderType_ContactCustomerSupportComponent = i0.ɵcrt({ encapsulation: 0, styles: styles_ContactCustomerSupportComponent, data: {} });\nexport { RenderType_ContactCustomerSupportComponent as RenderType_ContactCustomerSupportComponent };\nexport function View_ContactCustomerSupportComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"a\", [[\"href\", \"https://www.surepayroll.com/about/contact-us\"], [\"target\", \"_blank\"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"])), (_l()(), i0.ɵted(-1, null, [\" our Customer Support team at \"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"a\", [[\"href\", \"tel:18009148088\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"1-800-914-8088\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.linkText; _ck(_v, 1, 0, currVal_0); }); }\nexport function View_ContactCustomerSupportComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-contact-support\", [], null, null, null, View_ContactCustomerSupportComponent_0, RenderType_ContactCustomerSupportComponent)), i0.ɵdid(1, 49152, null, 0, i1.ContactCustomerSupportComponent, [], null, null)], null, null); }\nvar ContactCustomerSupportComponentNgFactory = i0.ɵccf(\"sp-contact-support\", i1.ContactCustomerSupportComponent, View_ContactCustomerSupportComponent_Host_0, { linkText: \"linkText\" }, {}, []);\nexport { ContactCustomerSupportComponentNgFactory as ContactCustomerSupportComponentNgFactory };\n","\n  <a href=\"https://www.surepayroll.com/about/contact-us\" target=\"_blank\">{{linkText}}</a>\n  our Customer Support team at <a href=\"tel:18009148088\">1-800-914-8088</a>\n  ","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\r\nimport { Document } from '@model';\r\nimport { DocumentsViewService } from './documents-view.service';\r\n\r\n@Component({\r\n  selector: 'sp-documents-list',\r\n  templateUrl: './documents-list.component.html'\r\n})\r\nexport class DocumentsListComponent {\r\n  @Input('docs') docs: Document[];\r\n  @Input() isEsign: boolean;\r\n  @ViewChild('downloadLink') private downloadLink: ElementRef;\r\n\r\n  constructor(\r\n    private documentsViewService: DocumentsViewService,\r\n  ) {}\r\n\r\n  download(doc: Document) {\r\n    const link = this.downloadLink.nativeElement as HTMLAnchorElement;\r\n    const filename = doc.title + '.pdf';\r\n\r\n    this.documentsViewService.getDocPdf(doc).subscribe(file => {\r\n      if (window.navigator.msSaveOrOpenBlob) {\r\n        // IE 11\r\n        const fn = function () {\r\n          window.navigator.msSaveOrOpenBlob(file, filename);\r\n        };\r\n        link.addEventListener('click', fn);\r\n        link.click();\r\n        link.removeEventListener('click', fn);\r\n      } else {\r\n        const blobUrl = window.URL.createObjectURL(file);\r\n        link.href = blobUrl;\r\n        link.download = filename;\r\n        link.click();\r\n        window.URL.revokeObjectURL(blobUrl);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n\r\n","export interface AddressLike {\r\n  street1?: string;\r\n  street2?: string;\r\n  city?: string; // locality\r\n  state?: string; // \"administrative_area_level_1\"\r\n  zip?: string; // postal_code (including possible suffix)\r\n  country?: 'US';\r\n}\r\n\r\nexport interface GeoAddressLike {\r\n  geoCode: string;\r\n  schoolDistrictCode?: number;\r\n  psdCode?: number;\r\n  isVerified: boolean;\r\n}\r\n\r\nexport function addressToString(address: AddressLike) {\r\n  const { street1 = '', street2 = '', city = '', state = '', zip = '' } = address;\r\n  const result = (street2\r\n    ? `${street1}, ${street2}, ${city}, ${state} ${zip}`\r\n    : `${street1}, ${city}, ${state} ${zip}`\r\n  ).replace(/\\s\\s+/g, ' ');\r\n  return result === ', , ' ? '' : result;\r\n}\r\n\r\n/**\r\n * If the address has Street, City, State and Zip\r\n * are set and syntactically valid\r\n */\r\nexport function isComplete(address: AddressLike): boolean {\r\n  return address.street1 != null && address.street1 !== '' &&\r\n    address.city != null && address.city !== '' &&\r\n    address.state != null && address.state.length === 2 &&\r\n    address.zip != null && address.zip.length > 4;\r\n}\r\n\r\nexport function formatZip(address: AddressLike): string {\r\n  const zip = address.zip;\r\n  if (zip.length === 9) {\r\n    const separatorOffset = 5;\r\n    return zip.substring(0, separatorOffset) + '-' + zip.substring(separatorOffset);\r\n  }\r\n\r\n  return zip;\r\n}\r\n\r\nexport function zipFirstDigits(address: AddressLike): string {\r\n  const separatorOffset = 5;\r\n  return address.zip.substring(0, separatorOffset);\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserManager } from 'oidc-client';\r\n\r\nimport { oidcManagerConfig } from './oidc-manager-config';\r\nimport { OidcManager } from './oidc-manager';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class OidcManagerFactory {\r\n  /** Create a new, configured oidc-client UserManager */\r\n  create(): OidcManager {\r\n    return new UserManager(oidcManagerConfig);\r\n  }\r\n}\r\n","import { UserManager } from 'oidc-client';\nimport { oidcManagerConfig } from './oidc-manager-config';\nimport * as i0 from \"@angular/core\";\nvar OidcManagerFactory = /** @class */ (function () {\n    function OidcManagerFactory() {\n    }\n    /** Create a new, configured oidc-client UserManager */\n    OidcManagerFactory.prototype.create = function () {\n        return new UserManager(oidcManagerConfig);\n    };\n    OidcManagerFactory.ngInjectableDef = i0.defineInjectable({ factory: function OidcManagerFactory_Factory() { return new OidcManagerFactory(); }, token: OidcManagerFactory, providedIn: \"root\" });\n    return OidcManagerFactory;\n}());\nexport { OidcManagerFactory };\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nvar TaxRate = /** @class */ (function () {\n    function TaxRate() {\n    }\n    return TaxRate;\n}());\nexport { TaxRate };\nexport function buildTaxBehavior(tax, taxBehavior) {\n    return __assign({}, tax, { behavior: taxBehavior, getTax: function () {\n            var _a = this, behavior = _a.behavior, getTax = _a.getTax, t = __rest(_a, [\"behavior\", \"getTax\"]);\n            return t;\n        } });\n}\nexport var EMPTY_TAXES = {\n    employeeTaxes: [],\n    companyFederalTaxes: null,\n    companyStateTaxes: []\n};\n","import { CompanyTax, EmployeeTax, TaxCategoryCode } from '@model';\r\nimport { EmployeeTaxLocation } from '@entity';\r\n\r\nexport class TaxRate {\r\n    code: string;\r\n    stateCode: string;\r\n    allowSubjectRateZero: boolean;\r\n    minAllowedRate: number;\r\n    maxAllowedRate: number;\r\n    newEmployerMin: number;\r\n    newEmployerMax: number;\r\n    detailsLink: string;\r\n}\r\n\r\n// Tax metadata, at this point its more like tax metadata\r\nexport interface ITaxBehavior {\r\n    /** If the tax should be collected without the user seeing it\r\n     * ex: other federal taxes like MED */\r\n    shouldShow: boolean;\r\n\r\n    /** If the tax requires some user input\r\n     * ex: if the tax has a Rate or Filing status */\r\n    requireUserInput: boolean;\r\n\r\n    // If the tax requires any of those inputs.\r\n    // Note that does not mean a tax has no exempt prop or ein pro. It just implies were not showing it on the UI.\r\n    hasExemption: boolean;\r\n    hasExemptionReason: boolean;\r\n    hasEin: boolean;\r\n    hasRate: boolean;\r\n    hasFilingStatus: boolean;\r\n    hasLowIncomeExempt: boolean;\r\n    hasWithholding: boolean;\r\n    hasUbi: boolean;\r\n    hasBusinessStartDate: boolean;\r\n\r\n    // Useful data regarding various fields\r\n    taxEinFormats: ITaxCodeFormat[];\r\n    filingStatuses: IFilingStatus[];\r\n    rate: TaxRate;\r\n\r\n    /** This field holds the tax mts code of another tax this tax is linked to */\r\n    useEINFromCode?: string;\r\n\r\n    /** Unique code that identities the class of taxes */\r\n    categoryCode: TaxCategoryCode;\r\n}\r\n\r\nexport interface ITaxCodeFormat {\r\n    regEx: string;\r\n    format: string;\r\n}\r\n\r\nexport interface IFilingStatus {\r\n    code: string;\r\n    description: string;\r\n}\r\n\r\nexport type TaxBehaviorWrapper<T extends CompanyTax | EmployeeTax> = T & { behavior: ITaxBehavior, getTax(): T };\r\nexport function buildTaxBehavior<T extends CompanyTax | EmployeeTax>(tax: T, taxBehavior: ITaxBehavior): TaxBehaviorWrapper<T> {\r\n    return <TaxBehaviorWrapper<T>>{\r\n        ...(tax as {}),\r\n        behavior: taxBehavior,\r\n        getTax: function (): T {\r\n            const { behavior, getTax, ...t } = this;\r\n            return t;\r\n        }\r\n    };\r\n}\r\n\r\n// Tax Provider\r\nexport interface IAvailableTaxAddressPair {\r\n    id: string;\r\n    liveAddress: IAvailableTaxAddress;\r\n    workAddress: IAvailableTaxAddress;\r\n    taxes: IAvailableTax[];\r\n}\r\n\r\nexport interface IAvailableTaxAddress {\r\n    addressLine1: string;\r\n    addressLine2: string;\r\n    city: string;\r\n    county: string;\r\n    state: string;\r\n    zip: string;\r\n    geoCode: string;\r\n    schoolDistrict?: number;\r\n    schoolDistrictName?: string;\r\n    jurisdiction?: string;\r\n    psdCode?: number;\r\n}\r\n\r\nexport interface IAvailableTax {\r\n    code: string;  // \"PA0000-001\"\r\n    description: string; // \"PENNSYLVANIA WH\"\r\n    isEmployee: boolean;\r\n    categoryDescription: string; // \"State W/H\"\r\n    displayOrder: number;\r\n    stateCode: string; // \"PA\"\r\n    taxTypeCode: string; // FD, ST, CN (County), CT (City), SD (School District)\r\n    isVariableRate?: boolean;\r\n    taxFormats: IAvailableTaxEinFormat[];\r\n    filingStatuses: IAvailableTaxFilingStatus[];\r\n    useEINFromCode?: string; // This field holds the tax mts code of another tax this tax is linked to\r\n    categoryCode: string;\r\n    canBeExempt: boolean;\r\n}\r\n\r\nexport interface IAvailableTaxEinFormat {\r\n    stateCode: string; // \"PA\"\r\n    jurisdiction: string; // \"PA0386\"\r\n    format: string; // \"##########\"\r\n    regEx: string; // \"\\\\d{10}\"\r\n}\r\n\r\nexport interface IAvailableTaxFilingStatus {\r\n    code: string; // \"H\"\r\n    description: string; // \"Head of Household\"\r\n}\r\n\r\nexport interface IAddressPairRequest {\r\n    id: string;\r\n    homeGeoCode: string;\r\n    homeSchoolDistrictCode?: number;\r\n    homePsdCode?: number;\r\n    workGeoCode: string;\r\n    workSchoolDistrictCode?: number;\r\n    workPsdCode?: number;\r\n}\r\n\r\nexport interface ITaxAddressValidation {\r\n    id: string;\r\n    isValid: boolean;\r\n\r\n    homeGeoCode?: string;\r\n    homeDsCode?: number;\r\n    homePsdCode?: number;\r\n    workGeoCode?: string;\r\n    workDsCode?: number;\r\n    workPsdCode?: number;\r\n\r\n    addressPairs?: ITaxAddressValidationPair[];\r\n}\r\n\r\nexport interface ITaxAddressValidationPair {\r\n    home: IAvailableTaxAddress;\r\n    work: IAvailableTaxAddress;\r\n}\r\n\r\n\r\n// Address Provider\r\nexport interface IAddressValidation {\r\n    isValid: boolean;\r\n    suggestedAddresses: IAvailableTaxAddress[];\r\n}\r\n\r\n// Tax Rate Provider\r\nexport interface ITaxRateRequestItem {\r\n    code: string;\r\n    state: string;\r\n}\r\n\r\nexport const EMPTY_TAXES: ITaxes = {\r\n    employeeTaxes: [],\r\n    companyFederalTaxes: null,\r\n    companyStateTaxes: []\r\n};\r\n\r\nexport interface ITaxes {\r\n    /** All the employees that have taxes */\r\n    employeeTaxes: IEmployeeTaxes[];\r\n\r\n    /** The taxes given the employees available in the state */\r\n    companyFederalTaxes: ICompanyFederalTaxes;\r\n\r\n    /** The taxes given the employees available in the state */\r\n    companyStateTaxes: ICompanyStateTaxes[];\r\n}\r\n\r\nexport interface IEmployeeTaxes {\r\n    /** All the employees that have a state address */\r\n    employeeLocation: EmployeeTaxLocation;\r\n\r\n    /** If the employee address pair was truly verified this status is confirmed by calling the tax api.\r\n     * Even if the employeeLocation is verified this status will reflect absolute reality  */\r\n    addressVerified: boolean;\r\n\r\n    /** The taxes given the employees available in the state */\r\n    taxes: TaxBehaviorWrapper<EmployeeTax>[];\r\n}\r\n\r\nexport interface ICompanyFederalTaxes {\r\n    /** Are all company address verified */\r\n    allCompanyAddressesVerified: boolean;\r\n\r\n    /** The taxes given the employees available in the state */\r\n    taxes: TaxBehaviorWrapper<CompanyTax>[];\r\n}\r\n\r\nexport interface ICompanyStateTaxes {\r\n    /** The state the taxes are on. '' for federal level */\r\n    state: string;\r\n\r\n    /** All the employees that have a state address */\r\n    employeesLocations: EmployeeTaxLocation[];\r\n\r\n    /** Are all the company state addresses tax valid? */\r\n    allCompanyStateAddressesVerified: boolean;\r\n\r\n    /** Are all the employee addresses tax valid? */\r\n    allEmployeeStateAddressesVerified: boolean;\r\n\r\n    /** The taxes given the employees available in the state */\r\n    taxes: TaxBehaviorWrapper<CompanyTax>[];\r\n}\r\n\r\n// Tax save helper\r\nexport interface TaxSavePackage<T extends CompanyTax | EmployeeTax> {\r\n    modelType: string;\r\n\r\n    newTaxes: T[];\r\n\r\n    updatedTaxes: T[];\r\n\r\n    removedTaxes: T[];\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'phone' })\r\nexport class PhonePipe implements PipeTransform {\r\n  missingValue = 'missing';\r\n\r\n  transform(value: number | string): string {\r\n    if (!value) {\r\n      return this.missingValue;\r\n    } else {\r\n      value = value.toString();\r\n      const text = value.replace(/[^\\d]+/g, '').padEnd(Math.max(0, 10 - value.length), ' ') ;\r\n      return `(${text.slice(0, 3)}) ${text.slice(3, Math.min(6, value.length))}-${text.slice(6)}`;\r\n    }\r\n  }\r\n}\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { environment } from '@environment';\r\n\r\nimport {\r\n  AddressFinderService,\r\n  BrowserGeolocationService,\r\n  GeolocationService,\r\n  GooglePlacesService\r\n} from './services/location-services';\r\nimport { httpInterceptorProviders } from './http-interceptors';\r\nimport { throwIfAlreadyLoaded } from './module-import-check';\r\nimport { TitleService } from './services/title.service';\r\n\r\n/**\r\n * Application services and components that are core to running the application.\r\n * It is eagerly loaded when the application starts.\r\n * This module should be imported exactly once, in the AppModule.\r\n */\r\n@NgModule({\r\n  // DO NOT declare components here. Put them in `core-components/` or `shared/\r\n  providers: [\r\n    { provide: AddressFinderService, useClass: GooglePlacesService },\r\n    { provide: GeolocationService, useClass: BrowserGeolocationService },\r\n    ...httpInterceptorProviders\r\n  ]\r\n})\r\n/**\r\n * Core app services\r\n */\r\nexport class CoreModule {\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    parentModule: CoreModule,\r\n    addressFinder: AddressFinderService,\r\n    titleService: TitleService // inject it to start it\r\n  ) {\r\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\r\n    addressFinder.loadLibrary();\r\n  }\r\n}\r\n","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\r\n  if (parentModule) {\r\n    const msg = `${moduleName} has already been loaded. Import Core modules in the AppModule only.`;\r\n    throw new Error(msg);\r\n  }\r\n}\r\n","export * from './account-view-guard';\r\nexport * from './admin-console-guard';\r\nexport * from './auth-failed-guard';\r\nexport * from './data-entry-page-guard';\r\nexport * from './page-leave-guard';\r\nexport * from './signup-page-guard';\r\nexport * from './single-page-status-guard';\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { WellKnownRoutes } from '@core/well-known-routes';\r\n\r\n@Component({\r\n  selector: 'sp-nav-bottom',\r\n  template: `\r\n  <div class=\"nav-button-container\">\r\n    <div class=\"nav-buttons d-flex justify-content-end\">\r\n      <a *ngIf=\"returnTo\" [routerLink]=\"[returnTo]\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" type=\"button\" [disabled]=\"disabled || disableReturnTo\"\r\n          id=\"navBottomReturnTo\">\r\n          {{returnToLabel}}\r\n        </button>\r\n      </a>\r\n      <a *ngIf=\"back\" [routerLink]=\"[back]\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" type=\"button\" [disabled]=\"disabled || disableBack\" id=\"navBottomBack\">\r\n          {{backLabel}}\r\n        </button>\r\n      </a>\r\n      <a *ngIf=\"next\" [routerLink]=\"[next]\">\r\n        <button type=\"button\" class=\"btn btn-navigation\" type=\"button\" [disabled]=\"disabled || disableNext\" id=\"navBottomNext\">\r\n          {{nextLabel}}\r\n        </button>\r\n      </a>\r\n    </div>\r\n  </div>\r\n  `\r\n})\r\nexport class NavBottomComponent implements OnInit {\r\n  dashboardRoute = WellKnownRoutes.Dashboard;\r\n  defaultRoute = WellKnownRoutes.Dashboard;\r\n\r\n  /** Set true and ALL navigation buttons are disabled. */\r\n  @Input() disabled = false;\r\n  @Input() disableBack = false;\r\n  @Input() disableNext = false;\r\n  @Input() disableReturnTo = false;\r\n\r\n  // Bind to any of the following route values to change them from dashboard\r\n\r\n  // Probably don't change these two values\r\n\r\n  /** Where \"returnTo\" button goes(bind to null to hide button) */\r\n  @Input() returnTo = this.dashboardRoute;\r\n  /** \"returnTo\" button label */\r\n  @Input() returnToLabel = 'Return to Dashboard';\r\n\r\n  /** Where back button goes (bind to null to hide button) */\r\n  @Input() back: string = this.defaultRoute;\r\n  /** \"back\" button label */\r\n  @Input() backLabel = 'Back';\r\n\r\n  /** Where next button goes (bind to null to hide button) */\r\n  @Input() next: string = this.defaultRoute;\r\n  /** \"next\" button label */\r\n  @Input() nextLabel = 'Next Step';\r\n\r\n  ngOnInit() {\r\n    this.back = this.back == null ? null : this.back;\r\n    this.next = this.next == null ? null : this.next;\r\n    this.returnTo = this.returnTo == null ? null : this.returnTo;\r\n  }\r\n}\r\n","// This example displays an address form, using the autocomplete feature\r\n// of the Google Places API to help users fill in the information.\r\n// https://developers.google.com/maps/documentation/javascript/places-autocomplete#place_autocomplete_service\r\n\r\n// This example requires the Places library. Include the libraries=places\r\n// parameter when you first load the API. For example:\r\n// <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\">\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\n\r\nimport { empty, Observable, of } from 'rxjs';\r\nimport { first, map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environment';\r\n\r\nimport { AddressLike } from '@utils';\r\nimport { AddressFinderService } from './address-finder.service';\r\nimport { LoggerService } from '@core/services/logger.service';\r\nimport { GeolocationService } from './geolocation.service';\r\nimport { WindowToken } from '@core/window';\r\n\r\nimport {\r\n  Autocomplete,\r\n  AutocompletePrediction,\r\n  AutocompleteService,\r\n  nullAutocomplete,\r\n  nullAutocompleteService,\r\n  AutocompletionRequest,\r\n  LatLngLiteral,\r\n  PlaceResult\r\n} from './interfaces';\r\n\r\nconst emptyAddress: AddressLike = {\r\n  street1: '',\r\n  street2: '',\r\n  city: '',\r\n  state: '',\r\n  zip: '',\r\n  country: 'US'\r\n};\r\n\r\n// Relies on Google Places AutocompleteService\r\n// https://developers.google.com/maps/documentation/javascript/reference/3/#AutocompleteService\r\n// Uses the getPlacePredictions() method (not the QueryPrediction with its search terms)\r\n\r\n// Install google maps asynchronously as soon as possible\r\nlet googleMapsInstalled = false;\r\n\r\n/**\r\n * Google Places Service\r\n * Look up addresses using the Google Places Web API (AutoCompleteService)\r\n * Presupposes that Google Places library has been loaded from a script on the host web page.\r\n */\r\n@Injectable() // provided explicitly in CoreModule as AddressFinderService\r\nexport class GooglePlacesService implements AddressFinderService {\r\n  private _autocompleteService: AutocompleteService;\r\n  private get autocompleteService(): AutocompleteService {\r\n    return this._autocompleteService ? this._autocompleteService : this.setAutocompleteService();\r\n  }\r\n  private isChrome: boolean;\r\n  private okStatus: string;\r\n\r\n  constructor(\r\n    private logger: LoggerService,\r\n    @Inject(WindowToken) private window: Window,\r\n    @Optional() private geolocationService?: GeolocationService\r\n  ) {\r\n    this.disableBrowserAutocomplete = this.disableBrowserAutocomplete.bind(this);\r\n    this.isChrome = !!(<any>window).chrome && !!(<any>window).chrome.app && !!(<any>window).chrome.csi;\r\n\r\n    if (!geolocationService) {\r\n      // Nullo version for when real GeolocationService is unavailable.\r\n      this.geolocationService = new GeolocationService();\r\n    }\r\n  }\r\n\r\n  getGoogleMapsService() {\r\n    const google = (this.window as any).google;\r\n    return google && google.maps;\r\n  }\r\n\r\n  getAutocompleteAddress(inputEl: HTMLInputElement): Observable<AddressLike> {\r\n    const ac = this.getAutocompletePlace(inputEl);\r\n    if (!ac) {\r\n      return null;\r\n    }\r\n\r\n    if (this.isChrome) {\r\n      // wait for response, then disable autocomplete.  Hack to wait until after Places has set `autocomplete=\"off\"` on inputEl.\r\n      this.autocompleteService.getPlacePredictions({ input: 'home', componentRestrictions: { country: 'us' }, types: ['geocode'] }, () => {\r\n        this.disableBrowserAutocomplete(inputEl);\r\n      });\r\n    }\r\n\r\n    return ac.pipe(map(toAddress));\r\n  }\r\n\r\n  getAutocompletePlace(inputEl: HTMLInputElement): Observable<PlaceResult> {\r\n    const maps = this.getGoogleMapsService();\r\n    if (!maps) {\r\n      // not available yet\r\n      return null;\r\n    }\r\n\r\n    const placeChanges$ = new Observable<PlaceResult>(observer => {\r\n      let autocomplete: Autocomplete = new maps.places.Autocomplete(inputEl, {\r\n        componentRestrictions: { country: 'us' },\r\n        types: ['geocode']\r\n      });\r\n\r\n      autocomplete.addListener('place_changed', () => {\r\n        const place = autocomplete.getPlace();\r\n        observer.next(place);\r\n      });\r\n\r\n      const geoSubscription = this.geolocationService.currentPosition$.subscribe(position => {\r\n        if (!position) {\r\n          return;\r\n        }\r\n        try {\r\n          const center: LatLngLiteral = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          };\r\n          const radius = position.coords.accuracy;\r\n          const circle = new maps.Circle({ center, radius });\r\n          autocomplete.setBounds(circle.getBounds());\r\n        } catch (error) {\r\n          // do nothing\r\n        }\r\n      });\r\n\r\n      // Teardown on unsubscribe\r\n      return () => {\r\n        geoSubscription.unsubscribe();\r\n        // https://developers.google.com/maps/documentation/javascript/reference/3/?csw=1#MapsEventListener\r\n        maps.event.clearInstanceListeners(autocomplete);\r\n        autocomplete = null;\r\n      };\r\n    });\r\n\r\n    return placeChanges$;\r\n  }\r\n\r\n  private setAutocompleteService(): AutocompleteService {\r\n    try {\r\n      const maps = this.getGoogleMapsService();\r\n      if (!maps) {\r\n        // not available yet; return the nullo and try again next time\r\n        return nullAutocompleteService;\r\n      }\r\n      this._autocompleteService = new maps.places.AutocompleteService();\r\n      this.okStatus = maps.places.PlacesServiceStatus.OK;\r\n    } catch (error) {\r\n      // failed to create AutoComplete; use the nullo from now on.\r\n      this.logger.error('GooglePlacesService autocompleteService setup error: ', error);\r\n      this._autocompleteService = nullAutocompleteService;\r\n    }\r\n    return this._autocompleteService;\r\n  }\r\n\r\n  getAutocompletePredictions(input: string): Observable<AutocompletePrediction[]> {\r\n    return new Observable(observer => {\r\n      if (!input) {\r\n        resolve(null);\r\n        return;\r\n      }\r\n\r\n      const callback = (predictions: AutocompletePrediction[], status: string) => {\r\n        if (status !== this.okStatus) {\r\n          this.logger.error('GooglePlacesService status error: ' + status);\r\n          predictions = null;\r\n        }\r\n        resolve(predictions);\r\n      };\r\n\r\n      const req: AutocompletionRequest = {\r\n        input,\r\n        componentRestrictions: { country: 'us' },\r\n        types: ['geocode']\r\n      };\r\n\r\n      this.geolocationService.currentPosition$.pipe(first()).subscribe(position => {\r\n        if (position) {\r\n          req.location = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          };\r\n          req.radius = position.coords.accuracy;\r\n        }\r\n        this.autocompleteService.getPlacePredictions(req, callback);\r\n      });\r\n\r\n      function resolve(predictions: AutocompletePrediction[]) {\r\n        observer.next(predictions || null);\r\n        observer.complete();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load the Google Maps Service (via dynamic script)\r\n   * Instantiate and call this method early (as in the module that provides this service)\r\n   * so that google maps installs before you need it.\r\n   */\r\n  loadLibrary() {\r\n    const Maps = this.getGoogleMapsService();\r\n    if (Maps || googleMapsInstalled) {\r\n      return; // already installed\r\n    }\r\n    googleMapsInstalled = true; // only try to install it once\r\n\r\n    // Gets the API url from the environment (`googlePlacesApiUrl`).\r\n    // E.g. https://maps.googleapis.com/maps/api/js?key=AIzaSyBl3MM25oNKAgODg9RzYYDqkiYNPQRNqY4&libraries=places\r\n    const apiUrl = environment.googlePlacesApiUrl;\r\n\r\n    // no library if no url\r\n    if (!apiUrl) {\r\n      return;\r\n    }\r\n\r\n    // load after the page's first script element\r\n    const ref = this.window.document.getElementsByTagName('script')[0];\r\n    const script = this.window.document.createElement('script');\r\n    script.src = apiUrl;\r\n    ref.parentNode.insertBefore(script, ref);\r\n  }\r\n\r\n  /**\r\n   * Disable the browser's built-in autocomplete because it conflicts with Google Places\r\n   * @param inputEl\r\n   */\r\n  disableBrowserAutocomplete(inputEl: HTMLInputElement) {\r\n    // use \"inactive\" (or other random string, not \"off\") to disable autocomplete in Chrome browser\r\n    const off = this.isChrome ? 'inactive' : 'off';\r\n    inputEl.setAttribute('autocomplete', off);\r\n  }\r\n}\r\n\r\n/**\r\n * Map Autocomplete {PlaceResult} to an application {Address}\r\n */\r\nfunction toAddress({ address_components }: PlaceResult): AddressLike {\r\n  if (!address_components) {\r\n    return emptyAddress;\r\n  }\r\n  return address_components.reduce(\r\n    (parts: AddressLike, part) => {\r\n      switch (part.types[0]) {\r\n        case 'street_number': {\r\n          parts.street1 = (part.long_name + ' ' + parts.street1).trim();\r\n          break;\r\n        }\r\n        case 'route': {\r\n          parts.street1 = (parts.street1 + ' ' + part.long_name).trim();\r\n          break;\r\n        }\r\n        case 'premise': {\r\n          parts.street2 = part.long_name;\r\n          break;\r\n        }\r\n        case 'locality': {\r\n          parts.city = part.long_name;\r\n          break;\r\n        }\r\n        case 'administrative_area_level_1': {\r\n          parts.state = part.short_name;\r\n          break;\r\n        }\r\n        case 'postal_code': {\r\n          parts.zip = part.long_name + (parts.zip || '').trim();\r\n          break;\r\n        }\r\n        case 'postal_code_suffix': {\r\n          parts.zip = ((parts.zip || '') + '-' + part.long_name).trim();\r\n          break;\r\n        }\r\n      }\r\n      return parts;\r\n    },\r\n    { ...emptyAddress, street1: '' }\r\n  );\r\n}\r\n","// This example displays an address form, using the autocomplete feature\n// of the Google Places API to help users fill in the information.\n// https://developers.google.com/maps/documentation/javascript/places-autocomplete#place_autocomplete_service\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\nimport { environment } from '@environment';\nimport { LoggerService } from '@core/services/logger.service';\nimport { GeolocationService } from './geolocation.service';\nimport { Autocomplete, AutocompletePrediction, AutocompleteService, nullAutocompleteService, AutocompletionRequest, LatLngLiteral, PlaceResult } from './interfaces';\nvar emptyAddress = {\n    street1: '',\n    street2: '',\n    city: '',\n    state: '',\n    zip: '',\n    country: 'US'\n};\n// Relies on Google Places AutocompleteService\n// https://developers.google.com/maps/documentation/javascript/reference/3/#AutocompleteService\n// Uses the getPlacePredictions() method (not the QueryPrediction with its search terms)\n// Install google maps asynchronously as soon as possible\nvar googleMapsInstalled = false;\n/**\n * Google Places Service\n * Look up addresses using the Google Places Web API (AutoCompleteService)\n * Presupposes that Google Places library has been loaded from a script on the host web page.\n */\nvar GooglePlacesService = /** @class */ (function () {\n    function GooglePlacesService(logger, window, geolocationService) {\n        this.logger = logger;\n        this.window = window;\n        this.geolocationService = geolocationService;\n        this.disableBrowserAutocomplete = this.disableBrowserAutocomplete.bind(this);\n        this.isChrome = !!window.chrome && !!window.chrome.app && !!window.chrome.csi;\n        if (!geolocationService) {\n            // Nullo version for when real GeolocationService is unavailable.\n            this.geolocationService = new GeolocationService();\n        }\n    }\n    Object.defineProperty(GooglePlacesService.prototype, \"autocompleteService\", {\n        get: function () {\n            return this._autocompleteService ? this._autocompleteService : this.setAutocompleteService();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GooglePlacesService.prototype.getGoogleMapsService = function () {\n        var google = this.window.google;\n        return google && google.maps;\n    };\n    GooglePlacesService.prototype.getAutocompleteAddress = function (inputEl) {\n        var _this = this;\n        var ac = this.getAutocompletePlace(inputEl);\n        if (!ac) {\n            return null;\n        }\n        if (this.isChrome) {\n            // wait for response, then disable autocomplete.  Hack to wait until after Places has set `autocomplete=\"off\"` on inputEl.\n            this.autocompleteService.getPlacePredictions({ input: 'home', componentRestrictions: { country: 'us' }, types: ['geocode'] }, function () {\n                _this.disableBrowserAutocomplete(inputEl);\n            });\n        }\n        return ac.pipe(map(toAddress));\n    };\n    GooglePlacesService.prototype.getAutocompletePlace = function (inputEl) {\n        var _this = this;\n        var maps = this.getGoogleMapsService();\n        if (!maps) {\n            // not available yet\n            return null;\n        }\n        var placeChanges$ = new Observable(function (observer) {\n            var autocomplete = new maps.places.Autocomplete(inputEl, {\n                componentRestrictions: { country: 'us' },\n                types: ['geocode']\n            });\n            autocomplete.addListener('place_changed', function () {\n                var place = autocomplete.getPlace();\n                observer.next(place);\n            });\n            var geoSubscription = _this.geolocationService.currentPosition$.subscribe(function (position) {\n                if (!position) {\n                    return;\n                }\n                try {\n                    var center = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n                    var radius = position.coords.accuracy;\n                    var circle = new maps.Circle({ center: center, radius: radius });\n                    autocomplete.setBounds(circle.getBounds());\n                }\n                catch (error) {\n                    // do nothing\n                }\n            });\n            // Teardown on unsubscribe\n            return function () {\n                geoSubscription.unsubscribe();\n                // https://developers.google.com/maps/documentation/javascript/reference/3/?csw=1#MapsEventListener\n                maps.event.clearInstanceListeners(autocomplete);\n                autocomplete = null;\n            };\n        });\n        return placeChanges$;\n    };\n    GooglePlacesService.prototype.setAutocompleteService = function () {\n        try {\n            var maps = this.getGoogleMapsService();\n            if (!maps) {\n                // not available yet; return the nullo and try again next time\n                return nullAutocompleteService;\n            }\n            this._autocompleteService = new maps.places.AutocompleteService();\n            this.okStatus = maps.places.PlacesServiceStatus.OK;\n        }\n        catch (error) {\n            // failed to create AutoComplete; use the nullo from now on.\n            this.logger.error('GooglePlacesService autocompleteService setup error: ', error);\n            this._autocompleteService = nullAutocompleteService;\n        }\n        return this._autocompleteService;\n    };\n    GooglePlacesService.prototype.getAutocompletePredictions = function (input) {\n        var _this = this;\n        return new Observable(function (observer) {\n            if (!input) {\n                resolve(null);\n                return;\n            }\n            var callback = function (predictions, status) {\n                if (status !== _this.okStatus) {\n                    _this.logger.error('GooglePlacesService status error: ' + status);\n                    predictions = null;\n                }\n                resolve(predictions);\n            };\n            var req = {\n                input: input,\n                componentRestrictions: { country: 'us' },\n                types: ['geocode']\n            };\n            _this.geolocationService.currentPosition$.pipe(first()).subscribe(function (position) {\n                if (position) {\n                    req.location = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n                    req.radius = position.coords.accuracy;\n                }\n                _this.autocompleteService.getPlacePredictions(req, callback);\n            });\n            function resolve(predictions) {\n                observer.next(predictions || null);\n                observer.complete();\n            }\n        });\n    };\n    /**\n     * Load the Google Maps Service (via dynamic script)\n     * Instantiate and call this method early (as in the module that provides this service)\n     * so that google maps installs before you need it.\n     */\n    GooglePlacesService.prototype.loadLibrary = function () {\n        var Maps = this.getGoogleMapsService();\n        if (Maps || googleMapsInstalled) {\n            return; // already installed\n        }\n        googleMapsInstalled = true; // only try to install it once\n        // Gets the API url from the environment (`googlePlacesApiUrl`).\n        // E.g. https://maps.googleapis.com/maps/api/js?key=AIzaSyBl3MM25oNKAgODg9RzYYDqkiYNPQRNqY4&libraries=places\n        var apiUrl = environment.googlePlacesApiUrl;\n        // no library if no url\n        if (!apiUrl) {\n            return;\n        }\n        // load after the page's first script element\n        var ref = this.window.document.getElementsByTagName('script')[0];\n        var script = this.window.document.createElement('script');\n        script.src = apiUrl;\n        ref.parentNode.insertBefore(script, ref);\n    };\n    /**\n     * Disable the browser's built-in autocomplete because it conflicts with Google Places\n     * @param inputEl\n     */\n    GooglePlacesService.prototype.disableBrowserAutocomplete = function (inputEl) {\n        // use \"inactive\" (or other random string, not \"off\") to disable autocomplete in Chrome browser\n        var off = this.isChrome ? 'inactive' : 'off';\n        inputEl.setAttribute('autocomplete', off);\n    };\n    return GooglePlacesService;\n}());\nexport { GooglePlacesService };\n/**\n * Map Autocomplete {PlaceResult} to an application {Address}\n */\nfunction toAddress(_a) {\n    var address_components = _a.address_components;\n    if (!address_components) {\n        return emptyAddress;\n    }\n    return address_components.reduce(function (parts, part) {\n        switch (part.types[0]) {\n            case 'street_number': {\n                parts.street1 = (part.long_name + ' ' + parts.street1).trim();\n                break;\n            }\n            case 'route': {\n                parts.street1 = (parts.street1 + ' ' + part.long_name).trim();\n                break;\n            }\n            case 'premise': {\n                parts.street2 = part.long_name;\n                break;\n            }\n            case 'locality': {\n                parts.city = part.long_name;\n                break;\n            }\n            case 'administrative_area_level_1': {\n                parts.state = part.short_name;\n                break;\n            }\n            case 'postal_code': {\n                parts.zip = part.long_name + (parts.zip || '').trim();\n                break;\n            }\n            case 'postal_code_suffix': {\n                parts.zip = ((parts.zip || '') + '-' + part.long_name).trim();\n                break;\n            }\n        }\n        return parts;\n    }, __assign({}, emptyAddress, { street1: '' }));\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Company, companyKind } from '@model';\r\n\r\n/** Returns the displayable \"kind\" of customer - 'Household' or 'Company' */\r\n@Pipe({ name: 'companyKind', pure: true })\r\nexport class CompanyKindPipe implements PipeTransform {\r\n  transform(company: Company): string {\r\n    return companyKind(company);\r\n  }\r\n}\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { InjectionToken } from '@angular/core';\nimport { forkJoin, of, combineLatest, Subject } from 'rxjs';\nimport { map, switchMap, startWith, shareReplay } from 'rxjs/operators';\nimport { tag } from 'rxjs-spy/operators/tag';\nimport { ValidationMetadata } from './validation-metadata';\nimport { ValidationTriggerService } from '@validation/validation-trigger.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./validation-trigger.service\";\nexport var VALIDATION_ENTITY_METADATA = new InjectionToken('ValidationEntityMetadata');\nexport var VALIDATOR_FACTORY = new InjectionToken('ValidationFactory');\nvar ValidationService = /** @class */ (function () {\n    function ValidationService(validationTriggerService, validationMetadata, factories) {\n        this.validationTriggerService = validationTriggerService;\n        this.modelValidated = new Subject();\n        var metadata = (validationMetadata || [])\n            .map(function (item) { return Array.isArray(item) ? item : [item]; })\n            .reduce(function (prev, curr) { return prev.concat(curr); }, []);\n        this.validationMetadata = new ValidationMetadata(metadata, factories || []);\n    }\n    Object.defineProperty(ValidationService.prototype, \"modelValidated$\", {\n        get: function () {\n            return this.modelValidated.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ValidationService.prototype.validateModel = function (model, modelType, async, predicate) {\n        var _this = this;\n        var validationErrors = [];\n        predicate = predicate || (function () { return true; });\n        var modelValidationMetadata = this.validationMetadata.getModelConfig(modelType);\n        if (modelValidationMetadata) {\n            // Execute model level validators\n            var modelValidators = this.filterValidators(modelValidationMetadata.validators, async, predicate);\n            validationErrors = validationErrors.concat(modelValidators.map(function (modelValidator) {\n                var context = __assign({ model: model, modelType: modelType, metadata: modelValidationMetadata, isClient: true, isServer: false }, modelValidator.context);\n                if (!modelValidator.evalCondition(context)) {\n                    return async ? of(null) : null;\n                }\n                var validator = modelValidator.getValidator();\n                return validator.validate(model, context);\n            }));\n            // Execute property validators\n            var properties = modelValidationMetadata.properties;\n            properties.forEach(function (propertyMetadata) {\n                var propertyValidators = _this.filterValidators(propertyMetadata.validators, async, function (validator) { return predicate(validator, propertyMetadata); });\n                validationErrors = validationErrors.concat(propertyValidators.map(function (propertyValidator) {\n                    var context = __assign({ model: model, modelType: modelType, metadata: modelValidationMetadata, propertyName: propertyMetadata.propertyName, displayName: propertyMetadata.displayName, isClient: true, isServer: false }, propertyValidator.context);\n                    if (!propertyValidator.evalCondition(context)) {\n                        return async ? of(null) : null;\n                    }\n                    var validator = propertyValidator.getValidator();\n                    return validator.validate(model[propertyMetadata.propertyName], context);\n                }));\n            });\n        }\n        if (async) {\n            var asyncErrors = validationErrors;\n            var asyncResult = forkJoin(asyncErrors).pipe(map(function (errors) {\n                errors = errors.filter(function (error) { return !!error; });\n                return errors.length ? errors : null;\n            }));\n            asyncResult.subscribe(function (errors) {\n                _this.modelValidated.next({ model: model, validationErrors: errors });\n            });\n            return asyncResult;\n        }\n        validationErrors = validationErrors.filter(function (error) { return !!error; });\n        var result = validationErrors.length ? validationErrors : null;\n        this.modelValidated.next({ model: model, validationErrors: result });\n        return result;\n    };\n    /**\n     * Executes all asynchronous and synchronous validation rules for all entities in the cache\n     * @param predicate Optional predicate to control execution of provided validator\n     * @returns Observable emitting validation errors and entity info\n     */\n    ValidationService.prototype.validateEntityCache = function (predicate) {\n        var _this = this;\n        return this.validationTriggerService.triggerValidations$.pipe(switchMap(function (entities) {\n            if (entities.length === 0) {\n                return of({ entities: entities, validationErrors: [] });\n            }\n            var syncValidations = of(_this.validateEntities(entities, false, predicate));\n            var asyncValidations = _this.validateEntities(entities, true, predicate)\n                .map(function (o) { return o.pipe(startWith([])); });\n            return combineLatest.apply(void 0, [syncValidations].concat(asyncValidations)).pipe(map(function (results) { return results.reduce(function (prev, curr) { return prev.concat((curr || [])); }, []); }), map(function (validationErrors) {\n                return { entities: entities, validationErrors: validationErrors };\n            }));\n        }), tag('validateEntityCache'), shareReplay(1));\n    };\n    ValidationService.prototype.filterValidators = function (validators, async, predicate) {\n        if (!async) {\n            return validators.filter(function (validator) { return !validator.async && predicate(validator); });\n        }\n        return validators.filter(function (validator) { return validator.async && predicate(validator); });\n    };\n    ValidationService.prototype.validateEntities = function (entities, async, predicate) {\n        var _this = this;\n        var conditionalEntities = entities\n            .filter(function (entityInfo) {\n            var modelMetadata = _this.validationMetadata.getModelConfig(entityInfo.entityType);\n            return modelMetadata && modelMetadata.evalCondition(entities, entityInfo.entity);\n        });\n        if (!async) {\n            return conditionalEntities\n                .map(function (entityInfo) { return _this.validateModel(entityInfo.entity, entityInfo.entityType, false, predicate); })\n                .reduce(function (prev, curr) { return prev.concat((curr || [])); }, []);\n        }\n        return conditionalEntities\n            .map(function (entityInfo) { return _this.validateModel(entityInfo.entity, entityInfo.entityType, true, predicate); });\n    };\n    ValidationService.ngInjectableDef = i0.defineInjectable({ factory: function ValidationService_Factory() { return new ValidationService(i0.inject(i1.ValidationTriggerService), i0.inject(VALIDATION_ENTITY_METADATA, 8), i0.inject(VALIDATOR_FACTORY, 8)); }, token: ValidationService, providedIn: \"root\" });\n    return ValidationService;\n}());\nexport { ValidationService };\n","import { InjectionToken, Injectable, Optional, Inject } from '@angular/core';\r\n\r\nimport { Observable, forkJoin, of, combineLatest, Subject } from 'rxjs';\r\nimport { map, switchMap, startWith, shareReplay } from 'rxjs/operators';\r\nimport { tag } from 'rxjs-spy/operators/tag';\r\n\r\nimport { EntityInfo } from '@entity/entity-selectors';\r\nimport { ModelValidationMetadataMap, ValidationMetadata, ValidatorMetadata, PropertyMetadata } from './validation-metadata';\r\nimport { ValidatorFactory, ValidationError, ValidationContext, ValidationContextBase } from './validator';\r\nimport { ValidationTriggerService } from '@validation/validation-trigger.service';\r\n\r\nexport type ModelValidationMetadataLike = (ModelValidationMetadataMap | ModelValidationMetadataMap[])[];\r\n\r\nexport const VALIDATION_ENTITY_METADATA = new InjectionToken<ModelValidationMetadataLike>('ValidationEntityMetadata');\r\nexport const VALIDATOR_FACTORY = new InjectionToken<ValidatorFactory[]>('ValidationFactory');\r\n\r\nexport type ValidationResult = ValidationError[] | null;\r\n\r\nexport type ValidatorPredicate = (validator: ValidatorMetadata, property?: PropertyMetadata) => boolean;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ValidationService {\r\n\r\n  readonly validationMetadata: ValidationMetadata;\r\n\r\n  private modelValidated = new Subject<{ model: any, validationErrors: ValidationError[] }>();\r\n\r\n  constructor(\r\n    private validationTriggerService: ValidationTriggerService,\r\n    @Optional() @Inject(VALIDATION_ENTITY_METADATA) validationMetadata: ModelValidationMetadataLike,\r\n    @Optional() @Inject(VALIDATOR_FACTORY) factories: ValidatorFactory[]\r\n  ) {\r\n    const metadata = (validationMetadata || [])\r\n      .map(item => Array.isArray(item) ? item : [item])\r\n      .reduce((prev, curr) => [...prev, ...curr], []);\r\n    this.validationMetadata = new ValidationMetadata(metadata, factories || []);\r\n  }\r\n\r\n  get modelValidated$() {\r\n    return this.modelValidated.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Executes all asynchronous validation rules defined for the provided entityType.\r\n   * @param model The model to be validated\r\n   * @param modelType The type of the model to be validated\r\n   * @param async true to execute asynchronous validators, false to execute synchronous validators\r\n   * @param predicate Optional predicate to control execution of provided validator\r\n   */\r\n  validateModel(model: any, modelType: string, async: true,\r\n    predicate?: ValidatorPredicate): Observable<ValidationResult>;\r\n\r\n  /**\r\n   * Executes all synchronous validation rules defined for the provided entityType.\r\n   * @param model The model to be validated\r\n   * @param modeltype The type of the model to be validated\r\n   * @param async true to execute asynchronous validators, false to execute synchronous validators\r\n   * @param predicate Optional predicate to control execution of provided validator\r\n   */\r\n  validateModel(model: any, modeltype: string, async?: boolean,\r\n    predicate?: ValidatorPredicate): ValidationResult;\r\n\r\n  validateModel(model: any, modelType: string, async?: boolean,\r\n    predicate?: ValidatorPredicate): Observable<ValidationResult> | ValidationResult {\r\n\r\n    let validationErrors: (Observable<ValidationError> | ValidationError)[] = [];\r\n    predicate = predicate || (() => true);\r\n\r\n    const modelValidationMetadata = this.validationMetadata.getModelConfig(modelType);\r\n    if (modelValidationMetadata) {\r\n      // Execute model level validators\r\n      const modelValidators = this.filterValidators(modelValidationMetadata.validators, async, predicate);\r\n      validationErrors = [...validationErrors, ...modelValidators.map(modelValidator => {\r\n        const context: ValidationContext = {\r\n          model: model,\r\n          modelType: modelType,\r\n          metadata: modelValidationMetadata,\r\n          isClient: true,\r\n          isServer: false,\r\n          ...modelValidator.context as ValidationContextBase\r\n        };\r\n        if (!modelValidator.evalCondition(context)) {\r\n          return async ? of(null) : null;\r\n        }\r\n        const validator = modelValidator.getValidator();\r\n        return validator.validate(model, context);\r\n      })];\r\n\r\n      // Execute property validators\r\n      const properties = modelValidationMetadata.properties;\r\n      properties.forEach(propertyMetadata => {\r\n        const propertyValidators = this.filterValidators(propertyMetadata.validators, async,\r\n          validator => predicate(validator, propertyMetadata));\r\n        validationErrors = [...validationErrors, ...propertyValidators.map(propertyValidator => {\r\n          const context: ValidationContext = {\r\n            model: model,\r\n            modelType: modelType,\r\n            metadata: modelValidationMetadata,\r\n            propertyName: propertyMetadata.propertyName,\r\n            displayName: propertyMetadata.displayName,\r\n            isClient: true,\r\n            isServer: false,\r\n            ...propertyValidator.context as ValidationContextBase\r\n          };\r\n          if (!propertyValidator.evalCondition(context)) {\r\n            return async ? of(null) : null;\r\n          }\r\n          const validator = propertyValidator.getValidator();\r\n          return validator.validate(model[propertyMetadata.propertyName], context);\r\n        })];\r\n      });\r\n    }\r\n\r\n    if (async) {\r\n      const asyncErrors = validationErrors as Observable<ValidationError>[];\r\n      const asyncResult = forkJoin(asyncErrors).pipe(\r\n        map(errors => {\r\n          errors = errors.filter(error => !!error);\r\n          return errors.length ? errors : null;\r\n        })\r\n      );\r\n      asyncResult.subscribe(errors => {\r\n        this.modelValidated.next({ model: model, validationErrors: errors });\r\n      });\r\n\r\n      return asyncResult;\r\n    }\r\n\r\n    validationErrors = validationErrors.filter(error => !!error);\r\n    const result = validationErrors.length ? validationErrors as any : null;\r\n    this.modelValidated.next({ model: model, validationErrors: result });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Executes all asynchronous and synchronous validation rules for all entities in the cache\r\n   * @param predicate Optional predicate to control execution of provided validator\r\n   * @returns Observable emitting validation errors and entity info\r\n   */\r\n  validateEntityCache(predicate?: ValidatorPredicate) {\r\n    return this.validationTriggerService.triggerValidations$.pipe(\r\n      switchMap(entities => {\r\n        if (entities.length === 0) {\r\n          return of({ entities, validationErrors: [] as ValidationError[] });\r\n        }\r\n\r\n        const syncValidations = of(this.validateEntities(entities, false, predicate));\r\n        const asyncValidations = this.validateEntities(entities, true, predicate)\r\n          .map(o => o.pipe(startWith<ValidationError[]>([])));\r\n        return combineLatest(syncValidations, ...asyncValidations).pipe(\r\n          map(results => results.reduce((prev, curr) => [...prev, ...(curr || [])], [])),\r\n          map(validationErrors => {\r\n            return { entities, validationErrors };\r\n          })\r\n        );\r\n      }),\r\n      tag('validateEntityCache'),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  private filterValidators(validators: ValidatorMetadata[], async: boolean,\r\n    predicate: (validator: ValidatorMetadata) => boolean): ValidatorMetadata[] {\r\n\r\n    if (!async) {\r\n      return validators.filter(validator => !validator.async && predicate(validator));\r\n    }\r\n\r\n    return validators.filter(validator => validator.async && predicate(validator));\r\n  }\r\n\r\n  private validateEntities(entities: EntityInfo[], async?: boolean, predicate?: ValidatorPredicate): ValidationError[];\r\n  private validateEntities(entities: EntityInfo[], async?: true, predicate?: ValidatorPredicate): Observable<ValidationError[]>[];\r\n  private validateEntities(entities: EntityInfo[], async?: boolean,\r\n    predicate?: ValidatorPredicate): ValidationError[] | Observable<ValidationError[]>[] {\r\n\r\n    const conditionalEntities = entities\r\n      .filter(entityInfo => {\r\n        const modelMetadata = this.validationMetadata.getModelConfig(entityInfo.entityType);\r\n        return modelMetadata && modelMetadata.evalCondition(entities, entityInfo.entity);\r\n      });\r\n\r\n    if (!async) {\r\n      return conditionalEntities\r\n        .map(entityInfo => this.validateModel(entityInfo.entity, entityInfo.entityType, false, predicate))\r\n        .reduce((prev, curr) => [...prev, ...(curr || [])], []);\r\n    }\r\n\r\n    return conditionalEntities\r\n      .map(entityInfo => this.validateModel(entityInfo.entity, entityInfo.entityType, true, predicate));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Observable, throwError } from 'rxjs';\r\nimport { catchError, first, map } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from '@core/services/logger.service';\r\n\r\nexport interface BankRoutingResult {\r\n  message: string;\r\n  rn: string;\r\n  name: string;\r\n  code: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BankRoutingNumberService {\r\n  private cache: { [key: string]: string } = {};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private logger: LoggerService\r\n  ) {}\r\n\r\n  /**\r\n   * Get bank name from routingNumber, preferably from cache\r\n   * @param errorOk true (default) if call to service allowed to fail.\r\n   * @returns Cold, terminating observable of string ('' if invalid RN or service failed and that is OK).\r\n   * Must subscribe but need not unsubscribe.\r\n   */\r\n  getBankName(routingNumber: string, errorOk = true): Observable<string> {\r\n    routingNumber = (routingNumber || '').trim();\r\n    if (!routingNumber) {\r\n      return of(''); // ignore when no routing number\r\n    } else if (!/^\\d{9}$/.test(routingNumber)) {\r\n      return of(''); // ignore when no routing number is not 9 digits. Validation handles error\r\n      // const emsg = 'Routing number must be a 9 digit number';\r\n      // return errorOk ? of(emsg) : throwError(emsg);\r\n    }\r\n\r\n    const val = this.cache[routingNumber];\r\n    if (val) {\r\n      return of(val);\r\n    }\r\n\r\n    const url = 'https://www.routingnumbers.info/api/name.json?rn=' + routingNumber;\r\n    return this.http.jsonp<BankRoutingResult>(url, 'callback').pipe(\r\n      first(),\r\n      map(r => {\r\n        if (r.code === 200) {\r\n          return this.cache[routingNumber] = r.name;\r\n        } else if (r.code === 404) {\r\n          return this.cache[routingNumber] = '';\r\n        } else {\r\n          const emsg = `Routing number service error '${JSON.stringify(r)}'`;\r\n          this.logger.error(emsg);\r\n          throw new Error(emsg);\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        return errorOk ? of('') : throwError(error.toString()) ;\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\n/** Instance of a \"Do nothing\" version for when real BankRoutingNumberService is unavailable */\r\nexport const noopBankRoutingNumberService: BankRoutingNumberService = {\r\n  getBankName: (rn: string) => of(\r\n    { message: '', rn, name: '', code: 0 } as BankRoutingResult\r\n  )\r\n} as any;\r\n","import { HttpClient } from '@angular/common/http';\nimport { of, throwError } from 'rxjs';\nimport { catchError, first, map } from 'rxjs/operators';\nimport { LoggerService } from '@core/services/logger.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./logger.service\";\nvar BankRoutingNumberService = /** @class */ (function () {\n    function BankRoutingNumberService(http, logger) {\n        this.http = http;\n        this.logger = logger;\n        this.cache = {};\n    }\n    /**\n     * Get bank name from routingNumber, preferably from cache\n     * @param errorOk true (default) if call to service allowed to fail.\n     * @returns Cold, terminating observable of string ('' if invalid RN or service failed and that is OK).\n     * Must subscribe but need not unsubscribe.\n     */\n    BankRoutingNumberService.prototype.getBankName = function (routingNumber, errorOk) {\n        var _this = this;\n        if (errorOk === void 0) { errorOk = true; }\n        routingNumber = (routingNumber || '').trim();\n        if (!routingNumber) {\n            return of(''); // ignore when no routing number\n        }\n        else if (!/^\\d{9}$/.test(routingNumber)) {\n            return of(''); // ignore when no routing number is not 9 digits. Validation handles error\n            // const emsg = 'Routing number must be a 9 digit number';\n            // return errorOk ? of(emsg) : throwError(emsg);\n        }\n        var val = this.cache[routingNumber];\n        if (val) {\n            return of(val);\n        }\n        var url = 'https://www.routingnumbers.info/api/name.json?rn=' + routingNumber;\n        return this.http.jsonp(url, 'callback').pipe(first(), map(function (r) {\n            if (r.code === 200) {\n                return _this.cache[routingNumber] = r.name;\n            }\n            else if (r.code === 404) {\n                return _this.cache[routingNumber] = '';\n            }\n            else {\n                var emsg = \"Routing number service error '\" + JSON.stringify(r) + \"'\";\n                _this.logger.error(emsg);\n                throw new Error(emsg);\n            }\n        }), catchError(function (error) {\n            return errorOk ? of('') : throwError(error.toString());\n        }));\n    };\n    BankRoutingNumberService.ngInjectableDef = i0.defineInjectable({ factory: function BankRoutingNumberService_Factory() { return new BankRoutingNumberService(i0.inject(i1.HttpClient), i0.inject(i2.LoggerService)); }, token: BankRoutingNumberService, providedIn: \"root\" });\n    return BankRoutingNumberService;\n}());\nexport { BankRoutingNumberService };\n/** Instance of a \"Do nothing\" version for when real BankRoutingNumberService is unavailable */\nexport var noopBankRoutingNumberService = {\n    getBankName: function (rn) { return of({ message: '', rn: rn, name: '', code: 0 }); }\n};\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AccountStatus } from '@model';\nimport { AccountStatusGuardHelper, okRoute } from './account-status-guard-helper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./account-status-guard-helper\";\nvar guardName = 'DataEntryPageGuard';\n/**\n * Guard routes to pages where the user enters company data\n */\nvar DataEntryPageGuard = /** @class */ (function () {\n    function DataEntryPageGuard(accountStatusGuardHelper) {\n        this.accountStatusGuardHelper = accountStatusGuardHelper;\n        // Any route with this activation guard can be activated if the account status is Open or Test\n        // The route will be rejected and the user re-routed for any other account status.\n        this.adminRoutes = __assign({}, accountStatusGuardHelper.adminBaseRoutes);\n        this.adminRoutes[AccountStatus.Open] = okRoute;\n        this.adminRoutes[AccountStatus.Test] = okRoute;\n        this.regularRoutes = __assign({}, accountStatusGuardHelper.regularBaseRoutes);\n        this.regularRoutes[AccountStatus.Open] = okRoute;\n        this.regularRoutes[AccountStatus.Test] = okRoute;\n    }\n    DataEntryPageGuard.prototype.canActivate = function (route, state) {\n        return this.ifAccountStatusAllows$(state);\n    };\n    DataEntryPageGuard.prototype.canActivateChild = function (route, state) {\n        return this.ifAccountStatusAllows$(state);\n    };\n    DataEntryPageGuard.prototype.ifAccountStatusAllows$ = function (state) {\n        return this.accountStatusGuardHelper.accountStatusAllows$(guardName, this.adminRoutes, this.regularRoutes, state);\n    };\n    DataEntryPageGuard.ngInjectableDef = i0.defineInjectable({ factory: function DataEntryPageGuard_Factory() { return new DataEntryPageGuard(i0.inject(i1.AccountStatusGuardHelper)); }, token: DataEntryPageGuard, providedIn: \"root\" });\n    return DataEntryPageGuard;\n}());\nexport { DataEntryPageGuard };\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  CanActivateChild,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AccountStatus } from '@model';\r\nimport { AccountStatusGuardHelper, AccountStatusGuardFns, okRoute } from './account-status-guard-helper';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\nconst guardName = 'DataEntryPageGuard';\r\n\r\n/**\r\n * Guard routes to pages where the user enters company data\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class DataEntryPageGuard implements CanActivate, CanActivateChild {\r\n\r\n  private adminRoutes: AccountStatusGuardFns;\r\n  private regularRoutes: AccountStatusGuardFns;\r\n\r\n  constructor(private accountStatusGuardHelper: AccountStatusGuardHelper) {\r\n    // Any route with this activation guard can be activated if the account status is Open or Test\r\n    // The route will be rejected and the user re-routed for any other account status.\r\n    this.adminRoutes = { ...accountStatusGuardHelper.adminBaseRoutes };\r\n    this.adminRoutes[AccountStatus.Open] = okRoute;\r\n    this.adminRoutes[AccountStatus.Test] = okRoute;\r\n\r\n    this.regularRoutes = { ...accountStatusGuardHelper.regularBaseRoutes };\r\n    this.regularRoutes[AccountStatus.Open] = okRoute;\r\n    this.regularRoutes[AccountStatus.Test] = okRoute;\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.ifAccountStatusAllows$(state);\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.ifAccountStatusAllows$(state);\r\n  }\r\n\r\n  private ifAccountStatusAllows$(state: RouterStateSnapshot) {\r\n    return this.accountStatusGuardHelper.accountStatusAllows$(\r\n      guardName,\r\n      this.adminRoutes,\r\n      this.regularRoutes,\r\n      state\r\n    );\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../validation/validate-property.directive\";\nimport * as i4 from \"../../store/validation/validation.service\";\nimport * as i5 from \"angular2-text-mask\";\nimport * as i6 from \"./input-text.component\";\nimport * as i7 from \"./input-mask-catalog\";\nimport * as i8 from \"../model.component\";\nvar styles_InputTextComponent = [];\nvar RenderType_InputTextComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_InputTextComponent, data: {} });\nexport { RenderType_InputTextComponent as RenderType_InputTextComponent };\nfunction View_InputTextComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"i\", [[\"class\", \"material-icons tooltip-icon clickable\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = ((_co.open = !_co.open) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"info\"]))], null, null); }\nfunction View_InputTextComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, null, null, null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nfunction View_InputTextComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 7, \"label\", [], [[8, \"htmlFor\", 0]], null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"label-text\"]], null, null, null, null, null)), (_l()(), i0.ɵted(2, null, [\"\", \"\"])), (_l()(), i0.ɵeld(3, 0, null, null, 4, \"span\", [[\"class\", \"tooltip-container\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_InputTextComponent_2)), i0.ɵdid(5, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_InputTextComponent_3)), i0.ɵdid(7, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.tooltip; _ck(_v, 5, 0, currVal_2); var currVal_3 = (_co.tooltip && _co.open); _ck(_v, 7, 0, currVal_3); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.name; _ck(_v, 0, 0, currVal_0); var currVal_1 = _co.label; _ck(_v, 2, 0, currVal_1); }); }\nfunction View_InputTextComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"input-group-prepend\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"input-group-text\"]], null, null, null, null, null)), (_l()(), i0.ɵted(2, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.prepend; _ck(_v, 2, 0, currVal_0); }); }\nfunction View_InputTextComponent_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"input-group-append\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"input-group-text\"]], null, null, null, null, null)), (_l()(), i0.ɵted(2, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.append; _ck(_v, 2, 0, currVal_0); }); }\nexport function View_InputTextComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { child: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 27, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_InputTextComponent_1)), i0.ɵdid(3, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i0.ɵncd(null, 1), (_l()(), i0.ɵeld(5, 0, null, null, 22, \"div\", [[\"class\", \"input-group\"]], [[2, \"input-append\", null], [2, \"input-prepend\", null]], null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_InputTextComponent_4)), i0.ɵdid(7, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(8, 0, [[1, 0], [\"child\", 1]], null, 13, \"input\", [[\"class\", \"form-control\"], [\"spAsyncValidateProperty\", \"\"], [\"spValidateProperty\", \"\"]], [[8, \"type\", 0], [8, \"id\", 0], [8, \"placeholder\", 0], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngModelChange\"], [null, \"blur\"], [null, \"keyup.enter\"], [null, \"keyup.esc\"], [null, \"focus\"], [null, \"input\"], [null, \"compositionstart\"], [null, \"compositionend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"input\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 11)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i0.ɵnov(_v, 11).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i0.ɵnov(_v, 11)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i0.ɵnov(_v, 11)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } if ((\"input\" === en)) {\n        var pd_4 = (i0.ɵnov(_v, 16)._handleInput($event.target.value) !== false);\n        ad = (pd_4 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_5 = (i0.ɵnov(_v, 16).onTouched() !== false);\n        ad = (pd_5 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_6 = (i0.ɵnov(_v, 16)._compositionStart() !== false);\n        ad = (pd_6 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_7 = (i0.ɵnov(_v, 16)._compositionEnd($event.target.value) !== false);\n        ad = (pd_7 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_8 = (i0.ɵnov(_v, 21).blur() !== false);\n        ad = (pd_8 && ad);\n    } if ((\"ngModelChange\" === en)) {\n        var pd_9 = (_co.onInput($event) !== false);\n        ad = (pd_9 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_10 = (_co.onBlur() !== false);\n        ad = (pd_10 && ad);\n    } if ((\"keyup.enter\" === en)) {\n        var pd_11 = (_co.exit(\"enterKey\") !== false);\n        ad = (pd_11 && ad);\n    } if ((\"keyup.esc\" === en)) {\n        var pd_12 = (_co.escaped() !== false);\n        ad = (pd_12 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_13 = (_co.onFocus() !== false);\n        ad = (pd_13 && ad);\n    } return ad; }, null, null)), i0.ɵdid(9, 278528, null, 0, i1.NgStyle, [i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { ngStyle: [0, \"ngStyle\"] }, null), i0.ɵpod(10, { \"font-family\": 0 }), i0.ɵdid(11, 16384, null, 0, i2.DefaultValueAccessor, [i0.Renderer2, i0.ElementRef, [2, i2.COMPOSITION_BUFFER_MODE]], null, null), i0.ɵdid(12, 147456, null, 0, i3.ValidatePropertyDirective, [i4.ValidationService], { model: [0, \"model\"], modelType: [1, \"modelType\"], propertyName: [2, \"propertyName\"], group: [3, \"group\"], modelContext: [4, \"modelContext\"] }, null), i0.ɵprd(1024, null, i2.NG_VALIDATORS, function (p0_0) { return [p0_0]; }, [i3.ValidatePropertyDirective]), i0.ɵdid(14, 147456, null, 0, i3.AsyncValidatePropertyDirective, [i4.ValidationService], { model: [0, \"model\"], modelType: [1, \"modelType\"], propertyName: [2, \"propertyName\"], group: [3, \"group\"], modelContext: [4, \"modelContext\"] }, null), i0.ɵprd(1024, null, i2.NG_ASYNC_VALIDATORS, function (p0_0) { return [p0_0]; }, [i3.AsyncValidatePropertyDirective]), i0.ɵdid(16, 540672, null, 0, i5.MaskedInputDirective, [i0.Renderer2, i0.ElementRef, [2, i2.COMPOSITION_BUFFER_MODE]], { textMaskConfig: [0, \"textMaskConfig\"] }, null), i0.ɵprd(1024, null, i2.NG_VALUE_ACCESSOR, function (p0_0, p1_0) { return [p0_0, p1_0]; }, [i2.DefaultValueAccessor, i5.MaskedInputDirective]), i0.ɵdid(18, 671744, [[\"input\", 4]], 0, i2.NgModel, [[8, null], [6, i2.NG_VALIDATORS], [6, i2.NG_ASYNC_VALIDATORS], [6, i2.NG_VALUE_ACCESSOR]], { name: [0, \"name\"], isDisabled: [1, \"isDisabled\"], model: [2, \"model\"] }, { update: \"ngModelChange\" }), i0.ɵprd(2048, null, i2.NgControl, null, [i2.NgModel]), i0.ɵdid(20, 16384, null, 0, i2.NgControlStatus, [[4, i2.NgControl]], null, null), i0.ɵdid(21, 737280, null, 0, i3.ValidationStatusDirective, [i0.ElementRef, i0.Renderer2, [2, i3.FormDirective]], { spValidationStatus: [0, \"spValidationStatus\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_InputTextComponent_5)), i0.ɵdid(23, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(24, 0, null, null, 1, null, null, null, null, null, null, null)), i0.ɵncd(null, 2), (_l()(), i0.ɵeld(26, 0, null, null, 1, \"div\", [[\"class\", \"validationError\"]], null, null, null, null, null)), i0.ɵdid(27, 671744, null, 0, i3.ValidationFeedbackDirective, [i0.ElementRef, i0.Renderer2, [2, i3.FormDirective]], { spValidationFeedback: [0, \"spValidationFeedback\"], displayName: [1, \"displayName\"] }, null), i0.ɵncd(null, 3)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.label; _ck(_v, 3, 0, currVal_0); var currVal_3 = !!_co.prepend; _ck(_v, 7, 0, currVal_3); var currVal_14 = _ck(_v, 10, 0, (!_co.maskConfig ? \"\" : \"monospace, monospace\")); _ck(_v, 9, 0, currVal_14); var currVal_15 = _co.model; var currVal_16 = _co.modelType; var currVal_17 = _co.propertyName; var currVal_18 = _co.group; var currVal_19 = _co.modelContext; _ck(_v, 12, 0, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19); var currVal_20 = _co.model; var currVal_21 = _co.modelType; var currVal_22 = _co.propertyName; var currVal_23 = _co.group; var currVal_24 = _co.modelContext; _ck(_v, 14, 0, currVal_20, currVal_21, currVal_22, currVal_23, currVal_24); var currVal_25 = _co.textMask; _ck(_v, 16, 0, currVal_25); var currVal_26 = _co.name; var currVal_27 = _co.disabled; var currVal_28 = _co.getValue(); _ck(_v, 18, 0, currVal_26, currVal_27, currVal_28); var currVal_29 = i0.ɵnov(_v, 18); _ck(_v, 21, 0, currVal_29); var currVal_30 = !!_co.append; _ck(_v, 23, 0, currVal_30); var currVal_31 = i0.ɵnov(_v, 18); var currVal_32 = _co.label; _ck(_v, 27, 0, currVal_31, currVal_32); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.append; var currVal_2 = _co.prepend; _ck(_v, 5, 0, currVal_1, currVal_2); var currVal_4 = _co.type; var currVal_5 = _co.name; var currVal_6 = _co.placeholder; var currVal_7 = i0.ɵnov(_v, 20).ngClassUntouched; var currVal_8 = i0.ɵnov(_v, 20).ngClassTouched; var currVal_9 = i0.ɵnov(_v, 20).ngClassPristine; var currVal_10 = i0.ɵnov(_v, 20).ngClassDirty; var currVal_11 = i0.ɵnov(_v, 20).ngClassValid; var currVal_12 = i0.ɵnov(_v, 20).ngClassInvalid; var currVal_13 = i0.ɵnov(_v, 20).ngClassPending; _ck(_v, 8, 0, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13); }); }\nexport function View_InputTextComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"sp-input\", [], null, null, null, View_InputTextComponent_0, RenderType_InputTextComponent)), i0.ɵprd(5120, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i6.InputTextComponent]), i0.ɵdid(2, 4440064, null, 0, i6.InputTextComponent, [i7.InputMaskCatalog, i0.ChangeDetectorRef, [2, i8.ModelComponent]], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, null); }\nvar InputTextComponentNgFactory = i0.ɵccf(\"sp-input\", i6.InputTextComponent, View_InputTextComponent_Host_0, { append: \"append\", autofocus: \"autofocus\", classNames: \"classNames\", disabled: \"disabled\", formatString: \"formatString\", group: \"group\", guide: \"guide\", keepCharPositions: \"keepCharPositions\", label: \"label\", mask: \"mask\", model: \"model\", modelType: \"modelType\", name: \"name\", placeholder: \"placeholder\", placeholderChar: \"placeholderChar\", prepend: \"prepend\", propertyName: \"propertyName\", showMask: \"showMask\", tooltip: \"tooltip\", type: \"type\", maskType: \"maskType\" }, { blur: \"blur\", focus: \"focus\", onChange: \"onChange\", onExit: \"onExit\", onTouched: \"onTouched\" }, [\"*\", \"[helpTextAbove]\", \"[inputActionIcon]\", \"[helpText]\"]);\nexport { InputTextComponentNgFactory as InputTextComponentNgFactory };\n","<div class=\"form-group\">\r\n  <label *ngIf=\"label\" [for]=\"name\">\r\n    <span class=\"label-text\">{{label}}</span>\r\n    <span class=\"tooltip-container\">\r\n      <i *ngIf=\"tooltip\" (click)=\"open = !open\" class=\"material-icons tooltip-icon clickable\">info</i>\r\n      <ng-container *ngIf=\"tooltip && open\">\r\n        <ng-content></ng-content>\r\n      </ng-container>\r\n    </span>\r\n  </label>\r\n  <ng-content select=\"[helpTextAbove]\"></ng-content>\r\n  <div class=\"input-group\" [class.input-append]=\"append\" [class.input-prepend]=\"prepend\">\r\n    <div *ngIf=\"!!prepend\" class=\"input-group-prepend\">\r\n      <span class=\"input-group-text\">{{prepend}}</span>\r\n    </div>\r\n    <input #child [type]=\"type\" class=\"form-control\" [id]=\"name\" [name]=\"name\" [ngModel]=\"getValue()\" (ngModelChange)=\"onInput($event)\"\r\n    #input=\"ngModel\" spValidateProperty spAsyncValidateProperty [spValidationStatus]=\"input\" [model]=\"model\" [modelType]=\"modelType\"\r\n    [group]=\"group\" [propertyName]=\"propertyName\" (blur)=\"onBlur()\" (keyup.enter)=\"exit('enterKey')\" (keyup.esc)=\"escaped()\"\r\n    (focus)=\"onFocus()\" [placeholder]=\"placeholder\" [disabled]=\"disabled\" [modelContext]=\"modelContext\"\r\n    [textMask]=\"textMask\" [ngStyle]=\"{'font-family': !maskConfig ? '' : 'monospace, monospace'}\">\r\n    <div *ngIf=\"!!append\" class=\"input-group-append\">\r\n      <span class=\"input-group-text\">{{append}}</span>\r\n    </div>\r\n    <ng-container>\r\n      <ng-content select=\"[inputActionIcon]\"></ng-content>\r\n    </ng-container>\r\n    <div class=\"validationError\" [spValidationFeedback]=\"input\" [displayName]=\"label\"></div>\r\n  </div>\r\n  <ng-content select=\"[helpText]\"></ng-content>\r\n</div>\r\n","import * as i0 from \"@angular/core\";\n/*\n * Controls the top-level \"fullframe\" iframe that takes over the screen for DocuSign etc.\n */\nvar IframeService = /** @class */ (function () {\n    function IframeService() {\n        var _this = this;\n        this.receiveMessage = this.receiveMessage.bind(this);\n        // wait for message from the iframe\n        window.addEventListener('message', function (event) {\n            _this.receiveMessage(event);\n        });\n    }\n    /**\n     * Show the iframe, and remember the callback for receiveMessage\n     * @param url source url for the iframe\n     * @param closeCallback called when iframe is hidden; passed message from iframe's postMessage\n     */\n    IframeService.prototype.show = function (url, closeCallback) {\n        window.scrollTo(0, 0);\n        var iframe = document.getElementById('fullframe');\n        iframe.style.display = 'block';\n        iframe.src = url;\n        document.body.style.overflow = 'hidden'; // prevents double scrollbars\n        this.callback = closeCallback;\n    };\n    IframeService.prototype.hide = function () {\n        var iframe = document.getElementById('fullframe');\n        iframe.style.display = 'none';\n        iframe.src = '';\n        document.body.style.overflow = 'auto';\n    };\n    /**\n     * Hide the iframe upon receiving a message from its window\n     * @param event from postMessage in the iframe, but also from ngrx etc.\n     */\n    IframeService.prototype.receiveMessage = function (event) {\n        // 'event.data.type' filters out ngrx events\n        // if (event.origin !== window.location.origin || event.data.type) {\n        if (event.data.type) {\n            return false;\n        }\n        var iframe = document.getElementById('fullframe');\n        if (event.source !== iframe.contentWindow) {\n            return false;\n        }\n        iframe.style.display = 'none';\n        iframe.src = '';\n        window.iframeEvent = event.data;\n        document.body.style.overflow = 'auto';\n        if (this.callback) {\n            this.callback(event.data);\n            this.callback = null;\n        }\n    };\n    IframeService.ngInjectableDef = i0.defineInjectable({ factory: function IframeService_Factory() { return new IframeService(); }, token: IframeService, providedIn: \"root\" });\n    return IframeService;\n}());\nexport { IframeService };\n","import { Injectable } from '@angular/core';\r\n\r\n/*\r\n * Controls the top-level \"fullframe\" iframe that takes over the screen for DocuSign etc.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class IframeService {\r\n\r\n  // current callback -- only one iframe active at a time\r\n  private callback: (status: string) => any;\r\n\r\n  constructor() {\r\n    this.receiveMessage = this.receiveMessage.bind(this);\r\n    // wait for message from the iframe\r\n    window.addEventListener('message', (event) => {\r\n      this.receiveMessage(event);\r\n    });\r\n  }\r\n  /**\r\n   * Show the iframe, and remember the callback for receiveMessage\r\n   * @param url source url for the iframe\r\n   * @param closeCallback called when iframe is hidden; passed message from iframe's postMessage\r\n   */\r\n  show(url: string, closeCallback: (message: string) => any) {\r\n    window.scrollTo(0, 0);\r\n    const iframe = document.getElementById('fullframe') as HTMLIFrameElement;\r\n    iframe.style.display = 'block';\r\n    iframe.src = url;\r\n    document.body.style.overflow = 'hidden'; // prevents double scrollbars\r\n    this.callback = closeCallback;\r\n  }\r\n\r\n  hide() {\r\n    const iframe = document.getElementById('fullframe') as HTMLIFrameElement;\r\n    iframe.style.display = 'none';\r\n    iframe.src = '';\r\n    document.body.style.overflow = 'auto';\r\n  }\r\n\r\n  /**\r\n   * Hide the iframe upon receiving a message from its window\r\n   * @param event from postMessage in the iframe, but also from ngrx etc.\r\n   */\r\n  private receiveMessage(event: { data: any, origin: string, source: any }) {\r\n    // 'event.data.type' filters out ngrx events\r\n    // if (event.origin !== window.location.origin || event.data.type) {\r\n    if (event.data.type) {\r\n      return false;\r\n    }\r\n    const iframe = document.getElementById('fullframe') as HTMLIFrameElement;\r\n    if (event.source !== iframe.contentWindow) {\r\n      return false;\r\n    }\r\n\r\n    iframe.style.display = 'none';\r\n    iframe.src = '';\r\n    (<any>window).iframeEvent = event.data;\r\n    document.body.style.overflow = 'auto';\r\n    if (this.callback) {\r\n      this.callback(event.data);\r\n      this.callback = null;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Every entity class belonging to a specific Company implements or inherits from this class\r\n */\r\n// Except Company itself, whose id is the companyId\r\n export class CompanyEntityBase {\r\n  id: string;\r\n  companyId: string;\r\n\r\n  constructor(id?: string, companyId?: string) {\r\n    // allow null but not undefined;\r\n    this.id = id || null;\r\n    this.companyId = companyId || null;\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\nimport { addressToString } from '@utils/address-utils';\n/** An address for Company work address or EE residence */\nvar Address = /** @class */ (function (_super) {\n    __extends(Address, _super);\n    function Address(id, companyId) {\n        var _this = _super.call(this, id, companyId) || this;\n        _this.street1 = '';\n        _this.street2 = '';\n        _this.city = ''; // locality\n        _this.state = ''; // \"administrative_area_level_1\"\n        _this.zip = ''; // postal_code (including possible suffix)\n        _this.country = 'US';\n        /** True if this is an Employee's home address. */\n        _this.isHome = false;\n        /** True if this is the company's main address. */\n        _this.isMain = false;\n        /** If the address is verified and taxes usable. */\n        _this.isVerified = false;\n        /** True when marked-for-delete. */\n        _this.isRemoved = false;\n        return _this;\n    }\n    /** Create clean clone of an Address */\n    Address.create = function (address) {\n        address = address || {};\n        return Object.assign(new Address(address.id, address.companyId), {\n            street1: (address.street1 || '').trim(),\n            street2: (address.street2 || '').trim(),\n            city: (address.city || '').trim(),\n            state: (address.state || '').trim(),\n            zip: (address.zip || '').trim(),\n            // country: 'US', // Always the US\n            isHome: address.isHome === true,\n            isMain: address.isMain === true,\n            geoCode: address.geoCode || null,\n            schoolDistrictCode: address.schoolDistrictCode || null,\n            psdCode: address.psdCode || null,\n            isVerified: address.isVerified === true,\n            isRemoved: !address.isMain && address.isRemoved === true\n        });\n    };\n    /**\n     * Create a new Address for a company.\n     * This address belongs to the company but has no Address id.\n     * @param company Company to which the address belongs\n     * @param [isMain] True if this is the company's main location (default false)\n     */\n    Address.createNewCompanyAddress = function (company, isMain) {\n        if (isMain === void 0) { isMain = false; }\n        return Address.create({\n            companyId: company.id,\n            isHome: false,\n            isMain: isMain === true\n        });\n    };\n    /**\n     * Create a new home Address for an Employee.\n     * It belongs to the EE's company but has no Address id\n     * and is not (yet) associated with that Employee.\n     * @param company Company to which the address belongs\n     */\n    Address.createNewEmployeeAddress = function (employee) {\n        return Address.create({\n            companyId: employee.companyId,\n            isHome: true,\n            isMain: false\n        });\n    };\n    Address.prototype.toString = function () {\n        return addressToString(this);\n    };\n    return Address;\n}(CompanyEntityBase));\nexport { Address };\n","import { CompanyEntityBase } from './company-entity-base';\r\nimport { AddressLike, addressToString } from '@utils/address-utils';\r\nimport { Company } from './company';\r\nimport { Employee } from './employee';\r\n\r\n/** An address for Company work address or EE residence */\r\nexport class Address extends CompanyEntityBase implements AddressLike {\r\n  id: string;\r\n  companyId: string;\r\n  street1 = '';\r\n  street2 = '';\r\n  city = ''; // locality\r\n  state = ''; // \"administrative_area_level_1\"\r\n  zip = ''; // postal_code (including possible suffix)\r\n  country: 'US' = 'US';\r\n  /** True if this is an Employee's home address. */\r\n  isHome = false;\r\n  /** True if this is the company's main address. */\r\n  isMain = false;\r\n  /** The geo code */\r\n  geoCode: string;\r\n  /** School district code, it can be missing */\r\n  schoolDistrictCode?: number;\r\n  /** Political subdivision codes, its a Pennsylvania thing  */\r\n  psdCode?: number;\r\n  /** If the address is verified and taxes usable. */\r\n  isVerified = false;\r\n  /** True when marked-for-delete. */\r\n  isRemoved = false;\r\n\r\n  constructor(id?: string, companyId?: string) {\r\n    super(id, companyId);\r\n  }\r\n\r\n  /** Create clean clone of an Address */\r\n  static create(address?: Partial<Address>): Address {\r\n    address = address || {};\r\n    return Object.assign(new Address(address.id, address.companyId), {\r\n      street1: (address.street1 || '').trim(),\r\n      street2: (address.street2 || '').trim(),\r\n      city: (address.city || '').trim(),\r\n      state: (address.state || '').trim(),\r\n      zip: (address.zip || '').trim(),\r\n      // country: 'US', // Always the US\r\n      isHome: address.isHome === true,\r\n      isMain: address.isMain === true,\r\n      geoCode: address.geoCode || null,\r\n      schoolDistrictCode: address.schoolDistrictCode || null,\r\n      psdCode: address.psdCode || null,\r\n      isVerified: address.isVerified === true,\r\n      isRemoved: !address.isMain && address.isRemoved === true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a new Address for a company.\r\n   * This address belongs to the company but has no Address id.\r\n   * @param company Company to which the address belongs\r\n   * @param [isMain] True if this is the company's main location (default false)\r\n   */\r\n  static createNewCompanyAddress(company: Company, isMain = false) {\r\n    return Address.create({\r\n      companyId: company.id,\r\n      isHome: false,\r\n      isMain: isMain === true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a new home Address for an Employee.\r\n   * It belongs to the EE's company but has no Address id\r\n   * and is not (yet) associated with that Employee.\r\n   * @param company Company to which the address belongs\r\n   */\r\n  static createNewEmployeeAddress(employee: Employee) {\r\n    return Address.create({\r\n      companyId: employee.companyId,\r\n      isHome: true,\r\n      isMain: false\r\n    });\r\n  }\r\n\r\n  toString() {\r\n    return addressToString(this);\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\n/** Company Tax code */\nvar CompanyTax = /** @class */ (function (_super) {\n    __extends(CompanyTax, _super);\n    function CompanyTax() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Applied for a ein. If this is active the ein is not required. */\n        _this.appliedForEin = false;\n        /** If the company is exempt from paying this tax */\n        _this.isExempt = false;\n        /** When the code is active */\n        _this.isActive = true;\n        /** True when marked-for-delete */\n        _this.isRemoved = false;\n        return _this;\n    }\n    CompanyTax.create = function (companyTax) {\n        if (companyTax == null || companyTax.id == null || companyTax.companyId == null) {\n            throw Error('CompanyTax can\\'t be created without specifying a id, company');\n        }\n        return Object.assign(new CompanyTax(companyTax.id, companyTax.companyId), companyTax);\n    };\n    return CompanyTax;\n}(CompanyEntityBase));\nexport { CompanyTax };\n","import { CompanyEntityBase } from './company-entity-base';\r\nimport { TaxRateType, TaxTypeCode } from '@model/codes-enums';\r\n\r\n/** Company Tax code */\r\nexport class CompanyTax extends CompanyEntityBase {\r\n\r\n    /** The unique identifier of the tax code. ex: FE0000-003  */\r\n    mtsTaxCode: string;\r\n\r\n    /** The tax code name, mainly used for display reasons */\r\n    name: string;\r\n\r\n    /** The state code. ex PA, can be null for federal taxes */\r\n    stateCode: string;\r\n\r\n    /** Tax authority id for this company and this tax code. */\r\n    ein: string;\r\n\r\n    /** Applied for a ein. If this is active the ein is not required. */\r\n    appliedForEin = false;\r\n\r\n    /** If the company is exempt from paying this tax */\r\n    isExempt = false;\r\n\r\n    /** If the tax is reimbursable */\r\n    isReimbursable: boolean;\r\n\r\n    /** Default === Fixed or Variable */\r\n    rateType: TaxRateType;\r\n\r\n    /** The rate of the tax code. Applicable based on the rate type. */\r\n    rate: number;\r\n\r\n    /** Specific identifier code for Washington */\r\n    ubi: string;\r\n\r\n    /** When started business in this state for this tax. ex: \"2018-09-11T17:00:00Z\" */\r\n    businessStartDate: string;\r\n\r\n    /** A code that describes if the tax is on the Federal, State, County, City or School district level */\r\n    taxTypeCode: TaxTypeCode;\r\n\r\n    /** When the code is active */\r\n    isActive = true;\r\n\r\n    /** True when marked-for-delete */\r\n    isRemoved = false;\r\n\r\n    static create(companyTax?: Partial<CompanyTax>): CompanyTax {\r\n        if (companyTax == null || companyTax.id == null || companyTax.companyId == null) {\r\n            throw Error('CompanyTax can\\'t be created without specifying a id, company');\r\n        }\r\n\r\n        return Object.assign(new CompanyTax(companyTax.id, companyTax.companyId), companyTax);\r\n    }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\nvar CompanyAncillary = /** @class */ (function (_super) {\n    __extends(CompanyAncillary, _super);\n    function CompanyAncillary() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return CompanyAncillary;\n}(CompanyEntityBase));\nexport { CompanyAncillary };\n","import { CompanyEntityBase } from './company-entity-base';\r\n\r\nexport class CompanyAncillary extends CompanyEntityBase {\r\n  ancillaryId: string;\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\nvar CompanyEarning = /** @class */ (function (_super) {\n    __extends(CompanyEarning, _super);\n    function CompanyEarning(earning) {\n        var _this = _super.call(this) || this;\n        _this.isRemoved = false;\n        _this.earningCode = earning.code;\n        _this.description = earning.description;\n        _this.name = earning.name;\n        return _this;\n    }\n    return CompanyEarning;\n}(CompanyEntityBase));\nexport { CompanyEarning };\n","import { CompanyEntityBase } from './company-entity-base';\r\nimport { Earning } from './earning';\r\n\r\nexport class CompanyEarning extends CompanyEntityBase {\r\n  earningCode: string;\r\n  name: string;\r\n  description: string;\r\n  isRemoved = false;\r\n\r\n  constructor(earning: Earning) {\r\n    super();\r\n    this.earningCode = earning.code;\r\n    this.description = earning.description;\r\n    this.name = earning.name;\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\n/**\n * A deduction of a Company\n * Company has a list of CompanyDeductions with some parametrization\n * where deductions types are a subset of available deductions.\n */\nvar CompanyDeduction = /** @class */ (function (_super) {\n    __extends(CompanyDeduction, _super);\n    function CompanyDeduction(deduction) {\n        var _this = _super.call(this) || this;\n        _this.parameters = [];\n        _this.isRemoved = false;\n        _this.deductionCodeTypeId = deduction.codeTypeId;\n        _this.abbreviation = deduction.defaultAbbreviation;\n        _this.description = deduction.defaultDescription;\n        _this.deductionPlanTaxOptionCode = deduction.deductionPlanTaxOptionCode;\n        return _this;\n    }\n    return CompanyDeduction;\n}(CompanyEntityBase));\nexport { CompanyDeduction };\n","import { CompanyEntityBase } from './company-entity-base';\r\nimport { Deduction, DeductionKeyValue, DeductionPlanType } from './deduction';\r\n\r\n/**\r\n * A deduction of a Company\r\n * Company has a list of CompanyDeductions with some parametrization\r\n * where deductions types are a subset of available deductions.\r\n */\r\nexport class CompanyDeduction extends CompanyEntityBase {\r\n  deductionCodeTypeId: number;\r\n  abbreviation: string;\r\n  description: string;\r\n  parameters: DeductionKeyValue[] = [];\r\n  isRemoved = false;\r\n  deductionPlanTaxOptionCode: DeductionPlanType;\r\n\r\n  constructor(deduction: Deduction) {\r\n    super();\r\n    this.deductionCodeTypeId = deduction.codeTypeId;\r\n    this.abbreviation = deduction.defaultAbbreviation;\r\n    this.description = deduction.defaultDescription;\r\n    this.deductionPlanTaxOptionCode = deduction.deductionPlanTaxOptionCode;\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\nimport { dateToday } from '@utils/date-utils';\nimport { AccountStatus } from '@model/codes-enums';\n/** Customer company */\nvar Company = /** @class */ (function (_super) {\n    __extends(Company, _super);\n    function Company() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.status = AccountStatus.Open;\n        /** Household or Company discriminator */\n        _this.isHousehold = false;\n        /** True if the user is finished adding Ees (or intends not to add any at all) */\n        _this.doneAddingEmployees = false;\n        /** Bank name that goes with the RN number. Set when have verified the RN */\n        _this.bankName = '';\n        /**\n         * ISO date string when this customer's enrollment process began.\n         * Time is deliberately pinned to midday in Chicago\n         */\n        _this.enrollmentStartDate = dateToday();\n        /** Number of times validated. Will prevent further (expensive) validation after some number of tries */\n        _this.feinValidationCount = 0;\n        /** Is the Company an agricultural company */\n        _this.isAgricultural = false;\n        /** do we show earnings tab */\n        _this.showEarningsTab = false;\n        return _this;\n    }\n    return Company;\n}(CompanyEntityBase));\nexport { Company };\nexport var REASON_SERVICE_UNAVAILABLE = 'ServiceUnavailable';\n/** Returns the displayable \"kind\" of customer - 'Household' or 'Company' */\nexport function companyKind(company) {\n    return company ? company.isHousehold ? 'Household' : 'Company' : '-';\n}\n","import { CompanyEntityBase } from './company-entity-base';\r\nimport { dateToday } from '@utils/date-utils';\r\n\r\nimport { AccountStatus, CompanyType, FeinStatus, PayrollFrequency } from '@model/codes-enums';\r\n\r\n/** Customer company */\r\nexport class Company extends CompanyEntityBase {\r\n  id: string;\r\n  bcl: string;\r\n  /** Informal entity name. Might be the DBA. */\r\n  name: string;\r\n  status: AccountStatus = AccountStatus.Open;\r\n  /** Household or Company discriminator */\r\n  isHousehold = false;\r\n  companyType: CompanyType;\r\n  /** True if the user is finished adding Ees (or intends not to add any at all) */\r\n  doneAddingEmployees = false;\r\n  /** Account name as known to the bank. */\r\n  bankAccountName: string;\r\n  /** Bank account's routing number. */\r\n  bankAccountRn: string;\r\n  /** Bank name that goes with the RN number. Set when have verified the RN */\r\n  bankName = '';\r\n  /** The bank account number */\r\n  bankAccountNumber: string;\r\n  /** checking */\r\n  // TODO: Remove this field. Per Zorian, can only be a Checking account.\r\n  bankAccountType: 'checking';\r\n  /** How often the customer expects to run payroll. */\r\n  payrollFrequency: PayrollFrequency;\r\n  /** If this company had a payroll in the current year */\r\n  hasPriorPayroll: boolean;\r\n  /** If this account requires special deductions */\r\n  needDeductionSetup: boolean;\r\n  /**\r\n   * ISO date string when this customer's enrollment process began.\r\n   * Time is deliberately pinned to midday in Chicago\r\n   */\r\n  enrollmentStartDate = dateToday();\r\n  /**\r\n   * ISO date/time string when this company enrollment is closed,\r\n   * for reasons identified in the status field.\r\n   * We actually care about the TIME (not just the date). Store in proper GMT?\r\n   */\r\n  enrollmentCloseDate: string;\r\n\r\n  // Taxes ...\r\n\r\n  /** Federal employer identification number */\r\n  fein: string;\r\n\r\n  /** If the use applies for a fein, is invalid or verified */\r\n  feinStatus: FeinStatus;\r\n\r\n  /** Number of times validated. Will prevent further (expensive) validation after some number of tries */\r\n  feinValidationCount = 0;\r\n\r\n  /** Legal entity name, as entered by the user. Must be same as legalNameVerified to enroll. */\r\n  legalName: string;\r\n\r\n  /** Verified legal entity name (via FEIN verification). User cannot set. */\r\n  legalNameVerified: string;\r\n\r\n  /** Reason to Skip verification: 'ServiceUnavailable' if TinCheck Service was not available */\r\n  legalNameVerificationSkipReason: string;\r\n\r\n  /** Is the Company an agricultural company */\r\n  isAgricultural = false;\r\n\r\n  /** When the customer would like to cut the first payroll checks */\r\n  firstCheckDate: string;\r\n\r\n  /** First pay period start date */\r\n  periodStartDate: string;\r\n\r\n  /** First pay period end date used to build schedule */\r\n  periodEndDate: string;\r\n\r\n  /** When the customer would like to cut the second payroll checks */\r\n  secondCheckDate: string;\r\n\r\n  /** Second pay period start date */\r\n  secondPeriodStartDate: string;\r\n\r\n  /** Second pay period end date used to build schedule */\r\n  secondPeriodEndDate: string;\r\n\r\n  /** Determines if period should always fall on the last day of the month for first period */\r\n  firstPeriodEndOfMonth: boolean;\r\n\r\n  /** Determines if check should always fall on last day of month for first check */\r\n  firstCheckEndOfMonth: boolean;\r\n\r\n  /** Determines if period should always fall on the last day of the month for second period */\r\n  secondPeriodEndOfMonth: boolean;\r\n\r\n  /** Determines if check should always fall on last day of month for second check */\r\n  secondCheckEndOfMonth: boolean;\r\n\r\n  /** do we show earnings tab */\r\n  showEarningsTab = false;\r\n\r\n}\r\n\r\nexport const REASON_SERVICE_UNAVAILABLE = 'ServiceUnavailable';\r\n\r\n/** Returns the displayable \"kind\" of customer - 'Household' or 'Company' */\r\nexport function companyKind(company: Company): string {\r\n  return company ? company.isHousehold ? 'Household' : 'Company' : '-';\r\n}\r\n","/* Data modeling based on sample: https://docs.google.com/spreadsheets/d/1NNeU0hMa-7UJE7__PhnHD5uMhQrjbLxt43elLI2cqA0/edit#gid=922537075 */\r\n\r\nexport enum WellKnownDeductionsCodeTypeId {\r\n  MiscellaneousWithGoal =  56,\r\n  MiscellaneousNoGoal = 57\r\n}\r\n\r\n/** Deduction metadata - general information about a deduction */\r\nexport class Deduction {\r\n  codeGroupId: number;            // Group Id\r\n  codeGroup: string;              // Group name\r\n  codeTypeId: number;             // PK / Deduction Identifier\r\n  codeType: string;               // Label\r\n  parameters: DeductionParameter[];\r\n  definition: string;\r\n  defaultAbbreviation: string;    // Provide a default value if available\r\n  defaultDescription: string;     // Provide a default value if available\r\n  canChangeAbbreviation: boolean; // True if user can customize abbrv.\r\n  canChangeDescription: boolean;  // True if user can customize description.\r\n  hasPercent: boolean;\r\n  retireAddon: number;\r\n  hasGoal: boolean;\r\n  employerOnly: boolean;\r\n  isSure401K: boolean;\r\n  isCatchUp: boolean;\r\n  planCode: string;\r\n  deductionPlanTaxOptionCode: DeductionPlanType;\r\n  deductionPlanMatchOptionCode: DeductionPlanMatchOptionType;\r\n\r\n}\r\n\r\nexport function deductionIsCustomType(deduction: Deduction): boolean {\r\n  return deduction.codeTypeId === 56 || // Miscellaneous with Goal\r\n         deduction.codeTypeId === 57;   // Miscellaneous No Goal\r\n}\r\n\r\n/**\r\n * This class captures values for Deductions's paremeters when instanciated\r\n */\r\nexport class DeductionKeyValue {\r\n  /**\r\n   * Constructor:\r\n   * @param key Name/Key of the parameter\r\n   * @param type Type of the value\r\n   * @param value Actual value stored for the parameter (Amount)\r\n   * @param goal Numeric goal or limit for the value (optional)\r\n   */\r\nconstructor(\r\n    public key: string,\r\n    public type: string,\r\n    public value: number | boolean | string | null,\r\n    public goal?: number) {}\r\n}\r\n\r\nexport enum DeductionPlanType {\r\n  PRETAX = 'PRETAX',\r\n  POSTTAX = 'POSTTAX',\r\n  NOEEDEDUCT = 'NOEEDEDUCT'\r\n}\r\n\r\nexport enum DeductionPlanMatchOptionType {\r\n  NOMATCH = 'NOMATCH',\r\n  NONELECTIV = 'NONELECTIV',\r\n  NOORSINGLE = 'NOORSINGLE',\r\n  SNGLORTWO = 'SNGLORTWO',\r\n  TWOTIER = 'TWOTIER'\r\n}\r\n\r\nexport enum RetirementPlans {\r\n  IRA = 'IRA',\r\n  Plan401K = '401K',\r\n  Plan403B = '403B'\r\n}\r\n\r\nexport enum RetirementPlanTypes {\r\n  P401KTraditional = '401KTraditional',\r\n  P401KSafeHarbor = '401KSafeHarbor',\r\n  P401KSimple = '401KSimple',\r\n  SimpleIRA = 'SimpleIRA',\r\n  SepIRA = 'SepIRA'\r\n}\r\nexport enum RetirementPlanApply {\r\n  PreTax = 'PreTax',\r\n  PostTax = 'PostTax',\r\n}\r\nexport enum MatchTypes {\r\n  NoMatch = 'NoMatch',\r\n  SingleTier = 'SingleTier',\r\n  TwoTiers = 'TwoTiers'\r\n}\r\nexport enum EmployeeContributionModel {\r\n  PreTax = 'PRETAX',\r\n  PostTax = 'POSTTAX',\r\n  Both = 'PRE_AND_POSTTAX'\r\n}\r\n\r\nexport class DeductionParameter {\r\n  cpdCode: string;\r\n  baseAccm: string;\r\n  // primaryType: string  // always null in samples, needed??? type???\r\n  codeTextDescription: string;\r\n  taxDeduction: string; // ?? always = D  Meaning?\r\n  name: string;\r\n  description: string;\r\n  howType: string;\r\n  dedRptSw: boolean;\r\n  inNet: boolean;\r\n  checkPrnSw: boolean;\r\n  isDisplayed: boolean;\r\n  isActive: boolean;\r\n  oneTimeDeduction?: boolean;\r\n  isEmployerDisplayed?: boolean;\r\n  deductionPlanGroupCode: string;\r\n  deductionPlanGroup: string;\r\n  parameterName: string;\r\n  displayName: string;\r\n  defaultDeductionRate?: number;\r\n}\r\n","/** Deduction metadata - general information about a deduction */\r\nexport class Earning {\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  shortDescription: string;\r\n  earningsCategory: string;\r\n  earningsGroupId: number;\r\n  earningTypeId: number;\r\n  earningTypeName: string;\r\n  earningTaxTypeId: number;\r\n  earningTaxType: string;\r\n}\r\n\r\nexport class EarningType {\r\n  earningTypeId: number;\r\n  earningTypeName: string;\r\n  isActive = true;\r\n}\r\n\r\nexport enum EarningsCategory {\r\n  DEFAULTEARNINGS = 'DEFAULTEARNINGS',\r\n  DEFAULTOTHERCOMPENSATION = 'DEFAULTOTHERCOMPENSATION',\r\n  ADDITIONALEARNINGS = 'ADDITIONALEARNINGS'\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\n/** Track status of documents requiring signature */\nvar Document = /** @class */ (function (_super) {\n    __extends(Document, _super);\n    function Document() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Document;\n}(CompanyEntityBase));\nexport { Document };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\n/**\n * Deduction of an employee\n *  Employee has a list of EmployeeDeductions with some parametrization\n *  where deductions types are a subset of company deductions.\n */\nvar EmployeeDeduction = /** @class */ (function (_super) {\n    __extends(EmployeeDeduction, _super);\n    function EmployeeDeduction(id, companyId, employeeId, deductionCodeTypeId, companyDeductionId) {\n        var _this = _super.call(this, id, companyId) || this;\n        _this.isRemoved = false;\n        _this.employeeId = employeeId;\n        _this.deductionCodeTypeId = deductionCodeTypeId;\n        _this.companyDeductionId = companyDeductionId;\n        return _this;\n    }\n    return EmployeeDeduction;\n}(CompanyEntityBase));\nexport { EmployeeDeduction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\n// NB: Do not leave CLASS fields uninitialized (i.e, `undefined`)\n//    The update/upsert operations will not clear previous fields that are undefined.\n//    Set these fields to null, which will be propagated on save!\n//    Example: split1AccountType: PaymentAccountType = null;\n//    This advice applies to CLASSes not interfaces\n/** How the Employee is paid */\nvar EmployeePaymentMethod = /** @class */ (function (_super) {\n    __extends(EmployeePaymentMethod, _super);\n    function EmployeePaymentMethod() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Default account bank routing number */\n        _this.defaultAccountRn = '';\n        /** Default account bank name that goes with the RN number. Set when have verified the RN */\n        _this.defaultAccountBankName = '';\n        /** Default account bank account number */\n        _this.defaultAccountNumber = '';\n        /** Default account name or name on printed check */\n        _this.defaultAccountName = '';\n        /** First split account type */\n        _this.split1AccountType = null;\n        /** First split bank routing number */\n        _this.split1AccountRn = '';\n        /** First split account bank name that goes with the RN number. Set when have verified the RN */\n        _this.split1AccountBankName = '';\n        /** First split bank account number */\n        _this.split1AccountNumber = '';\n        /** First split account name or name on printed check */\n        _this.split1AccountName = '';\n        /** Share of payment to distribute to the first split account.*/\n        _this.split1Value = 0;\n        /** True if should include this first account in payment distribution */\n        _this.split1IsActive = false;\n        /** Second split account type */\n        _this.split2AccountType = null;\n        /** Second split bank routing number */\n        _this.split2AccountRn = '';\n        /** Second split account bank name that goes with the RN number. Set when have verified the RN */\n        _this.split2AccountBankName = '';\n        /** Second split bank account number */\n        _this.split2AccountNumber = '';\n        /** Second split account name or name on printed check */\n        _this.split2AccountName = '';\n        /** Share of payment to distribute to the second split account.*/\n        _this.split2Value = 0;\n        /** True if should include this second account in payment distribution */\n        _this.split2IsActive = false;\n        /** True if this payment method belongs to a removed Employee */\n        _this.isRemoved = false;\n        return _this;\n    }\n    return EmployeePaymentMethod;\n}(CompanyEntityBase));\nexport { EmployeePaymentMethod };\n","import { CompanyEntityBase } from './company-entity-base';\r\nimport { PaymentAccountType, PaymentStrategy, PaymentMethod } from '@model/codes-enums';\r\n\r\n// NB: Do not leave CLASS fields uninitialized (i.e, `undefined`)\r\n//    The update/upsert operations will not clear previous fields that are undefined.\r\n//    Set these fields to null, which will be propagated on save!\r\n//    Example: split1AccountType: PaymentAccountType = null;\r\n//    This advice applies to CLASSes not interfaces\r\n\r\n/** How the Employee is paid */\r\nexport class EmployeePaymentMethod extends CompanyEntityBase {\r\n  id: string;\r\n  companyId: string;\r\n  employeeId: string;\r\n  strategy: PaymentStrategy;\r\n  paymentMethod: PaymentMethod;\r\n\r\n  /// Default account - required - always the remaining share\r\n  /** Default account type */\r\n  defaultAccountType: PaymentAccountType;\r\n  /** Default account bank routing number */\r\n  defaultAccountRn = '';\r\n  /** Default account bank name that goes with the RN number. Set when have verified the RN */\r\n  defaultAccountBankName = '';\r\n  /** Default account bank account number */\r\n  defaultAccountNumber = '';\r\n  /** Default account name or name on printed check */\r\n  defaultAccountName = '';\r\n\r\n  /** First split account type */\r\n  split1AccountType: PaymentAccountType = null;\r\n  /** First split bank routing number */\r\n  split1AccountRn = '';\r\n  /** First split account bank name that goes with the RN number. Set when have verified the RN */\r\n  split1AccountBankName = '';\r\n  /** First split bank account number */\r\n  split1AccountNumber = '';\r\n  /** First split account name or name on printed check */\r\n  split1AccountName = '';\r\n  /** Share of payment to distribute to the first split account.*/\r\n  split1Value = 0;\r\n  /** True if should include this first account in payment distribution */\r\n  split1IsActive = false;\r\n\r\n  /** Second split account type */\r\n  split2AccountType: PaymentAccountType = null;\r\n  /** Second split bank routing number */\r\n  split2AccountRn = '';\r\n  /** Second split account bank name that goes with the RN number. Set when have verified the RN */\r\n  split2AccountBankName = '';\r\n  /** Second split bank account number */\r\n  split2AccountNumber = '';\r\n  /** Second split account name or name on printed check */\r\n  split2AccountName = '';\r\n  /** Share of payment to distribute to the second split account.*/\r\n  split2Value = 0;\r\n  /** True if should include this second account in payment distribution */\r\n  split2IsActive = false;\r\n\r\n  /** True if this payment method belongs to a removed Employee */\r\n  isRemoved = false;\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\n/** Employee Tax code */\nvar EmployeeTax = /** @class */ (function (_super) {\n    __extends(EmployeeTax, _super);\n    function EmployeeTax() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** If the employee is exempt from paying this tax */\n        _this.isExempt = false;\n        /** When the code is active */\n        _this.isActive = true;\n        /** True when marked-for-delete */\n        _this.isRemoved = false;\n        return _this;\n    }\n    EmployeeTax.create = function (employeeTax) {\n        if (employeeTax == null || employeeTax.id == null || employeeTax.companyId == null ||\n            employeeTax.employeeId == null) {\n            throw Error('EmployeeTax can\\'t be created without specifying a id, employee, company');\n        }\n        return Object.assign(new EmployeeTax(employeeTax.id, employeeTax.companyId), {\n            withholdingAllowance: 0,\n            extraWithholding: 0\n        }, employeeTax);\n    };\n    return EmployeeTax;\n}(CompanyEntityBase));\nexport { EmployeeTax };\n","import { TaxTypeCode } from '@model/codes-enums';\r\nimport { CompanyEntityBase } from './company-entity-base';\r\n\r\n/** Employee Tax code */\r\nexport class EmployeeTax extends CompanyEntityBase {\r\n\r\n    /** The unique Id of the Employee this tax belongs to */\r\n    employeeId: string;\r\n\r\n    /** The unique identifier of the tax code. ex: FE0000-003  */\r\n    mtsTaxCode: string;\r\n\r\n    /** The tax code name, mainly used for display reasons */\r\n    name: string;\r\n\r\n    /** The state code. ex PA, can be null for federal taxes */\r\n    stateCode: string;\r\n\r\n    /** If the employee is exempt from paying this tax */\r\n    isExempt = false;\r\n\r\n    /** This is the reason code that describes why the employee is exempt.\" */\r\n    exemptReasonCode: string;\r\n\r\n    /** If the tax is reimbursable */\r\n    isReimbursable: boolean;\r\n\r\n    /** Married or head of Head of Household however its an api driven field. Ex: Married = M */\r\n    filingStatus: string;\r\n\r\n    /** Between 0 and 25 integer */\r\n    withholdingAllowance: number;\r\n\r\n    /** Fixed amount of $ representing withholding value */\r\n    extraWithholding: number;\r\n\r\n    /** Is the employee exempt from this task due to low income? */\r\n    isLowIncomeTaxExempt: boolean;\r\n\r\n    /** A code that describes if the tax is on the Federal, State, County, City or School district level */\r\n    taxTypeCode: TaxTypeCode;\r\n\r\n    /** When the code is active */\r\n    isActive = true;\r\n\r\n    /** True when marked-for-delete */\r\n    isRemoved = false;\r\n\r\n    static create(employeeTax?: Partial<EmployeeTax>): EmployeeTax {\r\n        if (employeeTax == null || employeeTax.id == null || employeeTax.companyId == null ||\r\n            employeeTax.employeeId == null) {\r\n            throw Error('EmployeeTax can\\'t be created without specifying a id, employee, company');\r\n        }\r\n\r\n        return Object.assign(new EmployeeTax(employeeTax.id, employeeTax.companyId), {\r\n            withholdingAllowance: 0,\r\n            extraWithholding: 0\r\n        }, employeeTax);\r\n    }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\nimport { EmployeeStatus } from '@model/codes-enums';\nimport { getFullName, hasName } from '@utils/ee-utils';\n// NB: Do not leave CLASS fields uninitialized (i.e, `undefined`)\n//    The update/upsert operations will not clear previous fields that are undefined.\n//    Set these fields to null, which will be propagated on save!\n//    Example: canContact?: boolean = null;\n//    This advice applies to CLASSes not interfaces\n/** Employee on the payroll */\nvar Employee = /** @class */ (function (_super) {\n    __extends(Employee, _super);\n    function Employee(id, companyId) {\n        var _this = _super.call(this, id, companyId) || this;\n        _this.firstName = '';\n        _this.lastName = '';\n        _this.employeeType = null;\n        _this.homeAddressId = '';\n        _this.workAddressId = '';\n        /**\n         * True if the system can contact or notify the employee\n         * If false, email and phone can be (will be) empty\n         */\n        _this.canContact = null;\n        _this.email = null;\n        _this.phone = null;\n        _this.isNewHire = false;\n        _this.isTerminated = false;\n        _this.hireDate = null;\n        _this.birthDate = null;\n        _this.sex = null;\n        /** hourly, salary */\n        _this.payType = null;\n        /** Amount per payFrequency */\n        _this.payRate = null;\n        /** Overtime hourly rate */\n        _this.overtimeRate = null;\n        /** hourly, weekly, monthly, yearly */\n        _this.payFrequency = null;\n        /** Social Security Number */\n        _this.ssn = '';\n        /** True when marked-for-delete */\n        _this.isRemoved = false;\n        return _this;\n    }\n    /** Create Employee instance that is a clone of the source EE */\n    Employee.create = function (ee) {\n        ee = ee || {};\n        // Must use `assign` to get the Employee prototype\n        return Object.assign(new Employee(ee.id, ee.companyId), ee);\n    };\n    Object.defineProperty(Employee.prototype, \"employeeStatus\", {\n        /** get and set EE status flags (synthetic property) */\n        get: function () {\n            return this.isTerminated ? EmployeeStatus.Terminated : this.isNewHire ? EmployeeStatus.NewHire : EmployeeStatus.Active;\n        },\n        set: function (status) {\n            // set the corresponding Employee flags\n            this.isTerminated = status === EmployeeStatus.Terminated;\n            this.isNewHire = status === EmployeeStatus.NewHire;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Employee.prototype, \"fullName\", {\n        get: function () {\n            return getFullName(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Employee.prototype, \"hasName\", {\n        get: function () {\n            return hasName(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Employee;\n}(CompanyEntityBase));\nexport { Employee };\n","import { CompanyEntityBase } from './company-entity-base';\r\nimport { EmployeeStatus, EmployeeType, FedFilingStatus, PayrollFrequency, Sex, StateFilingStatus } from '@model/codes-enums';\r\nimport { getFullName, hasName } from '@utils/ee-utils';\r\n\r\n// NB: Do not leave CLASS fields uninitialized (i.e, `undefined`)\r\n//    The update/upsert operations will not clear previous fields that are undefined.\r\n//    Set these fields to null, which will be propagated on save!\r\n//    Example: canContact?: boolean = null;\r\n//    This advice applies to CLASSes not interfaces\r\n\r\n/** Employee on the payroll */\r\nexport class Employee extends CompanyEntityBase {\r\n  id: string;\r\n  companyId: string;\r\n  firstName = '';\r\n  lastName = '';\r\n  employeeType: EmployeeType = null;\r\n  homeAddressId = '';\r\n  workAddressId = '';\r\n\r\n  /**\r\n   * True if the system can contact or notify the employee\r\n   * If false, email and phone can be (will be) empty\r\n   */\r\n  canContact?: boolean = null;\r\n  email?: string = null;\r\n  phone?: string = null;\r\n  isNewHire = false;\r\n  isTerminated = false;\r\n  hireDate?: string = null;\r\n  birthDate?: string = null;\r\n  sex: Sex = null;\r\n  /** hourly, salary */\r\n  payType?: string = null;\r\n  /** Amount per payFrequency */\r\n  payRate?: number = null;\r\n  /** Overtime hourly rate */\r\n  overtimeRate?: number = null;\r\n  /** hourly, weekly, monthly, yearly */\r\n  payFrequency?: PayrollFrequency = null;\r\n  /** Social Security Number */\r\n  ssn = '';\r\n\r\n  /** True when marked-for-delete */\r\n  isRemoved = false;\r\n\r\n  constructor(id?: string, companyId?: string) {\r\n    super(id, companyId);\r\n  }\r\n\r\n  /** Create Employee instance that is a clone of the source EE */\r\n  static create(ee?: Partial<Employee>): Employee {\r\n    ee = ee || {};\r\n    // Must use `assign` to get the Employee prototype\r\n    return Object.assign(new Employee(ee.id, ee.companyId), ee);\r\n  }\r\n\r\n  /** get and set EE status flags (synthetic property) */\r\n  get employeeStatus() {\r\n    return this.isTerminated ? EmployeeStatus.Terminated : this.isNewHire ? EmployeeStatus.NewHire : EmployeeStatus.Active;\r\n  }\r\n\r\n  set employeeStatus(status: EmployeeStatus) {\r\n    // set the corresponding Employee flags\r\n    this.isTerminated = status === EmployeeStatus.Terminated;\r\n    this.isNewHire = status === EmployeeStatus.NewHire;\r\n  }\r\n\r\n  get fullName() {\r\n    return getFullName(this);\r\n  }\r\n\r\n  get hasName() {\r\n    return hasName(this);\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\nimport { HouseholdFilersStatus } from '@model/codes-enums';\nimport { getFullName, hasName } from '@utils/ee-utils';\n// NB: Do not leave CLASS fields uninitialized (i.e, `undefined`)\n//    The update/upsert operations will not clear previous fields that are undefined.\n//    Set these fields to null, which will be propagated on save!\n//    Example: canContact?: boolean = null;\n//    This advice applies to CLASSes not interfaces\n/** Household filers */\nvar HouseholdFilers = /** @class */ (function (_super) {\n    __extends(HouseholdFilers, _super);\n    function HouseholdFilers(id, companyId) {\n        var _this = _super.call(this, id, companyId) || this;\n        _this.filingStatus = null;\n        _this.primaryFirstName = null;\n        _this.primaryLastName = null;\n        _this.primarySsn = null;\n        _this.spouseFirstName = null;\n        _this.spouseLastName = null;\n        _this.spouseSsn = null;\n        return _this;\n    }\n    Object.defineProperty(HouseholdFilers.prototype, \"primaryFullName\", {\n        get: function () {\n            return getFullName({\n                firstName: this.primaryFirstName,\n                lastName: this.primaryLastName,\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HouseholdFilers.prototype, \"spouseFullName\", {\n        get: function () {\n            return getFullName({\n                firstName: this.spouseFirstName,\n                lastName: this.spouseLastName,\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HouseholdFilers.prototype, \"hasNames\", {\n        get: function () {\n            if (this.filingStatus === HouseholdFilersStatus.Single) {\n                return this.primaryHasName;\n            }\n            if (this.filingStatus === HouseholdFilersStatus.Joint) {\n                return this.primaryHasName && this.spouseHasName;\n            }\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HouseholdFilers.prototype, \"primaryHasName\", {\n        get: function () {\n            return hasName({\n                firstName: this.primaryFirstName,\n                lastName: this.primaryLastName,\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HouseholdFilers.prototype, \"spouseHasName\", {\n        get: function () {\n            return hasName({\n                firstName: this.spouseFirstName,\n                lastName: this.spouseLastName,\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HouseholdFilers;\n}(CompanyEntityBase));\nexport { HouseholdFilers };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\n/** Document Signer or reviewer in e-signing */\nvar EnvelopeSigner = /** @class */ (function (_super) {\n    __extends(EnvelopeSigner, _super);\n    function EnvelopeSigner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EnvelopeSigner;\n}(CompanyEntityBase));\nexport { EnvelopeSigner };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\n/** Represents a collection of documents for sending or signing, e.g. through DocuSign */\nvar Envelope = /** @class */ (function (_super) {\n    __extends(Envelope, _super);\n    function Envelope() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Envelope;\n}(CompanyEntityBase));\nexport { Envelope };\n","import { CompanyEntityBase } from './company-entity-base';\r\nimport { HouseholdFilersStatus } from '@model/codes-enums';\r\nimport { getFullName, hasName } from '@utils/ee-utils';\r\n\r\n// NB: Do not leave CLASS fields uninitialized (i.e, `undefined`)\r\n//    The update/upsert operations will not clear previous fields that are undefined.\r\n//    Set these fields to null, which will be propagated on save!\r\n//    Example: canContact?: boolean = null;\r\n//    This advice applies to CLASSes not interfaces\r\n\r\n/** Household filers */\r\nexport class HouseholdFilers extends CompanyEntityBase {\r\n  id: string;\r\n  companyId: string;\r\n  filingStatus: HouseholdFilersStatus = null;\r\n  primaryFirstName: string = null;\r\n  primaryLastName: string = null;\r\n  primarySsn: string = null;\r\n  spouseFirstName: string = null;\r\n  spouseLastName: string = null;\r\n  spouseSsn: string = null;\r\n\r\n  constructor(id?: string, companyId?: string) {\r\n    super(id, companyId);\r\n  }\r\n\r\n  get primaryFullName() {\r\n    return getFullName({\r\n      firstName: this.primaryFirstName,\r\n      lastName: this.primaryLastName,\r\n    });\r\n  }\r\n  get spouseFullName() {\r\n    return getFullName({\r\n      firstName: this.spouseFirstName,\r\n      lastName: this.spouseLastName,\r\n    });\r\n  }\r\n\r\n  get hasNames(): boolean {\r\n    if (this.filingStatus === HouseholdFilersStatus.Single) {\r\n      return this.primaryHasName;\r\n    }\r\n    if (this.filingStatus === HouseholdFilersStatus.Joint) {\r\n      return this.primaryHasName && this.spouseHasName;\r\n    }\r\n    return false;\r\n  }\r\n  get primaryHasName(): boolean {\r\n    return hasName({\r\n      firstName: this.primaryFirstName,\r\n      lastName: this.primaryLastName,\r\n    });\r\n  }\r\n  get spouseHasName(): boolean {\r\n    return hasName({\r\n      firstName: this.spouseFirstName,\r\n      lastName: this.spouseLastName,\r\n    });\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\n/** Track key account statistics in general and visit timing to dashboard sections in particular */\nvar Stats = /** @class */ (function (_super) {\n    __extends(Stats, _super);\n    function Stats() {\n        var _this = _super.call(this) || this;\n        var dt = new Date().toISOString();\n        // AboutYou is always started as a result of sign up\n        _this.aboutYouLastDate = _this.aboutYouStartDate = dt;\n        return _this;\n    }\n    return Stats;\n}(CompanyEntityBase));\nexport { Stats };\n","import { CompanyEntityBase } from './company-entity-base';\r\nimport { SectionStatus } from '../codes-enums/enums';\r\n/** Track key account statistics in general and visit timing to dashboard sections in particular */\r\nexport class Stats extends CompanyEntityBase {\r\n  id: string;\r\n  companyId: string;\r\n\r\n  constructor() {\r\n    super();\r\n    const dt = new Date().toISOString();\r\n\r\n    // AboutYou is always started as a result of sign up\r\n    this.aboutYouLastDate = this.aboutYouStartDate = dt;\r\n  }\r\n\r\n  // ISO DateTime strings for section start and last visit dates\r\n  aboutYouStartDate: string;\r\n  aboutYouLastDate: string;\r\n  companyInfoStartDate: string;\r\n  companyInfoLastDate: string;\r\n  employeesStartDate: string;\r\n  employeesLastDate: string;\r\n  companyTaxInfoStartDate: string;\r\n  companyTaxInfoLastDate: string;\r\n  companyBankAccountStartDate: string;\r\n  companyBankAccountLastDate: string;\r\n  reviewStartDate: string;\r\n  reviewLastDate: string;\r\n\r\n  // Section statuses\r\n  aboutYouStatus: SectionStatus;\r\n  companyInfoStatus: SectionStatus;\r\n  employeesStatus: SectionStatus;\r\n  companyTaxInfoStatus: SectionStatus;\r\n  companyBankAccountStatus: SectionStatus;\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CompanyEntityBase } from './company-entity-base';\n/** User with access to the application. */\nvar User = /** @class */ (function (_super) {\n    __extends(User, _super);\n    function User() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Id of the only company this user can see.\n         * Required unless userRole is Administrator | Agent | Sales,\n         * which are users of multiple companies\n         * Only the Administrator role is implemented now.\n         */\n        _this.companyId = null;\n        return _this;\n    }\n    return User;\n}(CompanyEntityBase));\nexport { User };\n","export * from './entities';\r\nexport * from './codes-enums';\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { OnDestroy, OnChanges, SimpleChanges, ElementRef, Renderer2, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Validator, AbstractControl, AsyncValidator, NgModel } from '@angular/forms';\nimport { of, timer, Subject, asyncScheduler, combineLatest, merge, BehaviorSubject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, observeOn, startWith, switchMap } from 'rxjs/operators';\nimport { SubSink } from '@core';\nimport { ModelComponent } from '../model.component';\nimport { ValidationService } from '@validation';\nvar FormDirective = /** @class */ (function () {\n    function FormDirective(route) {\n        var _this = this;\n        this.route = route;\n        this.changesSubject = new Subject();\n        this.controls = {};\n        this.subs = new SubSink();\n        this.controls$ = new BehaviorSubject(this.controls);\n        this.invalid$ = this.buildStatusObservable(function (controls) { return _this.isInvalid(controls); });\n        this.valid$ = this.buildStatusObservable(function (controls) { return _this.isValid(controls); });\n    }\n    Object.defineProperty(FormDirective.prototype, \"spForceFeedback\", {\n        get: function () {\n            return this._spForceFeedback || this.forceValidationFeedback;\n        },\n        set: function (value) {\n            this._spForceFeedback = true; // always set true, regardless of value (huh?)\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FormDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        var changes$ = combineLatest.apply(void 0, [this.changesSubject.pipe(startWith({}))].concat(this.getParamsFromRoot()));\n        this.change$ = changes$.pipe(map(function () { return _this.spForceFeedback; }), distinctUntilChanged());\n        // although probably OK to skip unsubscribe, do so for safety\n        this.subs.sink = changes$.subscribe(function (_a) {\n            var changes = _a[0], params = _a.slice(1);\n            var param = params.find(function (p) { return p.forceValidationFeedback !== undefined; });\n            _this.forceValidationFeedback = param && param.forceValidationFeedback;\n        });\n    };\n    FormDirective.prototype.ngOnChanges = function (changes) {\n        this.changesSubject.next(changes);\n    };\n    FormDirective.prototype.ngOnDestroy = function () {\n        this.subs.unsubscribe();\n    };\n    FormDirective.prototype.addControl = function (dir) {\n        this.controls[dir.name] = dir.control;\n        this.controls$.next(this.controls);\n    };\n    FormDirective.prototype.removeControl = function (dir) {\n        if (dir && dir.name) {\n            delete this.controls[dir.name];\n        }\n        this.controls$.next(this.controls);\n    };\n    Object.defineProperty(FormDirective.prototype, \"valid\", {\n        get: function () {\n            return this.isValid(this.controls);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormDirective.prototype, \"invalid\", {\n        get: function () {\n            return this.isInvalid(this.controls);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormDirective.prototype, \"pending\", {\n        get: function () {\n            var _this = this;\n            return Object.keys(this.controls).some(function (name) { return _this.controls[name].pending; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormDirective.prototype, \"errors\", {\n        get: function () {\n            var _this = this;\n            return Object.keys(this.controls)\n                .map(function (name) { return _this.controls[name].errors || {}; })\n                .reduce(function (prev, curr) {\n                return __assign({}, prev, curr);\n            }, {});\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormDirective.prototype, \"pristine\", {\n        get: function () {\n            var _this = this;\n            return Object.keys(this.controls).every(function (name) { return _this.controls[name].pristine; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormDirective.prototype, \"dirty\", {\n        get: function () {\n            var _this = this;\n            return Object.keys(this.controls).some(function (name) { return _this.controls[name].dirty; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormDirective.prototype, \"touched\", {\n        get: function () {\n            var _this = this;\n            return Object.keys(this.controls).some(function (name) { return _this.controls[name].touched; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormDirective.prototype, \"untouched\", {\n        get: function () {\n            var _this = this;\n            return Object.keys(this.controls).every(function (name) { return _this.controls[name].untouched; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FormDirective.prototype.getParamsFromRoot = function (route) {\n        route = route || this.route;\n        if (!route.parent) {\n            return [route.params];\n        }\n        return [route.params].concat(this.getParamsFromRoot(route.parent));\n    };\n    FormDirective.prototype.isInvalid = function (controls) {\n        return Object.keys(controls).some(function (name) { return controls[name].invalid && !controls[name].disabled; });\n    };\n    FormDirective.prototype.isValid = function (controls) {\n        return Object.keys(controls).every(function (name) { return controls[name].valid || controls[name].disabled; });\n    };\n    FormDirective.prototype.buildStatusObservable = function (status) {\n        return this.controls$.pipe(switchMap(function (controls) {\n            return merge.apply(void 0, Object.keys(controls).map(function (key) { return controls[key].statusChanges; })).pipe(map(function () { return status(controls); }), startWith(status(controls)));\n        }), distinctUntilChanged(), observeOn(asyncScheduler));\n    };\n    return FormDirective;\n}());\nexport { FormDirective };\nvar ValidationStatusDirective = /** @class */ (function () {\n    function ValidationStatusDirective(el, renderer, form) {\n        this.el = el;\n        this.renderer = renderer;\n        this.form = form;\n        this.validClass = 'is-valid';\n        this.invalidClass = 'is-invalid';\n        this.subs = new SubSink();\n        this.touched$ = new Subject();\n    }\n    ValidationStatusDirective.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        if (changes['spValidationStatus']) {\n            this.subs.unsubscribe();\n            if (this.spValidationStatus) {\n                var events = [\n                    this.spValidationStatus.statusChanges\n                ].concat((this.form ? [this.form.change$] : []), [\n                    this.touched$.pipe(distinctUntilChanged())\n                ]);\n                this.subs.sink = merge.apply(void 0, events).pipe(debounceTime(500)).subscribe(function () {\n                    if (_this.showFeedback && (_this.spValidationStatus.valid || _this.spValidationStatus.pending)) {\n                        _this.renderer.addClass(_this.el.nativeElement, _this.validClass);\n                    }\n                    else {\n                        _this.renderer.removeClass(_this.el.nativeElement, _this.validClass);\n                    }\n                    if (_this.showFeedback && _this.spValidationStatus.invalid) {\n                        _this.renderer.addClass(_this.el.nativeElement, _this.invalidClass);\n                    }\n                    else {\n                        _this.renderer.removeClass(_this.el.nativeElement, _this.invalidClass);\n                    }\n                });\n                // Monkey patch NgModel to communicate touched status to spValidationFeedback\n                this.spValidationStatus._spTouched$ = new Subject();\n            }\n        }\n    };\n    ValidationStatusDirective.prototype.ngOnInit = function () {\n        if (this.form) {\n            this.form.addControl(this.spValidationStatus);\n        }\n    };\n    ValidationStatusDirective.prototype.ngOnDestroy = function () {\n        this.subs.unsubscribe();\n        if (this.form && this.spValidationStatus) {\n            this.form.removeControl(this.spValidationStatus);\n        }\n    };\n    ValidationStatusDirective.prototype.blur = function () {\n        this.touched$.next(true);\n        if (this.spValidationStatus._spTouched$) {\n            this.spValidationStatus._spTouched$.next(true);\n        }\n    };\n    Object.defineProperty(ValidationStatusDirective.prototype, \"showFeedback\", {\n        get: function () {\n            return this.form && this.form.spForceFeedback || this.spValidationStatus.touched || this.spValidationStatus.dirty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ValidationStatusDirective;\n}());\nexport { ValidationStatusDirective };\nvar ValidationFeedbackDirective = /** @class */ (function () {\n    function ValidationFeedbackDirective(el, renderer, form) {\n        this.renderer = renderer;\n        this.form = form;\n        this.subs = new SubSink();\n        this.el = el.nativeElement;\n    }\n    ValidationFeedbackDirective.prototype.ngOnDestroy = function () {\n        this.subs.unsubscribe();\n    };\n    ValidationFeedbackDirective.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        if (changes['spValidationFeedback']) {\n            this.subs.unsubscribe();\n            if (this.spValidationFeedback) {\n                var events = [\n                    this.spValidationFeedback.statusChanges.pipe(switchMap(function (_) {\n                        // Only emit PENDING (and display \"Checking...) unless has been pending for more than 1/2 second\n                        // The 1/2 second value was empirically determined. Don't know why less doesn't work.\n                        return _this.spValidationFeedback.pending ? timer(500).pipe(map(function () { return _; })) : of(_);\n                    }))\n                ].concat((this.form ? [this.form.change$] : []), (this.spValidationFeedback._spTouched$ ? [this.spValidationFeedback._spTouched$.pipe(distinctUntilChanged())] : []));\n                this.subs.sink = merge.apply(void 0, events).pipe(debounceTime(500)).subscribe(function () {\n                    _this.renderer.removeClass(_this.el, 'feedback');\n                    _this.renderer.removeClass(_this.el, 'valid-feedback');\n                    _this.renderer.removeClass(_this.el, 'invalid-feedback');\n                    _this.el.innerText = '';\n                    if (!_this.showFeedback) {\n                        return;\n                    }\n                    if (_this.spValidationFeedback.pending) {\n                        _this.renderer.addClass(_this.el, 'valid-feedback');\n                        _this.el.innerText = 'Checking...';\n                    }\n                    if (_this.spValidationFeedback.invalid) {\n                        _this.renderer.addClass(_this.el, 'invalid-feedback');\n                        _this.el.innerHTML = _this.getValidationFeedback().map(function (feedback) {\n                            return \"<div>\" + feedback + \"</div>\";\n                        }).join('\\n');\n                    }\n                    if (_this.spValidationFeedback.pending || _this.spValidationFeedback.invalid) {\n                        _this.renderer.addClass(_this.el, 'feedback');\n                    }\n                });\n            }\n        }\n    };\n    ValidationFeedbackDirective.prototype.getValidationFeedback = function () {\n        var _this = this;\n        if (!this.spValidationFeedback && !this.spValidationFeedback.invalid) {\n            return [];\n        }\n        return Object.keys(this.spValidationFeedback.errors || {})\n            .map(function (key) { return _this.spValidationFeedback.errors[key]; })\n            .filter(function (error) { return error.getErrorMessage; })\n            .map(function (error) { return error.getErrorMessage(_this.displayName); });\n    };\n    Object.defineProperty(ValidationFeedbackDirective.prototype, \"showFeedback\", {\n        get: function () {\n            return this.form && this.form.spForceFeedback || this.spValidationFeedback.touched || this.spValidationFeedback.dirty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ValidationFeedbackDirective;\n}());\nexport { ValidationFeedbackDirective };\nvar ValidatePropertyDirective = /** @class */ (function () {\n    function ValidatePropertyDirective(validationService) {\n        this.validationService = validationService;\n        this.validationErrors = [];\n        this.subs = new SubSink();\n    }\n    ValidatePropertyDirective.prototype.ngOnDestroy = function () {\n        this.subs.unsubscribe();\n    };\n    ValidatePropertyDirective.prototype.validate = function (control) {\n        var _this = this;\n        if (!this.model || !this.modelType || !this.propertyName) {\n            return null;\n        }\n        var model = __assign({}, this.model);\n        model[this.propertyName] = control.value;\n        var modelAsString = JSON.stringify(model);\n        if (this.lastModel !== modelAsString) {\n            this.lastModel = modelAsString;\n            var errors = this.validationService.validateModel(model, this.modelType, false, function (validator) {\n                return !_this.group && !validator.group || _this.group && validator.group === _this.group;\n            }) || [];\n            this.validationErrors = errors.filter(function (error) { return error.context.propertyName === _this.propertyName; });\n        }\n        var validationErrors = this.validationErrors.reduce(function (prev, curr) {\n            prev[curr.key] = curr;\n            return prev;\n        }, {});\n        return !!this.validationErrors.length ? validationErrors : null;\n    };\n    ValidatePropertyDirective.prototype.registerOnValidatorChange = function (fn) {\n        this.subs.unsubscribe();\n        if (this.modelContext) {\n            this.subs.sink = this.modelContext.modelChange.subscribe(fn);\n        }\n    };\n    return ValidatePropertyDirective;\n}());\nexport { ValidatePropertyDirective };\nvar AsyncValidatePropertyDirective = /** @class */ (function () {\n    function AsyncValidatePropertyDirective(validationService) {\n        this.validationService = validationService;\n        this.validationErrors = [];\n        this.subs = new SubSink();\n    }\n    AsyncValidatePropertyDirective.prototype.ngOnDestroy = function () {\n        this.subs.unsubscribe();\n    };\n    AsyncValidatePropertyDirective.prototype.validate = function (control) {\n        var _this = this;\n        if (!this.model || !this.modelType || !this.propertyName) {\n            return of(null);\n        }\n        var entityMetadata = this.validationService.validationMetadata.getModelConfig(this.modelType);\n        if (!entityMetadata) {\n            return of(null);\n        }\n        var hasAsyncValidators = entityMetadata.getAsyncProperties().some(function (property) {\n            return property.propertyName === _this.propertyName &&\n                property.validators.some(function (validator) { return !_this.group && !validator.group || _this.group && validator.group === _this.group; });\n        });\n        if (!hasAsyncValidators) {\n            return of(null);\n        }\n        var toErrorMap = function () {\n            return _this.validationErrors.reduce(function (prev, curr) {\n                prev[curr.key] = curr;\n                return prev;\n            }, {});\n        };\n        if (this.lastPropertyValue !== control.value) {\n            // debounce with timer\n            return timer(500).pipe(switchMap(function () {\n                var model = __assign({}, _this.model);\n                model[_this.propertyName] = control.value;\n                var predicate = function (validator, property) {\n                    return property && property.propertyName === _this.propertyName &&\n                        (!_this.group && !validator.group || _this.group && validator.group === _this.group);\n                };\n                return _this.validationService.validateModel(model, _this.modelType, true, predicate).pipe(map(function (errors) {\n                    _this.lastPropertyValue = control.value;\n                    _this.validationErrors = (errors || []).filter(function (error) { return error && error.context.propertyName === _this.propertyName; });\n                    return !!_this.validationErrors.length ? toErrorMap() : null;\n                }));\n            }));\n        }\n        return of(!!this.validationErrors.length ? toErrorMap() : null);\n    };\n    AsyncValidatePropertyDirective.prototype.registerOnValidatorChange = function (fn) {\n        this.subs.unsubscribe();\n        if (this.modelContext) {\n            this.subs.sink = this.modelContext.modelChange.subscribe(fn);\n        }\n    };\n    return AsyncValidatePropertyDirective;\n}());\nexport { AsyncValidatePropertyDirective };\n","import {\r\n  Directive, Component, Input, Output, EventEmitter, OnDestroy, OnChanges,\r\n  SimpleChanges, ElementRef, Renderer2, Optional, OnInit, HostListener\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { Validator, AbstractControl, NG_VALIDATORS, NG_ASYNC_VALIDATORS, AsyncValidator, NgModel } from '@angular/forms';\r\n\r\nimport { Observable, of, timer, Subject, asyncScheduler, combineLatest, merge, BehaviorSubject } from 'rxjs';\r\nimport { debounceTime, delay, distinctUntilChanged, map, observeOn, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport { Indexable, SubSink } from '@core';\r\nimport { ModelComponent } from '../model.component';\r\nimport { ValidationService, ValidationError, ValidatorPredicate } from '@validation';\r\n\r\n@Directive({\r\n  selector: 'form[spForceFeedback], form',\r\n  exportAs: 'spForm'\r\n})\r\nexport class FormDirective implements OnInit, OnChanges, OnDestroy {\r\n\r\n  @Input() get spForceFeedback(): boolean {\r\n    return this._spForceFeedback || this.forceValidationFeedback;\r\n  }\r\n  set spForceFeedback(value: boolean) {\r\n    this._spForceFeedback = true; // always set true, regardless of value (huh?)\r\n  }\r\n  private _spForceFeedback: boolean;\r\n\r\n  change$: Observable<any>;\r\n  private changesSubject = new Subject<SimpleChanges>();\r\n  controls: { [key: string]: AbstractControl; } = {};\r\n  private controls$: BehaviorSubject<{ [key: string]: AbstractControl; }>;\r\n  private forceValidationFeedback: boolean;\r\n  invalid$: Observable<boolean>;\r\n  private subs = new SubSink();\r\n  valid$: Observable<boolean>;\r\n\r\n  constructor(private route: ActivatedRoute) {\r\n    this.controls$ = new BehaviorSubject<{ [key: string]: AbstractControl; }>(this.controls);\r\n    this.invalid$ = this.buildStatusObservable(controls => this.isInvalid(controls));\r\n    this.valid$ = this.buildStatusObservable(controls => this.isValid(controls));\r\n  }\r\n\r\n  ngOnInit() {\r\n    const changes$ = combineLatest(\r\n      this.changesSubject.pipe(startWith<SimpleChanges>({})),\r\n      ...this.getParamsFromRoot()\r\n    );\r\n\r\n    this.change$ = changes$.pipe(\r\n      map(() => this.spForceFeedback),\r\n      distinctUntilChanged()\r\n    );\r\n\r\n    // although probably OK to skip unsubscribe, do so for safety\r\n    this.subs.sink = changes$.subscribe(([changes, ...params]) => {\r\n      const param = params.find(p => p.forceValidationFeedback !== undefined);\r\n      this.forceValidationFeedback = param && param.forceValidationFeedback;\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.changesSubject.next(changes);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  addControl(dir: NgModel): void {\r\n    this.controls[dir.name] = dir.control;\r\n    this.controls$.next(this.controls);\r\n  }\r\n\r\n  removeControl(dir: NgModel): void {\r\n    if (dir && dir.name) {\r\n      delete this.controls[dir.name];\r\n    }\r\n    this.controls$.next(this.controls);\r\n  }\r\n\r\n  get valid(): boolean {\r\n    return this.isValid(this.controls);\r\n  }\r\n\r\n  get invalid(): boolean {\r\n    return this.isInvalid(this.controls);\r\n  }\r\n\r\n  get pending(): boolean {\r\n    return Object.keys(this.controls).some(name => this.controls[name].pending);\r\n  }\r\n\r\n  get errors(): { [key: string]: any; } {\r\n    return Object.keys(this.controls)\r\n      .map(name => this.controls[name].errors || {})\r\n      .reduce((prev, curr) => {\r\n        return { ...prev, ...curr };\r\n      }, {} as Indexable);\r\n  }\r\n\r\n  get pristine(): boolean {\r\n    return Object.keys(this.controls).every(name => this.controls[name].pristine);\r\n  }\r\n\r\n  get dirty(): boolean {\r\n    return Object.keys(this.controls).some(name => this.controls[name].dirty);\r\n  }\r\n\r\n  get touched(): boolean {\r\n    return Object.keys(this.controls).some(name => this.controls[name].touched);\r\n  }\r\n\r\n  get untouched(): boolean {\r\n    return Object.keys(this.controls).every(name => this.controls[name].untouched);\r\n  }\r\n\r\n  private getParamsFromRoot(route?: ActivatedRoute): Observable<Params>[] {\r\n    route = route || this.route;\r\n\r\n    if (!route.parent) {\r\n      return [route.params];\r\n    }\r\n\r\n    return [route.params, ...this.getParamsFromRoot(route.parent)];\r\n  }\r\n\r\n  private isInvalid(controls: { [key: string]: AbstractControl; }) {\r\n    return Object.keys(controls).some(name => controls[name].invalid && !controls[name].disabled);\r\n  }\r\n\r\n  private isValid(controls: { [key: string]: AbstractControl; }) {\r\n    return Object.keys(controls).every(name => controls[name].valid || controls[name].disabled);\r\n  }\r\n\r\n  private buildStatusObservable<T>(status: (controls: { [key: string]: AbstractControl; }) => T) {\r\n    return this.controls$.pipe(\r\n      switchMap(controls => {\r\n        return merge(...Object.keys(controls).map(key => controls[key].statusChanges)).pipe(\r\n          map(() => status(controls)),\r\n          startWith(status(controls))\r\n        );\r\n      }),\r\n      distinctUntilChanged(),\r\n      observeOn(asyncScheduler)\r\n    );\r\n  }\r\n}\r\n\r\ninterface NgModelExtended extends NgModel {\r\n  _spTouched$: Subject<boolean>;\r\n}\r\n\r\n@Directive({\r\n  selector: '[spValidationStatus]'\r\n})\r\nexport class ValidationStatusDirective implements OnChanges, OnInit, OnDestroy {\r\n\r\n  @Input() spValidationStatus: NgModelExtended;\r\n  @Input() validClass = 'is-valid';\r\n  @Input() invalidClass = 'is-invalid';\r\n\r\n  private subs = new SubSink();\r\n  private touched$ = new Subject<boolean>();\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2, @Optional() private form: FormDirective) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['spValidationStatus']) {\r\n      this.subs.unsubscribe();\r\n      if (this.spValidationStatus) {\r\n\r\n        const events = [\r\n          this.spValidationStatus.statusChanges,\r\n          ...(this.form ? [this.form.change$] : []),\r\n          this.touched$.pipe(distinctUntilChanged())\r\n        ];\r\n\r\n        this.subs.sink = merge(...events).pipe(\r\n          debounceTime(500),\r\n        ).subscribe(() => {\r\n          if (this.showFeedback && (this.spValidationStatus.valid || this.spValidationStatus.pending)) {\r\n            this.renderer.addClass(this.el.nativeElement, this.validClass);\r\n          } else {\r\n            this.renderer.removeClass(this.el.nativeElement, this.validClass);\r\n          }\r\n\r\n          if (this.showFeedback && this.spValidationStatus.invalid) {\r\n            this.renderer.addClass(this.el.nativeElement, this.invalidClass);\r\n          } else {\r\n            this.renderer.removeClass(this.el.nativeElement, this.invalidClass);\r\n          }\r\n        });\r\n\r\n        // Monkey patch NgModel to communicate touched status to spValidationFeedback\r\n        this.spValidationStatus._spTouched$ = new Subject<boolean>();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.form) {\r\n      this.form.addControl(this.spValidationStatus);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n    if (this.form && this.spValidationStatus) {\r\n      this.form.removeControl(this.spValidationStatus);\r\n    }\r\n  }\r\n\r\n  @HostListener('blur')\r\n  blur() {\r\n    this.touched$.next(true);\r\n    if (this.spValidationStatus._spTouched$) { this.spValidationStatus._spTouched$.next(true); }\r\n  }\r\n\r\n  private get showFeedback(): boolean {\r\n    return this.form && this.form.spForceFeedback || this.spValidationStatus.touched || this.spValidationStatus.dirty;\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[spValidationFeedback]'\r\n})\r\nexport class ValidationFeedbackDirective implements OnDestroy, OnChanges {\r\n\r\n  @Input() spValidationFeedback: NgModelExtended;\r\n  @Input() displayName: string;\r\n\r\n  private subs = new SubSink();\r\n  private el: HTMLElement;\r\n\r\n  constructor(el: ElementRef, private renderer: Renderer2, @Optional() private form: FormDirective) {\r\n    this.el = el.nativeElement;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['spValidationFeedback']) {\r\n      this.subs.unsubscribe();\r\n      if (this.spValidationFeedback) {\r\n\r\n        const events = [\r\n          this.spValidationFeedback.statusChanges.pipe(\r\n            switchMap(_ => {\r\n              // Only emit PENDING (and display \"Checking...) unless has been pending for more than 1/2 second\r\n              // The 1/2 second value was empirically determined. Don't know why less doesn't work.\r\n              return this.spValidationFeedback.pending ?  timer(500).pipe(map(() => _)) : of(_);\r\n            })\r\n          ),\r\n          ...(this.form ? [this.form.change$] : []),\r\n          ...(this.spValidationFeedback._spTouched$ ? [this.spValidationFeedback._spTouched$.pipe(distinctUntilChanged())] : [])\r\n        ];\r\n\r\n        this.subs.sink = merge(...events).pipe(\r\n          debounceTime(500),\r\n        ).subscribe(() => {\r\n          this.renderer.removeClass(this.el, 'feedback');\r\n          this.renderer.removeClass(this.el, 'valid-feedback');\r\n          this.renderer.removeClass(this.el, 'invalid-feedback');\r\n          this.el.innerText = '';\r\n\r\n          if (!this.showFeedback) {\r\n            return;\r\n          }\r\n\r\n          if (this.spValidationFeedback.pending) {\r\n            this.renderer.addClass(this.el, 'valid-feedback');\r\n            this.el.innerText = 'Checking...';\r\n          }\r\n\r\n          if (this.spValidationFeedback.invalid) {\r\n            this.renderer.addClass(this.el, 'invalid-feedback');\r\n            this.el.innerHTML = this.getValidationFeedback().map(feedback => {\r\n              return `<div>${feedback}</div>`;\r\n            }).join('\\n');\r\n          }\r\n\r\n          if (this.spValidationFeedback.pending || this.spValidationFeedback.invalid) {\r\n            this.renderer.addClass(this.el, 'feedback');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  getValidationFeedback(): string[] {\r\n    if (!this.spValidationFeedback && !this.spValidationFeedback.invalid) {\r\n      return [];\r\n    }\r\n\r\n    return Object.keys(this.spValidationFeedback.errors || {})\r\n      .map(key => this.spValidationFeedback.errors[key] as ValidationError)\r\n      .filter(error => error.getErrorMessage)\r\n      .map(error => error.getErrorMessage(this.displayName));\r\n  }\r\n\r\n  private get showFeedback(): boolean {\r\n    return this.form && this.form.spForceFeedback || this.spValidationFeedback.touched || this.spValidationFeedback.dirty;\r\n  }\r\n}\r\n\r\n\r\n@Directive({\r\n  selector: '[spValidateProperty]',\r\n  providers: [\r\n    { provide: NG_VALIDATORS, useExisting: ValidatePropertyDirective, multi: true }\r\n  ]\r\n})\r\nexport class ValidatePropertyDirective implements Validator, OnDestroy {\r\n\r\n  @Input() model: any;\r\n  @Input() modelType: string;\r\n  @Input() propertyName: string;\r\n  @Input() group: string;\r\n  @Input() modelContext: ModelComponent;\r\n\r\n  private validationErrors: ValidationError[] = [];\r\n  private lastModel: string;\r\n  private subs = new SubSink();\r\n\r\n  constructor(private validationService: ValidationService) { }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  validate(control: AbstractControl): { [key: string]: any; } {\r\n    if (!this.model || !this.modelType || !this.propertyName) {\r\n      return null;\r\n    }\r\n\r\n    const model = { ...this.model };\r\n    model[this.propertyName] = control.value;\r\n    const modelAsString = JSON.stringify(model);\r\n\r\n    if (this.lastModel !== modelAsString) {\r\n      this.lastModel = modelAsString;\r\n      const errors = this.validationService.validateModel(model, this.modelType, false, validator => {\r\n        return !this.group && !validator.group || this.group && validator.group === this.group;\r\n      }) || [];\r\n      this.validationErrors = errors.filter(error => error.context.propertyName === this.propertyName);\r\n    }\r\n\r\n    const validationErrors = this.validationErrors.reduce((prev, curr) => {\r\n      prev[curr.key] = curr;\r\n      return prev;\r\n    }, {} as Indexable);\r\n    return !!this.validationErrors.length ? validationErrors : null;\r\n  }\r\n\r\n  registerOnValidatorChange?(fn: () => void): void {\r\n    this.subs.unsubscribe();\r\n    if (this.modelContext) {\r\n      this.subs.sink = this.modelContext.modelChange.subscribe(fn);\r\n    }\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[spAsyncValidateProperty]',\r\n  providers: [\r\n    { provide: NG_ASYNC_VALIDATORS, useExisting: AsyncValidatePropertyDirective, multi: true }\r\n  ]\r\n})\r\nexport class AsyncValidatePropertyDirective implements AsyncValidator, OnDestroy {\r\n\r\n  @Input() model: any;\r\n  @Input() modelType: string;\r\n  @Input() propertyName: string;\r\n  @Input() group: string;\r\n  @Input() modelContext: ModelComponent;\r\n\r\n  private validationErrors: ValidationError[] = [];\r\n  private lastPropertyValue: any;\r\n  private subs = new SubSink();\r\n\r\n  constructor(private validationService: ValidationService) { }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  validate(control: AbstractControl): Observable<{ [key: string]: any; }> {\r\n    if (!this.model || !this.modelType || !this.propertyName) {\r\n      return of(null);\r\n    }\r\n    const entityMetadata = this.validationService.validationMetadata.getModelConfig(this.modelType);\r\n    if (!entityMetadata) {\r\n      return of(null);\r\n    }\r\n\r\n    const hasAsyncValidators = entityMetadata.getAsyncProperties().some(property => {\r\n      return property.propertyName === this.propertyName &&\r\n        property.validators.some(validator => !this.group && !validator.group || this.group && validator.group === this.group);\r\n    });\r\n    if (!hasAsyncValidators) {\r\n      return of(null);\r\n    }\r\n\r\n    const toErrorMap = () => {\r\n      return this.validationErrors.reduce((prev, curr) => {\r\n        prev[curr.key] = curr;\r\n        return prev;\r\n      }, {} as Indexable);\r\n    };\r\n\r\n    if (this.lastPropertyValue !== control.value) {\r\n      // debounce with timer\r\n      return timer(500).pipe(\r\n        switchMap(() => {\r\n          const model = { ...this.model };\r\n          model[this.propertyName] = control.value;\r\n\r\n          const predicate: ValidatorPredicate = (validator, property) => {\r\n            return property && property.propertyName === this.propertyName &&\r\n              (!this.group && !validator.group || this.group && validator.group === this.group);\r\n          };\r\n          return this.validationService.validateModel(model, this.modelType, true, predicate).pipe(\r\n            map(errors => {\r\n              this.lastPropertyValue = control.value;\r\n              this.validationErrors = (errors || []).filter(error => error && error.context.propertyName === this.propertyName);\r\n\r\n              return !!this.validationErrors.length ? toErrorMap() : null;\r\n            })\r\n          );\r\n        })\r\n      );\r\n    }\r\n\r\n    return of(!!this.validationErrors.length ? toErrorMap() : null);\r\n  }\r\n\r\n  registerOnValidatorChange?(fn: () => void): void {\r\n    this.subs.unsubscribe();\r\n    if (this.modelContext) {\r\n      this.subs.sink = this.modelContext.modelChange.subscribe(fn);\r\n    }\r\n  }\r\n}\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { DatePipe, DecimalPipe } from '@angular/common';\nimport { createNumberMask } from 'text-mask-addons/dist/textMaskAddons';\nimport { LoggerService } from '@core/services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../core/services/logger.service\";\nvar InputMaskCatalog = /** @class */ (function () {\n    function InputMaskCatalog(datePipe, decimalPipe, logger) {\n        this.datePipe = datePipe;\n        this.decimalPipe = decimalPipe;\n        this.logger = logger;\n        this.maskPresets = {};\n        this.registerCurrencyMasks(decimalPipe);\n        this.registerMaskType({\n            maskType: 'digits',\n            toView: defaultToView,\n            toVm: integerToVm,\n            type: 'text',\n            mask: createNumberMask({\n                prefix: '',\n                suffix: '',\n                allowDecimal: false,\n                includeThousandsSeparator: false\n            })\n        });\n        this.registerMaskType({\n            maskType: 'integer',\n            toView: defaultToView,\n            toVm: integerToVm,\n            type: 'text',\n            mask: createNumberMask({\n                prefix: '',\n                suffix: '',\n                allowDecimal: false\n            })\n        });\n        // withholding allowance 0 - 25\n        this.registerMaskType({\n            maskType: 'whAllowance',\n            toView: defaultToView,\n            toVm: function (viewVal) { return viewVal == null ? null : parseInt(viewVal, 10); },\n            type: 'text',\n            placeholderChar: ' ',\n            mask: withholdingAllowanceMask,\n            showMask: false\n        });\n        this.registerMaskType({\n            maskType: 'percent',\n            toView: defaultToView,\n            toVm: function (viewVal) { return viewVal == null ? null : parseFloat(viewVal.replace(/\\,+/g, '')); },\n            type: 'text',\n            mask: createNumberMask({\n                prefix: '',\n                suffix: '',\n                allowDecimal: true,\n                decimalLimit: 2\n            }),\n            append: '%',\n            prepend: ''\n        });\n        this.registerMaskType({\n            maskType: 'date',\n            toView: function (vmVal, editing, format) { return datePipe.transform(vmVal, format || 'MM-dd-yyyy'); },\n            toVm: function (viewVal) { return viewVal == null ? null :\n                datePipe.transform(new Date(viewVal), 'yyyy-MM-dd') + 'T17:00:00.000Z'; },\n            type: 'date',\n            mask: false\n        });\n        this.registerMaskType({\n            maskType: 'phone',\n            toView: defaultToView,\n            toVm: function (viewVal) { return viewVal == null ? null : viewVal.replace(/[\\(\\)\\-\\s_]+/g, ''); },\n            type: 'text',\n            mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n            showMask: false,\n            placeholder: '(xxx) xxx-xxxx'\n        });\n        this.registerMaskType({\n            maskType: 'ssn',\n            toView: defaultToView,\n            toVm: dashedNumberToVm,\n            type: 'text',\n            mask: [/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n            showMask: false,\n            placeholder: 'xxx-xx-xxxx',\n            keepCharPositions: false\n        });\n        this.registerMaskType({\n            maskType: 'fein',\n            toView: defaultToView,\n            toVm: function (viewVal) { return viewVal == null ? null : viewVal.replace(/[\\s_]+/g, ''); },\n            type: 'text',\n            mask: [/\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\n            showMask: false,\n            placeholder: 'xx-xxxxxxx',\n            keepCharPositions: false\n        });\n        this.registerMaskType({\n            maskType: 'legalname',\n            toView: function (vmVal, editing, format) { return vmVal == null ? null : vmVal.toString().toUpperCase(); },\n            toVm: function (viewVal) { return viewVal == null ? null : viewVal.toString().toUpperCase(); },\n            type: 'text',\n            mask: false,\n            showMask: false,\n            placeholder: '',\n            keepCharPositions: false\n        });\n        this.registerMaskType({\n            maskType: 'ubi',\n            toView: function (vmVal, editing, format) { return vmVal ? vmVal.toString() : null; },\n            toVm: function (viewVal) { return viewVal !== null ? viewVal.replace(/[\\s_]+/g, '') : null; },\n            type: 'text',\n            mask: [/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/],\n            showMask: false,\n            placeholder: 'xxx-xxx-xxx',\n            keepCharPositions: false\n        });\n        this.registerMaskType({\n            maskType: 'routingnumber',\n            toView: defaultToView,\n            toVm: dashedNumberToVm,\n            type: 'text',\n            //  \\d{9}\n            mask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\n            showMask: true,\n            placeholder: '_________',\n            keepCharPositions: false\n        });\n        this.registerMaskType({\n            maskType: 'accountnumber',\n            toView: defaultToView,\n            toVm: dashedNumberToVm,\n            type: 'text',\n            //  \\d{7,11}\n            mask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d?/, /\\d?/, /\\d?/, /\\d?/],\n            showMask: true,\n            placeholder: '___________',\n            keepCharPositions: false\n        });\n    }\n    InputMaskCatalog.prototype.registerCurrencyMasks = function (decimalPipe) {\n        var _this = this;\n        var toView = function (vmVal, editing) { return vmVal == null ? null :\n            (vmVal % 1 === 0 || editing) ? vmVal.toString() : decimalPipe.transform(vmVal, '1.2-2'); };\n        var toVm = function (viewVal) { return viewVal == null ? null : parseFloat(viewVal.replace(/\\,+/g, '')); };\n        var baseMask = {\n            toView: toView,\n            toVm: toVm,\n            type: 'text',\n            mask: createNumberMask({\n                prefix: '',\n                suffix: '',\n                allowDecimal: true,\n                decimalLimit: 2\n            }),\n            append: '',\n            prepend: '$'\n        };\n        var regMask = function (maskType, append) {\n            if (append === void 0) { append = ''; }\n            return _this.registerMaskType(__assign({}, baseMask, { maskType: maskType, append: append }));\n        };\n        regMask('currency');\n        regMask('currency_per_hour', '/hr');\n        regMask('currency_per_mile', '/mile');\n        regMask('currency_per_unit', '/unit');\n        regMask('currency_per_year', '/yr');\n    };\n    InputMaskCatalog.prototype.registerMaskType = function (cv) {\n        this.maskPresets[cv.maskType] = cv;\n    };\n    InputMaskCatalog.prototype.getMaskForType = function (maskType) {\n        if (maskType == null) {\n            return null;\n        }\n        if (!(maskType in this.maskPresets)) {\n            this.logger.error(\"Input mask preset with name: [\" + maskType + \"] does not exist!\");\n            return null;\n        }\n        return this.maskPresets[maskType];\n    };\n    InputMaskCatalog.prototype.applyConfig = function (inputText, maskConfig) {\n        inputText.type = maskConfig.type;\n        inputText.mask = maskConfig.mask;\n        inputText.append = maskConfig.append;\n        inputText.prepend = maskConfig.prepend;\n        inputText.guide = maskConfig.guide;\n        inputText.placeholderChar = maskConfig.placeholderChar;\n        inputText.keepCharPositions = maskConfig.keepCharPositions;\n        inputText.showMask = maskConfig.showMask;\n        if (maskConfig.placeholder) {\n            inputText.placeholder = maskConfig.placeholder;\n        }\n        inputText.textMask = {\n            mask: inputText.mask,\n            guide: inputText.guide,\n            placeholderChar: inputText.placeholderChar,\n            keepCharPositions: inputText.keepCharPositions,\n            showMask: inputText.showMask\n        };\n    };\n    InputMaskCatalog.ngInjectableDef = i0.defineInjectable({ factory: function InputMaskCatalog_Factory() { return new InputMaskCatalog(i0.inject(i1.DatePipe), i0.inject(i1.DecimalPipe), i0.inject(i2.LoggerService)); }, token: InputMaskCatalog, providedIn: \"root\" });\n    return InputMaskCatalog;\n}());\nexport { InputMaskCatalog };\n// #region helper fns\n/** Convert string view value to VM by removing dashes and underscores */\nfunction dashedNumberToVm(viewVal) {\n    return viewVal == null ? null : viewVal.replace(/[\\s\\-_]+/g, '');\n}\n/** Convert VM value to view with simple toString() */\nfunction defaultToView(vmVal, editing, format) {\n    return vmVal == null ? null : vmVal.toString();\n}\n/** Convert string view value to an integer VM  */\nfunction integerToVm(viewVal) {\n    return viewVal == null ? null : parseInt(viewVal.replace(/\\,+/g, ''), 10);\n}\n/** Constrains withholding allowance input to integer 0-25 */\nfunction withholdingAllowanceMask(rawValue) {\n    if (rawValue.length === 0 || /^\\d$/.test(rawValue)) {\n        return [/\\d/];\n    }\n    else if (/^1\\d$/.test(rawValue)) {\n        return [/1/, /\\d/];\n    }\n    else {\n        return [/2/, /[0-5]/];\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { DatePipe, DecimalPipe } from '@angular/common';\r\n\r\nimport { createNumberMask, createAutoCorrectedDatePipe } from 'text-mask-addons/dist/textMaskAddons';\r\nimport { InputMaskConfig } from './input-mask-config';\r\nimport { InputTextComponent } from '@shared/input/input-text.component';\r\nimport { LoggerService } from '@core/services';\r\n\r\n@Injectable({ providedIn: 'root' }) // register in root so other modules can register presets of their own\r\nexport class InputMaskCatalog {\r\n\r\n  private maskPresets: { [type: string]: InputMaskConfig } = {};\r\n\r\n  constructor(\r\n    private datePipe: DatePipe,\r\n    private decimalPipe: DecimalPipe,\r\n    private logger: LoggerService\r\n  ) {\r\n\r\n    this.registerCurrencyMasks(decimalPipe);\r\n\r\n    this.registerMaskType({\r\n      maskType: 'digits',\r\n      toView: defaultToView,\r\n      toVm: integerToVm,\r\n      type: 'text',\r\n      mask: createNumberMask({\r\n        prefix: '',\r\n        suffix: '',\r\n        allowDecimal: false,\r\n        includeThousandsSeparator: false\r\n      })\r\n    });\r\n\r\n    this.registerMaskType({\r\n      maskType: 'integer',\r\n      toView: defaultToView,\r\n      toVm: integerToVm,\r\n      type: 'text',\r\n      mask: createNumberMask({\r\n        prefix: '',\r\n        suffix: '',\r\n        allowDecimal: false\r\n      })\r\n    });\r\n\r\n    // withholding allowance 0 - 25\r\n    this.registerMaskType({\r\n      maskType: 'whAllowance',\r\n      toView: defaultToView,\r\n      toVm: viewVal => viewVal == null ? null : parseInt(viewVal, 10),\r\n      type: 'text',\r\n      placeholderChar: ' ',\r\n      mask: withholdingAllowanceMask,\r\n      showMask : false\r\n    });\r\n\r\n    this.registerMaskType({\r\n      maskType: 'percent',\r\n      toView: defaultToView,\r\n      toVm: viewVal => viewVal == null ? null : parseFloat(viewVal.replace(/\\,+/g, '')),\r\n      type: 'text',\r\n      mask: createNumberMask({\r\n        prefix: '',\r\n        suffix: '',\r\n        allowDecimal: true,\r\n        decimalLimit: 2\r\n      }),\r\n      append: '%',\r\n      prepend: ''\r\n    });\r\n\r\n    this.registerMaskType({\r\n      maskType: 'date',\r\n      toView: (vmVal, editing, format) => datePipe.transform(vmVal, format || 'MM-dd-yyyy'),\r\n      toVm: viewVal => viewVal == null ? null :\r\n        datePipe.transform(new Date(viewVal), 'yyyy-MM-dd') + 'T17:00:00.000Z', // Always use Chicago timezone\r\n      type: 'date',\r\n      mask: false\r\n    });\r\n\r\n    this.registerMaskType({\r\n      maskType: 'phone',\r\n      toView: defaultToView,\r\n      toVm: viewVal => viewVal == null ? null : viewVal.replace(/[\\(\\)\\-\\s_]+/g, ''),\r\n      type: 'text',\r\n      mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\r\n      showMask: false,\r\n      placeholder: '(xxx) xxx-xxxx'\r\n    });\r\n\r\n    this.registerMaskType({\r\n      maskType: 'ssn',\r\n      toView: defaultToView,\r\n      toVm: dashedNumberToVm,\r\n      type: 'text',\r\n      mask: [/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\r\n      showMask: false,\r\n      placeholder: 'xxx-xx-xxxx',\r\n      keepCharPositions: false\r\n    });\r\n\r\n    this.registerMaskType({\r\n      maskType: 'fein',\r\n      toView: defaultToView,\r\n      toVm: viewVal => viewVal == null ? null : viewVal.replace(/[\\s_]+/g, ''),\r\n      type: 'text',\r\n      mask: [/\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\r\n      showMask: false,\r\n      placeholder: 'xx-xxxxxxx',\r\n      keepCharPositions: false\r\n    });\r\n\r\n    this.registerMaskType({\r\n      maskType: 'legalname',\r\n      toView: (vmVal, editing, format) => vmVal == null ? null : vmVal.toString().toUpperCase(),\r\n      toVm: viewVal => viewVal == null ? null : viewVal.toString().toUpperCase(),\r\n      type: 'text',\r\n      mask: false,\r\n      showMask : false,\r\n      placeholder: '',\r\n      keepCharPositions: false\r\n    });\r\n\r\n    this.registerMaskType({\r\n      maskType: 'ubi',\r\n      toView: (vmVal, editing, format) => vmVal ? vmVal.toString() : null,\r\n      toVm: viewVal => viewVal !== null ? viewVal.replace(/[\\s_]+/g, '') : null,\r\n      type: 'text',\r\n      mask: [/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/],\r\n      showMask: false,\r\n      placeholder: 'xxx-xxx-xxx',\r\n      keepCharPositions: false\r\n    });\r\n\r\n    this.registerMaskType({\r\n      maskType: 'routingnumber',\r\n      toView: defaultToView,\r\n      toVm: dashedNumberToVm,\r\n      type: 'text',\r\n      //  \\d{9}\r\n      mask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\r\n      showMask: true,\r\n      placeholder: '_________',\r\n      keepCharPositions: false\r\n    });\r\n\r\n    this.registerMaskType({\r\n      maskType: 'accountnumber',\r\n      toView: defaultToView,\r\n      toVm: dashedNumberToVm,\r\n      type: 'text',\r\n      //  \\d{7,11}\r\n      mask: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d?/, /\\d?/, /\\d?/, /\\d?/],\r\n      showMask: true,\r\n      placeholder: '___________',\r\n      keepCharPositions: false\r\n    });\r\n\r\n  }\r\n\r\n  private registerCurrencyMasks(decimalPipe: DecimalPipe) {\r\n    const toView = (vmVal: any, editing: boolean): string => vmVal == null ? null :\r\n      (vmVal % 1 === 0 || editing) ? vmVal.toString() : decimalPipe.transform(vmVal, '1.2-2');\r\n\r\n    const toVm = (viewVal: string) => viewVal == null ? null : parseFloat(viewVal.replace(/\\,+/g, ''));\r\n\r\n    const baseMask = {\r\n      toView,\r\n      toVm,\r\n      type: 'text',\r\n      mask: createNumberMask({\r\n        prefix: '',\r\n        suffix: '',\r\n        allowDecimal: true,\r\n        decimalLimit: 2\r\n      }),\r\n      append: '',\r\n      prepend: '$'\r\n    };\r\n\r\n    const regMask = (maskType: string, append = '') =>\r\n      this.registerMaskType({...baseMask, maskType, append });\r\n\r\n    regMask('currency');\r\n    regMask('currency_per_hour', '/hr' );\r\n    regMask('currency_per_mile', '/mile' );\r\n    regMask('currency_per_unit', '/unit' );\r\n    regMask('currency_per_year', '/yr' );\r\n  }\r\n\r\n  public registerMaskType(cv: InputMaskConfig) {\r\n    this.maskPresets[cv.maskType] = cv;\r\n  }\r\n\r\n  getMaskForType(maskType: string): InputMaskConfig | null {\r\n    if (maskType == null) {\r\n      return null;\r\n    }\r\n    if (!(maskType in this.maskPresets)) {\r\n      this.logger.error(`Input mask preset with name: [${maskType}] does not exist!`);\r\n      return null;\r\n    }\r\n    return this.maskPresets[maskType];\r\n  }\r\n\r\n  applyConfig(inputText: InputTextComponent, maskConfig: InputMaskConfig) {\r\n    inputText.type = maskConfig.type;\r\n    inputText.mask = maskConfig.mask;\r\n    inputText.append = maskConfig.append;\r\n    inputText.prepend = maskConfig.prepend;\r\n    inputText.guide = maskConfig.guide;\r\n    inputText.placeholderChar = maskConfig.placeholderChar;\r\n    inputText.keepCharPositions = maskConfig.keepCharPositions;\r\n    inputText.showMask = maskConfig.showMask;\r\n    if (maskConfig.placeholder) {\r\n      inputText.placeholder = maskConfig.placeholder;\r\n    }\r\n\r\n    inputText.textMask = {\r\n      mask: inputText.mask,\r\n      guide: inputText.guide,\r\n      placeholderChar: inputText.placeholderChar,\r\n      keepCharPositions: inputText.keepCharPositions,\r\n      showMask: inputText.showMask\r\n    };\r\n  }\r\n}\r\n\r\n// #region helper fns\r\n/** Convert string view value to VM by removing dashes and underscores */\r\nfunction dashedNumberToVm(viewVal: string): string {\r\n  return viewVal == null ? null : viewVal.replace(/[\\s\\-_]+/g, '');\r\n}\r\n\r\n/** Convert VM value to view with simple toString() */\r\nfunction defaultToView(vmVal: any, editing: boolean, format: string): string {\r\n  return vmVal == null ? null : vmVal.toString();\r\n}\r\n\r\n/** Convert string view value to an integer VM  */\r\nfunction integerToVm(viewVal: string): number {\r\n  return viewVal == null ? null : parseInt(viewVal.replace(/\\,+/g, ''), 10);\r\n}\r\n\r\n/** Constrains withholding allowance input to integer 0-25 */\r\nfunction withholdingAllowanceMask(rawValue: string) {\r\n  if (rawValue.length === 0 || /^\\d$/.test(rawValue)) {\r\n    return [/\\d/];\r\n  } else if (/^1\\d$/.test(rawValue)) {\r\n    return [/1/, /\\d/];\r\n  } else {\r\n    return [/2/, /[0-5]/];\r\n  }\r\n}\r\n// #endregion helper fns\r\n\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sp-contact-support',\r\n  template: `\r\n  <a href=\"https://www.surepayroll.com/about/contact-us\" target=\"_blank\">{{linkText}}</a>\r\n  our Customer Support team at <a href=\"tel:18009148088\">1-800-914-8088</a>\r\n  `,\r\n  styles: [ ':host: { display: inline}']\r\n})\r\nexport class ContactCustomerSupportComponent {\r\n  @Input() linkText = 'contact';\r\n}\r\n","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sp-radio-button',\r\n  templateUrl: './radio-button.component.html'\r\n})\r\nexport class RadioButtonComponent {\r\n  private _value: any;\r\n  private _selectedValue: any;\r\n\r\n  isSelected = false;\r\n  hasFocus = false;\r\n  currentValue = '';\r\n\r\n  @ViewChild('label')\r\n  label: HTMLLabelElement;\r\n\r\n  @Input()\r\n  name: string;\r\n\r\n  @Input() disabled = false;\r\n\r\n  @Input()\r\n  get selectedValue(): any {\r\n    return this._selectedValue;\r\n  }\r\n  set selectedValue(v: any) {\r\n    this._selectedValue = v;\r\n    this.calcIsSelected();\r\n  }\r\n\r\n  @Input()\r\n  get value(): any {\r\n    return this._value;\r\n  }\r\n  set value(v: any) {\r\n    this._value = v;\r\n    this.calcIsSelected();\r\n    this.select();\r\n  }\r\n  @Output() valueChange = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  select() {\r\n    this.valueChange.emit(this._value);\r\n  }\r\n  onFocus() {\r\n    this.hasFocus = true;\r\n  }\r\n  onBlur() {\r\n    this.hasFocus = false;\r\n  }\r\n  private calcIsSelected(): void {\r\n    this.isSelected = (this._selectedValue === this._value) ? true : false;\r\n\r\n    // HACK: work-around to avoid an error in dirty checking inside\r\n    // ngClass when reusing a component\r\n    this.enforceStyle('active', this.isSelected);\r\n  }\r\n  private enforceStyle(styleName: string, active: boolean) {\r\n    const cl = (<any> this.label).nativeElement.classList;\r\n    if (active) {\r\n      cl.add(styleName);\r\n    } else {\r\n      cl.remove(styleName);\r\n    }\r\n  }\r\n\r\n}\r\n","import { EventEmitter } from '@angular/core';\nvar RadioButtonComponent = /** @class */ (function () {\n    function RadioButtonComponent() {\n        this.isSelected = false;\n        this.hasFocus = false;\n        this.currentValue = '';\n        this.disabled = false;\n        this.valueChange = new EventEmitter();\n    }\n    Object.defineProperty(RadioButtonComponent.prototype, \"selectedValue\", {\n        get: function () {\n            return this._selectedValue;\n        },\n        set: function (v) {\n            this._selectedValue = v;\n            this.calcIsSelected();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadioButtonComponent.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (v) {\n            this._value = v;\n            this.calcIsSelected();\n            this.select();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RadioButtonComponent.prototype.select = function () {\n        this.valueChange.emit(this._value);\n    };\n    RadioButtonComponent.prototype.onFocus = function () {\n        this.hasFocus = true;\n    };\n    RadioButtonComponent.prototype.onBlur = function () {\n        this.hasFocus = false;\n    };\n    RadioButtonComponent.prototype.calcIsSelected = function () {\n        this.isSelected = (this._selectedValue === this._value) ? true : false;\n        // HACK: work-around to avoid an error in dirty checking inside\n        // ngClass when reusing a component\n        this.enforceStyle('active', this.isSelected);\n    };\n    RadioButtonComponent.prototype.enforceStyle = function (styleName, active) {\n        var cl = this.label.nativeElement.classList;\n        if (active) {\n            cl.add(styleName);\n        }\n        else {\n            cl.remove(styleName);\n        }\n    };\n    return RadioButtonComponent;\n}());\nexport { RadioButtonComponent };\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { combineLatest, EMPTY, Observable } from 'rxjs';\r\nimport { catchError, concatMap, first, map, debounceTime } from 'rxjs/operators';\r\n\r\nimport { EntityCacheQuerySet } from 'ngrx-data';\r\n\r\nimport { Document, Envelope, EnvelopeSigner, EnvelopeStatus } from '@model';\r\nimport { EntitySelectors } from '../entity-selectors';\r\nimport { EntityDispatcher } from '../entity-dispatcher';\r\nimport { environment } from '@environment';\r\nimport { SessionService } from '@session';\r\n\r\n/** The entity collections that comprise the DocumentPackage */\r\nexport interface DocumentPackage {\r\n  Document: Document[];\r\n  Envelope: Envelope[];\r\n  EnvelopeSigner: EnvelopeSigner[];\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DocumentPackageService {\r\n\r\n  documentPackage$: Observable<DocumentPackage>;\r\n\r\n  constructor(\r\n    private entityCacheDispatcher: EntityDispatcher,\r\n    entitySelectors: EntitySelectors,\r\n    private http: HttpClient,\r\n    private sessionService: SessionService,\r\n  ) {\r\n\r\n    this.documentPackage$ = combineLatest(\r\n      entitySelectors.document.entities$,\r\n      entitySelectors.envelope.entities$,\r\n      entitySelectors.envelopeSigner.entities$\r\n    ).pipe(\r\n      debounceTime(1),\r\n      map(([d, e, es]) => ({\r\n        Document: d, Envelope: e, EnvelopeSigner: es\r\n      }))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Loads the \"DocumentPackage\" data for the current company.\r\n   * @returns Cold, terminating observable of the DocumentPackage.\r\n   * You must subscribe but do not have to unsubscribe.\r\n   */\r\n  loadDocumentPackage(): Observable<DocumentPackage> {\r\n    return this.sessionService.currentCompanyId$.pipe(\r\n      first(),\r\n      concatMap(companyId => this.loadData(companyId))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Loads the DocumentPackage, then returns the id of the first completed, non-removed\r\n   * envelope for which the current user is an embedded envelope signer (if exists);\r\n   * else returns undefined.\r\n   */\r\n  loadSignedEnvelopeId(): Observable<string> {\r\n    return combineLatest(\r\n      this.loadDocumentPackage(),\r\n      this.sessionService.currentUserId$\r\n      ).pipe(\r\n      map(([pack, userId]) => {\r\n        // first embedded envelope signer (if exists)\r\n        const userSigner = pack.EnvelopeSigner.find(es => es.isEmbedded && es.userId === userId);\r\n        // first completed, non-removed envelope (if it exists)\r\n        const envelope = pack.Envelope.find(e => e.status === EnvelopeStatus.completed && !e.isRemoved);\r\n        return userSigner && envelope && envelope.eSignEnvelopeId;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Loads the \"DocumentPackage\" data for the given company.\r\n   * @param companyId The id of the company whose data should be loaded.\r\n   * @returns Terminating COLD observable of either the DocumentPackage if succeeded\r\n   * or error observable if failed.\r\n   * You must subscribe but do not have to unsubscribe.\r\n   */\r\n  private loadData(companyId: string): Observable<DocumentPackage> {\r\n    const url = `${environment.apiRoot}/documentpackage/${companyId}`;\r\n    return this.http.get<EntityCacheQuerySet>(url).pipe(\r\n      map(data => this.entityCacheDispatcher.loadDocumentPackageSuccess(data)),\r\n      concatMap(() => this.documentPackage$.pipe(first())),\r\n      catchError(error => {\r\n        this.entityCacheDispatcher.loadDocumentPackageError(companyId, error);\r\n        return EMPTY;\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { combineLatest, EMPTY } from 'rxjs';\nimport { catchError, concatMap, first, map, debounceTime } from 'rxjs/operators';\nimport { EnvelopeStatus } from '@model';\nimport { EntitySelectors } from '../entity-selectors';\nimport { EntityDispatcher } from '../entity-dispatcher';\nimport { environment } from '@environment';\nimport { SessionService } from '@session';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../entity-dispatcher\";\nimport * as i2 from \"../entity-selectors\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"../../session/session.service\";\nvar DocumentPackageService = /** @class */ (function () {\n    function DocumentPackageService(entityCacheDispatcher, entitySelectors, http, sessionService) {\n        this.entityCacheDispatcher = entityCacheDispatcher;\n        this.http = http;\n        this.sessionService = sessionService;\n        this.documentPackage$ = combineLatest(entitySelectors.document.entities$, entitySelectors.envelope.entities$, entitySelectors.envelopeSigner.entities$).pipe(debounceTime(1), map(function (_a) {\n            var d = _a[0], e = _a[1], es = _a[2];\n            return ({\n                Document: d, Envelope: e, EnvelopeSigner: es\n            });\n        }));\n    }\n    /**\n     * Loads the \"DocumentPackage\" data for the current company.\n     * @returns Cold, terminating observable of the DocumentPackage.\n     * You must subscribe but do not have to unsubscribe.\n     */\n    DocumentPackageService.prototype.loadDocumentPackage = function () {\n        var _this = this;\n        return this.sessionService.currentCompanyId$.pipe(first(), concatMap(function (companyId) { return _this.loadData(companyId); }));\n    };\n    /**\n     * Loads the DocumentPackage, then returns the id of the first completed, non-removed\n     * envelope for which the current user is an embedded envelope signer (if exists);\n     * else returns undefined.\n     */\n    DocumentPackageService.prototype.loadSignedEnvelopeId = function () {\n        return combineLatest(this.loadDocumentPackage(), this.sessionService.currentUserId$).pipe(map(function (_a) {\n            var pack = _a[0], userId = _a[1];\n            // first embedded envelope signer (if exists)\n            var userSigner = pack.EnvelopeSigner.find(function (es) { return es.isEmbedded && es.userId === userId; });\n            // first completed, non-removed envelope (if it exists)\n            var envelope = pack.Envelope.find(function (e) { return e.status === EnvelopeStatus.completed && !e.isRemoved; });\n            return userSigner && envelope && envelope.eSignEnvelopeId;\n        }));\n    };\n    /**\n     * Loads the \"DocumentPackage\" data for the given company.\n     * @param companyId The id of the company whose data should be loaded.\n     * @returns Terminating COLD observable of either the DocumentPackage if succeeded\n     * or error observable if failed.\n     * You must subscribe but do not have to unsubscribe.\n     */\n    DocumentPackageService.prototype.loadData = function (companyId) {\n        var _this = this;\n        var url = environment.apiRoot + \"/documentpackage/\" + companyId;\n        return this.http.get(url).pipe(map(function (data) { return _this.entityCacheDispatcher.loadDocumentPackageSuccess(data); }), concatMap(function () { return _this.documentPackage$.pipe(first()); }), catchError(function (error) {\n            _this.entityCacheDispatcher.loadDocumentPackageError(companyId, error);\n            return EMPTY;\n        }));\n    };\n    DocumentPackageService.ngInjectableDef = i0.defineInjectable({ factory: function DocumentPackageService_Factory() { return new DocumentPackageService(i0.inject(i1.EntityDispatcher), i0.inject(i2.EntitySelectors), i0.inject(i3.HttpClient), i0.inject(i4.SessionService)); }, token: DocumentPackageService, providedIn: \"root\" });\n    return DocumentPackageService;\n}());\nexport { DocumentPackageService };\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AccountStatusGuardHelper } from './account-status-guard-helper';\r\n\r\nconst guardName = 'AccountDetailsGuard';\r\n\r\n/**\r\n * Guard route to Account Details page\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountViewGuard implements CanActivate {\r\n\r\n  constructor(private accountStatusGuardHelper: AccountStatusGuardHelper) {  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n    return this.signedInWithCompanyPackage$(state);\r\n  }\r\n\r\n  private signedInWithCompanyPackage$(state: RouterStateSnapshot) {\r\n    return this.accountStatusGuardHelper.signedInWithCompanyPackage$(\r\n      guardName,\r\n      state\r\n    ).pipe(\r\n      map(company => {\r\n        return company ? true : false;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { map } from 'rxjs/operators';\nimport { AccountStatusGuardHelper } from './account-status-guard-helper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./account-status-guard-helper\";\nvar guardName = 'AccountDetailsGuard';\n/**\n * Guard route to Account Details page\n */\nvar AccountViewGuard = /** @class */ (function () {\n    function AccountViewGuard(accountStatusGuardHelper) {\n        this.accountStatusGuardHelper = accountStatusGuardHelper;\n    }\n    AccountViewGuard.prototype.canActivate = function (route, state) {\n        return this.signedInWithCompanyPackage$(state);\n    };\n    AccountViewGuard.prototype.signedInWithCompanyPackage$ = function (state) {\n        return this.accountStatusGuardHelper.signedInWithCompanyPackage$(guardName, state).pipe(map(function (company) {\n            return company ? true : false;\n        }));\n    };\n    AccountViewGuard.ngInjectableDef = i0.defineInjectable({ factory: function AccountViewGuard_Factory() { return new AccountViewGuard(i0.inject(i1.AccountStatusGuardHelper)); }, token: AccountViewGuard, providedIn: \"root\" });\n    return AccountViewGuard;\n}());\nexport { AccountViewGuard };\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { tag } from 'rxjs-spy/operators/tag';\r\n\r\nimport { Address } from '@model';\r\nimport { BusyService } from '@core/services/busy.service';\r\nimport { environment } from '@environment';\r\nimport {\r\n  IAvailableTaxAddressPair, IAddressPairRequest,\r\n  ITaxAddressValidation, IAvailableTaxAddress\r\n} from './tax-models';\r\nimport { LoggerService } from '../logger.service';\r\n\r\nconst taxApiUrl = environment.spApiRoot + '/taxapi/taxes';\r\n\r\n/**\r\n * Gets the raw data from the SurePayroll Tax service.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class TaxService {\r\n  constructor(private http: HttpClient, private busyService: BusyService, private logger: LoggerService) { }\r\n\r\n  validateAddresses(\r\n    employeeId: string,\r\n    homeAddress: Address,\r\n    workAddress: Address\r\n  ): Observable<ITaxAddressValidation> {\r\n    if (homeAddress == null || workAddress == null) {\r\n      return of({\r\n        id: employeeId,\r\n        isValid: false,\r\n        addressPairs: []\r\n      });\r\n    }\r\n\r\n    const pairs = [\r\n      <IAvailableTaxAddressPair>{\r\n        id: employeeId,\r\n        workAddress: {\r\n          city: workAddress.city,\r\n          county: null,\r\n          state: workAddress.state,\r\n          zip: workAddress.zip,\r\n          addressLine1: workAddress.street1,\r\n          addressLine2: workAddress.street2\r\n        },\r\n        liveAddress: {\r\n          city: homeAddress.city,\r\n          county: null,\r\n          state: homeAddress.state,\r\n          zip: homeAddress.zip,\r\n          addressLine1: homeAddress.street1,\r\n          addressLine2: homeAddress.street2\r\n        }\r\n      }\r\n    ];\r\n\r\n    const loadData$ = this.http.post<IAvailableTaxAddressPair[]>(taxApiUrl, pairs).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n        this.logger.error('Error retrieving taxes', err, pairs);\r\n        return of([]);\r\n      }),\r\n      // If we get multiple sets back, the address pair is invalid\r\n      map(res => {\r\n        const isValid = res.length === 1;\r\n\r\n        const suggestedAddresses = res.map(e => ({\r\n          home: e.liveAddress,\r\n          work: e.workAddress\r\n        }));\r\n\r\n        return {\r\n          id: employeeId,\r\n          isValid: isValid,\r\n\r\n          homeGeoCode: isValid ? suggestedAddresses[0].home.geoCode : '',\r\n          homeDsCode: isValid ? suggestedAddresses[0].home.schoolDistrict : null,\r\n          workGeoCode: isValid ? suggestedAddresses[0].work.geoCode : '',\r\n          workDsCode: isValid ? suggestedAddresses[0].work.schoolDistrict : null,\r\n\r\n          addressPairs: suggestedAddresses\r\n        };\r\n      }),\r\n      tag('TaxProviderService.validateAddresses')\r\n    );\r\n\r\n    return this.busyService.busy$('Loading tax data ...', loadData$);\r\n\r\n  }\r\n\r\n  getAvailableTaxPairs(addressPairs: IAddressPairRequest[]): Observable<IAvailableTaxAddressPair[]> {\r\n    const pairs = addressPairs\r\n      // The api throws a 500 error if we send addresses that are empty\r\n      .filter(pair => pair.homeGeoCode && pair.workGeoCode)\r\n      .map(pair => {\r\n        const req = {\r\n          id: pair.id,\r\n          workAddress: <IAvailableTaxAddress>{\r\n            geoCode: pair.workGeoCode\r\n          },\r\n          liveAddress: <IAvailableTaxAddress>{\r\n            geoCode: pair.homeGeoCode\r\n          }\r\n        };\r\n\r\n        // Do not send schoolDistrict or psdCode to taxes api if there not available as the api will crash\r\n        if (pair.workSchoolDistrictCode != null) {\r\n          req.workAddress.schoolDistrict = pair.workSchoolDistrictCode;\r\n        }\r\n        if (pair.workPsdCode != null) {\r\n          req.workAddress.psdCode = pair.workPsdCode;\r\n        }\r\n        if (pair.homeSchoolDistrictCode != null) {\r\n          req.liveAddress.schoolDistrict = pair.homeSchoolDistrictCode;\r\n        }\r\n        if (pair.homePsdCode != null) {\r\n          req.liveAddress.psdCode = pair.homePsdCode;\r\n        }\r\n\r\n        return req;\r\n      });\r\n\r\n    if (pairs.length === 0) {\r\n      return of([]);\r\n    }\r\n\r\n    const loadData$ = this.http.post<IAvailableTaxAddressPair[]>(taxApiUrl, pairs)\r\n    .pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n        this.logger.error('Error retrieving taxes', err, pairs);\r\n        return of([]);\r\n      }),\r\n      tag('TaxProviderService.getAvailableTaxPairs')\r\n    );\r\n\r\n    return this.busyService.busy$('Loading tax data ...', loadData$);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { tag } from 'rxjs-spy/operators/tag';\nimport { BusyService } from '@core/services/busy.service';\nimport { environment } from '@environment';\nimport { LoggerService } from '../logger.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../busy.service\";\nimport * as i3 from \"../logger.service\";\nvar taxApiUrl = environment.spApiRoot + '/taxapi/taxes';\n/**\n * Gets the raw data from the SurePayroll Tax service.\n */\nvar TaxService = /** @class */ (function () {\n    function TaxService(http, busyService, logger) {\n        this.http = http;\n        this.busyService = busyService;\n        this.logger = logger;\n    }\n    TaxService.prototype.validateAddresses = function (employeeId, homeAddress, workAddress) {\n        var _this = this;\n        if (homeAddress == null || workAddress == null) {\n            return of({\n                id: employeeId,\n                isValid: false,\n                addressPairs: []\n            });\n        }\n        var pairs = [\n            {\n                id: employeeId,\n                workAddress: {\n                    city: workAddress.city,\n                    county: null,\n                    state: workAddress.state,\n                    zip: workAddress.zip,\n                    addressLine1: workAddress.street1,\n                    addressLine2: workAddress.street2\n                },\n                liveAddress: {\n                    city: homeAddress.city,\n                    county: null,\n                    state: homeAddress.state,\n                    zip: homeAddress.zip,\n                    addressLine1: homeAddress.street1,\n                    addressLine2: homeAddress.street2\n                }\n            }\n        ];\n        var loadData$ = this.http.post(taxApiUrl, pairs).pipe(catchError(function (err) {\n            _this.logger.error('Error retrieving taxes', err, pairs);\n            return of([]);\n        }), \n        // If we get multiple sets back, the address pair is invalid\n        map(function (res) {\n            var isValid = res.length === 1;\n            var suggestedAddresses = res.map(function (e) { return ({\n                home: e.liveAddress,\n                work: e.workAddress\n            }); });\n            return {\n                id: employeeId,\n                isValid: isValid,\n                homeGeoCode: isValid ? suggestedAddresses[0].home.geoCode : '',\n                homeDsCode: isValid ? suggestedAddresses[0].home.schoolDistrict : null,\n                workGeoCode: isValid ? suggestedAddresses[0].work.geoCode : '',\n                workDsCode: isValid ? suggestedAddresses[0].work.schoolDistrict : null,\n                addressPairs: suggestedAddresses\n            };\n        }), tag('TaxProviderService.validateAddresses'));\n        return this.busyService.busy$('Loading tax data ...', loadData$);\n    };\n    TaxService.prototype.getAvailableTaxPairs = function (addressPairs) {\n        var _this = this;\n        var pairs = addressPairs\n            .filter(function (pair) { return pair.homeGeoCode && pair.workGeoCode; })\n            .map(function (pair) {\n            var req = {\n                id: pair.id,\n                workAddress: {\n                    geoCode: pair.workGeoCode\n                },\n                liveAddress: {\n                    geoCode: pair.homeGeoCode\n                }\n            };\n            // Do not send schoolDistrict or psdCode to taxes api if there not available as the api will crash\n            if (pair.workSchoolDistrictCode != null) {\n                req.workAddress.schoolDistrict = pair.workSchoolDistrictCode;\n            }\n            if (pair.workPsdCode != null) {\n                req.workAddress.psdCode = pair.workPsdCode;\n            }\n            if (pair.homeSchoolDistrictCode != null) {\n                req.liveAddress.schoolDistrict = pair.homeSchoolDistrictCode;\n            }\n            if (pair.homePsdCode != null) {\n                req.liveAddress.psdCode = pair.homePsdCode;\n            }\n            return req;\n        });\n        if (pairs.length === 0) {\n            return of([]);\n        }\n        var loadData$ = this.http.post(taxApiUrl, pairs)\n            .pipe(catchError(function (err) {\n            _this.logger.error('Error retrieving taxes', err, pairs);\n            return of([]);\n        }), tag('TaxProviderService.getAvailableTaxPairs'));\n        return this.busyService.busy$('Loading tax data ...', loadData$);\n    };\n    TaxService.ngInjectableDef = i0.defineInjectable({ factory: function TaxService_Factory() { return new TaxService(i0.inject(i1.HttpClient), i0.inject(i2.BusyService), i0.inject(i3.LoggerService)); }, token: TaxService, providedIn: \"root\" });\n    return TaxService;\n}());\nexport { TaxService };\n","import { NgModule } from '@angular/core';\r\n\r\nimport { AppModule } from './app.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { environment } from '@environment';\r\nimport { MockServicesModule } from './mock-services';\r\nimport { MockAuthModule } from './mock-auth/mock-auth.module';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AppModule,\r\n    environment.mockServices ? MockServicesModule : [],\r\n    environment.mockAuth || (environment.mockServices && !environment.mockSpApiOnly) ? MockAuthModule : [],\r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppDevModule {}\r\n","import { Component, HostBinding, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { routeAnim } from '@animations';\r\nimport { HttpParams } from '@angular/common/http';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'root',\r\n  templateUrl: './app.component.html',\r\n  animations: [routeAnim]\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  @HostBinding('@.disabled')\r\n  public animationsDisabled = false; // disable all animations when true\r\n\r\n  constructor(private location: Location) {}\r\n\r\n  ngOnInit() {\r\n    // Disable animations when initial URL search string has 'qa' (e.g. '.../?qa')\r\n    const p = new HttpParams({ fromString: location.search && location.search.substring(1) });\r\n    const qa = p.get('qa');\r\n    this.disableAnimations(qa != null && qa !== 'false');\r\n  }\r\n\r\n  prepareRoute(outlet: RouterOutlet) {\r\n    /** Animation relies on title data property to recognize a state change */\r\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['title'];\r\n  }\r\n\r\n  /** Call in test to disable animations */\r\n  disableAnimations(disable = true) {\r\n    this.animationsDisabled = disable;\r\n  }\r\n\r\n}\r\n","/** In-memory database collections */\r\nimport * as Entity from '@model/entities';\r\n\r\nexport class Db {\r\n  Address: Entity.Address[] = [];\r\n  Ancillary: Entity.Ancillary[] = [];\r\n  Company: Entity.Company[] = [];\r\n  CompanyDeduction: Entity.CompanyDeduction[] = [];\r\n  CompanyEarning: Entity.CompanyEarning[] = [];\r\n  CompanyTax: Entity.CompanyTax[] = [];\r\n  Document: Entity.Document[] = [];\r\n  Envelope: Entity.Envelope[] = [];\r\n  EnvelopeSigner: Entity.EnvelopeSigner[] = [];\r\n  Employee: Entity.Employee[] = [];\r\n  EmployeeDeduction: Entity.EmployeeDeduction[] = [];\r\n  EmployeePaymentMethod: Entity.EmployeePaymentMethod[] = [];\r\n  EmployeeTax: Entity.EmployeeTax[] = [];\r\n  HouseholdFilers: Entity.HouseholdFilers[] = [];\r\n  Stats: Entity.Stats[] = [];\r\n  User: Entity.User[] = [];\r\n\r\n  CompanyVersion: {[companyId: string]: number} = {};\r\n}\r\n","/*\r\n * Derived directly from post by Jonathan Petitcolas\r\n * https://www.jonathan-petitcolas.com/2014/11/27/creating-json-web-token-in-javascript.html\r\n * https://codepen.io/jpetitcolas/pen/zxGxKN\r\n *\r\n * Depends on two libraries, assumed to be loaded into window first\r\n * //cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/hmac-sha256.js\r\n * //cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64-min.js\r\n */\r\n\r\ndeclare global {\r\n  var CryptoJS: {\r\n    enc: any,\r\n    HmacSHA256: any\r\n  };\r\n}\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n/** Parse a JWT token */\r\nexport function parseJwt (token: string) {\r\n  const base64Url = token.split('.')[1];\r\n  const base64 = base64Url.replace('-', '+').replace('_', '/');\r\n  return JSON.parse(window.atob(base64));\r\n}\r\n\r\n/** The signing secret HA HA */\r\nconst secret = 'My very confidential secret!!!';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class JwtService {\r\n\r\n  /** The only header we support in this library */\r\n  readonly header = { 'alg': 'HS256', 'typ': 'JWT' };\r\n\r\n  /**\r\n   * Make adjusted base64 encoding so can pass in a URL.\r\n   * Two differences from native base64:\r\n   *   No = padding at the end,\r\n   *   + and / characters are replaced by - and _ respectively.\r\n   */\r\n  base64url(source: {}) {\r\n    // Encode in classical base64\r\n    let encodedSource = CryptoJS.enc.Base64.stringify(source);\r\n\r\n    // Remove padding equal characters\r\n    encodedSource = encodedSource.replace(/=+$/, '');\r\n\r\n    // Replace characters according to base64url specifications\r\n    encodedSource = encodedSource.replace(/\\+/g, '-');\r\n    encodedSource = encodedSource.replace(/\\//g, '_');\r\n\r\n    return encodedSource;\r\n  }\r\n\r\n  createJwt(data: {}) {\r\n    const encodedData = this.encode(data || {});\r\n    const encodedHeader = this.encode(this.header);\r\n    let signature = encodedHeader + '.' + encodedData;\r\n    signature = CryptoJS.HmacSHA256(signature, secret);\r\n    signature = this.base64url(signature);\r\n    return encodedHeader + '.' + encodedData + '.' + signature;\r\n  }\r\n\r\n  /** Convert object source to base64url encoded, Utf8'd string */\r\n  encode(source: {}) {\r\n    return this.base64url(this.toUtf8(source));\r\n  }\r\n\r\n  /** Create JWT from data object with canned header and self-signing with HmacSHA256 */\r\n  toUtf8(source: {}) {\r\n    const data = typeof source === 'string' ? source : JSON.stringify(source);\r\n    return CryptoJS.enc.Utf8.parse(data);\r\n  }\r\n}\r\n","import * as i0 from \"@angular/core\";\n/** Parse a JWT token */\nexport function parseJwt(token) {\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace('-', '+').replace('_', '/');\n    return JSON.parse(window.atob(base64));\n}\n/** The signing secret HA HA */\nvar secret = 'My very confidential secret!!!';\nvar JwtService = /** @class */ (function () {\n    function JwtService() {\n        /** The only header we support in this library */\n        this.header = { 'alg': 'HS256', 'typ': 'JWT' };\n    }\n    /**\n     * Make adjusted base64 encoding so can pass in a URL.\n     * Two differences from native base64:\n     *   No = padding at the end,\n     *   + and / characters are replaced by - and _ respectively.\n     */\n    JwtService.prototype.base64url = function (source) {\n        // Encode in classical base64\n        var encodedSource = CryptoJS.enc.Base64.stringify(source);\n        // Remove padding equal characters\n        encodedSource = encodedSource.replace(/=+$/, '');\n        // Replace characters according to base64url specifications\n        encodedSource = encodedSource.replace(/\\+/g, '-');\n        encodedSource = encodedSource.replace(/\\//g, '_');\n        return encodedSource;\n    };\n    JwtService.prototype.createJwt = function (data) {\n        var encodedData = this.encode(data || {});\n        var encodedHeader = this.encode(this.header);\n        var signature = encodedHeader + '.' + encodedData;\n        signature = CryptoJS.HmacSHA256(signature, secret);\n        signature = this.base64url(signature);\n        return encodedHeader + '.' + encodedData + '.' + signature;\n    };\n    /** Convert object source to base64url encoded, Utf8'd string */\n    JwtService.prototype.encode = function (source) {\n        return this.base64url(this.toUtf8(source));\n    };\n    /** Create JWT from data object with canned header and self-signing with HmacSHA256 */\n    JwtService.prototype.toUtf8 = function (source) {\n        var data = typeof source === 'string' ? source : JSON.stringify(source);\n        return CryptoJS.enc.Utf8.parse(data);\n    };\n    JwtService.ngInjectableDef = i0.defineInjectable({ factory: function JwtService_Factory() { return new JwtService(); }, token: JwtService, providedIn: \"root\" });\n    return JwtService;\n}());\nexport { JwtService };\n","import { HttpHeaders, HttpResponse } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { RequestInfo, ResponseOptions, STATUS } from 'angular-in-memory-web-api';\r\nexport { RequestInfo, ResponseOptions, STATUS };\r\n\r\nimport { Company } from '@model';\r\nimport { Db } from './db';\r\nexport { Db };\r\n\r\nimport { parseJwt } from '../mock-auth/jwt.service';\r\n\r\nexport function createOkResponse$(req: RequestInfo, body?: any, headers?: HttpHeaders) {\r\n  return createResponse$(req, STATUS.OK, 'OK', body, headers);\r\n}\r\n\r\nexport function createNoContentResponse$(req: RequestInfo, headers?: HttpHeaders): Observable<HttpResponse<any>> {\r\n  return createResponse$(req, STATUS.NO_CONTENT, 'NO CONTENT', null, headers);\r\n}\r\n\r\n/** Generic bad request response */\r\nexport function createBadRequestResponse$(req: RequestInfo, body?: any, headers?: HttpHeaders) {\r\n  return createResponse$(req, STATUS.BAD_REQUEST, 'Bad Request', body, headers);\r\n}\r\n\r\n/**\r\n * Custom response of any kind\r\n * @param requestInfo\r\n * @param status Http status code. See STATUS.\r\n * @param statusText Http status text for that code.\r\n * @param [body] The body, if any\r\n * @param [headers] Headers, if any. Creates empty headers object if none supplied.\r\n * @returns A cold response Observable from a factory for ResponseOptions\r\n */\r\nexport function createResponse$(requestInfo: RequestInfo, status: number, statusText: string, body?: any, headers?: HttpHeaders) {\r\n  const options: ResponseOptions = {\r\n    url: requestInfo.url,\r\n    status,\r\n    statusText,\r\n    body,\r\n    headers: headers || new HttpHeaders()\r\n  };\r\n  return requestInfo.utils.createResponse$(() => options);\r\n}\r\n\r\n/** Add an Etag response header from the company's id and a version number */\r\nexport function addCompanyEtagResponseHeader(db: Db, companyId: string, headers?: HttpHeaders): HttpHeaders {\r\n  const version = db.CompanyVersion[companyId];\r\n  const etag = createCompanyEtag(companyId, version);\r\n  if (etag) {\r\n    const weakEtag = `W/\"${etag}\"`;\r\n    return headers ? headers.set('Etag', weakEtag) : new HttpHeaders({'Etag': weakEtag});\r\n  } else {\r\n    return headers || new HttpHeaders();\r\n  }\r\n}\r\n\r\n/** Create a company Etag from the company's id and a version number */\r\nexport function createCompanyEtag(companyId: string, version: number) {\r\n  return companyId && !isNaN(version) ? companyId + '/' + version : null;\r\n}\r\n\r\n/** Mimic server-side API logic for deriving current user id from the request */\r\nexport function getCurrentUserIdFromRequest(req: RequestInfo, db: Db) {\r\n    // try to get userId from request via the AccessToken\r\n    let userId: string;\r\n    const sub = getSubFromRequest(req);\r\n    const subEnding = sub.split(':').pop(); // get the part after the colon\r\n\r\n    const authUser = db.User.find(\r\n      // match exactly, match the digits, match the username ... because mock-world is weird.\r\n      u =>\r\n        u.oidcSub === sub ||\r\n        u.oidcSub.split(':').pop() === subEnding ||\r\n        u.username === subEnding\r\n    );\r\n\r\n    if (authUser && authUser.companyId) {\r\n      userId = authUser.id;\r\n    } else {\r\n      // Admin? Look for current user id in header\r\n      userId = (req.req as any).headers.get('X-Sp-Current-User-Id');\r\n    }\r\n    return userId;\r\n}\r\n\r\n/** Extract the oidcSub from the request. Ex: 'NewCustUser:1234' */\r\nexport function getSubFromRequest(req: RequestInfo): string {\r\n  try {\r\n    let authHeader = (<any> req.headers).get('authorization');\r\n    if (!authHeader) {\r\n      // bug in AngularInMemoryWebApi v6.0.1 wipes out the original header.\r\n      // but it's still there in the original req, located at `req.req.headers`.\r\n      authHeader = (<any> req.req).headers.get('authorization');\r\n    }\r\n    const token = authHeader.split(' ')[1]; // strip off the leading \"Bearer \"\r\n    const parsedToken = parseJwt(token);\r\n    return parsedToken.sub || parsedToken.profile.sub;\r\n  } catch (error) {\r\n    // Check out both req.headers.normalizedNames and req.req.headers.normalizedNames\r\n    console.error('Failed to find sub in profile of token of request', req);\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that a change to a Company satisfies constraints.\r\n * Call it in one of the intercepted  HTTP methods.\r\n * @returns null if no problems detected and normal in-memory processing should handle it.\r\n * Returns error response if it caught something.\r\n */\r\nexport function guardCompanyChange(req: RequestInfo, db: Db) {\r\n  const company: Company = (req.req as any).body;\r\n  if (company) {\r\n    const existingCompany = db.Company.find((c: Company) => c.id === company.id);\r\n    const status = company.status;\r\n    if (status) {\r\n      if (existingCompany && existingCompany.status !== status) {\r\n        const body = `Cannot change Company status from ${existingCompany.status} to ${status}`;\r\n        return createBadRequestResponse$(req, body);\r\n      }\r\n    } else {\r\n      const body = 'Cannot save a company with a null/empty status';\r\n      return createBadRequestResponse$(req, body);\r\n    }\r\n  }\r\n}\r\n\r\n/** Parse a company Etag into the companyId and the version */\r\nexport function parseCompanyEtag(etag: string) {\r\n  const match = (etag || '').match(/(W\\/\"|\")?(.*)\\/(\\d*)[\"]?$/);\r\n  if (match) {\r\n    const companyId = match[2];\r\n    const version = Number.parseInt(match[3], 10);\r\n    return { companyId, version };\r\n  } else {\r\n    return { companyId: null, version: NaN };\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Observable, of, throwError, timer, empty } from 'rxjs';\r\nimport { catchError, concatMap, delay, map, tap } from 'rxjs/operators';\r\n\r\nimport { dateToday, getFullName } from '@core/utils';\r\nimport { AccountStatus, Company, CompanyType, User, UserRole, HouseholdFilers, Stats } from '@model';\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\nimport { BusyService } from '@core/services/busy.service';\r\nimport { environment } from '@environment';\r\nimport { OidcTokenResponse } from '@core/services/auth-services/oidc-token-response';\r\nimport { OidcTokenService } from '@core/services/auth-services/oidc-token.service';\r\nimport { SessionService } from '@session';\r\nimport { SignupVm } from './signup.vm';\r\nimport { WellKnownRoutes } from '@core/well-known-routes';\r\nimport { SignupLeadInfo } from './signup-leadinfo';\r\n\r\nexport const newEcAccountUrl = environment.apiRoot + '/account/user';\r\nexport const newSpAccountUrl = environment.spApiRoot + '/company/new';\r\nexport const subPrefix = 'NewCustUser:';\r\n\r\nconst serviceName = 'SignupService';\r\nconst pardotVisitorHandler = environment.pardotFormHandlerUri;\r\n/**\r\n * SurePayroll Account creation error.\r\n * The user might be able to fix (e.g, username or password rejection)\r\n */\r\nexport class SPAccountCreationError {\r\n  constructor(\r\n    public error: any,\r\n    public company: Partial<Company>,\r\n    public user: User,\r\n    public userMessage?: string\r\n  ) {}\r\n}\r\n\r\n/**\r\n * ECommerce app Account creation error\r\n * User can't fix. Must fail.\r\n */\r\nexport class ECAccountCreationError {\r\n  constructor(\r\n    public error: any,\r\n    public company: Partial<Company>,\r\n    public user: User,\r\n    public userMessage?: string\r\n  ) {}\r\n}\r\n\r\n/*\r\n * Get unique BCL code (4 character customer identifier)\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class SignupService {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private busyService: BusyService,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private sessionService: SessionService,\r\n    private tokenService: OidcTokenService,\r\n  ) {\r\n    authService.clearReroute('SignupService'); // no lingering routes\r\n  }\r\n\r\n  /** Clear the current user and current company data  */\r\n  clearCurrentAccount() {\r\n    this.sessionService.clearCurrentAccount();\r\n  }\r\n\r\n  /** Is test account if email ends with '@test.com' or user's name like 'Test User' (e.g.'Test123 UserX') */\r\n  isTestAccount(vm: SignupVm) {\r\n    return vm.email.endsWith('@test.com') || /^(e2e[-]?)?test.* user/i.test(vm.firstName + ' ' + vm.lastName);\r\n  }\r\n\r\n  signin() {\r\n    this.authService.logEvent('SignupService.signin() is calling AuthService.signin');\r\n    this.authService.signin();\r\n  }\r\n\r\n  /** Signup */\r\n  signUp(vm: SignupVm): Observable<boolean> {\r\n    this.tokenService.clearSignupToken(serviceName);\r\n    const companyName = vm.isHousehold ? getFullName(vm) : '';\r\n\r\n    const company: Partial<Company> = {\r\n      ...new Company(),\r\n      id: this.sessionService.generateId(),\r\n      bcl: null, // from the SP new account AP\r\n      isHousehold: vm.isHousehold,\r\n      name: companyName,\r\n      legalName: companyName,\r\n      enrollmentStartDate: dateToday(),\r\n      status: this.isTestAccount(vm) ? AccountStatus.Test : AccountStatus.Open,\r\n    };\r\n\r\n    const user: User = {\r\n      id: this.sessionService.generateId(),\r\n      companyId: company.id,\r\n      oidcSub: null, // from the SP new account AP\r\n      firstName: vm.firstName,\r\n      lastName: vm.lastName,\r\n      email: vm.email,\r\n      phone: vm.phone,\r\n      username: vm.username,\r\n      userRole: UserRole.Approver\r\n    };\r\n\r\n    const householdFilers: Partial<HouseholdFilers> = {\r\n      id: this.sessionService.generateId(),\r\n      companyId: company.id,\r\n    };\r\n\r\n    const stats: Partial<Stats> = {\r\n      id: this.sessionService.generateId(),\r\n      companyId: company.id,\r\n      aboutYouStartDate: new Date().toISOString()\r\n    };\r\n\r\n    const cmsInfo: Partial<SignupLeadInfo> = {\r\n      id: vm.id,\r\n      pardotVisitorId: vm.pardotVisitorId,\r\n      leadId: vm.leadId,\r\n      partnerCode: vm.partnerCode,\r\n      shortCode: vm.shortCode,\r\n      promoCampaignId: vm.promoCampaignId,\r\n      priceCampaignId: vm.priceCampaignId,\r\n      parameters: vm.parameters\r\n    };\r\n\r\n    this.callFormHandler(vm);\r\n\r\n    return this.busyService.busy$(\r\n      'Signing up',\r\n      this.createEcAccount(company, user, vm.password, householdFilers, stats, cmsInfo, vm.partnerCode).pipe(\r\n        concatMap(cu =>\r\n          this.tokenService.getAccessTokenFromIdentityServer(cu.user, vm.password, serviceName)\r\n        ),\r\n        concatMap(tokenResponse => {\r\n          if (tokenResponse) {\r\n            // Can use the token response to sign-in.\r\n            this.signin();\r\n            // Hack: give token processing some time before turning off spinner\r\n            // TODO: explain why this hack is needed\r\n            return timer(1000).pipe(map(() => true));\r\n          } else {\r\n            // Tell the user to sign-in\r\n            this.router.navigate([WellKnownRoutes.SignupSuccess]);\r\n            return of(true);\r\n          }\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  private callFormHandler(vm: SignupVm) {\r\n    if (pardotVisitorHandler) {\r\n      const formData: FormData = new FormData();\r\n      formData.append('pardot_visitor_id', vm.pardotVisitorId);\r\n      formData.append('email', vm.email);\r\n      formData.append('first_name', vm.firstName);\r\n      formData.append('last_name', vm.lastName);\r\n      formData.append('phone_number', vm.phone);\r\n      formData.append('username', vm.username);\r\n      formData.append('priceCampaignId', vm.priceCampaignId);\r\n      formData.append('promoCampaignId', vm.promoCampaignId);\r\n      formData.append('partner code', vm.partnerCode);\r\n      formData.append('ShortCode', vm.shortCode);\r\n      this.http.post(pardotVisitorHandler, formData)\r\n      .pipe(\r\n        catchError(error => {\r\n            this.sessionService.logger.warn(`Pardot formhandler error`, error);\r\n            return empty();\r\n        }));\r\n      }\r\n  }\r\n\r\n  /** Create Company and User in ECommerce app, after creating them in SurePayroll. */\r\n  private createEcAccount(company: Partial<Company>, user: User, password: string,\r\n    householdFilers: Partial<HouseholdFilers>, stats: Partial<Stats>, lead: Partial<SignupLeadInfo>, partnerCode: string) {\r\n    return this.createSpAccount(company, user, password, partnerCode).pipe(\r\n      catchError(error => {\r\n        const msg = this.interpretSpNewAccountError(error);\r\n        error = new SPAccountCreationError(error, company, user, msg);\r\n        this.sessionService.logger.error(`createSpAccount error`, error);\r\n        return throwError(error);\r\n      }),\r\n      map(data => {\r\n        company.bcl = data.bclCode;\r\n        // Add label that Identity Server will prefix to the userKey\r\n        user.oidcSub = subPrefix + data.userKey;\r\n        company.companyType = company.isHousehold ? CompanyType.Household : null;\r\n        return { company, user, householdFilers, stats, lead };\r\n      }),\r\n      concatMap(payload =>\r\n        this.http.post(newEcAccountUrl, payload).pipe(\r\n          map(() => payload),\r\n          catchError(error => {\r\n            // TODO: Analyze failure and try to recover?\r\n            error = new ECAccountCreationError(error, company, user);\r\n            this.sessionService.logger.error(`createEcAccount error`, error);\r\n            return throwError(error);\r\n          })\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  /** Creates the SurePayroll user and account */\r\n  private createSpAccount(company: Partial<Company>, user: User, password: string, partnerCode: string) {\r\n    const { username: username, firstName, lastName, email, phone } = user;\r\n\r\n    const cleanPhone = phone.replace(/[^0-9]/g, ''); // must strip all non-digits from phone\r\n\r\n    const payload: SpNewAccountPayload = {\r\n      partnerCode: partnerCode || 'SURE', // per EPetrisor\r\n      username,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      phone: cleanPhone,\r\n      password\r\n    };\r\n    return this.http.post<SpNewAccountResponseData>(newSpAccountUrl, payload);\r\n  }\r\n\r\n  /** Interpret the SP New Account error in a user friendly way. */\r\n  private interpretSpNewAccountError(error: any) {\r\n    this.sessionService.logger.error('SP New Account error', error);\r\n    const { status, body } = error;\r\n    let message: string;\r\n    if (status && status > 400 && status < 500 && body && Array.isArray(body)) {\r\n      // A known SP Account error. Prepare it for the user.\r\n      message = body[0]; // error text is a string in the body array\r\n      if (/already exists/.test(message)) {\r\n        // rephrase this one\r\n        message = 'Please try a different username';\r\n      }\r\n    } else {\r\n      // Unrecognized message\r\n      message = `Sorry but we had trouble creating your account.\r\n      Please try signing in again. If you are unable to sign in,\r\n       use the \"Chat\" bubble in the bottom right corner to contact support.`;\r\n    }\r\n    return message;\r\n  }\r\n}\r\n\r\n// https://devcoreapi.surepayroll.com/company/swagger/index.html\r\n/** Payload for request to SP API to create new account */\r\ninterface SpNewAccountPayload {\r\n  partnerCode: string;\r\n  username: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: string;\r\n}\r\n\r\n/** SP API response data when it creates new account */\r\ninterface SpNewAccountResponseData {\r\n  bclCode: string;\r\n  userKey: number; // integer\r\n}\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { of, throwError, timer, empty } from 'rxjs';\nimport { catchError, concatMap, map } from 'rxjs/operators';\nimport { dateToday, getFullName } from '@core/utils';\nimport { AccountStatus, Company, CompanyType, UserRole } from '@model';\nimport { AuthService } from '@core/services/auth-services/auth.service';\nimport { BusyService } from '@core/services/busy.service';\nimport { environment } from '@environment';\nimport { OidcTokenService } from '@core/services/auth-services/oidc-token.service';\nimport { SessionService } from '@session';\nimport { WellKnownRoutes } from '@core/well-known-routes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/auth-services/auth.service\";\nimport * as i2 from \"../core/services/busy.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../store/session/session.service\";\nimport * as i6 from \"../core/services/auth-services/oidc-token.service\";\nexport var newEcAccountUrl = environment.apiRoot + '/account/user';\nexport var newSpAccountUrl = environment.spApiRoot + '/company/new';\nexport var subPrefix = 'NewCustUser:';\nvar serviceName = 'SignupService';\nvar pardotVisitorHandler = environment.pardotFormHandlerUri;\n/**\n * SurePayroll Account creation error.\n * The user might be able to fix (e.g, username or password rejection)\n */\nvar SPAccountCreationError = /** @class */ (function () {\n    function SPAccountCreationError(error, company, user, userMessage) {\n        this.error = error;\n        this.company = company;\n        this.user = user;\n        this.userMessage = userMessage;\n    }\n    return SPAccountCreationError;\n}());\nexport { SPAccountCreationError };\n/**\n * ECommerce app Account creation error\n * User can't fix. Must fail.\n */\nvar ECAccountCreationError = /** @class */ (function () {\n    function ECAccountCreationError(error, company, user, userMessage) {\n        this.error = error;\n        this.company = company;\n        this.user = user;\n        this.userMessage = userMessage;\n    }\n    return ECAccountCreationError;\n}());\nexport { ECAccountCreationError };\n/*\n * Get unique BCL code (4 character customer identifier)\n */\nvar SignupService = /** @class */ (function () {\n    function SignupService(authService, busyService, http, router, sessionService, tokenService) {\n        this.authService = authService;\n        this.busyService = busyService;\n        this.http = http;\n        this.router = router;\n        this.sessionService = sessionService;\n        this.tokenService = tokenService;\n        authService.clearReroute('SignupService'); // no lingering routes\n    }\n    /** Clear the current user and current company data  */\n    SignupService.prototype.clearCurrentAccount = function () {\n        this.sessionService.clearCurrentAccount();\n    };\n    /** Is test account if email ends with '@test.com' or user's name like 'Test User' (e.g.'Test123 UserX') */\n    SignupService.prototype.isTestAccount = function (vm) {\n        return vm.email.endsWith('@test.com') || /^(e2e[-]?)?test.* user/i.test(vm.firstName + ' ' + vm.lastName);\n    };\n    SignupService.prototype.signin = function () {\n        this.authService.logEvent('SignupService.signin() is calling AuthService.signin');\n        this.authService.signin();\n    };\n    /** Signup */\n    SignupService.prototype.signUp = function (vm) {\n        var _this = this;\n        this.tokenService.clearSignupToken(serviceName);\n        var companyName = vm.isHousehold ? getFullName(vm) : '';\n        var company = __assign({}, new Company(), { id: this.sessionService.generateId(), bcl: null, isHousehold: vm.isHousehold, name: companyName, legalName: companyName, enrollmentStartDate: dateToday(), status: this.isTestAccount(vm) ? AccountStatus.Test : AccountStatus.Open });\n        var user = {\n            id: this.sessionService.generateId(),\n            companyId: company.id,\n            oidcSub: null,\n            firstName: vm.firstName,\n            lastName: vm.lastName,\n            email: vm.email,\n            phone: vm.phone,\n            username: vm.username,\n            userRole: UserRole.Approver\n        };\n        var householdFilers = {\n            id: this.sessionService.generateId(),\n            companyId: company.id,\n        };\n        var stats = {\n            id: this.sessionService.generateId(),\n            companyId: company.id,\n            aboutYouStartDate: new Date().toISOString()\n        };\n        var cmsInfo = {\n            id: vm.id,\n            pardotVisitorId: vm.pardotVisitorId,\n            leadId: vm.leadId,\n            partnerCode: vm.partnerCode,\n            shortCode: vm.shortCode,\n            promoCampaignId: vm.promoCampaignId,\n            priceCampaignId: vm.priceCampaignId,\n            parameters: vm.parameters\n        };\n        this.callFormHandler(vm);\n        return this.busyService.busy$('Signing up', this.createEcAccount(company, user, vm.password, householdFilers, stats, cmsInfo, vm.partnerCode).pipe(concatMap(function (cu) {\n            return _this.tokenService.getAccessTokenFromIdentityServer(cu.user, vm.password, serviceName);\n        }), concatMap(function (tokenResponse) {\n            if (tokenResponse) {\n                // Can use the token response to sign-in.\n                _this.signin();\n                // Hack: give token processing some time before turning off spinner\n                // TODO: explain why this hack is needed\n                return timer(1000).pipe(map(function () { return true; }));\n            }\n            else {\n                // Tell the user to sign-in\n                _this.router.navigate([WellKnownRoutes.SignupSuccess]);\n                return of(true);\n            }\n        })));\n    };\n    SignupService.prototype.callFormHandler = function (vm) {\n        var _this = this;\n        if (pardotVisitorHandler) {\n            var formData = new FormData();\n            formData.append('pardot_visitor_id', vm.pardotVisitorId);\n            formData.append('email', vm.email);\n            formData.append('first_name', vm.firstName);\n            formData.append('last_name', vm.lastName);\n            formData.append('phone_number', vm.phone);\n            formData.append('username', vm.username);\n            formData.append('priceCampaignId', vm.priceCampaignId);\n            formData.append('promoCampaignId', vm.promoCampaignId);\n            formData.append('partner code', vm.partnerCode);\n            formData.append('ShortCode', vm.shortCode);\n            this.http.post(pardotVisitorHandler, formData)\n                .pipe(catchError(function (error) {\n                _this.sessionService.logger.warn(\"Pardot formhandler error\", error);\n                return empty();\n            }));\n        }\n    };\n    /** Create Company and User in ECommerce app, after creating them in SurePayroll. */\n    SignupService.prototype.createEcAccount = function (company, user, password, householdFilers, stats, lead, partnerCode) {\n        var _this = this;\n        return this.createSpAccount(company, user, password, partnerCode).pipe(catchError(function (error) {\n            var msg = _this.interpretSpNewAccountError(error);\n            error = new SPAccountCreationError(error, company, user, msg);\n            _this.sessionService.logger.error(\"createSpAccount error\", error);\n            return throwError(error);\n        }), map(function (data) {\n            company.bcl = data.bclCode;\n            // Add label that Identity Server will prefix to the userKey\n            user.oidcSub = subPrefix + data.userKey;\n            company.companyType = company.isHousehold ? CompanyType.Household : null;\n            return { company: company, user: user, householdFilers: householdFilers, stats: stats, lead: lead };\n        }), concatMap(function (payload) {\n            return _this.http.post(newEcAccountUrl, payload).pipe(map(function () { return payload; }), catchError(function (error) {\n                // TODO: Analyze failure and try to recover?\n                error = new ECAccountCreationError(error, company, user);\n                _this.sessionService.logger.error(\"createEcAccount error\", error);\n                return throwError(error);\n            }));\n        }));\n    };\n    /** Creates the SurePayroll user and account */\n    SignupService.prototype.createSpAccount = function (company, user, password, partnerCode) {\n        var username = user.username, firstName = user.firstName, lastName = user.lastName, email = user.email, phone = user.phone;\n        var cleanPhone = phone.replace(/[^0-9]/g, ''); // must strip all non-digits from phone\n        var payload = {\n            partnerCode: partnerCode || 'SURE',\n            username: username,\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            phone: cleanPhone,\n            password: password\n        };\n        return this.http.post(newSpAccountUrl, payload);\n    };\n    /** Interpret the SP New Account error in a user friendly way. */\n    SignupService.prototype.interpretSpNewAccountError = function (error) {\n        this.sessionService.logger.error('SP New Account error', error);\n        var status = error.status, body = error.body;\n        var message;\n        if (status && status > 400 && status < 500 && body && Array.isArray(body)) {\n            // A known SP Account error. Prepare it for the user.\n            message = body[0]; // error text is a string in the body array\n            if (/already exists/.test(message)) {\n                // rephrase this one\n                message = 'Please try a different username';\n            }\n        }\n        else {\n            // Unrecognized message\n            message = \"Sorry but we had trouble creating your account.\\n      Please try signing in again. If you are unable to sign in,\\n       use the \\\"Chat\\\" bubble in the bottom right corner to contact support.\";\n        }\n        return message;\n    };\n    SignupService.ngInjectableDef = i0.defineInjectable({ factory: function SignupService_Factory() { return new SignupService(i0.inject(i1.AuthService), i0.inject(i2.BusyService), i0.inject(i3.HttpClient), i0.inject(i4.Router), i0.inject(i5.SessionService), i0.inject(i6.OidcTokenService)); }, token: SignupService, providedIn: \"root\" });\n    return SignupService;\n}());\nexport { SignupService };\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {\r\n  HttpEvent,\r\n  HttpEventType,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, concatMap, first, map, tap } from 'rxjs/operators';\r\n\r\nimport { CompanyService } from '@entity/entity-services/company.service';\r\nimport { environment } from '@environment';\r\nimport { LoggerService } from '@core/services/logger.service';\r\nimport { SessionService } from '@session';\r\nimport { newEcAccountUrl, newSpAccountUrl } from '@app/signup/signup.service';\r\nimport { WellKnownRoutes } from '@core/well-known-routes';\r\n\r\n/**\r\n * Implements client-side etag/precondition header concurrency behavior documented in\r\n * https://docs.google.com/document/d/1WzMeGVaVcxp3q0QNV0dC0ZLaUAZal39DnErQ0hbdwjM/edit#\r\n */\r\n@Injectable() // do not use providedIn because multi-provided\r\nexport class ConcurrencyHttpInterceptor implements HttpInterceptor {\r\n\r\n  private logger: LoggerService;\r\n\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private router: Router,\r\n    private sessionService: SessionService,\r\n  ) {\r\n    this.logger = sessionService.logger;\r\n  }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const res$ = requiresConcurrencyControl(req)\r\n      ? this.handleConcurrencyRequest(req, next)\r\n      : next.handle(req);\r\n\r\n    return res$.pipe(\r\n      tap((res: HttpResponse<any>) => {\r\n        const reqDebug = req; // capture request for debugging\r\n        // Only extract etag from a full response\r\n        // Ignore other response types such as \"Sent\" which arrives when browser sends an OPTION\r\n        // https://angular.io/api/common/http/HttpEventType\r\n        if (res.type !== HttpEventType.Response ) {\r\n          return res;\r\n        }\r\n\r\n        const etag = getEtagFromHeader(res.headers && res.headers.get('Etag'));\r\n        if (etag) {\r\n          this.sessionService.setCurrentCompanyEtag(etag);\r\n        }\r\n      }),\r\n    );\r\n  }\r\n\r\n  private handleConcurrencyRequest(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const method = req.method.toUpperCase();\r\n    const url = req.url;\r\n    return this.sessionService.currentCompanyEtag$.pipe(\r\n      first(),\r\n      concatMap(etag => {\r\n        if (etag) {\r\n          const headers = { 'If-Match': `W/\"${etag}\"`};\r\n          req = req.clone({ setHeaders: headers });\r\n        } else {\r\n          this.logger.error(`No Etag; cannot set 'If-Match' header for ${method} ${url}`);\r\n        }\r\n        return next.handle(req).pipe(res$ => this.handleConcurrencyResponse(req, res$));\r\n      })\r\n    );\r\n  }\r\n\r\n  private handleConcurrencyResponse(req: HttpRequest<any>, res$: Observable<HttpEvent<any>>) {\r\n    return res$.pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        const method = req.method.toUpperCase();\r\n        const url = req.url;\r\n\r\n        if (error && error.status === 412 && req.headers.get) {\r\n          const ifMatchHeader = req.headers.get('If-Match');\r\n          if (!ifMatchHeader) {\r\n            // some other precondition failed; pass errant response along;\r\n            return res$;\r\n          }\r\n          // tslint:disable-next-line:max-line-length\r\n          const msg = `${method} ${url} failed because another user saved conflicting changes. Navigating to failure page.`;\r\n          this.sessionService.logger.warn(msg, error);\r\n          this.gotoConcurrencyFailure();\r\n          // TODO: send error response that indicates it was handled and doesn't make a big noise\r\n          return res$; // pass errant response along\r\n        } else {\r\n          return res$; // pass errant response along\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private gotoConcurrencyFailure() {\r\n    this.sessionService.readOnly$.pipe(\r\n      first(),\r\n      map(ro => {\r\n        this.sessionService.setReadOnly(true); // forces discard of changes on navigation\r\n        this.router.navigate([WellKnownRoutes.ConcurrencyFailure]).then(\r\n          // restore previous read-only setting regardless\r\n          _ => this.sessionService.setReadOnly(ro),\r\n          error => this.sessionService.setReadOnly(ro),\r\n        );\r\n      })\r\n    ).subscribe();\r\n  }\r\n}\r\n\r\n\r\n/** Requests that require etag/precondition header concurrency control */\r\nexport function requiresConcurrencyControl(req: HttpRequest<any>) {\r\n  const method = req.method.toUpperCase(); // UPPERCASE for comparison\r\n  const url = req.url.toLowerCase();       // lowercase for comparison\r\n\r\n  // All methods except GET and JSONP that are\r\n  // requests to eCommerce APIs (for now; expand later?).\r\n  // Certain requests are NOT under concurrency control\r\n  // such as account creation and Tax API requests\r\n  return 'GET' !== method &&\r\n\r\n    (url.startsWith(environment.apiRoot) || url.startsWith(environment.spApiRoot)) &&\r\n\r\n    // POST to Stats\r\n    !url.includes('/stats/') &&\r\n\r\n    // POST to Tax Service API is actually a GET\r\n    !url.includes('/taxapi/') &&\r\n\r\n    // POST to EventLog\r\n    !url.includes('/eventlog/') &&\r\n\r\n    // POST to SP to create the account in NewCust\r\n    url !== newSpAccountUrl &&\r\n\r\n    // POST to EC to create the account in eCommerce\r\n    url !== newEcAccountUrl &&\r\n\r\n    // Rare and never under concurrency control.\r\n    method !== 'JSONP';\r\n}\r\n\r\n/**\r\n * Extract normalized etag value from an Etag header\r\n * @param etagHeaderValue typically from `headers.get('Etag')`\r\n * @returns normalized \"weak\" etag or empty string if no header or can't normalize.\r\n * @examples:\r\n * ```\r\n *   null                 // -> '' from null or empty string Etag header\r\n *   \"adfadf8768af/321\"   // -> 'adfadf8768af/321' from strong etag header\r\n *   W/\"adfadf8768af/321\" // -> 'adfadf8768af/321' from weak etag header\r\n * ```\r\n * @see  https://docs.google.com/document/d/1WzMeGVaVcxp3q0QNV0dC0ZLaUAZal39DnErQ0hbdwjM/edit#\r\n */\r\nexport function getEtagFromHeader(etagHeaderValue: string): string {\r\n  const match = etagHeaderValue ? etagHeaderValue.match(/(W\\/\"|\")?([^\\/]*\\/[\\d]*)[\"]?$/) : null;\r\n  return match ? match[2] || '' : '';\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { HttpClientBackendService, InMemoryBackendConfigArgs, RequestCore, } from 'angular-in-memory-web-api';\nimport { XhrFactory } from '@angular/common/http';\nimport { asapScheduler, throwError } from 'rxjs';\nimport { catchError, observeOn, map } from 'rxjs/operators';\nimport { InMemoryDataService } from './in-memory-data.service';\nimport { createCompanyEtag, parseCompanyEtag } from './in-mem-service-utils';\nimport { requiresConcurrencyControl } from '@core/http-interceptors/concurrency-http-interceptor';\n/**\n * Override InMemoryWebApi HttpClientBackendService\n * Mimics server-side etag/precondition header concurrency behavior documented in\n * https://docs.google.com/document/d/1WzMeGVaVcxp3q0QNV0dC0ZLaUAZal39DnErQ0hbdwjM/edit#\n * Companion to client app's ConcurrencyHttpInterceptor\n */\nvar HttpServerConcurrencyInterceptor = /** @class */ (function (_super) {\n    __extends(HttpServerConcurrencyInterceptor, _super);\n    function HttpServerConcurrencyInterceptor(inMemDataService, config, xhrFactory) {\n        var _this = _super.call(this, inMemDataService, config, xhrFactory) || this;\n        _this.inMemDataService = inMemDataService;\n        return _this;\n    }\n    /** Process request and return an Observable of Http Response object */\n    HttpServerConcurrencyInterceptor.prototype.handleRequest_ = function (reqCore) {\n        var req = reqCore;\n        return requiresConcurrencyControl(req)\n            ? this.handleConcurrencyRequest(req)\n            : _super.prototype.handleRequest_.call(this, reqCore);\n    };\n    /** Process request that requires concurrency control */\n    HttpServerConcurrencyInterceptor.prototype.handleConcurrencyRequest = function (req) {\n        var _this = this;\n        var revertCompanyVersion = function () { };\n        var precondition = req.headers.get('If-Match');\n        if (!precondition) {\n            return createErrorResponse$(428, 'Precondition Required', req.url);\n        }\n        var match = precondition.match(/\"(.*)\"/);\n        var etag = match ? match[1] : '';\n        var _a = parseCompanyEtag(etag), companyId = _a.companyId, requestVersion = _a.version;\n        if (!companyId || isNaN(requestVersion)) {\n            return createErrorResponse$(400, 'Bad Request', req.url, \"Badly formed \\\"If-Match\\\" header or etag: \" + precondition + \".\");\n        }\n        var currentVersion = this.inMemDataService.db.CompanyVersion[companyId];\n        if (currentVersion == null) {\n            return createErrorResponse$(404, 'Not Found', req.url, \"Company for Etag:\" + etag + \" not found.\");\n        }\n        if (currentVersion !== requestVersion) {\n            return createErrorResponse$(412, 'Precondition Failed', req.url, \"Company version does not match Etag:\" + etag + \".\");\n        }\n        // Conditionally update company version. Ready to revert if server responds with an error.\n        var newVersion = requestVersion + 1;\n        this.inMemDataService.db.CompanyVersion[companyId] = newVersion;\n        var newEtag = createCompanyEtag(companyId, newVersion);\n        /** Revert the version change in the DB */\n        revertCompanyVersion = function () {\n            _this.inMemDataService.db.CompanyVersion[companyId] = currentVersion;\n        };\n        return _super.prototype.handleRequest_.call(this, req).pipe(map(function (res) {\n            var reqDebug = req; // capture request for debugging\n            var status = res.status;\n            // replay with the new etag if recognized response status\n            if (status === 200 || status === 201 || status === 204) {\n                // set the header with the \"weak\" indicator\n                // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag#Directives\n                var headers = res.headers.set('Etag', \"W/\\\"\" + newEtag + \"\\\"\");\n                res = res.clone({ headers: headers });\n            }\n            return res;\n        }), catchError(function (error) {\n            var reqDebug = req; // capture request for debugging\n            revertCompanyVersion();\n            return throwError(error);\n        }));\n    };\n    return HttpServerConcurrencyInterceptor;\n}(HttpClientBackendService));\nexport { HttpServerConcurrencyInterceptor };\nfunction createErrorResponse$(status, statusText, url, error) {\n    var err = new HttpErrorResponse({ status: status, statusText: statusText, url: url, error: error });\n    return throwError(err).pipe(observeOn(asapScheduler));\n}\n","import { Inject, Optional } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport {\r\n  HttpClientBackendService, InMemoryBackendConfig, InMemoryBackendConfigArgs, InMemoryDbService, RequestCore,\r\n} from 'angular-in-memory-web-api';\r\nimport { XhrFactory } from '@angular/common/http';\r\n\r\nimport { asapScheduler, Observable, throwError } from 'rxjs';\r\nimport { catchError, observeOn, map, tap } from 'rxjs/operators';\r\n\r\nimport { Company } from '@model';\r\nimport { Db } from './db';\r\nimport { InMemoryDataService } from './in-memory-data.service';\r\nimport { createCompanyEtag, parseCompanyEtag } from './in-mem-service-utils';\r\nimport { requiresConcurrencyControl } from '@core/http-interceptors/concurrency-http-interceptor';\r\n\r\n/**\r\n * Override InMemoryWebApi HttpClientBackendService\r\n * Mimics server-side etag/precondition header concurrency behavior documented in\r\n * https://docs.google.com/document/d/1WzMeGVaVcxp3q0QNV0dC0ZLaUAZal39DnErQ0hbdwjM/edit#\r\n * Companion to client app's ConcurrencyHttpInterceptor\r\n */\r\nexport class HttpServerConcurrencyInterceptor extends HttpClientBackendService {\r\n\r\n  constructor(\r\n    @Inject(InMemoryDbService) protected inMemDataService: InMemoryDataService,\r\n    @Inject(InMemoryBackendConfig) @Optional() config: InMemoryBackendConfigArgs,\r\n    xhrFactory: XhrFactory\r\n  ) {\r\n    super(inMemDataService, config, xhrFactory);\r\n  }\r\n\r\n  /** Process request and return an Observable of Http Response object */\r\n  protected handleRequest_(reqCore: RequestCore): Observable<any> {\r\n    const req: HttpRequest<any> = reqCore as any;\r\n    return requiresConcurrencyControl(req)\r\n      ? this.handleConcurrencyRequest(req)\r\n      : super.handleRequest_(reqCore);\r\n  }\r\n\r\n  /** Process request that requires concurrency control */\r\n  protected handleConcurrencyRequest(req: HttpRequest<any>): Observable<any> {\r\n    let revertCompanyVersion = () => {};\r\n\r\n    const precondition = req.headers.get('If-Match');\r\n    if (!precondition) {\r\n      return createErrorResponse$(428, 'Precondition Required', req.url);\r\n    }\r\n\r\n    const match = precondition.match(/\"(.*)\"/);\r\n    const etag = match ? match[1] : '';\r\n    const { companyId, version: requestVersion } = parseCompanyEtag(etag);\r\n\r\n    if (!companyId || isNaN(requestVersion)) {\r\n      return createErrorResponse$(400, 'Bad Request', req.url, `Badly formed \"If-Match\" header or etag: ${precondition}.`);\r\n    }\r\n\r\n    const currentVersion = this.inMemDataService.db.CompanyVersion[companyId];\r\n    if (currentVersion == null) {\r\n      return createErrorResponse$(404, 'Not Found', req.url, `Company for Etag:${etag} not found.`);\r\n    }\r\n\r\n    if (currentVersion !== requestVersion) {\r\n      return createErrorResponse$(412, 'Precondition Failed', req.url, `Company version does not match Etag:${etag}.`);\r\n    }\r\n\r\n    // Conditionally update company version. Ready to revert if server responds with an error.\r\n    const newVersion = requestVersion + 1;\r\n    this.inMemDataService.db.CompanyVersion[companyId] = newVersion;\r\n\r\n    const newEtag = createCompanyEtag(companyId, newVersion);\r\n\r\n    /** Revert the version change in the DB */\r\n    revertCompanyVersion = () => {\r\n      this.inMemDataService.db.CompanyVersion[companyId] = currentVersion;\r\n    };\r\n\r\n    return super.handleRequest_(req).pipe(\r\n      map((res: HttpResponse<any>) => {\r\n        const reqDebug = req; // capture request for debugging\r\n        const status = res.status;\r\n        // replay with the new etag if recognized response status\r\n        if (status === 200 || status === 201 || status === 204) {\r\n          // set the header with the \"weak\" indicator\r\n          // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag#Directives\r\n          const headers = res.headers.set('Etag', `W/\"${newEtag}\"`);\r\n          res = res.clone({ headers });\r\n        }\r\n        return res;\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        const reqDebug = req; // capture request for debugging\r\n        revertCompanyVersion();\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nfunction createErrorResponse$(status: number, statusText: string, url: string, error?: any) {\r\n  const err = new HttpErrorResponse({ status, statusText, url, error });\r\n  return throwError(err).pipe(observeOn(asapScheduler));\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\nimport { InMemoryBackendConfig, InMemoryBackendConfigArgs, InMemoryDbService, RequestCore } from 'angular-in-memory-web-api';\nimport { tap } from 'rxjs/operators';\nimport { HttpServerConcurrencyInterceptor } from './http-server-concurrency-interceptor';\nimport { InMemoryDataService } from './in-memory-data.service';\n/** True if should NOT get and save mock db from local storage, e.g. start up URL `?noSavedMockDb`) */\nvar noSavedMockDb = window.location.search.includes('noSavedMockDb');\n/** True if should clear saved mock db from local storage, e.g. start up URL `?clearSavedMockDb`) */\nvar clearSavedMockDb = window.location.search.includes('clearSavedMockDb');\n/** Key of mockDb in local storage */\nexport var mockDbKey = 'sp-mock-db';\n/**\n * Override HttpServerConcurrencyInterceptor which subclasses InMemoryWebApi HttpClientBackendService\n * - save and restore in-mem DB from browser local storage before/after every request\n * - add '?noSavedMockDb' to initial page URL to only use temporary, initial in-mem JSON\n * - add '?clearSavedMockDb` to clear the saved version and start with in-mem JSON\n * - can combine these flags\n */\nvar HttpClientBackendServiceSp = /** @class */ (function (_super) {\n    __extends(HttpClientBackendServiceSp, _super);\n    function HttpClientBackendServiceSp(inMemDataService, config, xhrFactory) {\n        var _this = _super.call(this, inMemDataService, config, xhrFactory) || this;\n        // `req` passed for debugging\n        _this.getDbFromLocalStorage = function (req) { };\n        _this.saveDbToLocalStorage = function (req) { };\n        /** Clear the DB in local storage when app starts with URL search item 'clearSavedMockDb' */\n        if (clearSavedMockDb && window.localStorage) {\n            window.localStorage.removeItem(mockDbKey);\n            console.log(\"MOCKING: Cleared mock DB in local storage at \\\"\" + mockDbKey + \"\\\".\");\n        }\n        /**\n         * Get and save DB to local storage before and after each request\n         * unless app starts with URL search item 'noSavedMockDb'\n         */\n        if (!noSavedMockDb && window.localStorage) {\n            console.log(\"MOCKING: Saving mock DB to local storage in \\\"\" + mockDbKey + \"\\\".\");\n            _this.getDbFromLocalStorage = function (req) {\n                var db = window.localStorage.getItem(mockDbKey);\n                if (db) {\n                    _this.db = inMemDataService.db = JSON.parse(db);\n                }\n            };\n            _this.saveDbToLocalStorage = function (req) {\n                window.localStorage.setItem(mockDbKey, JSON.stringify(inMemDataService.db));\n            };\n        }\n        else {\n            console.log(\"MOCKING: Not saving to local storage; initialized with JSON file.\");\n        }\n        return _this;\n    }\n    /** Process Request and return an Observable of Http Response object */\n    HttpClientBackendServiceSp.prototype.handleRequest_ = function (req) {\n        var _this = this;\n        this.getDbFromLocalStorage(req);\n        return _super.prototype.handleRequest_.call(this, req).pipe(tap(function () { return _this.saveDbToLocalStorage(req); }, function () { return _this.saveDbToLocalStorage(req); })\n        // Do NOT use finalize() because it is called a tick after next/error,\n        // leading to request/response race conditions.\n        // Ex: SessionService.setAccountStatus(), which sets status, then reloads CompanyPackage\n        // finalize(() => this.saveDbToLocalStorage(req))\n        );\n    };\n    return HttpClientBackendServiceSp;\n}(HttpServerConcurrencyInterceptor));\nexport { HttpClientBackendServiceSp };\n// #region provider logic\nexport function httpClientInMemBackendServiceFactory(dbService, options, xhrFactory) {\n    var backend = new HttpClientBackendServiceSp(dbService, options, xhrFactory);\n    return backend;\n}\nexport var httpClientBackendServiceProvider = {\n    provide: HttpBackend,\n    useFactory: httpClientInMemBackendServiceFactory,\n    deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory]\n};\n// #endregion provider logic\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\r\nimport {\r\n  InMemoryBackendConfig, InMemoryBackendConfigArgs, HttpClientBackendService,\r\n  InMemoryDbService, RequestCore\r\n} from 'angular-in-memory-web-api';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { Db } from './db';\r\nimport { HttpServerConcurrencyInterceptor } from './http-server-concurrency-interceptor';\r\nimport { InMemoryDataService } from './in-memory-data.service';\r\n\r\n/** True if should NOT get and save mock db from local storage, e.g. start up URL `?noSavedMockDb`) */\r\nconst noSavedMockDb = window.location.search.includes('noSavedMockDb');\r\n\r\n/** True if should clear saved mock db from local storage, e.g. start up URL `?clearSavedMockDb`) */\r\nconst clearSavedMockDb = window.location.search.includes('clearSavedMockDb');\r\n\r\n/** Key of mockDb in local storage */\r\nexport const mockDbKey = 'sp-mock-db';\r\n\r\n/**\r\n * Override HttpServerConcurrencyInterceptor which subclasses InMemoryWebApi HttpClientBackendService\r\n * - save and restore in-mem DB from browser local storage before/after every request\r\n * - add '?noSavedMockDb' to initial page URL to only use temporary, initial in-mem JSON\r\n * - add '?clearSavedMockDb` to clear the saved version and start with in-mem JSON\r\n * - can combine these flags\r\n */\r\nexport class HttpClientBackendServiceSp extends HttpServerConcurrencyInterceptor {\r\n\r\n  // `req` passed for debugging\r\n  getDbFromLocalStorage = (req: RequestCore) => {};\r\n  saveDbToLocalStorage = (req: RequestCore) => {};\r\n\r\n  constructor(\r\n    @Inject(InMemoryDbService) inMemDataService: InMemoryDataService,\r\n    @Inject(InMemoryBackendConfig) @Optional() config: InMemoryBackendConfigArgs,\r\n    xhrFactory: XhrFactory\r\n  ) {\r\n    super(inMemDataService, config, xhrFactory);\r\n\r\n    /** Clear the DB in local storage when app starts with URL search item 'clearSavedMockDb' */\r\n    if (clearSavedMockDb && window.localStorage) {\r\n       window.localStorage.removeItem(mockDbKey);\r\n       console.log(`MOCKING: Cleared mock DB in local storage at \"${mockDbKey}\".`);\r\n    }\r\n\r\n    /**\r\n     * Get and save DB to local storage before and after each request\r\n     * unless app starts with URL search item 'noSavedMockDb'\r\n     */\r\n    if (!noSavedMockDb && window.localStorage) {\r\n      console.log(`MOCKING: Saving mock DB to local storage in \"${mockDbKey}\".`);\r\n      this.getDbFromLocalStorage = (req: RequestCore) => {\r\n        const db = window.localStorage.getItem(mockDbKey);\r\n        if (db) {\r\n          this.db = inMemDataService.db = JSON.parse(db) as Db;\r\n        }\r\n      };\r\n\r\n      this.saveDbToLocalStorage = (req: RequestCore) => {\r\n        window.localStorage.setItem(mockDbKey, JSON.stringify(inMemDataService.db));\r\n      };\r\n    } else {\r\n      console.log(`MOCKING: Not saving to local storage; initialized with JSON file.`);\r\n    }\r\n  }\r\n\r\n  /** Process Request and return an Observable of Http Response object */\r\n  protected handleRequest_(req: RequestCore): Observable<any> {\r\n    this.getDbFromLocalStorage(req);\r\n    return super.handleRequest_(req).pipe(\r\n      tap(\r\n        () => this.saveDbToLocalStorage(req),\r\n        () => this.saveDbToLocalStorage(req)\r\n      )\r\n      // Do NOT use finalize() because it is called a tick after next/error,\r\n      // leading to request/response race conditions.\r\n      // Ex: SessionService.setAccountStatus(), which sets status, then reloads CompanyPackage\r\n      // finalize(() => this.saveDbToLocalStorage(req))\r\n    );\r\n  }\r\n}\r\n\r\n// #region provider logic\r\nexport function httpClientInMemBackendServiceFactory(\r\n  dbService: InMemoryDbService,\r\n  options: InMemoryBackendConfig,\r\n  xhrFactory: XhrFactory,\r\n): HttpBackend {\r\n  const backend: any = new HttpClientBackendServiceSp(dbService as InMemoryDataService, options, xhrFactory);\r\n  return backend;\r\n}\r\n\r\nexport const httpClientBackendServiceProvider = {\r\n  provide: HttpBackend,\r\n  useFactory: httpClientInMemBackendServiceFactory,\r\n  deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory]\r\n};\r\n// #endregion provider logic\r\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\nimport { environment } from '@environment';\r\nimport { InMemoryDataService } from '../mock-services/in-memory-data.service';\r\nimport { mockDbKey } from '../mock-services/http-client-backend-service-sp';\r\nimport { MockOidcManager } from '../mock-auth/mock-oidc-manager';\r\nimport { MockOidcManagerFactory } from '../mock-auth/mock-oidc-manager-factory';\r\nimport { ngIfAnim } from '@animations';\r\nimport { OidcManagerFactory } from '@core/services/auth-services/oidc-manager-factory';\r\nimport { SessionService } from '@session';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'sp-mock-signin',\r\n  templateUrl: './mock-signin.component.html',\r\n  animations: [ngIfAnim]\r\n})\r\nexport class MockSigninComponent implements OnInit {\r\n  @ViewChild('form')\r\n  form: NgForm;\r\n\r\n  disableClearMockDb = false;\r\n  errors$: Observable<string>;\r\n  mockOidcManager: MockOidcManager;\r\n  showTestAccounts = false;\r\n  success: string;\r\n  vm: { username: string; password: string };\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private inMemoryDataService: InMemoryDataService,\r\n    @Inject(OidcManagerFactory) mgrfactory: MockOidcManagerFactory,\r\n    private sessionService: SessionService\r\n  ) {\r\n    this.mockOidcManager = mgrfactory.proxy.useMock();\r\n    this.vm = {\r\n      username: null,\r\n      password: null\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.errors$ = this.authService.errors$;\r\n    this.sessionService.clearCurrentAccount();\r\n    this.authService.logEvent(\r\n      'MockSiginComponent initialized; calling sessionService.clearCurrentAccount()'\r\n    );\r\n  }\r\n\r\n  resetMockedData() {\r\n    this.disableClearMockDb = true;\r\n    if (window.localStorage) {\r\n      window.localStorage.removeItem(mockDbKey);\r\n    }\r\n    this.inMemoryDataService.createInitialMockDb().subscribe();\r\n  }\r\n\r\n  signin() {\r\n    const { dirty, valid, value } = this.form;\r\n\r\n    const username = value.username;\r\n    const password = value.password;\r\n\r\n    this.doSignin(username); // password doesn't matter\r\n  }\r\n\r\n  doSignin(username: string) {\r\n    this.authService.logEvent(\r\n      `MockSiginComponent subscribing to authService.signinRedirectCallback({${username}})`\r\n    );\r\n    this.authService.signinRedirectCallback({ username }).subscribe();\r\n  }\r\n\r\n  toggleShowTestAccounts() {\r\n    this.showTestAccounts = !this.showTestAccounts;\r\n  }\r\n}\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n// #region Created Account Entity Templates\n// tslint:disable:quotemark\nvar companyTemplate = {\n    \"bankName\": \"\",\n    \"bcl\": \"EX001\",\n    \"companyType\": null,\n    \"doneAddingEmployees\": false,\n    \"enrollmentStartDate\": \"2018-01-01T17:00:00.000Z\",\n    \"feinValidationCount\": 0,\n    \"id\": \"b1f001b18ee54333aef601683b89a011\",\n    \"isAgricultural\": false,\n    \"isHousehold\": false,\n    \"legalName\": \"\",\n    \"name\": \"TestCo 001\",\n    \"payrollFrequency\": \"Bi-Weekly\",\n    \"status\": \"Open\"\n};\nvar householdFilersTemplate = {\n    \"companyId\": \"b1fba3b18ee54333aef601683b89a001\",\n    \"id\": \"8b132db2fa574036903401683b89a001\"\n};\nvar statsTemplate = {\n    \"aboutYouStartDate\": \"2019-01-01T06:11:45.537Z\",\n    \"companyId\": \"b1fba3b18ee54333aef601683b89a001\",\n    \"id\": \"6884fa7cc43f4665bab501683b89a001\"\n};\nvar userTemplate = {\n    \"companyId\": \"b1fba3b18ee54333aef601683b89a001\",\n    \"email\": \"test.user001@testco001.com\",\n    \"firstName\": \"Test\",\n    \"id\": \"92e0012b7e6e423b96b101683b89a011\",\n    \"lastName\": \"User001\",\n    \"oidcSub\": \"NewCustUser:8372001\",\n    \"phone\": \"9809809001\",\n    \"userRole\": \"Approver\",\n    \"username\": \"testuser001\"\n};\n// #endregion Created Account Entity Templates\n/**\n * Generate extra accounts to expand the account list for filtering and paging\n */\nexport function genExtraAccounts(db) {\n    var dayInMs = 1000 * 60 * 60 * 24;\n    for (var i = 1; i <= 60; i++) {\n        var counter = ('00' + i).substr(-3);\n        var companyId = \"1fb\" + counter + \"ee54333aef601683b89a011\";\n        var startDt = (new Date(new Date('2017-12-31T17:00:00.000Z').valueOf() + (dayInMs * i))).toUTCString();\n        var co = __assign({}, companyTemplate, { id: companyId, bcl: 'EX' + counter, enrollmentStartDate: startDt, name: 'TestCo ' + counter });\n        var hf = __assign({}, householdFilersTemplate, { id: '8b132db2fa574036903401683b89a' + counter, companyId: companyId });\n        var stats = __assign({}, statsTemplate, { id: '6884fa7cc43f4665bab501683b89a' + counter, companyId: companyId, aboutYouStartDate: startDt });\n        var user = __assign({}, userTemplate, { id: \"92e\" + counter + \"2b7e6e423b96b101683b89a011\", companyId: companyId, email: \"test.user\" + counter + \"@testco\" + counter + \".com\", lastName: 'User' + counter, oidcSub: 'NewCustUser:8372' + counter, phone: '9809809' + counter, username: 'testuser' + counter });\n        db.Company.push(co);\n        db.HouseholdFilers.push(hf);\n        db.Stats.push(stats);\n        db.User.push(user);\n    }\n    return db;\n}\n","import { Db } from './db';\nimport { Company, HouseholdFilers, Stats, User } from '@model';\n\n// #region Created Account Entity Templates\n// tslint:disable:quotemark\nconst companyTemplate = {\n  \"bankName\": \"\",\n  \"bcl\": \"EX001\",\n  \"companyType\": null as string,\n  \"doneAddingEmployees\": false,\n  \"enrollmentStartDate\": \"2018-01-01T17:00:00.000Z\",\n  \"feinValidationCount\": 0,\n  \"id\": \"b1f001b18ee54333aef601683b89a011\",\n  \"isAgricultural\": false,\n  \"isHousehold\": false,\n  \"legalName\": \"\",\n  \"name\": \"TestCo 001\",\n  \"payrollFrequency\": \"Bi-Weekly\",\n  \"status\": \"Open\"\n};\n\nconst householdFilersTemplate = {\n  \"companyId\": \"b1fba3b18ee54333aef601683b89a001\",\n  \"id\": \"8b132db2fa574036903401683b89a001\"\n};\n\nconst statsTemplate = {\n  \"aboutYouStartDate\": \"2019-01-01T06:11:45.537Z\",\n  \"companyId\": \"b1fba3b18ee54333aef601683b89a001\",\n  \"id\": \"6884fa7cc43f4665bab501683b89a001\"\n};\n\nconst userTemplate = {\n  \"companyId\": \"b1fba3b18ee54333aef601683b89a001\",\n  \"email\": \"test.user001@testco001.com\",\n  \"firstName\": \"Test\",\n  \"id\": \"92e0012b7e6e423b96b101683b89a011\",\n  \"lastName\": \"User001\",\n  \"oidcSub\": \"NewCustUser:8372001\",\n  \"phone\": \"9809809001\",\n  \"userRole\": \"Approver\",\n  \"username\": \"testuser001\"\n};\n// #endregion Created Account Entity Templates\n\n/**\n * Generate extra accounts to expand the account list for filtering and paging\n */\nexport function genExtraAccounts(db: Db): Db {\n  const dayInMs = 1000 * 60 * 60 * 24;\n\n  for (let i = 1; i <= 60; i++) {\n    const counter = ('00' + i).substr(-3);\n    const companyId = `1fb${counter}ee54333aef601683b89a011`;\n    const startDt = (new Date(new Date('2017-12-31T17:00:00.000Z').valueOf() + (dayInMs * i))).toUTCString();\n\n    const co = {\n      ...companyTemplate,\n      id: companyId,\n      bcl: 'EX' + counter,\n      enrollmentStartDate: startDt,\n      name: 'TestCo ' + counter\n    } as Company;\n\n    const hf = {\n      ...householdFilersTemplate,\n      id: '8b132db2fa574036903401683b89a' + counter,\n      companyId,\n    } as HouseholdFilers;\n\n    const stats = {\n      ...statsTemplate,\n      id: '6884fa7cc43f4665bab501683b89a' + counter,\n      companyId,\n      aboutYouStartDate: startDt,\n    } as Stats;\n\n    const user = {\n      ...userTemplate,\n      id: `92e${counter}2b7e6e423b96b101683b89a011`,\n      companyId,\n      email: `test.user${counter}@testco${counter}.com`,\n      lastName: 'User' + counter,\n      oidcSub: 'NewCustUser:8372' + counter,\n      phone: '9809809' + counter,\n      username: 'testuser' + counter\n    } as User;\n\n    db.Company.push(co);\n    db.HouseholdFilers.push(hf);\n    db.Stats.push(stats);\n    db.User.push(user);\n  }\n  return db;\n}\n","import { AccountStatus } from '@model';\r\nimport { AccountStateTransition } from '@session/account-state-transition';\r\nexport { AccountStateTransition } from '@session/account-state-transition';\r\n\r\n/**\r\n * AccountStatus transitions\r\n * Align with SurePayroll server transitions\r\n * See SurePayroll.Enrollment.Services/AccountStateTransition/DefaultTransitionStateMachine.cs\r\n */\r\nexport const accountStateTransitions: AccountStateTransition[] = [\r\n  // #region Open ->\r\n  // // (from, to, allowAdminOverride, allowWithErrors, hideInUi )\r\n  // AddTransition(CompanyStatuses.Open, CompanyStatuses.ReadyForDocs);\r\n  // AddTransition(CompanyStatuses.Open, CompanyStatuses.Test, false, true, true);\r\n  // AddTransition(CompanyStatuses.Open, CompanyStatuses.Abandoned, false, true, true);\r\n  {\r\n    'current': AccountStatus.Open,\r\n    'next': AccountStatus.Docs,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': false,\r\n    'allowWithErrors': false,\r\n    'hideInUi': false\r\n  },\r\n  {\r\n    'current': AccountStatus.Open,\r\n    'next': AccountStatus.Test,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': true,\r\n    'hideInUi': false\r\n  },\r\n  {\r\n    'current': AccountStatus.Open,\r\n    'next': AccountStatus.Abandoned,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': true,\r\n    'hideInUi': false\r\n  },\r\n  // #endregion Docs ->\r\n\r\n  // #region Open ->\r\n  // // (from, to, allowAdminOverride, allowWithErrors, hideInUi )\r\n  // AddTransition(CompanyStatuses.ReadyForDocs, CompanyStatuses.AutoMigrate);\r\n  // AddTransition(CompanyStatuses.ReadyForDocs, CompanyStatuses.WaitingForOps);\r\n  // AddTransition(CompanyStatuses.ReadyForDocs, CompanyStatuses.Test, false, true, true);\r\n  // AddTransition(CompanyStatuses.ReadyForDocs, CompanyStatuses.Abandoned, false, true, true);\r\n  // AddTransition(CompanyStatuses.ReadyForDocs, CompanyStatuses.Open, false, true, true);\r\n  {\r\n    'current': AccountStatus.Docs,\r\n    'next': AccountStatus.AutoMigrate,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': false,\r\n    'allowWithErrors': false,\r\n    'hideInUi': true\r\n  },\r\n  {\r\n    'current': AccountStatus.Docs,\r\n    'next': AccountStatus.Operations,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': false,\r\n    'allowWithErrors': false,\r\n    'hideInUi': false\r\n  },\r\n  {\r\n    'current': AccountStatus.Docs,\r\n    'next': AccountStatus.Test,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': true,\r\n    'hideInUi': false\r\n  },\r\n  {\r\n    'current': AccountStatus.Docs,\r\n    'next': AccountStatus.Abandoned,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': true,\r\n    'hideInUi': false\r\n  },\r\n  {\r\n    'current': AccountStatus.Docs,\r\n    'next': AccountStatus.Open,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': true,\r\n    'hideInUi': false\r\n  },\r\n  // #endregion Docs ->\r\n\r\n  // #region AutoMigrate ->\r\n  // // (from, to, allowAdminOverride, allowWithErrors, hideInUi )\r\n  // AddTransition(CompanyStatuses.AutoMigrate, CompanyStatuses.MigratingToSp, true, true, false, true);\r\n  // AddTransition(CompanyStatuses.AutoMigrate, CompanyStatuses.WaitingForOps, false, true, true, true);\r\n  {\r\n    'current': AccountStatus.AutoMigrate,\r\n    'next': AccountStatus.Migrating,\r\n    'automaticTransition': true,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': false,\r\n    'hideInUi': true\r\n  },\r\n  {\r\n    'current': AccountStatus.AutoMigrate,\r\n    'next': AccountStatus.Operations,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': true,\r\n    'hideInUi': true\r\n  },\r\n  // #endregion AutoMigrate ->\r\n\r\n  // #region Operations ->\r\n  // // (from, to, allowAdminOverride, allowWithErrors, hideInUi )\r\n  // AddTransition(CompanyStatuses.WaitingForOps, CompanyStatuses.MigratingToSp, false, true, false, true);\r\n  // AddTransition(CompanyStatuses.WaitingForOps, CompanyStatuses.Test, false, true, true);\r\n  // AddTransition(CompanyStatuses.WaitingForOps, CompanyStatuses.Open, false, true, true);\r\n  // AddTransition(CompanyStatuses.WaitingForOps, CompanyStatuses.Enrolled, false, true, true);\r\n  // MISSING: AddTransition(CompanyStatuses.WaitingForOps, CompanyStatuses.Abandoned, false, true, true);\r\n  {\r\n    'current': AccountStatus.Operations,\r\n    'next': AccountStatus.Migrating,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': false,\r\n    'hideInUi': true\r\n  },\r\n  {\r\n    'current': AccountStatus.Operations,\r\n    'next': AccountStatus.Test,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': true,\r\n    'hideInUi': false\r\n  },\r\n  {\r\n    'current': AccountStatus.Operations,\r\n    'next': AccountStatus.Open,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': true,\r\n    'hideInUi': false\r\n  },\r\n  {\r\n    'current': AccountStatus.Operations,\r\n    'next': AccountStatus.Enrolled,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': true,\r\n    'hideInUi': false\r\n  },\r\n  // TODO: Add to server!\r\n  {\r\n    'current': AccountStatus.Operations,\r\n    'next': AccountStatus.Abandoned,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': true,\r\n    'hideInUi': false\r\n  },\r\n  // #endregion Operations ->\r\n\r\n  // #region Migrating ->\r\n  // // (from, to, allowAdminOverride, allowWithErrors, hideInUi )\r\n  // AddTransition(CompanyStatuses.MigratingToSp, CompanyStatuses.Enrolled, hideInUi: true);\r\n  // AddTransition(CompanyStatuses.MigratingToSp, CompanyStatuses.WaitingForOps);\r\n  {\r\n    'current': AccountStatus.Migrating,\r\n    'next': AccountStatus.Enrolled,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': false,\r\n    'allowWithErrors': false,\r\n    'hideInUi': true\r\n  },\r\n  {\r\n    'current': AccountStatus.Migrating,\r\n    'next': AccountStatus.Operations,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': false,\r\n    'allowWithErrors': false,\r\n    'hideInUi': false\r\n  },\r\n  // #endregion Migrating ->\r\n\r\n  // TODO: Add to the server!\r\n  {\r\n    'current': AccountStatus.Abandoned,\r\n    'next': AccountStatus.Operations,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': true,\r\n    'hideInUi': false\r\n  },\r\n\r\n  // TODO: Add to the server!\r\n  {\r\n    'current': AccountStatus.Test,\r\n    'next': AccountStatus.Operations,\r\n    'automaticTransition': false,\r\n    'allowAdminOverride': true,\r\n    'allowWithErrors': true,\r\n    'hideInUi': false\r\n  },\r\n];\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { addCompanyEtagResponseHeader, createOkResponse$, createNoContentResponse$, getSubFromRequest, STATUS } from './in-mem-service-utils';\nimport { AccountStatus, AccountStatusCodes, User } from '@model';\nimport { accountStateTransitions } from './in-mem-account-state-transitions';\nimport * as i0 from \"@angular/core\";\nvar InMemAccountService = /** @class */ (function () {\n    function InMemAccountService() {\n    }\n    InMemAccountService.prototype.getRequest = function (req, db) {\n        if (req.url && req.url.includes('/account/user')) {\n            return this.getUser(req, db);\n        }\n        // Account status transitions: GET `${environment.spApiRoot}/account/accountStateTransitions`\n        if (req.url && req.url.endsWith('/account/accountStateTransitions')) {\n            return this.accountStateTransitions(req);\n        }\n    };\n    InMemAccountService.prototype.postRequest = function (req, db) {\n        if (req.url && req.url.includes('/account/new')) {\n            return this.createNewAccount(req, db);\n        }\n        if (req.url && req.url.includes('/account/user')) {\n            return this.getUser(req, db);\n        }\n        return this.ifSetAccountStatusReq(req, db);\n    };\n    // simulate creating User and Company\n    InMemAccountService.prototype.createNewAccount = function (reqInfo, db) {\n        var originalRequest = reqInfo.req;\n        var _a = originalRequest.body, company = _a.company, user = _a.user, householdFilers = _a.householdFilers, stats = _a.stats;\n        db.CompanyVersion[company.id] = 0; // force version of new company to be 0.\n        db.Company.push(company);\n        db.HouseholdFilers.push(householdFilers);\n        db.Stats.push(stats);\n        db.User.push(user);\n        var headers = addCompanyEtagResponseHeader(db, company.id);\n        // return createOkResponse$(reqInfo, originalRequest.body); // alpha.2 - must return a ChangeSet in the body\n        return createNoContentResponse$(reqInfo, headers); // alpha.3 - not necessary if no changes to request ChangeSet.\n    };\n    InMemAccountService.prototype.getUser = function (req, db) {\n        var oidcSub = getSubFromRequest(req);\n        var user = oidcSub && db.User.find(function (u) { return u.oidcSub === oidcSub; });\n        if (!user && oidcSub) {\n            // Hey, we're mocking here!  Maybe it's a made-up new account. Look for a user name match.\n            var username_1 = oidcSub.substring(oidcSub.indexOf(':') + 1).toLowerCase(); // everything after the colon.\n            user = db.User.find(function (u) { return u.username.toLowerCase() === username_1; });\n            if (!user && /@surepayroll.com$/i.test(username_1)) {\n                // A SurePayroll admin who isn't in the db.\n                // Do as the server does and fake a user for this\n                user = {\n                    // Data from 'ward.bell@surepayroll.com'\n                    id: 'eb82bed78eca487198e82bba9c8ec6e6',\n                    oidcSub: 'Ldap:bDzBC0nYjbGdgbmDRTYG',\n                    userRole: 'Administrator',\n                    username: username_1\n                };\n            }\n        }\n        if (user) {\n            return createOkResponse$(req, user);\n        }\n        else {\n            var errOptions_1 = {\n                url: req.url,\n                status: STATUS.NOT_FOUND,\n                statusText: 'Not Found',\n                body: {}\n            };\n            return req.utils.createResponse$(function () { return errOptions_1; });\n        }\n    };\n    InMemAccountService.prototype.ifSetAccountStatusReq = function (req, db) {\n        var setStatusReq = req.url.match(/\\/account\\/(.*)\\/status$/);\n        if (setStatusReq) {\n            var companyId_1 = setStatusReq[1];\n            var companyIx = db.Company.findIndex(function (c) { return c.id === companyId_1; });\n            var status_1 = (req.req.body || {}).status;\n            var replyOptions_1;\n            if (-1 === companyIx) {\n                replyOptions_1 = { status: STATUS.NOT_FOUND, statusText: 'Not Found', body: { companyId: companyId_1 } };\n            }\n            else if (!status_1) {\n                replyOptions_1 = {\n                    status: STATUS.BAD_REQUEST,\n                    statusText: 'Bad Request',\n                    body: 'no status specified'\n                };\n            }\n            else if (!AccountStatusCodes.getByValue(status_1)) {\n                replyOptions_1 = {\n                    status: STATUS.BAD_REQUEST,\n                    statusText: 'Bad Request',\n                    body: \"invalid status, \\\"\" + status_1 + \"\\\"\"\n                };\n            }\n            else {\n                replyOptions_1 = this.setAccountStatus(companyIx, db, status_1);\n            }\n            replyOptions_1.url = req.url;\n            return req.utils.createResponse$(function () { return replyOptions_1; });\n        }\n        return null; // not a setStatus request\n    };\n    InMemAccountService.prototype.setAccountStatus = function (companyIx, db, status) {\n        // Will likely get more complicated. Return w/o errors\n        db.Company[companyIx] = __assign({}, db.Company[companyIx], { status: status });\n        return { status: STATUS.OK, statusText: 'OK', body: [] };\n    };\n    InMemAccountService.prototype.accountStateTransitions = function (reqInfo) {\n        return createOkResponse$(reqInfo, accountStateTransitions);\n    };\n    InMemAccountService.ngInjectableDef = i0.defineInjectable({ factory: function InMemAccountService_Factory() { return new InMemAccountService(); }, token: InMemAccountService, providedIn: \"root\" });\n    return InMemAccountService;\n}());\nexport { InMemAccountService };\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  addCompanyEtagResponseHeader,\r\n  createOkResponse$,\r\n  createNoContentResponse$,\r\n  Db,\r\n  getSubFromRequest,\r\n  RequestInfo,\r\n  ResponseOptions,\r\n  STATUS\r\n} from './in-mem-service-utils';\r\nimport { AccountStatus, AccountStatusCodes, Company, User } from '@model';\r\nimport { accountStateTransitions, AccountStateTransition } from './in-mem-account-state-transitions';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InMemAccountService {\r\n  getRequest(req: RequestInfo, db: Db) {\r\n    if (req.url && req.url.includes('/account/user')) {\r\n      return this.getUser(req, db);\r\n    }\r\n\r\n    // Account status transitions: GET `${environment.spApiRoot}/account/accountStateTransitions`\r\n    if (req.url && req.url.endsWith('/account/accountStateTransitions')) {\r\n      return this.accountStateTransitions(req);\r\n    }\r\n  }\r\n\r\n  postRequest(req: RequestInfo, db: Db) {\r\n    if (req.url && req.url.includes('/account/new')) {\r\n      return this.createNewAccount(req, db);\r\n    }\r\n    if (req.url && req.url.includes('/account/user')) {\r\n      return this.getUser(req, db);\r\n    }\r\n    return this.ifSetAccountStatusReq(req, db);\r\n  }\r\n\r\n  // simulate creating User and Company\r\n  private createNewAccount(reqInfo: RequestInfo, db: Db) {\r\n    const originalRequest = reqInfo.req as any;\r\n    const { company, user, householdFilers, stats } = originalRequest.body;\r\n    db.CompanyVersion[company.id] = 0; // force version of new company to be 0.\r\n    db.Company.push(company);\r\n    db.HouseholdFilers.push(householdFilers);\r\n    db.Stats.push(stats);\r\n    db.User.push(user);\r\n\r\n    const headers = addCompanyEtagResponseHeader(db, company.id);\r\n\r\n    // return createOkResponse$(reqInfo, originalRequest.body); // alpha.2 - must return a ChangeSet in the body\r\n    return createNoContentResponse$(reqInfo, headers); // alpha.3 - not necessary if no changes to request ChangeSet.\r\n  }\r\n\r\n  private getUser(req: RequestInfo, db: Db) {\r\n    const oidcSub = getSubFromRequest(req);\r\n    let user = oidcSub && db.User.find(u => u.oidcSub === oidcSub);\r\n    if (!user && oidcSub) {\r\n      // Hey, we're mocking here!  Maybe it's a made-up new account. Look for a user name match.\r\n      const username = oidcSub.substring(oidcSub.indexOf(':') + 1).toLowerCase(); // everything after the colon.\r\n      user = db.User.find(u => u.username.toLowerCase() === username);\r\n\r\n      if (!user && /@surepayroll.com$/i.test(username)) {\r\n        // A SurePayroll admin who isn't in the db.\r\n        // Do as the server does and fake a user for this\r\n        user = {\r\n          // Data from 'ward.bell@surepayroll.com'\r\n          id: 'eb82bed78eca487198e82bba9c8ec6e6',\r\n          oidcSub: 'Ldap:bDzBC0nYjbGdgbmDRTYG',\r\n          userRole: 'Administrator',\r\n          username\r\n        } as User;\r\n      }\r\n    }\r\n    if (user) {\r\n      return createOkResponse$(req, user);\r\n    } else {\r\n      const errOptions: ResponseOptions = {\r\n        url: req.url,\r\n        status: STATUS.NOT_FOUND,\r\n        statusText: 'Not Found',\r\n        body: {}\r\n      };\r\n      return req.utils.createResponse$(() => errOptions);\r\n    }\r\n  }\r\n\r\n  private ifSetAccountStatusReq(req: RequestInfo, db: Db) {\r\n    const setStatusReq = req.url.match(/\\/account\\/(.*)\\/status$/);\r\n    if (setStatusReq) {\r\n      const companyId = setStatusReq[1];\r\n      const companyIx = db.Company.findIndex(c => c.id === companyId);\r\n      const status: AccountStatus = ((req.req as any).body || {}).status;\r\n      let replyOptions: ResponseOptions;\r\n      if (-1 === companyIx) {\r\n        replyOptions = { status: STATUS.NOT_FOUND, statusText: 'Not Found', body: { companyId } };\r\n      } else if (!status) {\r\n        replyOptions = {\r\n          status: STATUS.BAD_REQUEST,\r\n          statusText: 'Bad Request',\r\n          body: 'no status specified'\r\n        };\r\n      } else if (!AccountStatusCodes.getByValue(status)) {\r\n        replyOptions = {\r\n          status: STATUS.BAD_REQUEST,\r\n          statusText: 'Bad Request',\r\n          body: `invalid status, \"${status}\"`\r\n        };\r\n      } else {\r\n        replyOptions = this.setAccountStatus(companyIx, db, status);\r\n      }\r\n      replyOptions.url = req.url;\r\n      return req.utils.createResponse$(() => replyOptions);\r\n    }\r\n    return null; // not a setStatus request\r\n  }\r\n\r\n  private setAccountStatus(companyIx: number, db: Db, status: AccountStatus): ResponseOptions {\r\n    // Will likely get more complicated. Return w/o errors\r\n    db.Company[companyIx] = { ...db.Company[companyIx], status: status as AccountStatus };\r\n    return { status: STATUS.OK, statusText: 'OK', body: [] as any };\r\n  }\r\n\r\n  private accountStateTransitions(reqInfo: RequestInfo) {\r\n    return createOkResponse$(reqInfo, accountStateTransitions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { createOkResponse$, Db, RequestInfo } from './in-mem-service-utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InMemAddressValidatorService {\r\n  getRequest(req: RequestInfo, db: Db) {\r\n    if (req.url && req.url.includes('taxapi/address')) {\r\n      const body = (<any>req.req).body;\r\n      const zip = body.zip;\r\n      const state = body.state;\r\n\r\n      return this.getAddressesList(req, db, state, zip);\r\n    }\r\n  }\r\n\r\n  private getAddressesList(req: RequestInfo, db: Db, state: string, zip: string) {\r\n    const body = [\r\n      {\r\n        city: 'New York',\r\n        state: 'NY',\r\n        zip: '10012',\r\n        county: '',\r\n        addressLine1: '77 E Houston St',\r\n        addressLine2: '',\r\n        geoCode: 'NY0000001',\r\n        schoolDistrict: 0,\r\n        schoolDistrictName: null,\r\n        psdCode: 0\r\n      },\r\n      {\r\n        city: 'New York',\r\n        state: 'NY',\r\n        zip: '10012',\r\n        county: '',\r\n        addressLine1: '77 W Houston St',\r\n        addressLine2: '',\r\n        geoCode: 'NY0000002',\r\n        schoolDistrict: 0,\r\n        schoolDistrictName: null,\r\n        psdCode: 0\r\n      },\r\n      // Demonstrate a difference only in county\r\n      {\r\n        city: 'Philadelphia',\r\n        state: 'PA',\r\n        zip: '19132-1813',\r\n        county: 'County A',\r\n        addressLine1: '3111 West Lehigh Avenue',\r\n        addressLine2: '',\r\n        geoCode: 'PA0000001',\r\n        schoolDistrict: 0,\r\n        schoolDistrictName: null,\r\n        psdCode: 0\r\n      },\r\n      {\r\n        city: 'Philadelphia',\r\n        state: 'PA',\r\n        zip: '19132-1813',\r\n        county: 'County B',\r\n        addressLine1: '3111 West Lehigh Avenue',\r\n        addressLine2: '',\r\n        geoCode: 'PA0000002',\r\n        schoolDistrict: 0,\r\n        schoolDistrictName: null,\r\n        psdCode: 0\r\n      },\r\n      {\r\n        city: 'Collegeville',\r\n        state: 'PA',\r\n        zip: '19426',\r\n        county: '',\r\n        addressLine1: '595 Gravel Pike',\r\n        addressLine2: '',\r\n        geoCode: 'PA0000003',\r\n        schoolDistrict: 67900,\r\n        schoolDistrictName: 'SD Collegeville',\r\n        psdCode: 671401\r\n      },\r\n      {\r\n\r\n        city: 'Whittier',\r\n        state: 'CA',\r\n        zip: '90601',\r\n        county: '',\r\n        addressLine1: 'Turnbull Canyon Rd',\r\n        addressLine2: '',\r\n        geoCode: 'CA0000001',\r\n        schoolDistrict: 0,\r\n        schoolDistrictName: null,\r\n        psdCode: 0\r\n      },\r\n      {\r\n        city: 'Fullerton',\r\n        state: 'CA',\r\n        zip: '92832',\r\n        county: '',\r\n        addressLine1: '321 E Chapman Ave',\r\n        addressLine2: '',\r\n        geoCode: 'CA0000002',\r\n        schoolDistrict: 67900,\r\n        schoolDistrictName: 'Fullerton SD',\r\n        psdCode: 671401\r\n      },\r\n      {\r\n        city: 'Berkeley',\r\n        state: 'CA',\r\n        zip: '94706',\r\n        county: '',\r\n        addressLine1: '2020 Channing Way',\r\n        addressLine2: '',\r\n        geoCode: 'CA0000003',\r\n        schoolDistrict: 0,\r\n        schoolDistrictName: null,\r\n        psdCode: 0\r\n      },\r\n      {\r\n\r\n        city: 'Las Vegas',\r\n        state: 'NV',\r\n        zip: '89109',\r\n        county: '',\r\n        addressLine1: '115 E Tropicana Ave',\r\n        addressLine2: '',\r\n        geoCode: 'NV0000001',\r\n        schoolDistrict: 0,\r\n        schoolDistrictName: null,\r\n        psdCode: 0\r\n      },\r\n      {\r\n        city: 'Las Vegas',\r\n        state: 'NV',\r\n        zip: '89108',\r\n        county: '',\r\n        addressLine1: '1951 N Jones Blvd',\r\n        addressLine2: '',\r\n        geoCode: 'NV0000002',\r\n        schoolDistrict: 0,\r\n        schoolDistrictName: null,\r\n        psdCode: 0\r\n      }].filter(e => e.zip === zip && e.state === state);\r\n\r\n    return createOkResponse$(req, body);\r\n  }\r\n}\r\n","import { createOkResponse$ } from './in-mem-service-utils';\nimport * as i0 from \"@angular/core\";\nvar InMemAddressValidatorService = /** @class */ (function () {\n    function InMemAddressValidatorService() {\n    }\n    InMemAddressValidatorService.prototype.getRequest = function (req, db) {\n        if (req.url && req.url.includes('taxapi/address')) {\n            var body = req.req.body;\n            var zip = body.zip;\n            var state = body.state;\n            return this.getAddressesList(req, db, state, zip);\n        }\n    };\n    InMemAddressValidatorService.prototype.getAddressesList = function (req, db, state, zip) {\n        var body = [\n            {\n                city: 'New York',\n                state: 'NY',\n                zip: '10012',\n                county: '',\n                addressLine1: '77 E Houston St',\n                addressLine2: '',\n                geoCode: 'NY0000001',\n                schoolDistrict: 0,\n                schoolDistrictName: null,\n                psdCode: 0\n            },\n            {\n                city: 'New York',\n                state: 'NY',\n                zip: '10012',\n                county: '',\n                addressLine1: '77 W Houston St',\n                addressLine2: '',\n                geoCode: 'NY0000002',\n                schoolDistrict: 0,\n                schoolDistrictName: null,\n                psdCode: 0\n            },\n            // Demonstrate a difference only in county\n            {\n                city: 'Philadelphia',\n                state: 'PA',\n                zip: '19132-1813',\n                county: 'County A',\n                addressLine1: '3111 West Lehigh Avenue',\n                addressLine2: '',\n                geoCode: 'PA0000001',\n                schoolDistrict: 0,\n                schoolDistrictName: null,\n                psdCode: 0\n            },\n            {\n                city: 'Philadelphia',\n                state: 'PA',\n                zip: '19132-1813',\n                county: 'County B',\n                addressLine1: '3111 West Lehigh Avenue',\n                addressLine2: '',\n                geoCode: 'PA0000002',\n                schoolDistrict: 0,\n                schoolDistrictName: null,\n                psdCode: 0\n            },\n            {\n                city: 'Collegeville',\n                state: 'PA',\n                zip: '19426',\n                county: '',\n                addressLine1: '595 Gravel Pike',\n                addressLine2: '',\n                geoCode: 'PA0000003',\n                schoolDistrict: 67900,\n                schoolDistrictName: 'SD Collegeville',\n                psdCode: 671401\n            },\n            {\n                city: 'Whittier',\n                state: 'CA',\n                zip: '90601',\n                county: '',\n                addressLine1: 'Turnbull Canyon Rd',\n                addressLine2: '',\n                geoCode: 'CA0000001',\n                schoolDistrict: 0,\n                schoolDistrictName: null,\n                psdCode: 0\n            },\n            {\n                city: 'Fullerton',\n                state: 'CA',\n                zip: '92832',\n                county: '',\n                addressLine1: '321 E Chapman Ave',\n                addressLine2: '',\n                geoCode: 'CA0000002',\n                schoolDistrict: 67900,\n                schoolDistrictName: 'Fullerton SD',\n                psdCode: 671401\n            },\n            {\n                city: 'Berkeley',\n                state: 'CA',\n                zip: '94706',\n                county: '',\n                addressLine1: '2020 Channing Way',\n                addressLine2: '',\n                geoCode: 'CA0000003',\n                schoolDistrict: 0,\n                schoolDistrictName: null,\n                psdCode: 0\n            },\n            {\n                city: 'Las Vegas',\n                state: 'NV',\n                zip: '89109',\n                county: '',\n                addressLine1: '115 E Tropicana Ave',\n                addressLine2: '',\n                geoCode: 'NV0000001',\n                schoolDistrict: 0,\n                schoolDistrictName: null,\n                psdCode: 0\n            },\n            {\n                city: 'Las Vegas',\n                state: 'NV',\n                zip: '89108',\n                county: '',\n                addressLine1: '1951 N Jones Blvd',\n                addressLine2: '',\n                geoCode: 'NV0000002',\n                schoolDistrict: 0,\n                schoolDistrictName: null,\n                psdCode: 0\n            }\n        ].filter(function (e) { return e.zip === zip && e.state === state; });\n        return createOkResponse$(req, body);\n    };\n    InMemAddressValidatorService.ngInjectableDef = i0.defineInjectable({ factory: function InMemAddressValidatorService_Factory() { return new InMemAddressValidatorService(); }, token: InMemAddressValidatorService, providedIn: \"root\" });\n    return InMemAddressValidatorService;\n}());\nexport { InMemAddressValidatorService };\n","import { Injectable } from '@angular/core';\r\nimport { Company, User } from '@model';\r\nimport { createOkResponse$, Db, RequestInfo } from './in-mem-service-utils';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class InMemAdminService {\r\n\r\n  getRequest(req: RequestInfo, db: Db) {\r\n    if (req.url && req.url.includes('/admin/accountquery')) {\r\n      return this.getAccountList(req, db);\r\n    }\r\n  }\r\n\r\n  private getAccountList(req: RequestInfo, db: Db) {\r\n    let rows = db.User.map(u => {\r\n      const c = db.Company.find(co => co.id === u.companyId);\r\n      return {\r\n        bcl: c.bcl,\r\n        companyId: c.id,\r\n        dbaName: c.name,\r\n        email: u.email,\r\n        firstName: u.firstName,\r\n        lastName: u.lastName,\r\n        legalName: c.legalName,\r\n        phone: u.phone,\r\n        startDate: c.enrollmentStartDate,\r\n        status: c.status,\r\n        userId: u.id,\r\n        username: u.username\r\n      };\r\n    });\r\n\r\n    // filter rows based on query params\r\n    if (req.query.has('status')) {\r\n      const status = req.query.get('status')[0];\r\n      rows = rows.filter(r => status.includes(r.status));\r\n    }\r\n    if (req.query.has('text')) {\r\n      const text = req.query.get('text')[0].toLowerCase();\r\n      rows = rows.filter(r => r.legalName && r.legalName.toLowerCase().includes(text) ||\r\n        r.dbaName && r.dbaName.toLowerCase().includes(text) ||\r\n        r.bcl && r.bcl.toLowerCase().includes(text) ||\r\n        r.firstName && r.firstName.toLowerCase().includes(text) ||\r\n        r.lastName && r.lastName.toLowerCase().includes(text) ||\r\n        r.username && r.username.toLowerCase().includes(text));\r\n    }\r\n\r\n    // sort rows based on query params\r\n    if (req.query.has('orderBy')) {\r\n      const orderBy = req.query.get('orderBy')[0];\r\n      const orderDir = (req.query.get('orderDir') || ['asc'])[0];\r\n      const x = (orderDir === 'desc') ? -1 : 1;\r\n      if (orderBy === 'displayName') {\r\n        rows.sort((a, b) => (a.legalName || a.dbaName) > (b.legalName || b.dbaName) ? x : -x);\r\n      } else if (orderBy === 'startDate') {\r\n        rows.sort((a, b) => (new Date(a.startDate).valueOf() > new Date(b.startDate).valueOf()) ? x : -x);\r\n      } else if (orderBy === 'userFullName') {\r\n        rows.sort((a, b) => (a.firstName + ' ' + a.lastName) > (b.firstName + ' ' + b.lastName) ? x : -x);\r\n      } else {\r\n        rows.sort((a: any, b: any) => a[orderBy] > b[orderBy] ? x : -x);\r\n      }\r\n    }\r\n\r\n    const count = rows.length; // count of filtered rows\r\n\r\n    if (req.query.has('pageNumber')) {\r\n      // return a page of the filtered rows\r\n      const pageNumber = +req.query.get('pageNumber')[0];\r\n      const pageSize = +(req.query.get('pageSize') || ['20'])[0];\r\n      const start = Math.max(0, pageNumber * pageSize);\r\n      rows = rows.slice(start, start + pageSize);\r\n    }\r\n\r\n    return createOkResponse$(req, { count, rows });\r\n  }\r\n}\r\n","import { createOkResponse$ } from './in-mem-service-utils';\nimport * as i0 from \"@angular/core\";\nvar InMemAdminService = /** @class */ (function () {\n    function InMemAdminService() {\n    }\n    InMemAdminService.prototype.getRequest = function (req, db) {\n        if (req.url && req.url.includes('/admin/accountquery')) {\n            return this.getAccountList(req, db);\n        }\n    };\n    InMemAdminService.prototype.getAccountList = function (req, db) {\n        var rows = db.User.map(function (u) {\n            var c = db.Company.find(function (co) { return co.id === u.companyId; });\n            return {\n                bcl: c.bcl,\n                companyId: c.id,\n                dbaName: c.name,\n                email: u.email,\n                firstName: u.firstName,\n                lastName: u.lastName,\n                legalName: c.legalName,\n                phone: u.phone,\n                startDate: c.enrollmentStartDate,\n                status: c.status,\n                userId: u.id,\n                username: u.username\n            };\n        });\n        // filter rows based on query params\n        if (req.query.has('status')) {\n            var status_1 = req.query.get('status')[0];\n            rows = rows.filter(function (r) { return status_1.includes(r.status); });\n        }\n        if (req.query.has('text')) {\n            var text_1 = req.query.get('text')[0].toLowerCase();\n            rows = rows.filter(function (r) { return r.legalName && r.legalName.toLowerCase().includes(text_1) ||\n                r.dbaName && r.dbaName.toLowerCase().includes(text_1) ||\n                r.bcl && r.bcl.toLowerCase().includes(text_1) ||\n                r.firstName && r.firstName.toLowerCase().includes(text_1) ||\n                r.lastName && r.lastName.toLowerCase().includes(text_1) ||\n                r.username && r.username.toLowerCase().includes(text_1); });\n        }\n        // sort rows based on query params\n        if (req.query.has('orderBy')) {\n            var orderBy_1 = req.query.get('orderBy')[0];\n            var orderDir = (req.query.get('orderDir') || ['asc'])[0];\n            var x_1 = (orderDir === 'desc') ? -1 : 1;\n            if (orderBy_1 === 'displayName') {\n                rows.sort(function (a, b) { return (a.legalName || a.dbaName) > (b.legalName || b.dbaName) ? x_1 : -x_1; });\n            }\n            else if (orderBy_1 === 'startDate') {\n                rows.sort(function (a, b) { return (new Date(a.startDate).valueOf() > new Date(b.startDate).valueOf()) ? x_1 : -x_1; });\n            }\n            else if (orderBy_1 === 'userFullName') {\n                rows.sort(function (a, b) { return (a.firstName + ' ' + a.lastName) > (b.firstName + ' ' + b.lastName) ? x_1 : -x_1; });\n            }\n            else {\n                rows.sort(function (a, b) { return a[orderBy_1] > b[orderBy_1] ? x_1 : -x_1; });\n            }\n        }\n        var count = rows.length; // count of filtered rows\n        if (req.query.has('pageNumber')) {\n            // return a page of the filtered rows\n            var pageNumber = +req.query.get('pageNumber')[0];\n            var pageSize = +(req.query.get('pageSize') || ['20'])[0];\n            var start = Math.max(0, pageNumber * pageSize);\n            rows = rows.slice(start, start + pageSize);\n        }\n        return createOkResponse$(req, { count: count, rows: rows });\n    };\n    InMemAdminService.ngInjectableDef = i0.defineInjectable({ factory: function InMemAdminService_Factory() { return new InMemAdminService(); }, token: InMemAdminService, providedIn: \"root\" });\n    return InMemAdminService;\n}());\nexport { InMemAdminService };\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  addCompanyEtagResponseHeader, createOkResponse$, createBadRequestResponse$, Db,\r\n  getCurrentUserIdFromRequest, RequestInfo, ResponseOptions, STATUS\r\n} from './in-mem-service-utils';\r\nimport { Envelope, EnvelopeStatus, AccountStatus } from '@app/model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class InMemCompanyPackageService {\r\n  /** Return a package of company entity collections for a given Company id.*/\r\n  getCompanyPackage(req: RequestInfo, db: Db) {\r\n    const companyId = req.id;\r\n    if (!companyId ) {\r\n      return createBadRequestResponse$(req, {message: 'Missing companyId'});\r\n    }\r\n\r\n    const userId = getCurrentUserIdFromRequest(req, db);\r\n    if (!userId) {\r\n      return createBadRequestResponse$(req, {message: 'Missing userId'});\r\n    }\r\n\r\n    const company = db.Company.find(c => c.id === companyId);\r\n\r\n    if (!company) {\r\n      const errOptions: ResponseOptions = {\r\n        url: req.url,\r\n        status: STATUS.NOT_FOUND,\r\n        statusText: 'Not Found',\r\n        body: `Company with id='${companyId}' was not found`\r\n      };\r\n      return req.utils.createResponse$(() => errOptions);\r\n    }\r\n\r\n    const body = {\r\n      // NB: the package property names are lower camel case, as the server will send them\r\n      address: from(db.Address),\r\n      company: [company],\r\n      companyDeduction: from(db.CompanyDeduction),\r\n      companyEarning: from (db.CompanyEarning),\r\n      companyTax: from(db.CompanyTax),\r\n      employee: from(db.Employee),\r\n      employeePaymentMethod: from(db.EmployeePaymentMethod),\r\n      employeeTax: from(db.EmployeeTax),\r\n      householdFilers: from(db.HouseholdFilers),\r\n      stats: from(db.Stats),\r\n      user: from(db.User)\r\n    };\r\n\r\n    const user = body.user.find(u => u.id === userId);\r\n    if (!user) {\r\n      const errOptions: ResponseOptions = {\r\n        url: req.url,\r\n        status: STATUS.BAD_REQUEST,\r\n        statusText: 'Bad Request',\r\n        body: `User:${userId} is not a user of the company:${companyId}`\r\n      };\r\n      return req.utils.createResponse$(() => errOptions);\r\n    }\r\n    const headers = addCompanyEtagResponseHeader(db, company.id);\r\n\r\n    return createOkResponse$(req, body, headers);\r\n\r\n    function from<T extends {companyId: string}>(collection: T[]) {\r\n      return collection ? collection.filter(c => c.companyId === companyId) : [];\r\n    }\r\n  }\r\n\r\n  /** Return a package of document collections for a given Company id.*/\r\n  getDocumentPackage(req: RequestInfo, db: Db) {\r\n    const id = req.id;\r\n    const company = db.Company.find(c => c.id === id);\r\n\r\n    if (!company) {\r\n      const errOptions: ResponseOptions = {\r\n        url: req.url,\r\n        status: STATUS.NOT_FOUND,\r\n        statusText: 'Not Found',\r\n        body: `Company with id='${id}' was not found`\r\n      };\r\n      return req.utils.createResponse$(() => errOptions);\r\n    }\r\n\r\n    const body = {\r\n      // NB: the package property names are lower camel case, as the server will send them\r\n      document: from(db.Document),\r\n      envelope: from(db.Envelope),\r\n      envelopeSigner: from(db.EnvelopeSigner),\r\n    };\r\n\r\n    const signed = (<any>window).iframeEvent === 'signing_complete';\r\n    if (signed) {\r\n      body.envelope.forEach(e => (<Envelope>e).status = EnvelopeStatus.completed);\r\n      company.status = AccountStatus.Operations;\r\n    }\r\n\r\n    const headers = addCompanyEtagResponseHeader(db, company.id);\r\n\r\n    return createOkResponse$(req, body, headers);\r\n\r\n    function from(collection: { companyId: string, isRemoved: boolean }[]) {\r\n      return collection ? collection.filter(c => c.companyId === id && !c.isRemoved) : [];\r\n    }\r\n  }\r\n\r\n}\r\n","import { addCompanyEtagResponseHeader, createOkResponse$, createBadRequestResponse$, getCurrentUserIdFromRequest, STATUS } from './in-mem-service-utils';\nimport { EnvelopeStatus, AccountStatus } from '@app/model';\nimport * as i0 from \"@angular/core\";\nvar InMemCompanyPackageService = /** @class */ (function () {\n    function InMemCompanyPackageService() {\n    }\n    /** Return a package of company entity collections for a given Company id.*/\n    InMemCompanyPackageService.prototype.getCompanyPackage = function (req, db) {\n        var companyId = req.id;\n        if (!companyId) {\n            return createBadRequestResponse$(req, { message: 'Missing companyId' });\n        }\n        var userId = getCurrentUserIdFromRequest(req, db);\n        if (!userId) {\n            return createBadRequestResponse$(req, { message: 'Missing userId' });\n        }\n        var company = db.Company.find(function (c) { return c.id === companyId; });\n        if (!company) {\n            var errOptions_1 = {\n                url: req.url,\n                status: STATUS.NOT_FOUND,\n                statusText: 'Not Found',\n                body: \"Company with id='\" + companyId + \"' was not found\"\n            };\n            return req.utils.createResponse$(function () { return errOptions_1; });\n        }\n        var body = {\n            // NB: the package property names are lower camel case, as the server will send them\n            address: from(db.Address),\n            company: [company],\n            companyDeduction: from(db.CompanyDeduction),\n            companyEarning: from(db.CompanyEarning),\n            companyTax: from(db.CompanyTax),\n            employee: from(db.Employee),\n            employeePaymentMethod: from(db.EmployeePaymentMethod),\n            employeeTax: from(db.EmployeeTax),\n            householdFilers: from(db.HouseholdFilers),\n            stats: from(db.Stats),\n            user: from(db.User)\n        };\n        var user = body.user.find(function (u) { return u.id === userId; });\n        if (!user) {\n            var errOptions_2 = {\n                url: req.url,\n                status: STATUS.BAD_REQUEST,\n                statusText: 'Bad Request',\n                body: \"User:\" + userId + \" is not a user of the company:\" + companyId\n            };\n            return req.utils.createResponse$(function () { return errOptions_2; });\n        }\n        var headers = addCompanyEtagResponseHeader(db, company.id);\n        return createOkResponse$(req, body, headers);\n        function from(collection) {\n            return collection ? collection.filter(function (c) { return c.companyId === companyId; }) : [];\n        }\n    };\n    /** Return a package of document collections for a given Company id.*/\n    InMemCompanyPackageService.prototype.getDocumentPackage = function (req, db) {\n        var id = req.id;\n        var company = db.Company.find(function (c) { return c.id === id; });\n        if (!company) {\n            var errOptions_3 = {\n                url: req.url,\n                status: STATUS.NOT_FOUND,\n                statusText: 'Not Found',\n                body: \"Company with id='\" + id + \"' was not found\"\n            };\n            return req.utils.createResponse$(function () { return errOptions_3; });\n        }\n        var body = {\n            // NB: the package property names are lower camel case, as the server will send them\n            document: from(db.Document),\n            envelope: from(db.Envelope),\n            envelopeSigner: from(db.EnvelopeSigner),\n        };\n        var signed = window.iframeEvent === 'signing_complete';\n        if (signed) {\n            body.envelope.forEach(function (e) { return e.status = EnvelopeStatus.completed; });\n            company.status = AccountStatus.Operations;\n        }\n        var headers = addCompanyEtagResponseHeader(db, company.id);\n        return createOkResponse$(req, body, headers);\n        function from(collection) {\n            return collection ? collection.filter(function (c) { return c.companyId === id && !c.isRemoved; }) : [];\n        }\n    };\n    InMemCompanyPackageService.ngInjectableDef = i0.defineInjectable({ factory: function InMemCompanyPackageService_Factory() { return new InMemCompanyPackageService(); }, token: InMemCompanyPackageService, providedIn: \"root\" });\n    return InMemCompanyPackageService;\n}());\nexport { InMemCompanyPackageService };\n","import { RawDeduction } from './master-data-deductions';\r\n\r\nexport const deductionModel: RawDeduction[] = [\r\n  {\r\n    'codeTypeId': 7,\r\n    'cpdCode': '4B',\r\n    'baseAccm': '401K$ ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k Match',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBL4',\r\n    'description': 'ELIGIBLE WAGES SH 4',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 7,\r\n    'cpdCode': '4D',\r\n    'baseAccm': 'PTXRTH',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k Match',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match',\r\n    'taxDed': 'D',\r\n    'name': 'SH401R$',\r\n    'description': 'Safe Harbor Roth 401K $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 7,\r\n    'cpdCode': '4E',\r\n    'baseAccm': 'PTXRTH',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k Match',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match',\r\n    'taxDed': 'D',\r\n    'name': 'SH401R%',\r\n    'description': 'Safe Harbor Roth 401K %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 7,\r\n    'cpdCode': '4F',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k Match',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match',\r\n    'taxDed': 'D',\r\n    'name': 'TOT 4K7',\r\n    'description': 'TOTAL 401K DEDUCTION 7',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERTotalDed',\r\n    'displayName': 'TOTAL 401K DEDUCTION',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 7,\r\n    'cpdCode': '4G',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k Match',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBL7',\r\n    'description': 'COMPANY BOT TIER LIMIT 7',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERBotMatchLimit',\r\n    'displayName': 'Employer Bottom Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 7,\r\n    'cpdCode': '4H',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k Match',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTL7',\r\n    'description': 'COMPANY TOP TIER LIMIT 7',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERTopMatchLimit',\r\n    'displayName': 'Employer Top Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 7,\r\n    'cpdCode': '4I',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k Match',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match',\r\n    'taxDed': 'D',\r\n    'name': 'TIERCM7',\r\n    'description': 'COMPANY COMPARE 7 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERcalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 7,\r\n    'cpdCode': '4J',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k Match',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBM7',\r\n    'description': 'COMPANY MATCH MAX BOT 7',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERBotMatchRate',\r\n    'displayName': 'Employer Bottom Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 7,\r\n    'cpdCode': '4K',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k Match',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTM7',\r\n    'description': 'COMPANY MATCH MAX TOP 7',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERTopMatchRate',\r\n    'displayName': 'Employer Top Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 7,\r\n    'cpdCode': '4S',\r\n    'baseAccm': 'CORTHK',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k Match',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match',\r\n    'taxDed': 'D',\r\n    'name': 'COSHRTH',\r\n    'description': 'Company Match SH RTH 401K',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 8,\r\n    'cpdCode': 'KT',\r\n    'baseAccm': '401K$$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k NE',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBLA',\r\n    'description': 'ELIGIBLE WAGES SFE FALT A',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 8,\r\n    'cpdCode': 'KU',\r\n    'baseAccm': 'PTXRTH',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k NE',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'SHRNE$ ',\r\n    'description': 'SH RTH 401K Non Elective$',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 8,\r\n    'cpdCode': 'KV',\r\n    'baseAccm': 'PTXRTH',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k NE',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'SHRNE% ',\r\n    'description': 'SH RTH 401K Non Elective%',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 8,\r\n    'cpdCode': 'KW',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k NE',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'SAFEER1',\r\n    'description': 'Safe Harbor Employer Flt1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERMatchLimit',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 8,\r\n    'cpdCode': 'KZ',\r\n    'baseAccm': 'CORTHK',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor Roth 401k NE',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'COSHRNE',\r\n    'description': 'Co Contrib SH RTH 401K NE',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERMatchRate',\r\n    'displayName': 'Employer Flat Rate Wage',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 9,\r\n    'cpdCode': '3B',\r\n    'baseAccm': '401K$$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBL2',\r\n    'description': 'ELIGIBLE WAGES TIER 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 9,\r\n    'cpdCode': '3C',\r\n    'baseAccm': 'PTXRTH',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': '401KR1$',\r\n    'description': 'Roth 401K 1 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 9,\r\n    'cpdCode': '3F',\r\n    'baseAccm': 'PTXRTH',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': '401KR1%',\r\n    'description': 'Roth 401K 1 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 9,\r\n    'cpdCode': '3K',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'TOT 4K5',\r\n    'description': 'TOTAL 401K DEDUCTION 5',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERTotalDed',\r\n    'displayName': 'TOTAL 401K DEDUCTION',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 9,\r\n    'cpdCode': '3M',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBL5',\r\n    'description': 'COMPANY BOT TIER LIMIT 5',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERBotMatchLimit',\r\n    'displayName': 'Employer Bottom Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 9,\r\n    'cpdCode': '3T',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTL5',\r\n    'description': 'COMPANY TOP TIER LIMIT 5',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERTopMatchLimit',\r\n    'displayName': 'Employer Top Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 9,\r\n    'cpdCode': '3U',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'TIERCM5',\r\n    'description': 'COMPANY COMPARE 5 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERcalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 9,\r\n    'cpdCode': '3V',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBM5',\r\n    'description': 'COMPANY MATCH MAX BOT 5',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERBotMatchRate',\r\n    'displayName': 'Employer Bottom Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 9,\r\n    'cpdCode': '3W',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTM5',\r\n    'description': 'COMPANY MATCH MAX TOP 5',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERTopMatchRate',\r\n    'displayName': 'Employer Top Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 9,\r\n    'cpdCode': '3X',\r\n    'baseAccm': 'CORTHK',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'CO4KRT1',\r\n    'description': 'Company Match RTH 401K 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '31',\r\n    'baseAccm': '401K  ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': '401K 1$',\r\n    'description': '401K 1 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '33',\r\n    'baseAccm': '401K  ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': '401K 1%',\r\n    'description': '401K 1 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '34',\r\n    'baseAccm': 'CO401K',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'CO401K1',\r\n    'description': 'Company Match 401K 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '35',\r\n    'baseAccm': '401K$$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBL1',\r\n    'description': 'ELIGIBLE WAGES 1   ',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '37',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'COCALC1',\r\n    'description': 'CALCULATE COMPANY MATCH 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERCalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '38',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'TIER2 L',\r\n    'description': 'COMPANY TOP TIER LIMIT',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '39',\r\n    'baseAccm': 'SARSEP',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'SARSEPP',\r\n    'description': 'DISCONTINUED JAN 1, 1997',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '3A',\r\n    'baseAccm': 'SIMP$$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'SIMPL$$',\r\n    'description': 'SIMPLE PLAN ELIG. WAGES  ',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '3D',\r\n    'baseAccm': 'COSIMP',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'CO SIMP',\r\n    'description': 'SIMPLE PLAN COMPANY MATCH',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '3I',\r\n    'baseAccm': 'SMPIRA',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'SIMP<3%',\r\n    'description': 'SIMPLE PLAN UP TO 3%     ',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '3J',\r\n    'baseAccm': 'SMPIRA',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'SIMP>3%',\r\n    'description': 'SIMPLE PLAN ABOVE 3%     ',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '4A',\r\n    'baseAccm': 'COSRSP',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'COSRSEP',\r\n    'description': 'COMPANY MATCH SARSEPP',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '51',\r\n    'baseAccm': '457   ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'SEC457 ',\r\n    'description': 'SECTION 457 DEDUCTIONS',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '91',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'MATCH%2',\r\n    'description': 'COMPANY MATCH MAX  % 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERmatchLimit',\r\n    'displayName': 'Employer Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '93',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'COMPAR3',\r\n    'description': 'COMPANY MATCH COMPARE 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERmatchRate',\r\n    'displayName': 'Employer Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '96',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'TIER2 %',\r\n    'description': 'COMPANY TOP TIER MATCH %',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': '97',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'COMPAR4',\r\n    'description': 'COMPANY MATCH COMPARE 4',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 10,\r\n    'cpdCode': 'EQ',\r\n    'baseAccm': 'SMPCU$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'SIMCU$$',\r\n    'description': 'SIMPLE CATCH UP WAGES',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 11,\r\n    'cpdCode': '36',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTL1',\r\n    'description': 'COMPANY TOP TIER LIMIT 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERTopMatchLimit',\r\n    'displayName': 'Employer Top Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 11,\r\n    'cpdCode': '3G',\r\n    'baseAccm': '401K  ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': '401K 2$',\r\n    'description': '401K 2 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 11,\r\n    'cpdCode': '3H',\r\n    'baseAccm': '401K  ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': '401K 2%',\r\n    'description': '401K 2 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 11,\r\n    'cpdCode': '3L',\r\n    'baseAccm': 'CO401K',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'CO401K2',\r\n    'description': 'Company Match 401K 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 11,\r\n    'cpdCode': '3S',\r\n    'baseAccm': '401K$$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBL3',\r\n    'description': 'ELIGIBLE WAGES TIER 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 11,\r\n    'cpdCode': '3Y',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'TOT 4K1',\r\n    'description': 'TOTAL 401K DEDUCTION 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERTotalDed',\r\n    'displayName': 'TOTAL 401K DEDUCTION',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 11,\r\n    'cpdCode': '94',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'TIERCM1',\r\n    'description': 'COMPANY COMPARE 1 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERcalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 11,\r\n    'cpdCode': '9A',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBM1',\r\n    'description': 'COMPANY MATCH MAX BOT 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERBotMatchRate',\r\n    'displayName': 'Employer Bottom Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 11,\r\n    'cpdCode': '9B',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBL1',\r\n    'description': 'COMPANY BOT TIER LIMIT 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERBotMatchLimit',\r\n    'displayName': 'Employer Bottom Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 11,\r\n    'cpdCode': '9C',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K Tiered',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTM1',\r\n    'description': 'COMPANY MATCH MAX TOP 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERTopMatchRate',\r\n    'displayName': 'Employer Top Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 12,\r\n    'cpdCode': '31',\r\n    'baseAccm': '403B  ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '403B',\r\n    'planName': '403B',\r\n    'planDescription': '403B',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': '401K 1$',\r\n    'description': '401K 1 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 12,\r\n    'cpdCode': '33',\r\n    'baseAccm': '403B  ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '403B',\r\n    'planName': '403B',\r\n    'planDescription': '403B',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': '401K 1%',\r\n    'description': '401K 1 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 12,\r\n    'cpdCode': '34',\r\n    'baseAccm': 'CO403B',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '403B',\r\n    'planName': '403B',\r\n    'planDescription': '403B',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'CO401K1',\r\n    'description': 'Company Match 401K 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 12,\r\n    'cpdCode': '35',\r\n    'baseAccm': '403B$$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '403B',\r\n    'planName': '403B',\r\n    'planDescription': '403B',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBL1',\r\n    'description': 'ELIGIBLE WAGES 1   ',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 12,\r\n    'cpdCode': '37',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '403B',\r\n    'planName': '403B',\r\n    'planDescription': '403B',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'COCALC1',\r\n    'description': 'CALCULATE COMPANY MATCH 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERCalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 12,\r\n    'cpdCode': '91',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '403B',\r\n    'planName': '403B',\r\n    'planDescription': '403B',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'MATCH%2',\r\n    'description': 'COMPANY MATCH MAX  % 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERmatchLimit',\r\n    'displayName': 'Employer Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 12,\r\n    'cpdCode': '93',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '403B',\r\n    'planName': '403B',\r\n    'planDescription': '403B',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'COMPAR3',\r\n    'description': 'COMPANY MATCH COMPARE 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERmatchRate',\r\n    'displayName': 'Employer Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 13,\r\n    'cpdCode': '31',\r\n    'baseAccm': 'SMPIRA',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'SMPLIRA',\r\n    'planName': 'SMPLIRA',\r\n    'planDescription': 'Simple IRA',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': '401K 1$',\r\n    'description': '401K 1 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 13,\r\n    'cpdCode': '33',\r\n    'baseAccm': 'SMPIRA',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'SMPLIRA',\r\n    'planName': 'SMPLIRA',\r\n    'planDescription': 'Simple IRA',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': '401K 1%',\r\n    'description': '401K 1 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 13,\r\n    'cpdCode': '34',\r\n    'baseAccm': 'COSIMP',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'SMPLIRA',\r\n    'planName': 'SMPLIRA',\r\n    'planDescription': 'Simple IRA',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'CO401K1',\r\n    'description': 'Company Match 401K 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 13,\r\n    'cpdCode': '35',\r\n    'baseAccm': 'SIMP$$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'SMPLIRA',\r\n    'planName': 'SMPLIRA',\r\n    'planDescription': 'Simple IRA',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBL1',\r\n    'description': 'ELIGIBLE WAGES 1   ',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 13,\r\n    'cpdCode': '37',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'SMPLIRA',\r\n    'planName': 'SMPLIRA',\r\n    'planDescription': 'Simple IRA',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'COCALC1',\r\n    'description': 'CALCULATE COMPANY MATCH 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERCalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 13,\r\n    'cpdCode': '91',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'SMPLIRA',\r\n    'planName': 'SMPLIRA',\r\n    'planDescription': 'Simple IRA',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'MATCH%2',\r\n    'description': 'COMPANY MATCH MAX  % 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERmatchLimit',\r\n    'displayName': 'Employer Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 13,\r\n    'cpdCode': '93',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'SMPLIRA',\r\n    'planName': 'SMPLIRA',\r\n    'planDescription': 'Simple IRA',\r\n    'codeTypeDesc': '401k',\r\n    'taxDed': 'D',\r\n    'name': 'COMPAR3',\r\n    'description': 'COMPANY MATCH COMPARE 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERmatchRate',\r\n    'displayName': 'Employer Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 14,\r\n    'cpdCode': '3E',\r\n    'baseAccm': '401K$$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k',\r\n    'taxDed': 'D',\r\n    'name': 'RTHWAGE',\r\n    'description': 'ELIGIBLE ROTH 401K WAGES',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 14,\r\n    'cpdCode': '4T',\r\n    'baseAccm': 'CORTHK',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k',\r\n    'taxDed': 'D',\r\n    'name': 'CO4KRT2',\r\n    'description': 'Company Match RTH 401K 2',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 14,\r\n    'cpdCode': '4U',\r\n    'baseAccm': 'PTXRTH',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k',\r\n    'taxDed': 'D',\r\n    'name': '401KR2$',\r\n    'description': 'Roth 401K 2 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 14,\r\n    'cpdCode': '4V',\r\n    'baseAccm': 'PTXRTH',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k',\r\n    'taxDed': 'D',\r\n    'name': '401KR2%',\r\n    'description': 'Roth 401K 2 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 14,\r\n    'cpdCode': '95',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k',\r\n    'taxDed': 'D',\r\n    'name': 'RTHMTH2',\r\n    'description': '% CO MATCH ROTH 401K 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERmatchLimit',\r\n    'displayName': 'Employer Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 14,\r\n    'cpdCode': '9D',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k',\r\n    'taxDed': 'D',\r\n    'name': 'COCALC4',\r\n    'description': 'CALCULATE COMPANY MATCH 4',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERCalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 14,\r\n    'cpdCode': '9E',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Roth 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k',\r\n    'taxDed': 'D',\r\n    'name': 'COMPAR5',\r\n    'description': 'COMPANY MATCH COMPARE 5',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERmatchRate',\r\n    'displayName': 'Employer Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 15,\r\n    'cpdCode': 'KA',\r\n    'baseAccm': '401K$$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBL8',\r\n    'description': 'ELIGIBLE WAGES SH 8',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 15,\r\n    'cpdCode': 'KB',\r\n    'baseAccm': '401K  ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k',\r\n    'taxDed': 'D',\r\n    'name': 'SH401K$',\r\n    'description': 'SAFE HARBOR 401K $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 15,\r\n    'cpdCode': 'KC',\r\n    'baseAccm': '401K  ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k',\r\n    'taxDed': 'D',\r\n    'name': 'SH401K%',\r\n    'description': 'SAFE HARBOR 401K %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 15,\r\n    'cpdCode': 'KD',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k',\r\n    'taxDed': 'D',\r\n    'name': 'TOT 4K3',\r\n    'description': 'TOTAL 401K DEDUCTION 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERTotalDed',\r\n    'displayName': 'TOTAL 401K DEDUCTION',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 15,\r\n    'cpdCode': 'KE',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBL3',\r\n    'description': 'COMPANY BOT TIER LIMIT 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERBotMatchLimit',\r\n    'displayName': 'Employer Bottom Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 15,\r\n    'cpdCode': 'KF',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTL3',\r\n    'description': 'COMPANY TOP TIER LIMIT 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERTopMatchLimit',\r\n    'displayName': 'Employer Top Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 15,\r\n    'cpdCode': 'KG',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k',\r\n    'taxDed': 'D',\r\n    'name': 'TIERCM3',\r\n    'description': 'COMPANY COMPARE 3 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERcalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 15,\r\n    'cpdCode': 'KH',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBM3',\r\n    'description': 'COMPANY MATCH MAX BOT 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERBotMatchRate',\r\n    'displayName': 'Employer Bottom Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 15,\r\n    'cpdCode': 'KI',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTM3',\r\n    'description': 'COMPANY MATCH MAX TOP 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERTopMatchRate',\r\n    'displayName': 'Employer Top Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 15,\r\n    'cpdCode': 'KJ',\r\n    'baseAccm': 'CO401K',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k',\r\n    'taxDed': 'D',\r\n    'name': 'COSH401',\r\n    'description': 'COMPANY MATCH SAFE401K',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 16,\r\n    'cpdCode': 'KL',\r\n    'baseAccm': 'SIMP$$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SINGLE',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBL9',\r\n    'description': 'ELIGIBLE WAGES 9',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 16,\r\n    'cpdCode': 'KM',\r\n    'baseAccm': 'SIMPLE',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SINGLE',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k',\r\n    'taxDed': 'D',\r\n    'name': 'S401K $',\r\n    'description': 'Simple 401K $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 16,\r\n    'cpdCode': 'KN',\r\n    'baseAccm': 'SIMPLE',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SINGLE',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k',\r\n    'taxDed': 'D',\r\n    'name': 'S401K %',\r\n    'description': 'Simple 401K %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 16,\r\n    'cpdCode': 'KO',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SINGLE',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k',\r\n    'taxDed': 'D',\r\n    'name': 'MATCH%3',\r\n    'description': 'COMPANY MATCH MAX  % 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERMatchLimit',\r\n    'displayName': 'Employer Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 16,\r\n    'cpdCode': 'KP',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SINGLE',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k',\r\n    'taxDed': 'D',\r\n    'name': 'COMPAR6',\r\n    'description': 'COMPANY MATCH COMPARE 6',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERMatchRate',\r\n    'displayName': 'Employer Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 16,\r\n    'cpdCode': 'KQ',\r\n    'baseAccm': 'COSIMK',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SINGLE',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k',\r\n    'taxDed': 'D',\r\n    'name': 'COBENEF',\r\n    'description': 'COMPANY Simp401K BENEFIT',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 16,\r\n    'cpdCode': 'LP',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SINGLE',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k',\r\n    'taxDed': 'D',\r\n    'name': 'CO CALC',\r\n    'description': 'CALCULATE COMPANY MATCH',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERCalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 17,\r\n    'cpdCode': 'KR',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'SEP IRA',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'NOEEDEDUCT',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SEPIRA',\r\n    'planName': 'SEP IRA',\r\n    'planDescription': 'SEP IRA',\r\n    'codeTypeDesc': 'SEP IRA',\r\n    'taxDed': 'D',\r\n    'name': 'SEPIRCU',\r\n    'description': 'SEP IRA 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERMatchLimit',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 17,\r\n    'cpdCode': 'KS',\r\n    'baseAccm': 'SEPIRA',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'SEP IRA',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'NOEEDEDUCT',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SEPIRA',\r\n    'planName': 'SEP IRA',\r\n    'planDescription': 'SEP IRA',\r\n    'codeTypeDesc': 'SEP IRA',\r\n    'taxDed': 'D',\r\n    'name': 'SEP IRA',\r\n    'description': 'SEP IRA 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERMatchRate',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 18,\r\n    'cpdCode': 'N1',\r\n    'baseAccm': '401K$$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': '15    ',\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBLB',\r\n    'description': 'ELIGIBLE WAGES SFE FLAT B',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 18,\r\n    'cpdCode': 'N2',\r\n    'baseAccm': '401K  ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': '15    ',\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'SH401E$',\r\n    'description': 'SAFE HARBOR EMPLOYEE $ ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 18,\r\n    'cpdCode': 'N3',\r\n    'baseAccm': '401K  ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': '15    ',\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'SH401E%',\r\n    'description': 'SAFE HARBOR EMPLOYEE %   ',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 18,\r\n    'cpdCode': 'N4',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': '15    ',\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'SAFEER2',\r\n    'description': 'Safe Harbor Employer Flt2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERMatchLimit',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 18,\r\n    'cpdCode': 'N5',\r\n    'baseAccm': 'CO401K',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': '15    ',\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'COSHNE ',\r\n    'description': 'Safe Harb Flat Rate Bnft',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERMatchRate',\r\n    'displayName': 'Employer Flat Rate Wage',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 19,\r\n    'cpdCode': 'N6',\r\n    'baseAccm': 'SIMP$$',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': '16    ',\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBLC',\r\n    'description': 'ELIGI WAGES SIMP401 FLAT ',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 19,\r\n    'cpdCode': 'N7',\r\n    'baseAccm': 'SIMPLE',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': '16    ',\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'S4OPT2$',\r\n    'description': 'SIMPLE 401k EMPLOYEE $  ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 19,\r\n    'cpdCode': 'N8',\r\n    'baseAccm': 'SIMPLE',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': '16    ',\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'S4OPT2%',\r\n    'description': 'SIMPLE 401K EMPLOYEE %   ',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 19,\r\n    'cpdCode': 'N9',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': '16    ',\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'S4 ER  ',\r\n    'description': 'Simple 401K Employer Flat',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERMatchLimit',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 19,\r\n    'cpdCode': 'NA',\r\n    'baseAccm': 'COSIMK',\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': '16    ',\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k Non-Elective',\r\n    'taxDed': 'D',\r\n    'name': 'CO SMP4',\r\n    'description': 'Simple Flat Rate Bnft',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'RETIREMENT',\r\n    'deductionPlanGroup': 'Retirement Plans',\r\n    'parameterName': 'dERMatchRate',\r\n    'displayName': 'Employer Flat Rate Wage',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 20,\r\n    'cpdCode': '40',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Medical',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MEDICAL',\r\n    'planName': 'Medical',\r\n    'planDescription': 'Medical',\r\n    'codeTypeDesc': 'Medical',\r\n    'taxDed': 'D',\r\n    'name': 'CAFE 1 ',\r\n    'description': 'CAFETERIA PLAN DEDUCT 1',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 20,\r\n    'cpdCode': '4R',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Medical',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MEDICAL',\r\n    'planName': 'Medical',\r\n    'planDescription': 'Medical',\r\n    'codeTypeDesc': 'Medical',\r\n    'taxDed': 'D',\r\n    'name': 'CAFE 1A',\r\n    'description': 'CAFETERIA PLAN DEDUCT 1A',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 21,\r\n    'cpdCode': '42',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Dental',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'DENTAL',\r\n    'planName': 'Dental',\r\n    'planDescription': 'Dental',\r\n    'codeTypeDesc': 'Dental',\r\n    'taxDed': 'D',\r\n    'name': 'DENTAL%',\r\n    'description': 'PRE-TAX DENTAL PLAN % ',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 21,\r\n    'cpdCode': '48',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Dental',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'DENTAL',\r\n    'planName': 'Dental',\r\n    'planDescription': 'Dental',\r\n    'codeTypeDesc': 'Dental',\r\n    'taxDed': 'D',\r\n    'name': 'DENTAL$',\r\n    'description': 'PRE-TAX DENTAL PLAN $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 22,\r\n    'cpdCode': '43',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Vision',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'VISION',\r\n    'planName': 'Vision',\r\n    'planDescription': 'Vision',\r\n    'codeTypeDesc': 'Vision',\r\n    'taxDed': 'D',\r\n    'name': 'VISION$',\r\n    'description': 'PRE-TAX VISION $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 22,\r\n    'cpdCode': '44',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Vision',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'VISION',\r\n    'planName': 'Vision',\r\n    'planDescription': 'Vision',\r\n    'codeTypeDesc': 'Vision',\r\n    'taxDed': 'D',\r\n    'name': 'VISION%',\r\n    'description': 'PRE-TAX VISION %',\r\n    'howType': '%',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': '3N',\r\n    'baseAccm': 'COMSA ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'MSA  ER',\r\n    'description': 'MEDICAL SAVINGS ACCT. ER',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': '45',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'PRETX1$',\r\n    'description': 'PRE-TAX MISC 1 $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': '47',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'PRETX1%',\r\n    'description': 'PRE-TAX MISC 1 % ',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': '57',\r\n    'baseAccm': 'HOUSNG',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'HOUSING',\r\n    'description': 'CLERGY HOUSING ALLOWANCE',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': '59',\r\n    'baseAccm': 'MEALNT',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'MEALSNT',\r\n    'description': 'MEALS DEDUCT NON-TAXABLE',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': 'GH',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'PRETX2$',\r\n    'description': 'PRE-TAX MISC 2 $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': 'GI',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'PRETX2%',\r\n    'description': 'PRE-TAX MISC 2 %',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': 'GJ',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'PRETX3$',\r\n    'description': 'PRE-TAX MISC 3 $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': 'GK',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'PRETX3%',\r\n    'description': 'PRE-TAX MISC 3 %',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': 'GL',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'PRETX4$',\r\n    'description': 'PRE-TAX MISC 4 $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': 'GM',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'PRETX4%',\r\n    'description': 'PRE-TAX MISC 4 %',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': 'GN',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'PRETX5$',\r\n    'description': 'PRE-TAX MISC 5 $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 23,\r\n    'cpdCode': 'GO',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'PRETX5%',\r\n    'description': 'PRE-TAX MISC 5 %',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 24,\r\n    'cpdCode': '41',\r\n    'baseAccm': 'CAFE2 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'CAFE 2 deduction',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'CAFE',\r\n    'planName': 'Cafe',\r\n    'planDescription': 'CAFE 2 deduction',\r\n    'codeTypeDesc': 'CAFE 2 deduction',\r\n    'taxDed': 'D',\r\n    'name': 'CAFE 2 ',\r\n    'description': 'CAFETERIA PLAN',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 24,\r\n    'cpdCode': '46',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeType': 'CAFE 2 deduction',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'CAFE',\r\n    'planName': 'Cafe',\r\n    'planDescription': 'CAFE 2 deduction',\r\n    'codeTypeDesc': 'CAFE 2 deduction',\r\n    'taxDed': 'D',\r\n    'name': 'MED 125',\r\n    'description': 'MED 125 MEDICAL PLAN     ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'PRETAXINS',\r\n    'deductionPlanGroup': 'Pre-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 30,\r\n    'cpdCode': '15',\r\n    'baseAccm': 'HEALTH',\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeType': 'Medical',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MEDICAL',\r\n    'planName': 'Medical',\r\n    'planDescription': 'Medical',\r\n    'codeTypeDesc': 'Medical',\r\n    'taxDed': 'D',\r\n    'name': 'MEDCAL1',\r\n    'description': 'MEDICAL INSURANCE 1',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'POSTTAXINS',\r\n    'deductionPlanGroup': 'Post-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 30,\r\n    'cpdCode': '16',\r\n    'baseAccm': 'HEALTH',\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeType': 'Medical',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MEDICAL',\r\n    'planName': 'Medical',\r\n    'planDescription': 'Medical',\r\n    'codeTypeDesc': 'Medical',\r\n    'taxDed': 'D',\r\n    'name': 'MEDCAL2',\r\n    'description': 'MEDICAL INSURANCE 2',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'POSTTAXINS',\r\n    'deductionPlanGroup': 'Post-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 31,\r\n    'cpdCode': '19',\r\n    'baseAccm': 'HEALTH',\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeType': 'Dental',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'DENTAL',\r\n    'planName': 'Dental',\r\n    'planDescription': 'Dental',\r\n    'codeTypeDesc': 'Dental',\r\n    'taxDed': 'D',\r\n    'name': 'DENTAL ',\r\n    'description': 'DENTAL INSURANCE  ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'POSTTAXINS',\r\n    'deductionPlanGroup': 'Post-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 32,\r\n    'cpdCode': 'B0',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeType': 'Vision',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'VISION',\r\n    'planName': 'Vision',\r\n    'planDescription': 'Vision',\r\n    'codeTypeDesc': 'Vision',\r\n    'taxDed': 'D',\r\n    'name': 'VISION ',\r\n    'description': 'VISION DEDUCTION',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'POSTTAXINS',\r\n    'deductionPlanGroup': 'Post-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 33,\r\n    'cpdCode': '17',\r\n    'baseAccm': 'LIFEIN',\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeType': 'Life Insurance',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'LIFEINS',\r\n    'planName': 'LifeIns',\r\n    'planDescription': 'Life Insurance',\r\n    'codeTypeDesc': 'Life Insurance',\r\n    'taxDed': 'D',\r\n    'name': 'LIFEINS',\r\n    'description': 'LIFE INSURANCE ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'POSTTAXINS',\r\n    'deductionPlanGroup': 'Post-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 34,\r\n    'cpdCode': 'H0',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'INSURN1',\r\n    'description': 'MISC INSURANCE 1',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'POSTTAXINS',\r\n    'deductionPlanGroup': 'Post-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 34,\r\n    'cpdCode': 'H1',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'INSURN2',\r\n    'description': 'MISC INSURANCE 2  ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'POSTTAXINS',\r\n    'deductionPlanGroup': 'Post-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 34,\r\n    'cpdCode': 'H2',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'INSURN3',\r\n    'description': 'MISC INSURANCE 3    ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'POSTTAXINS',\r\n    'deductionPlanGroup': 'Post-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 34,\r\n    'cpdCode': 'H3',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'INSURN4',\r\n    'description': 'MISC INSURANCE 4   ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'POSTTAXINS',\r\n    'deductionPlanGroup': 'Post-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 34,\r\n    'cpdCode': 'H4',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISC',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'taxDed': 'D',\r\n    'name': 'INSURN5',\r\n    'description': 'MISC INSURANCE 5    ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'POSTTAXINS',\r\n    'deductionPlanGroup': 'Post-Tax Insurance Premiums',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 40,\r\n    'cpdCode': '4L',\r\n    'baseAccm': 'CAFE7 ',\r\n    'codeGroupId': 4,\r\n    'codeGroup': 'Flexible Spending Accounts (FSA)',\r\n    'codeType': 'Dependent Care',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'DEPENDENT',\r\n    'planName': 'FlexDP',\r\n    'planDescription': 'Dependent Care',\r\n    'codeTypeDesc': 'Dependent Care',\r\n    'taxDed': 'D',\r\n    'name': 'FLXDP$ ',\r\n    'description': 'FLEX DEPENDANT CARE $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'FSA',\r\n    'deductionPlanGroup': 'Flexible Spending Accounts (FSA)',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 40,\r\n    'cpdCode': '4M',\r\n    'baseAccm': 'CAFE7 ',\r\n    'codeGroupId': 4,\r\n    'codeGroup': 'Flexible Spending Accounts (FSA)',\r\n    'codeType': 'Dependent Care',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'DEPENDENT',\r\n    'planName': 'FlexDP',\r\n    'planDescription': 'Dependent Care',\r\n    'codeTypeDesc': 'Dependent Care',\r\n    'taxDed': 'D',\r\n    'name': 'FLXDP% ',\r\n    'description': 'FLEX DEPENDANT CARE %',\r\n    'howType': '%',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'FSA',\r\n    'deductionPlanGroup': 'Flexible Spending Accounts (FSA)',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 41,\r\n    'cpdCode': '4O',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 4,\r\n    'codeGroup': 'Flexible Spending Accounts (FSA)',\r\n    'codeType': 'Transportation',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'TRANSPO',\r\n    'planName': 'Trans',\r\n    'planDescription': 'Transportation',\r\n    'codeTypeDesc': 'Transportation',\r\n    'taxDed': 'D',\r\n    'name': 'FLXTR$ ',\r\n    'description': 'FLEX TRANSPORTATION $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'FSA',\r\n    'deductionPlanGroup': 'Flexible Spending Accounts (FSA)',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 41,\r\n    'cpdCode': '4Q',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 4,\r\n    'codeGroup': 'Flexible Spending Accounts (FSA)',\r\n    'codeType': 'Transportation',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'TRANSPO',\r\n    'planName': 'Trans',\r\n    'planDescription': 'Transportation',\r\n    'codeTypeDesc': 'Transportation',\r\n    'taxDed': 'D',\r\n    'name': 'FLXTR% ',\r\n    'description': 'FLEX TRANSPORTATION %',\r\n    'howType': '%',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'FSA',\r\n    'deductionPlanGroup': 'Flexible Spending Accounts (FSA)',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 43,\r\n    'cpdCode': '28',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAMAT5',\r\n    'description': 'HSA COMPANY MATCH 5',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERmatchLimit',\r\n    'displayName': 'HSA COMPANY MATCH 5',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 43,\r\n    'cpdCode': '32',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAMAT6',\r\n    'description': 'HSA COMPANY MATCH 6',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERMatch6',\r\n    'displayName': 'HSA COMPANY MATCH 6',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 43,\r\n    'cpdCode': '3O',\r\n    'baseAccm': 'COHSA ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'COHSA1 ',\r\n    'description': 'CO HSA CONTRIB 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'CO HSA CONTRIB 2',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 43,\r\n    'cpdCode': '3P',\r\n    'baseAccm': 'HSA   ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAPS1$',\r\n    'description': 'POSTTAX HSA EE CONTRIB 1$',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'POSTTAX HSA EE CONTRIB 1',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 43,\r\n    'cpdCode': '3Q',\r\n    'baseAccm': 'HSA   ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAPS1%',\r\n    'description': 'POSTTAX HSA EE CONTRIB 1%',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'POSTTAX HSA EE CONTRIB 1',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 43,\r\n    'cpdCode': '3R',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAWAG2',\r\n    'description': 'HSA EE WAGES 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'HSA EMPLOYEE WAGES 2',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 43,\r\n    'cpdCode': '3Z',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSACOM2',\r\n    'description': 'HSA COMPANY COMPARE 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERComp2',\r\n    'displayName': 'HSA COMPANY COMPARE 2',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 43,\r\n    'cpdCode': '87',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAMAT4',\r\n    'description': 'HSA COMPANY MATCH 4',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERmatchRate',\r\n    'displayName': 'HSA COMPANY MATCH 4',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 43,\r\n    'cpdCode': '88',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSACON2',\r\n    'description': 'HSA COMPANY CONTRIB 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERcalcMatchRate',\r\n    'displayName': 'HSA COMPANY CONTRIB 2',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 50,\r\n    'cpdCode': 'C0',\r\n    'baseAccm': 'CHSUPP',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Child Support',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'CHLDSUP',\r\n    'planName': 'ChldSup',\r\n    'planDescription': 'Child Support',\r\n    'codeTypeDesc': 'Child Support',\r\n    'taxDed': 'D',\r\n    'name': 'CHDSUP1',\r\n    'description': 'CHILD SUPPORT W/ GOAL',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 50,\r\n    'cpdCode': 'C1',\r\n    'baseAccm': 'CHSUPP',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Child Support',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'CHLDSUP',\r\n    'planName': 'ChldSup',\r\n    'planDescription': 'Child Support',\r\n    'codeTypeDesc': 'Child Support',\r\n    'taxDed': 'D',\r\n    'name': 'CHDSUP2',\r\n    'description': 'CHILD SUPPORT W/ GOAL 2 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 50,\r\n    'cpdCode': 'C2',\r\n    'baseAccm': 'CHSUPP',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Child Support',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'CHLDSUP',\r\n    'planName': 'ChldSup',\r\n    'planDescription': 'Child Support',\r\n    'codeTypeDesc': 'Child Support',\r\n    'taxDed': 'D',\r\n    'name': 'CHDSUP3',\r\n    'description': 'CHILD SUPPORT W/ GOAL 3 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 50,\r\n    'cpdCode': 'C3',\r\n    'baseAccm': 'CHSUPP',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Child Support',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'CHLDSUP',\r\n    'planName': 'ChldSup',\r\n    'planDescription': 'Child Support',\r\n    'codeTypeDesc': 'Child Support',\r\n    'taxDed': 'D',\r\n    'name': 'CHDSUP4',\r\n    'description': 'CHILD SUPPORT W/ GOAL 4 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 50,\r\n    'cpdCode': 'C4',\r\n    'baseAccm': 'CHSUPP',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Child Support',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'CHLDSUP',\r\n    'planName': 'ChldSup',\r\n    'planDescription': 'Child Support',\r\n    'codeTypeDesc': 'Child Support',\r\n    'taxDed': 'D',\r\n    'name': 'CHDSUP5',\r\n    'description': 'CHILD SUPPORT W/ GOAL 5 $',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 50,\r\n    'cpdCode': 'C5',\r\n    'baseAccm': 'CHSUPP',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Child Support',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'CHLDSUP',\r\n    'planName': 'ChldSup',\r\n    'planDescription': 'Child Support',\r\n    'codeTypeDesc': 'Child Support',\r\n    'taxDed': 'D',\r\n    'name': 'CHDSUP6',\r\n    'description': 'CHILD SUPPORT W/ GOAL 6 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 50,\r\n    'cpdCode': 'C6',\r\n    'baseAccm': 'CHSUPP',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Child Support',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'CHLDSUP',\r\n    'planName': 'ChldSup',\r\n    'planDescription': 'Child Support',\r\n    'codeTypeDesc': 'Child Support',\r\n    'taxDed': 'D',\r\n    'name': 'CHDSUP7',\r\n    'description': 'CHILD SUPPORT W/ GOAL 7 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 50,\r\n    'cpdCode': 'C7',\r\n    'baseAccm': 'CHSUPP',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Child Support',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'CHLDSUP',\r\n    'planName': 'ChldSup',\r\n    'planDescription': 'Child Support',\r\n    'codeTypeDesc': 'Child Support',\r\n    'taxDed': 'D',\r\n    'name': 'CHDSUP8',\r\n    'description': 'CHILD SUPPORT W/ GOAL 8 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 50,\r\n    'cpdCode': 'C8',\r\n    'baseAccm': 'CHSUPP',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Child Support',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'CHLDSUP',\r\n    'planName': 'ChldSup',\r\n    'planDescription': 'Child Support',\r\n    'codeTypeDesc': 'Child Support',\r\n    'taxDed': 'D',\r\n    'name': 'CHDSUP9',\r\n    'description': 'CHILD SUPPORT W/ GOAL 9 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 50,\r\n    'cpdCode': 'C9',\r\n    'baseAccm': 'CHSUPP',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Child Support',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'CHLDSUP',\r\n    'planName': 'ChldSup',\r\n    'planDescription': 'Child Support',\r\n    'codeTypeDesc': 'Child Support',\r\n    'taxDed': 'D',\r\n    'name': 'CHDSUPA',\r\n    'description': 'CHILD SUPPORT W/ GOAL A $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': '05',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN G1',\r\n    'description': 'GARNISH GOAL 1 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'G1',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN G2',\r\n    'description': 'GARNISH GOAL 2 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'G2',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN G3',\r\n    'description': 'GARNISH GOAL 3 $     ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'G3',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN G4',\r\n    'description': 'GARNISH GOAL 4 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'G4',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN G5',\r\n    'description': 'GARNISH GOAL 5 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'G5',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN G6',\r\n    'description': 'GARNISH GOAL 6 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'G6',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN G7',\r\n    'description': 'GARNISH GOAL 7 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'G7',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN G8',\r\n    'description': 'GARNISH GOAL 8 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'G8',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN G9',\r\n    'description': 'GARNISH GOAL 9 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'G9',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN GA',\r\n    'description': 'GARNISH GOAL A $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'GB',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN GB',\r\n    'description': 'GARNISH GOAL B $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'GC',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN GC',\r\n    'description': 'GARNISH GOAL C $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'GD',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN GD',\r\n    'description': 'GARNISH GOAL D $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'GE',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN GE',\r\n    'description': 'GARNISH GOAL E $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'GF',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN GF',\r\n    'description': 'GARNISH GOAL F$',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 51,\r\n    'cpdCode': 'GG',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNWGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment with Goal',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARN GG',\r\n    'description': 'GARNISH GOAL  G$',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 52,\r\n    'cpdCode': '90',\r\n    'baseAccm': '401KLN',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': '401k Loan Repayment',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': '401KLOAN',\r\n    'planName': '401KL',\r\n    'planDescription': '401K Loan Repayment',\r\n    'codeTypeDesc': '401k Loan Repayment',\r\n    'taxDed': 'D',\r\n    'name': '401KL1$',\r\n    'description': '401K LOAN 1 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': '401K Loan Repayment',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 52,\r\n    'cpdCode': 'B1',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': '401k Loan Repayment',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': '401KLOAN',\r\n    'planName': '401KL',\r\n    'planDescription': '401K Loan Repayment',\r\n    'codeTypeDesc': '401k Loan Repayment',\r\n    'taxDed': 'D',\r\n    'name': '401KL1%',\r\n    'description': '401K LOAN 1 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': '401K Loan Repayment',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 52,\r\n    'cpdCode': 'B2',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': '401k Loan Repayment',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': '401KLOAN',\r\n    'planName': '401KL',\r\n    'planDescription': '401K Loan Repayment',\r\n    'codeTypeDesc': '401k Loan Repayment',\r\n    'taxDed': 'D',\r\n    'name': '401KLN%',\r\n    'description': '401K LOAN REPAYMENT %',\r\n    'howType': '%',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 53,\r\n    'cpdCode': '01',\r\n    'baseAccm': 'UNION ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Union Dues',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'UNION',\r\n    'planName': 'Union',\r\n    'planDescription': 'Union Dues',\r\n    'codeTypeDesc': 'Union Dues',\r\n    'taxDed': 'D',\r\n    'name': 'UNION 1',\r\n    'description': 'UNION $ DEDUCTION        ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 53,\r\n    'cpdCode': '02',\r\n    'baseAccm': 'UNION ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Union Dues',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'UNION',\r\n    'planName': 'Union',\r\n    'planDescription': 'Union Dues',\r\n    'codeTypeDesc': 'Union Dues',\r\n    'taxDed': 'D',\r\n    'name': 'UNION 2',\r\n    'description': 'UNION % DEDUCTION',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 53,\r\n    'cpdCode': '03',\r\n    'baseAccm': 'UNION ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Union Dues',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'UNION',\r\n    'planName': 'Union',\r\n    'planDescription': 'Union Dues',\r\n    'codeTypeDesc': 'Union Dues',\r\n    'taxDed': 'D',\r\n    'name': 'UNION 3',\r\n    'description': 'UNION C DEDUCTION',\r\n    'howType': 'C',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 54,\r\n    'cpdCode': '08',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Repay Cash Advance',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'ADVANCE',\r\n    'planName': 'Advance',\r\n    'planDescription': 'Repay Cash Advance',\r\n    'codeTypeDesc': 'Repay Cash Advance',\r\n    'taxDed': 'D',\r\n    'name': 'ADVANC1',\r\n    'description': 'ADVANCE DEDUCTION 1      ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 54,\r\n    'cpdCode': '92',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Repay Cash Advance',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'ADVANCE',\r\n    'planName': 'Advance',\r\n    'planDescription': 'Repay Cash Advance',\r\n    'codeTypeDesc': 'Repay Cash Advance',\r\n    'taxDed': 'D',\r\n    'name': 'ADVANC2',\r\n    'description': 'ADVANCE DEDUCTION 2',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 54,\r\n    'cpdCode': 'HB',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Repay Cash Advance',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'ADVANCE',\r\n    'planName': 'Advance',\r\n    'planDescription': 'Repay Cash Advance',\r\n    'codeTypeDesc': 'Repay Cash Advance',\r\n    'taxDed': 'D',\r\n    'name': 'ADVANC3',\r\n    'description': 'ADVANCE DEDUCTION 3',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 55,\r\n    'cpdCode': 'HA',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Repay Loan',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'LOAN',\r\n    'planName': 'Loan',\r\n    'planDescription': 'Repay Loan',\r\n    'codeTypeDesc': 'Repay Loan',\r\n    'taxDed': 'D',\r\n    'name': 'LOANREP',\r\n    'description': 'LOAN REPAYMENT',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 55,\r\n    'cpdCode': 'LN',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Repay Loan',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'LOAN',\r\n    'planName': 'Loan',\r\n    'planDescription': 'Repay Loan',\r\n    'codeTypeDesc': 'Repay Loan',\r\n    'taxDed': 'D',\r\n    'name': 'LOANDED',\r\n    'description': 'LOAN DEDUCTION           ',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': '13',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'XMASCLB',\r\n    'description': 'CHRISTMAS CLUB DEDUCTION',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': '14',\r\n    'baseAccm': 'HEALTH',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'HOSP   ',\r\n    'description': 'HOSPITAL DEDUCTION',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': '18',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'L T D  ',\r\n    'description': 'LONG TERM DISAB DEDUCTION',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': '27',\r\n    'baseAccm': 'IRADED',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'IRA DED',\r\n    'description': 'IRA DEDUCTION',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': '30',\r\n    'baseAccm': 'PTXIRA',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'I R A  ',\r\n    'description': 'I R A SALARY REDUCTION',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': '4C',\r\n    'baseAccm': 'CO457 ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'CO457  ',\r\n    'description': 'EMPLOYER PAID 457 PLAN',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': '89',\r\n    'baseAccm': 'COHLTH',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'CO-MED ',\r\n    'description': 'EMPLOYER PAID HEALTH INS',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': '98',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISC-1 ',\r\n    'description': 'MISC. 1 DEDUCTION',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': false,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': 'B3',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCWG1',\r\n    'description': 'MISCELLANEOUS W GOAL 1',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': 'B4',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCWG2',\r\n    'description': 'MISCELLANEOUS W GOAL 2',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': 'B5',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCWG3',\r\n    'description': 'MISCELLANEOUS W GOAL 3',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': 'B6',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCWG4',\r\n    'description': 'MISCELLANEOUS W GOAL 4',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': 'B7',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCWG5',\r\n    'description': 'MISCELLANEOUS W GOAL 5',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': 'B8',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCWG6',\r\n    'description': 'MISCELLANEOUS W GOAL 6',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': 'R1',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCWG7',\r\n    'description': 'MISCELLANEOUS W GOAL 7',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': 'R2',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCWG8',\r\n    'description': 'MISCELLANEOUS W GOAL 8',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': 'R3',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCWG9',\r\n    'description': 'MISCELLANEOUS W GOAL 9',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 56,\r\n    'cpdCode': 'R4',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCWGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous With Goal',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCWGA',\r\n    'description': 'MISCELLANEOUS W GOAL 10',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 57,\r\n    'cpdCode': 'GP',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCNOGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous No Goal',\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCNG3',\r\n    'description': 'MISCELLANEOUS NO GOAL 3',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 57,\r\n    'cpdCode': 'GQ',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCNOGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous No Goal',\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCNG4',\r\n    'description': 'MISCELLANEOUS NO GOAL 4',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 57,\r\n    'cpdCode': 'GR',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCNOGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous No Goal',\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCNG5',\r\n    'description': 'MISCELLANEOUS NO GOAL 5',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 57,\r\n    'cpdCode': 'GS',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCNOGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous No Goal',\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCNG6',\r\n    'description': 'MISCELLANEOUS NO GOAL 6',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 57,\r\n    'cpdCode': 'GT',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCNOGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous No Goal',\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCNG7',\r\n    'description': 'MISCELLANEOUS NO GOAL 7',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 57,\r\n    'cpdCode': 'GU',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCNOGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous No Goal',\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCNG8',\r\n    'description': 'MISCELLANEOUS NO GOAL 8',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 57,\r\n    'cpdCode': 'GV',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCNOGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous No Goal',\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCNG9',\r\n    'description': 'MISCELLANEOUS NO GOAL 9',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 57,\r\n    'cpdCode': 'GW',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCNOGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous No Goal',\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCNGA',\r\n    'description': 'MISCELLANEOUS NO GOAL 10',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 57,\r\n    'cpdCode': 'R8',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCNOGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous No Goal',\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCNG1',\r\n    'description': 'MISCELLANEOUS NO GOAL 1',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 57,\r\n    'cpdCode': 'R9',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MISCNOGOAL',\r\n    'planName': 'Misc',\r\n    'planDescription': 'Miscellaneous No Goal',\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISCNG2',\r\n    'description': 'MISCELLANEOUS NO GOAL 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 58,\r\n    'cpdCode': '99',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': null,\r\n    'planName': null,\r\n    'planDescription': null,\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISC   ',\r\n    'description': 'MISCELLANEOUS DEDUCTION 1',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 58,\r\n    'cpdCode': 'B9',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': null,\r\n    'planName': null,\r\n    'planDescription': null,\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'MISC 1T',\r\n    'description': 'MISCELLANEOUS DEDUCTION 2',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': true,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'H9',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNG1',\r\n    'description': 'GARNISH NO GOAL 1',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HE',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNG2',\r\n    'description': 'GARNISH NO GOAL 2',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HF',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNG3',\r\n    'description': 'GARNISH NO GOAL 3',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HG',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNG4',\r\n    'description': 'GARNISH NO GOAL 4',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HH',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNG5',\r\n    'description': 'GARNISH NO GOAL 5',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HJ',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNG6',\r\n    'description': 'GARNISH NO GOAL 6',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HK',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNG7',\r\n    'description': 'GARNISH NO GOAL 7',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HL',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNG8',\r\n    'description': 'GARNISH NO GOAL 8',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HM',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNG9',\r\n    'description': 'GARNISH NO GOAL 9',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HN',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNGA',\r\n    'description': 'GARNISH NO GOAL A',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HO',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNGB',\r\n    'description': 'GARNISH NO GOAL B',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HP',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNGC',\r\n    'description': 'GARNISH NO GOAL C',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HQ',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNGD',\r\n    'description': 'GARNISH NO GOAL D',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HR',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNGE',\r\n    'description': 'GARNISH NO GOAL E',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HT',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNGF',\r\n    'description': 'GARNISH NO GOAL F',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 59,\r\n    'cpdCode': 'HU',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'GARNNOGOAL',\r\n    'planName': 'Garn',\r\n    'planDescription': 'Garnishment No Goal',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'taxDed': 'D',\r\n    'name': 'GARNNGG',\r\n    'description': 'GARNISH NO GOAL G',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 60,\r\n    'cpdCode': '80',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 10,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'MATCH%1',\r\n    'description': 'COMPANY MATCH MAX  % 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERMatchLimit',\r\n    'displayName': 'COMPANY MATCH MAX %',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 60,\r\n    'cpdCode': '81',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 10,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'COMPAR1',\r\n    'description': 'COMPANY MATCH COMPARE 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERMatchRate',\r\n    'displayName': 'COMPANY COMPARE',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 60,\r\n    'cpdCode': '86',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 10,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'COCALC3',\r\n    'description': 'CALCULATE COMPANY MATCH 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERCalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 60,\r\n    'cpdCode': 'D1',\r\n    'baseAccm': 'CO401K',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 10,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'CO4KCU1',\r\n    'description': 'Company Match 401K CU 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Company Match 401K CU',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 60,\r\n    'cpdCode': 'EA',\r\n    'baseAccm': '401KC ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 10,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '401KCU1',\r\n    'description': '401K Catchup 1 ',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 60,\r\n    'cpdCode': 'ES',\r\n    'baseAccm': '401KC ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 10,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '401KCU3',\r\n    'description': '401K Catchup 3',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 60,\r\n    'cpdCode': 'H5',\r\n    'baseAccm': '401KC$',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 10,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '401KC$$',\r\n    'description': '401K CATCHUP WAGES',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 61,\r\n    'cpdCode': 'DP',\r\n    'baseAccm': 'CO401K',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 11,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'CO4KCU2',\r\n    'description': 'Company Match 401K CU 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Company Match 401K CU',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 61,\r\n    'cpdCode': 'EB',\r\n    'baseAccm': '401KC ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 11,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '401KCU2',\r\n    'description': '401K Catchup 2',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 61,\r\n    'cpdCode': 'ET',\r\n    'baseAccm': '401KC ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 11,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '401KCU4',\r\n    'description': '401K Catchup 4',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 61,\r\n    'cpdCode': 'H6',\r\n    'baseAccm': '401KC$',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 11,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '401KCT$',\r\n    'description': '401K TIER CATCHUP WAGES',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 61,\r\n    'cpdCode': 'SF',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 11,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TOT 4K4',\r\n    'description': 'TOTAL 401K DEDUCTION 4',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERTotalDed',\r\n    'displayName': 'TOTAL 401K DEDUCTION',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 61,\r\n    'cpdCode': 'SJ',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 11,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBL4',\r\n    'description': 'COMPANY BOT TIER LIMIT 4',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERBotMatchLimit',\r\n    'displayName': 'Employer Bottom Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 61,\r\n    'cpdCode': 'SL',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 11,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTL4',\r\n    'description': 'COMPANY TOP TIER LIMIT 4',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERTopMatchLimit',\r\n    'displayName': 'Employer Top Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 61,\r\n    'cpdCode': 'SN',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 11,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERCM4',\r\n    'description': 'COMPANY COMPARE 4 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERCalcMatchRate',\r\n    'displayName': 'COMPANY COMPARE %',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 61,\r\n    'cpdCode': 'SQ',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 11,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBM4',\r\n    'description': 'COMPANY MATCH MAX BOT 4',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERBotMatchRate',\r\n    'displayName': 'Employer Bottom Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 61,\r\n    'cpdCode': 'SW',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 11,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': '401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTM4',\r\n    'description': 'COMPANY MATCH MAX TOP 4',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERTopMatchRate',\r\n    'displayName': 'Employer Top Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 62,\r\n    'cpdCode': 'EF',\r\n    'baseAccm': '403BCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '403B Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 12,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '403B',\r\n    'planName': '403B',\r\n    'planDescription': '403B',\r\n    'codeTypeDesc': '403b Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '403BCU$',\r\n    'description': '403B CATCH UP CONTRIB $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 62,\r\n    'cpdCode': 'EU',\r\n    'baseAccm': '403BCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '403B Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 12,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '403B',\r\n    'planName': '403B',\r\n    'planDescription': '403B',\r\n    'codeTypeDesc': '403b Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '403BCU%',\r\n    'description': '403B CATCH UP CONTRIB %',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 62,\r\n    'cpdCode': 'H7',\r\n    'baseAccm': '403BC$',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': '403B Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 12,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '403B',\r\n    'planName': '403B',\r\n    'planDescription': '403B',\r\n    'codeTypeDesc': '403b Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '403BC$$',\r\n    'description': '403b CATCHUP WAGES',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 63,\r\n    'cpdCode': 'EN',\r\n    'baseAccm': 'SMPICU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Simple IRA Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 13,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'SMPLIRA',\r\n    'planName': 'SMPLIRA',\r\n    'planDescription': 'Simple IRA',\r\n    'codeTypeDesc': 'Simple IRA Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SMPIRC$',\r\n    'description': 'SIMPLE IRA CATCH UP CONT$',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 63,\r\n    'cpdCode': 'EV',\r\n    'baseAccm': 'SMPICU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Simple IRA Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 13,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'SMPLIRA',\r\n    'planName': 'SMPLIRA',\r\n    'planDescription': 'Simple IRA',\r\n    'codeTypeDesc': 'Simple IRA Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SMPIRCP',\r\n    'description': 'SIMPLE IRA CATCH UP CONT%',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 63,\r\n    'cpdCode': 'H8',\r\n    'baseAccm': 'SMPCU$',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Simple IRA Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 13,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'SMPLIRA',\r\n    'planName': 'SMPLIRA',\r\n    'planDescription': 'Simple IRA',\r\n    'codeTypeDesc': 'Simple IRA Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SMPCU$2',\r\n    'description': 'SIMPLE CATCHUP WAGES',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 64,\r\n    'cpdCode': '61',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 14,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'COCALC2',\r\n    'description': 'CALCULATE COMPANY MATCH 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERCalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 64,\r\n    'cpdCode': '82',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 14,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'RTHMTH1',\r\n    'description': '% CO MATCH ROTH 401K 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERMatchLimit',\r\n    'displayName': '% CMOMPANY MATCH ROTH 401K',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 64,\r\n    'cpdCode': '83',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 14,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'COMPAR2',\r\n    'description': 'COMPANY MATCH COMPARE 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERMatchRate',\r\n    'displayName': 'COMPARE COMPANY MATCH',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 64,\r\n    'cpdCode': 'D3',\r\n    'baseAccm': 'CORTHK',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 14,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'CO4KRC1',\r\n    'description': 'CO Match RTH 401K CU 1',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Company Match RTH 401K CU',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 64,\r\n    'cpdCode': 'ER',\r\n    'baseAccm': 'RTHKCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 14,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '4KRCU2$',\r\n    'description': 'Roth 401K Catchup 2 $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 64,\r\n    'cpdCode': 'EY',\r\n    'baseAccm': 'RTHKCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 14,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '4KRCU2%',\r\n    'description': 'Roth 401K Catchup 2 %',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 64,\r\n    'cpdCode': 'HX',\r\n    'baseAccm': '401KC$',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 14,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'RTH$$  ',\r\n    'description': 'ROTH 401K CATCH UP WAGES',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 65,\r\n    'cpdCode': 'EP',\r\n    'baseAccm': '401KC ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 18,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Non-Elective Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SHNECU$',\r\n    'description': 'SH 401K Non Elective CU $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 65,\r\n    'cpdCode': 'EX',\r\n    'baseAccm': '401KC ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 18,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Non-Elective Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SHNECU%',\r\n    'description': 'SH 401K Non Elective CU %',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 65,\r\n    'cpdCode': 'HW',\r\n    'baseAccm': '401KC$',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 18,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Non-Elective Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SFC$$1 ',\r\n    'description': 'SAFE 401K CATCHUP WAGES 1',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 66,\r\n    'cpdCode': 'EO',\r\n    'baseAccm': 'SMPKCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Simple 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 16,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SINGLE',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SMPKCU$',\r\n    'description': 'SIMP 401K CATCH UP CONTR$',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 66,\r\n    'cpdCode': 'EW',\r\n    'baseAccm': 'SMPKCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Simple 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 16,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SINGLE',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SMPKCU%',\r\n    'description': 'SIMP 401K CATCH UP CONTR%',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 66,\r\n    'cpdCode': 'HV',\r\n    'baseAccm': 'SMPCU$',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Simple 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 16,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SINGLE',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SMPCU$1',\r\n    'description': 'SIMP 401K CATCH UP WAGES',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 67,\r\n    'cpdCode': 'E4',\r\n    'baseAccm': 'CORTHK',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 9,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'CO4KRC2',\r\n    'description': 'CO Match RTH 401K CU 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 67,\r\n    'cpdCode': 'EH',\r\n    'baseAccm': 'RTHKCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 9,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '4KRCU1$',\r\n    'description': 'Roth 401K Catchup 1 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 67,\r\n    'cpdCode': 'EJ',\r\n    'baseAccm': 'RTHKCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 9,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': '4KRCU1%',\r\n    'description': 'Roth 401K Catchup 1 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 67,\r\n    'cpdCode': 'HZ',\r\n    'baseAccm': '401K$$',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 9,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBL7',\r\n    'description': 'ELIGIBLE WAGES TIER 7',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 67,\r\n    'cpdCode': 'X1',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 9,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TOT 4K6',\r\n    'description': 'TOTAL 401K DEDUCTION 6',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERTotalDed',\r\n    'displayName': 'TOTAL 401K DEDUCTION',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 67,\r\n    'cpdCode': 'X2',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 9,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBL6',\r\n    'description': 'COMPANY BOT TIER LIMIT 6',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERBotMatchLimit',\r\n    'displayName': 'Employer Bottom Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 67,\r\n    'cpdCode': 'X3',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 9,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTL6',\r\n    'description': 'COMPANY TOP TIER LIMIT 6',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERTopMatchLimit',\r\n    'displayName': 'Employer Top Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 67,\r\n    'cpdCode': 'X4',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 9,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERCM6',\r\n    'description': 'COMPANY COMPARE 6 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERcalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 67,\r\n    'cpdCode': 'X5',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 9,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBM6',\r\n    'description': 'COMPANY MATCH MAX BOT 6',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERBotMatchRate',\r\n    'displayName': 'Employer Bottom Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 67,\r\n    'cpdCode': 'X6',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Roth 401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 9,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'deductionPlanCode': '401K',\r\n    'planName': '401K',\r\n    'planDescription': '401K',\r\n    'codeTypeDesc': 'Roth 401k Tiered Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTM6',\r\n    'description': 'COMPANY MATCH MAX TOP 6',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERTopMatchRate',\r\n    'displayName': 'Employer Top Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 68,\r\n    'cpdCode': 'EC',\r\n    'baseAccm': 'RTHKCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K NE Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 8,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SHRNEC$',\r\n    'description': 'Co Contrib SH RTH NE CU$',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 68,\r\n    'cpdCode': 'ED',\r\n    'baseAccm': 'RTHKCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K NE Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 8,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SHRNEC%',\r\n    'description': 'Co Contrib SH RTH NE CU%',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 68,\r\n    'cpdCode': 'HY',\r\n    'baseAccm': '401KC$',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K NE Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 8,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SFC$$2 ',\r\n    'description': 'SAFE 401K CATCHUP WAGES 2',\r\n    'howType': 'P',\r\n    'dedRptSw': true,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 69,\r\n    'cpdCode': '5A',\r\n    'baseAccm': '401KC$',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Match Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 15,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBL5',\r\n    'description': 'ELIGIBLE WAGES SH 5',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 69,\r\n    'cpdCode': '5B',\r\n    'baseAccm': '401KC ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Match Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 15,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SH401C$',\r\n    'description': 'Safe Harbor 401K Catchup$',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 69,\r\n    'cpdCode': '5C',\r\n    'baseAccm': '401KC ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Match Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 15,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SH401C%',\r\n    'description': 'Safe Harbor 401K Catchup%',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 69,\r\n    'cpdCode': '5D',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Match Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 15,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TOT 4K2',\r\n    'description': 'TOTAL 401K DEDUCTION 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERTotalDed',\r\n    'displayName': 'TOTAL 401K DEDUCTION',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 69,\r\n    'cpdCode': '5E',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Match Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 15,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBL2',\r\n    'description': 'COMPANY BOT TIER LIMIT 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERBotMatchLimit',\r\n    'displayName': 'Employer Bottom Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 69,\r\n    'cpdCode': '5F',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Match Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 15,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTL2',\r\n    'description': 'COMPANY TOP TIER LIMIT 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERTopMatchLimit',\r\n    'displayName': 'Employer Top Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 69,\r\n    'cpdCode': '5G',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Match Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 15,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERCM2',\r\n    'description': 'COMPANY COMPARE 2 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERcalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 69,\r\n    'cpdCode': '5H',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Match Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 15,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBM2',\r\n    'description': 'COMPANY MATCH MAX BOT 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERBotMatchRate',\r\n    'displayName': 'Employer Bottom Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 69,\r\n    'cpdCode': '5I',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Match Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 15,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTM2',\r\n    'description': 'COMPANY MATCH MAX TOP 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERTopMatchRate',\r\n    'displayName': 'Employer Top Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 69,\r\n    'cpdCode': '5J',\r\n    'baseAccm': 'CO401K',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H 401K Match Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 15,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'COSHCU ',\r\n    'description': 'Company Match SH 401K CU',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 70,\r\n    'cpdCode': '5K',\r\n    'baseAccm': '401KC$',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K Match Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 7,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'ELIGBL6',\r\n    'description': 'ELIGIBLE WAGES SH 6',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 70,\r\n    'cpdCode': '5L',\r\n    'baseAccm': 'RTHKCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K Match Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 7,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SH4RCU$',\r\n    'description': 'Safe Harbor Roth 401K CU$',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 70,\r\n    'cpdCode': '5M',\r\n    'baseAccm': 'RTHKCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K Match Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 7,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SH4RCU%',\r\n    'description': 'Safe Harbor Roth 401K CU%',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 70,\r\n    'cpdCode': '5N',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K Match Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 7,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TOT 4K8',\r\n    'description': 'TOTAL 401K DEDUCTION 8',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERTotalDed',\r\n    'displayName': 'TOTAL 401K DEDUCTION',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 70,\r\n    'cpdCode': '5P',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K Match Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 7,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBL8',\r\n    'description': 'COMPANY BOT TIER LIMIT 8',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERBotMatchLimit',\r\n    'displayName': 'Employer Bottom Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 70,\r\n    'cpdCode': '5R',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K Match Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 7,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTL8',\r\n    'description': 'COMPANY TOP TIER LIMIT 8',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERTopMatchLimit',\r\n    'displayName': 'Employer Top Tier Match Limit',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 70,\r\n    'cpdCode': '5S',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K Match Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 7,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERCM8',\r\n    'description': 'COMPANY COMPARE 8 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERcalcMatchRate',\r\n    'displayName': 'Calculated Match Rate',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 70,\r\n    'cpdCode': '5T',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K Match Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 7,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERBM8',\r\n    'description': 'COMPANY MATCH MAX BOT 8',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERBotMatchRate',\r\n    'displayName': 'Employer Bottom Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 70,\r\n    'cpdCode': '5V',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K Match Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 7,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'TIERTM8',\r\n    'description': 'COMPANY MATCH MAX TOP 8',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dERTopMatchRate',\r\n    'displayName': 'Employer Top Tier Match Rate',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 70,\r\n    'cpdCode': '5X',\r\n    'baseAccm': 'CORTHK',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Safe H Roth 401K Match Catchup',\r\n    'hasPercent': true,\r\n    'retireAddon': 7,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'deductionPlanCode': 'SH401K',\r\n    'planName': 'SH 401K',\r\n    'planDescription': 'Safe Harbor 401K',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'CORTHSC',\r\n    'description': 'Co Match SH RTH 401K CU',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'Benefit',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 71,\r\n    'cpdCode': 'EE',\r\n    'baseAccm': 'SMPKCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Simple 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 19,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k Non-Elective Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SMPNEC$',\r\n    'description': 'SMP401K NE CATCHUP CONTR$',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 71,\r\n    'cpdCode': 'EG',\r\n    'baseAccm': 'SMPKCU',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Simple 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 19,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k Non-Elective Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SMPNEC%',\r\n    'description': 'SMP401K NE CATCHUP CONTR%',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 71,\r\n    'cpdCode': 'GZ',\r\n    'baseAccm': 'SMPCU$',\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeType': 'Simple 401K Catch Up',\r\n    'hasPercent': true,\r\n    'retireAddon': 19,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'deductionPlanCode': 'SMPL401K',\r\n    'planName': 'SMPL401',\r\n    'planDescription': 'Simple 401K',\r\n    'codeTypeDesc': 'Simple 401k Non-Elective Catch Up',\r\n    'taxDed': 'D',\r\n    'name': 'SMPNEWG',\r\n    'description': 'SMP401K NE CU WAGES      ',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': null,\r\n    'deductionPlanGroup': null,\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'Eligible Wages',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 72,\r\n    'cpdCode': '84',\r\n    'baseAccm': '401KLN',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': '401k Loan Repayment',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': '401KLOAN',\r\n    'planName': '401KL',\r\n    'planDescription': '401K Loan Repayment',\r\n    'codeTypeDesc': '401k Loan Repayment',\r\n    'taxDed': 'D',\r\n    'name': '401KL2$',\r\n    'description': '401K LOAN 2 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': '401K Loan Repayment',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 72,\r\n    'cpdCode': '85',\r\n    'baseAccm': '401KLN',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': '401k Loan Repayment',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': '401KLOAN',\r\n    'planName': '401KL',\r\n    'planDescription': '401K Loan Repayment',\r\n    'codeTypeDesc': '401k Loan Repayment',\r\n    'taxDed': 'D',\r\n    'name': '401KL2%',\r\n    'description': '401K LOAN 2 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': '401K Loan Repayment',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 73,\r\n    'cpdCode': '2B',\r\n    'baseAccm': '401KLN',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': '401k Loan Repayment',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': '401KLOAN',\r\n    'planName': '401KL',\r\n    'planDescription': '401K Loan Repayment',\r\n    'codeTypeDesc': '401k Loan Repayment',\r\n    'taxDed': 'D',\r\n    'name': '401KL3$',\r\n    'description': '401K LOAN 3 $',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': '401K Loan Repayment',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 73,\r\n    'cpdCode': '2C',\r\n    'baseAccm': '401KLN',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': '401k Loan Repayment',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': true,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': '401KLOAN',\r\n    'planName': '401KL',\r\n    'planDescription': '401K Loan Repayment',\r\n    'codeTypeDesc': '401k Loan Repayment',\r\n    'taxDed': 'D',\r\n    'name': '401KL3%',\r\n    'description': '401K LOAN 3 %',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': '401K Loan Repayment',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 74,\r\n    'cpdCode': '49',\r\n    'baseAccm': 'HSACAF',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'CO HSA1',\r\n    'description': 'CO HSA CONTRIBUTION 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dBenefit',\r\n    'displayName': 'CO HSA CONTRIBUTION 1',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 74,\r\n    'cpdCode': '4N',\r\n    'baseAccm': 'HSACEE',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAPR1$',\r\n    'description': 'PRETAX HSA EE CONTRIB 1$',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'PRETAX HSA EE CONTRIB 1',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 74,\r\n    'cpdCode': '4W',\r\n    'baseAccm': 'HSACEE',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAPR1%',\r\n    'description': 'PRETAX HSA EE CONTRIB 1%',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'PRETAX HSA EE CONTRIB 1',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 74,\r\n    'cpdCode': '4X',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAMAT1',\r\n    'description': 'HSA COMPANY MATCH 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERMatchRate',\r\n    'displayName': 'HSA COMPANY MATCH 1',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 74,\r\n    'cpdCode': '4Y',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAMAT2',\r\n    'description': 'HSA COMPANY MATCH 2',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERMatchLimit',\r\n    'displayName': 'HSA COMPANY MATCH 2',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 74,\r\n    'cpdCode': '4Z',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAWAG1',\r\n    'description': 'HSA EMPLOYEE WAGES 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'HSA EMPLOYEE WAGES 1',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 74,\r\n    'cpdCode': '50',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAMAT3',\r\n    'description': 'HSA COMPANY MATCH 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERMatch3',\r\n    'displayName': 'HSA COMPANY MATCH 3',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 74,\r\n    'cpdCode': '52',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSACOM1',\r\n    'description': 'HSA COMPANY COMPARE 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERComp1',\r\n    'displayName': 'HSA COMPANY COMPARE 1',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 74,\r\n    'cpdCode': '53',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSACON1',\r\n    'description': 'HSA COMPANY CONTRIB 1',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERcalcMatchRate',\r\n    'displayName': 'HSA COMPANY CONTRIB 1',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 75,\r\n    'cpdCode': 'SY',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAWAG4',\r\n    'description': 'HSA EMPLOYEE WAGES 4',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'HSA EMPLOYEE WAGES 4',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 75,\r\n    'cpdCode': 'T2',\r\n    'baseAccm': 'HSA   ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAPS2$',\r\n    'description': 'POSTTAX HSA EE CONTRIB 2$',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'POSTTAX HSA EE CONTRIB 2',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 75,\r\n    'cpdCode': 'T4',\r\n    'baseAccm': 'HSA   ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAPS2%',\r\n    'description': 'POSTTAX HSA EE CONTRIB 2%',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'POSTTAX HSA EE CONTRIB 2',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 75,\r\n    'cpdCode': 'T5',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSACON6',\r\n    'description': 'HSA COMPANY CONTRIB 6',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dHSAERDeduction$',\r\n    'displayName': 'HSA COMPANY CONTRIB 6',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 75,\r\n    'cpdCode': 'T6',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSACON7',\r\n    'description': 'HSA COMPANY CONTRIB 7',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dHSAERDeduction',\r\n    'displayName': 'HSA COMPANY CONTRIB 7',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 75,\r\n    'cpdCode': 'T7',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSACON8',\r\n    'description': 'HSA COMPANY CONTRIB 8',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERContrib6',\r\n    'displayName': 'HSA COMPANY CONTRIB 6',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 75,\r\n    'cpdCode': 'VX',\r\n    'baseAccm': 'COHSA ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Post-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'COHSA2 ',\r\n    'description': 'CO HSA CONTRIB 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERBenefit',\r\n    'displayName': 'CO HSA CONTRIB 2',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 76,\r\n    'cpdCode': 'W1',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAWAG3',\r\n    'description': 'HSA EMPLOYEE WAGES 3',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dEligible',\r\n    'displayName': 'HSA EMPLOYEE WAGES 3',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 76,\r\n    'cpdCode': 'W2',\r\n    'baseAccm': 'HSACEE',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAPR2$',\r\n    'description': 'PRETAX HSA EE CONTRIB 2$',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'PRETAX HSA EE CONTRIB 2',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 76,\r\n    'cpdCode': 'W3',\r\n    'baseAccm': 'HSACEE',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSAPR2%',\r\n    'description': 'PRETAX HSA EE CONTRIB 2%',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'PRETAX HSA EE CONTRIB 2',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 76,\r\n    'cpdCode': 'W4',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSACON3',\r\n    'description': 'HSA COMPANY CONTRIB 3',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dHSAERDeduction$',\r\n    'displayName': 'HSA COMPANY CONTRIB 3',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 76,\r\n    'cpdCode': 'W5',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSACON4',\r\n    'description': 'HSA COMPANY CONTRIB 4',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': true,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dHSAERDeduction',\r\n    'displayName': 'HSA COMPANY CONTRIB 4',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 76,\r\n    'cpdCode': 'W6',\r\n    'baseAccm': '      ',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'HSACON5',\r\n    'description': 'HSA COMPANY CONTRIB 5',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': false,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERContrib5',\r\n    'displayName': 'HSA COMPANY CONTRIB 5',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 76,\r\n    'cpdCode': 'W7',\r\n    'baseAccm': 'HSACAF',\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeType': 'Pre-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'deductionPlanCode': 'HSA',\r\n    'planName': 'HSA',\r\n    'planDescription': 'HSA',\r\n    'codeTypeDesc': 'HSA',\r\n    'taxDed': 'D',\r\n    'name': 'CO HSA2',\r\n    'description': 'CO HSA CONTRIBUTION 2',\r\n    'howType': 'P',\r\n    'dedRptSw': false,\r\n    'inNet': false,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': false,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'HSA',\r\n    'deductionPlanGroup': 'Health Savings Accounts (HSA)',\r\n    'parameterName': 'dERBenefit',\r\n    'displayName': 'CO HSA CONTRIBUTION 2',\r\n    'defaultDedRate': 100,\r\n    'defaultHowType': 'P'\r\n  },\r\n  {\r\n    'codeTypeId': 89,\r\n    'cpdCode': 'M1',\r\n    'baseAccm': 'MEALS ',\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeType': 'Meals',\r\n    'hasPercent': false,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'MEALS',\r\n    'planName': 'MEALS',\r\n    'planDescription': 'Meals',\r\n    'codeTypeDesc': 'Meals',\r\n    'taxDed': 'D',\r\n    'name': 'MEALS  ',\r\n    'description': 'Meals',\r\n    'howType': '$',\r\n    'dedRptSw': false,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': true,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'OTHERPSTAX',\r\n    'deductionPlanGroup': 'Other Post-Tax Deductions',\r\n    'parameterName': null,\r\n    'displayName': null,\r\n    'defaultDedRate': null,\r\n    'defaultHowType': null\r\n  },\r\n  {\r\n    'codeTypeId': 90,\r\n    'cpdCode': '7P',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 4,\r\n    'codeGroup': 'Flexible Spending Accounts (FSA)',\r\n    'codeType': 'Parking',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'FSAPARK',\r\n    'planName': 'Parking',\r\n    'planDescription': 'Parking',\r\n    'codeTypeDesc': 'Parking',\r\n    'taxDed': 'D',\r\n    'name': 'FSAPRK$',\r\n    'description': 'FLEX PARKING $',\r\n    'howType': '$',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'FSA',\r\n    'deductionPlanGroup': 'Flexible Spending Accounts (FSA)',\r\n    'parameterName': 'dDeduction$',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': '$'\r\n  },\r\n  {\r\n    'codeTypeId': 90,\r\n    'cpdCode': '7U',\r\n    'baseAccm': 'CAFE1 ',\r\n    'codeGroupId': 4,\r\n    'codeGroup': 'Flexible Spending Accounts (FSA)',\r\n    'codeType': 'Parking',\r\n    'hasPercent': true,\r\n    'retireAddon': 0,\r\n    'hasGoal': false,\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'deductionPlanCode': 'FSAPARK',\r\n    'planName': 'Parking',\r\n    'planDescription': 'Parking',\r\n    'codeTypeDesc': 'Parking',\r\n    'taxDed': 'D',\r\n    'name': 'FSAPRK%',\r\n    'description': 'FLEX PARKING %',\r\n    'howType': '%',\r\n    'dedRptSw': true,\r\n    'inNet': true,\r\n    'checkPrnSw': true,\r\n    'isDisplayed': true,\r\n    'isActive': true,\r\n    'oneTimeDeduction': false,\r\n    'isEmployerDisplayed': false,\r\n    'deductionPlanGroupCode': 'FSA',\r\n    'deductionPlanGroup': 'Flexible Spending Accounts (FSA)',\r\n    'parameterName': 'dDeduction',\r\n    'displayName': 'Deduction',\r\n    'defaultDedRate': 0,\r\n    'defaultHowType': 'P'\r\n  }\r\n];\r\n","import { RawDeductionCategory } from './master-data-deductions';\r\n\r\nexport const deductionGroups: RawDeductionCategory[] = [\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 7,\r\n    'codeType': 'Safe Harbor Roth 401k Match',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'This is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \\r\\nestablished by the employer for eligible employees.<summary/>  Employee deductions can be a fixed dollar amount \\r\\nor a percentage.  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \\r\\nsavings plan.  Employers are required to contribute when using this plan. There are two contribution \\r\\noptions for employers using this plan.  The contribution option selected must be applied to all eligible \\r\\nemployees.  <p>The first contribution option is a two-tiered rate based on an employee\\'s contribution. The first tier \\r\\nis based on a 100% match of up to 3% of an employee\\'s gross earnings.  The second tier is an additional \\r\\n50% match of up to 5% of an employee\\'s gross earnings.  The second contribution option is a flat rate \\r\\nbased on an employee\\'s gross earnings.  The employer\\'s contribution is a flat rate of 3% of an employee\\'s \\r\\ngross earnings.  When the second option is selected, the employer will contribute for the eligible employee \\r\\nregardless as to whether or not the employee contributes.</p><p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plan).',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 8,\r\n    'codeType': 'Safe Harbor Roth 401k NE',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'This is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \\r\\nestablished by the employer for eligible employees.<summary/>  Employee deductions can be a fixed dollar amount \\r\\nor a percentage.  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \\r\\nsavings plan.  Employers are required to contribute when using this plan. There are two contribution \\r\\noptions for employers using this plan.  The contribution option selected must be applied to all eligible \\r\\nemployees.  <p>The first contribution option is a two-tiered rate based on an employee\\'s contribution. The first tier \\r\\nis based on a 100% match of up to 3% of an employee\\'s gross earnings.  The second tier is an additional \\r\\n50% match of up to 5% of an employee\\'s gross earnings.  The second contribution option is a flat rate \\r\\nbased on an employee\\'s gross earnings.  The employer\\'s contribution is a flat rate of 3% of an employee\\'s \\r\\ngross earnings.  When the second option is selected, the employer will contribute for the eligible employee \\r\\nregardless as to whether or not the employee contributes.</p><p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plan).',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 9,\r\n    'codeType': 'Roth 401K Tiered',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThis is a post-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \\r\\n\\t\\t\\testablished by the employer for eligible employees.<summary/>  Only the employee is allowed to contribute to this retirement \\r\\n\\t\\t\\tplan.  If an employer elects to match an employee\\'s contribution to their Roth 401(k) plan, the employer must \\r\\n\\t\\t\\tcontribute these funds to a non Roth 401(k) account.  Employee deductions can be a fixed dollar amount or a \\r\\n\\t\\t\\tpercentage.</p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 1, 3, 5, 12 (Code AA) and 13 (Retirement Plans).</p>\\r\\n\\t\\t\\t\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'codeTypeDesc': 'Roth 401k Tiered',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 10,\r\n    'codeType': '401K',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThis is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan established \\r\\n\\t\\t\\tby the employer for eligible employees.<summary/>  Employee deductions can be a fixed dollar amount or a percentage.  \\r\\n\\t\\t\\tEmployers may match employee\\'s contributions by entering the company match information during deductions \\r\\n\\t\\t\\tset-up.  This retirement savings plan can be used in conjunction with the Roth 401(k) savings retirement plan.  If the \\r\\n\\t\\t\\temployer matches employee\\'s contributions using a two-tiered rate, they must use the 401(k) Tiered \\r\\n\\t\\t\\toption.</p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\\r\\n\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'codeTypeDesc': '401k',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 11,\r\n    'codeType': '401K Tiered',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThis is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan established \\r\\n\\t\\t\\tby the employer for eligible employees.<summary/>  Employee deductions can be a fixed dollar amount or a percentage.  \\r\\n\\t\\t\\tEmployers may match employee\\'s contributions on a two-tiered rate by entering the company match information \\r\\n\\t\\t\\tduring deductions set-up.  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \\r\\n\\t\\t\\tsavings plan.  If the employer matches employee\\'s contributions using a single rate, they must use the 401(k) \\r\\n\\t\\t\\toption.</p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'codeTypeDesc': '401k Tiered',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 12,\r\n    'codeType': '403B',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\t403(b) retirement savings plans are available to non-profit organizations only.  This is a pre-tax employee \\r\\n\\t\\t\\tdeduction for contribution to a qualified 403(b) retirement savings plan established by the employer for \\r\\n\\t\\t\\teligible employees.<summary/>  Employee deductions can be a fixed dollar amount or a percentage.  Employers may \\r\\n\\t\\t\\tmatch employee\\'s contributions by entering the company match information during deductions set-up.  \\r\\n\\t\\t\\t</p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code E) and 13 (Retirement Plans).</p>\\r\\n\\t\\t\\t\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'codeTypeDesc': '403b',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 13,\r\n    'codeType': 'Simple IRA',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThis is a pre-tax employee deduction for contribution to a qualified IRA retirement savings plan established \\r\\n\\t\\t\\tby the employer for eligible employees.  Employee deductions can be a fixed dollar amount or a percentage.<summary/>  \\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>Employers are required to contribute when using this plan.  The contribution rate for employers \\r\\n\\t\\t\\tusing this retirement savings plan is an employee contribution match based on 100% of up to 3% of the \\r\\n\\t\\t\\temployee\\'s compensation.  The contribution must be applied to all eligible employees.  The match rate for \\r\\n\\t\\t\\tthis retirement savings plan can be reduced to 1% in 2 of any 5 years.</p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code S) and 13 (Retirement Plans).</p>\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'codeTypeDesc': 'Simple IRA',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 14,\r\n    'codeType': 'Roth 401K',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThis is a post-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \\r\\n\\t\\t\\testablished by the employer for eligible employees.  Only the employee is allowed to contribute to this retirement \\r\\n\\t\\t\\tplan.<summary/>  If an employer elects to match an employee\\'s contribution to their Roth 401(k) plan, the employer must \\r\\n\\t\\t\\tcontribute these funds to a non Roth 401(k) account.  Employee deductions can be a fixed dollar amount or a \\r\\n\\t\\t\\tpercentage.</p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 1, 3, 5, 12 (Code AA) and 13 (Retirement Plans).</p>\\r\\n\\t\\t\\t\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'codeTypeDesc': 'Roth 401k',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 15,\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'This is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \\r\\nestablished by the employer for eligible employees.  Employee deductions can be a fixed dollar amount \\r\\nor a percentage.<summary/>  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \\r\\nsavings plan.  Employers are required to contribute when using this plan. There are two contribution \\r\\noptions for employers using this plan.  The contribution option selected must be applied to all eligible \\r\\nemployees.  <p>The first contribution option is a two-tiered rate based on an employee\\'s contribution. The first tier \\r\\nis based on a 100% match of up to 3% of an employee\\'s gross earnings.  The second tier is an additional \\r\\n50% match of up to 5% of an employee\\'s gross earnings.  The second contribution option is a flat rate \\r\\nbased on an employee\\'s gross earnings.  The employer\\'s contribution is a flat rate of 3% of an employee\\'s \\r\\ngross earnings.  When the second option is selected, the employer will contribute for the eligible employee \\r\\nregardless as to whether or not the employee contributes.</p><p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plan).',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'codeTypeDesc': 'Safe Harbor 401k',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 16,\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\t\\tThis is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \\r\\n\\t\\t\\testablished by the employer for eligible employees.  Employee deductions can be a fixed dollar amount \\r\\n\\t\\t\\tor a percentage.<summary/>  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \\r\\n\\t\\t\\tsavings plan.  Employers are required to contribute when using this plan. There are two contribution \\r\\n\\t\\t\\toptions for employers using this plan.  The contribution option selected must be applied to all eligible \\r\\n\\t\\t\\temployees.  \\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>The first contribution option is a two-tiered rate based on an employee\\'s contribution. The first tier \\r\\n\\t\\t\\tis based on a 100% match of up to 3% of an employee\\'s gross earnings.  The second tier is an additional \\r\\n\\t\\t\\t50% match of up to 5% of an employee\\'s gross earnings.  The second contribution option is a flat rate \\r\\n\\t\\t\\tbased on an employee\\'s gross earnings.  The employer\\'s contribution is a flat rate of 3% of an employee\\'s \\r\\n\\t\\t\\tgross earnings.  When the second option is selected, the employer will contribute for the eligible employee \\r\\n\\t\\t\\tregardless as to whether or not the employee contributes.</p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plan). \\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SINGLE',\r\n    'codeTypeDesc': 'Simple 401k',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 17,\r\n    'codeType': 'SEP IRA',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThis is a pre-tax employer deduction for contribution to a qualified IRA retirement savings plan established \\r\\n\\t\\t\\tby the employer for eligible employees.  Only employer\\'s can contribute to this retirement savings plan.<summary/>If an employer \\r\\n\\t\\t\\t\\t\\tcontributes to one eligible employee, the employer must contribute to all eligible employees.The percentage of \\r\\n\\t\\t\\t\\t\\temployee\\'s compensation contributed must be the same for all eligible employees.  The maximum contribution allowed by \\r\\n\\t\\t\\t\\t\\tan employer is 25% of the employee\\'s compensation, however if the contribution is for a self-employed employee the \\r\\n\\t\\t\\t\\t\\tmaximum contribution is 20% of the employee\\'s compensation before the self employment tax credits are included.  There \\r\\n\\t\\t\\t\\t\\tis no catch-up provision for the SEP (Simplified Employee Pension) IRA since it is an employer only contribution \\r\\n\\t\\t\\t\\t\\tretirement account.</p>  \\r\\n',\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'NOEEDEDUCT',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'codeTypeDesc': 'SEP IRA',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 18,\r\n    'codeType': 'Safe Harbor 401K',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'This is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \\r\\nestablished by the employer for eligible employees.  Employee deductions can be a fixed dollar amount \\r\\nor a percentage.<summary/>  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \\r\\nsavings plan.  Employers are required to contribute when using this plan. There are two contribution \\r\\noptions for employers using this plan.  The contribution option selected must be applied to all eligible \\r\\nemployees.  <p>The first contribution option is a two-tiered rate based on an employee\\'s contribution. The first tier \\r\\nis based on a 100% match of up to 3% of an employee\\'s gross earnings.  The second tier is an additional \\r\\n50% match of up to 5% of an employee\\'s gross earnings.  The second contribution option is a flat rate \\r\\nbased on an employee\\'s gross earnings.  The employer\\'s contribution is a flat rate of 3% of an employee\\'s \\r\\ngross earnings.  When the second option is selected, the employer will contribute for the eligible employee \\r\\nregardless as to whether or not the employee contributes.</p><p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plan).',\r\n    'employerOnly': false,\r\n    'primaryType': '15    ',\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'codeTypeDesc': 'Safe Harbor 401k Non-Elective',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 1,\r\n    'codeGroup': 'Retirement Plans',\r\n    'codeTypeId': 19,\r\n    'codeType': 'Simple 401K',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\t\\tThis is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \\r\\n\\t\\t\\testablished by the employer for eligible employees.  Employee deductions can be a fixed dollar amount \\r\\n\\t\\t\\tor a percentage.<summary/>  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \\r\\n\\t\\t\\tsavings plan.  Employers are required to contribute when using this plan. There are two contribution \\r\\n\\t\\t\\toptions for employers using this plan.  The contribution option selected must be applied to all eligible \\r\\n\\t\\t\\temployees.  \\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>The first contribution option is a two-tiered rate based on an employee\\'s contribution. The first tier \\r\\n\\t\\t\\tis based on a 100% match of up to 3% of an employee\\'s gross earnings.  The second tier is an additional \\r\\n\\t\\t\\t50% match of up to 5% of an employee\\'s gross earnings.  The second contribution option is a flat rate \\r\\n\\t\\t\\tbased on an employee\\'s gross earnings.  The employer\\'s contribution is a flat rate of 3% of an employee\\'s \\r\\n\\t\\t\\tgross earnings.  When the second option is selected, the employer will contribute for the eligible employee \\r\\n\\t\\t\\tregardless as to whether or not the employee contributes.</p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plan). \\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': '16    ',\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'codeTypeDesc': 'Simple 401k Non-Elective',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeTypeId': 20,\r\n    'codeType': 'Medical',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'This is a Pre-Tax employee deduction toward an employer maintained Cafeteria or Section 125 medical insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \\r\\n<p>\\r\\nTaxable wages for all taxes, with the exception of some state unemployment wages (contact your state for details), are reduced by the deduction amount based on the employee income tax and unemployment states.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Medical',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeTypeId': 21,\r\n    'codeType': 'Dental',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'This is a Pre-Tax employee deduction toward an employer maintained Cafeteria or Section 125 dental insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \\r\\n<p>\\r\\nTaxable wages for all taxes, with the exception of some state unemployment wages (contact your state for details), are reduced by the deduction amount based on the employee income tax and unemployment states.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Dental',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeTypeId': 22,\r\n    'codeType': 'Vision',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'This is a Pre-Tax employee deduction toward an employer maintained Cafeteria or Section 125 vision insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \\r\\n<p>\\r\\nTaxable wages for all taxes, with the exception of some state unemployment wages (contact your state for details), are reduced by the deduction amount based on the employee income tax and unemployment states.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Vision',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeTypeId': 23,\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'This is a Pre-Tax employee deduction toward an employer maintained Cafeteria or Section 125 insurance plan.<summary/> \\r\\n<p>\\r\\nUp to five (5) \\'Miscellaneous\\' Pre-tax Insurance Premium deductions can be set-up in addition to the pre-labeled medical, dental and vision deductions.  Employee deductions can be fixed dollar or percentage amounts.  \\r\\n<p>\\r\\nTaxable wages for all taxes, with the exception of some state unemployment wages (contact your state for details), are reduced by the deduction amount based on the employee income tax and unemployment states.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 2,\r\n    'codeGroup': 'Pre-Tax Insurance Premiums',\r\n    'codeTypeId': 24,\r\n    'codeType': 'CAFE 2 deduction',\r\n    'hasPercent': false,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'This is a Pre-Tax employee deduction toward an employer maintained Cafeteria or Section 125 insurance plan.<summary/> \\r\\n<p>\\r\\nUp to five (5) \\'Miscellaneous\\' Pre-tax Insurance Premium deductions can be set-up in addition to the pre-labeled medical, dental and vision deductions.  Employee deductions can be fixed dollar or percentage amounts.  \\r\\n<p>\\r\\nTaxable wages for all taxes, with the exception of some state unemployment wages (contact your state for details), are reduced by the deduction amount based on the employee income tax and unemployment states.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'CAFE 2 deduction',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeTypeId': 30,\r\n    'codeType': 'Medical',\r\n    'hasPercent': false,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward an employer maintained medical insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \\r\\n<p>\\r\\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Medical',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeTypeId': 31,\r\n    'codeType': 'Dental',\r\n    'hasPercent': false,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward an employer maintained dental insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \\r\\n<p>\\r\\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Dental',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeTypeId': 32,\r\n    'codeType': 'Vision',\r\n    'hasPercent': false,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward an employer maintained vision insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \\r\\n<p>\\r\\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Vision',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeTypeId': 33,\r\n    'codeType': 'Life Insurance',\r\n    'hasPercent': false,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward an employer maintained life insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \\r\\n<p>\\r\\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Life Insurance',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 3,\r\n    'codeGroup': 'Post-Tax Insurance Premiums',\r\n    'codeTypeId': 34,\r\n    'codeType': 'Miscellaneous',\r\n    'hasPercent': false,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward an employer maintained insurance plan.<summary/>  \\r\\n<p>\\r\\nUp to five (5) \\'Miscellaneous\\' Post-tax Insurance Premium deductions can be set-up in addition to the pre-labeled medical, dental, vision and life deductions.   Employee deductions can be fixed dollar or percentage amounts.  \\r\\n<p>\\r\\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Miscellaneous',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 4,\r\n    'codeGroup': 'Flexible Spending Accounts (FSA)',\r\n    'codeTypeId': 40,\r\n    'codeType': 'Dependent Care',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Employees can use this pre-tax employee deduction toward their employer-maintained/provided Dependent Care FSA (Flexible Spending Account).<summary/> Assistance payments may include preschool, summer day camp, before/after school programs, and child/adult daycare. These amounts will get reported on W2 Box 10.',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Dependent Care',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 4,\r\n    'codeGroup': 'Flexible Spending Accounts (FSA)',\r\n    'codeTypeId': 41,\r\n    'codeType': 'Transportation',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Pre-tax employee deduction toward an employer maintained Transportation Flexible Spending Account.<summary/>  This is deducted from the first check of the month only.',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Transportation',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeTypeId': 43,\r\n    'codeType': 'Post-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '<span>This is a contribution made through an elected employee deduction toward an employee maintained Health Savings Account (HSA) plan. Only employees with a high deductible health plan (HDHP) offered through their employer as a Section 125 (or Cafeteria Plan) are eligible for this contribution.</span><summary/><br><br><span>This account can be used to pay IRS-defined medical expenses. Contributions can be made by an employee, and employer, or both. Employee contributions can be made to HSAs on either a post or pre tax basis.</span>',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'codeTypeDesc': 'HSA',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 50,\r\n    'codeType': 'Child Support',\r\n    'hasPercent': true,\r\n    'hasGoal': true,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward a mandated child support payment program managed through the employer payroll.<summary/>  The deduction can be set-up with an employee deduction goal or total deductions limit.  \\r\\n<p>\\r\\nUp to five (5) \\'Child Support\\' Other Post-tax Deductions can be set-up in addition to the pre-labeled \\'Other Post-Tax Deductions\\'.  Employee deductions can be fixed dollar or percentage amounts.  \\r\\n<p>\\r\\nThe deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Child Support',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 51,\r\n    'codeType': 'Garnishment with Goal',\r\n    'hasPercent': true,\r\n    'hasGoal': true,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward a mandated garnishment program managed through the employer payroll.<summary/>  The deduction can be set-up with an employee deduction goal or total deductions limit.  \\r\\n<p>\\r\\nUp to eight (8) \\'Garnishment with Goal\\' Other Post-tax Deductions can be set-up in addition to the pre-labeled \\'Other Post-Tax Deductions\\'.  Employee deductions can be fixed dollar or percentage amounts.  \\r\\n<p>\\r\\nThe deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Garnishment with Goal',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 52,\r\n    'codeType': '401k Loan Repayment',\r\n    'hasPercent': true,\r\n    'hasGoal': true,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward a 401(k) loan repayment program managed through the employer payroll.<summary/> The deduction can be set-up with an employee deduction goal or total deductions limit.  Employee deductions can be fixed dollar or percentage amounts.  \\r\\n<p>\\r\\nThe deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': '401k Loan Repayment',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 53,\r\n    'codeType': 'Union Dues',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward an employer maintained union dues program.<summary/>  Employee deductions can be fixed dollar or percentage amounts.<summary/>  \\r\\n<p>\\r\\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.  This is deducted from the first check of the month only.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Union Dues',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 54,\r\n    'codeType': 'Repay Cash Advance',\r\n    'hasPercent': true,\r\n    'hasGoal': true,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward an employer maintained cash advance repayment program.<summary/>  Employee deductions can be fixed dollar or percentage amounts.  \\r\\n<p>\\r\\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Repay Cash Advance',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 55,\r\n    'codeType': 'Repay Loan',\r\n    'hasPercent': true,\r\n    'hasGoal': true,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward an employer maintained loan repayment program.<summary/>  Employee deductions can be fixed dollar or percentage amounts.  \\r\\n<p>\\r\\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Repay Loan',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 56,\r\n    'codeType': 'Miscellaneous with Goal',\r\n    'hasPercent': true,\r\n    'hasGoal': true,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward an employer maintained program with an employee deduction goal or total deductions limit.<summary/>  \\r\\n<p>\\r\\nUp to five (5) \\'Miscellaneous with Goal\\' Other Post-tax Deductions can be set-up in addition to the pre-labeled \\'Other Post-Tax Deductions\\'.  Employee deductions can be fixed dollar or percentage amounts.  \\r\\n<p>\\r\\nThe deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Miscellaneous with Goal',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 57,\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward an employer maintained program.<summary/>  \\r\\n<p>\\r\\nUp to five (5) \\'Miscellaneous No Goal\\' Other Post-tax Deductions can be set-up in addition to the pre-labeled \\'Other Post-Tax Deductions\\'.  Employee deductions can be fixed dollar or percentage amounts.  \\r\\n<p>\\r\\nThe deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 58,\r\n    'codeType': 'Miscellaneous No Goal',\r\n    'hasPercent': false,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward an employer maintained program.<summary/>  \\r\\n<p>\\r\\nUp to five (5) \\'Miscellaneous No Goal\\' Other Post-tax Deductions can be set-up in addition to the pre-labeled \\'Other Post-Tax Deductions\\'.  Employee deductions can be fixed dollar or percentage amounts.  \\r\\n<p>\\r\\nThe deduction amount will not reduce employee taxable wages.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Miscellaneous No Goal',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 59,\r\n    'codeType': 'Garnishment No Goal',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward a mandated garnishment program managed through the employer payroll.<summary/>  The deduction is set-up with NO employee deduction goal or limit\\r\\n<p>\\r\\nUp to eight (8) \\'Garnishment No Goal\\' Other Post-tax Deductions can be set-up in addition to the pre-labeled \\'Other Post-Tax Deductions\\'.  Employee deductions can be fixed dollar or percentage amounts.  \\r\\n<p>\\r\\nThe deduction amount will not reduce employee taxable wages.  If the deduction requires a goal or limit for the employee, use the \\'Garnishment with Goal\\' deduction category.\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Garnishment No Goal',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeTypeId': 60,\r\n    'codeType': '401K Catch Up',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 10,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \\r\\n\\t\\t\\tmake \\'401(k) Catch-Up\\' contributions to a qualified 401(k) retirement savings plan established by their employer.<summary/>  \\r\\n\\t\\t\\tThis is a pre-tax employee deduction in addition to the \\'401(k)\\' contributions.  Employee deductions can \\r\\n\\t\\t\\tbe a fixed dollar amount or a percentage.</p>  \\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\\r\\n\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'codeTypeDesc': '401k Catch Up',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeTypeId': 61,\r\n    'codeType': '401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 11,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \\r\\n\\t\\t\\tmake \\'401(k) Tiered Catch-Up\\' contributions to a qualified 401(k) retirement savings plan established by their \\r\\n\\t\\t\\temployer.<summary/>  This is a pre-tax employee deduction in addition to the \\'401(k) Tiered\\' contributions.  \\r\\n\\t\\t\\tEmployee deductions can be a fixed dollar amount or a percentage.</p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'codeTypeDesc': '401k Tiered Catch Up',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeTypeId': 62,\r\n    'codeType': '403B Catch Up',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 12,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \\r\\n\\t\\t\\tmake \\'403(b) Catch-Up\\' contributions to a qualified 403(b) retirement savings plan established by their employer.<summary/>  \\r\\n\\t\\t\\tThis is a pre-tax employee deduction in addition to the \\'403(b)\\' contributions.  Employee deductions can \\r\\n\\t\\t\\tbe a fixed dollar amount or a percentage.</p>\\r\\n\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code E) and 13 (Retirement Plans).</p>\\r\\n\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'codeTypeDesc': '403b Catch Up',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeTypeId': 63,\r\n    'codeType': 'Simple IRA Catch Up',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 13,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to make \\r\\n\\t\\t\\t\\'Simple IRA Catch-Up\\' contributions to a qualified IRA retirement savings plan established by their employer.<summary/>  \\r\\n\\t\\t\\tThis is a pre-tax employee deduction in addition to the \\'Simple IRA\\' contributions.  Employee deductions can \\r\\n\\t\\t\\tbe a fixed dollar amount or a percentage.\\r\\n\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code S) and 13 (Retirement Plans).</p>\\r\\n\\t\\t\\t\\r\\n\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'codeTypeDesc': 'Simple IRA Catch Up',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeTypeId': 64,\r\n    'codeType': 'Roth 401K Catch Up',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 14,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to make \\r\\n\\t\\t\\t\\'Roth 401(k) Catch-Up\\' contributions to a qualified 401(k) retirement savings plan established by their employer.<summary/>  \\r\\n\\t\\t\\tThis is a post-tax employee deduction in addition to the \\'Roth 401(k)\\' contibution.  Employee deductions \\r\\n\\t\\t\\tcan be a fixed dollar amount or a percentage.</p>\\r\\n\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 1, 3, 5, 12 (Code AA) and 13 (Retirement Plans).</p>\\r\\n\\t\\t\\r\\n\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'codeTypeDesc': 'Roth 401k Catch Up',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeTypeId': 65,\r\n    'codeType': 'Safe H 401K Catch Up',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 18,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \\r\\n\\t\\t\\tmake \\'Safe Harbor 401(k) Catch-Up\\' contributions to a qualified 401(k) retirement savings plan established \\r\\n\\t\\t\\tby their employer.<summary/>  This is a pre-tax employee deduction in addition to the \\'Safe Harbor 401(k)\\' \\r\\n\\t\\t\\tcontributions.  Employee deductions can be a fixed dollar amount or a percentage.</p>    \\r\\n\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'codeTypeDesc': 'Safe Harbor 401k Non-Elective Catch Up',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeTypeId': 66,\r\n    'codeType': 'Simple 401K Catch Up',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 16,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to make \\r\\n\\t\\t\\t\\'Simple 401(k) Catch-Up\\' contributions to a qualified 401(k) retirement savings plan established by their \\r\\n\\t\\t\\temployer.<summary/>  This is a pre-tax employee deduction in addition to the \\'Simple 401(k)\\' contributions.  Employee deductions \\r\\n\\t\\t\\tcan be a fixed dollar amount or a percentage.</p>\\r\\n\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SINGLE',\r\n    'codeTypeDesc': 'Simple 401k Match Catch Up',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeTypeId': 67,\r\n    'codeType': 'Roth 401K Tiered Catch Up',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 9,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to make \\r\\n\\t\\t\\t\\'Roth 401(k) Catch-Up\\' contributions to a qualified 401(k) retirement savings plan established by their employer.  \\r\\n\\t\\t\\tThis is a post-tax employee deduction in addition to the \\'Roth 401(k)\\' contibution.  Employee deductions \\r\\n\\t\\t\\tcan be a fixed dollar amount or a percentage.</p>\\r\\n\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 1, 3, 5, 12 (Code AA) and 13 (Retirement Plans).</p>\\r\\n\\t\\t\\r\\n\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'TWOTIER',\r\n    'codeTypeDesc': 'Roth 401k Tiered Catch Up',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeTypeId': 68,\r\n    'codeType': 'Safe H Roth 401K NE Catchup',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 8,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \\r\\n\\t\\t\\tmake \\'Safe Harbor 401(k) Catch-Up\\' contributions to a qualified 401(k) retirement savings plan established \\r\\n\\t\\t\\tby their employer.<summary/>  This is a pre-tax employee deduction in addition to the \\'Safe Harbor 401(k)\\' \\r\\n\\t\\t\\tcontributions.  Employee deductions can be a fixed dollar amount or a percentage.</p>    \\r\\n\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective Catch Up',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeTypeId': 69,\r\n    'codeType': 'Safe H 401K Match Catch Up',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 15,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \\r\\n\\t\\t\\tmake \\'Safe Harbor 401(k) Catch-Up\\' contributions to a qualified 401(k) retirement savings plan established \\r\\n\\t\\t\\tby their employer.<summary/>  This is a pre-tax employee deduction in addition to the \\'Safe Harbor 401(k)\\' \\r\\n\\t\\t\\tcontributions.  Employee deductions can be a fixed dollar amount or a percentage.</p>    \\r\\n\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeTypeId': 70,\r\n    'codeType': 'Safe H Roth 401K Match Catchup',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 7,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \\r\\n\\t\\t\\tmake \\'Safe Harbor 401(k) Catch-Up\\' contributions to a qualified 401(k) retirement savings plan established \\r\\n\\t\\t\\tby their employer.<summary/>  This is a pre-tax employee deduction in addition to the \\'Safe Harbor 401(k)\\' \\r\\n\\t\\t\\tcontributions.  Employee deductions can be a fixed dollar amount or a percentage.</p>    \\r\\n\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': true,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'SNGLORTWO',\r\n    'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 6,\r\n    'codeGroup': 'Retirement Plans Catch Up',\r\n    'codeTypeId': 71,\r\n    'codeType': 'Simple 401K Catch Up',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 19,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '\\t\\t\\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to make \\r\\n\\t\\t\\t\\'Simple 401(k) Catch-Up\\' contributions to a qualified 401(k) retirement savings plan established by their \\r\\n\\t\\t\\temployer.<summary/>  This is a pre-tax employee deduction in addition to the \\'Simple 401(k)\\' contributions.  Employee deductions \\r\\n\\t\\t\\tcan be a fixed dollar amount or a percentage.</p>\\r\\n\\r\\n\\t\\t\\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\r\\n',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': true,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NONELECTIV',\r\n    'codeTypeDesc': 'Simple 401k Non-Elective Catch Up',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 72,\r\n    'codeType': '401k Loan Repayment',\r\n    'hasPercent': true,\r\n    'hasGoal': true,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward a 401(k) loan repayment program managed through the employer payroll.<summary/>  The deduction can be set-up with an employee deduction goal or total deductions limit.<summary/>  Employee deductions can be fixed dollar or percentage amounts.<p>The deduction amount will not reduce employee taxable wages.',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': '401k Loan Repayment',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 73,\r\n    'codeType': '401k Loan Repayment',\r\n    'hasPercent': true,\r\n    'hasGoal': true,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Deduction from employee net pay toward a 401(k) loan repayment program managed through the employer payroll.<summary/>  The deduction can be set-up with an employee deduction goal or total deductions limit.<summary/>  Employee deductions can be fixed dollar or percentage amounts.<p>The deduction amount will not reduce employee taxable wages.',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': '401k Loan Repayment',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeTypeId': 74,\r\n    'codeType': 'Pre-Tax HSA Contribution 1',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '<span>This is a contribution made through an elected employee deduction toward an employee maintained Health Savings Account (HSA) plan. Only employees with a high deductible health plan (HDHP) offered through their employer as a Section 125 (or Cafeteria Plan) are eligible for this contribution.</span><summary/><br><br><span>This account can be used to pay IRS-defined medical expenses. Contributions can be made by an employee, and employer, or both. Employee contributions can be made to HSAs on either a post or pre tax basis.</span>',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'codeTypeDesc': 'HSA',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeTypeId': 75,\r\n    'codeType': 'Post-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '<span>This is a contribution made through an elected employee deduction toward an employee maintained Health Savings Account (HSA) plan. Only employees with a high deductible health plan (HDHP) offered through their employer as a Section 125 (or Cafeteria Plan) are eligible for this contribution.</span><summary/><br><br><span>This account can be used to pay IRS-defined medical expenses. Contributions can be made by an employee, and employer, or both. Employee contributions can be made to HSAs on either a post or pre tax basis.</span>',\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'codeTypeDesc': 'HSA',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 7,\r\n    'codeGroup': 'Health Savings Accounts (HSA)',\r\n    'codeTypeId': 76,\r\n    'codeType': 'Pre-Tax HSA Contribution 2',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': '<span>This is a contribution made through an elected employee deduction toward an employee maintained Health Savings Account (HSA) plan. Only employees with a high deductible health plan (HDHP) offered through their employer as a Section 125 (or Cafeteria Plan) are eligible for this contribution.</span><summary/><br><br><span>This account can be used to pay IRS-defined medical expenses. Contributions can be made by an employee, and employer, or both. Employee contributions can be made to HSAs on either a post or pre tax basis.</span>',\r\n    'employerOnly': true,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOORSINGLE',\r\n    'codeTypeDesc': 'HSA',\r\n    'isConverted': true\r\n  },\r\n  {\r\n    'codeGroupId': 5,\r\n    'codeGroup': 'Other Post-Tax Deductions',\r\n    'codeTypeId': 89,\r\n    'codeType': 'Meals',\r\n    'hasPercent': false,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Meals - Employers allow employees to purchase meals at a fair or reasonable cost.<summary/> The meal may be consumed on or off the premises. The meal is taxable and does not count towards the employee\\'s minimum wage.',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'POSTTAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Meals',\r\n    'isConverted': false\r\n  },\r\n  {\r\n    'codeGroupId': 4,\r\n    'codeGroup': 'Flexible Spending Accounts (FSA)',\r\n    'codeTypeId': 90,\r\n    'codeType': 'Parking',\r\n    'hasPercent': true,\r\n    'hasGoal': false,\r\n    'retireAddon': 0,\r\n    // tslint:disable-next-line:max-line-length\r\n    'htmlDescription': 'Pre-tax employee deduction toward an employer maintained Parking Flexible Spending Account.<summary/>  This is deducted from the first check of the month only.',\r\n    'employerOnly': false,\r\n    'primaryType': null,\r\n    'isSure401K': false,\r\n    'isCatchUp': false,\r\n    'deductionPlanTaxOptionCode': 'PRETAX',\r\n    'deductionPlanMatchOptionCode': 'NOMATCH',\r\n    'codeTypeDesc': 'Parking',\r\n    'isConverted': true\r\n  }\r\n];\r\n","import { Deduction, DeductionParameter, DeductionPlanType, DeductionPlanMatchOptionType\r\n       } from '@model';\r\nimport { RawDeduction } from './master-data-deductions';\r\nimport { deductionModel } from './raw-deductions';\r\nimport { deductionGroups } from './raw-deductions-categories';\r\n\r\nexport function loadMockDeductions(): Deduction[] {\r\n  const res: Deduction[] = [];\r\n  const raw: RawDeduction[] = deductionModel;\r\n\r\n  const distinctCodeTypes = Array.from(new Set(raw.map(i => i.codeTypeId)));\r\n  distinctCodeTypes.map(dCodeId => {\r\n    res.push(fixData(buildDeduction(dCodeId, deductionModel)));\r\n  });\r\n  return res;\r\n}\r\n\r\nfunction fixData(d: Deduction): Deduction {\r\n  if ((50 <= d.codeTypeId && d.codeTypeId <= 59) ||  // Fix all Posttax deductions to be post-tax\r\n      (30 <= d.codeTypeId && d.codeTypeId <= 34)     // Fix. Medical, Vision, Dental, LifeInsurance (33), Misc (34=) post-tax\r\n     ) {\r\n    d.deductionPlanTaxOptionCode = DeductionPlanType.POSTTAX;\r\n  }\r\n  if (d.codeTypeId === 23) {\r\n    d.codeType = 'Miscellaneous Pre-Tax';  // add Pre-Tax to name\r\n  }\r\n  if (d.codeTypeId === 34) {\r\n    d.codeType = 'Miscellaneous Post-Tax'; // add Post-Tax to name\r\n  }\r\n  return d;\r\n}\r\n\r\nfunction buildDeduction(codeTypeId: number, raw: RawDeduction[]): Deduction {\r\n  const paramRows = raw.filter(d => d.codeTypeId === codeTypeId);\r\n  const f = paramRows[0];\r\n\r\n  const htmlDefinition = deductionGroups.find(it => it.codeTypeId === codeTypeId).htmlDescription;\r\n\r\n  // Retrieve dfault description / abbreviation\r\n  const description = raw.find(it => it.codeTypeId === codeTypeId).planDescription;\r\n  const abbreviation = raw.find(it => it.codeTypeId === codeTypeId).planName;\r\n\r\n  const ded: Deduction = {\r\n    codeGroupId: f.codeGroupId,\r\n    codeGroup: f.codeGroup,\r\n    codeTypeId: f.codeTypeId ,\r\n    codeType: f.codeType,\r\n    definition: (htmlDefinition || '').trim(),\r\n    defaultAbbreviation: (abbreviation || '').trim(),\r\n    defaultDescription: (description || '').trim(),\r\n    canChangeAbbreviation: canChangeAbbreviation(f),\r\n    canChangeDescription: true,\r\n    hasPercent: f.hasPercent,\r\n    retireAddon: f.retireAddon,\r\n    hasGoal: f.hasGoal,\r\n    employerOnly: f.employerOnly,\r\n    isSure401K: f.isSure401K,\r\n    isCatchUp: f.isCatchUp,\r\n    planCode: f.deductionPlanCode,\r\n    deductionPlanTaxOptionCode: toDeductionPlanType(f.deductionPlanTaxOptionCode),\r\n    deductionPlanMatchOptionCode: toDeductionPlanMatchOptionType(f.deductionPlanMatchOptionCode),\r\n\r\n    parameters: paramRows.map(buildDeductionParameter)\r\n  };\r\n  return ded;\r\n}\r\n\r\nfunction canChangeAbbreviation(f: RawDeduction): boolean {\r\n  // Can change all abbreviations except:\r\n  //   All retirement plan deductions, HSA, 401k Loan Repayment.\r\n  if (f.codeGroupId === 1 ||  // retirement plans\r\n      f.codeGroupId === 6 ||  // retirement plans catch-ups\r\n      f.codeGroupId === 7 ||  // HSA\r\n      f.codeTypeId === 52     // 401k Loan Repayment.\r\n     ) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction buildDeductionParameter(p: RawDeduction): DeductionParameter {\r\n  const res: DeductionParameter = {\r\n    cpdCode: p.cpdCode,\r\n    baseAccm: p.baseAccm,\r\n    codeTextDescription: p.codeTypeDesc,\r\n    taxDeduction: p.taxDed,\r\n    name: p.name,\r\n    description: p.description,\r\n    howType: p.howType,\r\n    dedRptSw: p.dedRptSw,\r\n    inNet: p.inNet,\r\n    checkPrnSw: p.checkPrnSw,\r\n    isDisplayed: p.isDisplayed,\r\n    isActive: p.isActive,\r\n    oneTimeDeduction: p.oneTimeDeduction,\r\n    isEmployerDisplayed: p.isEmployerDisplayed,\r\n    deductionPlanGroupCode: p.deductionPlanGroupCode,\r\n    deductionPlanGroup: p.deductionPlanGroup,\r\n    parameterName: p.parameterName,\r\n    displayName: p.displayName,\r\n    defaultDeductionRate: p.defaultDedRate\r\n  };\r\n  return res;\r\n}\r\n\r\nfunction toDeductionPlanType(val: string): DeductionPlanType {\r\n  switch (val) {\r\n    case 'PRETAX': return DeductionPlanType.PRETAX;\r\n    case 'POSTTAX': return DeductionPlanType.POSTTAX;\r\n    case 'NOEEDEDUCT': return DeductionPlanType.NOEEDEDUCT;\r\n    default: return null;\r\n  }\r\n}\r\nfunction toDeductionPlanMatchOptionType(val: string): DeductionPlanMatchOptionType {\r\n  switch (val) {\r\n    case 'TWOTIER': return DeductionPlanMatchOptionType.TWOTIER;\r\n    case 'NONELECTIV': return DeductionPlanMatchOptionType.NONELECTIV;\r\n    case 'NOORSINGLE': return DeductionPlanMatchOptionType.NOORSINGLE;\r\n    case 'SNGLORTWO': return DeductionPlanMatchOptionType.SNGLORTWO;\r\n    case 'NOMATCH': return DeductionPlanMatchOptionType.NOMATCH;\r\n    default: return null;\r\n  }\r\n}\r\nfunction toBool(val: string): boolean {\r\n  return val === 'Y' ? true : val === 'N' ? false : null;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { createOkResponse$, Db, RequestInfo, } from './in-mem-service-utils';\r\nimport { Deduction } from '@model';\r\nimport { loadMockDeductions } from './master-data-deductions-loader';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InMemDeductionService {\r\n\r\n  /** In-mem version of all deductions metadata */\r\n  private deductionMetadata: Deduction[] = this.getDeductionTypeList();\r\n\r\n  getRequest(req: RequestInfo, db: Db) {\r\n    if (req.url && req.url.endsWith('/deductions')) {\r\n      return createOkResponse$(req, this.deductionMetadata);\r\n    }\r\n  }\r\n  // Post requests handled in InMemSaveEntitiesService (in-mem-save-entities.service.ts)\r\n\r\n  private getDeductionTypeList(): Deduction[] {\r\n    return loadMockDeductions();\r\n  }\r\n}\r\n","import { createOkResponse$, } from './in-mem-service-utils';\nimport { loadMockDeductions } from './master-data-deductions-loader';\nimport * as i0 from \"@angular/core\";\nvar InMemDeductionService = /** @class */ (function () {\n    function InMemDeductionService() {\n        /** In-mem version of all deductions metadata */\n        this.deductionMetadata = this.getDeductionTypeList();\n    }\n    InMemDeductionService.prototype.getRequest = function (req, db) {\n        if (req.url && req.url.endsWith('/deductions')) {\n            return createOkResponse$(req, this.deductionMetadata);\n        }\n    };\n    // Post requests handled in InMemSaveEntitiesService (in-mem-save-entities.service.ts)\n    InMemDeductionService.prototype.getDeductionTypeList = function () {\n        return loadMockDeductions();\n    };\n    InMemDeductionService.ngInjectableDef = i0.defineInjectable({ factory: function InMemDeductionService_Factory() { return new InMemDeductionService(); }, token: InMemDeductionService, providedIn: \"root\" });\n    return InMemDeductionService;\n}());\nexport { InMemDeductionService };\n","import { Earning } from '@app/model';\r\n\r\nexport const earningModel: Earning[] = [\r\n  {\r\n    'code': '01',\r\n    'name': 'REGULAR',\r\n    'description': 'Regular Hourly Earnings',\r\n    'shortDescription': 'Regular Hourly Earnings',\r\n    'earningsCategory': 'DefaultEarnings',\r\n    'earningsGroupId': 1,\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '02',\r\n    'name': 'O/TIME',\r\n    'description': 'Overtime Earnings',\r\n    'shortDescription': 'Overtime Earnings',\r\n    'earningsCategory': 'DefaultEarnings',\r\n    'earningsGroupId': 3,\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '07',\r\n    'name': 'SALARY',\r\n    'description': 'Regular Salary Earnings',\r\n    'shortDescription': 'Regular Salary Earnings',\r\n    'earningsCategory': 'DefaultEarnings',\r\n    'earningsGroupId': 2,\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '08',\r\n    'name': 'OTHER H',\r\n    'description': 'Other Hours',\r\n    'shortDescription': 'Other Hours',\r\n    'earningsCategory': 'DefaultEarnings',\r\n    'earningsGroupId': 3,\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '95',\r\n    'name': '1099$$',\r\n    'description': 'Regular 1099 Earnings',\r\n    'shortDescription': 'Vacation',\r\n    'earningsCategory': 'DefaultEarnings',\r\n    'earningsGroupId': 4,\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '03',\r\n    'name': 'VACTION',\r\n    'description': 'Vacation',\r\n    'shortDescription': 'Vacation',\r\n    'earningsGroupId': 6,\r\n    'earningsCategory': 'DefaultOtherCompensation',\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '04',\r\n    'name': 'SICK',\r\n    'description': 'Sick',\r\n    'shortDescription': 'Sick',\r\n    'earningsGroupId': 6,\r\n    'earningsCategory': 'DefaultOtherCompensation',\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '05',\r\n    'name': 'HOLIDAY',\r\n    'description': 'Holiday',\r\n    'shortDescription': 'Holiday',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'DefaultOtherCompensation',\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '06',\r\n    'name': 'OTHER',\r\n    'description': 'Other',\r\n    'shortDescription': 'Other',\r\n    'earningsGroupId': 6,\r\n    'earningsCategory': 'DefaultOtherCompensation',\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '13',\r\n    'name': 'BONUS$',\r\n    'description': 'Bonus',\r\n    'shortDescription': 'Bonus',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'DefaultOtherCompensation',\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '14',\r\n    'name': 'COMM $',\r\n    'description': 'Commission',\r\n    'shortDescription': 'Commission',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'DefaultOtherCompensation',\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '19',\r\n    'name': 'OTHER $',\r\n    'description': 'Other (Taxable)',\r\n    'shortDescription': 'Other (Taxable)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'DefaultOtherCompensation',\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '45',\r\n    'name': 'REIMB.',\r\n    'description': 'Expense (No Tax)',\r\n    'shortDescription': 'Expense (No Tax)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'DefaultOtherCompensation',\r\n    'earningTypeId': null,\r\n    'earningTypeName': null,\r\n    'earningTaxTypeId': null,\r\n    'earningTaxType': null\r\n  },\r\n  {\r\n    'code': '25',\r\n    'name': 'TIPSCCP',\r\n    'description': 'Tips (Credit Card Paid)',\r\n    'shortDescription': 'Tips (Credit Card Paid)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 11,\r\n    'earningTypeName': 'Tips',\r\n    'earningTaxTypeId': 1,\r\n    'earningTaxType': 'None'\r\n  },\r\n  {\r\n    'code': '27',\r\n    'name': 'TIP2MIN',\r\n    'description': 'Tips To Minimum',\r\n    'shortDescription': 'Tips To Minimum',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 11,\r\n    'earningTypeName': 'Tips',\r\n    'earningTaxTypeId': 1,\r\n    'earningTaxType': 'None'\r\n  },\r\n  {\r\n    'code': '28',\r\n    'name': 'SVCCHG',\r\n    'description': 'Service Charges',\r\n    'shortDescription': 'Service Charges',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 9,\r\n    'earningTypeName': 'Service Charges',\r\n    'earningTaxTypeId': 1,\r\n    'earningTaxType': 'None'\r\n  },\r\n  {\r\n    'code': '30',\r\n    'name': 'MEALTX',\r\n    'description': 'Meals (Taxable)',\r\n    'shortDescription': 'Meals (Taxable)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 8,\r\n    'earningTypeName': 'Meals',\r\n    'earningTaxTypeId': 2,\r\n    'earningTaxType': 'Taxable'\r\n  },\r\n  {\r\n    'code': '31',\r\n    'name': 'MEALNTX',\r\n    'description': 'Meals (No Tax)',\r\n    'shortDescription': 'Meals (No Tax)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 8,\r\n    'earningTypeName': 'Meals',\r\n    'earningTaxTypeId': 3,\r\n    'earningTaxType': 'Non-Taxable'\r\n  },\r\n  {\r\n    'code': '36',\r\n    'name': 'PERDIEM',\r\n    'description': 'Per-Diem (No Tax)',\r\n    'shortDescription': 'Per-Diem (No Tax)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 6,\r\n    'earningTypeName': 'Per-Diem',\r\n    'earningTaxTypeId': 1,\r\n    'earningTaxType': 'None'\r\n  },\r\n  {\r\n    'code': '38',\r\n    'name': 'MSCTX01',\r\n    'description': 'Miscellaneous (Taxable)',\r\n    'shortDescription': 'Miscellaneous (Taxable)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 1,\r\n    'earningTypeName': 'Custom',\r\n    'earningTaxTypeId': 2,\r\n    'earningTaxType': 'Taxable'\r\n  },\r\n  {\r\n    'code': '40',\r\n    'name': 'MSCTX02',\r\n    'description': 'Miscellaneous 2 (Taxable)',\r\n    'shortDescription': 'Miscellaneous 2 (Taxable)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 1,\r\n    'earningTypeName': 'Custom',\r\n    'earningTaxTypeId': 2,\r\n    'earningTaxType': 'Taxable'\r\n  },\r\n  {\r\n    'code': '42',\r\n    'name': 'MSCTX03',\r\n    'description': 'Miscellaneous 3 (Taxable)',\r\n    'shortDescription': 'Miscellaneous 3 (Taxable)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 1,\r\n    'earningTypeName': 'Custom',\r\n    'earningTaxTypeId': 2,\r\n    'earningTaxType': 'Taxable'\r\n  },\r\n  {\r\n    'code': '43',\r\n    'name': 'MSCTX04',\r\n    'description': 'Miscellaneous 4 (Taxable)',\r\n    'shortDescription': 'Miscellaneous 4 (Taxable)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 1,\r\n    'earningTypeName': 'Custom',\r\n    'earningTaxTypeId': 2,\r\n    'earningTaxType': 'Taxable'\r\n  },\r\n  {\r\n    'code': '44',\r\n    'name': 'DRAW-NT',\r\n    'description': 'Other (No Tax)',\r\n    'shortDescription': 'Other (No Tax)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 4,\r\n    'earningTypeName': 'Other',\r\n    'earningTaxTypeId': 1,\r\n    'earningTaxType': 'None'\r\n  },\r\n  {\r\n    'code': '49',\r\n    'name': 'MSCTX05',\r\n    'description': 'Miscellaneous 5 (Taxable)',\r\n    'shortDescription': 'Miscellaneous 5 (Taxable)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 1,\r\n    'earningTypeName': 'Custom',\r\n    'earningTaxTypeId': 2,\r\n    'earningTaxType': 'Taxable'\r\n  },\r\n  {\r\n    'code': '51',\r\n    'name': 'FRNGBEN',\r\n    'description': 'Fringe Benefit (Taxable)',\r\n    'shortDescription': 'Fringe Benefit (Taxable)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 5,\r\n    'earningTypeName': 'Fringe Benefit',\r\n    'earningTaxTypeId': 2,\r\n    'earningTaxType': 'Taxable'\r\n  },\r\n  {\r\n    'code': '52',\r\n    'name': 'FRINGE2',\r\n    'description': 'Fringe Benefit2 (Taxable)',\r\n    'shortDescription': 'Fringe Benefit2 (Taxable)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 5,\r\n    'earningTypeName': 'Fringe Benefit',\r\n    'earningTaxTypeId': 2,\r\n    'earningTaxType': 'Taxable'\r\n  },\r\n  {\r\n    'code': '53',\r\n    'name': 'FRINGNT',\r\n    'description': 'Fringe Benefit (No Tax)',\r\n    'shortDescription': 'Fringe Benefit (No Tax)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 5,\r\n    'earningTypeName': 'Fringe Benefit',\r\n    'earningTaxTypeId': 3,\r\n    'earningTaxType': 'Non-Taxable'\r\n  },\r\n  {\r\n    'code': '54',\r\n    'name': 'FRINGSS',\r\n    'description': 'Fringe Benefit (SS/MEDI)',\r\n    'shortDescription': 'Fringe Benefit (SS/MEDI)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 5,\r\n    'earningTypeName': 'Fringe Benefit',\r\n    'earningTaxTypeId': 4,\r\n    'earningTaxType': 'SS/MEDI'\r\n  },\r\n  {\r\n    'code': '55',\r\n    'name': 'AUTO  1',\r\n    'description': 'Auto Allowance (Taxable)',\r\n    'shortDescription': 'Personal use of company vehicle. Does not add to net pay. W-2 Boxes: 1, 3, 5, 14. ',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 3,\r\n    'earningTypeName': 'Auto Allowance',\r\n    'earningTaxTypeId': 2,\r\n    'earningTaxType': 'Taxable'\r\n  },\r\n  {\r\n    'code': '56',\r\n    'name': 'AUTO  2',\r\n    'description': 'Auto Allowance (No Tax)',\r\n    'shortDescription': 'Reimbursement for business related auto expenses. Does not add to net pay. <b>W-2 Boxes: none</b>.',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 3,\r\n    'earningTypeName': 'Auto Allowance',\r\n    'earningTaxTypeId': 3,\r\n    'earningTaxType': 'Non-Taxable'\r\n  },\r\n  {\r\n    'code': '57',\r\n    'name': 'MOVING1',\r\n    'description': 'Moving Expense (Taxable)',\r\n    'shortDescription': 'Moving Expense (Taxable)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 10,\r\n    'earningTypeName': 'Moving Expense',\r\n    'earningTaxTypeId': 2,\r\n    'earningTaxType': 'Taxable'\r\n  },\r\n  {\r\n    'code': '59',\r\n    'name': 'INSPRM1',\r\n    'description': 'Group Term Life Insurance',\r\n    'shortDescription': 'Group Term Life Insurance',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 7,\r\n    'earningTypeName': 'Group Term Life Insurance',\r\n    'earningTaxTypeId': 1,\r\n    'earningTaxType': 'None'\r\n  },\r\n  {\r\n    'code': '5B',\r\n    'name': 'MOVE EX',\r\n    'description': 'Moving Expense (No Tax)',\r\n    'shortDescription': 'Moving Expense (No Tax)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 10,\r\n    'earningTypeName': 'Moving Expense',\r\n    'earningTaxTypeId': 3,\r\n    'earningTaxType': 'Non-Taxable'\r\n  },\r\n  {\r\n    'code': '63',\r\n    'name': 'TIPCASH',\r\n    'description': 'Tips (Cash)',\r\n    'shortDescription': 'Tips (Cash)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 11,\r\n    'earningTypeName': 'Tips',\r\n    'earningTaxTypeId': 1,\r\n    'earningTaxType': 'None'\r\n  },\r\n  {\r\n    'code': '64',\r\n    'name': 'MSCNT01',\r\n    'description': 'Miscellaneous (No Tax)',\r\n    'shortDescription': 'Miscellaneous (No Tax)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 1,\r\n    'earningTypeName': 'Custom',\r\n    'earningTaxTypeId': 3,\r\n    'earningTaxType': 'Non-Taxable'\r\n  },\r\n  {\r\n    'code': '65',\r\n    'name': 'MSCNT02',\r\n    'description': 'Miscellaneous 2 (No Tax)',\r\n    'shortDescription': 'Miscellaneous 2 (No Tax)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 1,\r\n    'earningTypeName': 'Custom',\r\n    'earningTaxTypeId': 3,\r\n    'earningTaxType': 'Non-Taxable'\r\n  },\r\n  {\r\n    'code': '66',\r\n    'name': 'TIPSCCO',\r\n    'description': 'Tips (Credit Card Owed)',\r\n    'shortDescription': 'Tips (Credit Card Owed)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 11,\r\n    'earningTypeName': 'Tips',\r\n    'earningTaxTypeId': 1,\r\n    'earningTaxType': 'None'\r\n  },\r\n  {\r\n    'code': '6C',\r\n    'name': 'MSCNT03',\r\n    'description': 'Miscellaneous 3 (No Tax)',\r\n    'shortDescription': 'Miscellaneous 3 (No Tax)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 1,\r\n    'earningTypeName': 'Custom',\r\n    'earningTaxTypeId': 3,\r\n    'earningTaxType': 'Non-Taxable'\r\n  },\r\n  {\r\n    'code': '6I',\r\n    'name': 'MSCNT04',\r\n    'description': 'Miscellaneous 4 (No Tax)',\r\n    'shortDescription': 'Miscellaneous 4 (No Tax)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 1,\r\n    'earningTypeName': 'Custom',\r\n    'earningTaxTypeId': 3,\r\n    'earningTaxType': 'Non-Taxable'\r\n  },\r\n  {\r\n    'code': '8A',\r\n    'name': 'SCorp2%',\r\n    'description': 'S-Corp 2% Owner',\r\n    'shortDescription': 'S-Corp 2% Owner',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 2,\r\n    'earningTypeName': 'SCorp',\r\n    'earningTaxTypeId': 1,\r\n    'earningTaxType': 'None'\r\n  },\r\n  {\r\n    'code': '98',\r\n    'name': 'MSCNT05',\r\n    'description': 'Miscellaneous 5 (No Tax)',\r\n    'shortDescription': 'Miscellaneous 5 (No Tax)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 1,\r\n    'earningTypeName': 'Custom',\r\n    'earningTaxTypeId': 3,\r\n    'earningTaxType': 'Non-Taxable'\r\n  },\r\n  {\r\n    'code': '9A',\r\n    'name': 'ClerNTx',\r\n    'description': 'Clergy (No Tax)',\r\n    'shortDescription': 'Clergy (No Tax)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 12,\r\n    'earningTypeName': 'Clergy',\r\n    'earningTaxTypeId': 3,\r\n    'earningTaxType': 'Non-Taxable'\r\n  },\r\n  {\r\n    'code': '9B',\r\n    'name': 'Housing',\r\n    'description': 'Housing Allowance',\r\n    'shortDescription': 'Housing Allowance',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 12,\r\n    'earningTypeName': 'Clergy',\r\n    'earningTaxTypeId': 1,\r\n    'earningTaxType': 'None'\r\n  },\r\n  {\r\n    'code': '9T',\r\n    'name': 'ClergTx',\r\n    'description': 'Clergy (Taxable)',\r\n    'shortDescription': 'Clergy (Taxable)',\r\n    'earningsGroupId': 5,\r\n    'earningsCategory': 'AdditionalEarnings',\r\n    'earningTypeId': 12,\r\n    'earningTypeName': 'Clergy',\r\n    'earningTaxTypeId': 2,\r\n    'earningTaxType': 'Taxable'\r\n  }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { createOkResponse$, Db, RequestInfo, } from './in-mem-service-utils';\r\nimport { Earning } from '@model';\r\nimport { loadMockEarnings } from './master-data-earnings-loader';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InMemEarningService {\r\n\r\n  /** In-mem version of all deductions metadata */\r\n  private earningMetadata: Earning[] = this.getAdditionalEarnings();\r\n\r\n  getRequest(req: RequestInfo, db: Db) {\r\n    if (req.url && req.url.endsWith('/earnings')) {\r\n      return createOkResponse$(req, this.earningMetadata);\r\n    }\r\n  }\r\n  // Post requests handled in InMemSaveEntitiesService (in-mem-save-entities.service.ts)\r\n\r\n  private getAdditionalEarnings(): Earning[] {\r\n    return loadMockEarnings();\r\n  }\r\n}\r\n","import { createOkResponse$, } from './in-mem-service-utils';\nimport { loadMockEarnings } from './master-data-earnings-loader';\nimport * as i0 from \"@angular/core\";\nvar InMemEarningService = /** @class */ (function () {\n    function InMemEarningService() {\n        /** In-mem version of all deductions metadata */\n        this.earningMetadata = this.getAdditionalEarnings();\n    }\n    InMemEarningService.prototype.getRequest = function (req, db) {\n        if (req.url && req.url.endsWith('/earnings')) {\n            return createOkResponse$(req, this.earningMetadata);\n        }\n    };\n    // Post requests handled in InMemSaveEntitiesService (in-mem-save-entities.service.ts)\n    InMemEarningService.prototype.getAdditionalEarnings = function () {\n        return loadMockEarnings();\n    };\n    InMemEarningService.ngInjectableDef = i0.defineInjectable({ factory: function InMemEarningService_Factory() { return new InMemEarningService(); }, token: InMemEarningService, providedIn: \"root\" });\n    return InMemEarningService;\n}());\nexport { InMemEarningService };\n","import { Earning } from '@app/model';\r\nimport { earningModel } from './raw-earnings';\r\n\r\nexport function loadMockEarnings(): Earning[] {\r\n  const res: Earning[] = earningModel;\r\n  return res;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  createOkResponse$,\r\n  createResponse$,\r\n  Db,\r\n  RequestInfo,\r\n  STATUS\r\n} from './in-mem-service-utils';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { EinLookupResponse, einLookupInterceptor } from '@core/services/tin-check.service';\r\n\r\n/**\r\n * TinCheck service, proxied by ECommerce API\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class InMemEinService {\r\n  getRequest(req: RequestInfo, db: Db): Observable<any> {\r\n    if (req.url && /\\/ein\\/lookup\\?/.test(req.url)) {\r\n      return this.tinCheck$(req, db);\r\n    }\r\n    // all other GET `ein` requests that make it here are bad\r\n    return undefined;\r\n  }\r\n\r\n  // #region TinCheck\r\n  tinCheck$(reqInfo: RequestInfo, db: Db): Observable<EinLookupResponse> {\r\n    const originalRequest = reqInfo.req as any;\r\n    const ein = originalRequest.params.get('ein');\r\n    const name = originalRequest.params.get('name');\r\n    return tinCheckValidate();\r\n\r\n    function tinCheckValidate(): Observable<EinLookupResponse> {\r\n      if (!ein) {\r\n        return createResponse$(reqInfo, STATUS.BAD_REQUEST, 'Bad Request', [ 'FEIN not provided.' ]);\r\n      }\r\n      if (!name) {\r\n        return createResponse$(reqInfo, STATUS.BAD_REQUEST, 'Bad Request', [ 'Legal Name not provided.' ]);\r\n      }\r\n\r\n      let mockEinResponse = einLookupInterceptor(ein, name);\r\n\r\n      // When local mocking enabled, act as if fein were the partial-match interceptor FEINs\r\n      // In other environments, request would go through to real service\r\n      if (!mockEinResponse) {\r\n          mockEinResponse = einLookupInterceptor('11-1111111', name);\r\n      }\r\n      return createOkResponse$(reqInfo, mockEinResponse);\r\n    }\r\n  }\r\n  // #endregion TinCheck\r\n\r\n}\r\n","import { createOkResponse$, createResponse$, STATUS } from './in-mem-service-utils';\nimport { einLookupInterceptor } from '@core/services/tin-check.service';\nimport * as i0 from \"@angular/core\";\n/**\n * TinCheck service, proxied by ECommerce API\n */\nvar InMemEinService = /** @class */ (function () {\n    function InMemEinService() {\n    }\n    InMemEinService.prototype.getRequest = function (req, db) {\n        if (req.url && /\\/ein\\/lookup\\?/.test(req.url)) {\n            return this.tinCheck$(req, db);\n        }\n        // all other GET `ein` requests that make it here are bad\n        return undefined;\n    };\n    // #region TinCheck\n    InMemEinService.prototype.tinCheck$ = function (reqInfo, db) {\n        var originalRequest = reqInfo.req;\n        var ein = originalRequest.params.get('ein');\n        var name = originalRequest.params.get('name');\n        return tinCheckValidate();\n        function tinCheckValidate() {\n            if (!ein) {\n                return createResponse$(reqInfo, STATUS.BAD_REQUEST, 'Bad Request', ['FEIN not provided.']);\n            }\n            if (!name) {\n                return createResponse$(reqInfo, STATUS.BAD_REQUEST, 'Bad Request', ['Legal Name not provided.']);\n            }\n            var mockEinResponse = einLookupInterceptor(ein, name);\n            // When local mocking enabled, act as if fein were the partial-match interceptor FEINs\n            // In other environments, request would go through to real service\n            if (!mockEinResponse) {\n                mockEinResponse = einLookupInterceptor('11-1111111', name);\n            }\n            return createOkResponse$(reqInfo, mockEinResponse);\n        }\n    };\n    InMemEinService.ngInjectableDef = i0.defineInjectable({ factory: function InMemEinService_Factory() { return new InMemEinService(); }, token: InMemEinService, providedIn: \"root\" });\n    return InMemEinService;\n}());\nexport { InMemEinService };\n","import { Injectable } from '@angular/core';\r\nimport { createOkResponse$, createBadRequestResponse$, Db, RequestInfo } from './in-mem-service-utils';\r\nimport { getGuidComb } from '@core/guid-fns';\r\nimport { Envelope, EnvelopeStatus, EnvelopeSigner } from '@app/model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class InMemEsignService {\r\n  getEsignUrl(req: RequestInfo, db: Db) {\r\n    const body = {\r\n      // links expire after 5 minutes, so this will redirect right away.\r\n      // url:\r\n      //   'https://demo.docusign.net/Signing/StartInSession.aspx?t=f9e7440a-c66e-42e9-bd12-8a5199cb37c1'\r\n\r\n      url: '/assets/documock.html'\r\n    };\r\n    return createOkResponse$(req, body);\r\n  }\r\n\r\n  postEsignSend(req: RequestInfo, db: Db) {\r\n    const companyId = req.url.split('/').pop();\r\n\r\n    let envelope = <Envelope> from(db.Envelope).find(e => true);\r\n    if (!envelope) {\r\n      envelope = {\r\n        id: getGuidComb(),\r\n        companyId: companyId,\r\n        eSignEnvelopeId: getGuidComb(),\r\n        status: EnvelopeStatus.sent,\r\n        createdDate: new Date(),\r\n        statusDate: new Date(),\r\n        isWetSign: false,\r\n        isRemoved: false\r\n      };\r\n      db.Envelope.push(envelope);\r\n    }\r\n    envelope.status = EnvelopeStatus.sent;\r\n    envelope.statusDate = new Date();\r\n    envelope.eSignEnvelopeId = getGuidComb();\r\n\r\n    // envelopeSigner objects created on the server\r\n    // let signer1 = <EnvelopeSigner> from(db.EnvelopeSigner).find(e => true);\r\n    // { signerEmail, signerFirstName, signerLastName, signerTitle, spouseEmail, spouseFirstName, spouseLastName }\r\n\r\n    const signers = (<any>req.req).body.signers as EnvelopeSigner[];\r\n    if (signers && signers.length) {\r\n      signers.forEach(sig => {\r\n        const old = db.EnvelopeSigner.find(e => e.id === sig.id);\r\n        if (old) {\r\n          Object.assign(old, sig);\r\n        } else {\r\n          db.EnvelopeSigner.push(sig);\r\n        }\r\n      });\r\n    }\r\n\r\n    const body = {\r\n      status: envelope.status,\r\n      envelope: envelope\r\n    };\r\n    return createOkResponse$(req, body);\r\n\r\n    function from(collection: { companyId: string }[]) {\r\n      return collection ? collection.filter(c => c.companyId === companyId) : [];\r\n    }\r\n  }\r\n  /**\r\n   * Mark completable envelopes as completed.\r\n   * See esign.service.markEnvelopesSigned\r\n   */\r\n   postMarkEnvelopesCompleted(req: RequestInfo, db: Db) {\r\n    const originalRequest = req.req as any;\r\n    const companyId: string = (originalRequest.body || {}).companyId;\r\n    let changed = false;\r\n    if (companyId) {\r\n      db['Envelope'] = db['Envelope']\r\n        .map((e: Envelope) => canComplete(e) ? complete(e) : e );\r\n      const body = changed ? {companyId, id: 'complete'} : undefined;\r\n      return createOkResponse$(req, body);\r\n    } else {\r\n      return createBadRequestResponse$(req);\r\n    }\r\n\r\n    // NB: Guessing at this logic\r\n    function canComplete(e: Envelope) {\r\n      return e.companyId === companyId && !e.isRemoved && (\r\n        e.status === EnvelopeStatus.delivered ||\r\n        e.status === EnvelopeStatus.draft ||\r\n        e.status === EnvelopeStatus.local ||\r\n        e.status === EnvelopeStatus.sent\r\n      );\r\n    }\r\n\r\n    // NB: Guessing at this logic\r\n    function complete(e: Envelope) {\r\n      changed = true;\r\n      e.status = EnvelopeStatus.completed;\r\n      e.statusDate = new Date();\r\n      return e;\r\n    }\r\n  }\r\n}\r\n","import { createOkResponse$, createBadRequestResponse$ } from './in-mem-service-utils';\nimport { getGuidComb } from '@core/guid-fns';\nimport { EnvelopeStatus } from '@app/model';\nimport * as i0 from \"@angular/core\";\nvar InMemEsignService = /** @class */ (function () {\n    function InMemEsignService() {\n    }\n    InMemEsignService.prototype.getEsignUrl = function (req, db) {\n        var body = {\n            // links expire after 5 minutes, so this will redirect right away.\n            // url:\n            //   'https://demo.docusign.net/Signing/StartInSession.aspx?t=f9e7440a-c66e-42e9-bd12-8a5199cb37c1'\n            url: '/assets/documock.html'\n        };\n        return createOkResponse$(req, body);\n    };\n    InMemEsignService.prototype.postEsignSend = function (req, db) {\n        var companyId = req.url.split('/').pop();\n        var envelope = from(db.Envelope).find(function (e) { return true; });\n        if (!envelope) {\n            envelope = {\n                id: getGuidComb(),\n                companyId: companyId,\n                eSignEnvelopeId: getGuidComb(),\n                status: EnvelopeStatus.sent,\n                createdDate: new Date(),\n                statusDate: new Date(),\n                isWetSign: false,\n                isRemoved: false\n            };\n            db.Envelope.push(envelope);\n        }\n        envelope.status = EnvelopeStatus.sent;\n        envelope.statusDate = new Date();\n        envelope.eSignEnvelopeId = getGuidComb();\n        // envelopeSigner objects created on the server\n        // let signer1 = <EnvelopeSigner> from(db.EnvelopeSigner).find(e => true);\n        // { signerEmail, signerFirstName, signerLastName, signerTitle, spouseEmail, spouseFirstName, spouseLastName }\n        var signers = req.req.body.signers;\n        if (signers && signers.length) {\n            signers.forEach(function (sig) {\n                var old = db.EnvelopeSigner.find(function (e) { return e.id === sig.id; });\n                if (old) {\n                    Object.assign(old, sig);\n                }\n                else {\n                    db.EnvelopeSigner.push(sig);\n                }\n            });\n        }\n        var body = {\n            status: envelope.status,\n            envelope: envelope\n        };\n        return createOkResponse$(req, body);\n        function from(collection) {\n            return collection ? collection.filter(function (c) { return c.companyId === companyId; }) : [];\n        }\n    };\n    /**\n     * Mark completable envelopes as completed.\n     * See esign.service.markEnvelopesSigned\n     */\n    InMemEsignService.prototype.postMarkEnvelopesCompleted = function (req, db) {\n        var originalRequest = req.req;\n        var companyId = (originalRequest.body || {}).companyId;\n        var changed = false;\n        if (companyId) {\n            db['Envelope'] = db['Envelope']\n                .map(function (e) { return canComplete(e) ? complete(e) : e; });\n            var body = changed ? { companyId: companyId, id: 'complete' } : undefined;\n            return createOkResponse$(req, body);\n        }\n        else {\n            return createBadRequestResponse$(req);\n        }\n        // NB: Guessing at this logic\n        function canComplete(e) {\n            return e.companyId === companyId && !e.isRemoved && (e.status === EnvelopeStatus.delivered ||\n                e.status === EnvelopeStatus.draft ||\n                e.status === EnvelopeStatus.local ||\n                e.status === EnvelopeStatus.sent);\n        }\n        // NB: Guessing at this logic\n        function complete(e) {\n            changed = true;\n            e.status = EnvelopeStatus.completed;\n            e.statusDate = new Date();\n            return e;\n        }\n    };\n    InMemEsignService.ngInjectableDef = i0.defineInjectable({ factory: function InMemEsignService_Factory() { return new InMemEsignService(); }, token: InMemEsignService, providedIn: \"root\" });\n    return InMemEsignService;\n}());\nexport { InMemEsignService };\n","import { Injectable } from '@angular/core';\r\nimport { createResponse$, Db, getSubFromRequest, RequestInfo, ResponseOptions, STATUS } from './in-mem-service-utils';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class InMemEnrollmentService {\r\n\r\n  postRequest(req: RequestInfo, db: Db) {\r\n    // Does nothing in mock world\r\n    if (req.url && req.url.includes('/enrollment/finalize')) {\r\n      console.log(`In-mem-enrollment-service saw request '/enrollment/finalize'`);\r\n      return createResponse$(req, STATUS.OK, '', {\r\n        sucess: false,\r\n        validationErrors: ['In memory migration service does not send migration requests ...']});\r\n    }\r\n  }\r\n}\r\n","import { createResponse$, Db, RequestInfo, STATUS } from './in-mem-service-utils';\nimport * as i0 from \"@angular/core\";\nvar InMemEnrollmentService = /** @class */ (function () {\n    function InMemEnrollmentService() {\n    }\n    InMemEnrollmentService.prototype.postRequest = function (req, db) {\n        // Does nothing in mock world\n        if (req.url && req.url.includes('/enrollment/finalize')) {\n            console.log(\"In-mem-enrollment-service saw request '/enrollment/finalize'\");\n            return createResponse$(req, STATUS.OK, '', {\n                sucess: false,\n                validationErrors: ['In memory migration service does not send migration requests ...']\n            });\n        }\n    };\n    InMemEnrollmentService.ngInjectableDef = i0.defineInjectable({ factory: function InMemEnrollmentService_Factory() { return new InMemEnrollmentService(); }, token: InMemEnrollmentService, providedIn: \"root\" });\n    return InMemEnrollmentService;\n}());\nexport { InMemEnrollmentService };\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { createOkResponse$, Db, RequestInfo } from './in-mem-service-utils';\nimport { environment } from '@environment';\nimport { JwtService } from '../mock-auth/jwt.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../mock-auth/jwt.service\";\nvar tokenPrototype = {\n    'nbf': 1535425661,\n    'exp': 1535429261,\n    'iss': 'https://devidentity.surepayroll.com',\n    'aud': [\n        'https://devidentity.surepayroll.com/resources',\n        'document',\n        'enrollment',\n        'enrollment_api'\n    ],\n    'client_id': 'ecommerce',\n    'sub': '',\n    'auth_time': 1535425661,\n    'idp': 'local',\n    'email': '',\n    'role': 'Approver',\n    'permission': 'unknown',\n    'scope': environment.oidcScope.split(' '),\n    'amr': [\n        'password'\n    ]\n};\nvar InMemIdentityService = /** @class */ (function () {\n    function InMemIdentityService(jwtService) {\n        this.jwtService = jwtService;\n    }\n    /**\n     * POST requests to Identity Server\n     */\n    InMemIdentityService.prototype.postRequest = function (req, db) {\n        if (req.url.endsWith('connect/token')) {\n            var reqBody = decodeFormUrlBody(req.req.body);\n            var resBody = this.getMockToken(reqBody);\n            return createOkResponse$(req, resBody);\n        }\n        // all other POST SurePayroll requests that make it here are bad\n        return undefined;\n    };\n    InMemIdentityService.prototype.getMockToken = function (_a) {\n        var email = _a.email, sub = _a.sub;\n        var data = __assign({}, tokenPrototype, { email: email, sub: sub });\n        var token = this.jwtService.createJwt(data);\n        return {\n            // Example. Not valid for communicating with real server\n            'access_token': token,\n            'expires_in': 3600,\n            'token_type': 'Bearer'\n        };\n    };\n    InMemIdentityService.ngInjectableDef = i0.defineInjectable({ factory: function InMemIdentityService_Factory() { return new InMemIdentityService(i0.inject(i1.JwtService)); }, token: InMemIdentityService, providedIn: \"root\" });\n    return InMemIdentityService;\n}());\nexport { InMemIdentityService };\nfunction decodeFormUrlBody(body) {\n    var keyValuePairs = body.split('&');\n    var json = {};\n    for (var i = 0, len = keyValuePairs.length, tmp = void 0, key = void 0, value = void 0; i < len; i++) {\n        tmp = keyValuePairs[i].split('=');\n        key = decodeURIComponent(tmp[0]);\n        value = decodeURIComponent(tmp[1]);\n        if (key.search(/\\[\\]$/) !== -1) {\n            tmp = key.replace(/\\[\\]$/, '');\n            json[tmp] = json[tmp] || [];\n            json[tmp].push(value);\n        }\n        else {\n            json[key] = value;\n        }\n    }\n    return json;\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Company, User } from '@model';\r\nimport { createOkResponse$, createBadRequestResponse$, Db, RequestInfo } from './in-mem-service-utils';\r\nimport { environment } from '@environment';\r\nimport { JwtService } from '../mock-auth/jwt.service';\r\nimport { OidcTokenResponse } from '@core/services/auth-services/oidc-token-response';\r\n\r\nconst tokenPrototype = {\r\n  'nbf': 1535425661,\r\n  'exp': 1535429261,\r\n  'iss': 'https://devidentity.surepayroll.com',\r\n  'aud': [\r\n    'https://devidentity.surepayroll.com/resources',\r\n    'document',\r\n    'enrollment',\r\n    'enrollment_api'\r\n  ],\r\n  'client_id': 'ecommerce',\r\n  'sub': '',\r\n  'auth_time': 1535425661,\r\n  'idp': 'local',\r\n  'email': '',\r\n  'role': 'Approver',\r\n  'permission': 'unknown',\r\n  'scope': environment.oidcScope.split(' '),\r\n  'amr': [\r\n    'password'\r\n  ]\r\n};\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class InMemIdentityService {\r\n\r\n  constructor(private jwtService: JwtService) {}\r\n  /**\r\n   * POST requests to Identity Server\r\n   */\r\n  postRequest(req: RequestInfo, db: Db) {\r\n    if (req.url.endsWith('connect/token')) {\r\n      const reqBody = decodeFormUrlBody((req.req as any).body);\r\n      const resBody = this.getMockToken(reqBody);\r\n      return createOkResponse$(req, resBody);\r\n    }\r\n    // all other POST SurePayroll requests that make it here are bad\r\n    return undefined;\r\n  }\r\n\r\n  getMockToken({ email, sub }: { email: string, sub: string }): OidcTokenResponse {\r\n    const data = { ...tokenPrototype, email, sub };\r\n    const token = this.jwtService.createJwt(data);\r\n    return {\r\n      // Example. Not valid for communicating with real server\r\n      'access_token': token,\r\n      'expires_in': 3600,\r\n      'token_type': 'Bearer'\r\n    };\r\n  }\r\n}\r\n\r\nfunction decodeFormUrlBody(body: string) {\r\n  const keyValuePairs = body.split('&');\r\n  const json: any = {};\r\n  for (let i = 0, len = keyValuePairs.length, tmp, key, value; i < len; i++) {\r\n      tmp = keyValuePairs[i].split('=');\r\n      key = decodeURIComponent(tmp[0]);\r\n      value = decodeURIComponent(tmp[1]);\r\n      if (key.search(/\\[\\]$/) !== -1) {\r\n          tmp = key.replace(/\\[\\]$/, '');\r\n          json[tmp] = json[tmp] || [];\r\n          json[tmp].push(value);\r\n      } else {\r\n        json[key] = value;\r\n      }\r\n  }\r\n  return json;\r\n}\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { ChangeSetOperation } from 'ngrx-data';\nimport { createBadRequestResponse$, createOkResponse$, } from './in-mem-service-utils';\n/**\n * Apply an SP Company changeSet to the in-mem db as if saving it transactionally to a real DB\n * Ensures preconditions for saving company entity changes before forwarding to saveEntities()\n * @returns A terminating cold response Observable of ChangeSet HTTP response\n */\nexport function saveCompanyChangeSet(actionName, crudCounts, reqInfo, db) {\n    var changeSet = reqInfo.req.body;\n    try {\n        validateCrudCounts(changeSet, crudCounts);\n        saveCompanyEntities(changeSet, db);\n        return createOkResponse$(reqInfo, changeSet);\n    }\n    catch (error) {\n        var emsg = error.message + \" when saving \" + actionName;\n        return createBadRequestResponse$(reqInfo, emsg);\n    }\n}\nexport function saveCompanyEarningChangeSet(actionName, crudCounts, reqInfo, db) {\n    var changeSet = reqInfo.req.body;\n    try {\n        validateCrudCounts(changeSet, crudCounts);\n        saveEntities(changeSet, db);\n        return createOkResponse$(reqInfo, changeSet);\n    }\n    catch (error) {\n        var emsg = error.message + \" when saving \" + actionName;\n        return createBadRequestResponse$(reqInfo, emsg);\n    }\n}\nexport function saveCompanyDeductionChangeSet(actionName, crudCounts, reqInfo, db) {\n    var changeSet = reqInfo.req.body;\n    try {\n        validateCrudCounts(changeSet, crudCounts);\n        saveEntities(changeSet, db);\n        return createOkResponse$(reqInfo, changeSet);\n    }\n    catch (error) {\n        var emsg = error.message + \" when saving \" + actionName;\n        return createBadRequestResponse$(reqInfo, emsg);\n    }\n}\nexport function saveEmployeeDeductionChangeSet(actionName, crudCounts, reqInfo, db) {\n    var changeSet = reqInfo.req.body;\n    try {\n        validateCrudCounts(changeSet, crudCounts);\n        saveEntities(changeSet, db);\n        return createOkResponse$(reqInfo, changeSet);\n    }\n    catch (error) {\n        var emsg = error.message + \" when saving \" + actionName;\n        return createBadRequestResponse$(reqInfo, emsg);\n    }\n}\n/**\n * Apply an SP Company changeSet to the in-mem db as if saving it transactionally to a real DB\n * Ensures preconditions for saving company entity changes before forwarding to saveEntities()\n */\nfunction saveCompanyEntities(changeSet, db) {\n    var errors = saveCompanyEntitiesGuard(changeSet, db);\n    if (errors.length) {\n        throw new Error(\"saveCompanyEntities error: -\" + errors.join('\\n- '));\n    }\n    saveEntities(changeSet, db);\n}\n/**\n * When saving company entities ensure that\n * - there are no Delete changeSetItems\n * - all entities in the ChangeSet belong to the same company\n */\nfunction saveCompanyEntitiesGuard(changeSet, sourceDb) {\n    var changes = changeSet.changes;\n    var companyId;\n    return changes.reduce(function (errors, change) {\n        if (change.op === ChangeSetOperation.Delete) {\n            errors.push(\"Delete of '\" + change.entityName + \"' is not allowed\");\n        }\n        if (change.entities.length === 0) {\n            return errors; // nothing to save, nothing more to check.\n        }\n        // Company entity save\n        if (change.entityName === 'Company') {\n            if (change.entities.length !== 1) {\n                errors.push(\"Only one company allowed in a Company changeSetItem\");\n            }\n            var co = change.entities[0];\n            var coId_1 = co.id;\n            if (!co.id) {\n                errors.push(\"No companyId in Company changeSetItem\");\n                return errors;\n            }\n            if (companyId && companyId !== coId_1) {\n                errors.push(\"Multiple company ids in changeSet: \" + companyId + \" and \" + coId_1);\n            }\n            else {\n                companyId = coId_1;\n            }\n            var existingCo = sourceDb.Company.find(function (c) { return c.id === coId_1; });\n            var status_1 = co.status;\n            if (status_1) {\n                if (existingCo && existingCo.status !== status_1) {\n                    errors.push(\"Cannot change Company status from \" + existingCo.status + \" to \" + status_1);\n                }\n            }\n            else {\n                errors.push('Cannot save a company with a null/empty status');\n            }\n        }\n        else {\n            // Non-company entity save\n            change.entities.forEach(function (entity) {\n                var coId = entity.companyId;\n                if (coId) {\n                    if (companyId) {\n                        if (companyId !== coId) {\n                            errors.push(\"Multiple company ids in changeSet: \" + companyId + \" and \" + change.entityName + \" item with \" + coId);\n                        }\n                    }\n                    else {\n                        companyId = coId;\n                    }\n                }\n                else {\n                    errors.push(change.entityName + \":\" + entity.id + \" does not have a companyId\");\n                }\n            });\n        }\n        return errors;\n    }, []);\n}\n/**\n * Apply an SP company's Employee changeSet to the in-mem db as if saving it transactionally to a real DB\n * Ensures preconditions for saving a company's employee entity changes before forwarding to saveEntities()\n * @returns A terminating cold response Observable of ChangeSet HTTP response\n */\nexport function saveEmployeeChangeSet(actionName, crudCounts, reqInfo, db) {\n    var changeSet = reqInfo.req.body;\n    try {\n        validateCrudCounts(changeSet, crudCounts);\n        saveEmployeeEntities(changeSet, db);\n        return createOkResponse$(reqInfo, changeSet);\n    }\n    catch (error) {\n        var emsg = error.message + \" when saving \" + actionName;\n        return createBadRequestResponse$(reqInfo, emsg);\n    }\n}\n/**\n * Apply an SP company's Employee changeSet to the in-mem db as if saving it transactionally to a real DB\n * Ensures preconditions for saving a company's employee entity changes before forwarding to saveEntities()\n */\nfunction saveEmployeeEntities(changeSet, db) {\n    var errors = saveEmployeeEntitiesGuard(changeSet, db);\n    if (errors.length) {\n        throw new Error(\"saveEmployeeEntities error: -\" + errors.join('\\n- '));\n    }\n    saveEntities(changeSet, db);\n}\n/**\n * When saving employee entities ensure that\n * - there are no Delete changeSetItems\n * - all entities in the ChangeSet belong to the same employee\n */\nfunction saveEmployeeEntitiesGuard(changeSet, sourceDb) {\n    var changes = changeSet.changes;\n    var employeeId;\n    var employee;\n    var employeePay;\n    var home;\n    var errors = changes.reduce(function (errs, change) {\n        if (change.op === ChangeSetOperation.Delete) {\n            errs.push(\"Delete of '\" + change.entityName + \"' is not allowed\");\n        }\n        if (change.entities.length === 0) {\n            return errs; // nothing to save, nothing more to check.\n        }\n        // Employee entity save\n        if (change.entityName === 'Employee') {\n            if (change.entities.length !== 1 || employee != null) {\n                errs.push(\"Only one employee allowed in an Employee save changeSetItem\");\n            }\n            employee = change.entities[0];\n            var eeId = employee.id;\n            if (!employee.id) {\n                errs.push(\"No employeeId in Employee save changeSetItem\");\n                return errs;\n            }\n            if (employeeId && employeeId !== eeId) {\n                errs.push(\"Multiple employee ids in changeSet: \" + employeeId + \" and \" + eeId);\n            }\n            else {\n                employeeId = eeId;\n            }\n        }\n        else if (change.entityName === 'EmployeePaymentMethod') {\n            if (change.entities.length !== 1 || employeePay != null) {\n                errs.push(\"Only one employeePaymentMethod allowed in an Employee save changeSetItem\");\n            }\n            employeePay = change.entities[0];\n            if (!employeePay.id || !employeePay.employeeId || !employeePay.companyId) {\n                errs.push(\"No employeePayment.id in Employee save changeSetItem\");\n                return errs;\n            }\n        }\n        else if (change.entityName === 'Address') {\n            // Employee Address entity add/update\n            if (change.entities.length !== 1 || home != null) {\n                errs.push(\"Only one employee address allowed in an Employee save changeSetItem\");\n            }\n            home = change.entities[0];\n            if (!home.isHome || home.isMain) {\n                errs.push('Address must be a home address and cannot be a company main address');\n            }\n        }\n        else {\n            // Non-employee entity save\n            change.entities.forEach(function (entity) {\n                var eeId = entity.employeeId;\n                if (eeId) {\n                    if (employeeId) {\n                        if (employeeId !== eeId) {\n                            errs.push(\"Multiple employee ids in changeSet: \" + employeeId + \" and \" + change.entityName + \" item with \" + eeId);\n                        }\n                    }\n                    else {\n                        employeeId = eeId;\n                    }\n                }\n                else {\n                    errs.push(change.entityName + \":\" + entity.id + \" does not have an employeeId\");\n                }\n            });\n        }\n        return errs;\n    }, []);\n    if (employee && home) {\n        if (employee.homeAddressId !== home.id) {\n            errors.push(\"Address does not belong to EE \" + employee.id);\n        }\n    }\n    else {\n        errors.push('Missing the Employee or the Home address in the Employee save changeSet');\n    }\n    return errors;\n}\n/**\n * Apply a changeSet to the in-mem db as if saving it transactionally to a real DB\n */\nfunction saveEntities(changeSet, sourceDb) {\n    var changes = changeSet.changes;\n    var changedDb = changes.reduce(function (db, change) {\n        var entityName = change.entityName;\n        var collection = db[entityName] || sourceDb[entityName];\n        if (collection) {\n            db[entityName] = mutate(collection, change);\n            return db;\n        }\n        throw new Error(\"Collection \\\"\" + entityName + \"\\\" is not a database collection\");\n    }, {});\n    // All changes succeeded.\n    // Commit the \"transaction\" by merging the changed collections into the sourceDb;\n    Object.keys(changedDb).forEach(function (entityName) { return sourceDb[entityName] = changedDb[entityName]; });\n    // Mutate the entity collection with a change in the ChangeSet\n    function mutate(collection, change) {\n        switch (change.op) {\n            case ChangeSetOperation.Add:\n                var adds = change.entities\n                    .filter(function (a) { return !collection.some(function (c) { return c.id === a.id; }); })\n                    .map(function (a) { return Object.assign({}, a); });\n                if (adds.length) {\n                    return collection.concat(adds);\n                }\n                return collection;\n            case ChangeSetOperation.Delete:\n                var ids_1 = change.entities;\n                return collection.filter(function (d) { return ids_1.includes(d.id); });\n            case ChangeSetOperation.Update:\n                var updates_1 = change.entities;\n                return collection.map(function (c) {\n                    var up = updates_1.find(function (u) { return u.id === c.id; });\n                    return up ? __assign({}, c, Object.assign({}, up)) : c;\n                });\n            case ChangeSetOperation.Upsert:\n                var upserts_1 = change.entities;\n                var found_1 = [];\n                var updated = collection.map(function (c) {\n                    var up = upserts_1.find(function (u) { return u.id === c.id; });\n                    if (up) {\n                        up = Object.assign({}, up);\n                        found_1.push(up);\n                        return up;\n                    }\n                    else {\n                        return c;\n                    }\n                });\n                var added = upserts_1.filter(function (u) { return !found_1.includes(u); });\n                return updated.concat(added);\n        }\n    }\n}\n/**\n * Ensure that each ChangeSetItem is allowed and that the number of its changed entities\n * is within the allowed range defined in the crudCounts\n * @param changeSet the saveEntities() changeSet.\n * @parm crudCounts which entity types to save and the min/max count of entities of each type that can be saved\n */\nfunction validateCrudCounts(changeSet, crudCounts) {\n    var entityNames = crudCounts.map(function (cc) { return cc.entityName; });\n    changeSet.changes.forEach(function (change) {\n        if (!entityNames.includes(change.entityName)) {\n            throw new Error(change.entityName + \" entity cannot be saved in this saveEntities() request\");\n        }\n    });\n    crudCounts.forEach(function (crudCount) {\n        var cs = changeSet.changes.find(function (csi) { return csi.entityName === crudCount.entityName; });\n        if (crudCount.min && (!cs || !cs.entities || cs.entities.length < crudCount.min)) {\n            throw new Error(\"Must save at least \" + crudCount.min + \" of \" + crudCount.entityName);\n        }\n        if (crudCount.max && (cs && cs.entities && cs.entities.length > crudCount.max)) {\n            throw new Error(\"Must save at most \" + crudCount.max + \" of \" + crudCount.entityName);\n        }\n    });\n}\n","import { HttpResponse } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ChangeSet, ChangeSetItem, ChangeSetOperation } from 'ngrx-data';\r\nimport { Address, Company, Employee, EmployeePaymentMethod } from '@model';\r\n\r\nimport {\r\n  createBadRequestResponse$,\r\n  createOkResponse$,\r\n  Db,\r\n  RequestInfo,\r\n} from './in-mem-service-utils';\r\n\r\n/**\r\n * Apply an SP Company changeSet to the in-mem db as if saving it transactionally to a real DB\r\n * Ensures preconditions for saving company entity changes before forwarding to saveEntities()\r\n * @returns A terminating cold response Observable of ChangeSet HTTP response\r\n */\r\nexport function saveCompanyChangeSet(actionName: string, crudCounts: CrudCount[], reqInfo: RequestInfo, db: Db)\r\n  : Observable<HttpResponse<ChangeSet>> {\r\n  const changeSet = (reqInfo.req as any).body as ChangeSet;\r\n  try {\r\n    validateCrudCounts(changeSet, crudCounts);\r\n    saveCompanyEntities(changeSet, db);\r\n    return createOkResponse$(reqInfo, changeSet);\r\n  } catch (error) {\r\n    const emsg = `${error.message} when saving ${actionName}`;\r\n    return createBadRequestResponse$(reqInfo, emsg);\r\n  }\r\n}\r\nexport function saveCompanyEarningChangeSet(actionName: string, crudCounts: CrudCount[], reqInfo: RequestInfo, db: Db)\r\n  : Observable<HttpResponse<ChangeSet>> {\r\n  const changeSet = (reqInfo.req as any).body as ChangeSet;\r\n  try {\r\n    validateCrudCounts(changeSet, crudCounts);\r\n    saveEntities(changeSet, db);\r\n    return createOkResponse$(reqInfo, changeSet);\r\n  } catch (error) {\r\n    const emsg = `${error.message} when saving ${actionName}`;\r\n    return createBadRequestResponse$(reqInfo, emsg);\r\n  }\r\n}\r\nexport function saveCompanyDeductionChangeSet(actionName: string, crudCounts: CrudCount[], reqInfo: RequestInfo, db: Db)\r\n  : Observable<HttpResponse<ChangeSet>> {\r\n  const changeSet = (reqInfo.req as any).body as ChangeSet;\r\n  try {\r\n    validateCrudCounts(changeSet, crudCounts);\r\n    saveEntities(changeSet, db);\r\n    return createOkResponse$(reqInfo, changeSet);\r\n  } catch (error) {\r\n    const emsg = `${error.message} when saving ${actionName}`;\r\n    return createBadRequestResponse$(reqInfo, emsg);\r\n  }\r\n}\r\nexport function saveEmployeeDeductionChangeSet(actionName: string, crudCounts: CrudCount[], reqInfo: RequestInfo, db: Db)\r\n  : Observable<HttpResponse<ChangeSet>> {\r\n  const changeSet = (reqInfo.req as any).body as ChangeSet;\r\n  try {\r\n    validateCrudCounts(changeSet, crudCounts);\r\n    saveEntities(changeSet, db);\r\n    return createOkResponse$(reqInfo, changeSet);\r\n  } catch (error) {\r\n    const emsg = `${error.message} when saving ${actionName}`;\r\n    return createBadRequestResponse$(reqInfo, emsg);\r\n  }\r\n}\r\n/**\r\n * Apply an SP Company changeSet to the in-mem db as if saving it transactionally to a real DB\r\n * Ensures preconditions for saving company entity changes before forwarding to saveEntities()\r\n */\r\nfunction saveCompanyEntities(changeSet: ChangeSet, db: Db): void {\r\n  const errors = saveCompanyEntitiesGuard(changeSet, db);\r\n  if (errors.length) {\r\n    throw new Error(`saveCompanyEntities error: -${errors.join('\\n- ')}`);\r\n  }\r\n  saveEntities(changeSet, db);\r\n}\r\n\r\n/**\r\n * When saving company entities ensure that\r\n * - there are no Delete changeSetItems\r\n * - all entities in the ChangeSet belong to the same company\r\n */\r\nfunction saveCompanyEntitiesGuard(changeSet: ChangeSet, sourceDb: Db): string[]  {\r\n  const changes = changeSet.changes;\r\n  let companyId: string;\r\n  return changes.reduce((errors, change) => {\r\n    if (change.op === ChangeSetOperation.Delete) {\r\n      errors.push(`Delete of '${change.entityName}' is not allowed`);\r\n    }\r\n    if (change.entities.length === 0) {\r\n      return errors; // nothing to save, nothing more to check.\r\n    }\r\n    // Company entity save\r\n    if (change.entityName === 'Company') {\r\n      if (change.entities.length !== 1) {\r\n        errors.push(`Only one company allowed in a Company changeSetItem`);\r\n      }\r\n      const co: Company = change.entities[0];\r\n      const coId = co.id;\r\n      if (!co.id) {\r\n        errors.push(`No companyId in Company changeSetItem`);\r\n        return errors;\r\n      }\r\n      if (companyId && companyId !== coId) {\r\n        errors.push(`Multiple company ids in changeSet: ${companyId} and ${coId}`);\r\n      } else {\r\n        companyId = coId;\r\n      }\r\n\r\n      const existingCo: Company = sourceDb.Company.find(c => c.id === coId);\r\n\r\n      const status = co.status;\r\n      if (status) {\r\n        if (existingCo && existingCo.status !== status) {\r\n          errors.push(`Cannot change Company status from ${existingCo.status} to ${status}`);\r\n        }\r\n      } else {\r\n        errors.push('Cannot save a company with a null/empty status');\r\n      }\r\n    } else {\r\n      // Non-company entity save\r\n      (change.entities as any[]).forEach(entity => {\r\n        const coId = entity.companyId;\r\n        if (coId) {\r\n          if (companyId) {\r\n            if (companyId !== coId) {\r\n              errors.push(`Multiple company ids in changeSet: ${companyId} and ${change.entityName} item with ${coId}`);\r\n            }\r\n          } else {\r\n            companyId = coId;\r\n          }\r\n        } else {\r\n          errors.push(`${change.entityName}:${entity.id} does not have a companyId`);\r\n        }\r\n      });\r\n    }\r\n    return errors;\r\n  }, [] as string[]);\r\n}\r\n\r\n/**\r\n * Apply an SP company's Employee changeSet to the in-mem db as if saving it transactionally to a real DB\r\n * Ensures preconditions for saving a company's employee entity changes before forwarding to saveEntities()\r\n * @returns A terminating cold response Observable of ChangeSet HTTP response\r\n */\r\nexport function saveEmployeeChangeSet(actionName: string, crudCounts: CrudCount[], reqInfo: RequestInfo, db: Db)\r\n  : Observable<HttpResponse<ChangeSet>> {\r\n  const changeSet = (reqInfo.req as any).body as ChangeSet;\r\n  try {\r\n    validateCrudCounts(changeSet, crudCounts);\r\n    saveEmployeeEntities(changeSet, db);\r\n    return createOkResponse$(reqInfo, changeSet);\r\n  } catch (error) {\r\n    const emsg = `${error.message} when saving ${actionName}`;\r\n    return createBadRequestResponse$(reqInfo, emsg);\r\n  }\r\n}\r\n\r\n/**\r\n * Apply an SP company's Employee changeSet to the in-mem db as if saving it transactionally to a real DB\r\n * Ensures preconditions for saving a company's employee entity changes before forwarding to saveEntities()\r\n */\r\nfunction saveEmployeeEntities(changeSet: ChangeSet, db: Db): void {\r\n  const errors = saveEmployeeEntitiesGuard(changeSet, db);\r\n  if (errors.length) {\r\n    throw new Error(`saveEmployeeEntities error: -${errors.join('\\n- ')}`);\r\n  }\r\n  saveEntities(changeSet, db);\r\n}\r\n\r\n/**\r\n * When saving employee entities ensure that\r\n * - there are no Delete changeSetItems\r\n * - all entities in the ChangeSet belong to the same employee\r\n */\r\nfunction saveEmployeeEntitiesGuard(changeSet: ChangeSet, sourceDb: Db): string[]  {\r\n  const changes = changeSet.changes;\r\n  let employeeId: string;\r\n  let employee: Employee;\r\n  let employeePay: EmployeePaymentMethod;\r\n  let home: Address;\r\n  const errors = changes.reduce((errs, change) => {\r\n    if (change.op === ChangeSetOperation.Delete) {\r\n      errs.push(`Delete of '${change.entityName}' is not allowed`);\r\n    }\r\n    if (change.entities.length === 0) {\r\n      return errs; // nothing to save, nothing more to check.\r\n    }\r\n    // Employee entity save\r\n    if (change.entityName === 'Employee') {\r\n      if (change.entities.length !== 1 || employee != null) {\r\n        errs.push(`Only one employee allowed in an Employee save changeSetItem`);\r\n      }\r\n      employee = change.entities[0];\r\n      const eeId = employee.id;\r\n      if (!employee.id) {\r\n        errs.push(`No employeeId in Employee save changeSetItem`);\r\n        return errs;\r\n      }\r\n      if (employeeId && employeeId !== eeId) {\r\n        errs.push(`Multiple employee ids in changeSet: ${employeeId} and ${eeId}`);\r\n      } else {\r\n        employeeId = eeId;\r\n      }\r\n    } else if (change.entityName === 'EmployeePaymentMethod') {\r\n      if (change.entities.length !== 1 || employeePay != null) {\r\n        errs.push(`Only one employeePaymentMethod allowed in an Employee save changeSetItem`);\r\n      }\r\n      employeePay = change.entities[0];\r\n      if (!employeePay.id || !employeePay.employeeId || !employeePay.companyId) {\r\n        errs.push(`No employeePayment.id in Employee save changeSetItem`);\r\n        return errs;\r\n      }\r\n    } else if (change.entityName === 'Address') {\r\n      // Employee Address entity add/update\r\n      if (change.entities.length !== 1 || home != null) {\r\n        errs.push(`Only one employee address allowed in an Employee save changeSetItem`);\r\n      }\r\n      home = change.entities[0];\r\n      if (!home.isHome || home.isMain) {\r\n        errs.push('Address must be a home address and cannot be a company main address');\r\n      }\r\n    } else {\r\n      // Non-employee entity save\r\n      (change.entities as any[]).forEach(entity => {\r\n        const eeId = entity.employeeId;\r\n        if (eeId) {\r\n          if (employeeId) {\r\n            if (employeeId !== eeId) {\r\n              errs.push(`Multiple employee ids in changeSet: ${employeeId} and ${change.entityName} item with ${eeId}`);\r\n            }\r\n          } else {\r\n            employeeId = eeId;\r\n          }\r\n        } else {\r\n          errs.push(`${change.entityName}:${entity.id} does not have an employeeId`);\r\n        }\r\n      });\r\n    }\r\n    return errs;\r\n  }, [] as string[]);\r\n\r\n  if (employee && home) {\r\n    if (employee.homeAddressId !== home.id) {\r\n      errors.push(`Address does not belong to EE ${employee.id}`);\r\n    }\r\n  } else {\r\n    errors.push('Missing the Employee or the Home address in the Employee save changeSet');\r\n  }\r\n  return errors;\r\n}\r\n\r\n/**\r\n * Apply a changeSet to the in-mem db as if saving it transactionally to a real DB\r\n */\r\nfunction saveEntities(changeSet: ChangeSet, sourceDb: Db) {\r\n  const changes = changeSet.changes;\r\n  const changedDb = changes.reduce((db, change) => {\r\n    const entityName = change.entityName as keyof Db;\r\n    const collection: any[] = db[entityName] || sourceDb[entityName];\r\n    if (collection) {\r\n      db[entityName] = mutate(collection, change);\r\n      return db;\r\n    }\r\n    throw new Error(`Collection \"${entityName}\" is not a database collection`);\r\n  }, {} as any);\r\n\r\n  // All changes succeeded.\r\n  // Commit the \"transaction\" by merging the changed collections into the sourceDb;\r\n  Object.keys(changedDb).forEach(entityName => (<any> sourceDb)[entityName] = changedDb[entityName]);\r\n\r\n  // Mutate the entity collection with a change in the ChangeSet\r\n  function mutate(collection: any[], change: ChangeSetItem) {\r\n    switch (change.op) {\r\n      case ChangeSetOperation.Add:\r\n        const adds = change.entities\r\n          .filter(a => !collection.some(c => c.id === a.id))\r\n          .map(a => Object.assign({}, a));\r\n        if (adds.length) {\r\n          return collection.concat(adds);\r\n        }\r\n        return collection;\r\n\r\n      case ChangeSetOperation.Delete:\r\n        const ids: any[] = change.entities;\r\n        return collection.filter(d => ids.includes(d.id));\r\n\r\n      case ChangeSetOperation.Update:\r\n        const updates = change.entities as any[];\r\n        return collection.map(c => {\r\n          const up = updates.find(u => u.id === c.id);\r\n          return up ? {...c, ...Object.assign({}, up)} : c;\r\n        });\r\n\r\n      case ChangeSetOperation.Upsert:\r\n        const upserts = change.entities;\r\n        const found: any[] = [];\r\n        const updated = collection.map(c => {\r\n          let up = upserts.find(u => u.id === c.id);\r\n          if (up) {\r\n            up = Object.assign({}, up);\r\n            found.push(up);\r\n            return up;\r\n          } else {\r\n            return c;\r\n          }\r\n        });\r\n        const added = upserts.filter(u => !found.includes(u));\r\n        return updated.concat(added);\r\n    }\r\n  }\r\n}\r\n\r\n/** Min and maximum records that can be saved for a given entity type */\r\nexport interface CrudCount {\r\n  entityName: string;\r\n  min?: number;\r\n  max: number;\r\n}\r\n\r\n/**\r\n * Ensure that each ChangeSetItem is allowed and that the number of its changed entities\r\n * is within the allowed range defined in the crudCounts\r\n * @param changeSet the saveEntities() changeSet.\r\n * @parm crudCounts which entity types to save and the min/max count of entities of each type that can be saved\r\n */\r\n function validateCrudCounts(changeSet: ChangeSet, crudCounts: CrudCount[]) {\r\n  const entityNames = crudCounts.map(cc => cc.entityName);\r\n\r\n  changeSet.changes.forEach(change => {\r\n    if (!entityNames.includes(change.entityName)) {\r\n      throw new Error(`${change.entityName} entity cannot be saved in this saveEntities() request`);\r\n    }\r\n  });\r\n\r\n  crudCounts.forEach(crudCount => {\r\n    const cs = changeSet.changes.find(csi => csi.entityName === crudCount.entityName);\r\n    if (crudCount.min && (!cs || !cs.entities || cs.entities.length < crudCount.min)) {\r\n      throw new Error(`Must save at least ${crudCount.min} of ${crudCount.entityName}`);\r\n    }\r\n    if (crudCount.max && (cs && cs.entities && cs.entities.length > crudCount.max)) {\r\n      throw new Error(`Must save at most ${crudCount.max} of ${crudCount.entityName}`);\r\n    }\r\n  });\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\nimport { ChangeSet, ChangeSetOperation } from 'ngrx-data';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { createBadRequestResponse$, Db, RequestInfo } from './in-mem-service-utils';\r\nimport { CrudCount, saveCompanyChangeSet, saveEmployeeChangeSet,\r\n         saveCompanyDeductionChangeSet, saveEmployeeDeductionChangeSet, saveCompanyEarningChangeSet\r\n       } from './in-mem-save-entities-utils';\r\n\r\n/** Metadata that turns SaveEntities requests into in-mem database updates and HTTP responses */\r\ninterface SaveAction {\r\n  /** Matches this save action with a request URL that ends in this way */\r\n  endsWith: string;\r\n  /** Name of the action as it should appear in messages */\r\n  actionName: string;\r\n  /** Function that performs the save after applying validations such as the CRUD counts */\r\n  action: (actionName: string, crudCount: CrudCount[], reqInfo: RequestInfo, db: Db) => Observable<HttpResponse<ChangeSet>> ;\r\n  /** Array describing which entity types can be included in a ChangeSet and how many (min/max) of each type are allowed. */\r\n  crudCounts: CrudCount[];\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InMemSaveEntitiesService {\r\n\r\n  /** Actions that save an ngrx-data ChangeSet for request URLs */\r\n  private saveActions: SaveAction[] = [\r\n    { endsWith: 'save/company', actionName: 'a company+address pair', action: saveCompanyChangeSet, crudCounts: [\r\n        { entityName: 'Company', min: 0, max: 1 },\r\n        { entityName: 'Address', min: 0, max: 1 }\r\n      ]\r\n    },\r\n    { endsWith: 'save/companyuser', actionName: 'a company+user pair', action: saveCompanyChangeSet, crudCounts: [\r\n        { entityName: 'Company', min: 0, max: 1 },\r\n        { entityName: 'User', min: 0, max: 1 }\r\n      ]\r\n    },\r\n    { endsWith: 'companyearning', actionName: 'company earnings', action: saveCompanyEarningChangeSet, crudCounts: [\r\n      { entityName: 'CompanyEarning', min: 0, max: 50 }\r\n    ]\r\n    },\r\n    { endsWith: 'save/company-deduction', actionName: 'company deductions', action: saveCompanyDeductionChangeSet, crudCounts: [\r\n        { entityName: 'CompanyDeduction', min: 0, max: 50 }\r\n      ]\r\n    },\r\n    { endsWith: 'save/employee-deduction', actionName: 'employee deductions', action: saveEmployeeDeductionChangeSet, crudCounts: [\r\n        { entityName: 'EmployeeDeduction', min: 0, max: 5000 }\r\n      ]\r\n    },\r\n    { endsWith: 'save/employee', actionName: 'an employee graph', action: saveEmployeeChangeSet, crudCounts: [\r\n        { entityName: 'Employee', min: 1, max: 1 },\r\n        { entityName: 'Address', min: 1, max: 1 },\r\n        { entityName: 'EmployeePaymentMethod', min: 0, max: 1}\r\n      ]\r\n    },\r\n    { endsWith: 'save/employee/removed', actionName: 'the isRemoved flag of an employee graph', action: saveEmployeeRemoved, crudCounts: [\r\n        { entityName: 'Employee', min: 1, max: 1 },\r\n        { entityName: 'Address', min: 1, max: 1 },\r\n        { entityName: 'EmployeePaymentMethod', min: 0, max: 1}\r\n      ]\r\n    },\r\n    { endsWith: 'save/taxes', actionName: 'company and/or EE taxes', action: saveCompanyChangeSet, crudCounts: [\r\n        { entityName: 'CompanyTax', min: 0, max: 50 },\r\n        { entityName: 'EmployeeTax', min: 0, max: 5000 }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  postRequest(reqInfo: RequestInfo, db: Db): Observable<HttpResponse<ChangeSet>> {\r\n    const url = reqInfo.url;\r\n    const saveAction = this.saveActions.find(action => url.endsWith(action.endsWith));\r\n    if (saveAction) {\r\n      const { action, actionName, crudCounts } = saveAction;\r\n      return action(actionName, crudCounts, reqInfo, db);\r\n    } else {\r\n      return null; // Unknown request. Let regular request processing handle it.\r\n    }\r\n  }\r\n}\r\n\r\n/** Restricts SaveEntities request to Update operation that sets the isRemoved flag. Delegates to saveEmployeeChangeSet() */\r\nfunction saveEmployeeRemoved(actionName: string, crudCounts: CrudCount[], reqInfo: RequestInfo, db: Db) {\r\n  const changeSet = (reqInfo.req as any).body as ChangeSet;\r\n  changeSet.changes.forEach(element => {\r\n    if (element.op !== ChangeSetOperation.Update) {\r\n      const emsg = `Can only update ${element.entityName} when saving ${actionName}`;\r\n      return createBadRequestResponse$(reqInfo, emsg);\r\n    }\r\n  });\r\n  return saveEmployeeChangeSet(actionName, crudCounts, reqInfo, db);\r\n}\r\n","import { ChangeSetOperation } from 'ngrx-data';\nimport { createBadRequestResponse$ } from './in-mem-service-utils';\nimport { saveCompanyChangeSet, saveEmployeeChangeSet, saveCompanyDeductionChangeSet, saveEmployeeDeductionChangeSet, saveCompanyEarningChangeSet } from './in-mem-save-entities-utils';\nimport * as i0 from \"@angular/core\";\nvar InMemSaveEntitiesService = /** @class */ (function () {\n    function InMemSaveEntitiesService() {\n        /** Actions that save an ngrx-data ChangeSet for request URLs */\n        this.saveActions = [\n            { endsWith: 'save/company', actionName: 'a company+address pair', action: saveCompanyChangeSet, crudCounts: [\n                    { entityName: 'Company', min: 0, max: 1 },\n                    { entityName: 'Address', min: 0, max: 1 }\n                ]\n            },\n            { endsWith: 'save/companyuser', actionName: 'a company+user pair', action: saveCompanyChangeSet, crudCounts: [\n                    { entityName: 'Company', min: 0, max: 1 },\n                    { entityName: 'User', min: 0, max: 1 }\n                ]\n            },\n            { endsWith: 'companyearning', actionName: 'company earnings', action: saveCompanyEarningChangeSet, crudCounts: [\n                    { entityName: 'CompanyEarning', min: 0, max: 50 }\n                ]\n            },\n            { endsWith: 'save/company-deduction', actionName: 'company deductions', action: saveCompanyDeductionChangeSet, crudCounts: [\n                    { entityName: 'CompanyDeduction', min: 0, max: 50 }\n                ]\n            },\n            { endsWith: 'save/employee-deduction', actionName: 'employee deductions', action: saveEmployeeDeductionChangeSet, crudCounts: [\n                    { entityName: 'EmployeeDeduction', min: 0, max: 5000 }\n                ]\n            },\n            { endsWith: 'save/employee', actionName: 'an employee graph', action: saveEmployeeChangeSet, crudCounts: [\n                    { entityName: 'Employee', min: 1, max: 1 },\n                    { entityName: 'Address', min: 1, max: 1 },\n                    { entityName: 'EmployeePaymentMethod', min: 0, max: 1 }\n                ]\n            },\n            { endsWith: 'save/employee/removed', actionName: 'the isRemoved flag of an employee graph', action: saveEmployeeRemoved, crudCounts: [\n                    { entityName: 'Employee', min: 1, max: 1 },\n                    { entityName: 'Address', min: 1, max: 1 },\n                    { entityName: 'EmployeePaymentMethod', min: 0, max: 1 }\n                ]\n            },\n            { endsWith: 'save/taxes', actionName: 'company and/or EE taxes', action: saveCompanyChangeSet, crudCounts: [\n                    { entityName: 'CompanyTax', min: 0, max: 50 },\n                    { entityName: 'EmployeeTax', min: 0, max: 5000 }\n                ]\n            }\n        ];\n    }\n    InMemSaveEntitiesService.prototype.postRequest = function (reqInfo, db) {\n        var url = reqInfo.url;\n        var saveAction = this.saveActions.find(function (action) { return url.endsWith(action.endsWith); });\n        if (saveAction) {\n            var action = saveAction.action, actionName = saveAction.actionName, crudCounts = saveAction.crudCounts;\n            return action(actionName, crudCounts, reqInfo, db);\n        }\n        else {\n            return null; // Unknown request. Let regular request processing handle it.\n        }\n    };\n    InMemSaveEntitiesService.ngInjectableDef = i0.defineInjectable({ factory: function InMemSaveEntitiesService_Factory() { return new InMemSaveEntitiesService(); }, token: InMemSaveEntitiesService, providedIn: \"root\" });\n    return InMemSaveEntitiesService;\n}());\nexport { InMemSaveEntitiesService };\n/** Restricts SaveEntities request to Update operation that sets the isRemoved flag. Delegates to saveEmployeeChangeSet() */\nfunction saveEmployeeRemoved(actionName, crudCounts, reqInfo, db) {\n    var changeSet = reqInfo.req.body;\n    changeSet.changes.forEach(function (element) {\n        if (element.op !== ChangeSetOperation.Update) {\n            var emsg = \"Can only update \" + element.entityName + \" when saving \" + actionName;\n            return createBadRequestResponse$(reqInfo, emsg);\n        }\n    });\n    return saveEmployeeChangeSet(actionName, crudCounts, reqInfo, db);\n}\n","import { Injectable } from '@angular/core';\r\nimport { createOkResponse$, Db, RequestInfo } from './in-mem-service-utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InMemTaxService {\r\n\r\n  getRequest(req: RequestInfo, db: Db) {\r\n    if (req.url && req.url.includes('taxapi/taxes')) {\r\n      const body = <any[]>(<any>req.req).body;\r\n      const workGeoCodes = <{ id: string, geoCode: string }[]>body.map(e => ({\r\n        id: e.id,\r\n        geoCode: e.workAddress.geoCode\r\n      }));\r\n\r\n      return this.getTaxList(req, db, workGeoCodes);\r\n    }\r\n  }\r\n  /* tslint:disable:quotemark */\r\n  private getTaxList(req: RequestInfo, db: Db, addSet: { id: string, geoCode: string }[]) {\r\n    const data: any[] = [\r\n      {\r\n        \"state\": \"NY\",\r\n        \"taxes\": [\r\n          {\r\n            \"code\": \"NY0061-001\",\r\n            \"description\": \"NEW YORK\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"City W/H\",\r\n            \"displayOrder\": 5,\r\n            \"stateCode\": \"NY\",\r\n            \"taxTypeCode\": \"CT\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": \"NY0000-001\",\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"CITYWT\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"NY0000-001\",\r\n            \"description\": \"NEW YORK WITHHOLDING\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"State W/H\",\r\n            \"displayOrder\": 4,\r\n            \"stateCode\": \"NY\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"NY\",\r\n              \"format\": \"#########\",\r\n              \"regEx\": \"\\\\d{9}\"\r\n            }],\r\n            \"filingStatuses\": [{\r\n              \"code\": \"H\",\r\n              \"description\": \"Head of Household\"\r\n            },\r\n            {\r\n              \"code\": \"M\",\r\n              \"description\": \"Married\"\r\n            },\r\n            {\r\n              \"code\": \"S\",\r\n              \"description\": \"Single\"\r\n            }],\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"STATEWT\",\r\n            \"canBeExempt\": true\r\n          },\r\n          {\r\n            \"code\": \"NY0000-145\",\r\n            \"description\": \"NEW YORK MCTMT EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"County Employer Tax\",\r\n            \"displayOrder\": 502,\r\n            \"stateCode\": \"NY\",\r\n            \"taxTypeCode\": \"CN\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"\\\\d{9}\",\r\n              \"format\": \"#########\",\r\n              \"regEx\": \"\\\\d{9}\"\r\n            }],\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"CNTYER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"NY0000-128\",\r\n            \"description\": \"NEW YORK REEMPLOYMENT SERVICE EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"State Unemployment 1 Employer\",\r\n            \"displayOrder\": 461,\r\n            \"stateCode\": \"NY\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SUI1ER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"NY0000-010\",\r\n            \"description\": \"NEW YORK STATE UNEMPLOYMENT EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"State Unemployment Insurance Employer\",\r\n            \"displayOrder\": 15,\r\n            \"stateCode\": \"NY\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": true,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"NY\",\r\n              \"format\": \"##-#####\",\r\n              \"regEx\": \"\\\\d{2}\\\\-\\\\d{5}\"\r\n            }],\r\n            \"filingStatuses\": [],\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SUIER\",\r\n            \"canBeExempt\": true\r\n          },\r\n          {\r\n            \"code\": \"FE0000-006\",\r\n            \"description\": \"MED EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"Medicare Employer\",\r\n            \"displayOrder\": 13,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"MEDER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-005\",\r\n            \"description\": \"MED EMPLOYEE\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"Medicare\",\r\n            \"displayOrder\": 2,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"MEDEE\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-004\",\r\n            \"description\": \"SOC SEC EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"Social Security Employer\",\r\n            \"displayOrder\": 12,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SOCSECER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-003\",\r\n            \"description\": \"SOC SEC EMPLOYEE\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"Social Security\",\r\n            \"displayOrder\": 1,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SOCSECEE\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-010\",\r\n            \"description\": \"FEDERAL UNEMPLOYMENT EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"FUTA Employer\",\r\n            \"displayOrder\": 14,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"FUTAER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-001\",\r\n            \"description\": \"FEDERAL WITHHOLDING\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"Federal W/H\",\r\n            \"displayOrder\": 3,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"US\",\r\n              \"format\": \"##-#######\",\r\n              \"regEx\": \"\\\\d{2}\\\\-\\\\d{7}\"\r\n            }],\r\n            \"filingStatuses\": [{\r\n              \"code\": \"H\",\r\n              \"description\": \"Head of Household\"\r\n            },\r\n            {\r\n              \"code\": \"M\",\r\n              \"description\": \"Married\"\r\n            },\r\n            {\r\n              \"code\": \"S\",\r\n              \"description\": \"Single\"\r\n            }],\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"FEDWT\",\r\n            \"canBeExempt\": false\r\n          }]\r\n      },\r\n      {\r\n        \"state\": \"PA\",\r\n        \"taxes\": [\r\n          {\r\n            \"code\": \"PA2049-001\",\r\n            \"description\": \"PHILADELPHIA\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"City W/H\",\r\n            \"displayOrder\": 5,\r\n            \"stateCode\": \"PA\",\r\n            \"taxTypeCode\": \"CT\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"CITYWT\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"PA0000-010\",\r\n            \"description\": \"PENNSYLVANIA STATE UNEMPLOYMENT EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"State Unemployment Insurance Employer\",\r\n            \"displayOrder\": 15,\r\n            \"stateCode\": \"PA\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": true,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"PA\",\r\n              \"format\": \"##-#####Æ\",\r\n              \"regEx\": \"\\\\d{2}\\\\-\\\\d{5}[A-Z]\"\r\n            },\r\n            {\r\n              \"stateCode\": \"PA\",\r\n              \"format\": \"##-#####\",\r\n              \"regEx\": \"\\\\d{2}\\\\-\\\\d{5}\"\r\n            }],\r\n            \"filingStatuses\": [],\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SUIER\",\r\n            \"canBeExempt\": true\r\n          },\r\n          {\r\n            \"code\": \"PA0000-020\",\r\n            \"description\": \"PENNSYLVANIA SUI EMPLOYEE\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"SUI EE\",\r\n            \"displayOrder\": 8,\r\n            \"stateCode\": \"PA\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SUIEE\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"PA0000-001\",\r\n            \"description\": \"PENNSYLVANIA WITHHOLDING\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"State W/H\",\r\n            \"displayOrder\": 4,\r\n            \"stateCode\": \"PA\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"PA\",\r\n              \"format\": \"########\",\r\n              \"regEx\": \"\\\\d{8}\"\r\n            }],\r\n            \"filingStatuses\": [{\r\n              \"code\": \"H\",\r\n              \"description\": \"Head of Household\"\r\n            },\r\n            {\r\n              \"code\": \"M\",\r\n              \"description\": \"Married\"\r\n            },\r\n            {\r\n              \"code\": \"S\",\r\n              \"description\": \"Single\"\r\n            }],\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"STATEWT\",\r\n            \"canBeExempt\": true\r\n          },\r\n          {\r\n            \"code\": \"FE0000-006\",\r\n            \"description\": \"MED EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"Medicare Employer\",\r\n            \"displayOrder\": 13,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"MEDER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-005\",\r\n            \"description\": \"MED EMPLOYEE\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"Medicare\",\r\n            \"displayOrder\": 2,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"MEDEE\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-004\",\r\n            \"description\": \"SOC SEC EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"Social Security Employer\",\r\n            \"displayOrder\": 12,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SOCSECER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-003\",\r\n            \"description\": \"SOC SEC EMPLOYEE\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"Social Security\",\r\n            \"displayOrder\": 1,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SOCSECEE\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-010\",\r\n            \"description\": \"FEDERAL UNEMPLOYMENT EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"FUTA Employer\",\r\n            \"displayOrder\": 14,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"FUTAER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-001\",\r\n            \"description\": \"FEDERAL WITHHOLDING\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"Federal W/H\",\r\n            \"displayOrder\": 3,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"US\",\r\n              \"format\": \"##-#######\",\r\n              \"regEx\": \"\\\\d{2}\\\\-\\\\d{7}\"\r\n            }],\r\n            \"filingStatuses\": [{\r\n              \"code\": \"H\",\r\n              \"description\": \"Head of Household\"\r\n            },\r\n            {\r\n              \"code\": \"M\",\r\n              \"description\": \"Married\"\r\n            },\r\n            {\r\n              \"code\": \"S\",\r\n              \"description\": \"Single\"\r\n            }],\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"FEDWT\",\r\n            \"canBeExempt\": false\r\n          }]\r\n      },\r\n      {\r\n        \"state\": \"NV\",\r\n        \"taxes\": [\r\n          {\r\n            \"code\": \"NV0000-131\",\r\n            \"description\": \"NEVADA CAREER ENHANCEMENT EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"State Unemployment 1 Employer\",\r\n            \"displayOrder\": 461,\r\n            \"stateCode\": \"NV\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SUI1ER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"NV0000-010\",\r\n            \"description\": \"NEVADA STATE UNEMPLOYMENT EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"State Unemployment Insurance Employer\",\r\n            \"displayOrder\": 15,\r\n            \"stateCode\": \"NV\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": true,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"NV\",\r\n              \"format\": \"0########\",\r\n              \"regEx\": \"0\\\\d{8}\"\r\n            }],\r\n            \"filingStatuses\": [],\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SUIER\",\r\n            \"canBeExempt\": true\r\n          },\r\n          {\r\n            \"code\": \"NV0000-134\",\r\n            \"description\": \"NEVADA MODIFIED BUSINESS TAX EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"State Miscellaneous 2 Employer\",\r\n            \"displayOrder\": 457,\r\n            \"stateCode\": \"NV\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"\\\\d{10}\",\r\n              \"format\": \"##########\",\r\n              \"regEx\": \"\\\\d{10}\"\r\n            }],\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"STMISC2ER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-006\",\r\n            \"description\": \"MED EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"Medicare Employer\",\r\n            \"displayOrder\": 13,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"MEDER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-005\",\r\n            \"description\": \"MED EMPLOYEE\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"Medicare\",\r\n            \"displayOrder\": 2,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"MEDEE\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-004\",\r\n            \"description\": \"SOC SEC EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"Social Security Employer\",\r\n            \"displayOrder\": 12,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SOCSECER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-003\",\r\n            \"description\": \"SOC SEC EMPLOYEE\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"Social Security\",\r\n            \"displayOrder\": 1,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SOCSECEE\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-010\",\r\n            \"description\": \"FEDERAL UNEMPLOYMENT EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"FUTA Employer\",\r\n            \"displayOrder\": 14,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"FUTAER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-001\",\r\n            \"description\": \"FEDERAL WITHHOLDING\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"Federal W/H\",\r\n            \"displayOrder\": 3,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"US\",\r\n              \"format\": \"##-#######\",\r\n              \"regEx\": \"\\\\d{2}\\\\-\\\\d{7}\"\r\n            }],\r\n            \"filingStatuses\": [{\r\n              \"code\": \"H\",\r\n              \"description\": \"Head of Household\"\r\n            },\r\n            {\r\n              \"code\": \"M\",\r\n              \"description\": \"Married\"\r\n            },\r\n            {\r\n              \"code\": \"S\",\r\n              \"description\": \"Single\"\r\n            }],\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"FEDWT\",\r\n            \"canBeExempt\": false\r\n          }]\r\n      },\r\n      {\r\n\r\n        \"state\": \"CA\",\r\n        \"taxes\": [\r\n          {\r\n            \"code\": \"CA0000-001\",\r\n            \"description\": \"CALIFORNIA WITHHOLDING\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"State W/H\",\r\n            \"displayOrder\": 4,\r\n            \"stateCode\": \"CA\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"CA\",\r\n              \"format\": \"###-####-#\",\r\n              \"regEx\": \"\\\\d{3}\\\\-\\\\d{4}\\\\-\\\\d\"\r\n            }],\r\n            \"filingStatuses\": [{\r\n              \"code\": \"H\",\r\n              \"description\": \"Head of Household\"\r\n            },\r\n            {\r\n              \"code\": \"M\",\r\n              \"description\": \"Married with one income\"\r\n            },\r\n            {\r\n              \"code\": \"S\",\r\n              \"description\": \"Single\"\r\n            }],\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"STATEWT\",\r\n            \"canBeExempt\": true\r\n          },\r\n          {\r\n            \"code\": \"CA0000-041\",\r\n            \"description\": \"CALIFORNIA STATE DISABILITY EMPLOYEE\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"SDI EE\",\r\n            \"displayOrder\": 7,\r\n            \"stateCode\": \"CA\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": \"CA0000-001\",\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SDIEE\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"CA0000-128\",\r\n            \"description\": \"CA EMPLOYMENT TRAINING TAX EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"State Unemployment 1 Employer\",\r\n            \"displayOrder\": 461,\r\n            \"stateCode\": \"CA\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": \"CA0000-001\",\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SUI1ER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"CA0000-010\",\r\n            \"description\": \"CALIFORNIA STATE UNEMPLOYMENT EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"State Unemployment Insurance Employer\",\r\n            \"displayOrder\": 15,\r\n            \"stateCode\": \"CA\",\r\n            \"taxTypeCode\": \"ST\",\r\n            \"isVariableRate\": true,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"CA\",\r\n              \"format\": \"###-####-#\",\r\n              \"regEx\": \"\\\\d{3}\\\\-\\\\d{4}\\\\-\\\\d\"\r\n            }],\r\n            \"filingStatuses\": [],\r\n            \"useEINFromCode\": \"CA0000-001\",\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SUIER\",\r\n            \"canBeExempt\": true\r\n          },\r\n          {\r\n            \"code\": \"FE0000-006\",\r\n            \"description\": \"MED EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"Medicare Employer\",\r\n            \"displayOrder\": 13,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"MEDER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-005\",\r\n            \"description\": \"MED EMPLOYEE\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"Medicare\",\r\n            \"displayOrder\": 2,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"MEDEE\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-004\",\r\n            \"description\": \"SOC SEC EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"Social Security Employer\",\r\n            \"displayOrder\": 12,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SOCSECER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-003\",\r\n            \"description\": \"SOC SEC EMPLOYEE\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"Social Security\",\r\n            \"displayOrder\": 1,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"SOCSECEE\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-010\",\r\n            \"description\": \"FEDERAL UNEMPLOYMENT EMPLOYER\",\r\n            \"isEmployee\": false,\r\n            \"categoryDescription\": \"FUTA Employer\",\r\n            \"displayOrder\": 14,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": null,\r\n            \"filingStatuses\": null,\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"FUTAER\",\r\n            \"canBeExempt\": false\r\n          },\r\n          {\r\n            \"code\": \"FE0000-001\",\r\n            \"description\": \"FEDERAL WITHHOLDING\",\r\n            \"isEmployee\": true,\r\n            \"categoryDescription\": \"Federal W/H\",\r\n            \"displayOrder\": 3,\r\n            \"stateCode\": null,\r\n            \"taxTypeCode\": \"FD\",\r\n            \"isVariableRate\": false,\r\n            \"taxFormats\": [{\r\n              \"stateCode\": \"US\",\r\n              \"format\": \"##-#######\",\r\n              \"regEx\": \"\\\\d{2}\\\\-\\\\d{7}\"\r\n            }],\r\n            \"filingStatuses\": [{\r\n              \"code\": \"H\",\r\n              \"description\": \"Head of Household\"\r\n            },\r\n            {\r\n              \"code\": \"M\",\r\n              \"description\": \"Married\"\r\n            },\r\n            {\r\n              \"code\": \"S\",\r\n              \"description\": \"Single\"\r\n            }],\r\n            \"useEINFromCode\": null,\r\n            \"useUBIFromCodeAsEIN\": null,\r\n            \"categoryCode\": \"FEDWT\",\r\n            \"canBeExempt\": false\r\n          }]\r\n      }\r\n    ];\r\n\r\n    const body = addSet.map(set => {\r\n      const taxData = data.find(c => c.state.toLowerCase() === set.geoCode.substring(0, 2).toLowerCase());\r\n\r\n      return {\r\n        id: set.id,\r\n        workAddress: {},\r\n        liveAddress: {},\r\n        taxes: taxData == null ? [] : taxData.taxes\r\n      };\r\n    }, []);\r\n\r\n    return createOkResponse$(req, body);\r\n\r\n  }\r\n}\r\n","import { createOkResponse$ } from './in-mem-service-utils';\nimport * as i0 from \"@angular/core\";\nvar InMemTaxService = /** @class */ (function () {\n    function InMemTaxService() {\n    }\n    InMemTaxService.prototype.getRequest = function (req, db) {\n        if (req.url && req.url.includes('taxapi/taxes')) {\n            var body = req.req.body;\n            var workGeoCodes = body.map(function (e) { return ({\n                id: e.id,\n                geoCode: e.workAddress.geoCode\n            }); });\n            return this.getTaxList(req, db, workGeoCodes);\n        }\n    };\n    /* tslint:disable:quotemark */\n    InMemTaxService.prototype.getTaxList = function (req, db, addSet) {\n        var data = [\n            {\n                \"state\": \"NY\",\n                \"taxes\": [\n                    {\n                        \"code\": \"NY0061-001\",\n                        \"description\": \"NEW YORK\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"City W/H\",\n                        \"displayOrder\": 5,\n                        \"stateCode\": \"NY\",\n                        \"taxTypeCode\": \"CT\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": \"NY0000-001\",\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"CITYWT\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"NY0000-001\",\n                        \"description\": \"NEW YORK WITHHOLDING\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"State W/H\",\n                        \"displayOrder\": 4,\n                        \"stateCode\": \"NY\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"NY\",\n                                \"format\": \"#########\",\n                                \"regEx\": \"\\\\d{9}\"\n                            }],\n                        \"filingStatuses\": [{\n                                \"code\": \"H\",\n                                \"description\": \"Head of Household\"\n                            },\n                            {\n                                \"code\": \"M\",\n                                \"description\": \"Married\"\n                            },\n                            {\n                                \"code\": \"S\",\n                                \"description\": \"Single\"\n                            }],\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"STATEWT\",\n                        \"canBeExempt\": true\n                    },\n                    {\n                        \"code\": \"NY0000-145\",\n                        \"description\": \"NEW YORK MCTMT EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"County Employer Tax\",\n                        \"displayOrder\": 502,\n                        \"stateCode\": \"NY\",\n                        \"taxTypeCode\": \"CN\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"\\\\d{9}\",\n                                \"format\": \"#########\",\n                                \"regEx\": \"\\\\d{9}\"\n                            }],\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"CNTYER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"NY0000-128\",\n                        \"description\": \"NEW YORK REEMPLOYMENT SERVICE EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"State Unemployment 1 Employer\",\n                        \"displayOrder\": 461,\n                        \"stateCode\": \"NY\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SUI1ER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"NY0000-010\",\n                        \"description\": \"NEW YORK STATE UNEMPLOYMENT EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"State Unemployment Insurance Employer\",\n                        \"displayOrder\": 15,\n                        \"stateCode\": \"NY\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": true,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"NY\",\n                                \"format\": \"##-#####\",\n                                \"regEx\": \"\\\\d{2}\\\\-\\\\d{5}\"\n                            }],\n                        \"filingStatuses\": [],\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SUIER\",\n                        \"canBeExempt\": true\n                    },\n                    {\n                        \"code\": \"FE0000-006\",\n                        \"description\": \"MED EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"Medicare Employer\",\n                        \"displayOrder\": 13,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"MEDER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-005\",\n                        \"description\": \"MED EMPLOYEE\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"Medicare\",\n                        \"displayOrder\": 2,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"MEDEE\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-004\",\n                        \"description\": \"SOC SEC EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"Social Security Employer\",\n                        \"displayOrder\": 12,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SOCSECER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-003\",\n                        \"description\": \"SOC SEC EMPLOYEE\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"Social Security\",\n                        \"displayOrder\": 1,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SOCSECEE\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-010\",\n                        \"description\": \"FEDERAL UNEMPLOYMENT EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"FUTA Employer\",\n                        \"displayOrder\": 14,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"FUTAER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-001\",\n                        \"description\": \"FEDERAL WITHHOLDING\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"Federal W/H\",\n                        \"displayOrder\": 3,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"US\",\n                                \"format\": \"##-#######\",\n                                \"regEx\": \"\\\\d{2}\\\\-\\\\d{7}\"\n                            }],\n                        \"filingStatuses\": [{\n                                \"code\": \"H\",\n                                \"description\": \"Head of Household\"\n                            },\n                            {\n                                \"code\": \"M\",\n                                \"description\": \"Married\"\n                            },\n                            {\n                                \"code\": \"S\",\n                                \"description\": \"Single\"\n                            }],\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"FEDWT\",\n                        \"canBeExempt\": false\n                    }\n                ]\n            },\n            {\n                \"state\": \"PA\",\n                \"taxes\": [\n                    {\n                        \"code\": \"PA2049-001\",\n                        \"description\": \"PHILADELPHIA\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"City W/H\",\n                        \"displayOrder\": 5,\n                        \"stateCode\": \"PA\",\n                        \"taxTypeCode\": \"CT\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"CITYWT\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"PA0000-010\",\n                        \"description\": \"PENNSYLVANIA STATE UNEMPLOYMENT EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"State Unemployment Insurance Employer\",\n                        \"displayOrder\": 15,\n                        \"stateCode\": \"PA\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": true,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"PA\",\n                                \"format\": \"##-#####Æ\",\n                                \"regEx\": \"\\\\d{2}\\\\-\\\\d{5}[A-Z]\"\n                            },\n                            {\n                                \"stateCode\": \"PA\",\n                                \"format\": \"##-#####\",\n                                \"regEx\": \"\\\\d{2}\\\\-\\\\d{5}\"\n                            }],\n                        \"filingStatuses\": [],\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SUIER\",\n                        \"canBeExempt\": true\n                    },\n                    {\n                        \"code\": \"PA0000-020\",\n                        \"description\": \"PENNSYLVANIA SUI EMPLOYEE\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"SUI EE\",\n                        \"displayOrder\": 8,\n                        \"stateCode\": \"PA\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SUIEE\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"PA0000-001\",\n                        \"description\": \"PENNSYLVANIA WITHHOLDING\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"State W/H\",\n                        \"displayOrder\": 4,\n                        \"stateCode\": \"PA\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"PA\",\n                                \"format\": \"########\",\n                                \"regEx\": \"\\\\d{8}\"\n                            }],\n                        \"filingStatuses\": [{\n                                \"code\": \"H\",\n                                \"description\": \"Head of Household\"\n                            },\n                            {\n                                \"code\": \"M\",\n                                \"description\": \"Married\"\n                            },\n                            {\n                                \"code\": \"S\",\n                                \"description\": \"Single\"\n                            }],\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"STATEWT\",\n                        \"canBeExempt\": true\n                    },\n                    {\n                        \"code\": \"FE0000-006\",\n                        \"description\": \"MED EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"Medicare Employer\",\n                        \"displayOrder\": 13,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"MEDER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-005\",\n                        \"description\": \"MED EMPLOYEE\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"Medicare\",\n                        \"displayOrder\": 2,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"MEDEE\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-004\",\n                        \"description\": \"SOC SEC EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"Social Security Employer\",\n                        \"displayOrder\": 12,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SOCSECER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-003\",\n                        \"description\": \"SOC SEC EMPLOYEE\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"Social Security\",\n                        \"displayOrder\": 1,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SOCSECEE\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-010\",\n                        \"description\": \"FEDERAL UNEMPLOYMENT EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"FUTA Employer\",\n                        \"displayOrder\": 14,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"FUTAER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-001\",\n                        \"description\": \"FEDERAL WITHHOLDING\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"Federal W/H\",\n                        \"displayOrder\": 3,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"US\",\n                                \"format\": \"##-#######\",\n                                \"regEx\": \"\\\\d{2}\\\\-\\\\d{7}\"\n                            }],\n                        \"filingStatuses\": [{\n                                \"code\": \"H\",\n                                \"description\": \"Head of Household\"\n                            },\n                            {\n                                \"code\": \"M\",\n                                \"description\": \"Married\"\n                            },\n                            {\n                                \"code\": \"S\",\n                                \"description\": \"Single\"\n                            }],\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"FEDWT\",\n                        \"canBeExempt\": false\n                    }\n                ]\n            },\n            {\n                \"state\": \"NV\",\n                \"taxes\": [\n                    {\n                        \"code\": \"NV0000-131\",\n                        \"description\": \"NEVADA CAREER ENHANCEMENT EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"State Unemployment 1 Employer\",\n                        \"displayOrder\": 461,\n                        \"stateCode\": \"NV\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SUI1ER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"NV0000-010\",\n                        \"description\": \"NEVADA STATE UNEMPLOYMENT EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"State Unemployment Insurance Employer\",\n                        \"displayOrder\": 15,\n                        \"stateCode\": \"NV\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": true,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"NV\",\n                                \"format\": \"0########\",\n                                \"regEx\": \"0\\\\d{8}\"\n                            }],\n                        \"filingStatuses\": [],\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SUIER\",\n                        \"canBeExempt\": true\n                    },\n                    {\n                        \"code\": \"NV0000-134\",\n                        \"description\": \"NEVADA MODIFIED BUSINESS TAX EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"State Miscellaneous 2 Employer\",\n                        \"displayOrder\": 457,\n                        \"stateCode\": \"NV\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"\\\\d{10}\",\n                                \"format\": \"##########\",\n                                \"regEx\": \"\\\\d{10}\"\n                            }],\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"STMISC2ER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-006\",\n                        \"description\": \"MED EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"Medicare Employer\",\n                        \"displayOrder\": 13,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"MEDER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-005\",\n                        \"description\": \"MED EMPLOYEE\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"Medicare\",\n                        \"displayOrder\": 2,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"MEDEE\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-004\",\n                        \"description\": \"SOC SEC EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"Social Security Employer\",\n                        \"displayOrder\": 12,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SOCSECER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-003\",\n                        \"description\": \"SOC SEC EMPLOYEE\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"Social Security\",\n                        \"displayOrder\": 1,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SOCSECEE\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-010\",\n                        \"description\": \"FEDERAL UNEMPLOYMENT EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"FUTA Employer\",\n                        \"displayOrder\": 14,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"FUTAER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-001\",\n                        \"description\": \"FEDERAL WITHHOLDING\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"Federal W/H\",\n                        \"displayOrder\": 3,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"US\",\n                                \"format\": \"##-#######\",\n                                \"regEx\": \"\\\\d{2}\\\\-\\\\d{7}\"\n                            }],\n                        \"filingStatuses\": [{\n                                \"code\": \"H\",\n                                \"description\": \"Head of Household\"\n                            },\n                            {\n                                \"code\": \"M\",\n                                \"description\": \"Married\"\n                            },\n                            {\n                                \"code\": \"S\",\n                                \"description\": \"Single\"\n                            }],\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"FEDWT\",\n                        \"canBeExempt\": false\n                    }\n                ]\n            },\n            {\n                \"state\": \"CA\",\n                \"taxes\": [\n                    {\n                        \"code\": \"CA0000-001\",\n                        \"description\": \"CALIFORNIA WITHHOLDING\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"State W/H\",\n                        \"displayOrder\": 4,\n                        \"stateCode\": \"CA\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"CA\",\n                                \"format\": \"###-####-#\",\n                                \"regEx\": \"\\\\d{3}\\\\-\\\\d{4}\\\\-\\\\d\"\n                            }],\n                        \"filingStatuses\": [{\n                                \"code\": \"H\",\n                                \"description\": \"Head of Household\"\n                            },\n                            {\n                                \"code\": \"M\",\n                                \"description\": \"Married with one income\"\n                            },\n                            {\n                                \"code\": \"S\",\n                                \"description\": \"Single\"\n                            }],\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"STATEWT\",\n                        \"canBeExempt\": true\n                    },\n                    {\n                        \"code\": \"CA0000-041\",\n                        \"description\": \"CALIFORNIA STATE DISABILITY EMPLOYEE\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"SDI EE\",\n                        \"displayOrder\": 7,\n                        \"stateCode\": \"CA\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": \"CA0000-001\",\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SDIEE\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"CA0000-128\",\n                        \"description\": \"CA EMPLOYMENT TRAINING TAX EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"State Unemployment 1 Employer\",\n                        \"displayOrder\": 461,\n                        \"stateCode\": \"CA\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": \"CA0000-001\",\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SUI1ER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"CA0000-010\",\n                        \"description\": \"CALIFORNIA STATE UNEMPLOYMENT EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"State Unemployment Insurance Employer\",\n                        \"displayOrder\": 15,\n                        \"stateCode\": \"CA\",\n                        \"taxTypeCode\": \"ST\",\n                        \"isVariableRate\": true,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"CA\",\n                                \"format\": \"###-####-#\",\n                                \"regEx\": \"\\\\d{3}\\\\-\\\\d{4}\\\\-\\\\d\"\n                            }],\n                        \"filingStatuses\": [],\n                        \"useEINFromCode\": \"CA0000-001\",\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SUIER\",\n                        \"canBeExempt\": true\n                    },\n                    {\n                        \"code\": \"FE0000-006\",\n                        \"description\": \"MED EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"Medicare Employer\",\n                        \"displayOrder\": 13,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"MEDER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-005\",\n                        \"description\": \"MED EMPLOYEE\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"Medicare\",\n                        \"displayOrder\": 2,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"MEDEE\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-004\",\n                        \"description\": \"SOC SEC EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"Social Security Employer\",\n                        \"displayOrder\": 12,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SOCSECER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-003\",\n                        \"description\": \"SOC SEC EMPLOYEE\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"Social Security\",\n                        \"displayOrder\": 1,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"SOCSECEE\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-010\",\n                        \"description\": \"FEDERAL UNEMPLOYMENT EMPLOYER\",\n                        \"isEmployee\": false,\n                        \"categoryDescription\": \"FUTA Employer\",\n                        \"displayOrder\": 14,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": null,\n                        \"filingStatuses\": null,\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"FUTAER\",\n                        \"canBeExempt\": false\n                    },\n                    {\n                        \"code\": \"FE0000-001\",\n                        \"description\": \"FEDERAL WITHHOLDING\",\n                        \"isEmployee\": true,\n                        \"categoryDescription\": \"Federal W/H\",\n                        \"displayOrder\": 3,\n                        \"stateCode\": null,\n                        \"taxTypeCode\": \"FD\",\n                        \"isVariableRate\": false,\n                        \"taxFormats\": [{\n                                \"stateCode\": \"US\",\n                                \"format\": \"##-#######\",\n                                \"regEx\": \"\\\\d{2}\\\\-\\\\d{7}\"\n                            }],\n                        \"filingStatuses\": [{\n                                \"code\": \"H\",\n                                \"description\": \"Head of Household\"\n                            },\n                            {\n                                \"code\": \"M\",\n                                \"description\": \"Married\"\n                            },\n                            {\n                                \"code\": \"S\",\n                                \"description\": \"Single\"\n                            }],\n                        \"useEINFromCode\": null,\n                        \"useUBIFromCodeAsEIN\": null,\n                        \"categoryCode\": \"FEDWT\",\n                        \"canBeExempt\": false\n                    }\n                ]\n            }\n        ];\n        var body = addSet.map(function (set) {\n            var taxData = data.find(function (c) { return c.state.toLowerCase() === set.geoCode.substring(0, 2).toLowerCase(); });\n            return {\n                id: set.id,\n                workAddress: {},\n                liveAddress: {},\n                taxes: taxData == null ? [] : taxData.taxes\n            };\n        }, []);\n        return createOkResponse$(req, body);\n    };\n    InMemTaxService.ngInjectableDef = i0.defineInjectable({ factory: function InMemTaxService_Factory() { return new InMemTaxService(); }, token: InMemTaxService, providedIn: \"root\" });\n    return InMemTaxService;\n}());\nexport { InMemTaxService };\n","import { Injectable } from '@angular/core';\r\nimport { createOkResponse$, Db, RequestInfo } from './in-mem-service-utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InMemTaxRateService {\r\n\r\n  getRequest(req: RequestInfo, db: Db) {\r\n    // tslint:disable:no-use-before-declare\r\n    if (req.url && req.url.includes('/taxes/suirates')) {\r\n      return createOkResponse$(req, suiRates);\r\n    }\r\n    if (req.url && req.url.includes('/taxes/holidays')) {\r\n      return createOkResponse$(req, holidays);\r\n    }\r\n  }\r\n}\r\n\r\n/* tslint:disable:quotemark */\r\nconst holidays = [\r\n  \"2019-02-18T00:00:00-06:00\",\r\n  \"2019-05-27T00:00:00-05:00\",\r\n  \"2019-07-04T00:00:00-05:00\",\r\n  \"2019-09-02T00:00:00-05:00\",\r\n  \"2019-10-14T00:00:00-05:00\",\r\n  \"2019-11-11T00:00:00-06:00\",\r\n  \"2019-11-28T00:00:00-06:00\",\r\n  \"2019-12-25T00:00:00-06:00\",\r\n  \"2020-12-25T00:00:00-06:00\",\r\n  \"2020-11-26T00:00:00-06:00\",\r\n  \"2020-11-11T00:00:00-06:00\",\r\n  \"2020-10-12T00:00:00-05:00\",\r\n  \"2020-09-07T00:00:00-05:00\",\r\n  \"2020-07-03T00:00:00-05:00\",\r\n  \"2020-05-25T00:00:00-05:00\",\r\n  \"2020-02-17T00:00:00-06:00\",\r\n  \"2020-01-20T00:00:00-06:00\",\r\n  \"2020-01-01T00:00:00-06:00\",\r\n  \"2021-01-18T00:00:00-06:00\",\r\n  \"2021-01-01T00:00:00-06:00\"\r\n];\r\n\r\nconst suiRates = [\r\n  {\r\n    \"code\": \"OK0000-010\",\r\n    \"stateCode\": \"OK\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.10000,\r\n    \"maxAllowedRate\": 5.50000,\r\n    \"newEmployerMin\": 1.50000,\r\n    \"newEmployerMax\": 1.50000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/oklahoma\"\r\n  },\r\n  {\r\n    \"code\": \"CA0000-010\",\r\n    \"stateCode\": \"CA\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 1.50000,\r\n    \"maxAllowedRate\": 6.20000,\r\n    \"newEmployerMin\": 3.40000,\r\n    \"newEmployerMax\": 3.40000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/california\"\r\n  },\r\n  {\r\n    \"code\": \"NV0000-010\",\r\n    \"stateCode\": \"NV\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.25000,\r\n    \"maxAllowedRate\": 5.40000,\r\n    \"newEmployerMin\": 2.95000,\r\n    \"newEmployerMax\": 2.95000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/nevada\"\r\n  },\r\n  {\r\n    \"code\": \"DE0000-010\",\r\n    \"stateCode\": \"DE\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.30000,\r\n    \"maxAllowedRate\": 8.20000,\r\n    \"newEmployerMin\": 1.90000,\r\n    \"newEmployerMax\": 1.90000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/delaware\"\r\n  },\r\n  {\r\n    \"code\": \"ME0000-010\",\r\n    \"stateCode\": \"ME\",\r\n    \"allowSubjectRateZero\": true,\r\n    \"minAllowedRate\": 0.06000,\r\n    \"maxAllowedRate\": 5.46000,\r\n    \"newEmployerMin\": 1.77000,\r\n    \"newEmployerMax\": 1.77000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/maine\"\r\n  },\r\n  {\r\n    \"code\": \"OH0000-010\",\r\n    \"stateCode\": \"OH\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.30000,\r\n    \"maxAllowedRate\": 9.00000,\r\n    \"newEmployerMin\": 2.70000,\r\n    \"newEmployerMax\": 2.70000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/ohio\"\r\n  },\r\n  {\r\n    \"code\": \"MS0000-010\",\r\n    \"stateCode\": \"MS\",\r\n    \"allowSubjectRateZero\": true,\r\n    \"minAllowedRate\": 0.20000,\r\n    \"maxAllowedRate\": 5.60000,\r\n    \"newEmployerMin\": 1.16000,\r\n    \"newEmployerMax\": 1.16000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/mississippi\"\r\n  },\r\n  {\r\n    \"code\": \"MT0000-010\",\r\n    \"stateCode\": \"MT\",\r\n    \"allowSubjectRateZero\": true,\r\n    \"minAllowedRate\": 0.13000,\r\n    \"maxAllowedRate\": 6.30000,\r\n    \"newEmployerMin\": 1.00000,\r\n    \"newEmployerMax\": 2.60000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/montana\"\r\n  },\r\n  {\r\n    \"code\": \"PA0000-010\",\r\n    \"stateCode\": \"PA\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 2.39050,\r\n    \"maxAllowedRate\": 11.03330,\r\n    \"newEmployerMin\": 3.68900,\r\n    \"newEmployerMax\": 3.68900,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/pennsylvania\"\r\n  },\r\n  {\r\n    \"code\": \"IA0000-010\",\r\n    \"stateCode\": \"IA\",\r\n    \"allowSubjectRateZero\": true,\r\n    \"minAllowedRate\": 0.00000,\r\n    \"maxAllowedRate\": 7.50000,\r\n    \"newEmployerMin\": 1.00000,\r\n    \"newEmployerMax\": 1.00000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/iowa\"\r\n  },\r\n  {\r\n    \"code\": \"TN0000-010\",\r\n    \"stateCode\": \"TN\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.01000,\r\n    \"maxAllowedRate\": 10.00000,\r\n    \"newEmployerMin\": 2.70000,\r\n    \"newEmployerMax\": 7.00000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/tennessee\"\r\n  },\r\n  {\r\n    \"code\": \"MA0000-010\",\r\n    \"stateCode\": \"MA\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.83000,\r\n    \"maxAllowedRate\": 12.65000,\r\n    \"newEmployerMin\": 1.87000,\r\n    \"newEmployerMax\": 1.87000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/massachusetts\"\r\n  },\r\n  {\r\n    \"code\": \"NE0000-010\",\r\n    \"stateCode\": \"NE\",\r\n    \"allowSubjectRateZero\": true,\r\n    \"minAllowedRate\": 0.00000,\r\n    \"maxAllowedRate\": 5.40000,\r\n    \"newEmployerMin\": 1.25000,\r\n    \"newEmployerMax\": 1.25000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/nebraska\"\r\n  },\r\n  {\r\n    \"code\": \"WI0000-010\",\r\n    \"stateCode\": \"WI\",\r\n    \"allowSubjectRateZero\": true,\r\n    \"minAllowedRate\": 0.00000,\r\n    \"maxAllowedRate\": 12.00000,\r\n    \"newEmployerMin\": 3.05000,\r\n    \"newEmployerMax\": 3.25000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/wisconsin\"\r\n  },\r\n  {\r\n    \"code\": \"NC0000-010\",\r\n    \"stateCode\": \"NC\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.06000,\r\n    \"maxAllowedRate\": 5.76000,\r\n    \"newEmployerMin\": 1.00000,\r\n    \"newEmployerMax\": 1.00000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/north-carolina\"\r\n  },\r\n  {\r\n    \"code\": \"WA0000-010\",\r\n    \"stateCode\": \"WA\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.13000,\r\n    \"maxAllowedRate\": 7.73000,\r\n    \"newEmployerMin\": 1.00000,\r\n    \"newEmployerMax\": 6.95700,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/washington\"\r\n  },\r\n  {\r\n    \"code\": \"KS0000-010\",\r\n    \"stateCode\": \"KS\",\r\n    \"allowSubjectRateZero\": true,\r\n    \"minAllowedRate\": 0.20000,\r\n    \"maxAllowedRate\": 7.60000,\r\n    \"newEmployerMin\": 2.70000,\r\n    \"newEmployerMax\": 2.70000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/kansas\"\r\n  },\r\n  {\r\n    \"code\": \"AL0000-010\",\r\n    \"stateCode\": \"AL\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.65000,\r\n    \"maxAllowedRate\": 6.80000,\r\n    \"newEmployerMin\": 2.70000,\r\n    \"newEmployerMax\": 2.70000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/alabama\"\r\n  },\r\n  {\r\n    \"code\": \"SC0000-010\",\r\n    \"stateCode\": \"SC\",\r\n    \"allowSubjectRateZero\": true,\r\n    \"minAllowedRate\": 0.06000,\r\n    \"maxAllowedRate\": 5.46000,\r\n    \"newEmployerMin\": 1.03000,\r\n    \"newEmployerMax\": 1.03000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/south-carolina\"\r\n  },\r\n  {\r\n    \"code\": \"CT0000-010\",\r\n    \"stateCode\": \"CT\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 1.90000,\r\n    \"maxAllowedRate\": 6.80000,\r\n    \"newEmployerMin\": 3.90000,\r\n    \"newEmployerMax\": 3.90000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/connecticut\"\r\n  },\r\n  {\r\n    \"code\": \"ID0000-010\",\r\n    \"stateCode\": \"ID\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.39300,\r\n    \"maxAllowedRate\": 5.40000,\r\n    \"newEmployerMin\": 1.39500,\r\n    \"newEmployerMax\": 1.39500,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/idaho\"\r\n  },\r\n  {\r\n    \"code\": \"GA0000-010\",\r\n    \"stateCode\": \"GA\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.04000,\r\n    \"maxAllowedRate\": 5.40000,\r\n    \"newEmployerMin\": 2.62000,\r\n    \"newEmployerMax\": 2.62000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/georgia\"\r\n  },\r\n  {\r\n    \"code\": \"IL0000-010\",\r\n    \"stateCode\": \"IL\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.52500,\r\n    \"maxAllowedRate\": 6.92500,\r\n    \"newEmployerMin\": 3.45000,\r\n    \"newEmployerMax\": 3.45000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/illinois\"\r\n  },\r\n  {\r\n    \"code\": \"SD0000-010\",\r\n    \"stateCode\": \"SD\",\r\n    \"allowSubjectRateZero\": true,\r\n    \"minAllowedRate\": 0.00000,\r\n    \"maxAllowedRate\": 9.35000,\r\n    \"newEmployerMin\": 1.00000,\r\n    \"newEmployerMax\": 1.20000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/south-dakota\"\r\n  },\r\n  {\r\n    \"code\": \"WV0000-010\",\r\n    \"stateCode\": \"WV\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 1.50000,\r\n    \"maxAllowedRate\": 8.50000,\r\n    \"newEmployerMin\": 2.70000,\r\n    \"newEmployerMax\": 2.70000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/west-virginia\"\r\n  },\r\n  {\r\n    \"code\": \"WY0000-010\",\r\n    \"stateCode\": \"WY\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.28700,\r\n    \"maxAllowedRate\": 8.78000,\r\n    \"newEmployerMin\": 1.34000,\r\n    \"newEmployerMax\": 4.18000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/wyoming\"\r\n  },\r\n  {\r\n    \"code\": \"NM0000-010\",\r\n    \"stateCode\": \"NM\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.33000,\r\n    \"maxAllowedRate\": 5.40000,\r\n    \"newEmployerMin\": 1.20000,\r\n    \"newEmployerMax\": 3.24000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/new-mexico\"\r\n  },\r\n  {\r\n    \"code\": \"OR0000-010\",\r\n    \"stateCode\": \"OR\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.90000,\r\n    \"maxAllowedRate\": 5.40000,\r\n    \"newEmployerMin\": 2.60000,\r\n    \"newEmployerMax\": 2.60000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/oregon\"\r\n  },\r\n  {\r\n    \"code\": \"AK0000-010\",\r\n    \"stateCode\": \"AK\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 1.00000,\r\n    \"maxAllowedRate\": 5.40000,\r\n    \"newEmployerMin\": 1.50000,\r\n    \"newEmployerMax\": 2.23000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/alaska\"\r\n  },\r\n  {\r\n    \"code\": \"KY0000-010\",\r\n    \"stateCode\": \"KY\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.40000,\r\n    \"maxAllowedRate\": 9.25000,\r\n    \"newEmployerMin\": 2.70000,\r\n    \"newEmployerMax\": 2.70000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/kentucky\"\r\n  },\r\n  {\r\n    \"code\": \"VA0000-010\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"stateCode\": \"VA\",\r\n    \"minAllowedRate\": 0.11000,\r\n    \"maxAllowedRate\": 6.21000,\r\n    \"newEmployerMin\": 2.57000,\r\n    \"newEmployerMax\": 2.57000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/virginia\"\r\n  },\r\n  {\r\n    \"code\": \"NY0000-010\",\r\n    \"stateCode\": \"NY\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 1.30000,\r\n    \"maxAllowedRate\": 9.10000,\r\n    \"newEmployerMin\": 4.10000,\r\n    \"newEmployerMax\": 4.10000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/new-york\"\r\n  },\r\n  {\r\n    \"code\": \"TX0000-010\",\r\n    \"stateCode\": \"TX\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.46000,\r\n    \"maxAllowedRate\": 6.46000,\r\n    \"newEmployerMin\": 2.70000,\r\n    \"newEmployerMax\": 2.70000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/texas\"\r\n  },\r\n  {\r\n    \"code\": \"NH0000-010\",\r\n    \"stateCode\": \"NH\",\r\n    \"allowSubjectRateZero\": true,\r\n    \"minAllowedRate\": 0.10000,\r\n    \"maxAllowedRate\": 7.50000,\r\n    \"newEmployerMin\": 1.70000,\r\n    \"newEmployerMax\": 1.70000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/new-hampshire\"\r\n  },\r\n  {\r\n    \"code\": \"VT0000-010\",\r\n    \"stateCode\": \"VT\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 1.10000,\r\n    \"maxAllowedRate\": 7.70000,\r\n    \"newEmployerMin\": 1.00000,\r\n    \"newEmployerMax\": 6.40000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/vermont\"\r\n  },\r\n  {\r\n    \"code\": \"ND0000-010\",\r\n    \"stateCode\": \"ND\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.30000,\r\n    \"maxAllowedRate\": 10.74000,\r\n    \"newEmployerMin\": 1.62000,\r\n    \"newEmployerMax\": 1.62000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/north-dakota\"\r\n  },\r\n  {\r\n    \"code\": \"DC0000-010\",\r\n    \"stateCode\": \"DC\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 1.60000,\r\n    \"maxAllowedRate\": 7.00000,\r\n    \"newEmployerMin\": 2.70000,\r\n    \"newEmployerMax\": 2.70000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/washington-dc\"\r\n  },\r\n  {\r\n    \"code\": \"RI0000-010\",\r\n    \"stateCode\": \"RI\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.89000,\r\n    \"maxAllowedRate\": 9.49000,\r\n    \"newEmployerMin\": 2.04000,\r\n    \"newEmployerMax\": 2.04000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/rhode-island\"\r\n  },\r\n  {\r\n    \"code\": \"NJ0000-010\",\r\n    \"stateCode\": \"NJ\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.50000,\r\n    \"maxAllowedRate\": 5.80000,\r\n    \"newEmployerMin\": 3.28250,\r\n    \"newEmployerMax\": 3.28250,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/new-jersey\"\r\n  },\r\n  {\r\n    \"code\": \"PR0000-010\",\r\n    \"stateCode\": \"PR\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.0,\r\n    \"maxAllowedRate\": 0.0,\r\n    \"newEmployerMin\": 0.0,\r\n    \"newEmployerMax\": 0.0,\r\n    \"detailsLink\": null\r\n  },\r\n  {\r\n    \"code\": \"AR0000-010\",\r\n    \"stateCode\": \"AR\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.40000,\r\n    \"maxAllowedRate\": 14.30000,\r\n    \"newEmployerMin\": 3.20000,\r\n    \"newEmployerMax\": 3.20000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/arkansas\"\r\n  },\r\n  {\r\n    \"code\": \"HI0000-010\",\r\n    \"stateCode\": \"HI\",\r\n    \"allowSubjectRateZero\": true,\r\n    \"minAllowedRate\": 0.00000,\r\n    \"maxAllowedRate\": 5.60000,\r\n    \"newEmployerMin\": 2.40000,\r\n    \"newEmployerMax\": 2.40000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/hawaii\"\r\n  },\r\n  {\r\n    \"code\": \"LA0000-010\",\r\n    \"stateCode\": \"LA\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.10000,\r\n    \"maxAllowedRate\": 6.20000,\r\n    \"newEmployerMin\": 1.21000,\r\n    \"newEmployerMax\": 3.02000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/louisiana\"\r\n  },\r\n  {\r\n    \"code\": \"UT0000-010\",\r\n    \"stateCode\": \"UT\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.10000,\r\n    \"maxAllowedRate\": 7.10000,\r\n    \"newEmployerMin\": 1.10000,\r\n    \"newEmployerMax\": 7.20000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/utah\"\r\n  },\r\n  {\r\n    \"code\": \"MD0000-010\",\r\n    \"stateCode\": \"MD\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.30000,\r\n    \"maxAllowedRate\": 7.50000,\r\n    \"newEmployerMin\": 2.60000,\r\n    \"newEmployerMax\": 2.60000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/maryland\"\r\n  },\r\n  {\r\n    \"code\": \"MO0000-010\",\r\n    \"stateCode\": \"MO\",\r\n    \"allowSubjectRateZero\": true,\r\n    \"minAllowedRate\": 0.00000,\r\n    \"maxAllowedRate\": 8.37000,\r\n    \"newEmployerMin\": 3.51000,\r\n    \"newEmployerMax\": 3.51000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/missouri\"\r\n  },\r\n  {\r\n    \"code\": \"FL0000-010\",\r\n    \"stateCode\": \"FL\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.10000,\r\n    \"maxAllowedRate\": 5.40000,\r\n    \"newEmployerMin\": 2.70000,\r\n    \"newEmployerMax\": 2.70000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/florida\"\r\n  },\r\n  {\r\n    \"code\": \"VI0000-010\",\r\n    \"stateCode\": \"VI\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.0,\r\n    \"maxAllowedRate\": 0.0,\r\n    \"newEmployerMin\": 0.0,\r\n    \"newEmployerMax\": 0.0,\r\n    \"detailsLink\": null\r\n  },\r\n  {\r\n    \"code\": \"AZ0000-010\",\r\n    \"stateCode\": \"AZ\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.05000,\r\n    \"maxAllowedRate\": 12.76000,\r\n    \"newEmployerMin\": 2.00000,\r\n    \"newEmployerMax\": 2.00000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/arizona\"\r\n  },\r\n  {\r\n    \"code\": \"CO0000-010\",\r\n    \"stateCode\": \"CO\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.62000,\r\n    \"maxAllowedRate\": 8.15000,\r\n    \"newEmployerMin\": 1.70000,\r\n    \"newEmployerMax\": 1.70000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/colorado\"\r\n  },\r\n  {\r\n    \"code\": \"MI0000-010\",\r\n    \"stateCode\": \"MI\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.06000,\r\n    \"maxAllowedRate\": 10.30000,\r\n    \"newEmployerMin\": 2.70000,\r\n    \"newEmployerMax\": 2.70000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/michigan\"\r\n  },\r\n  {\r\n    \"code\": \"MN0000-010\",\r\n    \"stateCode\": \"MN\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.20000,\r\n    \"maxAllowedRate\": 9.10000,\r\n    \"newEmployerMin\": 1.54000,\r\n    \"newEmployerMax\": 1.54000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/minnesota\"\r\n  },\r\n  {\r\n    \"code\": \"IN0000-010\",\r\n    \"stateCode\": \"IN\",\r\n    \"allowSubjectRateZero\": false,\r\n    \"minAllowedRate\": 0.50000,\r\n    \"maxAllowedRate\": 7.40000,\r\n    \"newEmployerMin\": 2.50000,\r\n    \"newEmployerMax\": 2.50000,\r\n    \"detailsLink\": \"https://www.surepayroll.com/resources/states/indiana\"\r\n  }\r\n];\r\n","import { createOkResponse$ } from './in-mem-service-utils';\nimport * as i0 from \"@angular/core\";\nvar InMemTaxRateService = /** @class */ (function () {\n    function InMemTaxRateService() {\n    }\n    InMemTaxRateService.prototype.getRequest = function (req, db) {\n        // tslint:disable:no-use-before-declare\n        if (req.url && req.url.includes('/taxes/suirates')) {\n            return createOkResponse$(req, suiRates);\n        }\n        if (req.url && req.url.includes('/taxes/holidays')) {\n            return createOkResponse$(req, holidays);\n        }\n    };\n    InMemTaxRateService.ngInjectableDef = i0.defineInjectable({ factory: function InMemTaxRateService_Factory() { return new InMemTaxRateService(); }, token: InMemTaxRateService, providedIn: \"root\" });\n    return InMemTaxRateService;\n}());\nexport { InMemTaxRateService };\n/* tslint:disable:quotemark */\nvar holidays = [\n    \"2019-02-18T00:00:00-06:00\",\n    \"2019-05-27T00:00:00-05:00\",\n    \"2019-07-04T00:00:00-05:00\",\n    \"2019-09-02T00:00:00-05:00\",\n    \"2019-10-14T00:00:00-05:00\",\n    \"2019-11-11T00:00:00-06:00\",\n    \"2019-11-28T00:00:00-06:00\",\n    \"2019-12-25T00:00:00-06:00\",\n    \"2020-12-25T00:00:00-06:00\",\n    \"2020-11-26T00:00:00-06:00\",\n    \"2020-11-11T00:00:00-06:00\",\n    \"2020-10-12T00:00:00-05:00\",\n    \"2020-09-07T00:00:00-05:00\",\n    \"2020-07-03T00:00:00-05:00\",\n    \"2020-05-25T00:00:00-05:00\",\n    \"2020-02-17T00:00:00-06:00\",\n    \"2020-01-20T00:00:00-06:00\",\n    \"2020-01-01T00:00:00-06:00\",\n    \"2021-01-18T00:00:00-06:00\",\n    \"2021-01-01T00:00:00-06:00\"\n];\nvar suiRates = [\n    {\n        \"code\": \"OK0000-010\",\n        \"stateCode\": \"OK\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.10000,\n        \"maxAllowedRate\": 5.50000,\n        \"newEmployerMin\": 1.50000,\n        \"newEmployerMax\": 1.50000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/oklahoma\"\n    },\n    {\n        \"code\": \"CA0000-010\",\n        \"stateCode\": \"CA\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 1.50000,\n        \"maxAllowedRate\": 6.20000,\n        \"newEmployerMin\": 3.40000,\n        \"newEmployerMax\": 3.40000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/california\"\n    },\n    {\n        \"code\": \"NV0000-010\",\n        \"stateCode\": \"NV\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.25000,\n        \"maxAllowedRate\": 5.40000,\n        \"newEmployerMin\": 2.95000,\n        \"newEmployerMax\": 2.95000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/nevada\"\n    },\n    {\n        \"code\": \"DE0000-010\",\n        \"stateCode\": \"DE\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.30000,\n        \"maxAllowedRate\": 8.20000,\n        \"newEmployerMin\": 1.90000,\n        \"newEmployerMax\": 1.90000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/delaware\"\n    },\n    {\n        \"code\": \"ME0000-010\",\n        \"stateCode\": \"ME\",\n        \"allowSubjectRateZero\": true,\n        \"minAllowedRate\": 0.06000,\n        \"maxAllowedRate\": 5.46000,\n        \"newEmployerMin\": 1.77000,\n        \"newEmployerMax\": 1.77000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/maine\"\n    },\n    {\n        \"code\": \"OH0000-010\",\n        \"stateCode\": \"OH\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.30000,\n        \"maxAllowedRate\": 9.00000,\n        \"newEmployerMin\": 2.70000,\n        \"newEmployerMax\": 2.70000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/ohio\"\n    },\n    {\n        \"code\": \"MS0000-010\",\n        \"stateCode\": \"MS\",\n        \"allowSubjectRateZero\": true,\n        \"minAllowedRate\": 0.20000,\n        \"maxAllowedRate\": 5.60000,\n        \"newEmployerMin\": 1.16000,\n        \"newEmployerMax\": 1.16000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/mississippi\"\n    },\n    {\n        \"code\": \"MT0000-010\",\n        \"stateCode\": \"MT\",\n        \"allowSubjectRateZero\": true,\n        \"minAllowedRate\": 0.13000,\n        \"maxAllowedRate\": 6.30000,\n        \"newEmployerMin\": 1.00000,\n        \"newEmployerMax\": 2.60000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/montana\"\n    },\n    {\n        \"code\": \"PA0000-010\",\n        \"stateCode\": \"PA\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 2.39050,\n        \"maxAllowedRate\": 11.03330,\n        \"newEmployerMin\": 3.68900,\n        \"newEmployerMax\": 3.68900,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/pennsylvania\"\n    },\n    {\n        \"code\": \"IA0000-010\",\n        \"stateCode\": \"IA\",\n        \"allowSubjectRateZero\": true,\n        \"minAllowedRate\": 0.00000,\n        \"maxAllowedRate\": 7.50000,\n        \"newEmployerMin\": 1.00000,\n        \"newEmployerMax\": 1.00000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/iowa\"\n    },\n    {\n        \"code\": \"TN0000-010\",\n        \"stateCode\": \"TN\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.01000,\n        \"maxAllowedRate\": 10.00000,\n        \"newEmployerMin\": 2.70000,\n        \"newEmployerMax\": 7.00000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/tennessee\"\n    },\n    {\n        \"code\": \"MA0000-010\",\n        \"stateCode\": \"MA\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.83000,\n        \"maxAllowedRate\": 12.65000,\n        \"newEmployerMin\": 1.87000,\n        \"newEmployerMax\": 1.87000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/massachusetts\"\n    },\n    {\n        \"code\": \"NE0000-010\",\n        \"stateCode\": \"NE\",\n        \"allowSubjectRateZero\": true,\n        \"minAllowedRate\": 0.00000,\n        \"maxAllowedRate\": 5.40000,\n        \"newEmployerMin\": 1.25000,\n        \"newEmployerMax\": 1.25000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/nebraska\"\n    },\n    {\n        \"code\": \"WI0000-010\",\n        \"stateCode\": \"WI\",\n        \"allowSubjectRateZero\": true,\n        \"minAllowedRate\": 0.00000,\n        \"maxAllowedRate\": 12.00000,\n        \"newEmployerMin\": 3.05000,\n        \"newEmployerMax\": 3.25000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/wisconsin\"\n    },\n    {\n        \"code\": \"NC0000-010\",\n        \"stateCode\": \"NC\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.06000,\n        \"maxAllowedRate\": 5.76000,\n        \"newEmployerMin\": 1.00000,\n        \"newEmployerMax\": 1.00000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/north-carolina\"\n    },\n    {\n        \"code\": \"WA0000-010\",\n        \"stateCode\": \"WA\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.13000,\n        \"maxAllowedRate\": 7.73000,\n        \"newEmployerMin\": 1.00000,\n        \"newEmployerMax\": 6.95700,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/washington\"\n    },\n    {\n        \"code\": \"KS0000-010\",\n        \"stateCode\": \"KS\",\n        \"allowSubjectRateZero\": true,\n        \"minAllowedRate\": 0.20000,\n        \"maxAllowedRate\": 7.60000,\n        \"newEmployerMin\": 2.70000,\n        \"newEmployerMax\": 2.70000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/kansas\"\n    },\n    {\n        \"code\": \"AL0000-010\",\n        \"stateCode\": \"AL\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.65000,\n        \"maxAllowedRate\": 6.80000,\n        \"newEmployerMin\": 2.70000,\n        \"newEmployerMax\": 2.70000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/alabama\"\n    },\n    {\n        \"code\": \"SC0000-010\",\n        \"stateCode\": \"SC\",\n        \"allowSubjectRateZero\": true,\n        \"minAllowedRate\": 0.06000,\n        \"maxAllowedRate\": 5.46000,\n        \"newEmployerMin\": 1.03000,\n        \"newEmployerMax\": 1.03000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/south-carolina\"\n    },\n    {\n        \"code\": \"CT0000-010\",\n        \"stateCode\": \"CT\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 1.90000,\n        \"maxAllowedRate\": 6.80000,\n        \"newEmployerMin\": 3.90000,\n        \"newEmployerMax\": 3.90000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/connecticut\"\n    },\n    {\n        \"code\": \"ID0000-010\",\n        \"stateCode\": \"ID\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.39300,\n        \"maxAllowedRate\": 5.40000,\n        \"newEmployerMin\": 1.39500,\n        \"newEmployerMax\": 1.39500,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/idaho\"\n    },\n    {\n        \"code\": \"GA0000-010\",\n        \"stateCode\": \"GA\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.04000,\n        \"maxAllowedRate\": 5.40000,\n        \"newEmployerMin\": 2.62000,\n        \"newEmployerMax\": 2.62000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/georgia\"\n    },\n    {\n        \"code\": \"IL0000-010\",\n        \"stateCode\": \"IL\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.52500,\n        \"maxAllowedRate\": 6.92500,\n        \"newEmployerMin\": 3.45000,\n        \"newEmployerMax\": 3.45000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/illinois\"\n    },\n    {\n        \"code\": \"SD0000-010\",\n        \"stateCode\": \"SD\",\n        \"allowSubjectRateZero\": true,\n        \"minAllowedRate\": 0.00000,\n        \"maxAllowedRate\": 9.35000,\n        \"newEmployerMin\": 1.00000,\n        \"newEmployerMax\": 1.20000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/south-dakota\"\n    },\n    {\n        \"code\": \"WV0000-010\",\n        \"stateCode\": \"WV\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 1.50000,\n        \"maxAllowedRate\": 8.50000,\n        \"newEmployerMin\": 2.70000,\n        \"newEmployerMax\": 2.70000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/west-virginia\"\n    },\n    {\n        \"code\": \"WY0000-010\",\n        \"stateCode\": \"WY\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.28700,\n        \"maxAllowedRate\": 8.78000,\n        \"newEmployerMin\": 1.34000,\n        \"newEmployerMax\": 4.18000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/wyoming\"\n    },\n    {\n        \"code\": \"NM0000-010\",\n        \"stateCode\": \"NM\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.33000,\n        \"maxAllowedRate\": 5.40000,\n        \"newEmployerMin\": 1.20000,\n        \"newEmployerMax\": 3.24000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/new-mexico\"\n    },\n    {\n        \"code\": \"OR0000-010\",\n        \"stateCode\": \"OR\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.90000,\n        \"maxAllowedRate\": 5.40000,\n        \"newEmployerMin\": 2.60000,\n        \"newEmployerMax\": 2.60000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/oregon\"\n    },\n    {\n        \"code\": \"AK0000-010\",\n        \"stateCode\": \"AK\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 1.00000,\n        \"maxAllowedRate\": 5.40000,\n        \"newEmployerMin\": 1.50000,\n        \"newEmployerMax\": 2.23000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/alaska\"\n    },\n    {\n        \"code\": \"KY0000-010\",\n        \"stateCode\": \"KY\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.40000,\n        \"maxAllowedRate\": 9.25000,\n        \"newEmployerMin\": 2.70000,\n        \"newEmployerMax\": 2.70000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/kentucky\"\n    },\n    {\n        \"code\": \"VA0000-010\",\n        \"allowSubjectRateZero\": false,\n        \"stateCode\": \"VA\",\n        \"minAllowedRate\": 0.11000,\n        \"maxAllowedRate\": 6.21000,\n        \"newEmployerMin\": 2.57000,\n        \"newEmployerMax\": 2.57000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/virginia\"\n    },\n    {\n        \"code\": \"NY0000-010\",\n        \"stateCode\": \"NY\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 1.30000,\n        \"maxAllowedRate\": 9.10000,\n        \"newEmployerMin\": 4.10000,\n        \"newEmployerMax\": 4.10000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/new-york\"\n    },\n    {\n        \"code\": \"TX0000-010\",\n        \"stateCode\": \"TX\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.46000,\n        \"maxAllowedRate\": 6.46000,\n        \"newEmployerMin\": 2.70000,\n        \"newEmployerMax\": 2.70000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/texas\"\n    },\n    {\n        \"code\": \"NH0000-010\",\n        \"stateCode\": \"NH\",\n        \"allowSubjectRateZero\": true,\n        \"minAllowedRate\": 0.10000,\n        \"maxAllowedRate\": 7.50000,\n        \"newEmployerMin\": 1.70000,\n        \"newEmployerMax\": 1.70000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/new-hampshire\"\n    },\n    {\n        \"code\": \"VT0000-010\",\n        \"stateCode\": \"VT\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 1.10000,\n        \"maxAllowedRate\": 7.70000,\n        \"newEmployerMin\": 1.00000,\n        \"newEmployerMax\": 6.40000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/vermont\"\n    },\n    {\n        \"code\": \"ND0000-010\",\n        \"stateCode\": \"ND\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.30000,\n        \"maxAllowedRate\": 10.74000,\n        \"newEmployerMin\": 1.62000,\n        \"newEmployerMax\": 1.62000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/north-dakota\"\n    },\n    {\n        \"code\": \"DC0000-010\",\n        \"stateCode\": \"DC\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 1.60000,\n        \"maxAllowedRate\": 7.00000,\n        \"newEmployerMin\": 2.70000,\n        \"newEmployerMax\": 2.70000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/washington-dc\"\n    },\n    {\n        \"code\": \"RI0000-010\",\n        \"stateCode\": \"RI\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.89000,\n        \"maxAllowedRate\": 9.49000,\n        \"newEmployerMin\": 2.04000,\n        \"newEmployerMax\": 2.04000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/rhode-island\"\n    },\n    {\n        \"code\": \"NJ0000-010\",\n        \"stateCode\": \"NJ\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.50000,\n        \"maxAllowedRate\": 5.80000,\n        \"newEmployerMin\": 3.28250,\n        \"newEmployerMax\": 3.28250,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/new-jersey\"\n    },\n    {\n        \"code\": \"PR0000-010\",\n        \"stateCode\": \"PR\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.0,\n        \"maxAllowedRate\": 0.0,\n        \"newEmployerMin\": 0.0,\n        \"newEmployerMax\": 0.0,\n        \"detailsLink\": null\n    },\n    {\n        \"code\": \"AR0000-010\",\n        \"stateCode\": \"AR\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.40000,\n        \"maxAllowedRate\": 14.30000,\n        \"newEmployerMin\": 3.20000,\n        \"newEmployerMax\": 3.20000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/arkansas\"\n    },\n    {\n        \"code\": \"HI0000-010\",\n        \"stateCode\": \"HI\",\n        \"allowSubjectRateZero\": true,\n        \"minAllowedRate\": 0.00000,\n        \"maxAllowedRate\": 5.60000,\n        \"newEmployerMin\": 2.40000,\n        \"newEmployerMax\": 2.40000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/hawaii\"\n    },\n    {\n        \"code\": \"LA0000-010\",\n        \"stateCode\": \"LA\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.10000,\n        \"maxAllowedRate\": 6.20000,\n        \"newEmployerMin\": 1.21000,\n        \"newEmployerMax\": 3.02000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/louisiana\"\n    },\n    {\n        \"code\": \"UT0000-010\",\n        \"stateCode\": \"UT\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.10000,\n        \"maxAllowedRate\": 7.10000,\n        \"newEmployerMin\": 1.10000,\n        \"newEmployerMax\": 7.20000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/utah\"\n    },\n    {\n        \"code\": \"MD0000-010\",\n        \"stateCode\": \"MD\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.30000,\n        \"maxAllowedRate\": 7.50000,\n        \"newEmployerMin\": 2.60000,\n        \"newEmployerMax\": 2.60000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/maryland\"\n    },\n    {\n        \"code\": \"MO0000-010\",\n        \"stateCode\": \"MO\",\n        \"allowSubjectRateZero\": true,\n        \"minAllowedRate\": 0.00000,\n        \"maxAllowedRate\": 8.37000,\n        \"newEmployerMin\": 3.51000,\n        \"newEmployerMax\": 3.51000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/missouri\"\n    },\n    {\n        \"code\": \"FL0000-010\",\n        \"stateCode\": \"FL\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.10000,\n        \"maxAllowedRate\": 5.40000,\n        \"newEmployerMin\": 2.70000,\n        \"newEmployerMax\": 2.70000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/florida\"\n    },\n    {\n        \"code\": \"VI0000-010\",\n        \"stateCode\": \"VI\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.0,\n        \"maxAllowedRate\": 0.0,\n        \"newEmployerMin\": 0.0,\n        \"newEmployerMax\": 0.0,\n        \"detailsLink\": null\n    },\n    {\n        \"code\": \"AZ0000-010\",\n        \"stateCode\": \"AZ\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.05000,\n        \"maxAllowedRate\": 12.76000,\n        \"newEmployerMin\": 2.00000,\n        \"newEmployerMax\": 2.00000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/arizona\"\n    },\n    {\n        \"code\": \"CO0000-010\",\n        \"stateCode\": \"CO\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.62000,\n        \"maxAllowedRate\": 8.15000,\n        \"newEmployerMin\": 1.70000,\n        \"newEmployerMax\": 1.70000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/colorado\"\n    },\n    {\n        \"code\": \"MI0000-010\",\n        \"stateCode\": \"MI\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.06000,\n        \"maxAllowedRate\": 10.30000,\n        \"newEmployerMin\": 2.70000,\n        \"newEmployerMax\": 2.70000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/michigan\"\n    },\n    {\n        \"code\": \"MN0000-010\",\n        \"stateCode\": \"MN\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.20000,\n        \"maxAllowedRate\": 9.10000,\n        \"newEmployerMin\": 1.54000,\n        \"newEmployerMax\": 1.54000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/minnesota\"\n    },\n    {\n        \"code\": \"IN0000-010\",\n        \"stateCode\": \"IN\",\n        \"allowSubjectRateZero\": false,\n        \"minAllowedRate\": 0.50000,\n        \"maxAllowedRate\": 7.40000,\n        \"newEmployerMin\": 2.50000,\n        \"newEmployerMax\": 2.50000,\n        \"detailsLink\": \"https://www.surepayroll.com/resources/states/indiana\"\n    }\n];\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  createOkResponse$,\r\n  createResponse$,\r\n  Db,\r\n  RequestInfo,\r\n  STATUS\r\n} from './in-mem-service-utils';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InMemSurepayrollService {\r\n  getRequest(req: RequestInfo, db: Db): Observable<any> {\r\n    if (req.url && req.url.includes('/authentication/username/valid/')) {\r\n      return this.validateUsername$(req, db);\r\n    }\r\n    // Password Policy API: GET `${environment.spApiRoot}/authentication/password/rules/standard`\r\n    if (req.url && req.url.endsWith('/password/rules/standard/')) {\r\n      return this.passwordPolicy(req);\r\n    }\r\n    // all other GET SurePayroll requests that make it here are bad\r\n    return undefined;\r\n  }\r\n\r\n  postRequest(req: RequestInfo, db: Db) {\r\n    if (req.url.endsWith('company/new')) {\r\n      return this.createNewCompany(req, db);\r\n    }\r\n    // all other POST SurePayroll requests that make it here are bad\r\n    return undefined;\r\n  }\r\n\r\n  // Swagger Def: https://devcoreapi.surepayroll.com/company/swagger/index.html\r\n  // ex: POST https://devcoreapi.surepayroll.com/company/new\r\n  // Success: 200 - OK with JSON body\r\n  // {\r\n  //   \"bclCode\": \"ABCD\",\r\n  //   \"userKey\": 123456\r\n  // }\r\n  // Errors: 400, 500\r\n  /**\r\n   * Simulate creating User and Company on the SP system\r\n   * BE NICE and provide a username and password\r\n   */\r\n  createNewCompany(reqInfo: RequestInfo, db: Db) {\r\n    const originalRequest = reqInfo.req as any;\r\n    let body = originalRequest.body;\r\n    console.log('In-mem SurepayrollService.createNewCompany POST request body', body);\r\n    const error$ = validateUsername(body && body.username, db, reqInfo);\r\n    if (error$) {\r\n      return error$; // Naughty user!\r\n    }\r\n    body = {\r\n      bclCode: genBcl(),\r\n      userKey: genOidcSubKey()\r\n    };\r\n    return createOkResponse$(reqInfo, body);\r\n  }\r\n\r\n  // Swagger Def: https://devcoreapi.surepayroll.com/authentication/swagger/index.html\r\n  // ex: GET https://devcoreapi.surepayroll.com/authentication/username/valid/davidasher\r\n  // Success: 204 - No Content\r\n  // Fail: \"404 - Not Found\" if you send without any user name at all\r\n  // Fail: \"409 - Conflict\" with the explanation as a string inside an array\r\n  /** Simulate username validation */\r\n  validateUsername$(reqInfo: RequestInfo, db: Db) {\r\n    const matched = reqInfo.url.match(/\\/username\\/valid\\/(.*)$/);\r\n    const username = matched[1];\r\n    if (!username) {\r\n      // 404 - the request itself would be unrecognized without the username\r\n      return createResponse$(reqInfo, STATUS.NOT_FOUND, 'Not Found');\r\n    } else {\r\n      const error$ = validateUsername(username, db, reqInfo);\r\n      return error$ ? error$ : createResponse$(reqInfo, STATUS.NO_CONTENT, 'No Content');\r\n    }\r\n  }\r\n\r\n  passwordPolicy(reqInfo: RequestInfo) {\r\n    const policy = [\r\n      {\r\n        name: 'LowercaseCharacter',\r\n        value: 'REQUIRED'\r\n      },\r\n      {\r\n        name: 'UppercaseCharacter',\r\n        value: 'REQUIRED'\r\n      },\r\n      {\r\n        name: 'NumericCharacter',\r\n        value: 'REQUIRED'\r\n      },\r\n      {\r\n        name: 'SpecialCharacter',\r\n        value: 'ALLOWED'\r\n      },\r\n      {\r\n        name: 'MinimumLength',\r\n        value: '10'\r\n      },\r\n      {\r\n        name: 'MaximumRepeatedCharacters',\r\n        value: '0'\r\n      }\r\n    ];\r\n    return createResponse$(reqInfo, STATUS.OK, 'Ok', policy);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Generate a mock Surepayroll \"BCL\" code.\r\n * Generates a pseudo-random 5-character BCL ... with '~' prefix indicating a mock\r\n */\r\nfunction genBcl(): string {\r\n  const charIx = Array.from({ length: 5 }, () => Math.floor(Math.random() * 36));\r\n  return '~' + charIx.map(ix => 'abcdefghijklmnopqrstuvwxyz0123456789'[ix]).join('');\r\n}\r\n\r\n/**\r\n * Generate a mock of the integer part of a Surepayroll IdentityServer oidcSub.\r\n * Generate a pseudo-random integer up to 7 digits\r\n */\r\nfunction genOidcSubKey(): number {\r\n  return Math.floor(Math.random() * 10000000);\r\n}\r\n\r\n// Swagger Def: https://devcoreapi.surepayroll.com/authentication/swagger/index.html\r\n// ex: GET https://devcoreapi.surepayroll.com/authentication/username/valid/davidasher\r\n/**\r\n * Validate the username per rules, returning error response observable if something is wrong.\r\n */\r\nfunction validateUsername(username: string, db: Db, reqInfo: RequestInfo) {\r\n  const url = reqInfo.url;\r\n  let error: string;\r\n  if (!username || username.length < 8) {\r\n    error = 'Username must have at least 8 characters';\r\n  } else if (username.length > 18) {\r\n    error = 'Username cannot have more than 18 characters';\r\n  } else if (!/^[a-zA-Z0-9\\_\\-\\.]*$/.test(username)) {\r\n    error = 'Username contains invalid characters';\r\n  } else if (db.User.find(u => u.username === username)) {\r\n    error = 'The username already exists in SurePayroll database';\r\n  }\r\n  if (error) {\r\n    // 409 - What the server SHOULD return. How it actually errors is anyone's guess.\r\n    return createResponse$(reqInfo, STATUS.CONFLICT, 'Conflict', [error]);\r\n  }\r\n}\r\n","import { createOkResponse$, createResponse$, STATUS } from './in-mem-service-utils';\nimport * as i0 from \"@angular/core\";\nvar InMemSurepayrollService = /** @class */ (function () {\n    function InMemSurepayrollService() {\n    }\n    InMemSurepayrollService.prototype.getRequest = function (req, db) {\n        if (req.url && req.url.includes('/authentication/username/valid/')) {\n            return this.validateUsername$(req, db);\n        }\n        // Password Policy API: GET `${environment.spApiRoot}/authentication/password/rules/standard`\n        if (req.url && req.url.endsWith('/password/rules/standard/')) {\n            return this.passwordPolicy(req);\n        }\n        // all other GET SurePayroll requests that make it here are bad\n        return undefined;\n    };\n    InMemSurepayrollService.prototype.postRequest = function (req, db) {\n        if (req.url.endsWith('company/new')) {\n            return this.createNewCompany(req, db);\n        }\n        // all other POST SurePayroll requests that make it here are bad\n        return undefined;\n    };\n    // Swagger Def: https://devcoreapi.surepayroll.com/company/swagger/index.html\n    // ex: POST https://devcoreapi.surepayroll.com/company/new\n    // Success: 200 - OK with JSON body\n    // {\n    //   \"bclCode\": \"ABCD\",\n    //   \"userKey\": 123456\n    // }\n    // Errors: 400, 500\n    /**\n     * Simulate creating User and Company on the SP system\n     * BE NICE and provide a username and password\n     */\n    InMemSurepayrollService.prototype.createNewCompany = function (reqInfo, db) {\n        var originalRequest = reqInfo.req;\n        var body = originalRequest.body;\n        console.log('In-mem SurepayrollService.createNewCompany POST request body', body);\n        var error$ = validateUsername(body && body.username, db, reqInfo);\n        if (error$) {\n            return error$; // Naughty user!\n        }\n        body = {\n            bclCode: genBcl(),\n            userKey: genOidcSubKey()\n        };\n        return createOkResponse$(reqInfo, body);\n    };\n    // Swagger Def: https://devcoreapi.surepayroll.com/authentication/swagger/index.html\n    // ex: GET https://devcoreapi.surepayroll.com/authentication/username/valid/davidasher\n    // Success: 204 - No Content\n    // Fail: \"404 - Not Found\" if you send without any user name at all\n    // Fail: \"409 - Conflict\" with the explanation as a string inside an array\n    /** Simulate username validation */\n    InMemSurepayrollService.prototype.validateUsername$ = function (reqInfo, db) {\n        var matched = reqInfo.url.match(/\\/username\\/valid\\/(.*)$/);\n        var username = matched[1];\n        if (!username) {\n            // 404 - the request itself would be unrecognized without the username\n            return createResponse$(reqInfo, STATUS.NOT_FOUND, 'Not Found');\n        }\n        else {\n            var error$ = validateUsername(username, db, reqInfo);\n            return error$ ? error$ : createResponse$(reqInfo, STATUS.NO_CONTENT, 'No Content');\n        }\n    };\n    InMemSurepayrollService.prototype.passwordPolicy = function (reqInfo) {\n        var policy = [\n            {\n                name: 'LowercaseCharacter',\n                value: 'REQUIRED'\n            },\n            {\n                name: 'UppercaseCharacter',\n                value: 'REQUIRED'\n            },\n            {\n                name: 'NumericCharacter',\n                value: 'REQUIRED'\n            },\n            {\n                name: 'SpecialCharacter',\n                value: 'ALLOWED'\n            },\n            {\n                name: 'MinimumLength',\n                value: '10'\n            },\n            {\n                name: 'MaximumRepeatedCharacters',\n                value: '0'\n            }\n        ];\n        return createResponse$(reqInfo, STATUS.OK, 'Ok', policy);\n    };\n    InMemSurepayrollService.ngInjectableDef = i0.defineInjectable({ factory: function InMemSurepayrollService_Factory() { return new InMemSurepayrollService(); }, token: InMemSurepayrollService, providedIn: \"root\" });\n    return InMemSurepayrollService;\n}());\nexport { InMemSurepayrollService };\n/**\n * Generate a mock Surepayroll \"BCL\" code.\n * Generates a pseudo-random 5-character BCL ... with '~' prefix indicating a mock\n */\nfunction genBcl() {\n    var charIx = Array.from({ length: 5 }, function () { return Math.floor(Math.random() * 36); });\n    return '~' + charIx.map(function (ix) { return 'abcdefghijklmnopqrstuvwxyz0123456789'[ix]; }).join('');\n}\n/**\n * Generate a mock of the integer part of a Surepayroll IdentityServer oidcSub.\n * Generate a pseudo-random integer up to 7 digits\n */\nfunction genOidcSubKey() {\n    return Math.floor(Math.random() * 10000000);\n}\n// Swagger Def: https://devcoreapi.surepayroll.com/authentication/swagger/index.html\n// ex: GET https://devcoreapi.surepayroll.com/authentication/username/valid/davidasher\n/**\n * Validate the username per rules, returning error response observable if something is wrong.\n */\nfunction validateUsername(username, db, reqInfo) {\n    var url = reqInfo.url;\n    var error;\n    if (!username || username.length < 8) {\n        error = 'Username must have at least 8 characters';\n    }\n    else if (username.length > 18) {\n        error = 'Username cannot have more than 18 characters';\n    }\n    else if (!/^[a-zA-Z0-9\\_\\-\\.]*$/.test(username)) {\n        error = 'Username contains invalid characters';\n    }\n    else if (db.User.find(function (u) { return u.username === username; })) {\n        error = 'The username already exists in SurePayroll database';\n    }\n    if (error) {\n        // 409 - What the server SHOULD return. How it actually errors is anyone's guess.\n        return createResponse$(reqInfo, STATUS.CONFLICT, 'Conflict', [error]);\n    }\n}\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ajax } from 'rxjs/ajax';\nimport { STATUS } from 'angular-in-memory-web-api';\nimport { createOkResponse$, createBadRequestResponse$, guardCompanyChange } from './in-mem-service-utils';\nimport { Db } from './db';\nimport { environment } from '@environment';\nimport { genExtraAccounts } from './in-mem-gen-extra-accounts';\nimport { InMemAccountService } from './in-mem-account.service';\nimport { InMemAddressValidatorService } from '@app/mock-services/in-mem-address-validator.service';\nimport { InMemAdminService } from './in-mem-admin.service';\nimport { InMemCompanyPackageService } from './in-mem-company-package.service';\nimport { InMemDeductionService } from './in-mem-deduction.service';\nimport { InMemEarningService } from './in-mem-earning.service';\nimport { InMemEinService } from './in-mem-ein.service';\nimport { InMemEsignService } from './in-mem-esign.service';\nimport { InMemEnrollmentService } from './in-mem-enrollment.service';\nimport { InMemIdentityService } from './in-mem-identity.service';\nimport { InMemSaveEntitiesService } from './in-mem-save-entities.service';\nimport { InMemSurepayrollService } from './in-mem-surepayroll.service';\nimport { InMemTaxService } from '@app/mock-services/in-mem-tax.service';\nimport { InMemTaxRateService } from '@app/mock-services/in-mem-tax-rate.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./in-mem-account.service\";\nimport * as i2 from \"./in-mem-address-validator.service\";\nimport * as i3 from \"./in-mem-admin.service\";\nimport * as i4 from \"./in-mem-company-package.service\";\nimport * as i5 from \"./in-mem-deduction.service\";\nimport * as i6 from \"./in-mem-earning.service\";\nimport * as i7 from \"./in-mem-ein.service\";\nimport * as i8 from \"./in-mem-esign.service\";\nimport * as i9 from \"./in-mem-enrollment.service\";\nimport * as i10 from \"./in-mem-identity.service\";\nimport * as i11 from \"./in-mem-save-entities.service\";\nimport * as i12 from \"./in-mem-tax.service\";\nimport * as i13 from \"./in-mem-tax-rate.service\";\nimport * as i14 from \"./in-mem-surepayroll.service\";\nvar InMemoryDataService = /** @class */ (function () {\n    function InMemoryDataService(inMemAccountService, inMemAddressValidatorService, inMemAdminService, inMemCompanyPackageService, inMemDeductionService, inMemEarningService, inMemEinService, inMemEsignService, inMemEnrollmentService, inMemIdentityService, inMemSaveEntitiesService, inMemTaxService, inMemTaxRateService, inMemSurepayrollService) {\n        this.inMemAccountService = inMemAccountService;\n        this.inMemAddressValidatorService = inMemAddressValidatorService;\n        this.inMemAdminService = inMemAdminService;\n        this.inMemCompanyPackageService = inMemCompanyPackageService;\n        this.inMemDeductionService = inMemDeductionService;\n        this.inMemEarningService = inMemEarningService;\n        this.inMemEinService = inMemEinService;\n        this.inMemEsignService = inMemEsignService;\n        this.inMemEnrollmentService = inMemEnrollmentService;\n        this.inMemIdentityService = inMemIdentityService;\n        this.inMemSaveEntitiesService = inMemSaveEntitiesService;\n        this.inMemTaxService = inMemTaxService;\n        this.inMemTaxRateService = inMemTaxRateService;\n        this.inMemSurepayrollService = inMemSurepayrollService;\n        /** True if in-mem service is intercepting (default); all requests pass thru when false. */\n        this.active = true;\n        this.maxId = 0;\n        this.createInitialEmptyDb();\n        this.createResourceNameMap();\n    }\n    /** Create the in-memory database on start or by command */\n    InMemoryDataService.prototype.createDb = function (reqInfo) {\n        if (reqInfo) {\n            var body = reqInfo.utils.getJsonBody(reqInfo.req) || {};\n            this.active = !!body.active;\n            if (body.clear === true) {\n                this.createInitialEmptyDb();\n                return of(this.db);\n            }\n        }\n        return this.createInitialMockDb();\n    };\n    /**\n     * Create/reset the in-mem database from mock data in JSON file,\n     * extended with calculated accounts and account etags.\n     * @returns Terminating observable. You must subscribe to execute but no need to unsubscribe.\n     */\n    InMemoryDataService.prototype.createInitialMockDb = function () {\n        var _this = this;\n        this.createInitialEmptyDb();\n        return getDbData().pipe(map(function (rawDb) { return genExtraAccounts(__assign({}, _this.db, rawDb)); }), tap(function (db) {\n            // Ensure every initial mock company has an etag version.\n            db.Company.forEach(function (c) {\n                if (db.CompanyVersion[c.id] == null) {\n                    db.CompanyVersion[c.id] = 0;\n                }\n            });\n            _this.db = db;\n        }));\n    };\n    /**\n     * Create initial database with empty collections\n     */\n    InMemoryDataService.prototype.createInitialEmptyDb = function () {\n        this.db = new Db();\n    };\n    InMemoryDataService.prototype.createResourceNameMap = function () {\n        var db = new Db();\n        this.resourceNameMap = Object.keys(db).reduce(function (acc, collectionName) {\n            var key = collectionName.toLowerCase();\n            acc[key] = collectionName;\n            // Generate plural resource name mapping\n            if (key.endsWith('y')) {\n                acc[key.substr(0, key.length - 1) + 'ies'] = collectionName;\n            }\n            else if (key.endsWith('x')) {\n                acc[key + 'es'] = collectionName;\n            }\n            else {\n                acc[key + 's'] = collectionName;\n            }\n            return acc;\n        }, {});\n    };\n    /**\n     * Simulate generating new Id on the server\n     */\n    InMemoryDataService.prototype.genId = function (collection, collectionName) {\n        throw new Error(\"Cannot generate server-side id for '\" + collectionName + \"'.\");\n    };\n    /**\n     * Remap a known singular collection name (\"customer\")\n     * to the plural collection name (\"customers\"); else return the name\n     * @param name - collection name from the parsed URL\n     */\n    InMemoryDataService.prototype.mapCollectionName = function (name) {\n        return this.resourceNameMap[(name || '').toLowerCase()] || name;\n    };\n    /**\n     * Override `parseRequestUrl`\n     * Manipulates the request URL or the parsed result.\n     * If in-mem is inactive, clear collectionName so that service passes request thru.\n     * If in-mem is active, after parsing with the default parser,\n     * @param url from request URL\n     * @param utils for manipulating parsed URL\n     */\n    InMemoryDataService.prototype.parseRequestUrl = function (url, utils) {\n        url = mapSpApiUrl(url);\n        url = tweakUrl(url);\n        var parsed = utils.parseRequestUrl(url);\n        parsed.collectionName = this.active ? this.mapCollectionName(parsed.collectionName) : undefined;\n        if (environment.mockSpApiOnly) {\n            // When only mocking SP APIs, disable mocking based on collection name.\n            // Now requests go first to method interceptors (GET/PUT) and,\n            // if not intercepted, pass through to HTTP, without matching an in-mem DB collection.\n            parsed.collectionName = '';\n        }\n        return parsed;\n    };\n    // #region GET cases\n    /**\n     * Special-cases for GET methods\n     */\n    InMemoryDataService.prototype.get = function (req) {\n        if (environment.mockSpApiOnly) {\n            return this.getMockSpApiOnly(req);\n        }\n        else {\n            return this.getMocked(req);\n        }\n    };\n    /**\n     * Special-cases for GET methods to all ECommerce & SP APIs\n     */\n    InMemoryDataService.prototype.getMocked = function (req) {\n        switch (req.collectionName) {\n            case 'account':\n                return this.inMemAccountService.getRequest(req, this.db) || createBadRequestResponse$(req);\n            case 'admin':\n                return this.inMemAdminService.getRequest(req, this.db) || createBadRequestResponse$(req);\n            case 'companypackage':\n                return (this.inMemCompanyPackageService.getCompanyPackage(req, this.db) ||\n                    createBadRequestResponse$(req));\n            case 'earnings':\n                return (this.inMemEarningService.getRequest(req, this.db) ||\n                    createBadRequestResponse$(req));\n            case 'deductions':\n                return (this.inMemDeductionService.getRequest(req, this.db) ||\n                    createBadRequestResponse$(req));\n            case 'documentpackage':\n                return (this.inMemCompanyPackageService.getDocumentPackage(req, this.db) ||\n                    createBadRequestResponse$(req));\n            case 'ein':\n                return this.inMemEinService.getRequest(req, this.db) || createBadRequestResponse$(req);\n            case 'signing':\n                if (req.url && req.url.includes('/signing/esigngeturl/')) {\n                    return this.inMemEsignService.getEsignUrl(req, this.db) || createBadRequestResponse$(req);\n                }\n                break;\n            case 'surepayroll':\n                return (this.inMemSurepayrollService.getRequest(req, this.db) || createBadRequestResponse$(req));\n            case 'taxes':\n                if (req.url && req.url.includes('/taxapi/taxes')) {\n                    return this.inMemTaxRateService.getRequest(req, this.db) || createBadRequestResponse$(req);\n                }\n                break;\n            // Disallow attempt to get more than one of these collection items\n            case 'User':\n            case 'Company':\n                if (!req.id) {\n                    return errorOnGetCollection(req);\n                }\n                break;\n        }\n        // Let all other GET requests through\n        return null;\n    };\n    /**\n     * Special-cases for GET methods to SP APIs\n     */\n    InMemoryDataService.prototype.getMockSpApiOnly = function (req) {\n        if (req.url.indexOf(environment.spApiRoot) > -1) {\n            return (this.inMemSurepayrollService.getRequest(req, this.db) || createBadRequestResponse$(req));\n        }\n        // Let all other GET requests through\n        return null;\n    };\n    // #endregion GET cases\n    // #region POST cases\n    /**\n     * Special-cases for POST methods\n     */\n    InMemoryDataService.prototype.post = function (req) {\n        if (environment.mockSpApiOnly) {\n            return this.postMockSpApiOnly(req);\n        }\n        else {\n            return this.postMocked(req);\n        }\n    };\n    /**\n     * Special-cases for POST methods to ECommerce & SP APIs\n     */\n    InMemoryDataService.prototype.postMocked = function (req) {\n        switch (req.collectionName) {\n            case 'account':\n                return this.inMemAccountService.postRequest(req, this.db) || createBadRequestResponse$(req);\n            case 'Company':\n                if (req.url.endsWith('company/event')) {\n                    return createOkResponse$(req);\n                }\n                else {\n                    return guardCompanyChange(req, this.db);\n                }\n            case 'enrollment':\n                return (this.inMemEnrollmentService.postRequest(req, this.db) || createBadRequestResponse$(req));\n            case 'Envelope':\n                if (req.url && req.url.includes('/envelope/complete')) {\n                    return this.inMemEsignService.postMarkEnvelopesCompleted(req, this.db);\n                }\n                break; // let the other envelope requests through\n            // TODO: POST URLs beginning `/deductions/` should be `/save/deductions/company` and `/save/deductions/employee`\n            // and InMemDeductionService should be folded under inMemSaveEntitiesService.\n            // Then delete this case.\n            case 'earnings': // fall through to InMemSaveEntitiesService which handles them.\n            case 'deductions': // fall through to InMemSaveEntitiesService which handles them.\n            case 'CompanyEarning': // fall through to InMemSaveEntitiesService which handles them.\n            case 'company-deduction': // fall through to InMemSaveEntitiesService which handles them.\n            case 'employee-deduction': // fall through to InMemSaveEntitiesService which handles them.\n            case 'save':\n                return (this.inMemSaveEntitiesService.postRequest(req, this.db) || createBadRequestResponse$(req));\n            case 'surepayroll':\n                return (this.inMemSurepayrollService.postRequest(req, this.db) || createBadRequestResponse$(req));\n            case 'signing':\n                if (req.url && req.url.includes('/signing/esignsend/')) {\n                    return (this.inMemEsignService.postEsignSend(req, this.db) || createBadRequestResponse$(req));\n                }\n                break;\n            case 'taxes':\n                if (req.url && req.url.includes('/taxapi/taxes')) {\n                    return this.inMemTaxService.getRequest(req, this.db) || createBadRequestResponse$(req);\n                }\n                break;\n            case 'Address':// NOT the Address entity collection but rather the taxapi/address\n                if (req.url && req.url.includes('/taxapi/address')) {\n                    return (this.inMemAddressValidatorService.getRequest(req, this.db) ||\n                        createBadRequestResponse$(req));\n                }\n                break;\n        }\n        if (req.url.startsWith(environment.oidcAuthRealm)) {\n            return this.inMemIdentityService.postRequest(req, this.db) || createBadRequestResponse$(req);\n        }\n        // Let all other POST requests through\n        return null;\n    };\n    /**\n     * Special-cases for POST methods to SP Only\n     */\n    InMemoryDataService.prototype.postMockSpApiOnly = function (req) {\n        if (req.url.indexOf(environment.spApiRoot) > -1) {\n            return (this.inMemSurepayrollService.postRequest(req, this.db) || createBadRequestResponse$(req));\n        }\n        // Let all other POST requests through\n        return null;\n    };\n    // #endregion POST cases\n    // #region PUT cases\n    /**\n     * Special-cases for PUT methods\n     */\n    InMemoryDataService.prototype.put = function (req) {\n        if (environment.mockSpApiOnly) {\n            return null; //\n        }\n        switch (req.collectionName) {\n            case 'Company':\n                return guardCompanyChange(req, this.db);\n        }\n    };\n    InMemoryDataService.ngInjectableDef = i0.defineInjectable({ factory: function InMemoryDataService_Factory() { return new InMemoryDataService(i0.inject(i1.InMemAccountService), i0.inject(i2.InMemAddressValidatorService), i0.inject(i3.InMemAdminService), i0.inject(i4.InMemCompanyPackageService), i0.inject(i5.InMemDeductionService), i0.inject(i6.InMemEarningService), i0.inject(i7.InMemEinService), i0.inject(i8.InMemEsignService), i0.inject(i9.InMemEnrollmentService), i0.inject(i10.InMemIdentityService), i0.inject(i11.InMemSaveEntitiesService), i0.inject(i12.InMemTaxService), i0.inject(i13.InMemTaxRateService), i0.inject(i14.InMemSurepayrollService)); }, token: InMemoryDataService, providedIn: \"root\" });\n    return InMemoryDataService;\n}());\nexport { InMemoryDataService };\n// #region Helper Fns\nfunction errorOnGetCollection(req) {\n    var errOptions = {\n        url: req.url,\n        status: STATUS.FORBIDDEN,\n        statusText: 'Forbidden',\n        body: \"Requests for multiple '\" + req.collectionName + \"' records are forbidden\"\n    };\n    return req.utils.createResponse$(function () { return errOptions; });\n}\n/**\n * Get development data from json file\n */\nfunction getDbData() {\n    // TODO: enable alternative sources\n    var url = '/assets/in-memory-data.json';\n    return ajax.get(url).pipe(map(function (data) {\n        // console.log('in-memory-data', data.response);\n        return data.response;\n    }), catchError(function (error) {\n        console.error('in-memory-data', error);\n        return of({});\n    }));\n}\n/**\n * Map certain SurePayroll API request URLs to in-memory mock services.\n * @param url Original request URL\n */\nfunction mapSpApiUrl(url) {\n    var matched;\n    if (url.startsWith(environment.spApiRoot)) {\n        if (/\\/company\\/new$/.test(url)) {\n            url = \"api/surepayroll/company/new\";\n        }\n        else if ((matched = url.match(/authentication\\/username\\/valid\\/(.*)$/))) {\n            url = 'api/surepayroll/' + matched[0];\n        }\n        else if (/authentication\\/password\\/rules\\/standard$/.test(url)) {\n            url = 'api/surepayroll/authentication/password/rules/standard';\n        }\n        // let through, \"as is\", all other requests that begin with the spApiRoot\n    }\n    return url;\n}\n/**\n * Tweak the URL to make the parsing work for ECommerce requests whose root paths\n * don't end in \"api\" because that's what *this particular* in-memory web api demands.\n * @param url Original request URL\n */\nfunction tweakUrl(url) {\n    var apiRoot = environment.apiRoot;\n    // HACK: If URL matches the environment ECommerce API root but that root doesn't end in 'api', insert '/api'.\n    if (!apiRoot.endsWith('api') && url.startsWith(apiRoot)) {\n        var ix = apiRoot.length;\n        url = url.substring(0, ix) + '/api' + url.substring(ix);\n    }\n    return url;\n}\n","/**\r\n * Customer-oriented InMemoryDbService with method overrides.\r\n */\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { ajax } from 'rxjs/ajax';\r\n\r\nimport {\r\n  ParsedRequestUrl,\r\n  RequestInfo,\r\n  RequestInfoUtilities,\r\n  ResponseOptions,\r\n  STATUS\r\n} from 'angular-in-memory-web-api';\r\n\r\nimport { createOkResponse$, createBadRequestResponse$, guardCompanyChange} from './in-mem-service-utils';\r\nimport { Db } from './db';\r\nimport { environment } from '@environment';\r\nimport { genExtraAccounts } from './in-mem-gen-extra-accounts';\r\n\r\nimport { InMemAccountService } from './in-mem-account.service';\r\nimport { InMemAddressValidatorService } from '@app/mock-services/in-mem-address-validator.service';\r\nimport { InMemAdminService } from './in-mem-admin.service';\r\nimport { InMemCompanyPackageService } from './in-mem-company-package.service';\r\nimport { InMemDeductionService } from './in-mem-deduction.service';\r\nimport { InMemEarningService } from './in-mem-earning.service';\r\nimport { InMemEinService } from './in-mem-ein.service';\r\nimport { InMemEsignService } from './in-mem-esign.service';\r\nimport { InMemEnrollmentService } from './in-mem-enrollment.service';\r\nimport { InMemIdentityService } from './in-mem-identity.service';\r\nimport { InMemSaveEntitiesService } from './in-mem-save-entities.service';\r\nimport { InMemSurepayrollService } from './in-mem-surepayroll.service';\r\nimport { InMemTaxService } from '@app/mock-services/in-mem-tax.service';\r\nimport { InMemTaxRateService } from '@app/mock-services/in-mem-tax-rate.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InMemoryDataService {\r\n  /** True if in-mem service is intercepting (default); all requests pass thru when false. */\r\n  active = true;\r\n  db: Db;\r\n  maxId = 0;\r\n  resourceNameMap: { [name: string]: string };\r\n\r\n  constructor(\r\n    private inMemAccountService: InMemAccountService,\r\n    private inMemAddressValidatorService: InMemAddressValidatorService,\r\n    private inMemAdminService: InMemAdminService,\r\n    private inMemCompanyPackageService: InMemCompanyPackageService,\r\n    private inMemDeductionService: InMemDeductionService,\r\n    private inMemEarningService: InMemEarningService,\r\n    private inMemEinService: InMemEinService,\r\n    private inMemEsignService: InMemEsignService,\r\n    private inMemEnrollmentService: InMemEnrollmentService,\r\n    private inMemIdentityService: InMemIdentityService,\r\n    private inMemSaveEntitiesService: InMemSaveEntitiesService,\r\n    private inMemTaxService: InMemTaxService,\r\n    private inMemTaxRateService: InMemTaxRateService,\r\n    private inMemSurepayrollService: InMemSurepayrollService,\r\n  ) {\r\n    this.createInitialEmptyDb();\r\n    this.createResourceNameMap();\r\n  }\r\n\r\n  /** Create the in-memory database on start or by command */\r\n  createDb(reqInfo?: RequestInfo): Observable<Db> {\r\n\r\n    if (reqInfo) {\r\n      const body = reqInfo.utils.getJsonBody(reqInfo.req) || {};\r\n      this.active = !!body.active;\r\n      if (body.clear === true) {\r\n        this.createInitialEmptyDb();\r\n        return of(this.db);\r\n      }\r\n    }\r\n\r\n    return this.createInitialMockDb();\r\n  }\r\n\r\n  /**\r\n   * Create/reset the in-mem database from mock data in JSON file,\r\n   * extended with calculated accounts and account etags.\r\n   * @returns Terminating observable. You must subscribe to execute but no need to unsubscribe.\r\n   */\r\n  createInitialMockDb(): Observable<Db> {\r\n    this.createInitialEmptyDb();\r\n    return getDbData().pipe(\r\n      map(rawDb => genExtraAccounts({...this.db, ...rawDb} as Db)),\r\n      tap(db => {\r\n        // Ensure every initial mock company has an etag version.\r\n        db.Company.forEach(c => {\r\n          if (db.CompanyVersion[c.id] == null) {\r\n            db.CompanyVersion[c.id] = 0;\r\n          }\r\n        });\r\n        this.db = db;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Create initial database with empty collections\r\n   */\r\n  createInitialEmptyDb() {\r\n    this.db = new Db();\r\n  }\r\n\r\n  createResourceNameMap() {\r\n    const db = new Db();\r\n    this.resourceNameMap = Object.keys(db).reduce(\r\n      (acc, collectionName) => {\r\n        const key = collectionName.toLowerCase();\r\n        acc[key] = collectionName;\r\n\r\n        // Generate plural resource name mapping\r\n        if (key.endsWith('y')) {\r\n          acc[key.substr(0, key.length - 1) + 'ies'] = collectionName;\r\n        } else if (key.endsWith('x')) {\r\n          acc[key + 'es'] = collectionName;\r\n        } else {\r\n          acc[key + 's'] = collectionName;\r\n        }\r\n\r\n        return acc;\r\n      },\r\n      {} as { [name: string]: string }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Simulate generating new Id on the server\r\n   */\r\n  genId(collection: { id: number }[], collectionName: string) {\r\n    throw new Error(`Cannot generate server-side id for '${collectionName}'.`);\r\n  }\r\n\r\n  /**\r\n   * Remap a known singular collection name (\"customer\")\r\n   * to the plural collection name (\"customers\"); else return the name\r\n   * @param name - collection name from the parsed URL\r\n   */\r\n  mapCollectionName(name: string): string {\r\n    return this.resourceNameMap[(name || '').toLowerCase()] || name;\r\n  }\r\n\r\n  /**\r\n   * Override `parseRequestUrl`\r\n   * Manipulates the request URL or the parsed result.\r\n   * If in-mem is inactive, clear collectionName so that service passes request thru.\r\n   * If in-mem is active, after parsing with the default parser,\r\n   * @param url from request URL\r\n   * @param utils for manipulating parsed URL\r\n   */\r\n  parseRequestUrl(url: string, utils: RequestInfoUtilities): ParsedRequestUrl {\r\n    url = mapSpApiUrl(url);\r\n    url = tweakUrl(url);\r\n    const parsed = utils.parseRequestUrl(url);\r\n    parsed.collectionName = this.active ? this.mapCollectionName(parsed.collectionName) : undefined;\r\n    if (environment.mockSpApiOnly) {\r\n      // When only mocking SP APIs, disable mocking based on collection name.\r\n      // Now requests go first to method interceptors (GET/PUT) and,\r\n      // if not intercepted, pass through to HTTP, without matching an in-mem DB collection.\r\n      parsed.collectionName = '';\r\n    }\r\n    return parsed;\r\n  }\r\n\r\n  // #region GET cases\r\n  /**\r\n   * Special-cases for GET methods\r\n   */\r\n  get(req: RequestInfo) {\r\n    if (environment.mockSpApiOnly) {\r\n      return this.getMockSpApiOnly(req);\r\n    } else {\r\n      return this.getMocked(req);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Special-cases for GET methods to all ECommerce & SP APIs\r\n   */\r\n  getMocked(req: RequestInfo) {\r\n    switch (req.collectionName) {\r\n      case 'account':\r\n        return this.inMemAccountService.getRequest(req, this.db) || createBadRequestResponse$(req);\r\n\r\n      case 'admin':\r\n        return this.inMemAdminService.getRequest(req, this.db) || createBadRequestResponse$(req);\r\n\r\n      case 'companypackage':\r\n        return (\r\n          this.inMemCompanyPackageService.getCompanyPackage(req, this.db) ||\r\n          createBadRequestResponse$(req)\r\n        );\r\n      case 'earnings':\r\n        return (\r\n          this.inMemEarningService.getRequest(req, this.db) ||\r\n          createBadRequestResponse$(req)\r\n        );\r\n      case 'deductions':\r\n        return (\r\n          this.inMemDeductionService.getRequest(req, this.db) ||\r\n          createBadRequestResponse$(req)\r\n        );\r\n      case 'documentpackage':\r\n        return (\r\n          this.inMemCompanyPackageService.getDocumentPackage(req, this.db) ||\r\n          createBadRequestResponse$(req)\r\n        );\r\n      case 'ein':\r\n        return this.inMemEinService.getRequest(req, this.db) || createBadRequestResponse$(req);\r\n\r\n      case 'signing':\r\n        if (req.url && req.url.includes('/signing/esigngeturl/')) {\r\n          return this.inMemEsignService.getEsignUrl(req, this.db) || createBadRequestResponse$(req);\r\n        }\r\n        break;\r\n\r\n      case 'surepayroll':\r\n        return (\r\n          this.inMemSurepayrollService.getRequest(req, this.db) || createBadRequestResponse$(req)\r\n        );\r\n\r\n      case 'taxes':\r\n        if (req.url && req.url.includes('/taxapi/taxes')) {\r\n          return this.inMemTaxRateService.getRequest(req, this.db) || createBadRequestResponse$(req);\r\n        }\r\n        break;\r\n\r\n      // Disallow attempt to get more than one of these collection items\r\n      case 'User':\r\n      case 'Company':\r\n        if (!req.id) {\r\n          return errorOnGetCollection(req);\r\n        }\r\n        break;\r\n    }\r\n    // Let all other GET requests through\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Special-cases for GET methods to SP APIs\r\n   */\r\n  getMockSpApiOnly(req: RequestInfo) {\r\n    if (req.url.indexOf(environment.spApiRoot) > -1) {\r\n      return (\r\n        this.inMemSurepayrollService.getRequest(req, this.db) || createBadRequestResponse$(req)\r\n      );\r\n    }\r\n    // Let all other GET requests through\r\n    return null;\r\n  }\r\n  // #endregion GET cases\r\n\r\n  // #region POST cases\r\n  /**\r\n   * Special-cases for POST methods\r\n   */\r\n  post(req: RequestInfo) {\r\n    if (environment.mockSpApiOnly) {\r\n      return this.postMockSpApiOnly(req);\r\n    } else {\r\n      return this.postMocked(req);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Special-cases for POST methods to ECommerce & SP APIs\r\n   */\r\n  postMocked(req: RequestInfo) {\r\n    switch (req.collectionName) {\r\n      case 'account':\r\n        return this.inMemAccountService.postRequest(req, this.db) || createBadRequestResponse$(req);\r\n\r\n      case 'Company':\r\n        if (req.url.endsWith('company/event')) {\r\n          return createOkResponse$(req);\r\n        } else {\r\n          return guardCompanyChange(req, this.db);\r\n        }\r\n\r\n      case 'enrollment':\r\n        return (\r\n          this.inMemEnrollmentService.postRequest(req, this.db) || createBadRequestResponse$(req)\r\n        );\r\n\r\n      case 'Envelope':\r\n        if (req.url && req.url.includes('/envelope/complete')) {\r\n          return this.inMemEsignService.postMarkEnvelopesCompleted(req, this.db);\r\n        }\r\n        break; // let the other envelope requests through\r\n\r\n      // TODO: POST URLs beginning `/deductions/` should be `/save/deductions/company` and `/save/deductions/employee`\r\n      // and InMemDeductionService should be folded under inMemSaveEntitiesService.\r\n      // Then delete this case.\r\n      case 'earnings': // fall through to InMemSaveEntitiesService which handles them.\r\n      case 'deductions':         // fall through to InMemSaveEntitiesService which handles them.\r\n      case 'CompanyEarning':         // fall through to InMemSaveEntitiesService which handles them.\r\n      case 'company-deduction':  // fall through to InMemSaveEntitiesService which handles them.\r\n      case 'employee-deduction': // fall through to InMemSaveEntitiesService which handles them.\r\n      case 'save':\r\n        return (\r\n          this.inMemSaveEntitiesService.postRequest(req, this.db) || createBadRequestResponse$(req)\r\n        );\r\n\r\n      case 'surepayroll':\r\n        return (\r\n          this.inMemSurepayrollService.postRequest(req, this.db) || createBadRequestResponse$(req)\r\n        );\r\n\r\n      case 'signing':\r\n        if (req.url && req.url.includes('/signing/esignsend/')) {\r\n          return (\r\n            this.inMemEsignService.postEsignSend(req, this.db) || createBadRequestResponse$(req)\r\n          );\r\n        }\r\n        break;\r\n\r\n      case 'taxes':\r\n        if (req.url && req.url.includes('/taxapi/taxes')) {\r\n          return this.inMemTaxService.getRequest(req, this.db) || createBadRequestResponse$(req);\r\n        }\r\n        break;\r\n\r\n      case 'Address': // NOT the Address entity collection but rather the taxapi/address\r\n        if (req.url && req.url.includes('/taxapi/address')) {\r\n          return (\r\n            this.inMemAddressValidatorService.getRequest(req, this.db) ||\r\n            createBadRequestResponse$(req)\r\n          );\r\n        }\r\n        break;\r\n    }\r\n\r\n    if (req.url.startsWith(environment.oidcAuthRealm)) {\r\n      return this.inMemIdentityService.postRequest(req, this.db) || createBadRequestResponse$(req);\r\n    }\r\n\r\n    // Let all other POST requests through\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Special-cases for POST methods to SP Only\r\n   */\r\n  postMockSpApiOnly(req: RequestInfo) {\r\n    if (req.url.indexOf(environment.spApiRoot) > -1) {\r\n      return (\r\n        this.inMemSurepayrollService.postRequest(req, this.db) || createBadRequestResponse$(req)\r\n      );\r\n    }\r\n    // Let all other POST requests through\r\n    return null;\r\n  }\r\n  // #endregion POST cases\r\n\r\n  // #region PUT cases\r\n  /**\r\n   * Special-cases for PUT methods\r\n   */\r\n  put(req: RequestInfo): Observable<any> {\r\n    if (environment.mockSpApiOnly) {\r\n      return null; //\r\n    }\r\n    switch (req.collectionName) {\r\n      case 'Company':\r\n        return guardCompanyChange(req, this.db);\r\n    }\r\n  }\r\n  // #endregion PUT cases\r\n}\r\n\r\n// #region Helper Fns\r\nfunction errorOnGetCollection(req: RequestInfo) {\r\n  const errOptions: ResponseOptions = {\r\n    url: req.url,\r\n    status: STATUS.FORBIDDEN,\r\n    statusText: 'Forbidden',\r\n    body: `Requests for multiple '${req.collectionName}' records are forbidden`\r\n  };\r\n  return req.utils.createResponse$(() => errOptions);\r\n}\r\n\r\n/**\r\n * Get development data from json file\r\n */\r\nfunction getDbData() {\r\n  // TODO: enable alternative sources\r\n  const url = '/assets/in-memory-data.json';\r\n  return ajax.get(url).pipe(\r\n    map(data => {\r\n      // console.log('in-memory-data', data.response);\r\n      return data.response;\r\n    }),\r\n    catchError(error => {\r\n      console.error('in-memory-data', error);\r\n      return of({});\r\n    })\r\n  );\r\n}\r\n\r\n/**\r\n * Map certain SurePayroll API request URLs to in-memory mock services.\r\n * @param url Original request URL\r\n */\r\nfunction mapSpApiUrl(url: string) {\r\n  let matched: RegExpMatchArray;\r\n  if (url.startsWith(environment.spApiRoot)) {\r\n    if (/\\/company\\/new$/.test(url)) {\r\n      url = `api/surepayroll/company/new`;\r\n    } else if ((matched = url.match(/authentication\\/username\\/valid\\/(.*)$/))) {\r\n      url = 'api/surepayroll/' + matched[0];\r\n    } else if (/authentication\\/password\\/rules\\/standard$/.test(url)) {\r\n      url = 'api/surepayroll/authentication/password/rules/standard';\r\n    }\r\n    // let through, \"as is\", all other requests that begin with the spApiRoot\r\n  }\r\n  return url;\r\n}\r\n\r\n/**\r\n * Tweak the URL to make the parsing work for ECommerce requests whose root paths\r\n * don't end in \"api\" because that's what *this particular* in-memory web api demands.\r\n * @param url Original request URL\r\n */\r\nfunction tweakUrl(url: string) {\r\n  const apiRoot = environment.apiRoot;\r\n  // HACK: If URL matches the environment ECommerce API root but that root doesn't end in 'api', insert '/api'.\r\n  if (!apiRoot.endsWith('api') && url.startsWith(apiRoot)) {\r\n    const ix = apiRoot.length;\r\n    url = url.substring(0, ix) + '/api' + url.substring(ix);\r\n  }\r\n  return url;\r\n}\r\n\r\n// #endregion Helper fns\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../shared/validation/validate-property.directive\";\nimport * as i5 from \"../shared/input/input-text.component.ngfactory\";\nimport * as i6 from \"../shared/input/input-text.component\";\nimport * as i7 from \"../shared/input/input-mask-catalog\";\nimport * as i8 from \"../shared/model.component\";\nimport * as i9 from \"./mock-signin.component\";\nimport * as i10 from \"../core/services/auth-services/auth.service\";\nimport * as i11 from \"../mock-services/in-memory-data.service\";\nimport * as i12 from \"../core/services/auth-services/oidc-manager-factory\";\nimport * as i13 from \"../store/session/session.service\";\nvar styles_MockSigninComponent = [];\nvar RenderType_MockSigninComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_MockSigninComponent, data: { \"animation\": [{ type: 7, name: \"ngIfAnim\", definitions: [{ type: 0, name: \"*\", styles: { type: 6, styles: { height: \"*\", opacity: 1, \"overflow-y\": \"hidden\" }, offset: null }, options: undefined }, { type: 0, name: \"void\", styles: { type: 6, styles: { height: \"0\", opacity: 0, \"overflow-y\": \"hidden\" }, offset: null }, options: undefined }, { type: 1, expr: \":leave\", animation: { type: 4, styles: null, timings: \"250ms ease-out\" }, options: null }, { type: 1, expr: \":enter\", animation: { type: 4, styles: null, timings: \"250ms ease-in\" }, options: null }], options: {} }] } });\nexport { RenderType_MockSigninComponent as RenderType_MockSigninComponent };\nfunction View_MockSigninComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [\" \", \" \"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.success; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_MockSigninComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"error\"]], null, null, null, null, null)), (_l()(), i0.ɵted(2, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.context.ngIf; _ck(_v, 2, 0, currVal_0); }); }\nfunction View_MockSigninComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 48, \"div\", [], [[24, \"@ngIfAnim\", 0]], null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Test Sign-Ins\"])), (_l()(), i0.ɵeld(3, 0, null, null, 45, \"table\", [[\"class\", \"table interactive-table\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 44, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 8, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Role\"])), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"User\"])), (_l()(), i0.ɵeld(10, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Username\"])), (_l()(), i0.ɵeld(12, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Password\"])), (_l()(), i0.ɵeld(14, 0, null, null, 8, \"tr\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.doSignin(\"sally.fixit@surepayroll.com\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(15, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Administrator\"])), (_l()(), i0.ɵeld(17, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Sally Fixit\"])), (_l()(), i0.ɵeld(19, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"sally.fixit@surepayroll.com\"])), (_l()(), i0.ɵeld(21, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"higherGround2\"])), (_l()(), i0.ɵeld(23, 0, null, null, 8, \"tr\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.doSignin(\"davidasher\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(24, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Approver\"])), (_l()(), i0.ɵeld(26, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"David Asher\"])), (_l()(), i0.ɵeld(28, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"davidasher\"])), (_l()(), i0.ɵeld(30, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"cottonFields1\"])), (_l()(), i0.ɵeld(32, 0, null, null, 8, \"tr\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.doSignin(\"zombie088\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(33, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Approver\"])), (_l()(), i0.ɵeld(35, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Mark Moose\"])), (_l()(), i0.ɵeld(37, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"zombie088\"])), (_l()(), i0.ɵeld(39, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Password1\"])), (_l()(), i0.ɵeld(41, 0, null, null, 7, \"tr\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.doSignin(\"imalost\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(42, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Approver\"])), (_l()(), i0.ɵeld(44, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Doesn't exist\"])), (_l()(), i0.ɵeld(46, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"imalost\"])), (_l()(), i0.ɵeld(48, 0, null, null, 0, \"td\", [], null, null, null, null, null))], null, function (_ck, _v) { var currVal_0 = undefined; _ck(_v, 0, 0, currVal_0); }); }\nexport function View_MockSigninComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { form: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 51, \"div\", [[\"class\", \"d-flex flex-column\"], [\"id\", \"mock-signin-component\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 3, \"header\", [[\"class\", \"header-bold\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"div\", [[\"class\", \"card-center\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"h1\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Mock Sign In\"])), (_l()(), i0.ɵeld(6, 0, null, null, 46, \"div\", [[\"class\", \"standard card-center\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"This is a demo!\"])), (_l()(), i0.ɵeld(9, 0, null, null, 5, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(10, 0, null, null, 4, \"a\", [[\"class\", \"sign-in\"], [\"routerLink\", \"/signup\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 11).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(11, 671744, null, 0, i1.RouterLinkWithHref, [i1.Router, i1.ActivatedRoute, i2.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i0.ɵeld(12, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Sign up\"])), (_l()(), i0.ɵted(-1, null, [\" if you don't already have an account\"])), (_l()(), i0.ɵeld(15, 0, null, null, 29, \"form\", [[\"novalidate\", \"\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngSubmit\"], [null, \"submit\"], [null, \"reset\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"submit\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 17).onSubmit($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"reset\" === en)) {\n        var pd_1 = (i0.ɵnov(_v, 17).onReset() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"ngSubmit\" === en)) {\n        var pd_2 = (_co.signin() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i0.ɵdid(16, 16384, null, 0, i3.ɵangular_packages_forms_forms_bg, [], null, null), i0.ɵdid(17, 4210688, [[1, 4], [\"form\", 4]], 0, i3.NgForm, [[8, null], [8, null]], null, { ngSubmit: \"ngSubmit\" }), i0.ɵprd(2048, null, i3.ControlContainer, null, [i3.NgForm]), i0.ɵdid(19, 16384, null, 0, i3.NgControlStatusGroup, [[4, i3.ControlContainer]], null, null), i0.ɵdid(20, 737280, null, 0, i4.FormDirective, [i1.ActivatedRoute], null, null), (_l()(), i0.ɵeld(21, 0, null, null, 21, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(22, 0, null, null, 7, \"sp-input\", [[\"id\", \"Username\"], [\"label\", \"Username\"], [\"name\", \"username\"], [\"placeholder\", \"username\"], [\"required\", \"\"]], [[1, \"required\", 0], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngModelChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"ngModelChange\" === en)) {\n        var pd_0 = ((_co.vm.username = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i5.View_InputTextComponent_0, i5.RenderType_InputTextComponent)), i0.ɵdid(23, 16384, null, 0, i3.RequiredValidator, [], { required: [0, \"required\"] }, null), i0.ɵprd(1024, null, i3.NG_VALIDATORS, function (p0_0) { return [p0_0]; }, [i3.RequiredValidator]), i0.ɵdid(25, 4440064, null, 0, i6.InputTextComponent, [i7.InputMaskCatalog, i0.ChangeDetectorRef, [2, i8.ModelComponent]], { label: [0, \"label\"], name: [1, \"name\"], placeholder: [2, \"placeholder\"] }, null), i0.ɵprd(1024, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i6.InputTextComponent]), i0.ɵdid(27, 671744, null, 0, i3.NgModel, [[2, i3.ControlContainer], [6, i3.NG_VALIDATORS], [8, null], [6, i3.NG_VALUE_ACCESSOR]], { name: [0, \"name\"], model: [1, \"model\"] }, { update: \"ngModelChange\" }), i0.ɵprd(2048, null, i3.NgControl, null, [i3.NgModel]), i0.ɵdid(29, 16384, null, 0, i3.NgControlStatus, [[4, i3.NgControl]], null, null), (_l()(), i0.ɵeld(30, 0, null, null, 7, \"sp-input\", [[\"id\", \"Password\"], [\"label\", \"Password\"], [\"name\", \"password\"], [\"placeholder\", \"password\"], [\"required\", \"\"], [\"type\", \"password\"]], [[1, \"required\", 0], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngModelChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"ngModelChange\" === en)) {\n        var pd_0 = ((_co.vm.password = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i5.View_InputTextComponent_0, i5.RenderType_InputTextComponent)), i0.ɵdid(31, 16384, null, 0, i3.RequiredValidator, [], { required: [0, \"required\"] }, null), i0.ɵprd(1024, null, i3.NG_VALIDATORS, function (p0_0) { return [p0_0]; }, [i3.RequiredValidator]), i0.ɵdid(33, 4440064, null, 0, i6.InputTextComponent, [i7.InputMaskCatalog, i0.ChangeDetectorRef, [2, i8.ModelComponent]], { label: [0, \"label\"], name: [1, \"name\"], placeholder: [2, \"placeholder\"], type: [3, \"type\"] }, null), i0.ɵprd(1024, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i6.InputTextComponent]), i0.ɵdid(35, 671744, null, 0, i3.NgModel, [[2, i3.ControlContainer], [6, i3.NG_VALIDATORS], [8, null], [6, i3.NG_VALUE_ACCESSOR]], { name: [0, \"name\"], model: [1, \"model\"] }, { update: \"ngModelChange\" }), i0.ɵprd(2048, null, i3.NgControl, null, [i3.NgModel]), i0.ɵdid(37, 16384, null, 0, i3.NgControlStatus, [[4, i3.NgControl]], null, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MockSigninComponent_1)), i0.ɵdid(39, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 2, null, View_MockSigninComponent_2)), i0.ɵdid(41, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i0.ɵpid(131072, i2.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵeld(43, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-cta btn-cta btn-large\"], [\"type\", \"submit\"], [\"value\", \"login\"]], [[8, \"disabled\", 0]], null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Sign In\"])), (_l()(), i0.ɵeld(45, 0, null, null, 0, \"hr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(46, 0, null, null, 6, \"div\", [[\"class\", \"mt-4\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(47, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-cta btn-cta btn-large\"]], [[8, \"disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.resetMockedData() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"Reset Mocked Data\"])), (_l()(), i0.ɵeld(49, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary btn-large mt-2 mb-3\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.toggleShowTestAccounts() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"Show/Hide Test Accounts\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MockSigninComponent_3)), i0.ɵdid(52, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = \"/signup\"; _ck(_v, 11, 0, currVal_2); _ck(_v, 20, 0); var currVal_18 = \"\"; _ck(_v, 23, 0, currVal_18); var currVal_19 = \"Username\"; var currVal_20 = \"username\"; var currVal_21 = \"username\"; _ck(_v, 25, 0, currVal_19, currVal_20, currVal_21); var currVal_22 = \"username\"; var currVal_23 = _co.vm.username; _ck(_v, 27, 0, currVal_22, currVal_23); var currVal_32 = \"\"; _ck(_v, 31, 0, currVal_32); var currVal_33 = \"Password\"; var currVal_34 = \"password\"; var currVal_35 = \"password\"; var currVal_36 = \"password\"; _ck(_v, 33, 0, currVal_33, currVal_34, currVal_35, currVal_36); var currVal_37 = \"password\"; var currVal_38 = _co.vm.password; _ck(_v, 35, 0, currVal_37, currVal_38); var currVal_39 = !!_co.success; _ck(_v, 39, 0, currVal_39); var currVal_40 = i0.ɵunv(_v, 41, 0, i0.ɵnov(_v, 42).transform(_co.errors$)); _ck(_v, 41, 0, currVal_40); var currVal_43 = _co.showTestAccounts; _ck(_v, 52, 0, currVal_43); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵnov(_v, 11).target; var currVal_1 = i0.ɵnov(_v, 11).href; _ck(_v, 10, 0, currVal_0, currVal_1); var currVal_3 = i0.ɵnov(_v, 19).ngClassUntouched; var currVal_4 = i0.ɵnov(_v, 19).ngClassTouched; var currVal_5 = i0.ɵnov(_v, 19).ngClassPristine; var currVal_6 = i0.ɵnov(_v, 19).ngClassDirty; var currVal_7 = i0.ɵnov(_v, 19).ngClassValid; var currVal_8 = i0.ɵnov(_v, 19).ngClassInvalid; var currVal_9 = i0.ɵnov(_v, 19).ngClassPending; _ck(_v, 15, 0, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9); var currVal_10 = (i0.ɵnov(_v, 23).required ? \"\" : null); var currVal_11 = i0.ɵnov(_v, 29).ngClassUntouched; var currVal_12 = i0.ɵnov(_v, 29).ngClassTouched; var currVal_13 = i0.ɵnov(_v, 29).ngClassPristine; var currVal_14 = i0.ɵnov(_v, 29).ngClassDirty; var currVal_15 = i0.ɵnov(_v, 29).ngClassValid; var currVal_16 = i0.ɵnov(_v, 29).ngClassInvalid; var currVal_17 = i0.ɵnov(_v, 29).ngClassPending; _ck(_v, 22, 0, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17); var currVal_24 = (i0.ɵnov(_v, 31).required ? \"\" : null); var currVal_25 = i0.ɵnov(_v, 37).ngClassUntouched; var currVal_26 = i0.ɵnov(_v, 37).ngClassTouched; var currVal_27 = i0.ɵnov(_v, 37).ngClassPristine; var currVal_28 = i0.ɵnov(_v, 37).ngClassDirty; var currVal_29 = i0.ɵnov(_v, 37).ngClassValid; var currVal_30 = i0.ɵnov(_v, 37).ngClassInvalid; var currVal_31 = i0.ɵnov(_v, 37).ngClassPending; _ck(_v, 30, 0, currVal_24, currVal_25, currVal_26, currVal_27, currVal_28, currVal_29, currVal_30, currVal_31); var currVal_41 = (i0.ɵnov(_v, 17).pristine || i0.ɵnov(_v, 17).invalid); _ck(_v, 43, 0, currVal_41); var currVal_42 = _co.disableClearMockDb; _ck(_v, 47, 0, currVal_42); }); }\nexport function View_MockSigninComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-mock-signin\", [], null, null, null, View_MockSigninComponent_0, RenderType_MockSigninComponent)), i0.ɵdid(1, 114688, null, 0, i9.MockSigninComponent, [i10.AuthService, i11.InMemoryDataService, i12.OidcManagerFactory, i13.SessionService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MockSigninComponentNgFactory = i0.ɵccf(\"sp-mock-signin\", i9.MockSigninComponent, View_MockSigninComponent_Host_0, {}, {}, []);\nexport { MockSigninComponentNgFactory as MockSigninComponentNgFactory };\n","<div class=\"d-flex flex-column\" id=\"mock-signin-component\">\r\n  <header class=\"header-bold\">\r\n    <div class=\"card-center\">\r\n      <h1>Mock Sign In</h1>\r\n    </div>\r\n  </header>\r\n\r\n  <div class=\"standard card-center\">\r\n    <h2>This is a demo!</h2>\r\n    <p>\r\n      <a class=\"sign-in\" routerLink=\"/signup\">\r\n        <b>Sign up</b> if you don't already have an account</a>\r\n    </p>\r\n    <form #form=\"ngForm\" (ngSubmit)=\"signin()\">\r\n      <div>\r\n        <!-- Uodate Model -->\r\n        <sp-input id=\"Username\" name=\"username\" [(ngModel)]=\"vm.username\" label=\"Username\" placeholder=\"username\" required></sp-input>\r\n        <sp-input id=\"Password\" type=\"password\" name=\"password\" [(ngModel)]=\"vm.password\" label=\"Password\" placeholder=\"password\"\r\n          required></sp-input>\r\n\r\n        <div *ngIf=\"!!success\">\r\n          {{success}}\r\n        </div>\r\n        <div *ngIf=\"errors$ | async as error\">\r\n          <span class=\"error\">{{error}}</span>\r\n        </div>\r\n\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-cta btn-cta btn-large\" [disabled]=\"form.pristine || form.invalid\" value=\"login\">Sign In</button>\r\n    </form>\r\n    <hr>\r\n\r\n    <div class=\"mt-4\">\r\n      <button (click)=\"resetMockedData()\" [disabled]=\"disableClearMockDb\" class=\"btn btn-cta btn-cta btn-large\">Reset Mocked Data</button>\r\n      <button (click)=\"toggleShowTestAccounts()\" class=\"btn btn-primary btn-large mt-2 mb-3\">Show/Hide Test Accounts</button>\r\n      <div *ngIf=\"showTestAccounts\" [@ngIfAnim]>\r\n        <h3>Test Sign-Ins</h3>\r\n        <table class=\"table interactive-table\">\r\n          <tr>\r\n            <th>Role</th>\r\n            <th>User</th>\r\n            <th>Username</th>\r\n            <th>Password</th>\r\n          </tr>\r\n          <tr (click)=\"doSignin('sally.fixit@surepayroll.com')\">\r\n            <td>Administrator</td>\r\n            <td>Sally Fixit</td>\r\n            <td>sally.fixit@surepayroll.com</td>\r\n            <td>higherGround2</td>\r\n          </tr>\r\n          <tr (click)=\"doSignin('davidasher')\">\r\n            <td>Approver</td>\r\n            <td>David Asher</td>\r\n            <td>davidasher</td>\r\n            <td>cottonFields1</td>\r\n          </tr>\r\n          <tr (click)=\"doSignin('zombie088')\">\r\n            <td>Approver</td>\r\n            <td>Mark Moose</td>\r\n            <td>zombie088</td>\r\n            <td>Password1</td>\r\n          </tr>\r\n          <tr (click)=\"doSignin('imalost')\">\r\n            <td>Approver</td>\r\n            <td>Doesn't exist</td>\r\n            <td>imalost</td>\r\n            <td></td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sp-terms',\r\n  templateUrl: './terms.component.html'\r\n})\r\nexport class TermsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./terms.component\";\nvar styles_TermsComponent = [];\nvar RenderType_TermsComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_TermsComponent, data: {} });\nexport { RenderType_TermsComponent as RenderType_TermsComponent };\nexport function View_TermsComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 72, \"div\", [[\"class\", \"d-flex flex-column\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 5, \"header\", [[\"class\", \"header-bold\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 4, \"div\", [[\"class\", \"standard\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"h1\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Terms of Service\"])), (_l()(), i0.ɵeld(5, 0, null, null, 1, \"p\", [[\"class\", \"text-muted\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Effective Date: October 2018\"])), (_l()(), i0.ɵeld(7, 0, null, null, 58, \"div\", [[\"class\", \"standard\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Please read these terms and conditions carefully. The software and/or applications (collectively \\u201CMaterial\\u201D) made available to you by SurePayroll, Inc. and/or its parent company, Paychex, Inc. or any affiliates (\\u201CSurePayroll\\u201D) through this website (\\u201CSite\\u201D) are subject to the following terms and conditions (\\u201CTerms\\u201D), and by accessing or using the Material and/or the Site, including using the services and/or Material enabled via the Site, you agree to be bound by the Terms. If you agree to these Terms on behalf of a company or other legal entity, you represent and warrant that you have the authority to bind that company or other legal entity to these Terms and, in such event, \\\"you\\\" or \\\"your\\\" will also refer and apply to that company or other legal entity.\"])), (_l()(), i0.ɵeld(10, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"You acknowledge that you are responsible for the security of all usernames, passwords, or other login credentials used to access the Material and/or the Site. Unauthorized use of the Site, including but not limited to, unauthorized entry into SurePayroll\\u2019s systems or misuse of passwords or other login credentials is strictly prohibited. You acknowledge that SurePayroll may disclose and transfer any information that you provide through the Site to (i) any SurePayroll employees, agents, or vendors as needed to provide the services; (ii) to any other person or entity with your consent; or (iii) if we have a right or duty to disclose or are permitted or compelled to so disclose such information by law. Use of the Site may be monitored, tracked and recorded.\"])), (_l()(), i0.ɵeld(12, 0, null, null, 8, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(13, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Intellectual Property\"])), (_l()(), i0.ɵeld(15, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"SurePayroll owns all rights, title, and interest, including, but not limited to, copyright, patent, trade secret, and all other intellectual property rights, in the Material and/or the Site. The Material is protected by copyright and other intellectual property laws and by international treaties. If you are ever held or deemed to be the owner of any copyright rights in the Material or any changes, modifications, or corrections to the Material, you hereby irrevocably assign to SurePayroll all such rights, title, and interest. You are granted a limited, non-transferable, non-exclusive right to access and use the Material and/or the Site.\"])), (_l()(), i0.ɵeld(17, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"You acknowledge that the Material contains valuable trade secrets and confidential information owned by SurePayroll or third parties. You agree that you will not, directly or indirectly: (i) sell, lease, assign, sublicense, or otherwise transfer; (ii) duplicate, reproduce, or copy; (iii) disclose, divulge, or otherwise make available to any third party; (iv) use, except as authorized by SurePayroll in these Terms or another agreement; or (v) decompile, disassemble, or otherwise analyze for reverse engineering purposes the Material. You agree to notify SurePayroll immediately of any unauthorized use or disclosure of any trade secrets or confidential information and to cooperate in remedying such unauthorized use or disclosure.\"])), (_l()(), i0.ɵeld(19, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"The trademarks, service marks, trade names, trade dress, logos, designs, and/or any sounds associated with the Site are owned by SurePayroll or third parties who have authorized their use. SurePayroll does not grant any license or other authorization to any user of such copyrightable material, or any other intellectual property, by including them on the Site.\"])), (_l()(), i0.ɵeld(21, 0, null, null, 4, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(22, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Web Content And Materials\"])), (_l()(), i0.ɵeld(24, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"You acknowledge that SurePayroll is not rendering legal, tax, accounting, or investment advice in connection with the services or your use of the Material and/or the Site. SurePayroll is not responsible for your compliance with, nor will SurePayroll provide legal or other financial advice, with respect to applicable federal, state, or local laws, regulations, or ordinances (collectively \\u201CLaws\\u201D). You agree to be responsible for your compliance with all applicable Laws.\"])), (_l()(), i0.ɵeld(26, 0, null, null, 4, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(27, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Electronic Communications\"])), (_l()(), i0.ɵeld(29, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"When you visit the Site or send e-mails to SurePayroll, you are communicating with SurePayroll electronically. You consent to receive communications from SurePayroll electronically, andSurePayroll may communicate with you by e-mail or by posting notices on the Site. You agree that all agreements, notices, disclosures, and other communications that SurePayroll provides to you electronically satisfy any legal requirement that such communications be in writing.\"])), (_l()(), i0.ɵeld(31, 0, null, null, 4, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(32, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Disclaimer of Warranties\"])), (_l()(), i0.ɵeld(34, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"YOU EXPRESSLY UNDERSTAND AND AGREE THAT TO THE EXTENT PERMITTED BY APPLICABLE LAW, YOUR USE OF THIS SITE (INCLUDING ALL INFORMATION AND MATERIALS CONTAINED ON THE SITE) IS AT YOUR SOLE RISK, AND IS PROVIDED \\u201CAS IS\\u201D AND \\u201CAS AVAILABLE,\\u201D WITH ALL FAULTS. SUREPAYROLL EXPRESSLY DISCLAIMS ALL WARRANTIES, REPRESENTATIONS, AND CONDITIONS OF ANY KIND WITH REGARD TO THE SITE, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR ANY PARTICULAR PURPOSE, TITLE, NONINFRINGEMENT OF THIRD PARTY RIGHTS, FREEDOM FROM VIRUSES OR OTHER HARMFUL CODE, OR ARISING FROM A COURSE OF DEALING, USUAGE OR TRADE PRACTICE. SUREPAYROLL WILL NOT BE LIABLE FOR ANY DELAY, DIFFICULTY IN USE, INACCURACY OF INFORMATION, COMPUTER VIRUSES, MALICIOUS CODE, OR OTHER DEFECTS IN THE SITE, OR FOR THE INCOMPATIBILITY BETWEEN THE SITE AND FILES AND THE USER\\u2019S BROWSER OR OTHER SITE ACCESSING PROGRAM.\"])), (_l()(), i0.ɵeld(36, 0, null, null, 4, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(37, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Limitation Of Liability\"])), (_l()(), i0.ɵeld(39, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"SUREPAYROLL WILL, UNDER NO CIRCUMSTANCES, BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR OTHER INDIRECT DAMAGES, INCLUDING, WITHOUT LIMITATION, ANY DAMAGES RESULTING FROM LOSS OF USE, DATA, OR PROFITS ARISING OUT OF ANY USE OF OR INABILITY TO USE THE SITE OR ANY PORTION THEREOF, HOWEVER CAUSED, ON ANY THEORY OF LIABILITY (INCLUDING CONTRACT, TORT, OR WARRANTY), OR AS A RESULT OF SUREPAYROLL\\u2019S EXERCISE OF ITS RIGHTS UNDER THESE TERMS, EVEN IF SUREPAYROLL HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. This limitation of liability is in addition to and does not limit any additional liability limitations set forth in any separate SurePayroll services agreement.\"])), (_l()(), i0.ɵeld(41, 0, null, null, 4, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(42, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Indemnification\"])), (_l()(), i0.ɵeld(44, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"You agree to indemnify, defend, and hold SurePayroll, its parents, subsidiaries, affiliates, officers, employees, agents, partners and licensors harmless from any and all claims, losses, costs, liabilities, and expenses (including reasonable attorneys\\u2019 fees) relating to or arising out of: (a) your misuse of, or inability to use, the Material and/or the Site; (b) your violation of any of the Terms; (c) your violation of any rights of another party, including any other user of the Material and/or the Site; or (d) your violation of any applicable Laws.\"])), (_l()(), i0.ɵeld(46, 0, null, null, 4, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(47, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Potential Disruption of Service\"])), (_l()(), i0.ɵeld(49, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Access to the Site may from time to time be unavailable, delayed, limited, or slowed due to, among other things, hardware and/or software failures, errors, or bugs; acts of God, war, or terrorism; or acts of any governmental body. SurePayroll shall not be liable for any delay or failure to perform resulting from these or other causes outside of its control.\"])), (_l()(), i0.ɵeld(51, 0, null, null, 4, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(52, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Enforceability and Governing Law\"])), (_l()(), i0.ɵeld(54, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Your use of the Site shall be governed by the laws of the State of Illinois without regard to, or application of, its conflicts of laws, rules, and principles, except for the arbitration agreement contained herein which shall be governed exclusively by the Federal Arbitration Act, 9 U.S.C. section 1 et seq (the \\u201CFAA\\u201D). Except as provided herein, any dispute arising out of, or in connection with, the Terms will be determined only by binding arbitration in Chicago, Illinois, in accordance with the commercial rules of the American Arbitration Association. Arbitrable disputes include, without limitation, disputes about the formation, interpretation, applicability, or enforceability of these Terms. Any dispute arising under the Terms will be brought within two (2) years of when the claim accrued. The arbitrator will not be authorized to award exemplary or punitive damages, or any damages excluded in the Limitation of Liability provision. The parties will not be permitted to bring, or participate in, and the arbitrator will not have any authority or jurisdiction to hear or decide, any claims brought as any type of purported class action, coordinated action, aggregated action, or similar action or proceeding. Each party must only bring claims against each other in their individual capacity. In the event any of the terms or provisions of these Terms shall be held to be unenforceable, the remaining terms and provisions shall be unimpaired and the enforceable term or provision shall be replaced by such enforceable term or provision as comes closest to the intention underlying the unenforceable term or provision.\"])), (_l()(), i0.ɵeld(56, 0, null, null, 4, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(57, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Changes to the Site; Termination\"])), (_l()(), i0.ɵeld(59, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"SurePayroll reserves the right to change or discontinue, temporarily or permanently, the Site, and those products and services available at the site, including but not limited to revising and/or deleting features or other information without prior notice. You agree that SurePayroll will not be liable to you for any damages resulting from its modification, suspension, discontinuance, or deletion of the Site, any elements comprising the Site, or any products or services available on the Site. We reserve the right, at our sole discretion, immediately and without notice to you, to suspend or terminate your account and/or your ability to access the Site and the products and services available on the Site, for any reason.\"])), (_l()(), i0.ɵeld(61, 0, null, null, 4, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(62, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"About these Terms and Conditions\"])), (_l()(), i0.ɵeld(64, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"These Terms were posted on the date set forth above. SurePayroll reserves the right to change, alter, or modify these Terms at its own discretion. Any revised Terms will be posted on the Site and will be effective immediately, unless otherwise stated.\"])), (_l()(), i0.ɵeld(66, 0, null, null, 6, \"footer\", [[\"class\", \"d-flex justify-content-between align-items-center\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(67, 0, null, null, 1, \"span\", [[\"class\", \"font-weight-bold\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\u00A9 SurePayroll, Inc. 2018\"])), (_l()(), i0.ɵeld(69, 0, null, null, 3, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Have questions? We're happy to help! \"])), (_l()(), i0.ɵeld(71, 0, null, null, 1, \"a\", [[\"href\", \"tel:18009148088\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"1-800-914-8088\"]))], null, null); }\nexport function View_TermsComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-terms\", [], null, null, null, View_TermsComponent_0, RenderType_TermsComponent)), i0.ɵdid(1, 114688, null, 0, i1.TermsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar TermsComponentNgFactory = i0.ɵccf(\"sp-terms\", i1.TermsComponent, View_TermsComponent_Host_0, {}, {}, []);\nexport { TermsComponentNgFactory as TermsComponentNgFactory };\n","<div class=\"d-flex flex-column\">\r\n  <header class=\"header-bold\">\r\n    <div class=\"standard\">\r\n      <h1>Terms of Service</h1>\r\n      <p class=\"text-muted\">Effective Date: October 2018</p>\r\n    </div>\r\n  </header>\r\n\r\n  <div class=\"standard\">\r\n\r\n    <p>Please read these terms and conditions carefully. The software and/or applications (collectively “Material”) made available to you by SurePayroll, Inc. and/or its parent company, Paychex, Inc. or any affiliates (“SurePayroll”) through this website (“Site”) are subject to the following terms and conditions (“Terms”), and by accessing or using the Material and/or the Site, including using the services and/or Material enabled via the Site, you agree to be bound by the Terms. If you agree to these Terms on behalf of a company or other legal entity, you represent and warrant that you have the authority to bind that company or other legal entity to these Terms and, in such event, \"you\" or \"your\" will also refer and apply to that company or other legal entity.</p>\r\n\r\n    <p>You acknowledge that you are responsible for the security of all usernames, passwords, or other login credentials used to access the Material and/or the Site. Unauthorized use of the Site, including but not limited to, unauthorized entry into SurePayroll’s systems or misuse of passwords or other login credentials is strictly prohibited. You acknowledge that SurePayroll may disclose and transfer any information that you provide through the Site to (i) any SurePayroll employees, agents, or vendors as needed to provide the services; (ii) to any other person or entity with your consent; or (iii) if we have a right or duty to disclose or are permitted or compelled to so disclose such information by law. Use of the Site may be monitored, tracked and recorded.</p>\r\n\r\n    <div>\r\n      <h2>Intellectual Property</h2>\r\n      <p>SurePayroll owns all rights, title, and interest, including, but not limited to, copyright, patent, trade secret, and all other intellectual property rights, in the Material and/or the Site. The Material is protected by copyright and other intellectual property laws and by international treaties. If you are ever held or deemed to be the owner of any copyright rights in the Material or any changes, modifications, or corrections to the Material, you hereby irrevocably assign to SurePayroll all such rights, title, and interest. You are granted a limited, non-transferable, non-exclusive right to access and use the Material and/or the Site.</p>\r\n\r\n      <p>You acknowledge that the Material contains valuable trade secrets and confidential information owned by SurePayroll or third parties. You agree that you will not, directly or indirectly: (i) sell, lease, assign, sublicense, or otherwise transfer; (ii) duplicate, reproduce, or copy; (iii) disclose, divulge, or otherwise make available to any third party; (iv) use, except as authorized by SurePayroll in these Terms or another agreement; or (v) decompile, disassemble, or otherwise analyze for reverse engineering purposes the Material. You agree to notify SurePayroll immediately of any unauthorized use or disclosure of any trade secrets or confidential information and to cooperate in remedying such unauthorized use or disclosure.</p>\r\n\r\n      <p>The trademarks, service marks, trade names, trade dress, logos, designs, and/or any sounds associated with the Site are owned by SurePayroll or third parties who have authorized their use. SurePayroll does not grant any license or other authorization to any user of such copyrightable material, or any other intellectual property, by including them on the Site.</p>\r\n    </div>\r\n\r\n    <div>\r\n      <h2>Web Content And Materials</h2>\r\n      <p>You acknowledge that SurePayroll is not rendering legal, tax, accounting, or investment advice in connection with the services or your use of the Material and/or the Site. SurePayroll is not responsible for your compliance with, nor will SurePayroll provide legal or other financial advice, with respect to applicable federal, state, or local laws, regulations, or ordinances (collectively “Laws”). You agree to be responsible for your compliance with all applicable Laws.</p>\r\n    </div>\r\n\r\n    <div>\r\n      <h2>Electronic Communications</h2>\r\n      <p>When you visit the Site or send e-mails to SurePayroll, you are communicating with SurePayroll electronically. You consent to receive communications from SurePayroll electronically, andSurePayroll may communicate with you by e-mail or by posting notices on the Site. You agree that all agreements, notices, disclosures, and other communications that SurePayroll provides to you electronically satisfy any legal requirement that such communications be in writing.</p>\r\n    </div>\r\n\r\n    <div>\r\n      <h2>Disclaimer of Warranties</h2>\r\n      <p>YOU EXPRESSLY UNDERSTAND AND AGREE THAT TO THE EXTENT PERMITTED BY APPLICABLE LAW, YOUR USE OF THIS SITE (INCLUDING ALL INFORMATION AND MATERIALS CONTAINED ON THE SITE) IS AT YOUR SOLE RISK, AND IS PROVIDED “AS IS” AND “AS AVAILABLE,” WITH ALL FAULTS. SUREPAYROLL EXPRESSLY DISCLAIMS ALL WARRANTIES, REPRESENTATIONS, AND CONDITIONS OF ANY KIND WITH REGARD TO THE SITE, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR ANY PARTICULAR PURPOSE, TITLE, NONINFRINGEMENT OF THIRD PARTY RIGHTS, FREEDOM FROM VIRUSES OR OTHER HARMFUL CODE, OR ARISING FROM A COURSE OF DEALING, USUAGE OR TRADE PRACTICE. SUREPAYROLL WILL NOT BE LIABLE FOR ANY DELAY, DIFFICULTY IN USE, INACCURACY OF INFORMATION, COMPUTER VIRUSES, MALICIOUS CODE, OR OTHER DEFECTS IN THE SITE, OR FOR THE INCOMPATIBILITY BETWEEN THE SITE AND FILES AND THE USER’S BROWSER OR OTHER SITE ACCESSING PROGRAM.</p>\r\n    </div>\r\n\r\n    <div>\r\n      <h2>Limitation Of Liability</h2>\r\n      <p>SUREPAYROLL WILL, UNDER NO CIRCUMSTANCES, BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR OTHER INDIRECT DAMAGES, INCLUDING, WITHOUT LIMITATION, ANY DAMAGES RESULTING FROM LOSS OF USE, DATA, OR PROFITS ARISING OUT OF ANY USE OF OR INABILITY TO USE THE SITE OR ANY PORTION THEREOF, HOWEVER CAUSED, ON ANY THEORY OF LIABILITY (INCLUDING CONTRACT, TORT, OR WARRANTY), OR AS A RESULT OF SUREPAYROLL’S EXERCISE OF ITS RIGHTS UNDER THESE TERMS, EVEN IF SUREPAYROLL HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. This limitation of liability is in addition to and does not limit any additional liability limitations set forth in any separate SurePayroll services agreement.</p>\r\n    </div>\r\n\r\n    <div>\r\n      <h2>Indemnification</h2>\r\n      <p>You agree to indemnify, defend, and hold SurePayroll, its parents, subsidiaries, affiliates, officers, employees, agents, partners and licensors harmless from any and all claims, losses, costs, liabilities, and expenses (including reasonable attorneys’ fees) relating to or arising out of: (a) your misuse of, or inability to use, the Material and/or the Site; (b) your violation of any of the Terms; (c) your violation of any rights of another party, including any other user of the Material and/or the Site; or (d) your violation of any applicable Laws.</p>\r\n    </div>\r\n\r\n    <div>\r\n      <h2>Potential Disruption of Service</h2>\r\n      <p>Access to the Site may from time to time be unavailable, delayed, limited, or slowed due to, among other things, hardware and/or software failures, errors, or bugs; acts of God, war, or terrorism; or acts of any governmental body.  SurePayroll shall not be liable for any delay or failure to perform resulting from these or other causes outside of its control.</p>\r\n    </div>\r\n\r\n    <div>\r\n      <h2>Enforceability and Governing Law</h2>\r\n      <p>Your use of the Site shall be governed by the laws of the State of Illinois without regard to, or application of, its conflicts of laws, rules, and principles, except for the arbitration agreement contained herein which shall be governed exclusively by the Federal Arbitration Act, 9 U.S.C. section 1 et seq (the “FAA”). Except as provided herein, any dispute arising out of, or in connection with, the Terms will be determined only by binding arbitration in Chicago, Illinois, in accordance with the commercial rules of the American Arbitration Association.  Arbitrable disputes include, without limitation, disputes about the formation, interpretation, applicability, or enforceability of these Terms. Any dispute arising under the Terms will be brought within two (2) years of when the claim accrued. The arbitrator will not be authorized to award exemplary or punitive damages, or any damages excluded in the Limitation of Liability provision. The parties will not be permitted to bring, or participate in, and the arbitrator will not have any authority or jurisdiction to hear or decide, any claims brought as any type of purported class action, coordinated action, aggregated action, or similar action or proceeding. Each party must only bring claims against each other in their individual capacity. In the event any of the terms or provisions of these Terms shall be held to be unenforceable, the remaining terms and provisions shall be unimpaired and the enforceable term or provision shall be replaced by such enforceable term or provision as comes closest to the intention underlying the unenforceable term or provision.</p>\r\n    </div>\r\n\r\n    <div>\r\n      <h2>Changes to the Site; Termination</h2>\r\n      <p>SurePayroll reserves the right to change or discontinue, temporarily or permanently, the Site, and those products and services available at the site, including but not limited to revising and/or deleting features or other information without prior notice. You agree that SurePayroll will not be liable to you for any damages resulting from its modification, suspension, discontinuance, or deletion of the Site, any elements comprising the Site, or any products or services available on the Site. We reserve the right, at our sole discretion, immediately and without notice to you, to suspend or terminate your account and/or your ability to access the Site and the products and services available on the Site, for any reason.</p>\r\n    </div>\r\n\r\n    <div>\r\n      <h2>About these Terms and Conditions</h2>\r\n      <p>These Terms were posted on the date set forth above. SurePayroll reserves the right to change, alter, or modify these Terms at its own discretion.  Any revised Terms will be posted on the Site and will be effective immediately, unless otherwise stated.</p>\r\n    </div>\r\n  </div>\r\n\r\n  <footer class=\"d-flex justify-content-between align-items-center\">\r\n    <span class=\"font-weight-bold\">&copy; SurePayroll, Inc. 2018</span>\r\n    <span>Have questions? We're happy to help!\r\n      <a href=\"tel:18009148088\">1-800-914-8088</a>\r\n    </span>\r\n  </footer>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\n@Component({\r\n  selector: 'sp-failed',\r\n  templateUrl: './failed.component.html'\r\n})\r\nexport class FailedComponent implements OnInit {\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    // Never let it fail on application launch\r\n    // or user won't have a chance to recover with a browser refresh.\r\n    if ((this.router as any).navigationId === 1) {\r\n      this.router.navigate([WellKnownRoutes.Dashboard], { replaceUrl: true });\r\n    }\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/contact-cust-support.component.ngfactory\";\nimport * as i2 from \"../shared/contact-cust-support.component\";\nimport * as i3 from \"./failed.component\";\nimport * as i4 from \"@angular/router\";\nvar styles_FailedComponent = [];\nvar RenderType_FailedComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_FailedComponent, data: {} });\nexport { RenderType_FailedComponent as RenderType_FailedComponent };\nexport function View_FailedComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 14, \"div\", [[\"class\", \"d-flex flex-column\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 3, \"header\", [[\"class\", \"header-bold\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 2, \"div\", [[\"class\", \"standard\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"h1\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"We're Sorry\"])), (_l()(), i0.ɵeld(5, 0, null, null, 9, \"div\", [[\"class\", \"standard\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" There was an unrecoverable error and the application is no longer working. It's our fault. You did nothing wrong. \"])), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" You might check that your network connection is good and try refreshing the browser. The application might recover on its own. \"])), (_l()(), i0.ɵeld(10, 0, null, null, 4, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" If that doesn't work, \"])), (_l()(), i0.ɵeld(12, 0, null, null, 1, \"sp-contact-support\", [[\"linkText\", \"contact\"]], null, null, null, i1.View_ContactCustomerSupportComponent_0, i1.RenderType_ContactCustomerSupportComponent)), i0.ɵdid(13, 49152, null, 0, i2.ContactCustomerSupportComponent, [], { linkText: [0, \"linkText\"] }, null), (_l()(), i0.ɵted(-1, null, [\" . \"]))], function (_ck, _v) { var currVal_0 = \"contact\"; _ck(_v, 13, 0, currVal_0); }, null); }\nexport function View_FailedComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-failed\", [], null, null, null, View_FailedComponent_0, RenderType_FailedComponent)), i0.ɵdid(1, 114688, null, 0, i3.FailedComponent, [i4.Router], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar FailedComponentNgFactory = i0.ɵccf(\"sp-failed\", i3.FailedComponent, View_FailedComponent_Host_0, {}, {}, []);\nexport { FailedComponentNgFactory as FailedComponentNgFactory };\n","<div class=\"d-flex flex-column\">\r\n  <header class=\"header-bold\">\r\n    <div class=\"standard\">\r\n      <h1>We're Sorry</h1>\r\n    </div>\r\n  </header>\r\n\r\n  <div class=\"standard\">\r\n    <p>\r\n      There was an unrecoverable error and the application is no longer working. It's our fault. You did nothing wrong.\r\n    </p>\r\n    <p>\r\n      You might check that your network connection is good and try refreshing the browser. The application might recover on its\r\n      own.\r\n    </p>\r\n    <p>\r\n      If that doesn't work, <sp-contact-support linkText=\"contact\"></sp-contact-support> .\r\n    </p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { concatMap } from 'rxjs/operators';\r\n\r\nimport {SessionService} from '@session';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\n@Component({\r\n  selector: 'sp-concurrency-failure',\r\n  templateUrl: './concurrency-failure.component.html'\r\n})\r\nexport class ConcurrencyFailureComponent implements OnInit {\r\n  constructor(private router: Router, private sessionService: SessionService) { }\r\n\r\n  ngOnInit() {\r\n    // Never let it fail on application launch\r\n    // or user won't have a chance to recover with a browser refresh.\r\n    if ((this.router as any).navigationId === 1) {\r\n      this.router.navigate([WellKnownRoutes.Dashboard], { replaceUrl: true });\r\n    }\r\n  }\r\n\r\n  refresh() {\r\n    return this.sessionService.reloadCurrentCompanyPackage().subscribe(\r\n      _ => window.history && window.history.length > 1 ? window.history.back()\r\n        : this.router.navigate([WellKnownRoutes.Dashboard], { replaceUrl: true }),\r\n      error => this.router.navigate([WellKnownRoutes.Failed]),\r\n    );\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/contact-cust-support.component.ngfactory\";\nimport * as i2 from \"../shared/contact-cust-support.component\";\nimport * as i3 from \"./concurrency-failure.component\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../store/session/session.service\";\nvar styles_ConcurrencyFailureComponent = [];\nvar RenderType_ConcurrencyFailureComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_ConcurrencyFailureComponent, data: {} });\nexport { RenderType_ConcurrencyFailureComponent as RenderType_ConcurrencyFailureComponent };\nexport function View_ConcurrencyFailureComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 26, \"div\", [[\"class\", \"d-flex flex-column\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 5, \"header\", [[\"class\", \"header-bold\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 4, \"div\", [[\"class\", \"standard\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"h1\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Conflicting Saves\"])), (_l()(), i0.ɵeld(5, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" Another user saved changes to this account while you were viewing or editing it. \"])), (_l()(), i0.ɵeld(7, 0, null, null, 19, \"div\", [[\"class\", \"standard\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" Only one person can view and edit an account at the same time. \"])), (_l()(), i0.ɵeld(10, 0, null, null, 2, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"i\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"If you had pending, unsaved changes, they are lost and you'll have to re-enter them. We regret this inconvenience. \"])), (_l()(), i0.ɵeld(13, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" 1.\\u00A0 Close other views \"])), (_l()(), i0.ɵeld(15, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" Close all other views of the application. Tell other users to sign-out as well. \"])), (_l()(), i0.ɵeld(17, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"2.\\u00A0 Refresh\"])), (_l()(), i0.ɵted(-1, null, [\" Press the \\\"Refresh\\\" button to reset the application with the latest account data. After refresh, you can continue working here. \"])), (_l()(), i0.ɵeld(20, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary btn-cta btn-large mb-3\"], [\"title\", \"Refresh the account data and go back to the previous page\"], [\"type\", \"button\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.refresh() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"Refresh\"])), (_l()(), i0.ɵeld(22, 0, null, null, 4, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" If refresh doesn't work and you keep returning to this page, \"])), (_l()(), i0.ɵeld(24, 0, null, null, 1, \"sp-contact-support\", [[\"linkText\", \"contact\"]], null, null, null, i1.View_ContactCustomerSupportComponent_0, i1.RenderType_ContactCustomerSupportComponent)), i0.ɵdid(25, 49152, null, 0, i2.ContactCustomerSupportComponent, [], { linkText: [0, \"linkText\"] }, null), (_l()(), i0.ɵted(-1, null, [\" . \"]))], function (_ck, _v) { var currVal_0 = \"contact\"; _ck(_v, 25, 0, currVal_0); }, null); }\nexport function View_ConcurrencyFailureComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-concurrency-failure\", [], null, null, null, View_ConcurrencyFailureComponent_0, RenderType_ConcurrencyFailureComponent)), i0.ɵdid(1, 114688, null, 0, i3.ConcurrencyFailureComponent, [i4.Router, i5.SessionService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar ConcurrencyFailureComponentNgFactory = i0.ɵccf(\"sp-concurrency-failure\", i3.ConcurrencyFailureComponent, View_ConcurrencyFailureComponent_Host_0, {}, {}, []);\nexport { ConcurrencyFailureComponentNgFactory as ConcurrencyFailureComponentNgFactory };\n","<div class=\"d-flex flex-column\">\r\n  <header class=\"header-bold\">\r\n    <div class=\"standard\">\r\n      <h1>Conflicting Saves</h1>\r\n      <p>\r\n        Another user saved changes to this account while you were viewing or editing it.\r\n      </p>\r\n    </div>\r\n  </header>\r\n  <div class=\"standard\">\r\n\r\n    <p>\r\n      Only one person can view and edit an account at the same time.\r\n    </p>\r\n    <p>\r\n      <i>If you had pending, unsaved changes, they are lost and you'll have to re-enter them.\r\n      We regret this inconvenience.\r\n      </i>\r\n    </p>\r\n\r\n    <h3>\r\n      1.&nbsp; Close other views\r\n    </h3>\r\n    <p>\r\n      Close all other views of the application. Tell other users to sign-out as well.\r\n    </p>\r\n\r\n    <h3>2.&nbsp; Refresh</h3>\r\n      Press the \"Refresh\" button to reset the application with the latest account data.\r\n      After refresh, you can continue working here.\r\n\r\n    <button (click)=\"refresh()\" title=\"Refresh the account data and go back to the previous page\"\r\n      type=\"button\" class=\"btn btn-primary btn-cta btn-large mb-3\">Refresh</button>\r\n\r\n    <p>\r\n      If refresh doesn't work and you keep returning to this page,\r\n      <sp-contact-support linkText=\"contact\"></sp-contact-support> .\r\n    </p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\nimport { environment } from '@environment';\r\n\r\n@Component({\r\n  selector: 'sp-auth-failed',\r\n  template: `\r\n    <div class=\"card-center standard\">\r\n      <p class=\"h3 mt-3 mb-3\">We're sorry</p>\r\n      <p>\r\n        <b>We've experienced an unexpected error that signed you out of the application.</b>\r\n      </p>\r\n      <div *ngIf=\"authService.errors$ | async as error\">\r\n        The error message was:\r\n        <p><i>{{error}}</i><p>\r\n      </div>\r\n      <p>\r\n        You may be able to try again by signing back in.\r\n        If that doesn't work, <sp-contact-support></sp-contact-support>.\r\n      </p>\r\n      <button type=\"text\" (click)=\"signout()\" class=\"btn btn-primary btn-cta\">Continue</button>\r\n    </div>\r\n  `\r\n})\r\nexport class AuthFailedComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.clearReroute('AuthFailedComponent');\r\n  }\r\n\r\n  signout() {\r\n    // Actually signs-out first\r\n    this.authService.logEvent('AuthFailedComponent called AuthService.signout() after user pressed button');\r\n    this.authService.signout();\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../shared/contact-cust-support.component.ngfactory\";\nimport * as i3 from \"../shared/contact-cust-support.component\";\nimport * as i4 from \"./auth-failed.component\";\nimport * as i5 from \"../core/services/auth-services/auth.service\";\nvar styles_AuthFailedComponent = [];\nvar RenderType_AuthFailedComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AuthFailedComponent, data: {} });\nexport { RenderType_AuthFailedComponent as RenderType_AuthFailedComponent };\nfunction View_AuthFailedComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" The error message was: \"])), (_l()(), i0.ɵeld(2, 0, null, null, 2, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"i\", [], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"])), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"p\", [], null, null, null, null, null))], null, function (_ck, _v) { var currVal_0 = _v.context.ngIf; _ck(_v, 4, 0, currVal_0); }); }\nexport function View_AuthFailedComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 15, \"div\", [[\"class\", \"card-center standard\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"p\", [[\"class\", \"h3 mt-3 mb-3\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"We're sorry\"])), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"b\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"We've experienced an unexpected error that signed you out of the application.\"])), (_l()(), i0.ɵand(16777216, null, null, 2, null, View_AuthFailedComponent_1)), i0.ɵdid(7, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i0.ɵpid(131072, i1.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵeld(9, 0, null, null, 4, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" You may be able to try again by signing back in. If that doesn't work, \"])), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"sp-contact-support\", [], null, null, null, i2.View_ContactCustomerSupportComponent_0, i2.RenderType_ContactCustomerSupportComponent)), i0.ɵdid(12, 49152, null, 0, i3.ContactCustomerSupportComponent, [], null, null), (_l()(), i0.ɵted(-1, null, [\". \"])), (_l()(), i0.ɵeld(14, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary btn-cta\"], [\"type\", \"text\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.signout() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"Continue\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 7, 0, i0.ɵnov(_v, 8).transform(_co.authService.errors$)); _ck(_v, 7, 0, currVal_0); }, null); }\nexport function View_AuthFailedComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-auth-failed\", [], null, null, null, View_AuthFailedComponent_0, RenderType_AuthFailedComponent)), i0.ɵdid(1, 114688, null, 0, i4.AuthFailedComponent, [i5.AuthService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar AuthFailedComponentNgFactory = i0.ɵccf(\"sp-auth-failed\", i4.AuthFailedComponent, View_AuthFailedComponent_Host_0, {}, {}, []);\nexport { AuthFailedComponentNgFactory as AuthFailedComponentNgFactory };\n","\n    <div class=\"card-center standard\">\n      <p class=\"h3 mt-3 mb-3\">We're sorry</p>\n      <p>\n        <b>We've experienced an unexpected error that signed you out of the application.</b>\n      </p>\n      <div *ngIf=\"authService.errors$ | async as error\">\n        The error message was:\n        <p><i>{{error}}</i><p>\n      </div>\n      <p>\n        You may be able to try again by signing back in.\n        If that doesn't work, <sp-contact-support></sp-contact-support>.\n      </p>\n      <button type=\"text\" (click)=\"signout()\" class=\"btn btn-primary btn-cta\">Continue</button>\n    </div>\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\n\r\n@Component({\r\n  selector: 'sp-oidc-callback',\r\n  template: ''\r\n})\r\nexport class OidcCallbackComponent implements OnInit {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    // this.authService.signinRedirectCallback().subscribe();\r\n    // this.authService.logEvent('OidcCallbackComponent.ngOnInit called AuthService.signinRedirectCallback()');\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./oidc-callback.component\";\nimport * as i2 from \"../core/services/auth-services/auth.service\";\nvar styles_OidcCallbackComponent = [];\nvar RenderType_OidcCallbackComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_OidcCallbackComponent, data: {} });\nexport { RenderType_OidcCallbackComponent as RenderType_OidcCallbackComponent };\nexport function View_OidcCallbackComponent_0(_l) { return i0.ɵvid(0, [], null, null); }\nexport function View_OidcCallbackComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-oidc-callback\", [], null, null, null, View_OidcCallbackComponent_0, RenderType_OidcCallbackComponent)), i0.ɵdid(1, 114688, null, 0, i1.OidcCallbackComponent, [i2.AuthService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar OidcCallbackComponentNgFactory = i0.ɵccf(\"sp-oidc-callback\", i1.OidcCallbackComponent, View_OidcCallbackComponent_Host_0, {}, {}, []);\nexport { OidcCallbackComponentNgFactory as OidcCallbackComponentNgFactory };\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\nimport { environment } from '@environment';\r\n\r\n@Component({\r\n  selector: 'sp-signed-out',\r\n  template: `\r\n    <div class=\"card-center standard\">\r\n      <p class=\"h3 mt-3 mb-3\">Successfully Signed Out</p>\r\n      <button type=\"text\" (click)=\"signin()\" class=\"btn btn-primary btn-cta\">Return to Sign In</button>\r\n    </div>\r\n  `\r\n})\r\nexport class SignedOutComponent implements OnInit {\r\n  constructor(public authService: AuthService) {  }\r\n\r\n  ngOnInit() {\r\n    this.authService.clearReroute('SignedOutComponent');\r\n  }\r\n\r\n  signin() {\r\n    this.authService.logEvent('SignedOutComponent called AuthService.signin() after user pressed button');\r\n    this.authService.signin();\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./signed-out.component\";\nimport * as i2 from \"../core/services/auth-services/auth.service\";\nvar styles_SignedOutComponent = [];\nvar RenderType_SignedOutComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_SignedOutComponent, data: {} });\nexport { RenderType_SignedOutComponent as RenderType_SignedOutComponent };\nexport function View_SignedOutComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"div\", [[\"class\", \"card-center standard\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"p\", [[\"class\", \"h3 mt-3 mb-3\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Successfully Signed Out\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary btn-cta\"], [\"type\", \"text\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.signin() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"Return to Sign In\"]))], null, null); }\nexport function View_SignedOutComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-signed-out\", [], null, null, null, View_SignedOutComponent_0, RenderType_SignedOutComponent)), i0.ɵdid(1, 114688, null, 0, i1.SignedOutComponent, [i2.AuthService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar SignedOutComponentNgFactory = i0.ɵccf(\"sp-signed-out\", i1.SignedOutComponent, View_SignedOutComponent_Host_0, {}, {}, []);\nexport { SignedOutComponentNgFactory as SignedOutComponentNgFactory };\n","\n    <div class=\"card-center standard\">\n      <p class=\"h3 mt-3 mb-3\">Successfully Signed Out</p>\n      <button type=\"text\" (click)=\"signin()\" class=\"btn btn-primary btn-cta\">Return to Sign In</button>\n    </div>\n  ","import { Component } from '@angular/core';\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\n\r\n@Component({\r\n  selector: 'sp-app-unauthorized',\r\n  template: `\r\n  <div class=\"standard static-nav d-flex flex-column unauthorized\" style=\"max-width: 30rem;\">\r\n    <h1>Unauthorized</h1>\r\n    <p>I'm sorry but you have tried to access data or perform an action that you are not authorized for.</p>\r\n     <p>Signout out and sign back in with another account.</p>\r\n    <button  class=\"btn btn-primary btn-cta\" (click)=\"authService.signout()\">Sign out</button>\r\n  </div>\r\n  `\r\n})\r\nexport class UnauthorizedComponent {\r\n  constructor(public authService: AuthService) {\r\n    this.authService.logEvent('UnauthorizedComponent created');\r\n\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./unauthorized.component\";\nimport * as i2 from \"../core/services/auth-services/auth.service\";\nvar styles_UnauthorizedComponent = [];\nvar RenderType_UnauthorizedComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_UnauthorizedComponent, data: {} });\nexport { RenderType_UnauthorizedComponent as RenderType_UnauthorizedComponent };\nexport function View_UnauthorizedComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 8, \"div\", [[\"class\", \"standard static-nav d-flex flex-column unauthorized\"], [\"style\", \"max-width: 30rem;\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"h1\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Unauthorized\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"I'm sorry but you have tried to access data or perform an action that you are not authorized for.\"])), (_l()(), i0.ɵeld(5, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Signout out and sign back in with another account.\"])), (_l()(), i0.ɵeld(7, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary btn-cta\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.authService.signout() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"Sign out\"]))], null, null); }\nexport function View_UnauthorizedComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-app-unauthorized\", [], null, null, null, View_UnauthorizedComponent_0, RenderType_UnauthorizedComponent)), i0.ɵdid(1, 49152, null, 0, i1.UnauthorizedComponent, [i2.AuthService], null, null)], null, null); }\nvar UnauthorizedComponentNgFactory = i0.ɵccf(\"sp-app-unauthorized\", i1.UnauthorizedComponent, View_UnauthorizedComponent_Host_0, {}, {}, []);\nexport { UnauthorizedComponentNgFactory as UnauthorizedComponentNgFactory };\n","\n  <div class=\"standard static-nav d-flex flex-column unauthorized\" style=\"max-width: 30rem;\">\n    <h1>Unauthorized</h1>\n    <p>I'm sorry but you have tried to access data or perform an action that you are not authorized for.</p>\n     <p>Signout out and sign back in with another account.</p>\n    <button  class=\"btn btn-primary btn-cta\" (click)=\"authService.signout()\">Sign out</button>\n  </div>\n  ","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { OnInit, OnDestroy } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { DashboardViewService } from '@app/dashboard/dashboard-view.service';\nimport { companyKind } from '@model';\nimport { CompanyService } from '@entity';\nimport { SubSink, WellKnownRoutes } from '@core';\nvar COMPANY_STEP_INDEX = 1;\nvar StepperComponent = /** @class */ (function () {\n    function StepperComponent(dashboardViewService, companyService, router) {\n        this.dashboardViewService = dashboardViewService;\n        this.companyService = companyService;\n        this.router = router;\n        this.readOnly = false;\n        this.showStepper = false;\n        this.subs = new SubSink();\n        this.sourceSteps = [\n            {\n                name: 'About You',\n                link: WellKnownRoutes.AboutYou,\n                active: false,\n                id: 'aboutYou',\n                cssClass: {}\n            },\n            {\n                name: 'Company Info',\n                link: WellKnownRoutes.CompanyInfo,\n                active: false,\n                id: 'companyInfo',\n                cssClass: {}\n            },\n            {\n                name: 'Employees',\n                link: WellKnownRoutes.Employees,\n                active: false,\n                id: 'employees',\n                cssClass: {}\n            },\n            {\n                name: 'Taxes',\n                link: WellKnownRoutes.CompanyTaxInfo,\n                active: false,\n                id: 'companyTax',\n                cssClass: {}\n            },\n            {\n                name: 'Bank Account',\n                link: WellKnownRoutes.BankAccount,\n                active: false,\n                id: 'bankInfo',\n                cssClass: {}\n            }\n        ];\n        this.steps = this.sourceSteps.map(function (s) { return (__assign({}, s)); });\n    }\n    StepperComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.subs.sink = this.dashboardViewService.vm$.subscribe(function (vm) {\n            _this.steps.forEach(function (step) {\n                step.cssClass = vm[step.id + 'Class'];\n            });\n        });\n        this.subs.sink = this.router.events\n            .pipe(filter(function (event) { return event instanceof NavigationEnd; }))\n            .subscribe(function (event) {\n            _this.showStepper = false;\n            var url = event.url;\n            _this.steps.forEach(function (step) {\n                if (-1 < url.indexOf(step.link)) {\n                    _this.showStepper = true;\n                    step.active = true;\n                }\n                else {\n                    step.active = false;\n                }\n            });\n        });\n        this.companyService.currentCompany$.subscribe(function (company) {\n            _this.company = company;\n            _this.steps[COMPANY_STEP_INDEX].name = companyKind(company) + \" Info\";\n        });\n    };\n    StepperComponent.prototype.ngOnDestroy = function () {\n        this.subs.unsubscribe();\n    };\n    return StepperComponent;\n}());\nexport { StepperComponent };\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\n\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { DashboardViewService } from '@app/dashboard/dashboard-view.service';\r\nimport { Company, companyKind } from '@model';\r\nimport { CompanyService } from '@entity';\r\nimport { SubSink, WellKnownRoutes } from '@core';\r\n\r\nconst COMPANY_STEP_INDEX = 1;\r\n\r\n@Component({\r\n  selector: 'sp-stepper',\r\n  templateUrl: './stepper.component.html'\r\n})\r\nexport class StepperComponent implements OnInit, OnDestroy {\r\n  @Input() readOnly = false;\r\n  company: Company;\r\n  showStepper = false;\r\n  private subs = new SubSink();\r\n\r\n  private sourceSteps = [\r\n    {\r\n      name: 'About You',\r\n      link: WellKnownRoutes.AboutYou,\r\n      active: false,\r\n      id: 'aboutYou',\r\n      cssClass: {}\r\n    },\r\n    {\r\n      name: 'Company Info',\r\n      link: WellKnownRoutes.CompanyInfo,\r\n      active: false,\r\n      id: 'companyInfo',\r\n      cssClass: {}\r\n    },\r\n    {\r\n      name: 'Employees',\r\n      link: WellKnownRoutes.Employees,\r\n      active: false,\r\n      id: 'employees',\r\n      cssClass: {}\r\n    },\r\n    {\r\n      name: 'Taxes',\r\n      link: WellKnownRoutes.CompanyTaxInfo,\r\n      active: false,\r\n      id: 'companyTax',\r\n      cssClass: {}\r\n    },\r\n    {\r\n      name: 'Bank Account',\r\n      link: WellKnownRoutes.BankAccount,\r\n      active: false,\r\n      id: 'bankInfo',\r\n      cssClass: {}\r\n    }\r\n  ];\r\n\r\n  steps = this.sourceSteps.map(s => ({ ...s }));\r\n\r\n  constructor(\r\n    private dashboardViewService: DashboardViewService,\r\n    private companyService: CompanyService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subs.sink = this.dashboardViewService.vm$.subscribe(vm => {\r\n      this.steps.forEach(step => {\r\n        step.cssClass = (vm as any)[step.id + 'Class'];\r\n      });\r\n    });\r\n\r\n    this.subs.sink = this.router.events\r\n      .pipe(\r\n        filter(event => event instanceof NavigationEnd)\r\n      )\r\n      .subscribe((event: NavigationEnd) => {\r\n        this.showStepper = false;\r\n        const url = event.url;\r\n        this.steps.forEach(step => {\r\n          if (-1 < url.indexOf(step.link)) {\r\n            this.showStepper = true;\r\n            step.active = true;\r\n          } else {\r\n            step.active = false;\r\n          }\r\n        });\r\n      });\r\n\r\n    this.companyService.currentCompany$.subscribe(company => {\r\n      this.company = company;\r\n      this.steps[COMPANY_STEP_INDEX].name = `${companyKind(company)} Info`;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./stepper.component\";\nimport * as i4 from \"../../dashboard/dashboard-view.service\";\nimport * as i5 from \"../../store/entity/entity-services/company.service\";\nvar styles_StepperComponent = [];\nvar RenderType_StepperComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_StepperComponent, data: {} });\nexport { RenderType_StepperComponent as RenderType_StepperComponent };\nfunction View_StepperComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"div\", [[\"class\", \"step active\"]], [[2, \"read-only\", null]], null, null, null, null)), i0.ɵdid(1, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), (_l()(), i0.ɵeld(2, 0, null, null, 0, \"span\", [[\"class\", \"step-counter\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"step-text\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"]))], function (_ck, _v) { var currVal_1 = \"step active\"; var currVal_2 = _v.parent.context.$implicit.cssClass; _ck(_v, 1, 0, currVal_1, currVal_2); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.readOnly; _ck(_v, 0, 0, currVal_0); var currVal_3 = _v.parent.context.$implicit.name; _ck(_v, 4, 0, currVal_3); }); }\nfunction View_StepperComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 6, \"div\", [[\"class\", \"step\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 2).onClick() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(1, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵdid(2, 16384, null, 0, i2.RouterLink, [i2.Router, i2.ActivatedRoute, [8, null], i0.Renderer2, i0.ElementRef], { routerLink: [0, \"routerLink\"] }, null), i0.ɵpad(3, 1), (_l()(), i0.ɵeld(4, 0, null, null, 0, \"span\", [[\"class\", \"step-counter\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 1, \"span\", [[\"class\", \"step-text\"]], null, null, null, null, null)), (_l()(), i0.ɵted(6, null, [\"\", \"\"]))], function (_ck, _v) { var currVal_0 = \"step\"; var currVal_1 = _v.parent.context.$implicit.cssClass; _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_2 = _ck(_v, 3, 0, _v.parent.context.$implicit.link); _ck(_v, 2, 0, currVal_2); }, function (_ck, _v) { var currVal_3 = _v.parent.context.$implicit.name; _ck(_v, 6, 0, currVal_3); }); }\nfunction View_StepperComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, null, null, null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_StepperComponent_3)), i0.ɵdid(2, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"], ngIfElse: [1, \"ngIfElse\"] }, null), (_l()(), i0.ɵand(0, [[\"NotActive\", 2]], null, 0, null, View_StepperComponent_4))], function (_ck, _v) { var currVal_0 = _v.context.$implicit.active; var currVal_1 = i0.ɵnov(_v, 3); _ck(_v, 2, 0, currVal_0, currVal_1); }, null); }\nfunction View_StepperComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"div\", [[\"class\", \"stepper-container\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, \"div\", [[\"class\", \"stepper\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_StepperComponent_2)), i0.ɵdid(3, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.steps; _ck(_v, 3, 0, currVal_0); }, null); }\nexport function View_StepperComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_StepperComponent_1)), i0.ɵdid(1, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.showStepper; _ck(_v, 1, 0, currVal_0); }, null); }\nexport function View_StepperComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-stepper\", [], null, null, null, View_StepperComponent_0, RenderType_StepperComponent)), i0.ɵdid(1, 245760, null, 0, i3.StepperComponent, [i4.DashboardViewService, i5.CompanyService, i2.Router], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar StepperComponentNgFactory = i0.ɵccf(\"sp-stepper\", i3.StepperComponent, View_StepperComponent_Host_0, { readOnly: \"readOnly\" }, {}, []);\nexport { StepperComponentNgFactory as StepperComponentNgFactory };\n","<div class=\"stepper-container\" *ngIf=\"showStepper\">\r\n  <div class=\"stepper\">\r\n    <ng-container *ngFor=\"let step of steps; index as i\">\r\n\r\n      <div *ngIf=\"step.active; else NotActive\" class=\"step active\" [class.read-only]=\"readOnly\" [ngClass]=\"step.cssClass\">\r\n        <span class=\"step-counter\"></span>\r\n        <span class=\"step-text\">{{step.name}}</span>\r\n      </div>\r\n\r\n      <ng-template #NotActive>\r\n\r\n        <div [routerLink]=\"[step.link]\" class=\"step\"  [ngClass]=\"step.cssClass\">\r\n          <span class=\"step-counter\"></span>\r\n          <span class=\"step-text\">{{step.name}}</span>\r\n        </div>\r\n\r\n      </ng-template>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<!--\r\n  See https://github.com/IdeaBlade/sp-x/pull/168/files#diff-96103efcf6c7b7384882bea04fa38f04\r\n  for HTML of a previous version that might be informative\r\n-->\r\n\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { combineLatest, concat, Observable } from 'rxjs';\r\nimport { first, map, shareReplay, startWith } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\nimport { ENTITY_CACHE_DUMP_MESSAGE } from '@core/error-handling/sentry.functions';\r\nimport { EntitySelectors } from '@entity/entity-selectors';\r\nimport { environment } from '@environment';\r\nimport { getFullName, LoggerService, WellKnownRoutes } from '@core';\r\nimport { SessionService } from '@session';\r\nimport { UserRole } from '@model';\r\nimport { DocumentPackageService } from '@entity';\r\n\r\nexport class ToolbarVm {\r\n  accountDetailsRoute = WellKnownRoutes.AccountView;\r\n  adminConsoleRoute = WellKnownRoutes.Admin;\r\n  isAdmin = false;\r\n  isLoaded = false;\r\n  isReadOnly = false;\r\n  name = '';\r\n  showAccountDetailsLink = false;\r\n  showDashboard = false;\r\n  showEditToggle = false;\r\n  version = environment.version;\r\n}\r\n\r\n@Component({\r\n  selector: 'sp-toolbar',\r\n  templateUrl: './toolbar.component.html'\r\n})\r\nexport class ToolbarComponent {\r\n  vm: ToolbarVm;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private documentPackageService: DocumentPackageService,\r\n    private entitySelectors: EntitySelectors,\r\n    private logger: LoggerService,\r\n    private router: Router,\r\n    private sessionService: SessionService,\r\n    ) {}\r\n\r\n  vm$ = combineLatest(\r\n    this.sessionService.authUser$,\r\n    this.sessionService.currentUser$,\r\n    this.sessionService.companyPackageLoaded$,\r\n    this.sessionService.readOnly$\r\n  ).pipe(\r\n    map(([authUser, currUser, isLoaded, readOnly]) => {\r\n      const vm = new ToolbarVm();\r\n      if (authUser) {\r\n        const isAdmin = vm.isAdmin = authUser.userRole === UserRole.Administrator;\r\n        vm.isLoaded = isLoaded;\r\n        vm.showEditToggle = isAdmin && isLoaded;\r\n        vm.isReadOnly = isAdmin && isLoaded && readOnly;\r\n        vm.showDashboard = isLoaded;\r\n        if (currUser) {\r\n          vm.showAccountDetailsLink = true;\r\n          vm.accountDetailsRoute = isAdmin ? WellKnownRoutes.AdminAccountView : WellKnownRoutes.AccountView;\r\n          if (currUser.id === authUser.id) {\r\n            vm.name = getFullName(currUser);\r\n          } else {\r\n            vm.name = `${getFullName(authUser)} (for ${getFullName(currUser)})`;\r\n          }\r\n        } else {\r\n          vm.name = getFullName(authUser);\r\n        }\r\n      }\r\n      return this.vm = vm;\r\n    }),\r\n    startWith(new ToolbarVm()),\r\n    shareReplay(1)\r\n  );\r\n\r\n  /**\r\n   * Reload the company package after first\r\n   * navigating to a safe place (discarding pending changes!)\r\n   */\r\n  async refresh() {\r\n    if (!this.vm.isLoaded) {\r\n      return; // don't refresh/reload when there is no current company\r\n    }\r\n\r\n    // When done will restore current read-only mode\r\n    const currentReadOnly = this.vm.isReadOnly;\r\n    const successCallback = () => this.sessionService.setReadOnly(currentReadOnly);\r\n\r\n    const refreshUrl = this.vm.isLoaded\r\n      ? WellKnownRoutes.Dashboard\r\n      : this.vm.isAdmin ? WellKnownRoutes.Admin : '' ;\r\n\r\n    if (refreshUrl) {\r\n      // Go readOny temporarily to prevent save\r\n      this.sessionService.setReadOnly(true);\r\n      await this.router.navigate([refreshUrl]);\r\n    }\r\n    this.reload(successCallback);\r\n  }\r\n\r\n  private reload(successCallback?: Function) {\r\n    successCallback = successCallback || (() => {});\r\n    concat(\r\n      this.sessionService.reloadCurrentCompanyPackage(),\r\n      this.documentPackageService.loadDocumentPackage()\r\n    ).subscribe(() => successCallback());\r\n  }\r\n\r\n  signout() {\r\n    this.authService.signout();\r\n  }\r\n\r\n  toggleEdit() {\r\n    if (this.vm.isReadOnly) {\r\n      // switching to edit mode; reload first.\r\n      this.reload(() => this.sessionService.setReadOnly(false));\r\n    } else {\r\n      this.sessionService.setReadOnly(true);\r\n    }\r\n  }\r\n\r\n  /** Dump the entity cache if version number is clicked while holding shift key */\r\n  versionClicked(evt: MouseEvent) {\r\n    if (evt.shiftKey) {\r\n      this.entitySelectors.entityCache$.pipe(first()).subscribe(\r\n        cache => this.logger.warn(ENTITY_CACHE_DUMP_MESSAGE, cache)\r\n      );\r\n    }\r\n  }\r\n}\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Router } from '@angular/router';\nimport { combineLatest, concat } from 'rxjs';\nimport { first, map, shareReplay, startWith } from 'rxjs/operators';\nimport { AuthService } from '@core/services/auth-services/auth.service';\nimport { ENTITY_CACHE_DUMP_MESSAGE } from '@core/error-handling/sentry.functions';\nimport { EntitySelectors } from '@entity/entity-selectors';\nimport { environment } from '@environment';\nimport { getFullName, LoggerService, WellKnownRoutes } from '@core';\nimport { SessionService } from '@session';\nimport { UserRole } from '@model';\nimport { DocumentPackageService } from '@entity';\nvar ToolbarVm = /** @class */ (function () {\n    function ToolbarVm() {\n        this.accountDetailsRoute = WellKnownRoutes.AccountView;\n        this.adminConsoleRoute = WellKnownRoutes.Admin;\n        this.isAdmin = false;\n        this.isLoaded = false;\n        this.isReadOnly = false;\n        this.name = '';\n        this.showAccountDetailsLink = false;\n        this.showDashboard = false;\n        this.showEditToggle = false;\n        this.version = environment.version;\n    }\n    return ToolbarVm;\n}());\nexport { ToolbarVm };\nvar ToolbarComponent = /** @class */ (function () {\n    function ToolbarComponent(authService, documentPackageService, entitySelectors, logger, router, sessionService) {\n        var _this = this;\n        this.authService = authService;\n        this.documentPackageService = documentPackageService;\n        this.entitySelectors = entitySelectors;\n        this.logger = logger;\n        this.router = router;\n        this.sessionService = sessionService;\n        this.vm$ = combineLatest(this.sessionService.authUser$, this.sessionService.currentUser$, this.sessionService.companyPackageLoaded$, this.sessionService.readOnly$).pipe(map(function (_a) {\n            var authUser = _a[0], currUser = _a[1], isLoaded = _a[2], readOnly = _a[3];\n            var vm = new ToolbarVm();\n            if (authUser) {\n                var isAdmin = vm.isAdmin = authUser.userRole === UserRole.Administrator;\n                vm.isLoaded = isLoaded;\n                vm.showEditToggle = isAdmin && isLoaded;\n                vm.isReadOnly = isAdmin && isLoaded && readOnly;\n                vm.showDashboard = isLoaded;\n                if (currUser) {\n                    vm.showAccountDetailsLink = true;\n                    vm.accountDetailsRoute = isAdmin ? WellKnownRoutes.AdminAccountView : WellKnownRoutes.AccountView;\n                    if (currUser.id === authUser.id) {\n                        vm.name = getFullName(currUser);\n                    }\n                    else {\n                        vm.name = getFullName(authUser) + \" (for \" + getFullName(currUser) + \")\";\n                    }\n                }\n                else {\n                    vm.name = getFullName(authUser);\n                }\n            }\n            return _this.vm = vm;\n        }), startWith(new ToolbarVm()), shareReplay(1));\n    }\n    /**\n     * Reload the company package after first\n     * navigating to a safe place (discarding pending changes!)\n     */\n    ToolbarComponent.prototype.refresh = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var currentReadOnly, successCallback, refreshUrl;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.vm.isLoaded) {\n                            return [2 /*return*/]; // don't refresh/reload when there is no current company\n                        }\n                        currentReadOnly = this.vm.isReadOnly;\n                        successCallback = function () { return _this.sessionService.setReadOnly(currentReadOnly); };\n                        refreshUrl = this.vm.isLoaded\n                            ? WellKnownRoutes.Dashboard\n                            : this.vm.isAdmin ? WellKnownRoutes.Admin : '';\n                        if (!refreshUrl) return [3 /*break*/, 2];\n                        // Go readOny temporarily to prevent save\n                        this.sessionService.setReadOnly(true);\n                        return [4 /*yield*/, this.router.navigate([refreshUrl])];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        this.reload(successCallback);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ToolbarComponent.prototype.reload = function (successCallback) {\n        successCallback = successCallback || (function () { });\n        concat(this.sessionService.reloadCurrentCompanyPackage(), this.documentPackageService.loadDocumentPackage()).subscribe(function () { return successCallback(); });\n    };\n    ToolbarComponent.prototype.signout = function () {\n        this.authService.signout();\n    };\n    ToolbarComponent.prototype.toggleEdit = function () {\n        var _this = this;\n        if (this.vm.isReadOnly) {\n            // switching to edit mode; reload first.\n            this.reload(function () { return _this.sessionService.setReadOnly(false); });\n        }\n        else {\n            this.sessionService.setReadOnly(true);\n        }\n    };\n    /** Dump the entity cache if version number is clicked while holding shift key */\n    ToolbarComponent.prototype.versionClicked = function (evt) {\n        var _this = this;\n        if (evt.shiftKey) {\n            this.entitySelectors.entityCache$.pipe(first()).subscribe(function (cache) { return _this.logger.warn(ENTITY_CACHE_DUMP_MESSAGE, cache); });\n        }\n    };\n    return ToolbarComponent;\n}());\nexport { ToolbarComponent };\n","import { environment } from '@environment';\r\n\r\nimport * as Raven from 'raven-js';\r\n\r\nexport const ENTITY_CACHE_DUMP_MESSAGE = 'EntityCache Dump';\r\n\r\nexport function configureLogging() {\r\n  if (environment.enableSentry) {\r\n    Raven.config(environment.sentryUri, {\r\n      environment: environment.env,\r\n      release: environment.version,\r\n      ignoreErrors: [\r\n        ENTITY_CACHE_DUMP_MESSAGE\r\n      ]\r\n    })\r\n    .install();\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../stepper/stepper.component.ngfactory\";\nimport * as i4 from \"../stepper/stepper.component\";\nimport * as i5 from \"../../dashboard/dashboard-view.service\";\nimport * as i6 from \"../../store/entity/entity-services/company.service\";\nimport * as i7 from \"./toolbar.component\";\nimport * as i8 from \"../../core/services/auth-services/auth.service\";\nimport * as i9 from \"../../store/entity/entity-services/document-package.service\";\nimport * as i10 from \"../../store/entity/entity-selectors\";\nimport * as i11 from \"../../core/services/logger.service\";\nimport * as i12 from \"../../store/session/session.service\";\nvar styles_ToolbarComponent = [];\nvar RenderType_ToolbarComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_ToolbarComponent, data: {} });\nexport { RenderType_ToolbarComponent as RenderType_ToolbarComponent };\nfunction View_ToolbarComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 6, \"a\", [[\"class\", \"nav-item nav-link btn btn-light mr-3\"], [\"id\", \"admin-link\"], [\"routerLinkActive\", \"router-link-active\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(1, 671744, [[2, 4]], 0, i1.RouterLinkWithHref, [i1.Router, i1.ActivatedRoute, i2.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), i0.ɵpad(2, 1), i0.ɵdid(3, 1720320, null, 2, i1.RouterLinkActive, [i1.Router, i0.ElementRef, i0.Renderer2, i0.ChangeDetectorRef], { routerLinkActive: [0, \"routerLinkActive\"] }, null), i0.ɵqud(603979776, 1, { links: 1 }), i0.ɵqud(603979776, 2, { linksWithHrefs: 1 }), (_l()(), i0.ɵted(-1, null, [\"Admin\"]))], function (_ck, _v) { var currVal_2 = _ck(_v, 2, 0, _v.parent.parent.context.ngIf.adminConsoleRoute); _ck(_v, 1, 0, currVal_2); var currVal_3 = \"router-link-active\"; _ck(_v, 3, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).target; var currVal_1 = i0.ɵnov(_v, 1).href; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nfunction View_ToolbarComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"i\", [[\"class\", \"nav-item material-icons icon btn-circle\"], [\"style\", \"cursor: pointer; color: lightgray;\"]], [[8, \"title\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.toggleEdit() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(2, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = (_v.parent.parent.context.ngIf.isReadOnly ? \"Edit\" : \"Set read-only\"); _ck(_v, 1, 0, currVal_0); var currVal_1 = (_v.parent.parent.context.ngIf.isReadOnly ? \"create\" : \"block\"); _ck(_v, 2, 0, currVal_1); }); }\nfunction View_ToolbarComponent_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"span\", [[\"title\", \"Account Details\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 3, \"i\", [[\"class\", \"material-icons icon btn-circle\"], [\"style\", \"cursor: pointer; color: lightgray;\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 2).onClick() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(2, 16384, null, 0, i1.RouterLink, [i1.Router, i1.ActivatedRoute, [8, null], i0.Renderer2, i0.ElementRef], { routerLink: [0, \"routerLink\"] }, null), i0.ɵpad(3, 1), (_l()(), i0.ɵted(-1, null, [\"view_list\"]))], function (_ck, _v) { var currVal_0 = _ck(_v, 3, 0, _v.parent.parent.context.ngIf.accountDetailsRoute); _ck(_v, 2, 0, currVal_0); }, null); }\nfunction View_ToolbarComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 11, \"div\", [[\"class\", \"navbar-nav d-flex justify-content-between align-items-center\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 10, \"div\", [[\"class\", \"navbar-nav nav-user-details\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_ToolbarComponent_3)), i0.ɵdid(3, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_ToolbarComponent_4)), i0.ɵdid(5, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_ToolbarComponent_5)), i0.ɵdid(7, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"span\", [[\"class\", \"navbar-text sp-user-name\"], [\"id\", \"user-name\"]], null, null, null, null, null)), (_l()(), i0.ɵted(9, null, [\"\", \"\"])), (_l()(), i0.ɵeld(10, 0, null, null, 1, \"a\", [[\"class\", \"nav-item nav-link\"], [\"id\", \"sign-out\"], [\"tabindex\", \"0\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.signout() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"Sign Out\"]))], function (_ck, _v) { var currVal_0 = _v.parent.context.ngIf.isAdmin; _ck(_v, 3, 0, currVal_0); var currVal_1 = _v.parent.context.ngIf.showEditToggle; _ck(_v, 5, 0, currVal_1); var currVal_2 = _v.parent.context.ngIf.showAccountDetailsLink; _ck(_v, 7, 0, currVal_2); }, function (_ck, _v) { var currVal_3 = _v.parent.context.ngIf.name; _ck(_v, 9, 0, currVal_3); }); }\nfunction View_ToolbarComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 10, \"nav\", [[\"class\", \"navbar navbar-expand-sm\"]], [[2, \"read-only\", null]], null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 9, \"div\", [[\"class\", \"navbar-content\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"span\", [[\"class\", \"navbar-brand d-flex\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.refresh() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 0, \"img\", [[\"alt\", \"SurePayroll Logo\"], [\"id\", \"logo-link\"], [\"src\", \"/assets/images/surepayroll-logo-white.svg\"], [\"width\", \"auto\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"sp-stepper\", [[\"class\", \"mobile-hide\"]], null, null, null, i3.View_StepperComponent_0, i3.RenderType_StepperComponent)), i0.ɵdid(5, 245760, null, 0, i4.StepperComponent, [i5.DashboardViewService, i6.CompanyService, i1.Router], { readOnly: [0, \"readOnly\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_ToolbarComponent_2)), i0.ɵdid(7, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(8, 0, null, null, 2, \"div\", [[\"style\", \"cursor: pointer;font-size: 8pt; position: absolute; right: 24px; top: 2px;\"]], [[8, \"title\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.versionClicked($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵpad(9, 1), (_l()(), i0.ɵted(10, null, [\"Version \", \"\"]))], function (_ck, _v) { var currVal_1 = _v.context.ngIf.isReadOnly; _ck(_v, 5, 0, currVal_1); var currVal_2 = _v.context.ngIf.name; _ck(_v, 7, 0, currVal_2); }, function (_ck, _v) { var currVal_0 = _v.context.ngIf.isReadOnly; _ck(_v, 0, 0, currVal_0); var currVal_3 = _ck(_v, 9, 0, (\"Version \" + _v.context.ngIf.version)); _ck(_v, 8, 0, currVal_3); var currVal_4 = _v.context.ngIf.version; _ck(_v, 10, 0, currVal_4); }); }\nexport function View_ToolbarComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 2, null, View_ToolbarComponent_1)), i0.ɵdid(1, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i0.ɵpid(131072, i2.AsyncPipe, [i0.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 1, 0, i0.ɵnov(_v, 2).transform(_co.vm$)); _ck(_v, 1, 0, currVal_0); }, null); }\nexport function View_ToolbarComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-toolbar\", [], null, null, null, View_ToolbarComponent_0, RenderType_ToolbarComponent)), i0.ɵdid(1, 49152, null, 0, i7.ToolbarComponent, [i8.AuthService, i9.DocumentPackageService, i10.EntitySelectors, i11.LoggerService, i1.Router, i12.SessionService], null, null)], null, null); }\nvar ToolbarComponentNgFactory = i0.ɵccf(\"sp-toolbar\", i7.ToolbarComponent, View_ToolbarComponent_Host_0, {}, {}, []);\nexport { ToolbarComponentNgFactory as ToolbarComponentNgFactory };\n","<nav *ngIf=\"vm$ | async as vm\" class=\"navbar navbar-expand-sm\" [class.read-only]=\"vm.isReadOnly\">\r\n  <div class=\"navbar-content\" >\r\n\r\n    <!-- Company Logo -->\r\n    <span class=\"navbar-brand d-flex\" (click)=\"refresh()\">\r\n      <img src=\"/assets/images/surepayroll-logo-white.svg\" id=\"logo-link\" width=\"auto\" alt=\"SurePayroll Logo\">\r\n    </span>\r\n\r\n    <sp-stepper class=\"mobile-hide\" [readOnly]=\"vm.isReadOnly\"></sp-stepper>\r\n\r\n    <div *ngIf=\"vm.name\" class=\"navbar-nav d-flex justify-content-between align-items-center\">\r\n\r\n      <!-- User Details -->\r\n      <div class=\"navbar-nav nav-user-details\">\r\n\r\n        <a *ngIf=\"vm.isAdmin\" class=\"nav-item nav-link btn btn-light mr-3\" [routerLink]=\"[vm.adminConsoleRoute]\" routerLinkActive=\"router-link-active\" id=\"admin-link\">Admin</a>\r\n        <span *ngIf=\"vm.showEditToggle\">\r\n          <i (click)=\"toggleEdit()\" class=\"nav-item material-icons icon btn-circle\"\r\n          [title]=\"vm.isReadOnly ? 'Edit' : 'Set read-only'\"\r\n          style=\"cursor: pointer; color: lightgray;\">{{vm.isReadOnly ? 'create' : 'block'}}</i>\r\n        </span>\r\n\r\n        <span title=\"Account Details\" *ngIf=\"vm.showAccountDetailsLink\">\r\n          <i [routerLink]=\"[vm.accountDetailsRoute]\" class=\"material-icons icon btn-circle\" style=\"cursor: pointer; color: lightgray;\">view_list</i>\r\n        </span>\r\n\r\n        <span class=\"navbar-text sp-user-name\" id=\"user-name\">{{ vm.name }}</span>\r\n        <a class=\"nav-item nav-link\" (click)=\"signout()\" tabindex=\"0\" id=\"sign-out\">Sign Out</a>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- Version Number -->\r\n    <div (click)=\"versionClicked($event)\" [title]=\"['Version ' + vm.version]\" style=\"cursor: pointer;font-size: 8pt; position: absolute; right: 24px; top: 2px;\">Version {{ vm.version }}</div>\r\n\r\n  </div>\r\n</nav>\r\n","import { Component } from '@angular/core';\r\nimport { BusyService } from '@core/services/busy.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n/*\r\nSpinner to display during long operations.\r\nThe outer div blocks the entire screen, so user cannot input while app is busy.\r\nThe inner div shows the spinner after a delay, so it won't show immediately.\r\nThe textbox captures keyboard events but stays offscreen.\r\n*/\r\n@Component({\r\n  selector: 'sp-spinner',\r\n  templateUrl: './spinner.component.html'\r\n})\r\nexport class SpinnerComponent {\r\n  visible$: Observable<boolean>;\r\n  spinning$: Observable<boolean>;\r\n  constructor(public busyService: BusyService) {\r\n    this.visible$ = busyService.isBusy;\r\n    this.spinning$ = busyService.isDelayBusy;\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./spinner.component\";\nimport * as i3 from \"../../core/services/busy.service\";\nvar styles_SpinnerComponent = [];\nvar RenderType_SpinnerComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_SpinnerComponent, data: {} });\nexport { RenderType_SpinnerComponent as RenderType_SpinnerComponent };\nfunction View_SpinnerComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 9, \"div\", [[\"class\", \"spinner-container\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 7, \"div\", [[\"class\", \"spinner-shade\"]], [[8, \"hidden\", 0]], null, null, null, null)), i0.ɵpid(131072, i1.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵeld(3, 0, null, null, 5, \"div\", [[\"class\", \"spinner-box\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"div\", [[\"class\", \"spinner-animation\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"img\", [[\"src\", \"/assets/images/green-spinner-on-white.gif\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 2, \"div\", [[\"class\", \"spinner-label\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(8, null, [\"\", \"\"])), (_l()(), i0.ɵeld(9, 0, null, null, 0, \"input\", [[\"autofocus\", \"\"], [\"onkeydown\", \"return false;\"], [\"style\", \"position: fixed; top:-200px; left:-200px\"], [\"type\", \"text\"]], null, null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = !i0.ɵunv(_v, 1, 0, i0.ɵnov(_v, 2).transform(_co.spinning$)); _ck(_v, 1, 0, currVal_0); var currVal_1 = _co.busyService.message; _ck(_v, 8, 0, currVal_1); }); }\nexport function View_SpinnerComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 2, null, View_SpinnerComponent_1)), i0.ɵdid(1, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i0.ɵpid(131072, i1.AsyncPipe, [i0.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 1, 0, i0.ɵnov(_v, 2).transform(_co.visible$)); _ck(_v, 1, 0, currVal_0); }, null); }\nexport function View_SpinnerComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-spinner\", [], null, null, null, View_SpinnerComponent_0, RenderType_SpinnerComponent)), i0.ɵdid(1, 49152, null, 0, i2.SpinnerComponent, [i3.BusyService], null, null)], null, null); }\nvar SpinnerComponentNgFactory = i0.ɵccf(\"sp-spinner\", i2.SpinnerComponent, View_SpinnerComponent_Host_0, {}, {}, []);\nexport { SpinnerComponentNgFactory as SpinnerComponentNgFactory };\n","<div *ngIf=\"visible$ | async\" class=\"spinner-container\">\r\n  <div [hidden]=\"!(spinning$ | async)\" class=\"spinner-shade\">\r\n    <div class=\"spinner-box\">\r\n      <div class=\"spinner-animation\">\r\n        <img src=\"/assets/images/green-spinner-on-white.gif\">\r\n      </div>\r\n      <div class=\"spinner-label\">\r\n        <h2>{{busyService.message}}</h2>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <input type=\"text\" autofocus onkeydown=\"return false;\" style=\"position: fixed; top:-200px; left:-200px\">\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { environment } from '@environment';\r\nimport { ChatService } from '@core/services';\r\nimport { SessionService } from '@session';\r\n\r\nconst chatButtonId = environment.chatConfig.BUTTON_ID;\r\n\r\n@Component({\r\n  selector: 'sp-chat',\r\n  templateUrl: './chat.component.html'\r\n})\r\nexport class ChatComponent implements OnInit {\r\n\r\n  chatAgent: any;\r\n  // It is a lot simpler to use GetElementById but this is so more Angular-ish ;-)\r\n  @ViewChild('online') onlineEl: ElementRef;\r\n  @ViewChild('offline') offlineEl: ElementRef;\r\n\r\n  constructor(private chatService: ChatService) {}\r\n\r\n  ngOnInit() {\r\n    this.chatService.chatAgent$.subscribe(chatAgent => {\r\n      this.chatAgent = chatAgent;\r\n      // WTF? Seems to work with just the code below\r\n      if (!window._laq) {\r\n        window._laq = [];\r\n      }\r\n      window._laq.push(\r\n        () => {\r\n          // Worked when we just called these two lines directly\r\n          chatAgent.showWhenOnline(chatButtonId, this.onlineEl.nativeElement);\r\n          chatAgent.showWhenOffline(chatButtonId, this.offlineEl.nativeElement);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  chatIconClicked() {\r\n    if (this.chatAgent) {\r\n      this.chatAgent.startChat(chatButtonId);\r\n    }\r\n  }\r\n\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./chat.component\";\nimport * as i2 from \"../../core/services/chat.service\";\nvar styles_ChatComponent = [];\nvar RenderType_ChatComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_ChatComponent, data: {} });\nexport { RenderType_ChatComponent as RenderType_ChatComponent };\nexport function View_ChatComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { onlineEl: 0 }), i0.ɵqud(402653184, 2, { offlineEl: 0 }), (_l()(), i0.ɵeld(2, 0, [[1, 0], [\"online\", 1]], null, 2, \"div\", [[\"class\", \"chat-element\"], [\"style\", \"display: none;\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.chatIconClicked() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"i\", [[\"class\", \"material-icons icon\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"message\"])), (_l()(), i0.ɵeld(5, 0, [[2, 0], [\"offline\", 1]], null, 0, \"div\", [[\"style\", \"display: none;\"]], null, null, null, null, null))], null, null); }\nexport function View_ChatComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-chat\", [], null, null, null, View_ChatComponent_0, RenderType_ChatComponent)), i0.ɵdid(1, 114688, null, 0, i1.ChatComponent, [i2.ChatService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar ChatComponentNgFactory = i0.ɵccf(\"sp-chat\", i1.ChatComponent, View_ChatComponent_Host_0, {}, {}, []);\nexport { ChatComponentNgFactory as ChatComponentNgFactory };\n","    <!-- Chat liveagent makes the image or offline-div visible -->\r\n    <div #online class=\"chat-element\" style=\"display: none;\" (click)=\"chatIconClicked()\">\r\n      <i class=\"material-icons icon\">message</i>\r\n    </div>\r\n\r\n    <!-- Offline Chat Content -->\r\n    <div #offline style=\"display: none;\"></div>\r\n\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./core-components/toolbar/toolbar.component.ngfactory\";\nimport * as i2 from \"./core-components/toolbar/toolbar.component\";\nimport * as i3 from \"./core/services/auth-services/auth.service\";\nimport * as i4 from \"./store/entity/entity-services/document-package.service\";\nimport * as i5 from \"./store/entity/entity-selectors\";\nimport * as i6 from \"./core/services/logger.service\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"./store/session/session.service\";\nimport * as i9 from \"./core-components/spinner/spinner.component.ngfactory\";\nimport * as i10 from \"./core-components/spinner/spinner.component\";\nimport * as i11 from \"./core/services/busy.service\";\nimport * as i12 from \"./core-components/chat/chat.component.ngfactory\";\nimport * as i13 from \"./core-components/chat/chat.component\";\nimport * as i14 from \"./core/services/chat.service\";\nimport * as i15 from \"./app.component\";\nimport * as i16 from \"@angular/common\";\nvar styles_AppComponent = [];\nvar RenderType_AppComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AppComponent, data: { \"animation\": [{ type: 7, name: \"routeAnim\", definitions: [{ type: 1, expr: \"* <=> *\", animation: [{ type: 6, styles: { position: \"relative\" }, offset: null }, { type: 11, selector: \".nav-button-container\", animation: { type: 6, styles: { position: \"absolute\", opacity: 0 }, offset: null }, options: { optional: true } }, { type: 11, selector: \":enter, :leave\", animation: [{ type: 6, styles: { position: \"absolute\", top: 0, left: 0, width: \"100%\" }, offset: null }], options: { optional: true } }, { type: 11, selector: \":leave\", animation: { type: 9, options: null }, options: { optional: true } }, { type: 3, steps: [{ type: 11, selector: \":leave\", animation: { type: 4, styles: { type: 6, styles: { opacity: 0 }, offset: null }, timings: \"300ms ease-out\" }, options: { optional: true } }], options: null }, { type: 11, selector: \":enter\", animation: { type: 9, options: null }, options: { optional: true } }], options: null }], options: {} }] } });\nexport { RenderType_AppComponent as RenderType_AppComponent };\nexport function View_AppComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 7, \"div\", [[\"class\", \"layout\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"sp-toolbar\", [], null, null, null, i1.View_ToolbarComponent_0, i1.RenderType_ToolbarComponent)), i0.ɵdid(2, 49152, null, 0, i2.ToolbarComponent, [i3.AuthService, i4.DocumentPackageService, i5.EntitySelectors, i6.LoggerService, i7.Router, i8.SessionService], null, null), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"div\", [[\"class\", \"content\"]], [[24, \"@routeAnim\", 0]], null, null, null, null)), (_l()(), i0.ɵeld(4, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i0.ɵdid(5, 212992, [[\"outlet\", 4]], 0, i7.RouterOutlet, [i7.ChildrenOutletContexts, i0.ViewContainerRef, i0.ComponentFactoryResolver, [8, null], i0.ChangeDetectorRef], null, null), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"sp-spinner\", [], null, null, null, i9.View_SpinnerComponent_0, i9.RenderType_SpinnerComponent)), i0.ɵdid(7, 49152, null, 0, i10.SpinnerComponent, [i11.BusyService], null, null), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"iframe\", [[\"height\", \"100%\"], [\"id\", \"fullframe\"], [\"style\", \"display:none;\"], [\"width\", \"100%\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" DocuFrame Here\\n\"])), (_l()(), i0.ɵeld(10, 0, null, null, 1, \"sp-chat\", [], null, null, null, i12.View_ChatComponent_0, i12.RenderType_ChatComponent)), i0.ɵdid(11, 114688, null, 0, i13.ChatComponent, [i14.ChatService], null, null)], function (_ck, _v) { _ck(_v, 5, 0); _ck(_v, 11, 0); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.prepareRoute(i0.ɵnov(_v, 5)); _ck(_v, 3, 0, currVal_0); }); }\nexport function View_AppComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"root\", [], [[40, \"@.disabled\", 0]], null, null, View_AppComponent_0, RenderType_AppComponent)), i0.ɵdid(1, 114688, null, 0, i15.AppComponent, [i16.Location], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).animationsDisabled; _ck(_v, 0, 0, currVal_0); }); }\nvar AppComponentNgFactory = i0.ɵccf(\"root\", i15.AppComponent, View_AppComponent_Host_0, {}, {}, []);\nexport { AppComponentNgFactory as AppComponentNgFactory };\n","<div class=\"layout\">\r\n\r\n  <sp-toolbar></sp-toolbar>\r\n  <div [@routeAnim]=\"prepareRoute(outlet)\" class=\"content\">\r\n    <router-outlet #outlet=\"outlet\"></router-outlet>\r\n  </div>\r\n  <sp-spinner></sp-spinner>\r\n</div>\r\n<iframe id=\"fullframe\" width=\"100%\" height=\"100%\" style=\"display:none;\">\r\n  DocuFrame Here\r\n</iframe>\r\n<sp-chat></sp-chat>\r\n","export interface AnalyticsEvent {\r\n    type: AnalyticsEventType;\r\n    payload: string;\r\n}\r\n\r\nexport enum AnalyticsEventType {\r\n    BeginAction = 'BeginAction',\r\n    EndAction = 'EndAction',\r\n    Navigate = 'Navigate',\r\n    Exception = 'Exception',\r\n    Custom = 'Custom'\r\n}\r\n","import { Injectable, InjectionToken, Optional, Inject } from '@angular/core';\r\nimport { Observable, ReplaySubject, Subject, Observer } from 'rxjs';\r\n\r\nimport { LoggerService } from '@core/services/logger.service';\r\nimport { AnalyticsEvent } from './analytics-event';\r\nimport { AnalyticsEventProvider } from './analytics-event-provider';\r\nimport { AnalyticsEventReceiver } from './analytics-event-receiver';\r\n\r\nexport const ANALYTICS_EVENT_PROVIDER = new InjectionToken<AnalyticsEventProvider>('EventProvider');\r\nexport const ANALYTICS_EVENT_RECEIVER = new InjectionToken<AnalyticsEventReceiver>('EventConsumer');\r\n\r\n// Maximum number of events to buffer for subscribers\r\nconst MAX_EVENTS_BUFFER = 100;\r\n@Injectable({providedIn: 'root'})\r\nexport class AnalyticsService implements Observer<AnalyticsEvent> {\r\n\r\n    closed?: boolean;\r\n    public events$: Observable<AnalyticsEvent>;\r\n    private eventsSubject: Subject<AnalyticsEvent>;\r\n    constructor(\r\n        @Optional() @Inject(ANALYTICS_EVENT_PROVIDER) private eventProviders: AnalyticsEventProvider[],\r\n        @Optional() @Inject(ANALYTICS_EVENT_RECEIVER) private eventConsumers: AnalyticsEventReceiver[],\r\n        private loggerService: LoggerService\r\n    ) {\r\n        this.eventsSubject = new ReplaySubject<AnalyticsEvent>(MAX_EVENTS_BUFFER);\r\n        this.events$ = this.eventsSubject;\r\n    }\r\n\r\n    next (value: AnalyticsEvent) {\r\n        this.eventsSubject.next(value);\r\n    }\r\n\r\n    complete(): void {\r\n    }\r\n\r\n    error(err: any) {\r\n        this.loggerService.error(err);\r\n    }\r\n\r\n    initialize(): any {\r\n        this.eventProviders.forEach(provider => {\r\n            provider.events$.subscribe(this);\r\n        });\r\n        this.eventConsumers.forEach(consumer => {\r\n            consumer.initialize(this.events$);\r\n        });\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { LoggerService } from '@core/services/logger.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/logger.service\";\nexport var ANALYTICS_EVENT_PROVIDER = new InjectionToken('EventProvider');\nexport var ANALYTICS_EVENT_RECEIVER = new InjectionToken('EventConsumer');\n// Maximum number of events to buffer for subscribers\nvar MAX_EVENTS_BUFFER = 100;\nvar AnalyticsService = /** @class */ (function () {\n    function AnalyticsService(eventProviders, eventConsumers, loggerService) {\n        this.eventProviders = eventProviders;\n        this.eventConsumers = eventConsumers;\n        this.loggerService = loggerService;\n        this.eventsSubject = new ReplaySubject(MAX_EVENTS_BUFFER);\n        this.events$ = this.eventsSubject;\n    }\n    AnalyticsService.prototype.next = function (value) {\n        this.eventsSubject.next(value);\n    };\n    AnalyticsService.prototype.complete = function () {\n    };\n    AnalyticsService.prototype.error = function (err) {\n        this.loggerService.error(err);\n    };\n    AnalyticsService.prototype.initialize = function () {\n        var _this = this;\n        this.eventProviders.forEach(function (provider) {\n            provider.events$.subscribe(_this);\n        });\n        this.eventConsumers.forEach(function (consumer) {\n            consumer.initialize(_this.events$);\n        });\n    };\n    AnalyticsService.ngInjectableDef = i0.defineInjectable({ factory: function AnalyticsService_Factory() { return new AnalyticsService(i0.inject(ANALYTICS_EVENT_PROVIDER, 8), i0.inject(ANALYTICS_EVENT_RECEIVER, 8), i0.inject(i1.LoggerService)); }, token: AnalyticsService, providedIn: \"root\" });\n    return AnalyticsService;\n}());\nexport { AnalyticsService };\n","import { Injectable } from 'node_modules/@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { AnalyticsEvent, AnalyticsEventType } from '@core/analytics/analytics-event';\r\nimport { AnalyticsEventProvider } from '@core/analytics/analytics-event-provider';\r\n\r\n@Injectable()\r\nexport class RouterAnalyticsNavigationProvider implements AnalyticsEventProvider {\r\n    events$ = new Subject<AnalyticsEvent>();\r\n\r\n    constructor(public router: Router) {\r\n        this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationEnd) {\r\n                this.events$.next({\r\n                    type: AnalyticsEventType.Navigate,\r\n                    payload: event.urlAfterRedirects\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { interval, Observable } from 'rxjs';\r\nimport { map, skipWhile, take } from 'rxjs/operators';\r\n\r\nimport { LoggerService } from '@core';\r\n\r\nimport { AnalyticsEvent, AnalyticsEventType } from '@core/analytics/analytics-event';\r\nimport { AnalyticsEventReceiver } from '@core/analytics/analytics-event-receiver';\r\n\r\nimport { environment } from '@environment';\r\n\r\ndeclare global {\r\n    interface Window { dataLayer: any[]; }\r\n}\r\nlet tagInstalled = false;\r\n\r\n@Injectable()\r\nexport class GoogleTagManagerReceiver implements AnalyticsEventReceiver {\r\n    private TagManagerKey = environment.googleTagManagerKey;\r\n    static create: any;\r\n    constructor(\r\n        @Inject(DOCUMENT) private document: Document,\r\n        private logger: LoggerService\r\n    ) { }\r\n\r\n    async initialize(events$: Observable<AnalyticsEvent>): Promise<void> {\r\n\r\n        const dataLayer = await this.loadLibrary().toPromise();\r\n\r\n        if (!dataLayer) {\r\n            return;\r\n        }\r\n\r\n        events$.subscribe((ev) => {\r\n            if (ev.type === AnalyticsEventType.Navigate) {\r\n                dataLayer.push({\r\n                    'event': ev.type,\r\n                    'route': ev.payload\r\n                });\r\n            } // Tag manager already listens to navigate events for angular so this custom event could be disabled\r\n\r\n            if (ev.type === AnalyticsEventType.BeginAction ||\r\n                ev.type === AnalyticsEventType.EndAction) {\r\n                dataLayer.push({\r\n                    'event': ev.type,\r\n                    'action': ev.payload\r\n                });\r\n            }\r\n\r\n            if (ev.type === AnalyticsEventType.Exception) {\r\n                dataLayer.push({\r\n                    'event': ev.type,\r\n                    'exception': ev.payload\r\n                });\r\n            }  // Tag manager already listens error triggers, however SP as non exception errors which might be usefull to send\r\n        });\r\n    }\r\n\r\n    loadLibrary() {\r\n        if (!tagInstalled) {\r\n            tagInstalled = true; // install once\r\n\r\n            const ref = this.document.getElementsByTagName('script')[0];\r\n            const script = this.document.createElement('script');\r\n            script.text = `\r\n            (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\r\n              new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\r\n              j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\r\n              'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\r\n              })(window,document,'script','dataLayer','${this.TagManagerKey}');`;\r\n            ref.parentNode.insertBefore(script, ref);\r\n        }\r\n        return interval(1000).pipe(\r\n            skipWhile(tick => window.dataLayer == null && tick < 15),\r\n            take(1),\r\n            map(_ => {\r\n                if (!window.dataLayer) {\r\n                    const msg = 'Google Tag Manager load timed out; look in console for script load error(s).';\r\n                    this.logger.error(msg);\r\n                }\r\n                return window.dataLayer;\r\n            })\r\n        );\r\n    }\r\n}\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { interval } from 'rxjs';\nimport { map, skipWhile, take } from 'rxjs/operators';\nimport { LoggerService } from '@core';\nimport { AnalyticsEventType } from '@core/analytics/analytics-event';\nimport { environment } from '@environment';\nvar tagInstalled = false;\nvar GoogleTagManagerReceiver = /** @class */ (function () {\n    function GoogleTagManagerReceiver(document, logger) {\n        this.document = document;\n        this.logger = logger;\n        this.TagManagerKey = environment.googleTagManagerKey;\n    }\n    GoogleTagManagerReceiver.prototype.initialize = function (events$) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dataLayer;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.loadLibrary().toPromise()];\n                    case 1:\n                        dataLayer = _a.sent();\n                        if (!dataLayer) {\n                            return [2 /*return*/];\n                        }\n                        events$.subscribe(function (ev) {\n                            if (ev.type === AnalyticsEventType.Navigate) {\n                                dataLayer.push({\n                                    'event': ev.type,\n                                    'route': ev.payload\n                                });\n                            } // Tag manager already listens to navigate events for angular so this custom event could be disabled\n                            if (ev.type === AnalyticsEventType.BeginAction ||\n                                ev.type === AnalyticsEventType.EndAction) {\n                                dataLayer.push({\n                                    'event': ev.type,\n                                    'action': ev.payload\n                                });\n                            }\n                            if (ev.type === AnalyticsEventType.Exception) {\n                                dataLayer.push({\n                                    'event': ev.type,\n                                    'exception': ev.payload\n                                });\n                            } // Tag manager already listens error triggers, however SP as non exception errors which might be usefull to send\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GoogleTagManagerReceiver.prototype.loadLibrary = function () {\n        var _this = this;\n        if (!tagInstalled) {\n            tagInstalled = true; // install once\n            var ref = this.document.getElementsByTagName('script')[0];\n            var script = this.document.createElement('script');\n            script.text = \"\\n            (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\\n              new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\\n              j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\\n              'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\\n              })(window,document,'script','dataLayer','\" + this.TagManagerKey + \"');\";\n            ref.parentNode.insertBefore(script, ref);\n        }\n        return interval(1000).pipe(skipWhile(function (tick) { return window.dataLayer == null && tick < 15; }), take(1), map(function (_) {\n            if (!window.dataLayer) {\n                var msg = 'Google Tag Manager load timed out; look in console for script load error(s).';\n                _this.logger.error(msg);\n            }\n            return window.dataLayer;\n        }));\n    };\n    return GoogleTagManagerReceiver;\n}());\nexport { GoogleTagManagerReceiver };\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { BusyService } from '@core/services/busy.service';\r\n\r\n/** Ignore requests to these urls */\r\nconst whiteListUrls = [\r\n  '/stats',\r\n  '/authentication/username/valid/',\r\n  '/authentication/username/valid/',\r\n  // Tax calc will now lock navigation however the Saver is not yet integrated with the busy status\r\n  // So its better to show a spinner rather than hanging navigation on a primed screen\r\n  // The only issue is that when first loading a company package the saver spinner will show\r\n  // until the initial tax calculation is done.\r\n  '/taxapi/taxes',\r\n  '/taxapi/address'\r\n];\r\n\r\n@Injectable() // no providedIn because multi-provided\r\nexport class BusyHttpInterceptor implements HttpInterceptor {\r\n  constructor(private busyService: BusyService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // Don't \"busy\" the white-listed urls\r\n    const url = request.url;\r\n    if (whiteListUrls.some(w => url.includes(w))) {\r\n      return next.handle(request);\r\n    }\r\n\r\n    const msg = request.method === 'GET' ? 'Loading...' : 'Saving...';\r\n    this.busyService.increment(msg);\r\n\r\n    return next.handle(request).pipe(\r\n      // map(event => {\r\n      //   return event;\r\n      // }),\r\n      // catchError(error => {\r\n      //   return throwError(error);\r\n      // }),\r\n      finalize(() => {\r\n        this.busyService.decrement();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { concatMap, first } from 'rxjs/operators';\r\n\r\nimport { SessionService } from '@session';\r\n\r\nimport { WellKnownRoutes } from '@core';\r\n\r\n@Injectable() // do not use providedIn because multi-provided\r\nexport class ReadOnlyHttpInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private sessionService: SessionService) { }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const method = req.method.toUpperCase();\r\n    const url = req.url;\r\n    if (couldBeReadOnly()) {\r\n      return this.sessionService.readOnly$.pipe(\r\n        first(),\r\n        concatMap(readOnly => {\r\n          if (readOnly) {\r\n            const msg = `ReadOnlyHttpInterceptor error: cannot ${method} ${url} when read-only`;\r\n            this.sessionService.logger.error(msg);\r\n            throw throwError(new Error(msg));\r\n          }\r\n          return next.handle(req);\r\n        })\r\n      );\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n\r\n    /**\r\n     * Could be subject to read-only interception\r\n     * if not a GET or JSONP and\r\n     * not a POST to the Tax API\r\n     */\r\n    function couldBeReadOnly() {\r\n      return ('GET' !== method && 'JSONP' !== method) &&\r\n      // POST to Tax Service API is actually a GET\r\n      !(/\\/taxapi\\//.test(url) && method === 'POST');\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\n\r\n/**\r\n * If no 'Accept' header in request, add request header that demands JSON response.\r\n * If your HTTP request should accept other media types, specify the `Accept` header explicitly\r\n */\r\n@Injectable() // do not use providedIn because multi-provided\r\nexport class AcceptJsonOnlyHttpInterceptor implements HttpInterceptor {\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    let headers = req.headers;\r\n    if (!headers.get('Accept')) {\r\n      // No Accept header provided so add one that requires a JSON response\r\n      headers = headers.set('Accept', 'application/json; charset=utf-8');\r\n      req = req.clone({ headers });\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  HttpEvent,\r\n  HttpEventType,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { defer, Observable, ReplaySubject, throwError } from 'rxjs';\r\nimport { catchError, concatMap, finalize, first, map, tap } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environment';\r\nimport { SessionService } from '@session';\r\n\r\n\r\n\r\n/** INTERNAL - exported for testing */\r\nexport enum QueuedRequestReleaseType {\r\n  /** Proceed with handling the queued request */\r\n  Ok,\r\n  /** Cancel the queued request */\r\n  Cancel\r\n}\r\n\r\n/**\r\n * INTERNAL - exported for testing\r\n * HTTP request whose execution is delayed until a previous inflight request completes\r\n */\r\nexport class QueuedRequest {\r\n  constructor(\r\n    /** Intercepted request that is queued because another queueable request is inflight */\r\n    public request: HttpRequest<any>,\r\n    /** Request observable to return when and if this queued request is OK to release */\r\n    private requestObservable: Observable<HttpEvent<any>>\r\n  ) {}\r\n\r\n  private signal = new ReplaySubject<{\r\n    type: QueuedRequestReleaseType,\r\n    reason?: string,\r\n  }>(1);\r\n\r\n  private wasReleased = false; // can only release once\r\n\r\n  /**\r\n   * The request as observable which will by handled by the next handler\r\n   * in the interceptor chain when the request is released.\r\n   */\r\n  // The signal subject emits once when the release method is called.\r\n  request$ = this.signal.pipe(\r\n    concatMap(({ type, reason }) => {\r\n      if (type === QueuedRequestReleaseType.Ok) {\r\n        return this.requestObservable;\r\n      } else {\r\n        // HttpErrorResponse with status 499 - Client Closed Request\r\n        // because the client never issued the request, for the given reason.\r\n        const errResponse = new HttpErrorResponse( {\r\n          status: 499, // non-standard nginx status code that means ...\r\n          statusText: 'Client Closed Request',\r\n          url: this.request.url,\r\n          error: reason\r\n        });\r\n        return throwError(errResponse);\r\n      }\r\n    })\r\n  );\r\n\r\n  /**\r\n   * If type is OK, release the request for processing as if it had just been issued.\r\n   * If not OK, cancel the request with the given reason as the error\r\n   * Can only release once. Subsequent calls are ignored.\r\n   * @param type Either the OK type or some kind of cancellation\r\n   * @param [reason]: The reason for cancellation, typically because the inflight request failed.\r\n   */\r\n  release(type: QueuedRequestReleaseType, reason?: string): void {\r\n    if (!this.wasReleased) {\r\n      this.wasReleased = true;\r\n      this.signal.next({type, reason});\r\n      this.signal.complete();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Queue requests such that only one qualifying request is inflight at a time.\r\n *\r\n * Puts an intercepted request into its private queue if the request is \"queuable\" and\r\n * there is already a queuable request inflight.\r\n *\r\n * When an inflight request responds successfully (or is unsubscribed before response),\r\n * it gets the next request from the queue and sends it to the next interceptor handler in the chain.\r\n *\r\n * If the inflight request failed, it passes the error response to the subscriber\r\n * and cancels all remaining queued requests with a 499 - Client Cancelled Request HttpErrorResponse\r\n * that explains the cause.\r\n *\r\n * If the app goes ready-only, it cancels all remaining queued requests with a 499\r\n * that explains this cause.\r\n */\r\n@Injectable() // do not use providedIn because multi-provided\r\nexport class QueuedRequestHttpInterceptor implements HttpInterceptor {\r\n\r\n  private inflight: HttpRequest<any>;\r\n  private requestQueue: QueuedRequest[] = [];\r\n\r\n  constructor(sessionService: SessionService) {\r\n    // No need to unsubscribe because interceptors never die.\r\n    sessionService.readOnly$.subscribe(\r\n      isReadOnly => {\r\n        if (isReadOnly) {\r\n          this.requestQueue.forEach(q => {\r\n            q.release(QueuedRequestReleaseType.Cancel, 'App became read-only');\r\n          });\r\n          this.requestQueue = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return requiresQueuing(req)\r\n      ? this.queueRequest(req, next)\r\n      : next.handle(req);\r\n  }\r\n\r\n  private queueRequest(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const q = new QueuedRequest(req, this.createQueuedRequestObservable(req, next));\r\n    if (this.inflight) {\r\n      this.requestQueue.push(q);\r\n    } else {\r\n      q.release(QueuedRequestReleaseType.Ok);\r\n    }\r\n    return q.request$;\r\n  }\r\n\r\n  private createQueuedRequestObservable(\r\n    /** Intercepted queued request */\r\n    req: HttpRequest<any>,\r\n    /** Angular HTTP interceptor handler from when the request was intercepted */\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return defer(() => {\r\n      this.inflight = req; // this request is now inflight.\r\n      let errMessage: string;\r\n\r\n      return next.handle(req).pipe(\r\n        tap(\r\n          null,\r\n          err => {\r\n            const reqDebug = req; // for debugging\r\n            errMessage = 'Unknown error'; // ensure there is an error message of some sort.\r\n            try {\r\n              if (err instanceof HttpErrorResponse) {\r\n                errMessage = ` status: ${err.status} - ${err.statusText}, message: \"${err.message}\"`;\r\n              } else {\r\n                errMessage = typeof err === 'string' ? err : 'unknown error';\r\n              }\r\n              errMessage = `${req.method.toUpperCase()} ${req.url} failed. ` + errMessage;\r\n            } catch (e) {}\r\n          }\r\n        ),\r\n        // Finalize ensures that queued requests are released even if\r\n        // the subscriber to this request unsubscribes from its observable\r\n        finalize(() => {\r\n          const reqDebug = req; // for debugging\r\n          if (errMessage) {\r\n            // Errant response to this request.\r\n            // Cancel remaining queued requests.\r\n            this.inflight = undefined;\r\n            try {\r\n              this.requestQueue.forEach(q => q.release(QueuedRequestReleaseType.Cancel, errMessage));\r\n            } catch (e) {\r\n              // ignore errors trying to release each queued request\r\n            } finally {\r\n              this.requestQueue = [];\r\n            }\r\n          } else {\r\n            // Response succeeded OR the request was unsubscribed before the server responded.\r\n            // Either way, take the next request from the front of the queue and process it.\r\n            const q = this.requestQueue.shift();\r\n            if (q) {\r\n              this.inflight = q.request;\r\n              q.release(QueuedRequestReleaseType.Ok);\r\n            } else {\r\n              this.inflight = undefined;\r\n            }\r\n          }\r\n        })\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Requests that require queuing and must wait until the inflight\r\n * request and previously queued requests have completed.\r\n */\r\nexport function requiresQueuing(req: HttpRequest<any>) {\r\n  const method = req.method.toUpperCase();\r\n  const url = req.url;\r\n\r\n  // All methods except GET and JSONP that are\r\n  // requests to eCommerce APIs (for now; expand later?).\r\n  // Certain kinds of requests such Tax API requests are NOT queued\r\n  return 'GET' !== method &&\r\n\r\n    (url.startsWith(environment.apiRoot) || url.startsWith(environment.spApiRoot)) &&\r\n\r\n    // POST to Tax Service API is actually a GET\r\n    !url.includes('/taxapi/') &&\r\n\r\n    // Rare and never queued.\r\n    method !== 'JSONP';\r\n}\r\n","import { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { defer, ReplaySubject, throwError } from 'rxjs';\nimport { concatMap, finalize, tap } from 'rxjs/operators';\nimport { environment } from '@environment';\nimport { SessionService } from '@session';\n/** INTERNAL - exported for testing */\nexport var QueuedRequestReleaseType;\n(function (QueuedRequestReleaseType) {\n    /** Proceed with handling the queued request */\n    QueuedRequestReleaseType[QueuedRequestReleaseType[\"Ok\"] = 0] = \"Ok\";\n    /** Cancel the queued request */\n    QueuedRequestReleaseType[QueuedRequestReleaseType[\"Cancel\"] = 1] = \"Cancel\";\n})(QueuedRequestReleaseType || (QueuedRequestReleaseType = {}));\n/**\n * INTERNAL - exported for testing\n * HTTP request whose execution is delayed until a previous inflight request completes\n */\nvar QueuedRequest = /** @class */ (function () {\n    function QueuedRequest(\n    /** Intercepted request that is queued because another queueable request is inflight */\n    request, \n    /** Request observable to return when and if this queued request is OK to release */\n    requestObservable) {\n        var _this = this;\n        this.request = request;\n        this.requestObservable = requestObservable;\n        this.signal = new ReplaySubject(1);\n        this.wasReleased = false; // can only release once\n        /**\n         * The request as observable which will by handled by the next handler\n         * in the interceptor chain when the request is released.\n         */\n        // The signal subject emits once when the release method is called.\n        this.request$ = this.signal.pipe(concatMap(function (_a) {\n            var type = _a.type, reason = _a.reason;\n            if (type === QueuedRequestReleaseType.Ok) {\n                return _this.requestObservable;\n            }\n            else {\n                // HttpErrorResponse with status 499 - Client Closed Request\n                // because the client never issued the request, for the given reason.\n                var errResponse = new HttpErrorResponse({\n                    status: 499,\n                    statusText: 'Client Closed Request',\n                    url: _this.request.url,\n                    error: reason\n                });\n                return throwError(errResponse);\n            }\n        }));\n    }\n    /**\n     * If type is OK, release the request for processing as if it had just been issued.\n     * If not OK, cancel the request with the given reason as the error\n     * Can only release once. Subsequent calls are ignored.\n     * @param type Either the OK type or some kind of cancellation\n     * @param [reason]: The reason for cancellation, typically because the inflight request failed.\n     */\n    QueuedRequest.prototype.release = function (type, reason) {\n        if (!this.wasReleased) {\n            this.wasReleased = true;\n            this.signal.next({ type: type, reason: reason });\n            this.signal.complete();\n        }\n    };\n    return QueuedRequest;\n}());\nexport { QueuedRequest };\n/**\n * Queue requests such that only one qualifying request is inflight at a time.\n *\n * Puts an intercepted request into its private queue if the request is \"queuable\" and\n * there is already a queuable request inflight.\n *\n * When an inflight request responds successfully (or is unsubscribed before response),\n * it gets the next request from the queue and sends it to the next interceptor handler in the chain.\n *\n * If the inflight request failed, it passes the error response to the subscriber\n * and cancels all remaining queued requests with a 499 - Client Cancelled Request HttpErrorResponse\n * that explains the cause.\n *\n * If the app goes ready-only, it cancels all remaining queued requests with a 499\n * that explains this cause.\n */\nvar QueuedRequestHttpInterceptor = /** @class */ (function () {\n    function QueuedRequestHttpInterceptor(sessionService) {\n        var _this = this;\n        this.requestQueue = [];\n        // No need to unsubscribe because interceptors never die.\n        sessionService.readOnly$.subscribe(function (isReadOnly) {\n            if (isReadOnly) {\n                _this.requestQueue.forEach(function (q) {\n                    q.release(QueuedRequestReleaseType.Cancel, 'App became read-only');\n                });\n                _this.requestQueue = [];\n            }\n        });\n    }\n    QueuedRequestHttpInterceptor.prototype.intercept = function (req, next) {\n        return requiresQueuing(req)\n            ? this.queueRequest(req, next)\n            : next.handle(req);\n    };\n    QueuedRequestHttpInterceptor.prototype.queueRequest = function (req, next) {\n        var q = new QueuedRequest(req, this.createQueuedRequestObservable(req, next));\n        if (this.inflight) {\n            this.requestQueue.push(q);\n        }\n        else {\n            q.release(QueuedRequestReleaseType.Ok);\n        }\n        return q.request$;\n    };\n    QueuedRequestHttpInterceptor.prototype.createQueuedRequestObservable = function (\n    /** Intercepted queued request */\n    req, \n    /** Angular HTTP interceptor handler from when the request was intercepted */\n    next) {\n        var _this = this;\n        return defer(function () {\n            _this.inflight = req; // this request is now inflight.\n            var errMessage;\n            return next.handle(req).pipe(tap(null, function (err) {\n                var reqDebug = req; // for debugging\n                errMessage = 'Unknown error'; // ensure there is an error message of some sort.\n                try {\n                    if (err instanceof HttpErrorResponse) {\n                        errMessage = \" status: \" + err.status + \" - \" + err.statusText + \", message: \\\"\" + err.message + \"\\\"\";\n                    }\n                    else {\n                        errMessage = typeof err === 'string' ? err : 'unknown error';\n                    }\n                    errMessage = req.method.toUpperCase() + \" \" + req.url + \" failed. \" + errMessage;\n                }\n                catch (e) { }\n            }), \n            // Finalize ensures that queued requests are released even if\n            // the subscriber to this request unsubscribes from its observable\n            finalize(function () {\n                var reqDebug = req; // for debugging\n                if (errMessage) {\n                    // Errant response to this request.\n                    // Cancel remaining queued requests.\n                    _this.inflight = undefined;\n                    try {\n                        _this.requestQueue.forEach(function (q) { return q.release(QueuedRequestReleaseType.Cancel, errMessage); });\n                    }\n                    catch (e) {\n                        // ignore errors trying to release each queued request\n                    }\n                    finally {\n                        _this.requestQueue = [];\n                    }\n                }\n                else {\n                    // Response succeeded OR the request was unsubscribed before the server responded.\n                    // Either way, take the next request from the front of the queue and process it.\n                    var q = _this.requestQueue.shift();\n                    if (q) {\n                        _this.inflight = q.request;\n                        q.release(QueuedRequestReleaseType.Ok);\n                    }\n                    else {\n                        _this.inflight = undefined;\n                    }\n                }\n            }));\n        });\n    };\n    return QueuedRequestHttpInterceptor;\n}());\nexport { QueuedRequestHttpInterceptor };\n/**\n * Requests that require queuing and must wait until the inflight\n * request and previously queued requests have completed.\n */\nexport function requiresQueuing(req) {\n    var method = req.method.toUpperCase();\n    var url = req.url;\n    // All methods except GET and JSONP that are\n    // requests to eCommerce APIs (for now; expand later?).\n    // Certain kinds of requests such Tax API requests are NOT queued\n    return 'GET' !== method &&\n        (url.startsWith(environment.apiRoot) || url.startsWith(environment.spApiRoot)) &&\n        // POST to Tax Service API is actually a GET\n        !url.includes('/taxapi/') &&\n        // Rare and never queued.\n        method !== 'JSONP';\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { combineLatest, EMPTY, Observable, throwError } from 'rxjs';\r\nimport { catchError, concatMap, first } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\nimport { SessionService } from '@session/session.service';\r\n\r\nimport { environment } from '@environment';\r\nimport { WellKnownRoutes } from '@core/well-known-routes';\r\n\r\n@Injectable() // do not use providedIn because multi-provided\r\nexport class AuthHttpInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private sessionService: SessionService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // add withCredentials to ensure that auth cookies are sent on CORS requests\r\n    req = req.clone({\r\n      withCredentials: true\r\n    });\r\n    if (req.url.startsWith(environment.apiRoot) || req.url.startsWith(environment.spApiRoot)) {\r\n      return combineLatest(\r\n        this.authService.accessToken$,\r\n        this.authService.oidcUser$,\r\n        this.sessionService.currentUserId$\r\n      ).pipe(\r\n        first(),\r\n        concatMap(([accessToken, oidcUser, currentUserId]) => {\r\n          if (accessToken) {\r\n            this.authService.logEvent(`AuthHttpInterceptor adding access token to HTTP request \"${req.url}\"`);\r\n            const headers: any = {\r\n              'Authorization': `Bearer ${accessToken}`\r\n            };\r\n            if (currentUserId) {\r\n              headers['X-Sp-Current-User-Id'] = currentUserId;\r\n            }\r\n            req = req.clone({ setHeaders: headers });\r\n          } else {\r\n            this.authService.logEvent(`AuthHttpInterceptor request to \"${req.url}\" untouched because no AuthService.accessToken.`);\r\n          }\r\n          return next.handle(req).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n              if (error && error.status === 401) {\r\n                let authFailRoute: string;\r\n                this.authService.onAuthError(`AuthHttpInterceptor HTTP auth-related error response, ${error.status}.`);\r\n\r\n                // Actual example: WWW-Authenticate: Bearer error=\"invalid_token\", error_description=\"The token is expired\"\r\n                const authResHeader = error.headers ? error.headers.get('WWW-Authenticate') : null;\r\n                if (/is expired/.test(authResHeader) || (oidcUser && oidcUser.expired)) {\r\n                  authFailRoute = WellKnownRoutes.SignedOut;\r\n                  const msg = `AuthHttpInterceptor: Token expired. WWW-Authenticate: ${authResHeader};\r\n                  re-routing to  ${authFailRoute} and signing in.`;\r\n                  this.authService.logEvent(msg);\r\n                  this.authService.signin();\r\n                } else {\r\n                  authFailRoute = WellKnownRoutes.AuthFailed;\r\n                  const authErrorMessage = authResHeader ? ` (WWW-Authenticate: \"${authResHeader}\")` : '';\r\n                  const msg = `AuthHttpInterceptor error:${authErrorMessage}. Re-routing to ${authFailRoute}.`;\r\n                  this.sessionService.logger.error(msg, error);\r\n                  this.authService.logEvent(msg);\r\n                }\r\n                this.router.navigate([authFailRoute]);\r\n                return EMPTY; // completes w/o calling next\r\n              } else {\r\n                return throwError(error);\r\n              }\r\n            })\r\n          );\r\n        })\r\n      );\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import { Router } from '@angular/router';\nimport { combineLatest, EMPTY, throwError } from 'rxjs';\nimport { catchError, concatMap, first } from 'rxjs/operators';\nimport { AuthService } from '@core/services/auth-services/auth.service';\nimport { SessionService } from '@session/session.service';\nimport { environment } from '@environment';\nimport { WellKnownRoutes } from '@core/well-known-routes';\nvar AuthHttpInterceptor = /** @class */ (function () {\n    function AuthHttpInterceptor(authService, sessionService, router) {\n        this.authService = authService;\n        this.sessionService = sessionService;\n        this.router = router;\n    }\n    AuthHttpInterceptor.prototype.intercept = function (req, next) {\n        var _this = this;\n        // add withCredentials to ensure that auth cookies are sent on CORS requests\n        req = req.clone({\n            withCredentials: true\n        });\n        if (req.url.startsWith(environment.apiRoot) || req.url.startsWith(environment.spApiRoot)) {\n            return combineLatest(this.authService.accessToken$, this.authService.oidcUser$, this.sessionService.currentUserId$).pipe(first(), concatMap(function (_a) {\n                var accessToken = _a[0], oidcUser = _a[1], currentUserId = _a[2];\n                if (accessToken) {\n                    _this.authService.logEvent(\"AuthHttpInterceptor adding access token to HTTP request \\\"\" + req.url + \"\\\"\");\n                    var headers = {\n                        'Authorization': \"Bearer \" + accessToken\n                    };\n                    if (currentUserId) {\n                        headers['X-Sp-Current-User-Id'] = currentUserId;\n                    }\n                    req = req.clone({ setHeaders: headers });\n                }\n                else {\n                    _this.authService.logEvent(\"AuthHttpInterceptor request to \\\"\" + req.url + \"\\\" untouched because no AuthService.accessToken.\");\n                }\n                return next.handle(req).pipe(catchError(function (error) {\n                    if (error && error.status === 401) {\n                        var authFailRoute = void 0;\n                        _this.authService.onAuthError(\"AuthHttpInterceptor HTTP auth-related error response, \" + error.status + \".\");\n                        // Actual example: WWW-Authenticate: Bearer error=\"invalid_token\", error_description=\"The token is expired\"\n                        var authResHeader = error.headers ? error.headers.get('WWW-Authenticate') : null;\n                        if (/is expired/.test(authResHeader) || (oidcUser && oidcUser.expired)) {\n                            authFailRoute = WellKnownRoutes.SignedOut;\n                            var msg = \"AuthHttpInterceptor: Token expired. WWW-Authenticate: \" + authResHeader + \";\\n                  re-routing to  \" + authFailRoute + \" and signing in.\";\n                            _this.authService.logEvent(msg);\n                            _this.authService.signin();\n                        }\n                        else {\n                            authFailRoute = WellKnownRoutes.AuthFailed;\n                            var authErrorMessage = authResHeader ? \" (WWW-Authenticate: \\\"\" + authResHeader + \"\\\")\" : '';\n                            var msg = \"AuthHttpInterceptor error:\" + authErrorMessage + \". Re-routing to \" + authFailRoute + \".\";\n                            _this.sessionService.logger.error(msg, error);\n                            _this.authService.logEvent(msg);\n                        }\n                        _this.router.navigate([authFailRoute]);\n                        return EMPTY; // completes w/o calling next\n                    }\n                    else {\n                        return throwError(error);\n                    }\n                }));\n            }));\n        }\n        else {\n            return next.handle(req);\n        }\n    };\n    return AuthHttpInterceptor;\n}());\nexport { AuthHttpInterceptor };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Provider } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { DefaultDataService, DefaultDataServiceConfig, HttpUrlGenerator } from 'ngrx-data';\n/**\n * A basic, generic entity data service suitable for persistence of most entities.\n * Overrides selected features of ngrx-data/DefaultDataService\n */\nvar SpEntityCollectionDataService = /** @class */ (function (_super) {\n    __extends(SpEntityCollectionDataService, _super);\n    function SpEntityCollectionDataService(entityName, http, httpUrlGenerator, config) {\n        var _this = _super.call(this, entityName, http, httpUrlGenerator, config) || this;\n        _this.http = http;\n        _this.httpUrlGenerator = httpUrlGenerator;\n        return _this;\n    }\n    // TODO: Remove once the server APIs are fixed.\n    SpEntityCollectionDataService.prototype.getById = function (key) {\n        var _this = this;\n        return _super.prototype.getById.call(this, key).pipe(map(function (data) {\n            if (Array.isArray(data)) {\n                // Server returned array, which it shouldn't.\n                if (data.length === 1) {\n                    return data[0];\n                }\n                else if (data.length === 0) {\n                    throw new HttpErrorResponse({\n                        status: 404,\n                        statusText: 'Not Found',\n                    });\n                }\n                else {\n                    throw new HttpErrorResponse({\n                        status: 500,\n                        statusText: 'Internal Server Error',\n                        error: \"Returned \" + data.length + \" \" + _this.entityName + \" items\"\n                    });\n                }\n            }\n            else {\n                return data;\n            }\n        }));\n    };\n    return SpEntityCollectionDataService;\n}(DefaultDataService));\nexport { SpEntityCollectionDataService };\n/**\n * Create a generic entity data service for SP.\n * Suitable for persistence of most entities.\n * Replaces ngrx-data/DefaultDataServiceFactory\n */\nvar SpEntityCollectionDataServiceFactory = /** @class */ (function () {\n    function SpEntityCollectionDataServiceFactory(http, httpUrlGenerator, config) {\n        this.http = http;\n        this.httpUrlGenerator = httpUrlGenerator;\n        this.config = config;\n        config = config || {};\n        httpUrlGenerator.registerHttpResourceUrls(config.entityHttpResourceUrls);\n    }\n    /**\n     * Create a default {EntityCollectionDataService} for the given entity type\n     * @param entityName {string} Name of the entity type for this data service\n     */\n    SpEntityCollectionDataServiceFactory.prototype.create = function (entityName) {\n        return new SpEntityCollectionDataService(entityName, this.http, this.httpUrlGenerator, this.config);\n    };\n    return SpEntityCollectionDataServiceFactory;\n}());\nexport { SpEntityCollectionDataServiceFactory };\nexport var defaultDataServiceProvider = {\n    provide: DefaultDataService, useClass: SpEntityCollectionDataServiceFactory\n};\n","import { Injectable, Optional, Provider } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { DefaultDataService, DefaultDataServiceFactory, DefaultDataServiceConfig, HttpUrlGenerator } from 'ngrx-data';\r\n\r\n/**\r\n * A basic, generic entity data service suitable for persistence of most entities.\r\n * Overrides selected features of ngrx-data/DefaultDataService\r\n */\r\nexport class SpEntityCollectionDataService<T> extends DefaultDataService<T> {\r\n\r\n  constructor(\r\n    entityName: string,\r\n    protected http: HttpClient,\r\n    protected httpUrlGenerator: HttpUrlGenerator,\r\n    config?: DefaultDataServiceConfig\r\n  ) {\r\n    super(entityName, http, httpUrlGenerator, config);\r\n  }\r\n\r\n  // TODO: Remove once the server APIs are fixed.\r\n  getById(key: number | string): Observable<T> {\r\n    return super.getById(key).pipe(\r\n      map(data => {\r\n        if (Array.isArray(data)) {\r\n          // Server returned array, which it shouldn't.\r\n          if (data.length === 1) {\r\n            return data[0];\r\n          } else if (data.length === 0) {\r\n            throw new HttpErrorResponse({\r\n              status: 404,\r\n              statusText: 'Not Found',\r\n            });\r\n          } else {\r\n            throw new HttpErrorResponse({\r\n              status: 500,\r\n              statusText: 'Internal Server Error',\r\n              error: `Returned ${data.length} ${this.entityName} items`\r\n            });\r\n          }\r\n\r\n        } else {\r\n          return data;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Create a generic entity data service for SP.\r\n * Suitable for persistence of most entities.\r\n * Replaces ngrx-data/DefaultDataServiceFactory\r\n */\r\n@Injectable()\r\nexport class SpEntityCollectionDataServiceFactory implements Partial<DefaultDataServiceFactory> {\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected httpUrlGenerator: HttpUrlGenerator,\r\n    @Optional() protected config?: DefaultDataServiceConfig\r\n  ) {\r\n    config = config || {};\r\n    httpUrlGenerator.registerHttpResourceUrls(config.entityHttpResourceUrls);\r\n  }\r\n\r\n  /**\r\n   * Create a default {EntityCollectionDataService} for the given entity type\r\n   * @param entityName {string} Name of the entity type for this data service\r\n   */\r\n  create<T>(entityName: string): SpEntityCollectionDataService<T> {\r\n    return new SpEntityCollectionDataService<T>(entityName, this.http, this.httpUrlGenerator, this.config);\r\n  }\r\n}\r\n\r\nexport const defaultDataServiceProvider: Provider = {\r\n  provide: DefaultDataService, useClass: SpEntityCollectionDataServiceFactory\r\n};\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nfunction padNumber(value) {\n    if (isNumber(value)) {\n        return (\"0\" + value).slice(-2);\n    }\n    else {\n        return '';\n    }\n}\nfunction isNumber(value) {\n    return !isNaN(toInteger(value));\n}\nfunction toInteger(value) {\n    return parseInt(\"\" + value, 10);\n}\nvar DateParserFormatter = /** @class */ (function (_super) {\n    __extends(DateParserFormatter, _super);\n    function DateParserFormatter() {\n        var _this = _super.call(this) || this;\n        _this.yearAddition = 0;\n        _this.mask = 'MM/dd/yyyy';\n        _this.separator = _this.mask.indexOf('-') >= 0 ? '-' : _this.mask.indexOf('.') >= 0 ? '.' : '/';\n        var part = _this.mask.split(_this.separator);\n        _this.dayIndex = part.indexOf('dd');\n        _this.monthIndex = part.indexOf('MM');\n        _this.yearIndex = part.indexOf('yyyy');\n        if (_this.yearIndex < 0) {\n            _this.yearIndex = part.indexOf('yy');\n            _this.yearAddition = 2000;\n        }\n        return _this;\n    }\n    Object.defineProperty(DateParserFormatter.prototype, \"Mask\", {\n        set: function (value) {\n            this.mask = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DateParserFormatter.prototype.parse = function (value) {\n        if (value) {\n            value = value.replace(/\\.|\\/|-/g, this.separator);\n            var dateParts = value.trim().split(this.separator);\n            if (dateParts.length !== 3) {\n                return { year: 0, month: 0, day: 0 };\n            }\n            var parsedYear = 0;\n            var parsedMonth = 0;\n            var parsedDay = 0;\n            var today = new Date();\n            if (isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                parsedDay = this.dayIndex === 0 ? toInteger(dateParts[0])\n                    : this.dayIndex === 1 ? toInteger(dateParts[1])\n                        : this.dayIndex === 2 ? toInteger(dateParts[2]) : 0;\n                parsedMonth = this.monthIndex === 0 ? toInteger(dateParts[0])\n                    : this.monthIndex === 1 ? toInteger(dateParts[1])\n                        : this.monthIndex === 2 ? toInteger(dateParts[2]) : 0;\n                parsedYear = this.yearIndex === 0 ? (dateParts[0].length < 2) ? 0\n                    : toInteger(dateParts[0]) + this.yearAddition\n                    : this.yearIndex === 1 ? (dateParts[1].length < 2) ? 0\n                        : toInteger(dateParts[1]) + this.yearAddition\n                        : this.yearIndex === 2 ? (dateParts[2].length < 2) ? 0\n                            : toInteger(dateParts[2]) + this.yearAddition : 0;\n            }\n            if (parsedDay === 0 || parsedMonth === 0 || parsedYear === 0) {\n                return { year: 0, month: 0, day: 0 };\n            }\n            if (parsedYear < 100) {\n                parsedYear = 2000 + parsedYear;\n            }\n            return { year: parsedYear, month: parsedMonth, day: parsedDay };\n        }\n        return { year: 0, month: 0, day: 0 };\n    };\n    DateParserFormatter.prototype.format = function (date) {\n        var stringDate = '';\n        if (date) {\n            var stringDay = isNumber(date.day) ? padNumber(date.day) : '';\n            var stringMonth = isNumber(date.month) ? padNumber(date.month) : '';\n            var stringYear = isNumber(date.year) ? (date.year - this.yearAddition).toString() : '';\n            stringDate = (stringDay) ? this.mask.replace('dd', stringDay)\n                : this.dayIndex === 0 ? this.mask.replace('dd' + this.separator, '')\n                    : this.mask.replace(this.separator + 'dd', '');\n            stringDate = (stringMonth) ? stringDate.replace('MM', stringMonth)\n                : this.monthIndex === 0 ? stringDate.replace('MM' + this.separator, '')\n                    : stringDate.replace(this.separator + 'MM', '');\n            if (this.yearAddition) {\n                stringDate = (stringDay) ? stringDate.replace('yy', stringYear)\n                    : this.yearIndex === 0 ? stringDate.replace('yy' + this.separator, '')\n                        : stringDate.replace(this.separator + 'yy', '');\n            }\n            else {\n                stringDate = (stringDay) ? stringDate.replace('yyyy', stringYear)\n                    : this.yearIndex === 0 ? stringDate.replace('yyyy' + this.separator, '')\n                        : stringDate.replace(this.separator + 'yyyy', '');\n            }\n        }\n        return stringDate;\n    };\n    return DateParserFormatter;\n}(NgbDateParserFormatter));\nexport { DateParserFormatter };\n","import { Injectable, Inject } from '@angular/core';\r\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nfunction padNumber(value: number) {\r\n    if (isNumber(value)) {\r\n        return `0${value}`.slice(-2);\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n\r\nfunction isNumber(value: any): boolean {\r\n    return !isNaN(toInteger(value));\r\n}\r\n\r\nfunction toInteger(value: any): number {\r\n    return parseInt(`${value}`, 10);\r\n}\r\n@Injectable()\r\nexport class DateParserFormatter extends NgbDateParserFormatter {\r\n\r\n    separator: string;\r\n    dayIndex: number;\r\n    monthIndex: number;\r\n    yearIndex: number;\r\n    yearAddition = 0;\r\n    mask = 'MM/dd/yyyy';\r\n\r\n    set Mask(value: string) {\r\n        this.mask = value;\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.separator = this.mask.indexOf('-') >= 0 ? '-' : this.mask.indexOf('.') >= 0 ? '.' : '/';\r\n        const part = this.mask.split(this.separator);\r\n        this.dayIndex = part.indexOf('dd');\r\n        this.monthIndex = part.indexOf('MM');\r\n        this.yearIndex = part.indexOf('yyyy');\r\n        if (this.yearIndex < 0) {\r\n            this.yearIndex = part.indexOf('yy');\r\n            this.yearAddition = 2000;\r\n        }\r\n    }\r\n    parse(value: string): NgbDateStruct {\r\n        if (value) {\r\n            value = value.replace(/\\.|\\/|-/g, this.separator);\r\n            const dateParts = value.trim().split(this.separator);\r\n            if (dateParts.length !== 3) {\r\n                return { year: 0, month: 0, day: 0 };\r\n            }\r\n            let parsedYear = 0;\r\n            let parsedMonth = 0;\r\n            let parsedDay = 0;\r\n            const today = new Date();\r\n            if (isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n                parsedDay = this.dayIndex === 0 ? toInteger(dateParts[0])\r\n                    : this.dayIndex === 1 ? toInteger(dateParts[1])\r\n                    : this.dayIndex === 2 ? toInteger(dateParts[2]) : 0;\r\n                parsedMonth = this.monthIndex === 0 ? toInteger(dateParts[0])\r\n                    : this.monthIndex === 1 ? toInteger(dateParts[1])\r\n                    : this.monthIndex === 2 ? toInteger(dateParts[2]) : 0;\r\n                parsedYear = this.yearIndex === 0 ? (dateParts[0].length < 2) ? 0\r\n                    : toInteger(dateParts[0]) + this.yearAddition\r\n                    : this.yearIndex === 1 ? (dateParts[1].length < 2) ? 0\r\n                    : toInteger(dateParts[1]) + this.yearAddition\r\n                    : this.yearIndex === 2 ? (dateParts[2].length < 2) ? 0\r\n                    : toInteger(dateParts[2]) + this.yearAddition : 0;\r\n            }\r\n            if (parsedDay === 0 || parsedMonth === 0 || parsedYear === 0) {\r\n                return { year: 0, month: 0, day: 0 };\r\n            }\r\n\r\n            if (parsedYear < 100) {\r\n                parsedYear = 2000 + parsedYear;\r\n            }\r\n\r\n            return { year: parsedYear, month: parsedMonth, day: parsedDay };\r\n        }\r\n        return { year: 0, month: 0, day: 0 };\r\n    }\r\n\r\n    format(date: NgbDateStruct): string {\r\n        let stringDate = '';\r\n        if (date) {\r\n            const stringDay = isNumber(date.day) ? padNumber(date.day) : '';\r\n            const stringMonth = isNumber(date.month) ? padNumber(date.month) : '';\r\n            const stringYear = isNumber(date.year) ? (date.year - this.yearAddition).toString() : '';\r\n            stringDate = (stringDay) ? this.mask.replace('dd', stringDay)\r\n            : this.dayIndex === 0 ? this.mask.replace('dd' + this.separator, '')\r\n            : this.mask.replace(this.separator + 'dd', '');\r\n            stringDate = (stringMonth) ? stringDate.replace('MM', stringMonth)\r\n            : this.monthIndex === 0 ? stringDate.replace('MM' + this.separator, '')\r\n            : stringDate.replace(this.separator + 'MM', '');\r\n            if (this.yearAddition) {\r\n                stringDate = (stringDay) ? stringDate.replace('yy', stringYear)\r\n                : this.yearIndex === 0 ? stringDate.replace('yy' + this.separator, '')\r\n                : stringDate.replace(this.separator + 'yy', '');\r\n            } else {\r\n                stringDate = (stringDay) ? stringDate.replace('yyyy', stringYear)\r\n                : this.yearIndex === 0 ? stringDate.replace('yyyy' + this.separator, '')\r\n                : stringDate.replace(this.separator + 'yyyy', '');\r\n            }\r\n        }\r\n        return stringDate;\r\n    }\r\n}\r\n","import { User as OidcUser } from 'oidc-client';\r\nimport { MockOidcManager } from './mock-oidc-manager';\r\nimport { OidcManager } from '@core/services/auth-services/oidc-manager';\r\n\r\n/**\r\n * Proxy for the active oidc-client \"UserManager\"\r\n * containing both a real and mock version.\r\n * Can switch between them.\r\n */\r\nexport class OidcManagerProxy implements OidcManager {\r\n  constructor(\r\n    private mockOidcManager: MockOidcManager,\r\n    private realOidcManager: OidcManager\r\n  ) {\r\n    this.proxy = mockOidcManager ;\r\n  }\r\n  proxy: OidcManager;\r\n\r\n  clearStaleState(): Promise<void> {\r\n    return this.proxy.clearStaleState();\r\n  }\r\n  getUser(): Promise<OidcUser> {\r\n    return this.proxy.getUser();\r\n  }\r\n  signinRedirect(): Promise<any> {\r\n    return this.proxy.signinRedirect();\r\n  }\r\n  signoutRedirect(): Promise<any> {\r\n    return this.proxy.signoutRedirect();\r\n  }\r\n\r\n  signinRedirectCallback(data?: any): Promise<OidcUser> {\r\n    return this.proxy.signinRedirectCallback(data);\r\n  }\r\n\r\n  get isMock() {\r\n    return this.proxy === this.mockOidcManager;\r\n  }\r\n\r\n  /** Switch to the mock oidc-client UserManager */\r\n  useMock() {\r\n    return this.proxy = this.mockOidcManager;\r\n  }\r\n\r\n  /** Switch to the real oidc-client UserManager */\r\n  useReal() {\r\n    return this.proxy = this.realOidcManager;\r\n  }\r\n}\r\n","/**\n * Proxy for the active oidc-client \"UserManager\"\n * containing both a real and mock version.\n * Can switch between them.\n */\nvar OidcManagerProxy = /** @class */ (function () {\n    function OidcManagerProxy(mockOidcManager, realOidcManager) {\n        this.mockOidcManager = mockOidcManager;\n        this.realOidcManager = realOidcManager;\n        this.proxy = mockOidcManager;\n    }\n    OidcManagerProxy.prototype.clearStaleState = function () {\n        return this.proxy.clearStaleState();\n    };\n    OidcManagerProxy.prototype.getUser = function () {\n        return this.proxy.getUser();\n    };\n    OidcManagerProxy.prototype.signinRedirect = function () {\n        return this.proxy.signinRedirect();\n    };\n    OidcManagerProxy.prototype.signoutRedirect = function () {\n        return this.proxy.signoutRedirect();\n    };\n    OidcManagerProxy.prototype.signinRedirectCallback = function (data) {\n        return this.proxy.signinRedirectCallback(data);\n    };\n    Object.defineProperty(OidcManagerProxy.prototype, \"isMock\", {\n        get: function () {\n            return this.proxy === this.mockOidcManager;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Switch to the mock oidc-client UserManager */\n    OidcManagerProxy.prototype.useMock = function () {\n        return this.proxy = this.mockOidcManager;\n    };\n    /** Switch to the real oidc-client UserManager */\n    OidcManagerProxy.prototype.useReal = function () {\n        return this.proxy = this.realOidcManager;\n    };\n    return OidcManagerProxy;\n}());\nexport { OidcManagerProxy };\n","import { Injectable } from '@angular/core';\r\nimport { User as OidcUser, UserManager } from 'oidc-client';\r\n\r\nimport { MockOidcManager } from './mock-oidc-manager';\r\nimport { OidcManager } from '@core/services/auth-services/oidc-manager';\r\nimport { oidcManagerConfig } from '@core/services/auth-services/oidc-manager-config';\r\nimport { OidcManagerProxy } from './mock-oidc-manager-proxy';\r\nimport { OidcManagerFactory } from '@core/services/auth-services/oidc-manager-factory';\r\n\r\n@Injectable() // provided explicitly by MockAuthModule\r\nexport class MockOidcManagerFactory implements OidcManagerFactory {\r\n\r\n  // N.B.: Cannot inject AuthService because AuthServices injects this class (indirectly).\r\n\r\n  /** Inject mock version of the oidc-client manager */\r\n  constructor(private mockOidcManager: MockOidcManager) { }\r\n\r\n  public proxy: OidcManagerProxy;\r\n\r\n  /** Create a proxy oidc-client UserManager that can switch between real and mock version */\r\n  create(): OidcManager {\r\n    const realOidcManager = new UserManager(oidcManagerConfig);\r\n    this.proxy = new OidcManagerProxy(this.mockOidcManager, realOidcManager);\r\n    return this.proxy;\r\n  }\r\n\r\n  /** Switch to the mock oidc-client UserManager */\r\n  useMock() {\r\n    this.proxy.useMock();\r\n  }\r\n\r\n  /** Switch to the real oidc-client UserManager */\r\n  useReal() {\r\n    this.proxy.useReal();\r\n  }\r\n}\r\n","/**\r\n * User data for creating a MockOidcUser\r\n */\r\nexport interface MockOidcUserData {\r\n  sub?: string;\r\n  email?: string;\r\n  role?: string;\r\n  username: string;\r\n}\r\n\r\n/**\r\n * Well known mock oidc-users\r\n */\r\n// tslint:disable:quotemark\r\n export const mockOidcUserData: MockOidcUserData[] = [\r\n  {\r\n    \"sub\": \"SurePayroll:smartypants\",\r\n    \"email\": \"m.smart@maxsmart.com\",\r\n    \"role\": \"Approver\",\r\n    \"username\": \"smartypants\"\r\n  },\r\n  {\r\n    \"sub\": \"SurePayroll:550738\",\r\n    \"email\": \"d.asher@maxsmart.com\",\r\n    \"role\": \"Approver\",\r\n    \"username\": \"davidasher\"\r\n  },\r\n  {\r\n    \"sub\": \"SurePayrollNewCust:926717\",\r\n    \"email\": \"m.moose@bullmoose.com\",\r\n    \"role\": \"Approver\",\r\n    \"username\": \"zombie088\",\r\n  },\r\n  {\r\n    \"sub\": \"SurePayroll:2955390\",\r\n    \"email\": \"s.fixit@surepayroll.com\",\r\n    \"username\": \"2am73p\",\r\n    \"role\": \"Administrator\",\r\n  },\r\n  // Ima is deliberately NOT a user in the data\r\n  // Use her to validate the authenticated-user-not-in-ecommerce scenario.\r\n  {\r\n    \"sub\": \"SurePayroll:00000\",\r\n    \"email\": \"ima.lost@surepayroll.com\",\r\n    \"username\": \"imalost\",\r\n    \"role\": \"Approver\",\r\n  }\r\n];\r\n","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { environment } from '@environment';\nimport { mockOidcUserData } from './mock-oidc-user-data';\nimport { subPrefix } from '../signup/signup.service';\nvar default_scope = 'document enrollment enrollment_api openid profile role permission';\nvar fixed_session_state = 'lo70JbROwyGbU35ndfehFr2bfHLoy2t1PwHhU1FGaPo.8553c24b2a45ea16d18ea2dde0691e56';\nvar MockOidcUser = /** @class */ (function () {\n    function MockOidcUser(jwtService, userData) {\n        this.isMockOidcUser = true;\n        this.session_state = fixed_session_state;\n        this.token_type = 'Bearer';\n        this.scope = environment.oidcScope;\n        if (userData.isMockOidcUser) {\n            this.createFromOidcUser(userData);\n        }\n        else {\n            this.createFromUserData(jwtService, userData);\n        }\n    }\n    MockOidcUser.prototype.createFromOidcUser = function (user) {\n        var profile = user.profile;\n        if (!profile || !profile.sub) {\n            throw new Error('Tried to create OidcUser from bad MockOidcUser source');\n        }\n        this.id_token = user.id_token;\n        this.session_state = user.session_state;\n        this.access_token = user.access_token;\n        this.token_type = user.token_type;\n        this.scope = user.scope;\n        this.profile = profile;\n        this.expires_at = user.expires_at;\n        this.state = user.state;\n        this.username = user.username;\n    };\n    MockOidcUser.prototype.createFromUserData = function (jwtService, data) {\n        var username = data.username, role = data.role, email = data.email;\n        var sub = createMockSub(username);\n        // Use user data from well know source if found\n        var known = mockOidcUserData.find(function (d) { return d.sub === sub || d.username === username; });\n        if (known) {\n            (sub = known.sub, username = known.username, role = known.role, email = known.email);\n        }\n        this.id_token = createMockIdToken(jwtService, sub);\n        this.access_token = createMockAccessToken(jwtService, sub, username, role, email);\n        this.expires_at = jwtExpire();\n        this.profile = createProfile(sub, username, role);\n    };\n    Object.defineProperty(MockOidcUser.prototype, \"expires_in\", {\n        get: function () {\n            return Math.max(0, this.expires_at - Math.floor(Date.now() / 1000));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MockOidcUser.prototype, \"expired\", {\n        get: function () {\n            return this.expires_in <= 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MockOidcUser.prototype, \"scopes\", {\n        get: function () {\n            return this.scope.split(' ');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MockOidcUser.prototype.toStorageString = function () {\n        return MockOidcUser.oidcStorageKey;\n    };\n    // Where we stash the current OIDC user in browser storage\n    MockOidcUser.oidcStorageKey = 'oidc.user:mock-oidc-user';\n    return MockOidcUser;\n}());\nexport { MockOidcUser };\n// #region prototype data\n// tslint:disable:quotemark\n// tslint:disable:max-line-length\n// \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkU0QUQxN0I0N0MxOUY3NTlDN0JBQTgwREEzMEQxN0M1QjlDMjI3NTUiLCJ0eXAiOiJKV1QiLCJ4NXQiOiI1SzBYdEh3Wjkxbkh1cWdOb3cwWHhibkNKMVUifQ.eyJuYmYiOjE1MzIxMjkwMjYsImV4cCI6MTUzMjEzMjYyNiwiaXNzIjoiaHR0cHM6Ly9kZXZpZGVudGl0eS5zdXJlcGF5cm9sbC5jb20iLCJhdWQiOlsiaHR0cHM6Ly9kZXZpZGVudGl0eS5zdXJlcGF5cm9sbC5jb20vcmVzb3VyY2VzIiwidHJ5b3V0IiwidHJ5b3V0X2FwaSJdLCJjbGllbnRfaWQiOiJqc190cnlvdXRfYXBpIiwic3ViIjoiU3VyZVBheXJvbGw6NTUwNzM4IiwiYXV0aF90aW1lIjoxNTMyMTE1MzM4LCJpZHAiOiJsb2NhbCIsImVtYWlsIjoiVGVzdEBEZXZNYWlsLnN1cmVwYXlyb2xsLmxvY2FsIiwicm9sZSI6WyJBZG1pbmlzdHJhdG9yIiwiRW1wbG95ZWUiLCJBcHByb3ZlciIsIkFwcHJvdmVyIiwiRW1wbG95ZWUiLCJFeGVjdXRpdmUiXSwicGVybWlzc2lvbiI6InVua25vd24iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIiwicm9sZSIsInBlcm1pc3Npb24iLCJ0cnlvdXQiLCJ0cnlvdXRfYXBpIl0sImFtciI6WyJwd2QiXX0.NhPs1daqPmvHAOHoTmKLI8PMEnK42o-L6bs1QBiIQROLVfFHby_Oot8YIllAdBI8hN0x9K3o9F4tFYjJXMdsAbpJdnVVqGQfT9cELhnoi6g2PmhZOJMZvSo0tWm7_y_6Klu-p8XQjLTNIGU277Y8pnw6cerwO6FieZW5uMo_1kPclcKvOyBGJQXiRGBT5aRA2OhvygA6b8dfc1lx_iZZy_32j3V4Dla_Xs55lmmBqUSghaxxL12sd9AbOIMD-bKvfEUX6OQ-Q8en17saO4_gkF-mdsUPwNXdg67smuSUMqfAJ7fsPhcmWEd20ni3feG1ndaEHIen5ARFqi9nDaPMPObyK5ywKfm00UGsVWd2YtW0f0RBA-e53br9W0V4yGegEUw4Z97sVEk4bOGwKTHLHoLDN3lUjD5hap804N3zdJGPoSXpyHbQ7CPH76qPNfDMM2Ib_o3LrMxmXcqAC3PffUMd3iX3qb6d6835IqV10prOKuHuo_QiZPAd-rHXYamiLRR-sV5H3m2wbx6CWbJoVUjoZoOoxJJ15QHQCZEgcGhKN9TfiqCFbo-kFRtmh3xFAeVX8rTjPKwrF0W3B05piNbD8fDGZMiUkvSLEFL86dH1zEGAZctsTsobPhRtMoprZKzfBRmkhH0mIguo7hlaCGlUtkkFtxbJ-7T1aNoDJuE\"\n/** Example AccessToken from the web */\nvar accessTokenPrototype = {\n    \"nbf\": 1532115339,\n    \"exp\": 1532118939,\n    \"iss\": \"https://devidentity.surepayroll.com\",\n    \"aud\": [\n        \"https://devidentity.surepayroll.com/resources\",\n        \"ecommerce\"\n    ],\n    \"client_id\": \"ecommerce\",\n    \"sub\": \"SurePayroll:550738\",\n    \"auth_time\": 1532115338,\n    \"idp\": \"local\",\n    \"email\": \"Test@DevMail.surepayroll.local\",\n    \"role\": [\n        \"Approver\",\n        \"Executive\"\n    ],\n    \"permission\": \"unknown\",\n    \"scope\": [\n        \"document\",\n        \"enrollment\",\n        \"enrollment_api\",\n        \"openid\",\n        \"profile\",\n        \"role\",\n        \"permission\"\n    ],\n    \"amr\": [\n        \"pwd\"\n    ]\n};\n// \"id_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkU0QUQxN0I0N0MxOUY3NTlDN0JBQTgwREEzMEQxN0M1QjlDMjI3NTUiLCJ0eXAiOiJKV1QiLCJ4NXQiOiI1SzBYdEh3Wjkxbkh1cWdOb3cwWHhibkNKMVUifQ.eyJuYmYiOjE1MzIxMjkwMjYsImV4cCI6MTUzMjEyOTMyNiwiaXNzIjoiaHR0cHM6Ly9kZXZpZGVudGl0eS5zdXJlcGF5cm9sbC5jb20iLCJhdWQiOiJqc190cnlvdXRfYXBpIiwibm9uY2UiOiJjYTRiOTM1Y2JkNDE0ZmRmYjAyMTVjYzQ0ZTU3YTRhYyIsImlhdCI6MTUzMjEyOTAyNiwiYXRfaGFzaCI6InY2MG9zY2RUT2hxZHBRMjdEajVxT2ciLCJzaWQiOiI4YzY3ZGRkOWI3NTg4ZmM5YTM3Y2IzZmUxNDQ3ZjljZCIsInN1YiI6IlN1cmVQYXlyb2xsOjU1MDczOCIsImF1dGhfdGltZSI6MTUzMjExNTMzOCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.nTiCcfd0-gyHP4_xZNtA21orsir2Sgb5AcHPK2nrlA-SINQum72SMonCPTM75F65BWo0dgCA1sSZivPD-1iOGe_qEmwBVyXp9DP1LURJxBaYOWK5arICE52_cpRm9rd3wn9toGq7ynAustBVGK_DACRtjMDFhcIYShPOywiCTBOU43vXc-nBoriSs-dkpqVpsRI-1GDy-3oU1QGVgF-sdE7oFJX9P_niLfrBkt0BHLWUIu0P4jma5rudTySWSwJUycrecfueDOUx0wvmnmFTCdIlTeiajKLt8kWB81kVVNVqx_OxkFMK5AM03NUFU09dg1Vf0A5_9YtKkkmTRXldoCkirzG8MX_6MvIvv-WUJHrLqvKGO6HP16hSzfGCOWJDfycGuoqYIpsWTvt7_IiEEf8YqAb3lpsutmmQa_yeIl_aXaXN0mcBep5v7vOc43dSEwUUZvjfddK2yVN-YMWnyHCfOO5xCz0195UGUCRBfYIRgxnPrT_pq9FIn4eLvvu1FGEZzfi5toiss0XAK1z7oxHiyYbs-zi0PiCCmL9a1bRaGGJ--4e0nOArcZW1V-T1Gc7Pckm-A2dn8_miWl7hALrfeIQyvaGIJEBC5375LM9e-yqe5uE12LasvgqRDRcZrXGKy8bKKDfwB8zwJKnGCP2SPR_OlZlHOyaSA2GcaHs\",\n/** Example IdentityToken data from the web */\nvar identityTokenPrototype = {\n    \"nbf\": 1532129026,\n    \"exp\": 1532129326,\n    \"iss\": \"https://devidentity.surepayroll.com\",\n    \"aud\": \"js_tryout_api\",\n    \"nonce\": \"ca4b935cbd414fdfb0215cc44e57a4ac\",\n    \"iat\": 1532129026,\n    // \"at_hash\": \"v60oscdTOhqdpQ27Dj5qOg\", // Bet this is AccessToken hash. Don't do try it.\n    \"sid\": \"8c67ddd9b7588fc9a37cb3fe1447f9cd\",\n    \"sub\": \"SurePayroll:550738\",\n    \"auth_time\": 1532115338,\n    \"idp\": \"local\",\n    \"amr\": [\n        \"pwd\"\n    ]\n};\nvar profilePrototype = {\n    \"sid\": \"8c67ddd9b7588fc9a37cb3fe1447f9cd\",\n    \"sub\": \"SurePayroll:550738\",\n    \"auth_time\": 1532115338,\n    \"idp\": \"local\",\n    \"amr\": [\n        \"pwd\"\n    ],\n    \"preferred_username\": \"davidasher\",\n    \"family_name\": \"\",\n    \"given_name\": \"\",\n    \"role\": [\n        \"Executive\",\n        \"Approver\"\n    ],\n    \"permission\": \"unknown\"\n};\n// tslint:enable:quotemark\n// tslint:enable:max-line-length\n// #endregion prototype data\n// #region helper fns\n/**\n * Create JWT Identity Token.\n * This mock creates one from a username by our mocking convention.\n */\nexport function createMockIdToken(jwtService, sub) {\n    var data = __assign({}, identityTokenPrototype, { sub: sub, nbf: jwtDate() - 60, exp: jwtExpire() });\n    return jwtService.createJwt(data);\n}\n/**\n * Create JWT Access Token.\n * This mock creates one from a username using our mocking convention.\n * @param username\n * @param [role] a string of one or more, space-separated, roles.\n * @param [email] user's email address\n */\nexport function createMockAccessToken(jwtService, sub, username, role, email) {\n    var roleArray = role ? role.trim().split(' ') : accessTokenPrototype.role;\n    var data = __assign({}, accessTokenPrototype, { sub: sub, nbf: jwtDate() - 60, exp: jwtExpire(), iat: jwtDate(), email: email || accessTokenPrototype.email, role: roleArray });\n    return jwtService.createJwt(data);\n}\n/**\n * Create the (sub)ject, which is the permanent, cross-SP app identifier.\n * This mock creates one from a username by our mocking convention.\n */\nexport function createMockSub(username) {\n    return subPrefix + ((username || '').trim() || generateSubKey());\n}\n/**\n * Create an SP profile with a sub, username and role\n * @param [sub] The \"Subject\" id; if missing, will create one\n * @param [username] with which the user signed in, used to create the sub if necessary.\n * @param [role] a string of one or more, space-separated, roles.\n */\nexport function createProfile(sub, username, role) {\n    var roleArray = role ? role.trim().split(' ') : profilePrototype.role;\n    return __assign({}, profilePrototype, { sub: sub || createMockSub(username), preferred_username: username, role: roleArray });\n}\n/** Generate a pseudo-random SP sub key for mocking purposes */\nexport function generateSubKey() {\n    return (Math.floor(Math.random() * 100000) + '01234').substr(0, 5);\n}\n/** return the date/time value in a JWT (it's in seconds)  */\nexport function jwtDate(date) {\n    var value = date ? date.valueOf() : Date.now();\n    return Math.floor(value / 1000);\n}\nexport function jwtExpire(date, addHours) {\n    return jwtDate(date) + (addHours || 3) * 60 * 60;\n}\n// #endregion helper fns\n","import { User as OidcUser } from 'oidc-client';\r\n\r\nimport { environment } from '@environment';\r\nimport { JwtService } from './jwt.service';\r\nimport { mockOidcUserData, MockOidcUserData } from './mock-oidc-user-data';\r\nimport { subPrefix } from '../signup/signup.service';\r\n\r\nconst default_scope = 'document enrollment enrollment_api openid profile role permission';\r\nconst fixed_session_state = 'lo70JbROwyGbU35ndfehFr2bfHLoy2t1PwHhU1FGaPo.8553c24b2a45ea16d18ea2dde0691e56';\r\n\r\nexport class MockOidcUser implements OidcUser, MockOidcUserData {\r\n\r\n  isMockOidcUser = true;\r\n\r\n  id_token: string;\r\n  session_state = fixed_session_state;\r\n  access_token: string;\r\n  token_type = 'Bearer';\r\n  scope = environment.oidcScope;\r\n  profile: OidcUserProfile;\r\n  expires_at: number;\r\n  state: 'MOCK-OIDC-USER';\r\n  username: string;\r\n\r\n  // Where we stash the current OIDC user in browser storage\r\n  static oidcStorageKey = 'oidc.user:mock-oidc-user';\r\n\r\n  constructor (\r\n    jwtService: JwtService,\r\n    userData: MockOidcUserData | OidcUser\r\n  ) {\r\n    if ((userData as MockOidcUser).isMockOidcUser) {\r\n      this.createFromOidcUser(userData as MockOidcUser);\r\n    } else {\r\n      this.createFromUserData(jwtService, userData as MockOidcUserData);\r\n    }\r\n  }\r\n\r\n  private createFromOidcUser(user: MockOidcUser) {\r\n    const profile = user.profile;\r\n    if (!profile || !profile.sub) {\r\n      throw new Error('Tried to create OidcUser from bad MockOidcUser source');\r\n    }\r\n    this.id_token = user.id_token;\r\n    this.session_state = user.session_state;\r\n    this.access_token = user.access_token;\r\n    this.token_type = user.token_type;\r\n    this.scope = user.scope;\r\n    this.profile = profile;\r\n    this.expires_at = user.expires_at;\r\n    this.state = user.state;\r\n    this.username = user.username;\r\n  }\r\n\r\n  private createFromUserData(jwtService: JwtService, data: MockOidcUserData) {\r\n    let { username, role, email } = data;\r\n    let sub = createMockSub(username);\r\n\r\n    // Use user data from well know source if found\r\n    const known = mockOidcUserData.find(d => d.sub === sub || d.username === username );\r\n    if (known) {\r\n      ({ sub, username, role, email } = known);\r\n    }\r\n\r\n    this.id_token = createMockIdToken(jwtService, sub);\r\n    this.access_token = createMockAccessToken(jwtService, sub, username, role, email);\r\n    this.expires_at = jwtExpire();\r\n    this.profile = createProfile(sub, username, role);\r\n  }\r\n\r\n  get expires_in() {\r\n    return Math.max(0, this.expires_at - Math.floor(Date.now() / 1000));\r\n  }\r\n\r\n  get expired() {\r\n    return this.expires_in <= 0;\r\n  }\r\n\r\n  get scopes() {\r\n    return this.scope.split(' ');\r\n  }\r\n\r\n  toStorageString() {\r\n    return MockOidcUser.oidcStorageKey;\r\n  }\r\n}\r\n\r\n// #region prototype data\r\n\r\n// tslint:disable:quotemark\r\n// tslint:disable:max-line-length\r\n\r\n// \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkU0QUQxN0I0N0MxOUY3NTlDN0JBQTgwREEzMEQxN0M1QjlDMjI3NTUiLCJ0eXAiOiJKV1QiLCJ4NXQiOiI1SzBYdEh3Wjkxbkh1cWdOb3cwWHhibkNKMVUifQ.eyJuYmYiOjE1MzIxMjkwMjYsImV4cCI6MTUzMjEzMjYyNiwiaXNzIjoiaHR0cHM6Ly9kZXZpZGVudGl0eS5zdXJlcGF5cm9sbC5jb20iLCJhdWQiOlsiaHR0cHM6Ly9kZXZpZGVudGl0eS5zdXJlcGF5cm9sbC5jb20vcmVzb3VyY2VzIiwidHJ5b3V0IiwidHJ5b3V0X2FwaSJdLCJjbGllbnRfaWQiOiJqc190cnlvdXRfYXBpIiwic3ViIjoiU3VyZVBheXJvbGw6NTUwNzM4IiwiYXV0aF90aW1lIjoxNTMyMTE1MzM4LCJpZHAiOiJsb2NhbCIsImVtYWlsIjoiVGVzdEBEZXZNYWlsLnN1cmVwYXlyb2xsLmxvY2FsIiwicm9sZSI6WyJBZG1pbmlzdHJhdG9yIiwiRW1wbG95ZWUiLCJBcHByb3ZlciIsIkFwcHJvdmVyIiwiRW1wbG95ZWUiLCJFeGVjdXRpdmUiXSwicGVybWlzc2lvbiI6InVua25vd24iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIiwicm9sZSIsInBlcm1pc3Npb24iLCJ0cnlvdXQiLCJ0cnlvdXRfYXBpIl0sImFtciI6WyJwd2QiXX0.NhPs1daqPmvHAOHoTmKLI8PMEnK42o-L6bs1QBiIQROLVfFHby_Oot8YIllAdBI8hN0x9K3o9F4tFYjJXMdsAbpJdnVVqGQfT9cELhnoi6g2PmhZOJMZvSo0tWm7_y_6Klu-p8XQjLTNIGU277Y8pnw6cerwO6FieZW5uMo_1kPclcKvOyBGJQXiRGBT5aRA2OhvygA6b8dfc1lx_iZZy_32j3V4Dla_Xs55lmmBqUSghaxxL12sd9AbOIMD-bKvfEUX6OQ-Q8en17saO4_gkF-mdsUPwNXdg67smuSUMqfAJ7fsPhcmWEd20ni3feG1ndaEHIen5ARFqi9nDaPMPObyK5ywKfm00UGsVWd2YtW0f0RBA-e53br9W0V4yGegEUw4Z97sVEk4bOGwKTHLHoLDN3lUjD5hap804N3zdJGPoSXpyHbQ7CPH76qPNfDMM2Ib_o3LrMxmXcqAC3PffUMd3iX3qb6d6835IqV10prOKuHuo_QiZPAd-rHXYamiLRR-sV5H3m2wbx6CWbJoVUjoZoOoxJJ15QHQCZEgcGhKN9TfiqCFbo-kFRtmh3xFAeVX8rTjPKwrF0W3B05piNbD8fDGZMiUkvSLEFL86dH1zEGAZctsTsobPhRtMoprZKzfBRmkhH0mIguo7hlaCGlUtkkFtxbJ-7T1aNoDJuE\"\r\n\r\n/** Example AccessToken from the web */\r\nconst accessTokenPrototype = {\r\n  \"nbf\": 1532115339,\r\n  \"exp\": 1532118939,\r\n  \"iss\": \"https://devidentity.surepayroll.com\",\r\n  \"aud\": [\r\n    \"https://devidentity.surepayroll.com/resources\",\r\n    \"ecommerce\"\r\n  ],\r\n  \"client_id\": \"ecommerce\",\r\n  \"sub\": \"SurePayroll:550738\",\r\n  \"auth_time\": 1532115338,\r\n  \"idp\": \"local\",\r\n  \"email\": \"Test@DevMail.surepayroll.local\",\r\n  \"role\": [\r\n    \"Approver\",\r\n    \"Executive\"\r\n  ],\r\n  \"permission\": \"unknown\",\r\n  \"scope\": [\r\n    \"document\",\r\n    \"enrollment\",\r\n    \"enrollment_api\",\r\n    \"openid\",\r\n    \"profile\",\r\n    \"role\",\r\n    \"permission\"\r\n  ],\r\n  \"amr\": [\r\n    \"pwd\"\r\n  ]\r\n};\r\n\r\n// \"id_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkU0QUQxN0I0N0MxOUY3NTlDN0JBQTgwREEzMEQxN0M1QjlDMjI3NTUiLCJ0eXAiOiJKV1QiLCJ4NXQiOiI1SzBYdEh3Wjkxbkh1cWdOb3cwWHhibkNKMVUifQ.eyJuYmYiOjE1MzIxMjkwMjYsImV4cCI6MTUzMjEyOTMyNiwiaXNzIjoiaHR0cHM6Ly9kZXZpZGVudGl0eS5zdXJlcGF5cm9sbC5jb20iLCJhdWQiOiJqc190cnlvdXRfYXBpIiwibm9uY2UiOiJjYTRiOTM1Y2JkNDE0ZmRmYjAyMTVjYzQ0ZTU3YTRhYyIsImlhdCI6MTUzMjEyOTAyNiwiYXRfaGFzaCI6InY2MG9zY2RUT2hxZHBRMjdEajVxT2ciLCJzaWQiOiI4YzY3ZGRkOWI3NTg4ZmM5YTM3Y2IzZmUxNDQ3ZjljZCIsInN1YiI6IlN1cmVQYXlyb2xsOjU1MDczOCIsImF1dGhfdGltZSI6MTUzMjExNTMzOCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.nTiCcfd0-gyHP4_xZNtA21orsir2Sgb5AcHPK2nrlA-SINQum72SMonCPTM75F65BWo0dgCA1sSZivPD-1iOGe_qEmwBVyXp9DP1LURJxBaYOWK5arICE52_cpRm9rd3wn9toGq7ynAustBVGK_DACRtjMDFhcIYShPOywiCTBOU43vXc-nBoriSs-dkpqVpsRI-1GDy-3oU1QGVgF-sdE7oFJX9P_niLfrBkt0BHLWUIu0P4jma5rudTySWSwJUycrecfueDOUx0wvmnmFTCdIlTeiajKLt8kWB81kVVNVqx_OxkFMK5AM03NUFU09dg1Vf0A5_9YtKkkmTRXldoCkirzG8MX_6MvIvv-WUJHrLqvKGO6HP16hSzfGCOWJDfycGuoqYIpsWTvt7_IiEEf8YqAb3lpsutmmQa_yeIl_aXaXN0mcBep5v7vOc43dSEwUUZvjfddK2yVN-YMWnyHCfOO5xCz0195UGUCRBfYIRgxnPrT_pq9FIn4eLvvu1FGEZzfi5toiss0XAK1z7oxHiyYbs-zi0PiCCmL9a1bRaGGJ--4e0nOArcZW1V-T1Gc7Pckm-A2dn8_miWl7hALrfeIQyvaGIJEBC5375LM9e-yqe5uE12LasvgqRDRcZrXGKy8bKKDfwB8zwJKnGCP2SPR_OlZlHOyaSA2GcaHs\",\r\n\r\n/** Example IdentityToken data from the web */\r\nconst identityTokenPrototype = {\r\n  \"nbf\": 1532129026,\r\n  \"exp\": 1532129326,\r\n  \"iss\": \"https://devidentity.surepayroll.com\",\r\n  \"aud\": \"js_tryout_api\",\r\n  \"nonce\": \"ca4b935cbd414fdfb0215cc44e57a4ac\",\r\n  \"iat\": 1532129026,\r\n  // \"at_hash\": \"v60oscdTOhqdpQ27Dj5qOg\", // Bet this is AccessToken hash. Don't do try it.\r\n  \"sid\": \"8c67ddd9b7588fc9a37cb3fe1447f9cd\",\r\n  \"sub\": \"SurePayroll:550738\",\r\n  \"auth_time\": 1532115338,\r\n  \"idp\": \"local\",\r\n  \"amr\": [\r\n    \"pwd\"\r\n  ]\r\n};\r\n\r\nconst profilePrototype = {\r\n  \"sid\": \"8c67ddd9b7588fc9a37cb3fe1447f9cd\",\r\n  \"sub\": \"SurePayroll:550738\",\r\n  \"auth_time\": 1532115338,\r\n  \"idp\": \"local\",\r\n  \"amr\": [\r\n    \"pwd\"\r\n  ],\r\n  \"preferred_username\": \"davidasher\",\r\n  \"family_name\": \"\",\r\n  \"given_name\": \"\",\r\n  \"role\": [\r\n    \"Executive\",\r\n    \"Approver\"\r\n  ],\r\n  \"permission\": \"unknown\"\r\n};\r\n\r\n// tslint:enable:quotemark\r\n// tslint:enable:max-line-length\r\n\r\n// #endregion prototype data\r\n\r\n// #region helper fns\r\n\r\n/**\r\n * Create JWT Identity Token.\r\n * This mock creates one from a username by our mocking convention.\r\n */\r\nexport function createMockIdToken(jwtService: JwtService, sub: string) {\r\n  const data = {\r\n    ...identityTokenPrototype,\r\n    sub,\r\n    nbf: jwtDate() - 60,\r\n    exp: jwtExpire()\r\n  };\r\n  return jwtService.createJwt(data);\r\n}\r\n\r\n/**\r\n * Create JWT Access Token.\r\n * This mock creates one from a username using our mocking convention.\r\n * @param username\r\n * @param [role] a string of one or more, space-separated, roles.\r\n * @param [email] user's email address\r\n */\r\nexport function createMockAccessToken(jwtService: JwtService, sub: string, username: string, role?: string, email?: string) {\r\n  const roleArray = role ? role.trim().split(' ') : accessTokenPrototype.role;\r\n  const data = {\r\n    ...accessTokenPrototype,\r\n    sub,\r\n    nbf: jwtDate() - 60,\r\n    exp: jwtExpire(),\r\n    iat: jwtDate(),\r\n    email: email || accessTokenPrototype.email,\r\n    role: roleArray\r\n  };\r\n  return jwtService.createJwt(data);\r\n}\r\n/**\r\n * Create the (sub)ject, which is the permanent, cross-SP app identifier.\r\n * This mock creates one from a username by our mocking convention.\r\n */\r\nexport function createMockSub(username: string) {\r\n  return subPrefix + ((username || '').trim() || generateSubKey());\r\n}\r\n\r\nexport interface OidcUserProfile {\r\n  sub: string;\r\n  preferred_username: string;\r\n  role: string[];\r\n}\r\n\r\n/**\r\n * Create an SP profile with a sub, username and role\r\n * @param [sub] The \"Subject\" id; if missing, will create one\r\n * @param [username] with which the user signed in, used to create the sub if necessary.\r\n * @param [role] a string of one or more, space-separated, roles.\r\n */\r\nexport function createProfile(sub?: string, username?: string, role?: string) {\r\n  const roleArray = role ? role.trim().split(' ') : profilePrototype.role;\r\n  return {\r\n    ...profilePrototype,\r\n    sub: sub || createMockSub(username),\r\n    preferred_username: username,\r\n    role: roleArray\r\n  };\r\n}\r\n\r\n/** Generate a pseudo-random SP sub key for mocking purposes */\r\nexport function generateSubKey() {\r\n  return (Math.floor(Math.random() * 100000) + '01234').substr(0, 5);\r\n}\r\n\r\n/** return the date/time value in a JWT (it's in seconds)  */\r\nexport function jwtDate(date?: Date): number {\r\n  const value = date ? date.valueOf() : Date.now();\r\n  return Math.floor(value / 1000);\r\n}\r\n\r\nexport function jwtExpire(date?: Date, addHours?: number) {\r\n  return jwtDate(date) +  (addHours || 3) * 60 * 60;\r\n}\r\n\r\n// #endregion helper fns\r\n","// ONLY because this is a mock signin that will never be in production\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { User as OidcUser, UserManagerSettings } from 'oidc-client';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { concatMap, tap } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\nimport { environment } from '@environment';\r\nimport { JwtService } from './jwt.service';\r\nimport { MockOidcUser } from './mock-oidc-user';\r\nimport { MockOidcUserData } from './mock-oidc-user-data';\r\nimport { OidcManager } from '@core/services/auth-services/oidc-manager';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\nconst oidcStorageKey = MockOidcUser.oidcStorageKey;\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class MockOidcManager implements OidcManager {\r\n  private oidcUser: OidcUser = null;\r\n  private _authService: AuthService;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private injector: Injector,\r\n    private jwtService: JwtService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  /** Clear any stale oidc auth state in local storage */\r\n  clearStaleState(): Promise<void> {\r\n    // Our mock storage is never stale.\r\n    return Promise.resolve();\r\n  }\r\n\r\n  // Cannot inject AuthService in ctor because MockOidcFactory injects this class\r\n  // and AuthServices injects the MockOidcFactory.\r\n  // But can inject AuthService later (here), using the app injector, once everything is built and running.\r\n  get authService(): AuthService {\r\n    return this._authService || (this._authService = this.injector.get(AuthService));\r\n  }\r\n\r\n  /** Log a mock OIDC Manager event with AuthService event$ */\r\n  logEvent(event: string) {\r\n    this.authService.logEvent('MockOidcManager ' + event);\r\n  }\r\n\r\n  /**\r\n   * Get the local instance of the current OIDC User.\r\n   * Could be expired.\r\n   */\r\n  getUser(): Promise<OidcUser> {\r\n    if (!this.oidcUser) {\r\n      this.oidcUser = this.getMockOidcUserFromStorage();\r\n    }\r\n    this.logEvent(`getUser() ${this.oidcUser ? 'got OIDC user from storage' : 'returned a null OIDC user'}.`);\r\n    return Promise.resolve(this.oidcUser);\r\n  }\r\n\r\n  /**\r\n   * Pretend to leave the app and go to IdentityServer.\r\n   * Use the mock OIDC User in browser storage if there is one,\r\n   * else navigate to the mock sign-in page that emulates\r\n   * the one on IdentityServer.\r\n   */\r\n  signinRedirect(): Promise<any> {\r\n    this.oidcUser = null; // clear local service copy\r\n\r\n    const reroutePath = sessionStorage.getItem(this.authService.reroutePathKey);\r\n    if (reroutePath && -1 < reroutePath.indexOf('mock-signin')) {\r\n      // Don't accidentally re-route back to sign-in during mocking\r\n      sessionStorage.removeItem(this.authService.reroutePathKey);\r\n    }\r\n\r\n    const oidcUser = this.getMockOidcUserFromStorage();\r\n    if (oidcUser) {\r\n      if (!!oidcUser.access_token && !oidcUser.expired) {\r\n        this.oidcUser = oidcUser; // it's good!\r\n        // skip ahead to the AuthService's signinRedirect (not the OIDC manager version of that method!)\r\n        this.logEvent(`signinRedirect() got valid OIDC user from storage; skipping ahead to AuthService.signinRedirectCallback`);\r\n        this.authService.signinRedirectCallback(this.oidcUser);\r\n      } else {\r\n        this.logEvent(`signinRedirect() got EXPIRED or invalid OIDC user from storage; removing it.`);\r\n        sessionStorage.removeItem(oidcStorageKey);\r\n      }\r\n    }\r\n\r\n    if (!this.oidcUser) {\r\n      this.logEvent(`signinRedirect() did not find OIDC user in storage; re-routing to '/mock-signin'`);\r\n      this.router.navigateByUrl('/mock-signin');\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /**\r\n   * Update the OIDC UserManager when called back after successful signin.\r\n   * Real version is called by OidcCallbackComponent after IdentityServer puts user auth package in the URL.\r\n   * This mock version is called by MockSigninComponent and expects a UserData object from that component.\r\n   * @param data - In real version, it is undocumented and undefined in every example on the web.\r\n   * When mocked, it is either a mock OIDC user or mock data for constructing a mock OIDC user.\r\n   */\r\n  signinRedirectCallback(data?: string | MockOidcUser | MockOidcUserData): Promise<OidcUser> {\r\n    if (!data || typeof data === 'string') {\r\n      this.logEvent(`signinRedirectCallback() called unexpectedly with null or a string`);\r\n      return Promise.reject(`Program error. Called with null or a string. \"${data}\"`);\r\n    }\r\n\r\n    if (data instanceof MockOidcUser && data.access_token && !data.expired) {\r\n      this.logEvent(`signinRedirectCallback() called with valid MockOidcUser`);\r\n      this.oidcUser = data;\r\n    } else {\r\n      this.oidcUser = new MockOidcUser(this.jwtService, data);\r\n      this.logEvent(`signinRedirectCallback(userData) created new MockOidcUser from userData`);\r\n    }\r\n    this.logEvent(`signinRedirectCallback() set MockOidcUser in browser storage`);\r\n    sessionStorage.setItem(oidcStorageKey, JSON.stringify(this.oidcUser));\r\n    return Promise.resolve(this.oidcUser);\r\n  }\r\n\r\n  signoutRedirect(): Promise<any> {\r\n    this.logEvent('signoutRedirect() removing OIDC user from storage.');\r\n    sessionStorage.removeItem(oidcStorageKey);\r\n    this.logEvent('signoutRedirect() navigating to signout page');\r\n    this.router.navigateByUrl(WellKnownRoutes.SignedOut);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  private getMockOidcUserFromStorage() {\r\n    try {\r\n      const oidcUserData = JSON.parse(sessionStorage.getItem(oidcStorageKey));\r\n      const oidcUser = new MockOidcUser(this.jwtService, oidcUserData);\r\n      this.logEvent(`getMockOidcUserFromStorage() got and parsed MockOidcUser from browser storage`);\r\n      return oidcUser;\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","// ONLY because this is a mock signin that will never be in production\nimport { Injector } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { User as OidcUser } from 'oidc-client';\nimport { AuthService } from '@core/services/auth-services/auth.service';\nimport { JwtService } from './jwt.service';\nimport { MockOidcUser } from './mock-oidc-user';\nimport { WellKnownRoutes } from '@core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./jwt.service\";\nimport * as i3 from \"@angular/router\";\nvar oidcStorageKey = MockOidcUser.oidcStorageKey;\nvar MockOidcManager = /** @class */ (function () {\n    function MockOidcManager(http, injector, jwtService, router) {\n        this.http = http;\n        this.injector = injector;\n        this.jwtService = jwtService;\n        this.router = router;\n        this.oidcUser = null;\n    }\n    /** Clear any stale oidc auth state in local storage */\n    MockOidcManager.prototype.clearStaleState = function () {\n        // Our mock storage is never stale.\n        return Promise.resolve();\n    };\n    Object.defineProperty(MockOidcManager.prototype, \"authService\", {\n        // Cannot inject AuthService in ctor because MockOidcFactory injects this class\n        // and AuthServices injects the MockOidcFactory.\n        // But can inject AuthService later (here), using the app injector, once everything is built and running.\n        get: function () {\n            return this._authService || (this._authService = this.injector.get(AuthService));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Log a mock OIDC Manager event with AuthService event$ */\n    MockOidcManager.prototype.logEvent = function (event) {\n        this.authService.logEvent('MockOidcManager ' + event);\n    };\n    /**\n     * Get the local instance of the current OIDC User.\n     * Could be expired.\n     */\n    MockOidcManager.prototype.getUser = function () {\n        if (!this.oidcUser) {\n            this.oidcUser = this.getMockOidcUserFromStorage();\n        }\n        this.logEvent(\"getUser() \" + (this.oidcUser ? 'got OIDC user from storage' : 'returned a null OIDC user') + \".\");\n        return Promise.resolve(this.oidcUser);\n    };\n    /**\n     * Pretend to leave the app and go to IdentityServer.\n     * Use the mock OIDC User in browser storage if there is one,\n     * else navigate to the mock sign-in page that emulates\n     * the one on IdentityServer.\n     */\n    MockOidcManager.prototype.signinRedirect = function () {\n        this.oidcUser = null; // clear local service copy\n        var reroutePath = sessionStorage.getItem(this.authService.reroutePathKey);\n        if (reroutePath && -1 < reroutePath.indexOf('mock-signin')) {\n            // Don't accidentally re-route back to sign-in during mocking\n            sessionStorage.removeItem(this.authService.reroutePathKey);\n        }\n        var oidcUser = this.getMockOidcUserFromStorage();\n        if (oidcUser) {\n            if (!!oidcUser.access_token && !oidcUser.expired) {\n                this.oidcUser = oidcUser; // it's good!\n                // skip ahead to the AuthService's signinRedirect (not the OIDC manager version of that method!)\n                this.logEvent(\"signinRedirect() got valid OIDC user from storage; skipping ahead to AuthService.signinRedirectCallback\");\n                this.authService.signinRedirectCallback(this.oidcUser);\n            }\n            else {\n                this.logEvent(\"signinRedirect() got EXPIRED or invalid OIDC user from storage; removing it.\");\n                sessionStorage.removeItem(oidcStorageKey);\n            }\n        }\n        if (!this.oidcUser) {\n            this.logEvent(\"signinRedirect() did not find OIDC user in storage; re-routing to '/mock-signin'\");\n            this.router.navigateByUrl('/mock-signin');\n        }\n        return Promise.resolve();\n    };\n    /**\n     * Update the OIDC UserManager when called back after successful signin.\n     * Real version is called by OidcCallbackComponent after IdentityServer puts user auth package in the URL.\n     * This mock version is called by MockSigninComponent and expects a UserData object from that component.\n     * @param data - In real version, it is undocumented and undefined in every example on the web.\n     * When mocked, it is either a mock OIDC user or mock data for constructing a mock OIDC user.\n     */\n    MockOidcManager.prototype.signinRedirectCallback = function (data) {\n        if (!data || typeof data === 'string') {\n            this.logEvent(\"signinRedirectCallback() called unexpectedly with null or a string\");\n            return Promise.reject(\"Program error. Called with null or a string. \\\"\" + data + \"\\\"\");\n        }\n        if (data instanceof MockOidcUser && data.access_token && !data.expired) {\n            this.logEvent(\"signinRedirectCallback() called with valid MockOidcUser\");\n            this.oidcUser = data;\n        }\n        else {\n            this.oidcUser = new MockOidcUser(this.jwtService, data);\n            this.logEvent(\"signinRedirectCallback(userData) created new MockOidcUser from userData\");\n        }\n        this.logEvent(\"signinRedirectCallback() set MockOidcUser in browser storage\");\n        sessionStorage.setItem(oidcStorageKey, JSON.stringify(this.oidcUser));\n        return Promise.resolve(this.oidcUser);\n    };\n    MockOidcManager.prototype.signoutRedirect = function () {\n        this.logEvent('signoutRedirect() removing OIDC user from storage.');\n        sessionStorage.removeItem(oidcStorageKey);\n        this.logEvent('signoutRedirect() navigating to signout page');\n        this.router.navigateByUrl(WellKnownRoutes.SignedOut);\n        return Promise.resolve();\n    };\n    MockOidcManager.prototype.getMockOidcUserFromStorage = function () {\n        try {\n            var oidcUserData = JSON.parse(sessionStorage.getItem(oidcStorageKey));\n            var oidcUser = new MockOidcUser(this.jwtService, oidcUserData);\n            this.logEvent(\"getMockOidcUserFromStorage() got and parsed MockOidcUser from browser storage\");\n            return oidcUser;\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    MockOidcManager.ngInjectableDef = i0.defineInjectable({ factory: function MockOidcManager_Factory() { return new MockOidcManager(i0.inject(i1.HttpClient), i0.inject(i0.INJECTOR), i0.inject(i2.JwtService), i0.inject(i3.Router)); }, token: MockOidcManager, providedIn: \"root\" });\n    return MockOidcManager;\n}());\nexport { MockOidcManager };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ClassProvider, ErrorHandler, Injector } from '@angular/core';\nimport * as Raven from 'raven-js';\nimport { configureLogging } from './sentry.functions';\nimport { environment } from '@environment';\nconfigureLogging();\nvar CustomErrorHandler = /** @class */ (function (_super) {\n    __extends(CustomErrorHandler, _super);\n    function CustomErrorHandler(injector) {\n        var _this = _super.call(this) || this;\n        _this.injector = injector;\n        return _this;\n    }\n    CustomErrorHandler.prototype.handleError = function (err) {\n        if (!environment.production) {\n            _super.prototype.handleError.call(this, err);\n            // Can't inject Router directly. Causes circular dependency\n            // TODO: Discover who commented out and why.\n            // const router = this.injector.get(Router, null);\n            // if (router) {\n            //   router.navigate([WellKnownRoutes.Failed])\n            //     .catch(navErr => {}); // swallow nav error to avoid endless loop\n            // }\n        }\n    };\n    return CustomErrorHandler;\n}(ErrorHandler));\nexport { CustomErrorHandler };\nvar SentryErrorHandler = /** @class */ (function (_super) {\n    __extends(SentryErrorHandler, _super);\n    function SentryErrorHandler(injector) {\n        return _super.call(this, injector) || this;\n    }\n    SentryErrorHandler.prototype.handleError = function (err) {\n        try {\n            Raven.captureException(err.originalError || err);\n        }\n        finally {\n            _super.prototype.handleError.call(this, err);\n        }\n    };\n    return SentryErrorHandler;\n}(CustomErrorHandler));\nexport { SentryErrorHandler };\nexport function errorProviders() {\n    var ERROR_HANDLER_SENTRY = [\n        { provide: ErrorHandler, useClass: SentryErrorHandler },\n    ];\n    var ERROR_HANDLER = [\n        { provide: ErrorHandler, useClass: CustomErrorHandler },\n    ];\n    if (environment.enableSentry) {\n        return ERROR_HANDLER_SENTRY;\n    }\n    else {\n        return ERROR_HANDLER;\n    }\n}\n","import { ClassProvider, ErrorHandler, Injectable, Injector } from '@angular/core';\r\n\r\nimport * as Raven from 'raven-js';\r\n\r\nimport { configureLogging } from './sentry.functions';\r\nimport { environment } from '@environment';\r\nimport { Router } from '@angular/router';\r\nimport { WellKnownRoutes } from '@app/core';\r\n\r\nconfigureLogging();\r\n\r\n@Injectable()\r\nexport class CustomErrorHandler extends ErrorHandler {\r\n\r\n  constructor(protected injector: Injector) {\r\n    super();\r\n  }\r\n\r\n  handleError(err: any): void {\r\n    if (!environment.production) {\r\n      super.handleError(err);\r\n\r\n      // Can't inject Router directly. Causes circular dependency\r\n      // TODO: Discover who commented out and why.\r\n      // const router = this.injector.get(Router, null);\r\n      // if (router) {\r\n      //   router.navigate([WellKnownRoutes.Failed])\r\n      //     .catch(navErr => {}); // swallow nav error to avoid endless loop\r\n      // }\r\n    }\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class SentryErrorHandler extends CustomErrorHandler {\r\n\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  handleError(err: any): void {\r\n    try {\r\n      Raven.captureException(err.originalError || err);\r\n    } finally {\r\n      super.handleError(err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function errorProviders() {\r\n  const ERROR_HANDLER_SENTRY: (ClassProvider)[] = [\r\n    { provide: ErrorHandler, useClass: SentryErrorHandler },\r\n  ];\r\n  const ERROR_HANDLER: (ClassProvider)[] = [\r\n    { provide: ErrorHandler, useClass: CustomErrorHandler },\r\n  ];\r\n  if (environment.enableSentry) {\r\n    return ERROR_HANDLER_SENTRY;\r\n  } else {\r\n    return ERROR_HANDLER;\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\nimport { MockSigninComponent } from './mock-signin.component';\nvar ɵ0 = { title: 'Mock Signin' };\nvar routes = [\n    {\n        path: 'mock-signin',\n        pathMatch: 'full',\n        component: MockSigninComponent,\n        data: ɵ0\n    },\n];\nvar MockSigninModule = /** @class */ (function () {\n    function MockSigninModule() {\n    }\n    return MockSigninModule;\n}());\nexport { MockSigninModule };\nexport { ɵ0 };\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MockSigninComponent } from './mock-signin.component';\r\nimport { SharedModule } from '@shared';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'mock-signin',\r\n    pathMatch: 'full',\r\n    component: MockSigninComponent,\r\n    data: { title: 'Mock Signin' }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    SharedModule\r\n  ],\r\n  exports: [RouterModule],\r\n  declarations: [\r\n    MockSigninComponent\r\n  ],\r\n})\r\nexport class MockSigninModule {}\r\n","import { Routes } from '@angular/router';\nimport { AccountViewGuard, AdminConsoleGuard, DataEntryPageGuard, SinglePageStatusGuard } from '@core/routing-guards';\nimport { ConcurrencyFailureComponent } from './concurrency-failure/concurrency-failure.component';\nimport { FailedComponent } from './failed/failed.component';\nimport { TermsComponent } from './terms/terms.component';\nvar ɵ0 = { title: 'About You' }, ɵ1 = { title: 'Account Details' }, ɵ2 = { title: 'Admin' }, ɵ3 = { title: 'Bank Account' }, ɵ4 = { title: 'Company Info' }, ɵ5 = { title: 'Tax Info' }, ɵ6 = { title: 'Dashboard' }, ɵ7 = { title: 'Earnings' }, ɵ8 = { title: 'Employees' }, ɵ9 = { title: 'Documents' }, ɵ10 = { title: 'Review' }, ɵ11 = { title: 'Enrolled' }, ɵ12 = { title: 'Welcome back!' }, ɵ13 = { title: 'Processing' }, ɵ14 = { title: 'Failed' }, ɵ15 = { title: 'Concurrency Failure' };\nvar routes = [\n    { path: '', pathMatch: 'full', redirectTo: 'dashboard' },\n    // {\n    //   path: 'signup',\n    //   canActivate: [SignupGuard],\n    //   loadChildren: '@app/signup/signup.module#SignupModule',\n    //   data: { title: 'Signup' }\n    // },\n    {\n        path: 'about-you',\n        canActivateChild: [DataEntryPageGuard],\n        loadChildren: '@app/about-you/about-you.module#AboutYouModule',\n        data: ɵ0\n    },\n    {\n        path: 'account-view',\n        canActivate: [AccountViewGuard],\n        loadChildren: '@app/account-view/account-view.module#AccountViewModule',\n        data: ɵ1\n    },\n    {\n        path: 'admin',\n        canActivateChild: [AdminConsoleGuard],\n        loadChildren: '@app/admin-console/admin-console.module#AdminConsoleModule',\n        data: ɵ2\n    },\n    {\n        path: 'company-bank-account',\n        canActivateChild: [DataEntryPageGuard],\n        loadChildren: '@app/company-bank-info/company-bank-info.module#CompanyBankInfoModule',\n        data: ɵ3\n    },\n    {\n        path: 'company-info',\n        canActivateChild: [DataEntryPageGuard],\n        loadChildren: '@app/company-info/company-info.module#CompanyInfoModule',\n        data: ɵ4\n    },\n    {\n        path: 'tax-info',\n        canActivateChild: [DataEntryPageGuard],\n        loadChildren: '@app/company-tax-info/company-tax-info.module#CompanyTaxInfoModule',\n        data: ɵ5\n    },\n    {\n        path: 'dashboard',\n        canActivateChild: [DataEntryPageGuard],\n        loadChildren: '@app/dashboard/dashboard.module#DashboardModule',\n        data: ɵ6\n    },\n    {\n        path: 'earnings',\n        canActivateChild: [DataEntryPageGuard],\n        loadChildren: '@app/earnings/earnings.module#EarningsModule',\n        data: ɵ7\n    },\n    {\n        path: 'employees',\n        canActivateChild: [DataEntryPageGuard],\n        loadChildren: '@app/employees/employees.module#EmployeesModule',\n        data: ɵ8\n    },\n    {\n        path: 'documents',\n        canActivate: [SinglePageStatusGuard],\n        loadChildren: '@app/documents/documents.module#DocumentsModule',\n        data: ɵ9\n    },\n    {\n        path: 'review',\n        canActivate: [AccountViewGuard],\n        loadChildren: '@app/review/review.module#ReviewModule',\n        data: ɵ10\n    },\n    {\n        path: 'terms',\n        component: TermsComponent\n    },\n    {\n        path: 'enrolled',\n        canActivate: [SinglePageStatusGuard],\n        loadChildren: '@app/enrolled/enrolled.module#EnrolledModule',\n        data: ɵ11\n    },\n    {\n        path: 'abandoned',\n        canActivate: [SinglePageStatusGuard],\n        loadChildren: '@app/abandoned/abandoned.module#AbandonedModule',\n        data: ɵ12\n    },\n    {\n        path: 'processing',\n        canActivate: [SinglePageStatusGuard],\n        loadChildren: '@app/processing/processing.module#ProcessingModule',\n        data: ɵ13\n    },\n    {\n        path: 'failed',\n        component: FailedComponent,\n        data: ɵ14\n    },\n    {\n        path: 'concurrency-failure',\n        component: ConcurrencyFailureComponent,\n        data: ɵ15\n    },\n];\n/** Must come after all other routes else can't get to those routes */\nvar lastRoutes = [\n    { path: '**', redirectTo: '' } // bad routes redirect to root\n];\nvar AppRoutingModule = /** @class */ (function () {\n    function AppRoutingModule() {\n    }\n    return AppRoutingModule;\n}());\nexport { AppRoutingModule };\nexport { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9, ɵ10, ɵ11, ɵ12, ɵ13, ɵ14, ɵ15 };\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, RouteReuseStrategy } from '@angular/router';\r\n\r\nimport { environment } from '@environment';\r\n\r\nimport { AccountViewGuard, AdminConsoleGuard, DataEntryPageGuard, SignupGuard, SinglePageStatusGuard } from '@core/routing-guards';\r\nimport { SpRouteReuseStrategy } from '@core';\r\n\r\nimport { authRoutes } from './auth-components/auth-components.module';\r\nimport { ConcurrencyFailureComponent } from './concurrency-failure/concurrency-failure.component';\r\nimport { FailedComponent } from './failed/failed.component';\r\nimport { MockSigninModule } from './mock-signin/mock-signin.module';\r\nimport { TermsComponent } from './terms/terms.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'dashboard' },\r\n  // {\r\n  //   path: 'signup',\r\n  //   canActivate: [SignupGuard],\r\n  //   loadChildren: '@app/signup/signup.module#SignupModule',\r\n  //   data: { title: 'Signup' }\r\n  // },\r\n  {\r\n    path: 'about-you',\r\n    canActivateChild: [DataEntryPageGuard],\r\n    loadChildren: '@app/about-you/about-you.module#AboutYouModule',\r\n    data: { title: 'About You' }\r\n  },\r\n  {\r\n    path: 'account-view',\r\n    canActivate: [AccountViewGuard],\r\n    loadChildren: '@app/account-view/account-view.module#AccountViewModule',\r\n    data: { title: 'Account Details' }\r\n  },\r\n  {\r\n    path: 'admin',\r\n    canActivateChild: [AdminConsoleGuard],\r\n    loadChildren: '@app/admin-console/admin-console.module#AdminConsoleModule',\r\n    data: { title: 'Admin' }\r\n  },\r\n  {\r\n    path: 'company-bank-account',\r\n    canActivateChild: [DataEntryPageGuard],\r\n    loadChildren: '@app/company-bank-info/company-bank-info.module#CompanyBankInfoModule',\r\n    data: { title: 'Bank Account' }\r\n  },\r\n  {\r\n    path: 'company-info',\r\n    canActivateChild: [DataEntryPageGuard],\r\n    loadChildren: '@app/company-info/company-info.module#CompanyInfoModule',\r\n    data: { title: 'Company Info' }\r\n  },\r\n  {\r\n    path: 'tax-info',\r\n    canActivateChild: [DataEntryPageGuard],\r\n    loadChildren: '@app/company-tax-info/company-tax-info.module#CompanyTaxInfoModule',\r\n    data: { title: 'Tax Info' }\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    canActivateChild: [DataEntryPageGuard],\r\n    loadChildren: '@app/dashboard/dashboard.module#DashboardModule',\r\n    data: { title: 'Dashboard' }\r\n  },\r\n  {\r\n    path: 'earnings',\r\n    canActivateChild: [DataEntryPageGuard],\r\n    loadChildren: '@app/earnings/earnings.module#EarningsModule',\r\n    data: { title: 'Earnings' }\r\n  },\r\n  {\r\n    path: 'employees',\r\n    canActivateChild: [DataEntryPageGuard],\r\n    loadChildren: '@app/employees/employees.module#EmployeesModule',\r\n    data: { title: 'Employees' }\r\n  },\r\n  {\r\n    path: 'documents',\r\n    canActivate: [SinglePageStatusGuard],\r\n    loadChildren: '@app/documents/documents.module#DocumentsModule',\r\n    data: { title: 'Documents' }\r\n  },\r\n  {\r\n    path: 'review',\r\n    canActivate: [AccountViewGuard],\r\n    loadChildren: '@app/review/review.module#ReviewModule',\r\n    data: { title: 'Review' }\r\n  },\r\n  {\r\n    path: 'terms',\r\n    component: TermsComponent\r\n  },\r\n  {\r\n    path: 'enrolled',\r\n    canActivate: [SinglePageStatusGuard],\r\n    loadChildren: '@app/enrolled/enrolled.module#EnrolledModule',\r\n    data: { title: 'Enrolled' }\r\n  },\r\n  {\r\n    path: 'abandoned',\r\n    canActivate: [SinglePageStatusGuard],\r\n    loadChildren: '@app/abandoned/abandoned.module#AbandonedModule',\r\n    data: { title: 'Welcome back!' }\r\n  },\r\n  {\r\n    path: 'processing',\r\n    canActivate: [SinglePageStatusGuard],\r\n    loadChildren: '@app/processing/processing.module#ProcessingModule',\r\n    data: { title: 'Processing' }\r\n  },\r\n  {\r\n    path: 'failed',\r\n    component: FailedComponent,\r\n    data: { title: 'Failed' }\r\n  },\r\n  {\r\n    path: 'concurrency-failure',\r\n    component: ConcurrencyFailureComponent,\r\n    data: { title: 'Concurrency Failure' }\r\n  },\r\n  // {\r\n  //   path: 'deductions',\r\n  //   canActivateChild: [DataEntryPageGuard],\r\n  //   loadChildren: '@app/deductions/deductions.module#DeductionsModule',\r\n  //   data: { title: 'Deductions' }\r\n  // },\r\n];\r\n\r\n/** Must come after all other routes else can't get to those routes */\r\nconst lastRoutes: Routes = [\r\n  { path: '**', redirectTo: '' } // bad routes redirect to root\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, { enableTracing: environment.routerTracing }),\r\n    RouterModule.forChild(authRoutes),\r\n    environment.mockAuth || environment.mockServices ? MockSigninModule : [],\r\n    RouterModule.forChild(lastRoutes)\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [{ provide: RouteReuseStrategy, useClass: SpRouteReuseStrategy }]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Provider, ModuleWithProviders, Optional, SkipSelf, NgModule } from '@angular/core';\r\nimport { AnalyticsService } from './analytics.service';\r\nimport { ANALYTICS_PROVIDERS } from './providers/providers';\r\nimport { ANALYTICS_RECEIVERS } from './receivers/receivers';\r\n\r\n@NgModule({\r\n  providers: [\r\n    ANALYTICS_PROVIDERS,\r\n    ANALYTICS_RECEIVERS\r\n  ]\r\n})\r\nexport class AnalyticsModule {\r\n\r\n    constructor (\r\n        @Optional() @SkipSelf() parentModule: AnalyticsModule,\r\n        private analyticsService: AnalyticsService\r\n    ) {\r\n        if (parentModule) {\r\n          throw new Error(\r\n            'AnalyticsModule is already loaded. Import it in the AppModule only');\r\n        }\r\n        this.analyticsService.initialize();\r\n      }\r\n\r\n    static forRoot(providers: Provider[]): ModuleWithProviders {\r\n      return {\r\n        ngModule: AnalyticsModule,\r\n        providers,\r\n      };\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes } from '@angular/router';\r\n\r\nimport { AuthFailedGuard } from '@core/routing-guards';\r\nimport { SharedModule } from '@app/shared/shared.module';\r\n\r\nimport { AuthFailedComponent } from './auth-failed.component';\r\nimport { OidcCallbackComponent } from './oidc-callback.component';\r\nimport { SignedOutComponent } from './signed-out.component';\r\nimport { UnauthorizedComponent } from './unauthorized.component';\r\n\r\n/** Routes to blend with the main routes */\r\nexport const authRoutes: Routes = [\r\n  {\r\n    path: 'error',\r\n    component: AuthFailedComponent,\r\n    data: { title: 'Signin Failed' },\r\n    canDeactivate: [AuthFailedGuard]\r\n  },\r\n  {\r\n    path: 'oidc-callback',\r\n    component: OidcCallbackComponent\r\n    // never visible\r\n  },\r\n  {\r\n    path: 'signed-out',\r\n    component: SignedOutComponent,\r\n    data: { title: 'Signed-out' }\r\n  },\r\n  {\r\n    path: 'unauthorized',\r\n    component: UnauthorizedComponent,\r\n    data: { title: 'Unauthorized' }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedModule],\r\n  declarations: [\r\n    AuthFailedComponent,\r\n    OidcCallbackComponent,\r\n    SignedOutComponent,\r\n    UnauthorizedComponent\r\n  ]\r\n})\r\nexport class AuthComponentsModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { StepperComponent } from './stepper/stepper.component';\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule],\r\n  declarations: [ToolbarComponent, SpinnerComponent, StepperComponent,  ChatComponent],\r\n  exports: [ToolbarComponent, SpinnerComponent, StepperComponent, ChatComponent],\r\n})\r\n/**\r\n * Non-routed components that appear once somewhere so not shared.\r\n */\r\nexport class CoreComponentsModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { StoreModule } from '@ngrx/store';\r\n\r\nimport { SESSION_STATE, sessionReducer } from './reducer';\r\n\r\n@NgModule({\r\n  imports: [StoreModule.forFeature(SESSION_STATE, sessionReducer)],\r\n})\r\nexport class SessionStoreModule {}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { Provider } from '@angular/core';\nimport { EntityActionFactory, EntityActionPayload, EntityOp } from 'ngrx-data';\nimport { entitiesWithoutCompanyId } from './entity-metadata';\nimport { IdGeneratorService } from '@core/services/id-generator.service';\nimport { SessionSelectors } from '@session/session-selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/id-generator.service\";\nimport * as i2 from \"../session/session-selectors\";\nvar ADD_ONE_OPS = [\n    EntityOp.ADD_ONE,\n    EntityOp.SAVE_ADD_ONE,\n    EntityOp.UPSERT_ONE\n];\nvar SpEntityActionFactory = /** @class */ (function (_super) {\n    __extends(SpEntityActionFactory, _super);\n    function SpEntityActionFactory(idGenerator, sessionSelectors) {\n        var _this = _super.call(this) || this;\n        _this.idGenerator = idGenerator;\n        _this.sessionSelectors = sessionSelectors;\n        // Can change as administrator moves from company to company\n        _this.sessionSelectors.currentCompanyId$.subscribe(function (id) { return _this.currentCompanyId = id; });\n        return _this;\n    }\n    /**\n     * Create an EntityAction to perform an operation (op) for a particular entity type\n     * (entityName) with optional data and other optional flags\n     * @param payload Defines the EntityAction and its options\n     */\n    SpEntityActionFactory.prototype.createCore = function (payload) {\n        var data = payload.data;\n        // if payload has data, inspect and possibly correct it\n        if (data != null) {\n            var entityName = payload.entityName, entityOp_1 = payload.entityOp;\n            // deletes are disallowed\n            if (entityOp_1 === EntityOp.SAVE_DELETE_ONE) {\n                payload.error = new Error(\"This app does not support deletion of \" + entityName);\n            }\n            else if (ADD_ONE_OPS.find(function (aop) { return aop === entityOp_1; })) {\n                // This is an add operation for a single entity\n                // Try to preserve data's object identity but\n                // clone it if changes are necessary.\n                var entity = data; // entity is potential clone\n                if (!entity.id) {\n                    // generate missing entity.id\n                    entity = Object.assign({}, entity); // clone entity, stripping off any prototype\n                    entity.id = this.idGenerator.generateId();\n                }\n                if (!entity.companyId && !entitiesWithoutCompanyId[entityName]) {\n                    // This entity lacks its required companyId. Assign it to current company id\n                    if (!this.currentCompanyId) {\n                        payload.error = new Error(entityName + \" is missing \\\"companyId\\\" and there is no current Company\");\n                    }\n                    else {\n                        if (entity === data) {\n                            // clone if not already cloned, stripping off any prototype\n                            entity = Object.assign({}, entity);\n                        }\n                        entity.companyId = this.currentCompanyId;\n                    }\n                }\n                if (entity !== data) {\n                    payload = __assign({}, payload, { data: entity });\n                }\n            }\n        }\n        return _super.prototype.createCore.call(this, payload);\n    };\n    SpEntityActionFactory.ngInjectableDef = i0.defineInjectable({ factory: function SpEntityActionFactory_Factory() { return new SpEntityActionFactory(i0.inject(i1.IdGeneratorService), i0.inject(i2.SessionSelectors)); }, token: SpEntityActionFactory, providedIn: \"root\" });\n    return SpEntityActionFactory;\n}(EntityActionFactory));\nexport { SpEntityActionFactory };\nexport var entityActionFactoryProvider = {\n    provide: EntityActionFactory,\n    useClass: SpEntityActionFactory\n};\n","import { Injectable, Provider } from '@angular/core';\r\nimport { EntityAction, EntityActionFactory, EntityActionPayload, EntityActionOptions, EntityOp } from 'ngrx-data';\r\n\r\nimport { entitiesWithoutCompanyId } from './entity-metadata';\r\nimport { IdGeneratorService } from '@core/services/id-generator.service';\r\nimport { SessionSelectors } from '@session/session-selectors';\r\n\r\nconst ADD_ONE_OPS = [\r\n  EntityOp.ADD_ONE,\r\n  EntityOp.SAVE_ADD_ONE,\r\n  EntityOp.UPSERT_ONE\r\n];\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SpEntityActionFactory extends EntityActionFactory {\r\n  constructor(private idGenerator: IdGeneratorService, private sessionSelectors: SessionSelectors, ) {\r\n    super();\r\n\r\n    // Can change as administrator moves from company to company\r\n    this.sessionSelectors.currentCompanyId$.subscribe(id => this.currentCompanyId = id);\r\n  }\r\n\r\n  /// NEVER MAKE THIS SNAPSHOT PUBLIC!\r\n  /// EASILY ABUSED. IT WILL CHANGE AND CREATE SUBTLE BUGS.\r\n  private currentCompanyId: string;\r\n\r\n  /**\r\n   * Create an EntityAction to perform an operation (op) for a particular entity type\r\n   * (entityName) with optional data and other optional flags\r\n   * @param payload Defines the EntityAction and its options\r\n   */\r\n  protected createCore<P = any> (payload: EntityActionPayload<P>) {\r\n    const data = payload.data;\r\n\r\n    // if payload has data, inspect and possibly correct it\r\n    if (data != null) {\r\n      const { entityName, entityOp } = payload;\r\n\r\n      // deletes are disallowed\r\n      if (entityOp === EntityOp.SAVE_DELETE_ONE) {\r\n        payload.error = new Error(`This app does not support deletion of ${entityName}`);\r\n      } else if (ADD_ONE_OPS.find(aop => aop === entityOp)) {\r\n        // This is an add operation for a single entity\r\n        // Try to preserve data's object identity but\r\n        // clone it if changes are necessary.\r\n        let entity: any = data; // entity is potential clone\r\n        if (!entity.id) {\r\n          // generate missing entity.id\r\n          entity = Object.assign({}, entity); // clone entity, stripping off any prototype\r\n          entity.id = this.idGenerator.generateId();\r\n        }\r\n        if (!entity.companyId && !entitiesWithoutCompanyId[entityName] ) {\r\n          // This entity lacks its required companyId. Assign it to current company id\r\n          if (!this.currentCompanyId) {\r\n            payload.error = new Error(`${entityName} is missing \"companyId\" and there is no current Company`);\r\n          } else {\r\n            if (entity === data) {\r\n              // clone if not already cloned, stripping off any prototype\r\n              entity = Object.assign({}, entity);\r\n            }\r\n            entity.companyId = this.currentCompanyId;\r\n          }\r\n        }\r\n        if (entity !== data) {\r\n          payload = { ...payload, data: entity };\r\n        }\r\n      }\r\n    }\r\n\r\n    return super.createCore<P>(payload);\r\n  }\r\n}\r\n\r\nexport const entityActionFactoryProvider: Provider = {\r\n  provide: EntityActionFactory,\r\n  useClass: SpEntityActionFactory\r\n};\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DefaultDataServiceConfig, EntityDispatcherDefaultOptions, Pluralizer } from 'ngrx-data';\nimport { environment } from '@environment';\n/** Configure the ngrx-data DefaultDataService for the ECommerce app */\nvar dataServiceConfig = {\n    root: environment.apiRoot || 'api',\n    timeout: 60000,\n};\n/** All save operations are optimistic by default */\nvar entityDispatcherDefaultOptions = {\n    optimisticAdd: true,\n    optimisticDelete: true,\n    optimisticUpdate: true,\n    optimisticUpsert: true,\n    optimisticSaveEntities: true\n};\n/**\n * This app does not pluralize. The entity name is its own collection resource name.\n * Ex: the collection resource name for 'Company' is 'Company' (not 'Companies')\n */\nvar NoPluralizer = /** @class */ (function (_super) {\n    __extends(NoPluralizer, _super);\n    function NoPluralizer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoPluralizer.prototype.pluralize = function (name) { return name; };\n    return NoPluralizer;\n}(Pluralizer));\nexport { NoPluralizer };\n/** All ngModule data service configuration providers for this app */\nexport var dataserviceConfigurationProviders = [\n    {\n        provide: DefaultDataServiceConfig,\n        useValue: dataServiceConfig\n    },\n    {\n        provide: EntityDispatcherDefaultOptions,\n        useValue: entityDispatcherDefaultOptions\n    },\n    { provide: Pluralizer, useClass: NoPluralizer }\n];\n","import { Provider } from '@angular/core';\r\nimport { DefaultDataServiceConfig, EntityDispatcherDefaultOptions, Pluralizer } from 'ngrx-data';\r\nimport { environment } from '@environment';\r\n\r\n/** Configure the ngrx-data DefaultDataService for the ECommerce app */\r\nconst dataServiceConfig: DefaultDataServiceConfig = {\r\n  root: environment.apiRoot || 'api', // default root path to the server's web api\r\n  timeout: 60000, // request timeout, made large for docusign calls\r\n};\r\n\r\n/** All save operations are optimistic by default */\r\nconst entityDispatcherDefaultOptions: EntityDispatcherDefaultOptions = {\r\n  optimisticAdd: true,\r\n  optimisticDelete: true,\r\n  optimisticUpdate: true,\r\n  optimisticUpsert: true,\r\n  optimisticSaveEntities: true\r\n};\r\n\r\n/**\r\n * This app does not pluralize. The entity name is its own collection resource name.\r\n * Ex: the collection resource name for 'Company' is 'Company' (not 'Companies')\r\n */\r\nexport class NoPluralizer extends Pluralizer {\r\n  pluralize(name: string) { return name; }\r\n}\r\n\r\n/** All ngModule data service configuration providers for this app */\r\nexport const dataserviceConfigurationProviders: Provider[] = [\r\n  {\r\n    provide: DefaultDataServiceConfig,\r\n    useValue: dataServiceConfig\r\n  },\r\n  {\r\n    provide: EntityDispatcherDefaultOptions,\r\n    useValue: entityDispatcherDefaultOptions\r\n  },\r\n  { provide: Pluralizer, useClass: NoPluralizer }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions } from '@ngrx/effects';\r\nimport { EntityAction, ofEntityOp, OP_ERROR, OP_SUCCESS } from 'ngrx-data';\r\n\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environment';\r\nimport { LoggerService } from '@core/services/logger.service';\r\nimport { ToastService } from '@core/services/toast.service';\r\n\r\nconst showToast = window.location.search.includes('toast');\r\n\r\n/** Report ngrx-data success/error actions as toast messages **/\r\n@Injectable() // provided in module and injected there to start it.\r\nexport class NgrxDataToastService {\r\n  constructor(actions$: Actions, logger: LoggerService, toast: ToastService) {\r\n    // this service never dies so no need to unsubscribe\r\n    actions$\r\n      .pipe(\r\n        ofEntityOp(),\r\n        filter((ea: EntityAction) => ea.payload.entityOp.endsWith(OP_SUCCESS) || ea.payload.entityOp.endsWith(OP_ERROR))\r\n      )\r\n      .subscribe(action => {\r\n        const message = `${action.payload.entityName} action`;\r\n        if (showToast) {\r\n          toast.openSnackBar(message, action.payload.entityOp);\r\n        }\r\n        if (!environment.production) {\r\n          logger.log(message, action);\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Injectable, NgModule } from '@angular/core';\r\nimport { NgrxDataToastService } from './ngrx-data-toast.service';\r\n\r\n@NgModule({\r\n  providers: [\r\n    NgrxDataToastService\r\n  ]\r\n})\r\nexport class EntityServicesModule {\r\n  constructor(\r\n    toastService: NgrxDataToastService // injecting starts it\r\n  ) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { NgrxDataModule } from 'ngrx-data';\r\n\r\nimport { dataserviceConfigurationProviders } from './data-service-config';\r\nimport { entityMetadata } from './entity-metadata';\r\nimport { EntityServicesModule } from './entity-services/entity-services.module';\r\nimport { entityActionFactoryProvider } from './sp-entity-action-factory';\r\nimport { defaultDataServiceProvider } from './entity-services/sp-entity-collection-dataservice';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgrxDataModule.forRoot({ entityMetadata }),\r\n    EntityServicesModule\r\n  ],\r\n  providers: [\r\n    dataserviceConfigurationProviders,\r\n    defaultDataServiceProvider,\r\n    entityActionFactoryProvider\r\n  ]\r\n})\r\nexport class EntityStoreModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { StoreModule, MetaReducer } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\n\r\nimport { EntityStoreModule } from './entity/entity-store.module';\r\nimport { SessionStoreModule } from './session/session-store.module';\r\n\r\nimport { environment } from '@environment';\r\n\r\nexport const metaReducers: MetaReducer<any>[] = environment.production ? [] : [];\r\n\r\n@NgModule({\r\n  imports: [\r\n    StoreModule.forRoot({}, { metaReducers }),\r\n    EffectsModule.forRoot([]),\r\n    SessionStoreModule,\r\n    EntityStoreModule,\r\n    environment.production ? [] : StoreDevtoolsModule.instrument()\r\n  ]\r\n})\r\nexport class AppStoreModule {}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface SentryEnricher {\r\n    initialize(): void;\r\n}\r\n\r\nexport const SENTRY_ENRICHER = new InjectionToken<SentryEnricher>('EventProvider');\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { combineLatest } from 'rxjs';\r\nimport * as Raven from 'raven-js';\r\n\r\nimport { AuthService } from '@core/services/auth-services/auth.service';\r\nimport { environment } from '@environment';\r\nimport { getFullName, Indexable } from '@core';\r\nimport { SentryEnricher } from '@core/error-handling/sentry-enricher';\r\nimport { SessionService } from '@session';\r\nimport { UserRole } from '@model';\r\n\r\n@Injectable()\r\nexport class AuthErrorEnricher implements SentryEnricher {\r\n  constructor(private authService: AuthService, private sessionService: SessionService) {}\r\n\r\n  initialize(): void {\r\n    combineLatest(this.sessionService.authUser$, this.sessionService.currentUser$).subscribe(\r\n      ([authUser, currUser]) => {\r\n        let name: string;\r\n        if (authUser == null) {\r\n          Raven.setUserContext({\r\n            version: environment.version\r\n          });\r\n          return;\r\n        }\r\n        if (currUser) {\r\n          const context: Indexable = {\r\n            userId: currUser.id,\r\n            email: currUser.email,\r\n            companyId: currUser.companyId,\r\n            version: environment.version\r\n          };\r\n          if (currUser.id === authUser.id) {\r\n            // regular user\r\n            context.username = getFullName(currUser);\r\n          } else {\r\n            // admin user\r\n            context.username = `${getFullName(authUser)} (for ${getFullName(currUser)})`;\r\n            context.adminEmail = authUser.email;\r\n          }\r\n          Raven.setUserContext(context);\r\n        } else {\r\n          // No current user\r\n          name = getFullName(authUser);\r\n          Raven.setUserContext({\r\n            username: name,\r\n            userId: authUser.id,\r\n            email: authUser.email,\r\n            companyId: authUser.companyId,\r\n            version: environment.version\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    this.authService.errors$.subscribe(err => {\r\n      if (err) {\r\n        Raven.captureMessage(err, {\r\n          level: 'error',\r\n          tags: { location: 'auth' }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { combineLatest } from 'rxjs';\nimport * as Raven from 'raven-js';\nimport { AuthService } from '@core/services/auth-services/auth.service';\nimport { environment } from '@environment';\nimport { getFullName } from '@core';\nimport { SessionService } from '@session';\nvar AuthErrorEnricher = /** @class */ (function () {\n    function AuthErrorEnricher(authService, sessionService) {\n        this.authService = authService;\n        this.sessionService = sessionService;\n    }\n    AuthErrorEnricher.prototype.initialize = function () {\n        combineLatest(this.sessionService.authUser$, this.sessionService.currentUser$).subscribe(function (_a) {\n            var authUser = _a[0], currUser = _a[1];\n            var name;\n            if (authUser == null) {\n                Raven.setUserContext({\n                    version: environment.version\n                });\n                return;\n            }\n            if (currUser) {\n                var context = {\n                    userId: currUser.id,\n                    email: currUser.email,\n                    companyId: currUser.companyId,\n                    version: environment.version\n                };\n                if (currUser.id === authUser.id) {\n                    // regular user\n                    context.username = getFullName(currUser);\n                }\n                else {\n                    // admin user\n                    context.username = getFullName(authUser) + \" (for \" + getFullName(currUser) + \")\";\n                    context.adminEmail = authUser.email;\n                }\n                Raven.setUserContext(context);\n            }\n            else {\n                // No current user\n                name = getFullName(authUser);\n                Raven.setUserContext({\n                    username: name,\n                    userId: authUser.id,\n                    email: authUser.email,\n                    companyId: authUser.companyId,\n                    version: environment.version\n                });\n            }\n        });\n        this.authService.errors$.subscribe(function (err) {\n            if (err) {\n                Raven.captureMessage(err, {\n                    level: 'error',\n                    tags: { location: 'auth' }\n                });\n            }\n        });\n    };\n    return AuthErrorEnricher;\n}());\nexport { AuthErrorEnricher };\n","import { Injectable } from '@angular/core';\r\n\r\nimport { filter } from 'rxjs/operators';\r\nimport * as Raven from 'raven-js';\r\n\r\nimport { LoggerService } from '@core/services';\r\nimport { SentryEnricher } from './sentry-enricher';\r\n\r\n@Injectable()\r\nexport class LoggerServiceEnricher implements SentryEnricher {\r\n\r\n    constructor(private logger: LoggerService) {}\r\n\r\n    initialize(): void {\r\n        this.logger.entries$\r\n        .pipe(filter(e => e.type === 'error' || e.type === 'warn'))\r\n        .subscribe( err => {\r\n            Raven.captureMessage(err.entry, {\r\n                level: err.type,\r\n                tags: { location: 'Logger Service' }\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { Inject, ModuleWithProviders,  NgModule, Optional } from '@angular/core';\r\n\r\nimport { environment } from '@environment';\r\n\r\nimport { AuthErrorEnricher } from './auth-error-enricher';\r\nimport { LoggerServiceEnricher } from './logger-enricher';\r\nimport { SENTRY_ENRICHER, SentryEnricher } from './sentry-enricher';\r\n\r\n@NgModule({ })\r\nexport class SentryModule {\r\n\r\n    constructor(\r\n        @Optional() @Inject(SENTRY_ENRICHER) private eventProviders: SentryEnricher[]\r\n    ) {\r\n        if (environment.enableSentry && this.eventProviders) {\r\n            this.eventProviders.forEach( ep => {\r\n                ep.initialize();\r\n            });\r\n        }\r\n    }\r\n\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: SentryModule,\r\n            providers: [\r\n                { provide: SENTRY_ENRICHER, useClass: AuthErrorEnricher, multi: true },\r\n                { provide: SENTRY_ENRICHER, useClass: LoggerServiceEnricher, multi: true },\r\n            ]\r\n        };\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { VALIDATION_ENTITY_METADATA } from './validation.service';\r\nimport { ModelValidationMetadataMap } from './validation-metadata';\r\nimport { defaultValidatorProviders } from './default-validators';\r\n\r\nexport interface ValidationModuleConfig {\r\n  validationMetadata: ModelValidationMetadataMap[];\r\n}\r\n\r\n@NgModule({\r\n  providers: [\r\n    defaultValidatorProviders\r\n  ]\r\n})\r\nexport class ValidationModule {\r\n  static forRoot(config: ValidationModuleConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ValidationModule,\r\n      providers: [\r\n        {\r\n          provide: VALIDATION_ENTITY_METADATA,\r\n          useValue: config.validationMetadata || [],\r\n          multi: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { NgModule, ErrorHandler } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\r\nimport { NgbModule, NgbRadioGroup, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\n// Monitor and debug rxjs Observables.  Hangs IE11.\r\n// https://github.com/cartant/rxjs-spy/blob/master/README.md\r\n// import { create as rxjsCreate } from 'rxjs-spy';\r\n// rxjsCreate(); // Start rxjs-spy\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { AccountDetailsModule } from '@app/account-details';\r\nimport { AppStoreModule } from './store/app-store.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthComponentsModule } from '@app/auth-components/auth-components.module';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { CoreComponentsModule } from './core-components/core-components.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ConcurrencyFailureComponent } from './concurrency-failure/concurrency-failure.component';\r\nimport { FailedComponent } from './failed/failed.component';\r\n\r\nimport { AnalyticsModule } from '@core/analytics/analytics.module';\r\nimport { DecimalPipe, DatePipe } from '@angular/common';\r\nimport { modelValidatorProviders } from '@model/validators';\r\nimport { SentryErrorHandler } from '@core/error-handling/sentry-error-handler';\r\nimport { SentryModule } from '@core/error-handling/sentry.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { TaxCollectorService } from '@core/services/tax-services/tax-collector.service';\r\nimport { TermsComponent } from './terms/terms.component';\r\nimport { validationMetadata } from '@model/validation-metadata';\r\nimport { ValidationModule } from '@validation';\r\nimport { StatsService } from '@entity';\r\nimport { DateParserFormatter } from './shared/filter/filter-dateformat';\r\nimport { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AccountDetailsModule,\r\n    AnalyticsModule.forRoot([]),\r\n    AuthComponentsModule,\r\n    CoreModule,\r\n    CoreComponentsModule,\r\n    HttpClientModule,\r\n    HttpClientJsonpModule,\r\n    SharedModule,\r\n    AppRoutingModule,\r\n    AppStoreModule,\r\n    NgbModule.forRoot(),\r\n    ToastrModule.forRoot(),\r\n    SentryModule.forRoot(),\r\n    ValidationModule.forRoot({ validationMetadata })\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    ConcurrencyFailureComponent,\r\n    FailedComponent,\r\n    TermsComponent\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  providers: [\r\n    modelValidatorProviders,\r\n    DecimalPipe, // must inject for InputMaskCatalog\r\n    DatePipe, // must inject for InputMaskCatalog\r\n    { provide: ErrorHandler, useClass: SentryErrorHandler },\r\n    NgbRadioGroup,\r\n    {provide: NgbDateParserFormatter, useClass: DateParserFormatter}\r\n  ]\r\n})\r\nexport class AppModule {\r\n  // Inject StatsService. Needs to be created upfront to hook into router and start tracking routes\r\n  // The tax collector needs to be initialized for the entire application\r\n  constructor(statsService: StatsService, taxCollector: TaxCollectorService) {\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientInMemoryWebApiModule, InMemoryDbService } from 'angular-in-memory-web-api';\r\n\r\nimport { httpClientBackendServiceProvider } from './http-client-backend-service-sp';\r\nimport { InMemoryDataService } from './in-memory-data.service';\r\n@NgModule({\r\n  imports: [\r\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\r\n    // and returns simulated server responses.\r\n    HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, {\r\n      dataEncapsulation: false,\r\n      // pretend to take 1/2 second for each server request\r\n      delay: 500,\r\n      passThruUnknownUrl: true\r\n    })\r\n  ],\r\n  providers: [\r\n    { provide: InMemoryDataService, useExisting: InMemoryDbService },\r\n    httpClientBackendServiceProvider\r\n  ]\r\n})\r\nexport class MockServicesModule {\r\n  constructor() {\r\n    console.log('MockServicesModule created');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { OidcManagerFactory } from '@core/services/auth-services/oidc-manager-factory';\r\nimport { MockOidcManagerFactory } from './mock-oidc-manager-factory';\r\n\r\n@NgModule({\r\n  providers: [\r\n    { provide: OidcManagerFactory, useClass: MockOidcManagerFactory }\r\n  ]\r\n})\r\nexport class MockAuthModule {\r\n  constructor() {\r\n    console.log('MockAuthModule created');\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { VALIDATOR_FACTORY } from './validation.service';\nimport { Validator } from './validator';\nimport { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';\nvar RequiredValidator = /** @class */ (function (_super) {\n    __extends(RequiredValidator, _super);\n    function RequiredValidator(group, validatorContext) {\n        return _super.call(this, 'required', group, function (value, context) { return value != null && (typeof value !== 'string' || value !== ''); }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || '%displayName% is required' })) || this;\n    }\n    RequiredValidator.create = function (group, context) {\n        return new RequiredValidator(group, context);\n    };\n    return RequiredValidator;\n}(Validator));\nexport { RequiredValidator };\nvar MinLengthValidator = /** @class */ (function (_super) {\n    __extends(MinLengthValidator, _super);\n    function MinLengthValidator(group, validatorContext) {\n        return _super.call(this, 'minLength', group, function (value, context) {\n            if (!value) {\n                return true;\n            }\n            return typeof (value) === 'string' && value.length >= context.minLength;\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || MinLengthValidator.messageTemplate })) || this;\n    }\n    MinLengthValidator.create = function (group, context) {\n        return new MinLengthValidator(group, context);\n    };\n    MinLengthValidator.messageTemplate = '%displayName% must be a string with at least %minLength% characters';\n    return MinLengthValidator;\n}(Validator));\nexport { MinLengthValidator };\nvar MaxLengthValidator = /** @class */ (function (_super) {\n    __extends(MaxLengthValidator, _super);\n    function MaxLengthValidator(group, validatorContext) {\n        return _super.call(this, 'maxLength', group, function (value, context) {\n            if (!value) {\n                return true;\n            }\n            return typeof (value) === 'string' && value.length <= context.maxLength;\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || MaxLengthValidator.messageTemplate })) || this;\n    }\n    MaxLengthValidator.create = function (group, context) {\n        return new MaxLengthValidator(group, context);\n    };\n    MaxLengthValidator.messageTemplate = '%displayName% must be a string with at most %maxLength% characters';\n    return MaxLengthValidator;\n}(Validator));\nexport { MaxLengthValidator };\nvar RegExpValidator = /** @class */ (function (_super) {\n    __extends(RegExpValidator, _super);\n    function RegExpValidator(name, group, validatorContext) {\n        return _super.call(this, name, group, function (value, context) {\n            if (!value) {\n                return true;\n            }\n            var expression = context.expression;\n            return typeof (value) === 'string' && expression.test(value);\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || RegExpValidator.messageTemplate })) || this;\n    }\n    RegExpValidator.create = function (name, group, context) {\n        return new RegExpValidator(name, group, context);\n    };\n    RegExpValidator.messageTemplate = 'The %displayName% \\'%value%\\' does not match \\'%expression%\\'';\n    return RegExpValidator;\n}(Validator));\nexport { RegExpValidator };\nvar RangeValidator = /** @class */ (function (_super) {\n    __extends(RangeValidator, _super);\n    function RangeValidator(group, validatorContext) {\n        return _super.call(this, 'range', group, function (value, context) {\n            if (!value) {\n                return true;\n            }\n            return value >= context.minValue && value <= context.maxValue;\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || RangeValidator.messageTemplate })) || this;\n    }\n    RangeValidator.create = function (group, context) {\n        return new RangeValidator(group, context);\n    };\n    RangeValidator.messageTemplate = '%displayName% must be between the values of %minValue% and %maxValue%';\n    return RangeValidator;\n}(Validator));\nexport { RangeValidator };\nvar InvalidValuesValidator = /** @class */ (function (_super) {\n    __extends(InvalidValuesValidator, _super);\n    function InvalidValuesValidator(group, validatorContext) {\n        var _this = _super.call(this, 'invalidValues', group, function (value, context) {\n            if (!value) {\n                return true;\n            }\n            return !(context.values || []).some(function (v) { return _this.test(v, value); });\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || InvalidValuesValidator.messageTemplate })) || this;\n        return _this;\n    }\n    InvalidValuesValidator.create = function (group, context) {\n        return new InvalidValuesValidator(group, context);\n    };\n    InvalidValuesValidator.prototype.test = function (expression, value) {\n        var match = expression.match(/\\/(.*)\\//);\n        if (match) {\n            return new RegExp(match[1]).test(value);\n        }\n        return expression === value;\n    };\n    InvalidValuesValidator.messageTemplate = 'The value \\'%value%\\' is not a valid input for %displayName%';\n    return InvalidValuesValidator;\n}(Validator));\nexport { InvalidValuesValidator };\nvar CurrencyValidator = /** @class */ (function (_super) {\n    __extends(CurrencyValidator, _super);\n    function CurrencyValidator(group, validatorContext) {\n        var _this = _super.call(this, 'currency', group, function (value, context) {\n            if (!value) {\n                return true;\n            }\n            if (typeof (value) === 'number') {\n                return true;\n            }\n            return typeof (value) === 'string' && !_this.regExpValidator.validate(value, context);\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || CurrencyValidator.messageTemplate })) || this;\n        _this.regExpValidator = makeCurrencyValidator(group, validatorContext);\n        return _this;\n    }\n    CurrencyValidator.create = function (group, context) {\n        return new CurrencyValidator(group, context);\n    };\n    CurrencyValidator.messageTemplate = '%displayName% must be a valid currency amount';\n    return CurrencyValidator;\n}(Validator));\nexport { CurrencyValidator };\nvar CompareValidator = /** @class */ (function (_super) {\n    __extends(CompareValidator, _super);\n    function CompareValidator(group, validatorContext) {\n        return _super.call(this, 'compare', group, function (value, context) {\n            if (!value) {\n                return true;\n            }\n            var otherValue = context.model[context.other];\n            var op = context.op;\n            if (op === '==') {\n                return value === otherValue;\n            }\n            else if (op === '<') {\n                return value < otherValue;\n            }\n            else if (op === '<=') {\n                return value <= otherValue;\n            }\n            else if (op === '>') {\n                return value > otherValue;\n            }\n            else if (op === '>=') {\n                return value >= otherValue;\n            }\n            else if (op === '!=') {\n                return value !== otherValue;\n            }\n            return false;\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || 'Invalid value' })) || this;\n    }\n    CompareValidator.create = function (group, context) {\n        return new CompareValidator(group, context);\n    };\n    return CompareValidator;\n}(Validator));\nexport { CompareValidator };\nvar DateValidator = /** @class */ (function (_super) {\n    __extends(DateValidator, _super);\n    function DateValidator(calendar, group, validatorContext) {\n        var _this = _super.call(this, 'date', group, function (value, context) {\n            if (!value) {\n                return true;\n            }\n            if (typeof value === 'string') {\n                try {\n                    var date = new Date(value);\n                    if (!_this.__isDate(date)) {\n                        return false;\n                    }\n                    value = _this.__parse(value);\n                    if (!value) {\n                        return false;\n                    }\n                }\n                catch (e) {\n                    return false;\n                }\n            }\n            if (_this.__isDate(value)) {\n                var ngbDate = new NgbDate(value.getFullYear(), value.getMonth() + 1, value.getDate());\n                return _this.calendar.isValid(ngbDate);\n            }\n            else if (_this.__isDateStruct(value)) {\n                var ngbDate = new NgbDate(value.year, value.month, value.day);\n                return _this.calendar.isValid(ngbDate);\n            }\n            else {\n                return false;\n            }\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || DateValidator.messageTemplate })) || this;\n        _this.calendar = calendar;\n        return _this;\n    }\n    DateValidator.factory = function (calendar) {\n        return {\n            name: 'date',\n            fn: function (group, context) {\n                return new DateValidator(calendar, group, context);\n            }\n        };\n    };\n    DateValidator.prototype.__isDate = function (o) {\n        return o instanceof Date && !isNaN(o.getTime());\n    };\n    DateValidator.prototype.__isDateStruct = function (o) {\n        return !!(o.year && o.month && o.day);\n    };\n    DateValidator.prototype.__parse = function (o) {\n        var match;\n        if (match = o.match(/^(\\d{4}|\\d{2})\\s*-\\s*(\\d{2}|\\d{1})\\s*-\\s*(\\d{2}|\\d{1})$/)) {\n            return { year: +match[1], month: +match[2], day: +match[3] };\n            // tslint:disable-next-line:max-line-length\n        }\n        else if (match = o.match(/^(\\d{4})\\D?(0[1-9]|1[0-2])\\D?([12]\\d|0[1-9]|3[01])(\\D?([01]\\d|2[0-3])\\D?([0-5]\\d)\\D?([0-5]\\d)?\\D?(\\d{3})?([zZ]|([\\+-])([01]\\d|2[0-3])\\D?([0-5]\\d)?)?)?$/)) {\n            return { year: +match[1], month: +match[2], day: +match[3] };\n        }\n        else if (match = o.match(/^(\\d{1,2})\\s*[\\/-]\\s*(\\d{1,2})\\s*[\\/-]\\s*(\\d{4}|\\d{2})$/)) {\n            // CASE 3: MM/dd/yyyy  (render values sent to validator)\n            return { year: +match[3], month: +match[1], day: +match[2] };\n        }\n        return null;\n    };\n    DateValidator.messageTemplate = '%displayName% must be a valid date';\n    return DateValidator;\n}(Validator));\nexport { DateValidator };\nexport function makeZipCodeValidator(group, context) {\n    context = __assign({}, context, { expression: /^\\d{5}([\\-]\\d{4})?$/, messageTemplate: '%displayName% is not a valid U.S. zipcode' });\n    return RegExpValidator.create('zipCode', group, context);\n}\nexport function makeEmailValidator(group, context) {\n    // tslint:disable-next-line:max-line-length\n    var reEmailAddress = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i;\n    context = __assign({}, context, { expression: reEmailAddress, messageTemplate: '%displayName% is not a valid email address' });\n    return RegExpValidator.create('email', group, context);\n}\nexport function makePhoneValidator(group, context) {\n    context = __assign({}, context, { \n        // Too forgiving\n        // expression: /^((\\+|(0(\\d+)?[-/.\\s]?))[1-9]\\d{0,2}[-/.\\s]?)?((\\(\\d{1,6}\\)|\\d{1,6})[-/.\\s]?)?(\\d+[-/.\\s]?)+\\d+$/,\n        // The following forces 10-digit US w/ no country code. You can insert punctuation and spaces\n        // We will strip these out before sending to SP.\n        expression: /^\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/, messageTemplate: '%displayName% must be 10-digit phone number' });\n    return RegExpValidator.create('phone', group, context);\n}\nexport function makeCurrencyValidator(group, context) {\n    context = __assign({}, context, { expression: /^[+-]?[0-9]{1,3}(?:,?[0-9]{3})*(?:\\.[0-9]{2})?$/, messageTemplate: '%displayName% must be a valid currency amount' });\n    return RegExpValidator.create('currency', group, context);\n}\nexport function makeSocialSecurityNumberValidator(group, context) {\n    context = __assign({}, context, { expression: /^(\\d{3}-\\d{2}-\\d{4})|(\\d{3}\\d{2}\\d{4})$/, messageTemplate: '%displayName% must be a valid Social Security number' });\n    return RegExpValidator.create('social', group, context);\n}\nexport function makeNumericValidator(group, context) {\n    var messageTemplate = '%displayName% must be a numeric value';\n    var messageTemplateLeadingZeros = '%displayName% must be a numeric value with optional leading zeros';\n    context = __assign({}, context, { expression: context && context.allowLeadingZeros ? /^([0-9]*)$/ : /^([1-9][0-9]*)$/, messageTemplate: context && context.messageTemplate ||\n            context && context.allowLeadingZeros ? messageTemplateLeadingZeros : messageTemplate });\n    return RegExpValidator.create('numeric', group, context);\n}\nexport function makeFeinValidator(group, context) {\n    context = __assign({}, context, { expression: /^\\d{2}?-\\d{7}$/, messageTemplate: '%displayName% format is incorrect. Expected format is \\'##-#######\\'' });\n    return RegExpValidator.create('fein', group, context);\n}\nvar ExpressionValidator = /** @class */ (function (_super) {\n    __extends(ExpressionValidator, _super);\n    function ExpressionValidator(group, validatorContext) {\n        var _this = _super.call(this, 'expression', group, function (value, context) {\n            if (!value) {\n                return true;\n            }\n            try {\n                /**\n                 * SECURITY: Safe because text passed to `Function` comes from our server, not the user\n                 */\n                if (!context.expressionFn) {\n                    var evalFunc = \"function(context, model, isClient, isServer){ return \" + context.expression + \" }\";\n                    context.expressionFn = Function(\"\\\"use strict\\\";return (\" + evalFunc + \")\")();\n                }\n                return context.expressionFn(context, context.model, context.isClient, context.isServer);\n            }\n            catch (e) {\n                var message = \"Expression '\" + context.expression + \"' failed for validator '\" + _this.name + \"'\" +\n                    (\" and model type '\" + context.modelType + \"' with error '\" + e.message + \"'\");\n                return false;\n            }\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || 'Invalid value' })) || this;\n        return _this;\n    }\n    ExpressionValidator.create = function (group, context) {\n        return new ExpressionValidator(group, context);\n    };\n    return ExpressionValidator;\n}(Validator));\nexport { ExpressionValidator };\nexport var defaultValidatorProviders = [\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'required', fn: RequiredValidator.create }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'minLength', fn: MinLengthValidator.create }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'maxLength', fn: MaxLengthValidator.create }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'zipCode', fn: makeZipCodeValidator }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'phone', fn: makePhoneValidator }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'email', fn: makeEmailValidator }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'currency', fn: CurrencyValidator.create }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'social', fn: makeSocialSecurityNumberValidator }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'fein', fn: makeFeinValidator }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'compare', fn: CompareValidator.create }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'range', fn: RangeValidator.create }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'numeric', fn: makeNumericValidator }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'invalidValues', fn: InvalidValuesValidator.create }, multi: true },\n    { provide: VALIDATOR_FACTORY, useValue: { name: 'expression', fn: ExpressionValidator.create }, multi: true },\n    { provide: VALIDATOR_FACTORY, useFactory: DateValidator.factory, deps: [NgbCalendar], multi: true }\n];\n","import { ValueProvider, FactoryProvider } from '@angular/core';\r\nimport { VALIDATOR_FACTORY } from './validation.service';\r\nimport { Validator, ValidationContextBase, ValidatorFactory } from './validator';\r\nimport { timer, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NgbDateStruct, NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nexport class RequiredValidator extends Validator {\r\n\r\n  static create(group: string, context?: Partial<ValidationContextBase>) {\r\n    return new RequiredValidator(group, context);\r\n  }\r\n\r\n  constructor(group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n    super('required', group,\r\n      (value, context) => value != null && (typeof value !== 'string' || value !== ''),\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || '%displayName% is required'\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport class MinLengthValidator extends Validator {\r\n\r\n  static create(group: string, context?: Partial<ValidationContextBase>) {\r\n    return new MinLengthValidator(group, context);\r\n  }\r\n\r\n  private static messageTemplate = '%displayName% must be a string with at least %minLength% characters';\r\n\r\n  constructor(group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n    super('minLength', group,\r\n      (value, context) => {\r\n        if (!value) { return true; }\r\n        return typeof (value) === 'string' && value.length >= context.minLength;\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || MinLengthValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport class MaxLengthValidator extends Validator {\r\n\r\n  static create(group: string, context?: Partial<ValidationContextBase>) {\r\n    return new MaxLengthValidator(group, context);\r\n  }\r\n\r\n  private static messageTemplate = '%displayName% must be a string with at most %maxLength% characters';\r\n\r\n  constructor(group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n    super('maxLength', group,\r\n      (value, context) => {\r\n        if (!value) { return true; }\r\n        return typeof (value) === 'string' && value.length <= context.maxLength;\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || MaxLengthValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport class RegExpValidator extends Validator {\r\n\r\n  static create(name: string, group: string, context?: Partial<ValidationContextBase>) {\r\n    return new RegExpValidator(name, group, context);\r\n  }\r\n\r\n  private static messageTemplate = 'The %displayName% \\'%value%\\' does not match \\'%expression%\\'';\r\n\r\n  constructor(name: string, group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n    super(name, group,\r\n      (value, context) => {\r\n        if (!value) { return true; }\r\n        const expression = context.expression as RegExp;\r\n        return typeof (value) === 'string' && expression.test(value);\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || RegExpValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport class RangeValidator extends Validator {\r\n\r\n  static create(group: string, context?: Partial<ValidationContextBase>) {\r\n    return new RangeValidator(group, context);\r\n  }\r\n\r\n  private static messageTemplate = '%displayName% must be between the values of %minValue% and %maxValue%';\r\n\r\n  constructor(group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n    super('range', group,\r\n      (value, context) => {\r\n        if (!value) { return true; }\r\n        return value >= context.minValue && value <= context.maxValue;\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || RangeValidator.messageTemplate\r\n      });\r\n  }\r\n}\r\n\r\nexport class InvalidValuesValidator extends Validator {\r\n\r\n  static create(group: string, context?: Partial<ValidationContextBase>) {\r\n    return new InvalidValuesValidator(group, context);\r\n  }\r\n\r\n  private static messageTemplate = 'The value \\'%value%\\' is not a valid input for %displayName%';\r\n\r\n  constructor(group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n    super('invalidValues', group,\r\n      (value, context) => {\r\n        if (!value) { return true; }\r\n        return !(context.values || []).some((v: any) => this.test(v, value));\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || InvalidValuesValidator.messageTemplate\r\n      });\r\n  }\r\n\r\n  private test(expression: string, value: string) {\r\n    const match = expression.match(/\\/(.*)\\//);\r\n    if (match) {\r\n      return new RegExp(match[1]).test(value);\r\n    }\r\n\r\n    return expression === value;\r\n  }\r\n}\r\n\r\nexport class CurrencyValidator extends Validator {\r\n\r\n  static create(group: string, context?: Partial<ValidationContextBase>) {\r\n    return new CurrencyValidator(group, context);\r\n  }\r\n\r\n  private static messageTemplate = '%displayName% must be a valid currency amount';\r\n\r\n  private regExpValidator: Validator;\r\n\r\n  constructor(group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n    super('currency', group,\r\n      (value, context) => {\r\n        if (!value) { return true; }\r\n        if (typeof(value) === 'number') { return true; }\r\n\r\n        return typeof(value) === 'string' && !this.regExpValidator.validate(value, context);\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || CurrencyValidator.messageTemplate\r\n      });\r\n\r\n    this.regExpValidator = makeCurrencyValidator(group, validatorContext);\r\n  }\r\n}\r\n\r\nexport class CompareValidator extends Validator {\r\n\r\n  static create(group: string, context?: Partial<ValidationContextBase>) {\r\n    return new CompareValidator(group, context);\r\n  }\r\n\r\n  constructor(group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n    super('compare', group,\r\n      (value, context) => {\r\n        if (!value) { return true; }\r\n        const otherValue = context.model[context.other];\r\n        const op = context.op;\r\n\r\n        if (op === '==') {\r\n          return value === otherValue;\r\n        } else if (op === '<') {\r\n          return value < otherValue;\r\n        } else if (op === '<=') {\r\n          return value <= otherValue;\r\n        } else if (op === '>') {\r\n          return value > otherValue;\r\n        } else if (op === '>=') {\r\n          return value >= otherValue;\r\n        } else if (op === '!=') {\r\n          return value !== otherValue;\r\n        }\r\n\r\n        return false;\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || 'Invalid value'\r\n      });\r\n  }\r\n}\r\n\r\nexport class DateValidator extends Validator {\r\n\r\n  static factory(calendar: NgbCalendar): ValidatorFactory {\r\n    return {\r\n      name: 'date',\r\n      fn: (group, context) => {\r\n        return new DateValidator(calendar, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  private static messageTemplate = '%displayName% must be a valid date';\r\n\r\n  constructor(private calendar: NgbCalendar, group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n    super('date', group,\r\n      (value, context) => {\r\n        if (!value) { return true; }\r\n\r\n        if (typeof value === 'string') {\r\n          try {\r\n            const date = new Date(value);\r\n            if (!this.__isDate(date)) {\r\n              return false;\r\n            }\r\n            value = this.__parse(value);\r\n            if (!value) {\r\n              return false;\r\n            }\r\n          } catch (e) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        if (this.__isDate(value)) {\r\n          const ngbDate = new NgbDate(value.getFullYear(), value.getMonth() + 1, value.getDate());\r\n          return this.calendar.isValid(ngbDate);\r\n        } else if (this.__isDateStruct(value)) {\r\n          const ngbDate = new NgbDate(value.year, value.month, value.day);\r\n          return this.calendar.isValid(ngbDate);\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || DateValidator.messageTemplate\r\n      });\r\n  }\r\n\r\n  private __isDate(o: any): o is Date {\r\n    return o instanceof Date && !isNaN(o.getTime());\r\n  }\r\n\r\n  private __isDateStruct(o: NgbDateStruct): o is NgbDateStruct {\r\n    return !!(o.year && o.month && o.day);\r\n  }\r\n\r\n  private __parse(o: string): NgbDateStruct {\r\n    let match: RegExpMatchArray;\r\n    if (match = o.match(/^(\\d{4}|\\d{2})\\s*-\\s*(\\d{2}|\\d{1})\\s*-\\s*(\\d{2}|\\d{1})$/)) {\r\n      return { year: +match[1], month: +match[2], day: +match[3] };\r\n    // tslint:disable-next-line:max-line-length\r\n    } else if (match = o.match(/^(\\d{4})\\D?(0[1-9]|1[0-2])\\D?([12]\\d|0[1-9]|3[01])(\\D?([01]\\d|2[0-3])\\D?([0-5]\\d)\\D?([0-5]\\d)?\\D?(\\d{3})?([zZ]|([\\+-])([01]\\d|2[0-3])\\D?([0-5]\\d)?)?)?$/)) {\r\n      return { year: +match[1], month: +match[2], day: +match[3] };\r\n    } else if (match = o.match(/^(\\d{1,2})\\s*[\\/-]\\s*(\\d{1,2})\\s*[\\/-]\\s*(\\d{4}|\\d{2})$/)) {\r\n      // CASE 3: MM/dd/yyyy  (render values sent to validator)\r\n      return { year: +match[3], month: +match[1], day: +match[2] };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function makeZipCodeValidator(group: string, context?: Partial<ValidationContextBase>) {\r\n  context = {\r\n    ...context,\r\n    expression: /^\\d{5}([\\-]\\d{4})?$/,\r\n    messageTemplate: '%displayName% is not a valid U.S. zipcode'\r\n  };\r\n\r\n  return RegExpValidator.create('zipCode', group, context);\r\n}\r\n\r\nexport function makeEmailValidator(group: string, context?: Partial<ValidationContextBase>) {\r\n  // tslint:disable-next-line:max-line-length\r\n  const reEmailAddress = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i;\r\n\r\n  context = {\r\n    ...context,\r\n    expression: reEmailAddress,\r\n    messageTemplate: '%displayName% is not a valid email address'\r\n  };\r\n\r\n  return RegExpValidator.create('email', group, context);\r\n}\r\n\r\nexport function makePhoneValidator(group: string, context?: Partial<ValidationContextBase>) {\r\n  context = {\r\n    ...context,\r\n    // Too forgiving\r\n    // expression: /^((\\+|(0(\\d+)?[-/.\\s]?))[1-9]\\d{0,2}[-/.\\s]?)?((\\(\\d{1,6}\\)|\\d{1,6})[-/.\\s]?)?(\\d+[-/.\\s]?)+\\d+$/,\r\n    // The following forces 10-digit US w/ no country code. You can insert punctuation and spaces\r\n    // We will strip these out before sending to SP.\r\n    expression: /^\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/,\r\n    messageTemplate: '%displayName% must be 10-digit phone number'\r\n  };\r\n\r\n  return RegExpValidator.create('phone', group, context);\r\n}\r\n\r\nexport function makeCurrencyValidator(group: string, context?: Partial<ValidationContextBase>) {\r\n  context = {\r\n    ...context,\r\n    expression: /^[+-]?[0-9]{1,3}(?:,?[0-9]{3})*(?:\\.[0-9]{2})?$/,\r\n    messageTemplate: '%displayName% must be a valid currency amount'\r\n  };\r\n\r\n  return RegExpValidator.create('currency', group, context);\r\n}\r\n\r\nexport function makeSocialSecurityNumberValidator(group: string, context?: Partial<ValidationContextBase>) {\r\n  context = {\r\n    ...context,\r\n    expression: /^(\\d{3}-\\d{2}-\\d{4})|(\\d{3}\\d{2}\\d{4})$/,\r\n    messageTemplate: '%displayName% must be a valid Social Security number'\r\n  };\r\n\r\n  return RegExpValidator.create('social', group, context);\r\n}\r\n\r\nexport function makeNumericValidator(group: string, context?: Partial<ValidationContextBase>) {\r\n  const messageTemplate = '%displayName% must be a numeric value';\r\n  const messageTemplateLeadingZeros = '%displayName% must be a numeric value with optional leading zeros';\r\n\r\n  context = {\r\n    ...context,\r\n    expression: context && context.allowLeadingZeros ? /^([0-9]*)$/ : /^([1-9][0-9]*)$/,\r\n    messageTemplate: context && context.messageTemplate ||\r\n      context && context.allowLeadingZeros ? messageTemplateLeadingZeros : messageTemplate\r\n  };\r\n\r\n  return RegExpValidator.create('numeric', group, context);\r\n}\r\n\r\nexport function makeFeinValidator(group: string, context?: Partial<ValidationContextBase>) {\r\n  context = {\r\n    ...context,\r\n    expression: /^\\d{2}?-\\d{7}$/,\r\n    messageTemplate: '%displayName% format is incorrect. Expected format is \\'##-#######\\''\r\n  };\r\n\r\n  return RegExpValidator.create('fein', group, context);\r\n}\r\n\r\nexport class ExpressionValidator extends Validator {\r\n\r\n  static create(group: string, context?: Partial<ValidationContextBase>) {\r\n    return new ExpressionValidator(group, context);\r\n  }\r\n\r\n  constructor(group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n    super('expression', group,\r\n      (value, context) => {\r\n        if (!value) { return true; }\r\n\r\n        try {\r\n          /**\r\n           * SECURITY: Safe because text passed to `Function` comes from our server, not the user\r\n           */\r\n          if (!context.expressionFn) {\r\n            const evalFunc = `function(context, model, isClient, isServer){ return ${context.expression} }`;\r\n            context.expressionFn = Function(`\"use strict\";return (${evalFunc})`)();\r\n          }\r\n          return context.expressionFn(context, context.model, context.isClient, context.isServer);\r\n        } catch (e) {\r\n          const message = `Expression '${context.expression}' failed for validator '${this.name}'` +\r\n            ` and model type '${context.modelType}' with error '${e.message}'`;\r\n          return false;\r\n        }\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || 'Invalid value'\r\n      });\r\n  }\r\n}\r\n\r\nexport const defaultValidatorProviders: (ValueProvider | FactoryProvider)[] = [\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'required', fn: RequiredValidator.create }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'minLength', fn: MinLengthValidator.create }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'maxLength', fn: MaxLengthValidator.create }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'zipCode', fn: makeZipCodeValidator }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'phone', fn: makePhoneValidator }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'email', fn: makeEmailValidator }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'currency', fn: CurrencyValidator.create }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'social', fn: makeSocialSecurityNumberValidator }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'fein', fn: makeFeinValidator }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'compare', fn: CompareValidator.create }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'range', fn: RangeValidator.create }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'numeric', fn: makeNumericValidator }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'invalidValues', fn: InvalidValuesValidator.create }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useValue: { name: 'expression', fn: ExpressionValidator.create }, multi: true },\r\n  { provide: VALIDATOR_FACTORY, useFactory: DateValidator.factory, deps: [NgbCalendar], multi: true }\r\n];\r\n\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AsyncValidator } from '@validation';\nimport { map, first } from 'rxjs/operators';\nvar MustHaveEmployeesValidator = /** @class */ (function (_super) {\n    __extends(MustHaveEmployeesValidator, _super);\n    function MustHaveEmployeesValidator(entitySelectors, group, validatorContext) {\n        return _super.call(this, 'mustHaveEmployees', group, function (value, context) {\n            return entitySelectors.employee.entities$.pipe(map(function (ees) {\n                ees = ees.filter(function (ee) { return !ee.isRemoved; });\n                // valid if has employees\n                return ees.length > 0;\n            }), first());\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || MustHaveEmployeesValidator.messageTemplate })) || this;\n    }\n    MustHaveEmployeesValidator.factory = function (entitySelectors) {\n        return {\n            name: 'mustHaveEmployees',\n            fn: function (group, context) {\n                return new MustHaveEmployeesValidator(entitySelectors, group, context);\n            }\n        };\n    };\n    MustHaveEmployeesValidator.messageTemplate = \"You have not entered employees. Confirm this is OK by answering \\\"No\\\" to the question %displayName%\";\n    return MustHaveEmployeesValidator;\n}(AsyncValidator));\nexport { MustHaveEmployeesValidator };\n","import { AsyncValidator, ValidationContextBase, ValidatorFactory } from '@validation';\r\nimport { EntitySelectors } from '@entity';\r\nimport { combineLatest } from 'rxjs';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nexport class MustHaveEmployeesValidator extends AsyncValidator {\r\n\r\n  static factory(entitySelectors: EntitySelectors): ValidatorFactory {\r\n    return {\r\n      name: 'mustHaveEmployees',\r\n      fn: (group, context) => {\r\n        return new MustHaveEmployeesValidator(entitySelectors, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  private static messageTemplate = `You have not entered employees. Confirm this is OK by answering \"No\" to the question %displayName%`;\r\n\r\n  constructor(entitySelectors: EntitySelectors,\r\n    group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n\r\n    super('mustHaveEmployees', group,\r\n      (value, context) => {\r\n        return entitySelectors.employee.entities$.pipe(\r\n          map(ees => {\r\n            ees = ees.filter(ee => !ee.isRemoved);\r\n            // valid if has employees\r\n            return ees.length > 0;\r\n          }),\r\n          first()\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || MustHaveEmployeesValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { CompanyTax, EmployeeTax } from '@app/model';\r\nimport { TaxBehaviorWrapper } from './tax-models';\r\nimport { MaskHelper } from '@app/shared/input/multi-mask-helper';\r\n\r\nexport function isCompanyTaxValid(taxWithBehavior: TaxBehaviorWrapper<CompanyTax>): boolean {\r\n    if (!taxWithBehavior.behavior.shouldShow) {\r\n        // If the tax should not be shown and if the user has not touched it. Implicitly valid.\r\n        if (!isCompanyTaxModified(taxWithBehavior)) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    if (taxWithBehavior.behavior.hasEin && taxWithBehavior.appliedForEin === false) {\r\n        if (!isValidEin(taxWithBehavior)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    if (taxWithBehavior.behavior.hasRate) {\r\n        // If no rate is present and rate is require there is nothing we can check\r\n        if (!isValidRate(taxWithBehavior)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function isEmployeeTaxValid(taxWithBehavior: TaxBehaviorWrapper<EmployeeTax>): boolean {\r\n    if (!taxWithBehavior.behavior.shouldShow) {\r\n        // If the tax should not be shown and if the user has not touched it. Implicitly valid.\r\n        if (!isEmployeeTaxModified(taxWithBehavior)) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    if (taxWithBehavior.behavior.hasFilingStatus) {\r\n        if (!isValidFilingStatus(taxWithBehavior)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    if (taxWithBehavior.behavior.hasExemptionReason) {\r\n        if (!isValidExemptReason(taxWithBehavior)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    if (taxWithBehavior.behavior.hasWithholding) {\r\n        if (!isValidWithholdAllowance(taxWithBehavior) || !isValidExtraWithhold(taxWithBehavior)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function isCompanyTaxModified(tax: CompanyTax): boolean {\r\n    return (tax.mtsTaxCode != null && tax.mtsTaxCode !== '') ||\r\n        (tax.appliedForEin != null && tax.appliedForEin === true) ||\r\n        (tax.rate != null) ||\r\n        (tax.ubi != null && tax.ubi !== '') ||\r\n        (tax.businessStartDate != null && tax.businessStartDate !== '');\r\n}\r\n\r\nexport function isEmployeeTaxModified(tax: EmployeeTax): boolean {\r\n    return (tax.filingStatus != null && tax.filingStatus !== '') ||\r\n        (tax.extraWithholding != null && tax.extraWithholding !== 0) ||\r\n        (tax.withholdingAllowance != null && tax.withholdingAllowance !== 0) ||\r\n        (tax.exemptReasonCode != null && tax.exemptReasonCode !== '');\r\n}\r\n\r\nexport function isValidEin(taxWithBehavior: TaxBehaviorWrapper<CompanyTax>): boolean {\r\n    if (taxWithBehavior.behavior.hasEin === false || taxWithBehavior.appliedForEin === true) {\r\n        return true;\r\n    }\r\n\r\n    if (taxWithBehavior.behavior.taxEinFormats.length === 0) {\r\n        // Unknown ein format but if we do not apply for it is still required\r\n        return taxWithBehavior.ein != null && taxWithBehavior.ein.length > 0;\r\n    }\r\n\r\n    const maskHelper = new MaskHelper();\r\n    const formats = taxWithBehavior.behavior.taxEinFormats.map(e => e.format);\r\n    const validationResult = maskHelper.getClosestMask(taxWithBehavior.ein, formats, null);\r\n\r\n    return validationResult.isExactMatch;\r\n}\r\n\r\nexport function isValidRate(taxWithBehavior: TaxBehaviorWrapper<CompanyTax>): boolean {\r\n    // see also src\\app\\model\\validation-metadata\\sp-taxes-validation-metadata.ts\r\n    // TODO why aren't we using the rules engine here?\r\n\r\n    if (taxWithBehavior.rate === null || taxWithBehavior.rate === undefined) {\r\n        return false;\r\n    }\r\n\r\n    // We have a value but we can't validate the range. We consider it as valid\r\n    if (taxWithBehavior.behavior.rate == null) {\r\n        return true;\r\n    }\r\n\r\n    // tslint:disable:triple-equals\r\n    if (taxWithBehavior.rate == 0 && taxWithBehavior.behavior.rate.allowSubjectRateZero) {\r\n        return true;\r\n    }\r\n\r\n    if (taxWithBehavior.rate < taxWithBehavior.behavior.rate.minAllowedRate) {\r\n        return false;\r\n    }\r\n\r\n    if (taxWithBehavior.rate > taxWithBehavior.behavior.rate.maxAllowedRate) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function isValidFilingStatus(taxWithBehavior: TaxBehaviorWrapper<EmployeeTax>): boolean {\r\n    if (taxWithBehavior.behavior.filingStatuses == null || taxWithBehavior.behavior.filingStatuses.length === 0) {\r\n        return true;\r\n    }\r\n\r\n    if (taxWithBehavior.filingStatus == null) {\r\n        return false;\r\n    }\r\n\r\n    const filingStatusVal = taxWithBehavior.filingStatus.toLowerCase();\r\n    if (taxWithBehavior.behavior.filingStatuses.every(e => e.code.toLowerCase() !== filingStatusVal)) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function isValidExemptReason(taxWithBehavior: TaxBehaviorWrapper<EmployeeTax>): boolean {\r\n    if (taxWithBehavior.isExempt === false) {\r\n        return true;\r\n    }\r\n\r\n    if (taxWithBehavior.exemptReasonCode == null || taxWithBehavior.exemptReasonCode === '') {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function isValidWithholdAllowance(taxWithBehavior: TaxBehaviorWrapper<EmployeeTax>): boolean {\r\n    if (taxWithBehavior.withholdingAllowance == null || Number.isNaN(taxWithBehavior.withholdingAllowance)) {\r\n        return false;\r\n    }\r\n\r\n    if (taxWithBehavior.withholdingAllowance < 0) {\r\n        return false;\r\n    }\r\n\r\n    if (taxWithBehavior.withholdingAllowance > 25) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function isValidExtraWithhold(taxWithBehavior: TaxBehaviorWrapper<EmployeeTax>): boolean {\r\n    if (taxWithBehavior.extraWithholding == null || Number.isNaN(taxWithBehavior.extraWithholding)) {\r\n        return false;\r\n    }\r\n\r\n    if (taxWithBehavior.extraWithholding < 0) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AsyncValidator } from '@validation';\nimport { combineLatest } from 'rxjs';\nimport { map, first } from 'rxjs/operators';\nimport { isCompanyTaxValid } from '@app/core/services/tax-services/tax-utils';\nvar FederalTaxesValidator = /** @class */ (function (_super) {\n    __extends(FederalTaxesValidator, _super);\n    function FederalTaxesValidator(taxCollectorService, group, validatorContext) {\n        return _super.call(this, 'federalTaxesValidator', group, function (value, context) {\n            return combineLatest(taxCollectorService.taxes$).pipe(map(function (_a) {\n                var taxes = _a[0];\n                if (taxes.companyFederalTaxes == null) {\n                    return true;\n                }\n                var areTaxesValid = true;\n                for (var i = 0; i < taxes.companyFederalTaxes.taxes.length; i++) {\n                    var fedTaxWithBehavior = taxes.companyFederalTaxes.taxes[i];\n                    if (!isCompanyTaxValid(fedTaxWithBehavior)) {\n                        areTaxesValid = false;\n                        break;\n                    }\n                }\n                return areTaxesValid;\n            }), first());\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || FederalTaxesValidator.messageTemplate })) || this;\n    }\n    FederalTaxesValidator.factory = function (taxCollectorService) {\n        return {\n            name: 'federalTaxesValidator',\n            fn: function (group, context) {\n                return new FederalTaxesValidator(taxCollectorService, group, context);\n            }\n        };\n    };\n    FederalTaxesValidator.messageTemplate = 'Fed taxes information must be provided';\n    return FederalTaxesValidator;\n}(AsyncValidator));\nexport { FederalTaxesValidator };\n","import { TaxCollectorService } from '@app/core/services/tax-services/tax-collector.service';\r\nimport { AsyncValidator, ValidationContextBase, ValidatorFactory } from '@validation';\r\nimport { combineLatest } from 'rxjs';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { isCompanyTaxValid } from '@app/core/services/tax-services/tax-utils';\r\n\r\nexport class FederalTaxesValidator extends AsyncValidator {\r\n\r\n  static factory(taxCollectorService: TaxCollectorService): ValidatorFactory {\r\n    return {\r\n      name: 'federalTaxesValidator',\r\n      fn: (group, context) => {\r\n        return new FederalTaxesValidator(taxCollectorService, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  private static messageTemplate = 'Fed taxes information must be provided';\r\n\r\n  constructor(taxCollectorService: TaxCollectorService,\r\n    group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n\r\n    super('federalTaxesValidator', group,\r\n      (value, context) => {\r\n        return combineLatest(taxCollectorService.taxes$).pipe(\r\n          map(([taxes]) => {\r\n            if (taxes.companyFederalTaxes == null) {\r\n              return true;\r\n            }\r\n\r\n            let areTaxesValid = true;\r\n\r\n            for (let i = 0; i < taxes.companyFederalTaxes.taxes.length; i++) {\r\n              const fedTaxWithBehavior = taxes.companyFederalTaxes.taxes[i];\r\n\r\n              if (!isCompanyTaxValid(fedTaxWithBehavior)) {\r\n                areTaxesValid = false;\r\n                break;\r\n              }\r\n            }\r\n\r\n            return areTaxesValid;\r\n          }),\r\n          first()\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || FederalTaxesValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AsyncValidator } from '@validation';\nimport { combineLatest } from 'rxjs';\nimport { map, first } from 'rxjs/operators';\nimport { isCompanyTaxValid } from '@app/core/services/tax-services/tax-utils';\nvar StateTaxesValidator = /** @class */ (function (_super) {\n    __extends(StateTaxesValidator, _super);\n    function StateTaxesValidator(taxCollectorService, group, validatorContext) {\n        return _super.call(this, 'stateTaxesValidator', group, function (value, context) {\n            return combineLatest(taxCollectorService.taxes$).pipe(map(function (_a) {\n                var taxes = _a[0];\n                if (taxes.companyStateTaxes == null) {\n                    return true;\n                }\n                var invalidStates = taxes.companyStateTaxes.reduce(function (acc, stateTaxes) {\n                    for (var i = 0; i < stateTaxes.taxes.length; i++) {\n                        var stateTaxWithBehavior = stateTaxes.taxes[i];\n                        if (!isCompanyTaxValid(stateTaxWithBehavior)) {\n                            acc.push(stateTaxes.state);\n                            break;\n                        }\n                    }\n                    return acc;\n                }, []);\n                if (invalidStates.length > 0) {\n                    // console.error(`Missing Company Tax setup for these states: ${missingTaxStates.join()}`);\n                    context.missingTaxStates = invalidStates;\n                    return false; // failed validation\n                }\n                else {\n                    return true; // every tax state is accounted for.\n                }\n            }), first());\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || StateTaxesValidator.messageTemplate })) || this;\n    }\n    StateTaxesValidator.factory = function (taxCollectorService) {\n        return {\n            name: 'stateTaxesValidator',\n            fn: function (group, context) {\n                return new StateTaxesValidator(taxCollectorService, group, context);\n            }\n        };\n    };\n    StateTaxesValidator.messageTemplate = 'State taxes information must be provided';\n    return StateTaxesValidator;\n}(AsyncValidator));\nexport { StateTaxesValidator };\n","import { TaxCollectorService } from '@app/core/services/tax-services/tax-collector.service';\r\nimport { AsyncValidator, ValidationContextBase, ValidatorFactory } from '@validation';\r\nimport { combineLatest } from 'rxjs';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { isCompanyTaxValid } from '@app/core/services/tax-services/tax-utils';\r\n\r\nexport class StateTaxesValidator extends AsyncValidator {\r\n\r\n  static factory(taxCollectorService: TaxCollectorService): ValidatorFactory {\r\n    return {\r\n      name: 'stateTaxesValidator',\r\n      fn: (group, context) => {\r\n        return new StateTaxesValidator(taxCollectorService, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  private static messageTemplate = 'State taxes information must be provided';\r\n\r\n  constructor(taxCollectorService: TaxCollectorService,\r\n    group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n\r\n    super('stateTaxesValidator', group,\r\n      (value, context) => {\r\n        return combineLatest(taxCollectorService.taxes$).pipe(\r\n          map(([taxes]) => {\r\n            if (taxes.companyStateTaxes == null) {\r\n              return true;\r\n            }\r\n\r\n            const invalidStates = taxes.companyStateTaxes.reduce((acc, stateTaxes) => {\r\n              for (let i = 0; i < stateTaxes.taxes.length; i++) {\r\n                const stateTaxWithBehavior = stateTaxes.taxes[i];\r\n\r\n                if (!isCompanyTaxValid(stateTaxWithBehavior)) {\r\n                  acc.push(stateTaxes.state);\r\n                  break;\r\n                }\r\n              }\r\n              return acc;\r\n            }, []);\r\n\r\n            if (invalidStates.length > 0) {\r\n              // console.error(`Missing Company Tax setup for these states: ${missingTaxStates.join()}`);\r\n              context.missingTaxStates = invalidStates;\r\n              return false; // failed validation\r\n            } else {\r\n              return true; // every tax state is accounted for.\r\n            }\r\n          }),\r\n          first()\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || StateTaxesValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AsyncValidator } from '@validation';\nimport { map, first } from 'rxjs/operators';\nimport { isEmployeeTaxValid } from '@app/core/services/tax-services/tax-utils';\nvar EmployeeTaxesValidator = /** @class */ (function (_super) {\n    __extends(EmployeeTaxesValidator, _super);\n    function EmployeeTaxesValidator(taxCollectorService, group, validatorContext) {\n        return _super.call(this, 'employeeTaxesValidator', group, function (value, context) {\n            return taxCollectorService.taxes$.pipe(map(function (taxes) {\n                if (taxes.employeeTaxes == null) {\n                    return true;\n                }\n                var employeeId = value.id;\n                var employeeTaxesVm = taxes.employeeTaxes.find(function (e) { return e.employeeLocation.id === employeeId; });\n                if (employeeTaxesVm == null) {\n                    return false;\n                }\n                var areTaxesValid = true;\n                for (var i = 0; i < employeeTaxesVm.taxes.length; i++) {\n                    var empTaxWithBehavior = employeeTaxesVm.taxes[i];\n                    if (!isEmployeeTaxValid(empTaxWithBehavior)) {\n                        areTaxesValid = false;\n                        break;\n                    }\n                }\n                return areTaxesValid;\n            }), first());\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || EmployeeTaxesValidator.messageTemplate })) || this;\n    }\n    EmployeeTaxesValidator.factory = function (taxCollectorService) {\n        return {\n            name: 'employeeTaxesValidator',\n            fn: function (group, context) {\n                return new EmployeeTaxesValidator(taxCollectorService, group, context);\n            }\n        };\n    };\n    EmployeeTaxesValidator.messageTemplate = 'Employee taxes information must be provided';\n    return EmployeeTaxesValidator;\n}(AsyncValidator));\nexport { EmployeeTaxesValidator };\n","import { TaxCollectorService } from '@app/core/services/tax-services/tax-collector.service';\r\nimport { AsyncValidator, ValidationContextBase, ValidatorFactory } from '@validation';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { isEmployeeTaxValid } from '@app/core/services/tax-services/tax-utils';\r\n\r\nexport class EmployeeTaxesValidator extends AsyncValidator {\r\n\r\n  static factory(taxCollectorService: TaxCollectorService): ValidatorFactory {\r\n    return {\r\n      name: 'employeeTaxesValidator',\r\n      fn: (group, context) => {\r\n        return new EmployeeTaxesValidator(taxCollectorService, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  private static messageTemplate = 'Employee taxes information must be provided';\r\n\r\n  constructor(taxCollectorService: TaxCollectorService,\r\n    group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n\r\n    super('employeeTaxesValidator', group,\r\n      (value, context) => {\r\n        return taxCollectorService.taxes$.pipe(\r\n          map(taxes => {\r\n            if (taxes.employeeTaxes == null) {\r\n              return true;\r\n            }\r\n\r\n            const employeeId = value.id;\r\n\r\n            const employeeTaxesVm = taxes.employeeTaxes.find(e => e.employeeLocation.id === employeeId);\r\n            if (employeeTaxesVm == null) {\r\n              return false;\r\n            }\r\n\r\n            let areTaxesValid = true;\r\n\r\n            for (let i = 0; i < employeeTaxesVm.taxes.length; i++) {\r\n              const empTaxWithBehavior = employeeTaxesVm.taxes[i];\r\n\r\n              if (!isEmployeeTaxValid(empTaxWithBehavior)) {\r\n                areTaxesValid = false;\r\n                break;\r\n              }\r\n            }\r\n\r\n            return areTaxesValid;\r\n          }),\r\n          first()\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || EmployeeTaxesValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { environment } from '@environment';\nimport { of } from 'rxjs';\nimport { catchError, map, shareReplay } from 'rxjs/operators';\nimport { RegExpValidator, AsyncValidator } from '@validation';\nexport function makeUsernameInvalidCharacterValidator(group, context) {\n    context = __assign({}, context, { expression: /^[a-zA-Z0-9\\_\\-\\.]*$/, messageTemplate: 'Make a %displayName% from letters, digits, and the special characters \"._-\"' });\n    return RegExpValidator.create('usernameInvalidCharacters', group, context);\n}\nvar UniqueUsernameValidator = /** @class */ (function (_super) {\n    __extends(UniqueUsernameValidator, _super);\n    function UniqueUsernameValidator(http, group, validatorContext) {\n        return _super.call(this, 'uniqueUsername', group, function (value, context) {\n            // if (environment.mockServices) {\n            //   return of(true);\n            // }\n            var uri = environment.spApiRoot + \"/authentication/username/valid/\" + value;\n            return http.get(uri).pipe(map(function () { return true; }), catchError(function (error) {\n                context.messageTemplate = 'Please try a different %displayName%.';\n                return of(false);\n            }), shareReplay(1));\n        }, __assign({}, validatorContext, { messageTemplate: (validatorContext && validatorContext.messageTemplate) ||\n                UniqueUsernameValidator.messageTemplate })) || this;\n    }\n    UniqueUsernameValidator.factory = function (http) {\n        return {\n            name: 'uniqueUsername',\n            fn: function (group, context) {\n                return new UniqueUsernameValidator(http, group, context);\n            }\n        };\n    };\n    UniqueUsernameValidator.messageTemplate = '%displayName% %errorMsg%';\n    return UniqueUsernameValidator;\n}(AsyncValidator));\nexport { UniqueUsernameValidator };\n","import { environment } from '@environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { of } from 'rxjs';\r\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\r\n\r\nimport {\r\n  ValidationContextBase,\r\n  RegExpValidator,\r\n  AsyncValidator,\r\n  ValidatorFactory\r\n} from '@validation';\r\n\r\nexport function makeUsernameInvalidCharacterValidator(\r\n  group: string,\r\n  context?: Partial<ValidationContextBase>\r\n) {\r\n  context = {\r\n    ...context,\r\n    expression: /^[a-zA-Z0-9\\_\\-\\.]*$/,\r\n    messageTemplate: 'Make a %displayName% from letters, digits, and the special characters \"._-\"'\r\n  };\r\n\r\n  return RegExpValidator.create('usernameInvalidCharacters', group, context);\r\n}\r\n\r\nexport class UniqueUsernameValidator extends AsyncValidator {\r\n  static factory(http: HttpClient): ValidatorFactory {\r\n    return {\r\n      name: 'uniqueUsername',\r\n      fn: (group, context) => {\r\n        return new UniqueUsernameValidator(http, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  private static messageTemplate = '%displayName% %errorMsg%';\r\n\r\n  constructor(http: HttpClient, group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n    super(\r\n      'uniqueUsername',\r\n      group,\r\n      (value, context) => {\r\n        // if (environment.mockServices) {\r\n        //   return of(true);\r\n        // }\r\n        const uri = `${environment.spApiRoot}/authentication/username/valid/${value}`;\r\n        return http.get(uri).pipe(\r\n          map(() => true),\r\n          catchError((error: any) => {\r\n            context.messageTemplate = 'Please try a different %displayName%.';\r\n            return of(false);\r\n          }),\r\n          shareReplay(1)\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate:\r\n          (validatorContext && validatorContext.messageTemplate) ||\r\n          UniqueUsernameValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { of } from 'rxjs';\nimport { map, first } from 'rxjs/operators';\nimport { AsyncValidator } from '@validation';\nvar PasswordPolicyValidator = /** @class */ (function (_super) {\n    __extends(PasswordPolicyValidator, _super);\n    function PasswordPolicyValidator(http, group, validatorContext) {\n        var _this = _super.call(this, 'passwordPolicy', group, function (value, context) {\n            // only checks that contains necessary chars; other validations check for length\n            if (!value) {\n                return of(true);\n            }\n            return _this.fetchPolicies().pipe(map(function (policies) { return _this.validatePassword(value, policies, context); }), first());\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate })) || this;\n        _this.http = http;\n        return _this;\n    }\n    PasswordPolicyValidator.factory = function (http) {\n        return {\n            name: 'passwordPolicy',\n            fn: function (group, context) {\n                return new PasswordPolicyValidator(http, group, context);\n            }\n        };\n    };\n    PasswordPolicyValidator.prototype.fetchPolicies = function () {\n        /// TODO: Currently hardcoded. Change after OZ\n        return of([]);\n        // if (PasswordPolicyValidator.policies) {\n        //   return of(PasswordPolicyValidator.policies);\n        // }\n        // const uri = `${environment.spApiRoot}/authentication/password/rules/standard`;\n        // return this.http.get(uri).pipe(\n        //   map(body => {\n        //     if (!Array.isArray(body)) {\n        //       return [];\n        //     }\n        //     return body.map(policy => {\n        //       return {\n        //         name: policy['name'],\n        //         value: policy['value']\n        //       };\n        //     });\n        //   }));\n    };\n    PasswordPolicyValidator.prototype.validatePassword = function (password, policies, context) {\n        // TODO: Currently hardcode standard policy\n        var standardPolicy = '(?=.*[a-z])' + // at least 1 lower\n            '(?=.*[A-Z])' + // at least 1 upper\n            '(?=.*[0-9])' + // at least 1 digit\n            '^\\\\S*$'; // no whitespace\n        context.messageTemplate = 'Password must have at least 1 lowercase letter, 1 uppercase letter, 1 digit and no spaces';\n        var regExp = new RegExp(standardPolicy);\n        return regExp.test(password);\n    };\n    return PasswordPolicyValidator;\n}(AsyncValidator));\nexport { PasswordPolicyValidator };\n","import { HttpClient } from '@angular/common/http';\r\nimport { of, Observable } from 'rxjs';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { AsyncValidator, ValidatorFactory, ValidationContextBase, ValidatorFunctionContext } from '@validation';\r\n\r\nexport class PasswordPolicyValidator extends AsyncValidator {\r\n\r\n  private static policies: { name: string, value: string }[];\r\n\r\n  static factory(http: HttpClient): ValidatorFactory {\r\n    return {\r\n      name: 'passwordPolicy',\r\n      fn: (group, context) => {\r\n        return new PasswordPolicyValidator(http, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  constructor(private http: HttpClient, group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n\r\n    super('passwordPolicy', group,\r\n      (value, context) => {\r\n        // only checks that contains necessary chars; other validations check for length\r\n        if (!value) { return of(true); }\r\n\r\n        return this.fetchPolicies().pipe(\r\n          map(policies => this.validatePassword(value, policies, context)),\r\n          first()\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate\r\n      }\r\n    );\r\n  }\r\n\r\n  private fetchPolicies(): Observable<{ name: string, value: string }[]> {\r\n\r\n    /// TODO: Currently hardcoded. Change after OZ\r\n    return of([]);\r\n\r\n    // if (PasswordPolicyValidator.policies) {\r\n    //   return of(PasswordPolicyValidator.policies);\r\n    // }\r\n\r\n    // const uri = `${environment.spApiRoot}/authentication/password/rules/standard`;\r\n    // return this.http.get(uri).pipe(\r\n    //   map(body => {\r\n    //     if (!Array.isArray(body)) {\r\n    //       return [];\r\n    //     }\r\n\r\n    //     return body.map(policy => {\r\n    //       return {\r\n    //         name: policy['name'],\r\n    //         value: policy['value']\r\n    //       };\r\n    //     });\r\n    //   }));\r\n  }\r\n\r\n  private validatePassword(password: string, policies: { name: string, value: string }[], context: ValidatorFunctionContext): boolean {\r\n    // TODO: Currently hardcode standard policy\r\n    const standardPolicy =\r\n      '(?=.*[a-z])' + // at least 1 lower\r\n      '(?=.*[A-Z])' + // at least 1 upper\r\n      '(?=.*[0-9])' + // at least 1 digit\r\n      '^\\\\S*$';       // no whitespace\r\n    context.messageTemplate = 'Password must have at least 1 lowercase letter, 1 uppercase letter, 1 digit and no spaces';\r\n    const regExp = new RegExp(standardPolicy);\r\n    return regExp.test(password);\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AsyncValidator } from '@validation';\nimport { map, first } from 'rxjs/operators';\nvar HouseholdFilerMustExistValidator = /** @class */ (function (_super) {\n    __extends(HouseholdFilerMustExistValidator, _super);\n    function HouseholdFilerMustExistValidator(entitySelectors, group, validatorContext) {\n        return _super.call(this, 'householdFilerMustExist', group, function (value, context) {\n            return entitySelectors.householdFilers.entities$.pipe(map(function (householdFilers) { return householdFilers && householdFilers.length === 1; }), first());\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || HouseholdFilerMustExistValidator.messageTemplate })) || this;\n    }\n    HouseholdFilerMustExistValidator.factory = function (entitySelectors) {\n        return {\n            name: 'householdFilerMustExist',\n            fn: function (group, context) {\n                return new HouseholdFilerMustExistValidator(entitySelectors, group, context);\n            }\n        };\n    };\n    HouseholdFilerMustExistValidator.messageTemplate = \"Household Federal Tax Information must be provided\";\n    return HouseholdFilerMustExistValidator;\n}(AsyncValidator));\nexport { HouseholdFilerMustExistValidator };\n","import { AsyncValidator, ValidatorFactory, ValidationContextBase } from '@validation';\r\nimport { EntitySelectors } from '@entity';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nexport class HouseholdFilerMustExistValidator extends AsyncValidator {\r\n\r\n  static factory(entitySelectors: EntitySelectors): ValidatorFactory {\r\n    return {\r\n      name: 'householdFilerMustExist',\r\n      fn: (group, context) => {\r\n        return new HouseholdFilerMustExistValidator(entitySelectors, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  private static messageTemplate = `Household Federal Tax Information must be provided`;\r\n\r\n  constructor(entitySelectors: EntitySelectors,\r\n    group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n\r\n    super('householdFilerMustExist', group,\r\n      (value, context) => {\r\n        return entitySelectors.householdFilers.entities$.pipe(\r\n          map(householdFilers => householdFilers && householdFilers.length === 1),\r\n          first()\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || HouseholdFilerMustExistValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AsyncValidator } from '@app/store/validation';\nimport { combineLatest } from 'rxjs';\nimport { map, first, shareReplay } from 'rxjs/operators';\nimport { EarningsCategory } from '@model';\nvar EarningsNameValidator = /** @class */ (function (_super) {\n    __extends(EarningsNameValidator, _super);\n    function EarningsNameValidator(earnings$, group, validatorContext) {\n        return _super.call(this, 'earningsValidator', group, function (value, context) {\n            var name = context.model.name || value;\n            return earnings$.pipe(first(), map(function (earnings) {\n                return (null ==\n                    earnings\n                        .filter(function (ce) { return ce.code !== context.model.earningCode; })\n                        .find(function (p) { return p.name.toUpperCase() === context.model.name.toUpperCase(); }));\n            }));\n        }, __assign({}, validatorContext, { messageTemplate: (validatorContext && validatorContext.messageTemplate) ||\n                EarningsNameValidator.messageTemplate })) || this;\n    }\n    EarningsNameValidator.factory = function (entitySelectors, earningService) {\n        var earnings$ = getValidatorEarnings$(entitySelectors, earningService);\n        return {\n            name: 'earningsNameValidator',\n            fn: function (group, context) {\n                return new EarningsNameValidator(earnings$, group, context);\n            }\n        };\n    };\n    EarningsNameValidator.messageTemplate = \"Earnings Abbreviation cannot be the same as other earnings' name or reserved words\\n  - %name%\";\n    return EarningsNameValidator;\n}(AsyncValidator));\nexport { EarningsNameValidator };\nvar EarningsDescriptionValidator = /** @class */ (function (_super) {\n    __extends(EarningsDescriptionValidator, _super);\n    function EarningsDescriptionValidator(earnings$, group, validatorContext) {\n        return _super.call(this, 'earningsValidator', group, function (value, context) {\n            var description = context.model.description || value;\n            return earnings$.pipe(first(), map(function (earnings) {\n                return (null ==\n                    earnings\n                        .filter(function (ce) { return ce.code !== context.model.earningCode; })\n                        .find(function (p) { return p.description.toUpperCase() === context.model.description.toUpperCase(); }));\n            }));\n        }, __assign({}, validatorContext, { messageTemplate: (validatorContext && validatorContext.messageTemplate) ||\n                EarningsDescriptionValidator.messageTemplate })) || this;\n    }\n    EarningsDescriptionValidator.factory = function (entitySelectors, earningService) {\n        var earnings$ = getValidatorEarnings$(entitySelectors, earningService);\n        return {\n            name: 'earningsDescriptionValidator',\n            fn: function (group, context) {\n                return new EarningsDescriptionValidator(earnings$, group, context);\n            }\n        };\n    };\n    EarningsDescriptionValidator.messageTemplate = \"Earnings Name cannot be the same as other earnings' name or reserved words\\n  - %description%\";\n    return EarningsDescriptionValidator;\n}(AsyncValidator));\nexport { EarningsDescriptionValidator };\nfunction getValidatorEarnings$(entitySelectors, earningService) {\n    return combineLatest(entitySelectors.companyEarning.entities$, earningService.earnings$).pipe(map(function (_a) {\n        var companyEarnings = _a[0], defaultEarnings = _a[1];\n        return defaultEarnings.filter(function (e) {\n            return e.earningsCategory.toUpperCase() === EarningsCategory.DEFAULTEARNINGS ||\n                e.earningsCategory.toUpperCase() === EarningsCategory.DEFAULTOTHERCOMPENSATION;\n        }).concat(companyEarnings\n            .filter(function (e) { return !e.isRemoved; })\n            .map(function (ce) {\n            return {\n                code: ce.earningCode,\n                name: ce.name,\n                description: ce.description\n            };\n        }));\n    }), shareReplay(1));\n}\n","import { AsyncValidator, ValidatorFactory, ValidationContextBase } from '@app/store/validation';\r\nimport { EntitySelectors, EarningService } from '@app/store/entity';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, first, shareReplay } from 'rxjs/operators';\r\nimport { EarningsCategory } from '@model';\r\n\r\n\r\n/** Minimum properties for validation purposes of a company or default earning */\r\ninterface ValidatorEarning {\r\n  name: string;\r\n  description: string;\r\n  code: string;\r\n}\r\n\r\nexport class EarningsNameValidator extends AsyncValidator {\r\n  static factory(\r\n    entitySelectors: EntitySelectors,\r\n    earningService: EarningService\r\n  ): ValidatorFactory {\r\n    const earnings$ = getValidatorEarnings$(entitySelectors, earningService);\r\n\r\n    return {\r\n      name: 'earningsNameValidator',\r\n      fn: (group, context) => {\r\n        return new EarningsNameValidator(earnings$, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  private static messageTemplate = `Earnings Abbreviation cannot be the same as other earnings' name or reserved words\r\n  - %name%`;\r\n\r\n  constructor(\r\n    earnings$: Observable<ValidatorEarning[]>,\r\n    group: string,\r\n    validatorContext?: Partial<ValidationContextBase>\r\n  ) {\r\n    super(\r\n      'earningsValidator',\r\n      group,\r\n      (value, context) => {\r\n        const name = context.model.name || value;\r\n        return earnings$.pipe(\r\n          first(),\r\n          map(earnings => {\r\n            return (\r\n              null ==\r\n              earnings\r\n                .filter(ce => ce.code !== context.model.earningCode)\r\n                .find(p => p.name.toUpperCase() === context.model.name.toUpperCase())\r\n            );\r\n          })\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate:\r\n          (validatorContext && validatorContext.messageTemplate) ||\r\n          EarningsNameValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport class EarningsDescriptionValidator extends AsyncValidator {\r\n  static factory(\r\n    entitySelectors: EntitySelectors,\r\n    earningService: EarningService\r\n  ): ValidatorFactory {\r\n    const earnings$ = getValidatorEarnings$(entitySelectors, earningService);\r\n\r\n    return {\r\n      name: 'earningsDescriptionValidator',\r\n      fn: (group, context) => {\r\n        return new EarningsDescriptionValidator(earnings$, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  private static messageTemplate = `Earnings Name cannot be the same as other earnings' name or reserved words\r\n  - %description%`;\r\n\r\n  constructor(\r\n    earnings$: Observable<ValidatorEarning[]>,\r\n    group: string,\r\n    validatorContext?: Partial<ValidationContextBase>\r\n  ) {\r\n    super(\r\n      'earningsValidator',\r\n      group,\r\n      (value, context) => {\r\n        const description = context.model.description || value;\r\n        return earnings$.pipe(\r\n          first(),\r\n          map(earnings => {\r\n            return (\r\n              null ==\r\n              earnings\r\n                .filter(ce => ce.code !== context.model.earningCode)\r\n                .find(p => p.description.toUpperCase() === context.model.description.toUpperCase())\r\n            );\r\n          })\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate:\r\n          (validatorContext && validatorContext.messageTemplate) ||\r\n          EarningsDescriptionValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nfunction getValidatorEarnings$(\r\n  entitySelectors: EntitySelectors,\r\n  earningService: EarningService\r\n): Observable<ValidatorEarning[]> {\r\n  return combineLatest(entitySelectors.companyEarning.entities$, earningService.earnings$).pipe(\r\n    map(([companyEarnings, defaultEarnings]) =>\r\n      (defaultEarnings.filter(\r\n        e =>\r\n          e.earningsCategory.toUpperCase() === EarningsCategory.DEFAULTEARNINGS ||\r\n          e.earningsCategory.toUpperCase() === EarningsCategory.DEFAULTOTHERCOMPENSATION\r\n      ) as ValidatorEarning[]).concat(companyEarnings\r\n        .filter(e => !e.isRemoved)\r\n        .map(ce => {\r\n          return {\r\n            code: ce.earningCode,\r\n            name: ce.name,\r\n            description: ce.description\r\n          };\r\n        }) as ValidatorEarning[])\r\n    ),\r\n    shareReplay(1)\r\n  );\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AsyncValidator } from '@validation';\nimport { map, first } from 'rxjs/operators';\nimport { getFirstAllowedCheckDate, getDateFromNgb } from '@utils';\n/*\n * Validator to ensure that the selected check date is at least two business days away\n * TODO: Describe it better.\n * */\nvar CheckDateCriteriaValidator = /** @class */ (function (_super) {\n    __extends(CheckDateCriteriaValidator, _super);\n    function CheckDateCriteriaValidator(holidaysService, group, validatorContext) {\n        return _super.call(this, 'checkDateCriteria', group, function (value, context) {\n            return holidaysService.getHolidays().pipe(first(), map(function (holidays) {\n                if (value) {\n                    var holidayTimes = holidays.map(function (x) { return x.getTime(); });\n                    var checkDate = value.year ? getDateFromNgb(value) : new Date(value);\n                    if (checkDate) {\n                        checkDate = new Date(checkDate.getFullYear(), checkDate.getMonth(), checkDate.getDate());\n                        if (checkDate && !isNaN(checkDate.getTime())) {\n                            return checkDate >= getFirstAllowedCheckDate(holidayTimes);\n                        }\n                    }\n                }\n                return true; // no error\n            }));\n        }, __assign({}, validatorContext, { messageTemplate: (validatorContext && validatorContext.messageTemplate) ||\n                CheckDateCriteriaValidator.messageTemplate })) || this;\n    }\n    CheckDateCriteriaValidator.factory = function (holidaysService) {\n        return {\n            name: 'checkDateCriteria',\n            fn: function (group, context) {\n                return new CheckDateCriteriaValidator(holidaysService, group, context);\n            }\n        };\n    };\n    CheckDateCriteriaValidator.messageTemplate = \"%displayName% needs to be at least two business days from today's date\";\n    return CheckDateCriteriaValidator;\n}(AsyncValidator));\nexport { CheckDateCriteriaValidator };\n","import { AsyncValidator, ValidationContextBase, ValidatorFactory } from '@validation';\r\nimport { EntitySelectors } from '@entity';\r\nimport { combineLatest } from 'rxjs';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { HolidaysService } from '@core/services/holidays.service';\r\nimport { getFirstAllowedCheckDate, getDateFromNgb } from '@utils';\r\n\r\n/*\r\n * Validator to ensure that the selected check date is at least two business days away\r\n * TODO: Describe it better.\r\n * */\r\nexport class CheckDateCriteriaValidator extends AsyncValidator {\r\n  static factory(holidaysService: HolidaysService): ValidatorFactory {\r\n    return {\r\n      name: 'checkDateCriteria',\r\n      fn: (group, context) => {\r\n        return new CheckDateCriteriaValidator(holidaysService, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  private static messageTemplate = `%displayName% needs to be at least two business days from today's date`;\r\n\r\n  constructor(\r\n    holidaysService: HolidaysService,\r\n    group: string,\r\n    validatorContext?: Partial<ValidationContextBase>\r\n  ) {\r\n    super(\r\n      'checkDateCriteria',\r\n      group,\r\n      (value, context) => {\r\n        return holidaysService.getHolidays().pipe(\r\n          first(),\r\n          map(holidays => {\r\n            if (value) {\r\n              const holidayTimes = holidays.map(x => x.getTime());\r\n              let checkDate = value.year ? getDateFromNgb(value) : new Date(value);\r\n\r\n              if (checkDate) {\r\n                checkDate = new Date(\r\n                  checkDate.getFullYear(),\r\n                  checkDate.getMonth(),\r\n                  checkDate.getDate()\r\n                );\r\n\r\n                if (checkDate && !isNaN(checkDate.getTime())) {\r\n                  return checkDate >= getFirstAllowedCheckDate(holidayTimes);\r\n                }\r\n              }\r\n            }\r\n            return true; // no error\r\n          })\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate:\r\n          (validatorContext && validatorContext.messageTemplate) ||\r\n          CheckDateCriteriaValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AsyncValidator } from '@validation';\nimport { map, first } from 'rxjs/operators';\nvar AddressCriteriaValidator = /** @class */ (function (_super) {\n    __extends(AddressCriteriaValidator, _super);\n    function AddressCriteriaValidator(entitySelectors, group, validatorContext) {\n        var _this = _super.call(this, 'addressCriteria', group, function (value, context) {\n            return entitySelectors.entityInfos$.pipe(map(function (entityInfos) {\n                var addresses = entityInfos.filter(function (ei) { return ei.entityType === 'Address'; }).map(function (ei) { return ei.entity; });\n                try {\n                    /**\n                     * SECURITY: Safe because text passed to `Function` comes from our server, not the user\n                     */\n                    if (!context.criteriaFn) {\n                        var evalFunc = \"function(context, model, isClient, isServer){ return \" + context.criteria + \" }\";\n                        context.criteriaFn = Function(\"\\\"use strict\\\";return (\" + evalFunc + \")\")();\n                    }\n                    return addresses.every(function (address) {\n                        var ctx = __assign({}, context, { value: address });\n                        return context.criteriaFn(ctx, ctx.model, ctx.isClient, ctx.isServer);\n                    });\n                }\n                catch (e) {\n                    var message = \"Criteria '\" + context.criteria + \"' failed for validator '\" + _this.name + \"'\" +\n                        (\" and model type '\" + context.modelType + \"' with error '\" + e.message + \"'\");\n                    return false;\n                }\n            }), first());\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || 'Addresses are invalid' })) || this;\n        return _this;\n    }\n    AddressCriteriaValidator.factory = function (entitySelectors) {\n        return {\n            name: 'addressCriteria',\n            fn: function (group, context) {\n                return new AddressCriteriaValidator(entitySelectors, group, context);\n            }\n        };\n    };\n    return AddressCriteriaValidator;\n}(AsyncValidator));\nexport { AddressCriteriaValidator };\n","import { AsyncValidator, ValidatorFactory, ValidationContextBase } from '@validation';\r\nimport { EntitySelectors } from '@entity';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { Address } from '@app/model';\r\n\r\nexport class AddressCriteriaValidator extends AsyncValidator {\r\n\r\n  static factory(entitySelectors: EntitySelectors): ValidatorFactory {\r\n    return {\r\n      name: 'addressCriteria',\r\n      fn: (group, context) => {\r\n        return new AddressCriteriaValidator(entitySelectors, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  constructor(entitySelectors: EntitySelectors,\r\n    group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n\r\n    super('addressCriteria', group,\r\n      (value, context) => {\r\n        return entitySelectors.entityInfos$.pipe(\r\n          map(entityInfos => {\r\n            const addresses = entityInfos.filter(ei => ei.entityType === 'Address').map(ei => ei.entity as Address);\r\n\r\n            try {\r\n              /**\r\n               * SECURITY: Safe because text passed to `Function` comes from our server, not the user\r\n               */\r\n              if (!context.criteriaFn) {\r\n                const evalFunc = `function(context, model, isClient, isServer){ return ${context.criteria} }`;\r\n                context.criteriaFn = Function(`\"use strict\";return (${evalFunc})`)();\r\n              }\r\n              return addresses.every(address => {\r\n                const ctx = { ...context, value: address };\r\n                return context.criteriaFn(ctx, ctx.model, ctx.isClient, ctx.isServer);\r\n              });\r\n            } catch (e) {\r\n              const message = `Criteria '${context.criteria}' failed for validator '${this.name}'` +\r\n                ` and model type '${context.modelType}' with error '${e.message}'`;\r\n              return false;\r\n            }\r\n          }),\r\n          first()\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || 'Addresses are invalid'\r\n      }\r\n    );\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AsyncValidator } from '@validation';\nimport { map, first } from 'rxjs/operators';\nimport { EnvelopeStatus } from '@app/model/codes-enums';\nimport { combineLatest } from 'rxjs';\nvar DocumentSigningCompleteValidator = /** @class */ (function (_super) {\n    __extends(DocumentSigningCompleteValidator, _super);\n    function DocumentSigningCompleteValidator(entitySelectors, group, validatorContext) {\n        return _super.call(this, 'documentSigningComplete', group, function (value, context) {\n            return combineLatest(entitySelectors.envelope.entities$, entitySelectors.envelopeSigner.entities$).pipe(map(function (_a) {\n                var envelopes = _a[0], signers = _a[1];\n                return envelopes.some(function (env) { return env.status === EnvelopeStatus.completed && !env.isRemoved &&\n                    signers.some(function (s) { return s.envelopeId === env.id && !s.isRemoved; }); }) &&\n                    !envelopes.some(function (env) { return env.isWetSign && env.status === EnvelopeStatus.local && !env.isRemoved; });\n            }), first());\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || DocumentSigningCompleteValidator.messageTemplate })) || this;\n    }\n    DocumentSigningCompleteValidator.factory = function (entitySelectors) {\n        return {\n            name: 'documentSigningComplete',\n            fn: function (group, context) {\n                return new DocumentSigningCompleteValidator(entitySelectors, group, context);\n            }\n        };\n    };\n    DocumentSigningCompleteValidator.messageTemplate = 'The document signing must be complete';\n    return DocumentSigningCompleteValidator;\n}(AsyncValidator));\nexport { DocumentSigningCompleteValidator };\n","import { AsyncValidator, ValidatorFactory, ValidationContextBase } from '@validation';\r\nimport { EntitySelectors } from '@entity';\r\nimport { map, first } from 'rxjs/operators';\r\nimport { EnvelopeStatus } from '@app/model/codes-enums';\r\nimport { combineLatest } from 'rxjs';\r\n\r\nexport class DocumentSigningCompleteValidator extends AsyncValidator {\r\n\r\n  static factory(entitySelectors: EntitySelectors): ValidatorFactory {\r\n    return {\r\n      name: 'documentSigningComplete',\r\n      fn: (group, context) => {\r\n        return new DocumentSigningCompleteValidator(entitySelectors, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  private static messageTemplate = 'The document signing must be complete';\r\n\r\n  constructor(entitySelectors: EntitySelectors,\r\n    group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n\r\n    super('documentSigningComplete', group,\r\n      (value, context) => {\r\n        return combineLatest(\r\n          entitySelectors.envelope.entities$,\r\n          entitySelectors.envelopeSigner.entities$\r\n        ).pipe(\r\n          map(([envelopes, signers]) =>\r\n            envelopes.some(env => env.status === EnvelopeStatus.completed && !env.isRemoved &&\r\n              signers.some(s => s.envelopeId === env.id && !s.isRemoved)) &&\r\n            !envelopes.some(env => env.isWetSign && env.status === EnvelopeStatus.local && !env.isRemoved)\r\n          ),\r\n          first()\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || DocumentSigningCompleteValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AsyncValidator } from '@validation';\nimport { combineLatest } from 'rxjs';\nimport { map, first } from 'rxjs/operators';\nvar MustNotBeExemptValidator = /** @class */ (function (_super) {\n    __extends(MustNotBeExemptValidator, _super);\n    function MustNotBeExemptValidator(entitySelectors, group, validatorContext) {\n        return _super.call(this, 'mustNotBeExempt', group, function (value, context) {\n            return combineLatest(entitySelectors.employeeTax.entities$, entitySelectors.companyTax.entities$).pipe(map(function (_a) {\n                var employeeTaxes = _a[0], companyTaxes = _a[1];\n                var FUTA_SUI_CODE = '0000-010';\n                var exemptTaxes = employeeTaxes.concat(companyTaxes).filter(function (tax) { return !tax.isRemoved && tax.mtsTaxCode.endsWith(FUTA_SUI_CODE) && tax.isExempt; });\n                return exemptTaxes.length === 0;\n            }), first());\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || MustNotBeExemptValidator.messageTemplate })) || this;\n    }\n    MustNotBeExemptValidator.factory = function (entitySelectors) {\n        return {\n            name: 'mustNotBeExempt',\n            fn: function (group, context) {\n                return new MustNotBeExemptValidator(entitySelectors, group, context);\n            }\n        };\n    };\n    MustNotBeExemptValidator.messageTemplate = 'Company is exempt from taxes';\n    return MustNotBeExemptValidator;\n}(AsyncValidator));\nexport { MustNotBeExemptValidator };\n","import { AsyncValidator, ValidatorFactory, ValidationContextBase } from '@validation';\r\nimport { EntitySelectors } from '@entity';\r\nimport { combineLatest } from 'rxjs';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nexport class MustNotBeExemptValidator extends AsyncValidator {\r\n\r\n  static factory(entitySelectors: EntitySelectors): ValidatorFactory {\r\n    return {\r\n      name: 'mustNotBeExempt',\r\n      fn: (group, context) => {\r\n        return new MustNotBeExemptValidator(entitySelectors, group, context);\r\n      }\r\n    };\r\n  }\r\n\r\n  private static messageTemplate = 'Company is exempt from taxes';\r\n\r\n  constructor(entitySelectors: EntitySelectors,\r\n    group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n\r\n    super('mustNotBeExempt', group,\r\n      (value, context) => {\r\n        return combineLatest(entitySelectors.employeeTax.entities$, entitySelectors.companyTax.entities$).pipe(\r\n          map(([employeeTaxes, companyTaxes]) => {\r\n            const FUTA_SUI_CODE = '0000-010';\r\n            const exemptTaxes = [...employeeTaxes, ...companyTaxes]\r\n              .filter(tax => !tax.isRemoved && tax.mtsTaxCode.endsWith(FUTA_SUI_CODE) && tax.isExempt);\r\n\r\n            return exemptTaxes.length === 0;\r\n          }),\r\n          first()\r\n        );\r\n      },\r\n      {\r\n        ...validatorContext,\r\n        messageTemplate: validatorContext && validatorContext.messageTemplate || MustNotBeExemptValidator.messageTemplate\r\n      }\r\n    );\r\n  }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { Validator } from '@validation';\nvar DynamicRangeValidator = /** @class */ (function (_super) {\n    __extends(DynamicRangeValidator, _super);\n    function DynamicRangeValidator(group, validatorContext) {\n        var _this = _super.call(this, 'dynamicRange', group, function (value, context) {\n            if (!value) {\n                return true;\n            }\n            // Can't find a min/max range factories\n            var minIsValid = true;\n            var maxIsValid = true;\n            if (context.allowZeroProvider != null) {\n                var allowZero = _this.getVal(context, context.allowZeroProvider);\n                context.allowZero = allowZero;\n                if (context.allowZero === true && Number.parseFloat(value) === 0) {\n                    return true;\n                }\n            }\n            if (context.minProvider != null) {\n                var minValue = _this.getVal(context, context.minProvider);\n                context.minValue = minValue;\n                if (minValue != null && !(value >= minValue)) {\n                    minIsValid = false;\n                }\n            }\n            if (context.maxProvider != null) {\n                var maxValue = _this.getVal(context, context.maxProvider);\n                context.maxValue = maxValue;\n                if (maxValue != null && !(value <= maxValue)) {\n                    maxIsValid = false;\n                }\n            }\n            if (minIsValid === false && maxIsValid === false) {\n                context.messageTemplate = DynamicRangeValidator.betweenMessageTemplate;\n                return false;\n            }\n            if (minIsValid === false) {\n                context.messageTemplate = DynamicRangeValidator.minMessageTemplate;\n                return false;\n            }\n            if (maxIsValid === false) {\n                context.messageTemplate = DynamicRangeValidator.maxMessageTemplate;\n                return false;\n            }\n            return true;\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || DynamicRangeValidator.messageTemplate })) || this;\n        return _this;\n    }\n    DynamicRangeValidator.create = function (group, context) {\n        return new DynamicRangeValidator(group, context);\n    };\n    DynamicRangeValidator.prototype.getVal = function (project, myPath) {\n        return myPath.split('.').reduce(function (res, prop) {\n            if (res == null) {\n                return null;\n            }\n            return res[prop];\n        }, project);\n    };\n    DynamicRangeValidator.minMessageTemplate = '%displayName% must be greater than %minValue%';\n    DynamicRangeValidator.maxMessageTemplate = '%displayName% must be less than %maxValue%';\n    DynamicRangeValidator.betweenMessageTemplate = '%displayName% must be between the values of %minValue% and %maxValue%';\n    DynamicRangeValidator.messageTemplate = '%displayName% does not conform to limit range.';\n    return DynamicRangeValidator;\n}(Validator));\nexport { DynamicRangeValidator };\n","import { ValidatorFactory, ValidationContextBase, Validator } from '@validation';\r\nimport { EntitySelectors } from '@entity';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\n\r\nexport class DynamicRangeValidator extends Validator {\r\n    static create(group: string, context?: Partial<ValidationContextBase>) {\r\n        return new DynamicRangeValidator(group, context);\r\n    }\r\n\r\n    private static minMessageTemplate = '%displayName% must be greater than %minValue%';\r\n    private static maxMessageTemplate = '%displayName% must be less than %maxValue%';\r\n    private static betweenMessageTemplate = '%displayName% must be between the values of %minValue% and %maxValue%';\r\n    private static messageTemplate = '%displayName% does not conform to limit range.';\r\n\r\n    constructor(group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n        super('dynamicRange', group,\r\n            (value, context) => {\r\n                if (!value) { return true; }\r\n\r\n                // Can't find a min/max range factories\r\n                let minIsValid = true;\r\n                let maxIsValid = true;\r\n\r\n                if (context.allowZeroProvider != null) {\r\n                    const allowZero = this.getVal(context, context.allowZeroProvider);\r\n                    context.allowZero = allowZero;\r\n                    if (context.allowZero === true && Number.parseFloat(value) === 0) {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                if (context.minProvider != null) {\r\n                    const minValue = this.getVal(context, context.minProvider);\r\n                    context.minValue = minValue;\r\n\r\n                    if (minValue != null && !(value >= minValue)) {\r\n                        minIsValid = false;\r\n                    }\r\n                }\r\n\r\n                if (context.maxProvider != null) {\r\n                    const maxValue = this.getVal(context, context.maxProvider);\r\n                    context.maxValue = maxValue;\r\n\r\n                    if (maxValue != null && !(value <= maxValue)) {\r\n                        maxIsValid = false;\r\n                    }\r\n                }\r\n\r\n                if (minIsValid === false && maxIsValid === false) {\r\n                    context.messageTemplate = DynamicRangeValidator.betweenMessageTemplate;\r\n                    return false;\r\n                }\r\n\r\n                if (minIsValid === false) {\r\n                    context.messageTemplate = DynamicRangeValidator.minMessageTemplate;\r\n                    return false;\r\n                }\r\n\r\n                if (maxIsValid === false) {\r\n                    context.messageTemplate = DynamicRangeValidator.maxMessageTemplate;\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            {\r\n                ...validatorContext,\r\n                messageTemplate: validatorContext && validatorContext.messageTemplate || DynamicRangeValidator.messageTemplate\r\n            });\r\n    }\r\n\r\n    private getVal(project: any, myPath: string) {\r\n        return myPath.split('.').reduce((res, prop) => {\r\n            if (res == null) { return null; }\r\n            return res[prop];\r\n\r\n        }, project);\r\n    }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { Validator } from '@validation';\nimport { isValidEin } from '@app/core/services/tax-services/tax-utils';\nvar EinMaskValidator = /** @class */ (function (_super) {\n    __extends(EinMaskValidator, _super);\n    function EinMaskValidator(group, validatorContext) {\n        return _super.call(this, 'einValidator', group, function (value, context) {\n            if (context.model == null) {\n                return true;\n            }\n            var isValid = isValidEin(context.model);\n            var ein = context.model.ein;\n            if (ein != null && ein.length > 0) {\n                context.messageTemplate = EinMaskValidator.formatMessageTemplate;\n            }\n            return isValid;\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || EinMaskValidator.messageTemplate })) || this;\n    }\n    EinMaskValidator.create = function (group, context) {\n        return new EinMaskValidator(group, context);\n    };\n    EinMaskValidator.messageTemplate = '%displayName% is required';\n    EinMaskValidator.formatMessageTemplate = '%displayName% must be a valid format';\n    return EinMaskValidator;\n}(Validator));\nexport { EinMaskValidator };\n","import { ValidationContextBase, Validator } from '@validation';\r\nimport { isValidEin } from '@app/core/services/tax-services/tax-utils';\r\n\r\nexport class EinMaskValidator extends Validator {\r\n\r\n    static create(group: string, context?: Partial<ValidationContextBase>) {\r\n        return new EinMaskValidator(group, context);\r\n    }\r\n\r\n    private static messageTemplate = '%displayName% is required';\r\n    private static formatMessageTemplate = '%displayName% must be a valid format';\r\n\r\n    constructor(group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n        super('einValidator', group,\r\n            (value, context) => {\r\n                if (context.model == null) {\r\n                    return true;\r\n                }\r\n\r\n                const isValid = isValidEin(context.model);\r\n                const ein = context.model.ein;\r\n                if (ein != null && ein.length > 0) {\r\n                    context.messageTemplate = EinMaskValidator.formatMessageTemplate;\r\n                }\r\n\r\n                return isValid;\r\n            },\r\n            {\r\n                ...validatorContext,\r\n                messageTemplate: validatorContext && validatorContext.messageTemplate || EinMaskValidator.messageTemplate\r\n            });\r\n    }\r\n}\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { Validator } from '@validation';\nvar VerifiedAddressesValidator = /** @class */ (function (_super) {\n    __extends(VerifiedAddressesValidator, _super);\n    function VerifiedAddressesValidator(group, validatorContext) {\n        return _super.call(this, 'addressMustBeVerified', group, function (value, context) {\n            if (!value) {\n                return true;\n            }\n            var isValid = value.isVerified && value.geoCode != null && value.geoCode !== '';\n            if (value.isHome != null) {\n                if (value.isHome === false) {\n                    context.messageTemplate = VerifiedAddressesValidator.companyMessageTemplate;\n                }\n                if (value.isHome === true) {\n                    context.messageTemplate = VerifiedAddressesValidator.employeeMessageTemplate;\n                }\n            }\n            return isValid;\n        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || VerifiedAddressesValidator.messageTemplate })) || this;\n    }\n    VerifiedAddressesValidator.create = function (group, context) {\n        return new VerifiedAddressesValidator(group, context);\n    };\n    VerifiedAddressesValidator.messageTemplate = 'The address must be verified';\n    VerifiedAddressesValidator.employeeMessageTemplate = 'The home address must be verified.';\n    VerifiedAddressesValidator.companyMessageTemplate = 'Not all company addresses are verified. Please validate or remove them.';\n    return VerifiedAddressesValidator;\n}(Validator));\nexport { VerifiedAddressesValidator };\n","import { ValidationContextBase, Validator } from '@validation';\r\n\r\nexport class VerifiedAddressesValidator extends Validator {\r\n\r\n    static create(group: string, context?: Partial<ValidationContextBase>) {\r\n        return new VerifiedAddressesValidator(group, context);\r\n    }\r\n\r\n    private static messageTemplate = 'The address must be verified';\r\n    private static employeeMessageTemplate = 'The home address must be verified.';\r\n    private static companyMessageTemplate = 'Not all company addresses are verified. Please validate or remove them.';\r\n\r\n    constructor(group: string, validatorContext?: Partial<ValidationContextBase>) {\r\n        super('addressMustBeVerified', group,\r\n            (value, context) => {\r\n                if (!value) { return true; }\r\n\r\n                const isValid = value.isVerified && value.geoCode != null && value.geoCode !== '';\r\n\r\n                if (value.isHome != null) {\r\n                    if (value.isHome === false) {\r\n                        context.messageTemplate = VerifiedAddressesValidator.companyMessageTemplate;\r\n                    }\r\n\r\n                    if (value.isHome === true) {\r\n                        context.messageTemplate = VerifiedAddressesValidator.employeeMessageTemplate;\r\n                    }\r\n                }\r\n\r\n\r\n                return isValid;\r\n            },\r\n            {\r\n                ...validatorContext,\r\n                messageTemplate: validatorContext && validatorContext.messageTemplate || VerifiedAddressesValidator.messageTemplate\r\n            });\r\n    }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app-dev.module\";\nimport * as i2 from \"./app.component\";\nimport * as i3 from \"../../node_modules/@angular/router/router.ngfactory\";\nimport * as i4 from \"../../node_modules/@ng-bootstrap/ng-bootstrap/ng-bootstrap.ngfactory\";\nimport * as i5 from \"./mock-signin/mock-signin.component.ngfactory\";\nimport * as i6 from \"./terms/terms.component.ngfactory\";\nimport * as i7 from \"./failed/failed.component.ngfactory\";\nimport * as i8 from \"./concurrency-failure/concurrency-failure.component.ngfactory\";\nimport * as i9 from \"./auth-components/auth-failed.component.ngfactory\";\nimport * as i10 from \"./auth-components/oidc-callback.component.ngfactory\";\nimport * as i11 from \"./auth-components/signed-out.component.ngfactory\";\nimport * as i12 from \"./auth-components/unauthorized.component.ngfactory\";\nimport * as i13 from \"../../node_modules/ngx-toastr/ngx-toastr.ngfactory\";\nimport * as i14 from \"./app.component.ngfactory\";\nimport * as i15 from \"@angular/common\";\nimport * as i16 from \"@angular/platform-browser\";\nimport * as i17 from \"@angular/animations/browser\";\nimport * as i18 from \"@angular/platform-browser/animations\";\nimport * as i19 from \"@angular/animations\";\nimport * as i20 from \"@angular/forms\";\nimport * as i21 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i22 from \"./core/analytics/analytics.service\";\nimport * as i23 from \"./core/analytics/providers/router-navigation-analytics.provider\";\nimport * as i24 from \"@angular/router\";\nimport * as i25 from \"./core/analytics/receivers/google-tagmanager.receiver\";\nimport * as i26 from \"./core/services/logger.service\";\nimport * as i27 from \"@angular/common/http\";\nimport * as i28 from \"./core/http-interceptors/busy-http-interceptor\";\nimport * as i29 from \"./core/http-interceptors/read-only-http-interceptor\";\nimport * as i30 from \"./core/http-interceptors/accept-json-only-http-interceptor\";\nimport * as i31 from \"./core/http-interceptors/queued-request-http-interceptor\";\nimport * as i32 from \"./core/http-interceptors/auth-http-interceptor\";\nimport * as i33 from \"./core/http-interceptors/concurrency-http-interceptor\";\nimport * as i34 from \"./core/services/busy.service\";\nimport * as i35 from \"./store/session/session.service\";\nimport * as i36 from \"./core/services/auth-services/auth.service\";\nimport * as i37 from \"./store/entity/entity-services/company.service\";\nimport * as i38 from \"ngrx-data\";\nimport * as i39 from \"@ngrx/store\";\nimport * as i40 from \"@ngrx/effects\";\nimport * as i41 from \"./store/entity/entity-services/sp-entity-collection-dataservice\";\nimport * as i42 from \"@ngrx/store-devtools\";\nimport * as i43 from \"ngx-toastr\";\nimport * as i44 from \"./shared/filter/filter-dateformat\";\nimport * as i45 from \"./mock-services/in-memory-data.service\";\nimport * as i46 from \"angular-in-memory-web-api/interfaces\";\nimport * as i47 from \"./core/services/auth-services/oidc-manager-factory\";\nimport * as i48 from \"./mock-auth/mock-oidc-manager-factory\";\nimport * as i49 from \"./mock-auth/mock-oidc-manager\";\nimport * as i50 from \"./core/error-handling/sentry-error-handler\";\nimport * as i51 from \"./mock-signin/mock-signin.component\";\nimport * as i52 from \"./mock-signin/mock-signin.module\";\nimport * as i53 from \"./core/routing-guards/data-entry-page-guard\";\nimport * as i54 from \"./app-routing.module\";\nimport * as i55 from \"./core/routing-guards/account-view-guard\";\nimport * as i56 from \"./core/routing-guards/admin-console-guard\";\nimport * as i57 from \"./core/routing-guards/single-page-status-guard\";\nimport * as i58 from \"./terms/terms.component\";\nimport * as i59 from \"./failed/failed.component\";\nimport * as i60 from \"./concurrency-failure/concurrency-failure.component\";\nimport * as i61 from \"./auth-components/auth-failed.component\";\nimport * as i62 from \"./core/routing-guards/auth-failed-guard\";\nimport * as i63 from \"./auth-components/oidc-callback.component\";\nimport * as i64 from \"./auth-components/signed-out.component\";\nimport * as i65 from \"./auth-components/unauthorized.component\";\nimport * as i66 from \"./core/sp-route-reuse-strategy\";\nimport * as i67 from \"angular2-text-mask\";\nimport * as i68 from \"./shared/shared.module\";\nimport * as i69 from \"./account-details/account-details.module\";\nimport * as i70 from \"./core/analytics/analytics.module\";\nimport * as i71 from \"./auth-components/auth-components.module\";\nimport * as i72 from \"./core/services/location-services/geolocation.service\";\nimport * as i73 from \"./core/services/location-services/browser-geolocation.service\";\nimport * as i74 from \"./core/services/location-services/address-finder.service\";\nimport * as i75 from \"./core/services/location-services/google-places.service\";\nimport * as i76 from \"./core/window\";\nimport * as i77 from \"./core/core.module\";\nimport * as i78 from \"./core/services/title.service\";\nimport * as i79 from \"./core-components/core-components.module\";\nimport * as i80 from \"./store/session/reducer\";\nimport * as i81 from \"./store/session/session-store.module\";\nimport * as i82 from \"./store/entity/sort-comparers\";\nimport * as i83 from \"./store/entity/entity-metadata\";\nimport * as i84 from \"./mock-services/in-mem-account.service\";\nimport * as i85 from \"./mock-services/in-mem-address-validator.service\";\nimport * as i86 from \"./mock-services/in-mem-admin.service\";\nimport * as i87 from \"./mock-services/in-mem-company-package.service\";\nimport * as i88 from \"./mock-services/in-mem-deduction.service\";\nimport * as i89 from \"./mock-services/in-mem-earning.service\";\nimport * as i90 from \"./mock-services/in-mem-ein.service\";\nimport * as i91 from \"./mock-services/in-mem-esign.service\";\nimport * as i92 from \"./mock-services/in-mem-enrollment.service\";\nimport * as i93 from \"./mock-services/in-mem-identity.service\";\nimport * as i94 from \"./mock-services/in-mem-save-entities.service\";\nimport * as i95 from \"./mock-services/in-mem-tax.service\";\nimport * as i96 from \"./mock-services/in-mem-tax-rate.service\";\nimport * as i97 from \"./mock-services/in-mem-surepayroll.service\";\nimport * as i98 from \"./mock-services/http-client-backend-service-sp\";\nimport * as i99 from \"./store/entity/sp-entity-action-factory\";\nimport * as i100 from \"./core/services/id-generator.service\";\nimport * as i101 from \"./store/session/session-selectors\";\nimport * as i102 from \"./store/entity/data-service-config\";\nimport * as i103 from \"./store/entity/entity-services/ngrx-data-toast.service\";\nimport * as i104 from \"./core/services/toast.service\";\nimport * as i105 from \"./store/entity/entity-services/entity-services.module\";\nimport * as i106 from \"./store/entity/entity-store.module\";\nimport * as i107 from \"./store/app-store.module\";\nimport * as i108 from \"./core/error-handling/sentry-enricher\";\nimport * as i109 from \"./core/error-handling/auth-error-enricher\";\nimport * as i110 from \"./core/error-handling/logger-enricher\";\nimport * as i111 from \"./core/error-handling/sentry.module\";\nimport * as i112 from \"./store/validation/validation.module\";\nimport * as i113 from \"./app.module\";\nimport * as i114 from \"./store/entity/entity-services/stats.service\";\nimport * as i115 from \"./core/services/tax-services/tax-collector.service\";\nimport * as i116 from \"angular-in-memory-web-api/http-client-in-memory-web-api.module\";\nimport * as i117 from \"./mock-services/mock-services.module\";\nimport * as i118 from \"./mock-auth/mock-auth.module\";\nimport * as i119 from \"./store/validation/validation.service\";\nimport * as i120 from \"./store/validation/default-validators\";\nimport * as i121 from \"./model/validators/must-have-employees-validator\";\nimport * as i122 from \"./model/validators/federal-taxes-validator\";\nimport * as i123 from \"./model/validators/state-taxes-validator\";\nimport * as i124 from \"./model/validators/employee-taxes-validator\";\nimport * as i125 from \"./model/validators/username-validator\";\nimport * as i126 from \"./model/validators/password-validator\";\nimport * as i127 from \"./model/validators/household-filer-must-exist-validator\";\nimport * as i128 from \"./model/validators/earnings-validator\";\nimport * as i129 from \"./model/validators/checkdate-criteria-validator\";\nimport * as i130 from \"./model/validators/address-criteria-validator\";\nimport * as i131 from \"./model/validators/document-signing-complete-validator\";\nimport * as i132 from \"./model/validators/must-not-be-exempt-validator\";\nimport * as i133 from \"./model/validators/dynamic-range-validator\";\nimport * as i134 from \"./model/validators/ein-validator\";\nimport * as i135 from \"./model/validators/verified-address-validator\";\nimport * as i136 from \"./store/entity/entity-selectors\";\nimport * as i137 from \"./store/entity/entity-services/earning.service\";\nimport * as i138 from \"./core/services/holidays.service\";\nvar AppDevModuleNgFactory = i0.ɵcmf(i1.AppDevModule, [i2.AppComponent], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i3.ɵEmptyOutletComponentNgFactory, i4.NgbAlertNgFactory, i4.NgbDatepickerNgFactory, i4.ɵzNgFactory, i4.ɵbaNgFactory, i4.ɵsNgFactory, i4.ɵvNgFactory, i4.ɵwNgFactory, i5.MockSigninComponentNgFactory, i6.TermsComponentNgFactory, i7.FailedComponentNgFactory, i8.ConcurrencyFailureComponentNgFactory, i9.AuthFailedComponentNgFactory, i10.OidcCallbackComponentNgFactory, i11.SignedOutComponentNgFactory, i12.UnauthorizedComponentNgFactory, i13.ToastNgFactory, i14.AppComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(5120, i0.LOCALE_ID, i0.ɵangular_packages_core_core_k, [[3, i0.LOCALE_ID]]), i0.ɵmpd(4608, i15.NgLocalization, i15.NgLocaleLocalization, [i0.LOCALE_ID, [2, i15.ɵangular_packages_common_common_a]]), i0.ɵmpd(5120, i0.APP_ID, i0.ɵangular_packages_core_core_f, []), i0.ɵmpd(5120, i0.IterableDiffers, i0.ɵangular_packages_core_core_i, []), i0.ɵmpd(5120, i0.KeyValueDiffers, i0.ɵangular_packages_core_core_j, []), i0.ɵmpd(4608, i16.DomSanitizer, i16.ɵDomSanitizerImpl, [i15.DOCUMENT]), i0.ɵmpd(6144, i0.Sanitizer, null, [i16.DomSanitizer]), i0.ɵmpd(4608, i16.HAMMER_GESTURE_CONFIG, i16.HammerGestureConfig, []), i0.ɵmpd(5120, i16.EVENT_MANAGER_PLUGINS, function (p0_0, p0_1, p0_2, p1_0, p2_0, p2_1, p2_2, p2_3) { return [new i16.ɵDomEventsPlugin(p0_0, p0_1, p0_2), new i16.ɵKeyEventsPlugin(p1_0), new i16.ɵHammerGesturesPlugin(p2_0, p2_1, p2_2, p2_3)]; }, [i15.DOCUMENT, i0.NgZone, i0.PLATFORM_ID, i15.DOCUMENT, i15.DOCUMENT, i16.HAMMER_GESTURE_CONFIG, i0.ɵConsole, [2, i16.HAMMER_LOADER]]), i0.ɵmpd(4608, i16.EventManager, i16.EventManager, [i16.EVENT_MANAGER_PLUGINS, i0.NgZone]), i0.ɵmpd(135680, i16.ɵDomSharedStylesHost, i16.ɵDomSharedStylesHost, [i15.DOCUMENT]), i0.ɵmpd(4608, i16.ɵDomRendererFactory2, i16.ɵDomRendererFactory2, [i16.EventManager, i16.ɵDomSharedStylesHost]), i0.ɵmpd(5120, i17.AnimationDriver, i18.ɵangular_packages_platform_browser_animations_animations_b, []), i0.ɵmpd(5120, i17.ɵAnimationStyleNormalizer, i18.ɵangular_packages_platform_browser_animations_animations_c, []), i0.ɵmpd(4608, i17.ɵAnimationEngine, i18.ɵangular_packages_platform_browser_animations_animations_a, [i15.DOCUMENT, i17.AnimationDriver, i17.ɵAnimationStyleNormalizer]), i0.ɵmpd(5120, i0.RendererFactory2, i18.ɵangular_packages_platform_browser_animations_animations_d, [i16.ɵDomRendererFactory2, i17.ɵAnimationEngine, i0.NgZone]), i0.ɵmpd(6144, i16.ɵSharedStylesHost, null, [i16.ɵDomSharedStylesHost]), i0.ɵmpd(4608, i0.Testability, i0.Testability, [i0.NgZone]), i0.ɵmpd(4608, i19.AnimationBuilder, i18.ɵBrowserAnimationBuilder, [i0.RendererFactory2, i16.DOCUMENT]), i0.ɵmpd(4608, i20.ɵangular_packages_forms_forms_i, i20.ɵangular_packages_forms_forms_i, []), i0.ɵmpd(4608, i20.FormBuilder, i20.FormBuilder, []), i0.ɵmpd(4608, i21.NgbModal, i21.NgbModal, [i0.ComponentFactoryResolver, i0.Injector, i21.ɵbb, i21.NgbModalConfig]), i0.ɵmpd(5120, i22.ANALYTICS_EVENT_PROVIDER, function (p0_0) { return [new i23.RouterAnalyticsNavigationProvider(p0_0)]; }, [i24.Router]), i0.ɵmpd(5120, i22.ANALYTICS_EVENT_RECEIVER, function (p0_0, p0_1) { return [new i25.GoogleTagManagerReceiver(p0_0, p0_1)]; }, [i15.DOCUMENT, i26.LoggerService]), i0.ɵmpd(4608, i27.HttpXsrfTokenExtractor, i27.ɵangular_packages_common_http_http_g, [i15.DOCUMENT, i0.PLATFORM_ID, i27.ɵangular_packages_common_http_http_e]), i0.ɵmpd(4608, i27.ɵangular_packages_common_http_http_h, i27.ɵangular_packages_common_http_http_h, [i27.HttpXsrfTokenExtractor, i27.ɵangular_packages_common_http_http_f]), i0.ɵmpd(5120, i27.ɵangular_packages_common_http_http_b, i27.ɵangular_packages_common_http_http_c, []), i0.ɵmpd(4608, i27.JsonpClientBackend, i27.JsonpClientBackend, [i27.ɵangular_packages_common_http_http_b, i15.DOCUMENT]), i0.ɵmpd(5120, i27.HTTP_INTERCEPTORS, function (p0_0, p1_0, p3_0, p4_0, p4_1, p4_2, p5_0, p5_1, p5_2, p6_0, p7_0) { return [new i28.BusyHttpInterceptor(p0_0), new i29.ReadOnlyHttpInterceptor(p1_0), new i30.AcceptJsonOnlyHttpInterceptor(), new i31.QueuedRequestHttpInterceptor(p3_0), new i32.AuthHttpInterceptor(p4_0, p4_1, p4_2), new i33.ConcurrencyHttpInterceptor(p5_0, p5_1, p5_2), p6_0, new i27.JsonpInterceptor(p7_0)]; }, [i34.BusyService, i35.SessionService, i35.SessionService, i36.AuthService, i35.SessionService, i24.Router, i37.CompanyService, i24.Router, i35.SessionService, i27.ɵangular_packages_common_http_http_h, i27.JsonpClientBackend]), i0.ɵmpd(4608, i27.HttpXhrBackend, i27.HttpXhrBackend, [i27.XhrFactory]), i0.ɵmpd(5120, i24.ActivatedRoute, i24.ɵangular_packages_router_router_g, [i24.Router]), i0.ɵmpd(4608, i24.NoPreloading, i24.NoPreloading, []), i0.ɵmpd(6144, i24.PreloadingStrategy, null, [i24.NoPreloading]), i0.ɵmpd(135680, i24.RouterPreloader, i24.RouterPreloader, [i24.Router, i0.NgModuleFactoryLoader, i0.Compiler, i0.Injector, i24.PreloadingStrategy]), i0.ɵmpd(4608, i24.PreloadAllModules, i24.PreloadAllModules, []), i0.ɵmpd(5120, i24.ɵangular_packages_router_router_n, i24.ɵangular_packages_router_router_c, [i24.Router, i15.ViewportScroller, i24.ROUTER_CONFIGURATION]), i0.ɵmpd(5120, i24.ROUTER_INITIALIZER, i24.ɵangular_packages_router_router_j, [i24.ɵangular_packages_router_router_h]), i0.ɵmpd(5120, i0.APP_BOOTSTRAP_LISTENER, function (p0_0) { return [p0_0]; }, [i24.ROUTER_INITIALIZER]), i0.ɵmpd(4608, i38.CorrelationIdGenerator, i38.CorrelationIdGenerator, []), i0.ɵmpd(4352, i38.EntityDispatcherDefaultOptions, { optimisticAdd: true, optimisticDelete: true, optimisticUpdate: true, optimisticUpsert: true, optimisticSaveEntities: true }, []), i0.ɵmpd(4608, i38.EntityCacheDispatcher, i38.EntityCacheDispatcher, [i38.CorrelationIdGenerator, i38.EntityDispatcherDefaultOptions, i39.ScannedActionsSubject, i39.Store]), i0.ɵmpd(5120, i38.ENTITY_CACHE_SELECTOR_TOKEN, i38.createEntityCacheSelector, [[2, i38.ENTITY_CACHE_NAME_TOKEN]]), i0.ɵmpd(135680, i38.EntityDispatcherFactory, i38.EntityDispatcherFactory, [i38.EntityActionFactory, i39.Store, i38.EntityDispatcherDefaultOptions, i39.ScannedActionsSubject, i38.ENTITY_CACHE_SELECTOR_TOKEN, i38.CorrelationIdGenerator]), i0.ɵmpd(4608, i38.EntitySelectorsFactory, i38.EntitySelectorsFactory, [[2, i38.EntityCollectionCreator], [2, i38.ENTITY_CACHE_SELECTOR_TOKEN]]), i0.ɵmpd(4608, i38.EntitySelectors$Factory, i38.EntitySelectors$Factory, [i39.Store, i40.Actions, i38.ENTITY_CACHE_SELECTOR_TOKEN]), i0.ɵmpd(4608, i38.EntityCollectionServiceElementsFactory, i38.EntityCollectionServiceElementsFactory, [i38.EntityDispatcherFactory, i38.EntityDefinitionService, i38.EntitySelectorsFactory, i38.EntitySelectors$Factory]), i0.ɵmpd(4608, i38.EntityCollectionServiceFactory, i38.EntityCollectionServiceFactory, [i38.EntityCollectionServiceElementsFactory]), i0.ɵmpd(4608, i38.EntityServicesElements, i38.EntityServicesElements, [i38.EntityCollectionServiceFactory, i38.EntityDispatcherFactory, i38.EntitySelectors$Factory, i39.Store]), i0.ɵmpd(4608, i38.EntityServices, i38.EntityServicesBase, [i38.EntityServicesElements]), i0.ɵmpd(4608, i38.DefaultDataService, i41.SpEntityCollectionDataServiceFactory, [i27.HttpClient, i38.HttpUrlGenerator, [2, i38.DefaultDataServiceConfig]]), i0.ɵmpd(135680, i39.State, i39.State, [i39.ActionsSubject, i39.ReducerObservable, i39.ScannedActionsSubject, i39.INITIAL_STATE]), i0.ɵmpd(5120, i42.ɵngrx_modules_store_devtools_store_devtools_a, i42.ɵngrx_modules_store_devtools_store_devtools_b, [i42.ɵngrx_modules_store_devtools_store_devtools_j, i42.ɵngrx_modules_store_devtools_store_devtools_h]), i0.ɵmpd(4608, i43.OverlayContainer, i43.OverlayContainer, []), i0.ɵmpd(4608, i43.Overlay, i43.Overlay, [i43.OverlayContainer, i0.ComponentFactoryResolver, i0.ApplicationRef]), i0.ɵmpd(4608, i43.ToastrService, i43.ToastrService, [i43.TOAST_CONFIG, i43.Overlay, i0.Injector, i16.DomSanitizer, i0.NgZone]), i0.ɵmpd(4608, i15.DecimalPipe, i15.DecimalPipe, [i0.LOCALE_ID]), i0.ɵmpd(4608, i15.DatePipe, i15.DatePipe, [i0.LOCALE_ID]), i0.ɵmpd(4608, i21.NgbRadioGroup, i21.NgbRadioGroup, []), i0.ɵmpd(4608, i21.NgbDateParserFormatter, i44.DateParserFormatter, []), i0.ɵmpd(6144, i45.InMemoryDataService, null, [i46.InMemoryDbService]), i0.ɵmpd(4608, i47.OidcManagerFactory, i48.MockOidcManagerFactory, [i49.MockOidcManager]), i0.ɵmpd(1073742336, i15.CommonModule, i15.CommonModule, []), i0.ɵmpd(512, i0.ErrorHandler, i50.SentryErrorHandler, [i0.Injector]), i0.ɵmpd(1024, i0.NgProbeToken, function () { return [i24.ɵangular_packages_router_router_b()]; }, []), i0.ɵmpd(512, i24.ɵangular_packages_router_router_h, i24.ɵangular_packages_router_router_h, [i0.Injector]), i0.ɵmpd(1024, i0.APP_INITIALIZER, function (p0_0, p1_0) { return [i16.ɵangular_packages_platform_browser_platform_browser_j(p0_0), i24.ɵangular_packages_router_router_i(p1_0)]; }, [[2, i0.NgProbeToken], i24.ɵangular_packages_router_router_h]), i0.ɵmpd(512, i0.ApplicationInitStatus, i0.ApplicationInitStatus, [[2, i0.APP_INITIALIZER]]), i0.ɵmpd(131584, i0.ApplicationRef, i0.ApplicationRef, [i0.NgZone, i0.ɵConsole, i0.Injector, i0.ErrorHandler, i0.ComponentFactoryResolver, i0.ApplicationInitStatus]), i0.ɵmpd(1073742336, i0.ApplicationModule, i0.ApplicationModule, [i0.ApplicationRef]), i0.ɵmpd(1073742336, i16.BrowserModule, i16.BrowserModule, [[3, i16.BrowserModule]]), i0.ɵmpd(1073742336, i18.BrowserAnimationsModule, i18.BrowserAnimationsModule, []), i0.ɵmpd(1073742336, i20.ɵangular_packages_forms_forms_bb, i20.ɵangular_packages_forms_forms_bb, []), i0.ɵmpd(1073742336, i20.FormsModule, i20.FormsModule, []), i0.ɵmpd(1073742336, i20.ReactiveFormsModule, i20.ReactiveFormsModule, []), i0.ɵmpd(1024, i24.ɵangular_packages_router_router_a, i24.ɵangular_packages_router_router_e, [[3, i24.Router]]), i0.ɵmpd(512, i24.UrlSerializer, i24.DefaultUrlSerializer, []), i0.ɵmpd(512, i24.ChildrenOutletContexts, i24.ChildrenOutletContexts, []), i0.ɵmpd(256, i24.ROUTER_CONFIGURATION, { enableTracing: false }, []), i0.ɵmpd(1024, i15.LocationStrategy, i24.ɵangular_packages_router_router_d, [i15.PlatformLocation, [2, i15.APP_BASE_HREF], i24.ROUTER_CONFIGURATION]), i0.ɵmpd(512, i15.Location, i15.Location, [i15.LocationStrategy]), i0.ɵmpd(512, i0.Compiler, i0.Compiler, []), i0.ɵmpd(512, i0.NgModuleFactoryLoader, i0.SystemJsNgModuleLoader, [i0.Compiler, [2, i0.SystemJsNgModuleLoaderConfig]]), i0.ɵmpd(1024, i24.ROUTES, function () { return [[{ path: \"mock-signin\", pathMatch: \"full\", component: i51.MockSigninComponent, data: i52.ɵ0 }], [{ path: \"\", pathMatch: \"full\", redirectTo: \"dashboard\" }, { path: \"about-you\", canActivateChild: [i53.DataEntryPageGuard], loadChildren: \"@app/about-you/about-you.module#AboutYouModule\", data: i54.ɵ0 }, { path: \"account-view\", canActivate: [i55.AccountViewGuard], loadChildren: \"@app/account-view/account-view.module#AccountViewModule\", data: i54.ɵ1 }, { path: \"admin\", canActivateChild: [i56.AdminConsoleGuard], loadChildren: \"@app/admin-console/admin-console.module#AdminConsoleModule\", data: i54.ɵ2 }, { path: \"company-bank-account\", canActivateChild: [i53.DataEntryPageGuard], loadChildren: \"@app/company-bank-info/company-bank-info.module#CompanyBankInfoModule\", data: i54.ɵ3 }, { path: \"company-info\", canActivateChild: [i53.DataEntryPageGuard], loadChildren: \"@app/company-info/company-info.module#CompanyInfoModule\", data: i54.ɵ4 }, { path: \"tax-info\", canActivateChild: [i53.DataEntryPageGuard], loadChildren: \"@app/company-tax-info/company-tax-info.module#CompanyTaxInfoModule\", data: i54.ɵ5 }, { path: \"dashboard\", canActivateChild: [i53.DataEntryPageGuard], loadChildren: \"@app/dashboard/dashboard.module#DashboardModule\", data: i54.ɵ6 }, { path: \"earnings\", canActivateChild: [i53.DataEntryPageGuard], loadChildren: \"@app/earnings/earnings.module#EarningsModule\", data: i54.ɵ7 }, { path: \"employees\", canActivateChild: [i53.DataEntryPageGuard], loadChildren: \"@app/employees/employees.module#EmployeesModule\", data: i54.ɵ8 }, { path: \"documents\", canActivate: [i57.SinglePageStatusGuard], loadChildren: \"@app/documents/documents.module#DocumentsModule\", data: i54.ɵ9 }, { path: \"review\", canActivate: [i55.AccountViewGuard], loadChildren: \"@app/review/review.module#ReviewModule\", data: i54.ɵ10 }, { path: \"terms\", component: i58.TermsComponent }, { path: \"enrolled\", canActivate: [i57.SinglePageStatusGuard], loadChildren: \"@app/enrolled/enrolled.module#EnrolledModule\", data: i54.ɵ11 }, { path: \"abandoned\", canActivate: [i57.SinglePageStatusGuard], loadChildren: \"@app/abandoned/abandoned.module#AbandonedModule\", data: i54.ɵ12 }, { path: \"processing\", canActivate: [i57.SinglePageStatusGuard], loadChildren: \"@app/processing/processing.module#ProcessingModule\", data: i54.ɵ13 }, { path: \"failed\", component: i59.FailedComponent, data: i54.ɵ14 }, { path: \"concurrency-failure\", component: i60.ConcurrencyFailureComponent, data: i54.ɵ15 }], [{ path: \"error\", component: i61.AuthFailedComponent, data: { title: \"Signin Failed\" }, canDeactivate: [i62.AuthFailedGuard] }, { path: \"oidc-callback\", component: i63.OidcCallbackComponent }, { path: \"signed-out\", component: i64.SignedOutComponent, data: { title: \"Signed-out\" } }, { path: \"unauthorized\", component: i65.UnauthorizedComponent, data: { title: \"Unauthorized\" } }], [{ path: \"**\", redirectTo: \"\" }]]; }, []), i0.ɵmpd(512, i24.RouteReuseStrategy, i66.SpRouteReuseStrategy, []), i0.ɵmpd(1024, i24.Router, i24.ɵangular_packages_router_router_f, [i0.ApplicationRef, i24.UrlSerializer, i24.ChildrenOutletContexts, i15.Location, i0.Injector, i0.NgModuleFactoryLoader, i0.Compiler, i24.ROUTES, i24.ROUTER_CONFIGURATION, [2, i24.UrlHandlingStrategy], [2, i24.RouteReuseStrategy]]), i0.ɵmpd(1073742336, i24.RouterModule, i24.RouterModule, [[2, i24.ɵangular_packages_router_router_a], [2, i24.Router]]), i0.ɵmpd(1073742336, i21.NgbAccordionModule, i21.NgbAccordionModule, []), i0.ɵmpd(1073742336, i21.NgbAlertModule, i21.NgbAlertModule, []), i0.ɵmpd(1073742336, i21.NgbButtonsModule, i21.NgbButtonsModule, []), i0.ɵmpd(1073742336, i21.NgbCarouselModule, i21.NgbCarouselModule, []), i0.ɵmpd(1073742336, i21.NgbCollapseModule, i21.NgbCollapseModule, []), i0.ɵmpd(1073742336, i21.NgbDatepickerModule, i21.NgbDatepickerModule, []), i0.ɵmpd(1073742336, i21.NgbDropdownModule, i21.NgbDropdownModule, []), i0.ɵmpd(1073742336, i21.NgbModalModule, i21.NgbModalModule, []), i0.ɵmpd(1073742336, i21.NgbPaginationModule, i21.NgbPaginationModule, []), i0.ɵmpd(1073742336, i21.NgbPopoverModule, i21.NgbPopoverModule, []), i0.ɵmpd(1073742336, i21.NgbProgressbarModule, i21.NgbProgressbarModule, []), i0.ɵmpd(1073742336, i21.NgbRatingModule, i21.NgbRatingModule, []), i0.ɵmpd(1073742336, i21.NgbTabsetModule, i21.NgbTabsetModule, []), i0.ɵmpd(1073742336, i21.NgbTimepickerModule, i21.NgbTimepickerModule, []), i0.ɵmpd(1073742336, i21.NgbTooltipModule, i21.NgbTooltipModule, []), i0.ɵmpd(1073742336, i21.NgbTypeaheadModule, i21.NgbTypeaheadModule, []), i0.ɵmpd(1073742336, i21.NgbModule, i21.NgbModule, []), i0.ɵmpd(1073742336, i67.TextMaskModule, i67.TextMaskModule, []), i0.ɵmpd(1073742336, i68.SharedModule, i68.SharedModule, []), i0.ɵmpd(1073742336, i69.AccountDetailsModule, i69.AccountDetailsModule, []), i0.ɵmpd(1073742336, i70.AnalyticsModule, i70.AnalyticsModule, [[3, i70.AnalyticsModule], i22.AnalyticsService]), i0.ɵmpd(1073742336, i71.AuthComponentsModule, i71.AuthComponentsModule, []), i0.ɵmpd(512, i72.GeolocationService, i73.BrowserGeolocationService, []), i0.ɵmpd(512, i74.AddressFinderService, i75.GooglePlacesService, [i26.LoggerService, i76.WindowToken, [2, i72.GeolocationService]]), i0.ɵmpd(1073742336, i77.CoreModule, i77.CoreModule, [[3, i77.CoreModule], i74.AddressFinderService, i78.TitleService]), i0.ɵmpd(1073742336, i79.CoreComponentsModule, i79.CoreComponentsModule, []), i0.ɵmpd(1073742336, i27.HttpClientXsrfModule, i27.HttpClientXsrfModule, []), i0.ɵmpd(1073742336, i27.HttpClientModule, i27.HttpClientModule, []), i0.ɵmpd(1073742336, i27.HttpClientJsonpModule, i27.HttpClientJsonpModule, []), i0.ɵmpd(1073742336, i52.MockSigninModule, i52.MockSigninModule, []), i0.ɵmpd(1073742336, i54.AppRoutingModule, i54.AppRoutingModule, []), i0.ɵmpd(131584, i39.ActionsSubject, i39.ActionsSubject, []), i0.ɵmpd(131584, i42.ɵngrx_modules_store_devtools_store_devtools_g, i42.ɵngrx_modules_store_devtools_store_devtools_g, []), i0.ɵmpd(2048, i39.ReducerManagerDispatcher, null, [i42.ɵngrx_modules_store_devtools_store_devtools_g]), i0.ɵmpd(256, i39._INITIAL_STATE, undefined, []), i0.ɵmpd(1024, i39.INITIAL_STATE, i39._initialStateFactory, [i39._INITIAL_STATE]), i0.ɵmpd(256, i39._INITIAL_REDUCERS, {}, []), i0.ɵmpd(2048, i39._STORE_REDUCERS, null, [i39._INITIAL_REDUCERS]), i0.ɵmpd(1024, i39.INITIAL_REDUCERS, i39._createStoreReducers, [i0.Injector, i39._INITIAL_REDUCERS, i39._STORE_REDUCERS]), i0.ɵmpd(256, i39._REDUCER_FACTORY, i39.combineReducers, []), i0.ɵmpd(256, i39.META_REDUCERS, [], []), i0.ɵmpd(1024, i39.REDUCER_FACTORY, i39.createReducerFactory, [i39._REDUCER_FACTORY, i39.META_REDUCERS]), i0.ɵmpd(131584, i39.ReducerManager, i39.ReducerManager, [i39.ReducerManagerDispatcher, i39.INITIAL_STATE, i39.INITIAL_REDUCERS, i39.REDUCER_FACTORY]), i0.ɵmpd(2048, i39.ReducerObservable, null, [i39.ReducerManager]), i0.ɵmpd(131584, i39.ScannedActionsSubject, i39.ScannedActionsSubject, []), i0.ɵmpd(1024, i42.ɵngrx_modules_store_devtools_store_devtools_j, i42.ɵngrx_modules_store_devtools_store_devtools_c, []), i0.ɵmpd(256, i42.ɵngrx_modules_store_devtools_store_devtools_i, {}, []), i0.ɵmpd(1024, i42.ɵngrx_modules_store_devtools_store_devtools_h, i42.ɵngrx_modules_store_devtools_store_devtools_f, [i42.ɵngrx_modules_store_devtools_store_devtools_i]), i0.ɵmpd(512, i42.ɵngrx_modules_store_devtools_store_devtools_k, i42.ɵngrx_modules_store_devtools_store_devtools_k, [i42.ɵngrx_modules_store_devtools_store_devtools_j, i42.ɵngrx_modules_store_devtools_store_devtools_h]), i0.ɵmpd(512, i42.StoreDevtools, i42.StoreDevtools, [i42.ɵngrx_modules_store_devtools_store_devtools_g, i39.ActionsSubject, i39.ReducerObservable, i42.ɵngrx_modules_store_devtools_store_devtools_k, i39.ScannedActionsSubject, i0.ErrorHandler, i39.INITIAL_STATE, i42.ɵngrx_modules_store_devtools_store_devtools_h]), i0.ɵmpd(1024, i39.StateObservable, i42.ɵngrx_modules_store_devtools_store_devtools_d, [i42.StoreDevtools]), i0.ɵmpd(512, i39.Store, i39.Store, [i39.StateObservable, i39.ActionsSubject, i39.ReducerManager]), i0.ɵmpd(1073742336, i39.StoreRootModule, i39.StoreRootModule, [i39.ActionsSubject, i39.ReducerObservable, i39.ScannedActionsSubject, i39.Store]), i0.ɵmpd(512, i40.EffectSources, i40.EffectSources, [i0.ErrorHandler]), i0.ɵmpd(131584, i40.ɵngrx_modules_effects_effects_f, i40.ɵngrx_modules_effects_effects_f, [i40.EffectSources, i39.Store]), i0.ɵmpd(1024, i40.ɵngrx_modules_effects_effects_d, i40.ɵngrx_modules_effects_effects_a, []), i0.ɵmpd(1024, i39.STORE_FEATURES, function () { return [{ key: \"session\", reducerFactory: i39.combineReducers, metaReducers: [], initialState: undefined }]; }, []), i0.ɵmpd(1024, i39._FEATURE_REDUCERS, function () { return [i80.sessionReducer]; }, []), i0.ɵmpd(1024, i39._FEATURE_REDUCERS_TOKEN, function (p0_0) { return [p0_0]; }, [i39._FEATURE_REDUCERS]), i0.ɵmpd(1024, i39.FEATURE_REDUCERS, function (p0_0, p0_1, p0_2) { return [i39._createFeatureReducers(p0_0, p0_1, p0_2)]; }, [i0.Injector, i39._FEATURE_REDUCERS, i39._FEATURE_REDUCERS_TOKEN]), i0.ɵmpd(1073873408, i39.StoreFeatureModule, i39.StoreFeatureModule, [i39.STORE_FEATURES, i39.FEATURE_REDUCERS, i39.ReducerManager, i39.StoreRootModule]), i0.ɵmpd(1073742336, i40.ɵngrx_modules_effects_effects_b, i40.ɵngrx_modules_effects_effects_b, [i40.EffectSources, i40.ɵngrx_modules_effects_effects_f, i39.Store, i40.ɵngrx_modules_effects_effects_d, [2, i39.StoreRootModule], [2, i39.StoreFeatureModule]]), i0.ɵmpd(1073742336, i81.SessionStoreModule, i81.SessionStoreModule, []), i0.ɵmpd(1073742336, i39.StoreModule, i39.StoreModule, []), i0.ɵmpd(1024, i38.ENTITY_METADATA_TOKEN, function () { return [{ Address: {}, Ancillary: {}, Company: { sortComparer: i82.sortByName }, CompanyDeduction: {}, CompanyDeductionParameter: {}, CompanyTax: {}, CompanyAncillary: {}, CompanyEarning: {}, Deduction: { selectId: i83.selectDeductionId }, Document: {}, Earning: { selectId: i83.selectCode }, Employee: { sortComparer: i82.sortByFirstLast }, EmployeeDeduction: {}, EmployeeDeductionParameter: {}, EmployeePaymentMethod: {}, EmployeeTax: {}, Envelope: {}, EnvelopeSigner: {}, HouseholdFilers: {}, Stats: {}, User: { sortComparer: i82.sortByName }, TaxRate: {} }]; }, []), i0.ɵmpd(512, i38.EntityDefinitionService, i38.EntityDefinitionService, [[2, i38.ENTITY_METADATA_TOKEN]]), i0.ɵmpd(512, i38.EntityCollectionCreator, i38.EntityCollectionCreator, [[2, i38.EntityDefinitionService]]), i0.ɵmpd(512, i38.EntityCollectionReducerMethodsFactory, i38.EntityCollectionReducerMethodsFactory, [i38.EntityDefinitionService]), i0.ɵmpd(512, i38.EntityCollectionReducerFactory, i38.EntityCollectionReducerFactory, [i38.EntityCollectionReducerMethodsFactory]), i0.ɵmpd(256, i38.ENTITY_COLLECTION_META_REDUCERS, [], []), i0.ɵmpd(512, i38.EntityCollectionReducerRegistry, i38.EntityCollectionReducerRegistry, [i38.EntityCollectionReducerFactory, [2, i38.ENTITY_COLLECTION_META_REDUCERS]]), i0.ɵmpd(512, i38.Logger, i38.DefaultLogger, []), i0.ɵmpd(512, i38.EntityCacheReducerFactory, i38.EntityCacheReducerFactory, [i38.EntityCollectionCreator, i38.EntityCollectionReducerRegistry, i38.Logger]), i0.ɵmpd(256, i38.ENTITY_CACHE_NAME_TOKEN, i38.ENTITY_CACHE_NAME, []), i0.ɵmpd(256, i38.ENTITY_CACHE_META_REDUCERS, [], []), i0.ɵmpd(1073873408, i38.NgrxDataModuleWithoutEffects, i38.NgrxDataModuleWithoutEffects, [i39.ReducerManager, i38.EntityCacheReducerFactory, i0.Injector, [2, i38.ENTITY_CACHE_NAME_TOKEN], [2, i38.INITIAL_ENTITY_CACHE_STATE], [2, i38.ENTITY_CACHE_META_REDUCERS]]), i0.ɵmpd(1073742336, i40.EffectsModule, i40.EffectsModule, []), i0.ɵmpd(512, i40.Actions, i40.Actions, [i39.ScannedActionsSubject]), i0.ɵmpd(512, i46.InMemoryDbService, i45.InMemoryDataService, [i84.InMemAccountService, i85.InMemAddressValidatorService, i86.InMemAdminService, i87.InMemCompanyPackageService, i88.InMemDeductionService, i89.InMemEarningService, i90.InMemEinService, i91.InMemEsignService, i92.InMemEnrollmentService, i93.InMemIdentityService, i94.InMemSaveEntitiesService, i95.InMemTaxService, i96.InMemTaxRateService, i97.InMemSurepayrollService]), i0.ɵmpd(256, i46.InMemoryBackendConfig, { dataEncapsulation: false, delay: 500, passThruUnknownUrl: true }, []), i0.ɵmpd(512, i27.ɵangular_packages_common_http_http_d, i27.ɵangular_packages_common_http_http_d, []), i0.ɵmpd(2048, i27.XhrFactory, null, [i27.ɵangular_packages_common_http_http_d]), i0.ɵmpd(1024, i27.HttpBackend, i98.httpClientInMemBackendServiceFactory, [i46.InMemoryDbService, i46.InMemoryBackendConfig, i27.XhrFactory]), i0.ɵmpd(512, i27.HttpHandler, i27.ɵHttpInterceptingHandler, [i27.HttpBackend, i0.Injector]), i0.ɵmpd(512, i27.HttpClient, i27.HttpClient, [i27.HttpHandler]), i0.ɵmpd(256, i38.DefaultDataServiceConfig, { root: \"http://localhost:5105\", timeout: 60000 }, []), i0.ɵmpd(512, i38.EntityCacheDataService, i38.EntityCacheDataService, [i38.EntityDefinitionService, i27.HttpClient, [2, i38.DefaultDataServiceConfig]]), i0.ɵmpd(512, i38.EntityActionFactory, i99.SpEntityActionFactory, [i100.IdGeneratorService, i101.SessionSelectors]), i0.ɵmpd(512, i38.EntityCacheEffects, i38.EntityCacheEffects, [i40.Actions, i38.EntityCacheDataService, i38.EntityActionFactory, i38.Logger, [2, i38.ɵa]]), i0.ɵmpd(512, i38.Pluralizer, i102.NoPluralizer, []), i0.ɵmpd(512, i38.HttpUrlGenerator, i38.DefaultHttpUrlGenerator, [i38.Pluralizer]), i0.ɵmpd(512, i38.DefaultDataServiceFactory, i38.DefaultDataServiceFactory, [i27.HttpClient, i38.HttpUrlGenerator, [2, i38.DefaultDataServiceConfig]]), i0.ɵmpd(512, i38.EntityDataService, i38.EntityDataService, [i38.DefaultDataServiceFactory]), i0.ɵmpd(512, i38.PersistenceResultHandler, i38.DefaultPersistenceResultHandler, [i38.Logger, i38.EntityActionFactory]), i0.ɵmpd(512, i38.EntityEffects, i38.EntityEffects, [i40.Actions, i38.EntityDataService, i38.EntityActionFactory, i38.PersistenceResultHandler, [2, i38.ɵa]]), i0.ɵmpd(1073742336, i38.NgrxDataModule, i38.NgrxDataModule, [i40.EffectSources, i38.EntityCacheEffects, i38.EntityEffects]), i0.ɵmpd(512, i103.NgrxDataToastService, i103.NgrxDataToastService, [i40.Actions, i26.LoggerService, i104.ToastService]), i0.ɵmpd(1073742336, i105.EntityServicesModule, i105.EntityServicesModule, [i103.NgrxDataToastService]), i0.ɵmpd(1073742336, i106.EntityStoreModule, i106.EntityStoreModule, []), i0.ɵmpd(1073742336, i42.StoreDevtoolsModule, i42.StoreDevtoolsModule, []), i0.ɵmpd(1073742336, i107.AppStoreModule, i107.AppStoreModule, []), i0.ɵmpd(1073742336, i43.ToastrModule, i43.ToastrModule, [[3, i43.ToastrModule]]), i0.ɵmpd(1024, i108.SENTRY_ENRICHER, function (p0_0, p0_1, p1_0) { return [new i109.AuthErrorEnricher(p0_0, p0_1), new i110.LoggerServiceEnricher(p1_0)]; }, [i36.AuthService, i35.SessionService, i26.LoggerService]), i0.ɵmpd(1073742336, i111.SentryModule, i111.SentryModule, [[2, i108.SENTRY_ENRICHER]]), i0.ɵmpd(1073742336, i112.ValidationModule, i112.ValidationModule, []), i0.ɵmpd(1073742336, i113.AppModule, i113.AppModule, [i114.StatsService, i115.TaxCollectorService]), i0.ɵmpd(1073742336, i116.HttpClientInMemoryWebApiModule, i116.HttpClientInMemoryWebApiModule, []), i0.ɵmpd(1073742336, i117.MockServicesModule, i117.MockServicesModule, []), i0.ɵmpd(1073742336, i118.MockAuthModule, i118.MockAuthModule, []), i0.ɵmpd(1073742336, i1.AppDevModule, i1.AppDevModule, []), i0.ɵmpd(256, i0.ɵAPP_ROOT, true, []), i0.ɵmpd(256, i18.ANIMATION_MODULE_TYPE, \"BrowserAnimations\", []), i0.ɵmpd(256, i27.ɵangular_packages_common_http_http_e, \"XSRF-TOKEN\", []), i0.ɵmpd(256, i27.ɵangular_packages_common_http_http_f, \"X-XSRF-TOKEN\", []), i0.ɵmpd(1024, i38.PLURAL_NAMES_TOKEN, function () { return [{}]; }, []), i0.ɵmpd(1024, i119.VALIDATOR_FACTORY, function (p14_0, p15_0, p16_0, p17_0, p18_0, p20_0, p21_0, p22_0, p23_0, p23_1, p24_0, p24_1, p25_0, p26_0, p27_0, p28_0) { return [{ name: \"required\", fn: i120.RequiredValidator.create }, { name: \"minLength\", fn: i120.MinLengthValidator.create }, { name: \"maxLength\", fn: i120.MaxLengthValidator.create }, { name: \"zipCode\", fn: i120.makeZipCodeValidator }, { name: \"phone\", fn: i120.makePhoneValidator }, { name: \"email\", fn: i120.makeEmailValidator }, { name: \"currency\", fn: i120.CurrencyValidator.create }, { name: \"social\", fn: i120.makeSocialSecurityNumberValidator }, { name: \"fein\", fn: i120.makeFeinValidator }, { name: \"compare\", fn: i120.CompareValidator.create }, { name: \"range\", fn: i120.RangeValidator.create }, { name: \"numeric\", fn: i120.makeNumericValidator }, { name: \"invalidValues\", fn: i120.InvalidValuesValidator.create }, { name: \"expression\", fn: i120.ExpressionValidator.create }, i120.DateValidator.factory(p14_0), i121.MustHaveEmployeesValidator.factory(p15_0), i122.FederalTaxesValidator.factory(p16_0), i123.StateTaxesValidator.factory(p17_0), i124.EmployeeTaxesValidator.factory(p18_0), { name: \"usernameInvalidCharacters\", fn: i125.makeUsernameInvalidCharacterValidator }, i125.UniqueUsernameValidator.factory(p20_0), i126.PasswordPolicyValidator.factory(p21_0), i127.HouseholdFilerMustExistValidator.factory(p22_0), i128.EarningsNameValidator.factory(p23_0, p23_1), i128.EarningsDescriptionValidator.factory(p24_0, p24_1), i129.CheckDateCriteriaValidator.factory(p25_0), i130.AddressCriteriaValidator.factory(p26_0), i131.DocumentSigningCompleteValidator.factory(p27_0), i132.MustNotBeExemptValidator.factory(p28_0), { name: \"dynamicRange\", fn: i133.DynamicRangeValidator.create }, { name: \"einValidator\", fn: i134.EinMaskValidator.create }, { name: \"addressMustBeVerified\", fn: i135.VerifiedAddressesValidator.create }]; }, [i21.NgbCalendar, i136.EntitySelectors, i115.TaxCollectorService, i115.TaxCollectorService, i115.TaxCollectorService, i27.HttpClient, i27.HttpClient, i136.EntitySelectors, i136.EntitySelectors, i137.EarningService, i136.EntitySelectors, i137.EarningService, i138.HolidaysService, i136.EntitySelectors, i136.EntitySelectors, i136.EntitySelectors]), i0.ɵmpd(256, i43.TOAST_CONFIG, { config: {}, defaults: i43.DefaultGlobalConfig }, []), i0.ɵmpd(1024, i119.VALIDATION_ENTITY_METADATA, function () { return [[{ Address: { validators: [{ name: \"addressMustBeVerified\", async: false, condition: \"isClient\" }], properties: { street1: { displayName: \"Street 1\", required: true, maxLength: 30, validators: [{ name: \"invalidValues\", context: { values: [\"/[^a-zA-Z0-9#%\\\\/\\\\s\\\\-&\\\\.]/\"] } }] }, street2: { displayName: \"Street 2\", maxLength: 30, validators: [{ name: \"invalidValues\", context: { values: [\"/[^a-zA-Z0-9#%\\\\/\\\\s\\\\-&\\\\.]/\"] } }] }, city: { displayName: \"City\", required: true, maxLength: 28, validators: [{ name: \"invalidValues\", context: { values: [\"/[^a-zA-Z\\\\s\\\\-&]/\"] } }] }, state: { displayName: \"State\", required: true }, zip: { displayName: \"Zip\", required: true, validators: [\"zipCode\"] } } } }, { Company: { validators: [{ group: \"stateTax\", validators: [{ name: \"stateTaxesValidator\", async: true, condition: \"isClient\" }] }, { group: \"fedTax\", validators: [{ name: \"householdFilerMustExist\", async: true, condition: \"model.isHousehold\" }, { name: \"federalTaxesValidator\", async: true, condition: \"isClient\" }, { name: \"expression\", context: { expression: \"model.legalNameVerified || (model.legalNameVerificationSkipReason === \\\"ServiceUnavailable\\\")\", messageTemplate: \"Federal Tax ID must be verified\" } }] }, { group: \"transition-migrating\", validators: [{ name: \"mustHaveEmployees\", async: true, context: { messageTemplate: \"No employees have been entered for the company\" } }, { name: \"expression\", context: { expression: \"!model.hasPriorPayroll\", messageTemplate: \"Company has prior payroll\" } }, { name: \"expression\", context: { expression: \"!model.needDeductionSetup\", messageTemplate: \"Some employees have payroll deductions such as medical insurance, retirement plans, or garnishments\" } }, { name: \"addressCriteria\", async: true, context: { criteria: \"!(['AL', 'AR', 'DE', 'GA', 'NV', 'NC', 'OK', 'UT', 'VT'].some(function(state) { return context.value.state === state }))\", messageTemplate: \"Wet signature is required\" } }, { name: \"addressCriteria\", async: true, context: { criteria: \"context.value.state !== 'PA'\", messageTemplate: \"Company is subject to PA taxes\" } }, { name: \"addressCriteria\", async: true, context: { criteria: \"context.value.state !== 'WA'\", messageTemplate: \"Company is subject to WA L&I\" } }, { name: \"expression\", context: { expression: \"model.feinStatus === 'verified'\", messageTemplate: \"Company failed FEIN validation\" } }, { name: \"expression\", context: { expression: \"model.bankName\", messageTemplate: \"Company bank routing number has no matching bank\" } }, { name: \"documentSigningComplete\", async: true }, { name: \"mustNotBeExempt\", async: true }] }], properties: { payrollFrequency: { displayName: \"Payroll Frequency\", required: true }, periodStartDate: { displayName: \"Period Start Date\", validators: [{ name: \"required\", context: { messageTemplate: \"Period Start Date is required\" } }] }, periodEndDate: { displayName: \"Period End Date\", validators: [{ name: \"required\", context: { messageTemplate: \"Period End Date is required\" } }, { name: \"expression\", condition: \"model.periodStartDate && model.periodEndDate\\n                  && model.payrollFrequency === 'Semi-Monthly'\", context: { expression: \"model.periodStartDate < model.periodEndDate\", messageTemplate: \"Period start date must be before the Period end date\" } }, { name: \"expression\", context: { expression: \"Date.parse(model.periodEndDate) < (Date.now() + 31622400000) && Date.parse(model.periodEndDate) > (Date.now() - 31622400000)\", messageTemplate: \"Period End Date must be within one year from today\" } }] }, firstCheckDate: { displayName: \"Check Date\", validators: [\"date\", { name: \"expression\", context: { expression: \"Date.parse(model.firstCheckDate) < (Date.now() + 31622400000)\", messageTemplate: \"Check Date must be in the next 365 days\" } }, { name: \"required\", context: { messageTemplate: \"Check Date is required\" } }, { name: \"checkDateCriteria\", condition: \"isClient && model.firstCheckDate\", async: true, context: { messageTemplate: \"Check Date needs to be at least two business days from todays date\" } }] }, secondPeriodStartDate: { displayName: \"Second Period Start Date\", validators: [\"date\", { name: \"required\", condition: \"model.payrollFrequency === 'Semi-Monthly'\", context: { messageTemplate: \"Second Period Start Date is required\" } }] }, secondPeriodEndDate: { displayName: \"Second Period End Date\", validators: [\"date\", { name: \"required\", condition: \"model.payrollFrequency === 'Semi-Monthly'\", context: { messageTemplate: \"Second Period End Date is required\" } }, { name: \"expression\", condition: \"model.periodEndDate && model.secondPeriodEndDate\\n                  && model.payrollFrequency === 'Semi-Monthly'\", context: { expression: \"model.periodEndDate < model.secondPeriodEndDate\", messageTemplate: \"Second Period End date must be after the First Period End date\" } }, { name: \"expression\", condition: \"model.payrollFrequency === 'Semi-Monthly'\", context: { expression: \"Date.parse(model.secondPeriodEndDate) < (Date.now() + 31622400000) && Date.parse(model.secondPeriodEndDate) > (Date.now() - 31622400000)\", messageTemplate: \"Second Period End Date must be within one year from today\" } }, { name: \"expression\", condition: \"model.payrollFrequency === 'Semi-Monthly'\\n                && model.periodEndDate && model.secondPeriodEndDate\", context: { expression: \"(Date.parse(model.secondPeriodEndDate) - Date.parse(model.periodEndDate)) <= (86400000 * 27)\", messageTemplate: \"First Period end date and second period end date should be no more than 27 days apart\" } }] }, secondCheckDate: { displayName: \"Second Check Date\", validators: [\"date\", { name: \"required\", condition: \"model.payrollFrequency === 'Semi-Monthly'\", context: { messageTemplate: \"Second Check Date is required\" } }, { name: \"expression\", condition: \"model.payrollFrequency === 'Semi-Monthly'\", context: { expression: \"Date.parse(model.secondCheckDate) < (Date.now() + 31622400000)\", messageTemplate: \"Second Check Date must be in the next 365 days\" } }, { name: \"expression\", condition: \"model.payrollFrequency === 'Semi-Monthly'\\n                && model.firstCheckDate && model.secondCheckDate\", context: { expression: \"model.secondCheckDate > model.firstCheckDate\", messageTemplate: \"Second Check date should be after the First Check date\" } }, { name: \"expression\", condition: \"model.payrollFrequency === 'Semi-Monthly'\\n                && model.firstCheckDate && model.secondCheckDate\", context: { expression: \"(Date.parse(model.secondCheckDate) - Date.parse(model.firstCheckDate)) <= (86400000 * 27)\", messageTemplate: \"First Check date and Second Check date should be no more than 27 days apart\" } }, { name: \"checkDateCriteria\", condition: \"isClient\\n                          && model.payrollFrequency === 'Semi-Monthly'\\n                          && model.secondCheckDate\", async: true, context: { messageTemplate: \"Second Check Date needs to be at least two business days from todays date\" } }] }, legalName: { displayName: \"Legal Name\", required: true, validators: [\"required\", { name: \"maxLength\", context: { maxLength: 80 } }, { name: \"invalidValues\", context: { values: [\"/[^- a-zA-Z0-9&]/\"], messageTemplate: \"Only letters, numbers, hyphen, and ampersand are allowed.\" } }] }, name: { displayName: \"Doing Business As (DBA)\", maxLength: 80 }, companyType: { displayName: \"Company Type\", required: true }, fein: { displayName: \"Federal Tax ID Number\", validators: [{ group: \"fedTax\", validators: [\"required\", \"fein\", { name: \"maxLength\", context: { maxLength: 10 } }, { name: \"minLength\", context: { minLength: 10 } }, { name: \"invalidValues\", context: { values: [\"36-4350777\", \"/^00-/\", \"/^07-/\", \"/^08-/\", \"/^09-/\", \"/^17-/\", \"/^18-/\", \"/^19-/\", \"/^28-/\", \"/^29-/\", \"/^49-/\", \"/^78-/\", \"/^79-/\", \"/^89-/\", \"/^96-/\", \"/^97-/\"], messageTemplate: \"%displayName% is not a valid Federal Employer Identification Number\" } }] }] }, bankAccountRn: { displayName: \"Routing Number\", validators: [{ group: \"bank\", validators: [\"required\", { name: \"minLength\", context: { minLength: 9 } }, { name: \"maxLength\", context: { maxLength: 9 } }, { name: \"numeric\", context: { allowLeadingZeros: true } }, { name: \"invalidValues\", context: { values: [\"999999999\"] } }, { name: \"expression\", context: { expression: \"model.bankName\", messageTemplate: \"Could not find bank for Routing Number\" } }] }] }, bankAccountNumber: { displayName: \"Account Number\", validators: [{ group: \"bank\", validators: [\"required\", { name: \"maxLength\", context: { maxLength: 17 } }, { name: \"numeric\", context: { allowLeadingZeros: true } }] }] }, doneAddingEmployees: { displayName: \"\\\"Do you want to add employees at this time?\\\"\", validators: [{ group: \"employeeSetup\", validators: [{ name: \"mustHaveEmployees\", async: true, condition: \"!model.doneAddingEmployees\" }] }] }, hasPriorPayroll: { displayName: \"\\\"Have you paid any employees this year?\\\"\", validators: [{ group: \"employeeSetup\", validators: [\"required\"] }] }, needDeductionSetup: { displayName: \"\\\"Do some employees have payroll deductions?\\\"\", validators: [{ group: \"employeeSetup\", validators: [\"required\"] }] } } }, CompanyBankInfoVm: { properties: { bankAccountRn: { displayName: \"Routing Number\", validators: [\"required\", { name: \"minLength\", context: { minLength: 9 } }, { name: \"maxLength\", context: { maxLength: 9 } }, { name: \"numeric\", context: { allowLeadingZeros: true } }, { name: \"invalidValues\", context: { values: [\"999999999\"] } }, { name: \"expression\", context: { expression: \"model.bankName\", messageTemplate: \"Could not find bank for Routing Number\" } }] }, bankAccountNumber: { displayName: \"Account Number\", validators: [\"required\", { name: \"maxLength\", context: { maxLength: 17 } }, { name: \"numeric\", context: { allowLeadingZeros: true } }] }, bankAccountNumberConfirm: { displayName: \"Re-enter Account Number\", validators: [\"required\", { name: \"compare\", context: { other: \"bankAccountNumber\", op: \"==\", messageTemplate: \"%displayName% must match Account Number\" } }] } } }, HouseholdFilers: { condition: \"findEntity(model.companyId, 'Company').isHousehold\", properties: { filingStatus: { displayName: \"How do you file your taxes?\", validators: [{ group: \"fedTax\", validators: [\"required\"] }] }, primaryFirstName: { displayName: \"Primary Filer First Name\", validators: [{ group: \"fedTax\", validators: [\"required\"] }] }, primaryLastName: { displayName: \"Primary Filer Last Name\", validators: [{ group: \"fedTax\", validators: [\"required\"] }] }, primarySsn: { displayName: \"Primary Filer Social Security Number\", required: true, validators: [{ group: \"fedTax\", validators: [\"required\", \"social\", { name: \"invalidValues\", context: { values: [\"/123-?45-?6789/\", \"/111-?11-?1111/\", \"/222-?22-?2222/\", \"/333-?33-?3333/\", \"/444-?44-?4444/\", \"/555-?55-?5555/\", \"/666-?66-?6666/\", \"/777-?77-?7777/\", \"/888-?88-?8888/\", \"/999-?99-?9999/\", \"/^000/\", \"/^666/\", \"/^9/\"] } }] }] }, spouseFirstName: { displayName: \"Spouse First Name\", validators: [{ group: \"fedTax\", validators: [{ name: \"required\", condition: \"model.filingStatus === 'joint'\" }] }] }, spouseLastName: { displayName: \"Spouse Last Name\", validators: [{ group: \"fedTax\", validators: [{ name: \"required\", condition: \"model.filingStatus === 'joint'\" }] }] }, spouseSsn: { displayName: \"Spouse Social Security Number\", validators: [{ group: \"fedTax\", validators: [{ name: \"required\", condition: \"model.filingStatus === 'joint'\" }, { name: \"social\", condition: \"model.filingStatus === 'joint'\" }, { name: \"invalidValues\", condition: \"model.filingStatus === 'joint'\", context: { values: [\"/123-?45-?6789/\", \"/111-?11-?1111/\", \"/222-?22-?2222/\", \"/333-?33-?3333/\", \"/444-?44-?4444/\", \"/555-?55-?5555/\", \"/666-?66-?6666/\", \"/777-?77-?7777/\", \"/888-?88-?8888/\", \"/999-?99-?9999/\", \"/^000/\", \"/^666/\", \"/^9/\"] } }] }] } } }, HouseholdFedTaxViewModel: { extends: \"HouseholdFilers\" }, DateRangePayPeriodvm: { properties: { fromDate: { displayName: \"Period Start Date\", required: true, validators: [\"date\"] }, toDate: { displayName: \"Period End Date\", required: true, validators: [\"date\", { name: \"expression\", condition: \"model.toDate && model.toDate.year\", context: { expression: \"new Date(model.toDate.year, model.toDate.month - 1, model.toDate.day) < (Date.now() + 31622400000)\\n               && new Date(model.toDate.year, model.toDate.month - 1, model.toDate.day) > (Date.now() - 31622400000)\", messageTemplate: \"Period End Date must be within one year from today\" } }, { name: \"expression\", condition: \"model._fromDate && model._fromDate.year && model.toDate && model.toDate.year\", context: { expression: \"new Date(model.toDate.year, model.toDate.month - 1, model.toDate.day)\\n              > new Date(model._fromDate.year, model._fromDate.month - 1, model._fromDate.day)\", messageTemplate: \"Period start date must be before the Period end date\" } }] }, checkDate: { displayName: \"Check Date\", required: true, validators: [\"date\", { name: \"expression\", condition: \"model.checkDate && model.checkDate.year\", context: { expression: \"new Date(model.checkDate.year, model.checkDate.month - 1, model.checkDate.day) < (Date.now() + 31622400000)\", messageTemplate: \"Check Date must be in the next 365 days\" } }, { name: \"checkDateCriteria\", async: true, context: { messageTemplate: \"Check Date needs to be at least two business days from todays date\" } }] }, secondToDate: { displayName: \"Second Period End Date\", required: true, validators: [\"date\", { name: \"expression\", condition: \"model.secondToDate && model.secondToDate.year\", context: { expression: \"new Date(model.secondToDate.year, model.secondToDate.month - 1, model.secondToDate.day)\\n              < (Date.now() + 31622400000) && new Date(model.secondToDate.year, model.secondToDate.month - 1, model.secondToDate.day)\\n              > (Date.now() - 31622400000)\", messageTemplate: \"Second Period End Date must be within one year from today\" } }, { name: \"expression\", condition: \"model._toDate && model._toDate.year && model.secondToDate && model.secondToDate.year\", context: { expression: \"new Date(model.secondToDate.year, model.secondToDate.month - 1, model.secondToDate.day)\\n              > new Date(model._toDate.year, model._toDate.month - 1, model._toDate.day)\", messageTemplate: \"Second Period End date must be after the First Period End date\" } }, { name: \"expression\", condition: \"model._toDate && model._toDate.year && model.secondToDate && model.secondToDate.year\", context: { expression: \"(new Date(model.secondToDate.year, model.secondToDate.month - 1, model.secondToDate.day)\\n               - new Date(model._toDate.year, model._toDate.month - 1, model._toDate.day)) <= (86400000 * 27)\", messageTemplate: \"First Period end date and second period end date should be no more than 27 days apart\" } }] }, secondCheckDate: { displayName: \"Second Check Date\", required: true, validators: [\"date\", { name: \"expression\", condition: \"model.secondCheckDate && model.secondCheckDate.year\", context: { expression: \"new Date(model.secondCheckDate.year, model.secondCheckDate.month - 1, model.secondCheckDate.day)\\n               < (Date.now() + 31622400000)\", messageTemplate: \"Second Check Date must be in the next 365 days\" } }, { name: \"expression\", condition: \"model._checkDate && model._checkDate.year && model.secondCheckDate && model.secondCheckDate.year\", context: { expression: \"new Date(model.secondCheckDate.year, model.secondCheckDate.month - 1, model.secondCheckDate.day)\\n               > new Date(model._checkDate.year, model._checkDate.month - 1, model._checkDate.day)\", messageTemplate: \"Second Check date should be after the First Check date\" } }, { name: \"expression\", condition: \"model._checkDate && model._checkDate.year && model.secondCheckDate && model.secondCheckDate.year\", context: { expression: \"(new Date(model.secondCheckDate.year, model.secondCheckDate.month - 1, model.secondCheckDate.day)\\n              - new Date(model._checkDate.year, model._checkDate.month - 1, model._checkDate.day)) <= (86400000 * 27)\", messageTemplate: \"First Check date and Second Check date should be no more than 27 days apart\" } }, { name: \"checkDateCriteria\", async: true, context: { messageTemplate: \"Second Check Date needs to be at least two business days from todays date\" } }] } } }, EarningsGeneralEditorModel: { extends: \"CompanyEarning\" }, CompanyEarning: { properties: { name: { displayName: \"Earning Abbreviation\", validators: [{ group: \"employeeSetup\", validators: [\"required\", { name: \"maxLength\", context: { maxLength: 7, messageTemplate: \"%displayName% can be up to %maxLength% characters.\" } }, { name: \"invalidValues\", context: { values: [\"/[^- a-zA-Z0-9$&()'/@+#%]/\"], messageTemplate: \"Only alphanumeric,&,-,(),',$,/,@,+,#,% are allowed for %displayName%.\" } }, { name: \"earningsNameValidator\", async: true, context: { messageTemplate: \"%model.name% is already in use. Please update.\" } }] }] }, description: { displayName: \"Earning Name\", validators: [{ group: \"employeeSetup\", validators: [\"required\", { name: \"maxLength\", context: { maxLength: 25, messageTemplate: \"%displayName% can be up to %maxLength% characters.\" } }, { name: \"invalidValues\", context: { values: [\"/[^- a-zA-Z0-9$&()'/@+#%]/\"], messageTemplate: \"Only alphanumeric,&,-,(),',$,/,@,+,#,% are allowed for %displayName%.\" } }, { name: \"earningsDescriptionValidator\", async: true, context: { messageTemplate: \"%model.description% is already in use. Please update.\" } }] }] } } } }, { Employee: { validators: [{ name: \"employeeTaxesValidator\", async: true, condition: \"isClient\" }], properties: { firstName: { displayName: \"First Name\", required: true, maxLength: 50 }, lastName: { displayName: \"Last Name\", required: true, maxLength: 50 }, birthDate: { required: true, displayName: \"Birthdate\", validators: [\"date\", { name: \"expression\", context: { expression: \"Date.parse(model.birthDate) < ( Date.now() - 315532800000)\", messageTemplate: \"Must be at least 10 years old\" } }, { name: \"expression\", context: { expression: \"Date.parse(model.birthDate) > (Date.now() - 3786912000000)\", messageTemplate: \"Must be under 120 years old\" } }, { name: \"expression\", context: { expression: \"Date.parse(model.birthDate) < Date.now()\", messageTemplate: \"Birthdate cannot be in the future\" } }] }, hireDate: { displayName: \"Hire Date\", required: true, validators: [\"date\", { name: \"expression\", context: { expression: \"Date.parse(model.birthDate) < Date.parse(model.hireDate)\", messageTemplate: \"Hire date cannot be before birthdate\" } }, { name: \"expression\", context: { expression: \"Date.parse(model.hireDate) < (Date.now() + 63072000000)\", messageTemplate: \"Hire date is too far in the future\" } }] }, ssn: { displayName: \"Employee Social Security Number\", required: true, validators: [\"social\", { name: \"invalidValues\", context: { values: [\"/123-?45-?6789/\", \"/111-?11-?1111/\", \"/222-?22-?2222/\", \"/333-?33-?3333/\", \"/444-?44-?4444/\", \"/555-?55-?5555/\", \"/666-?66-?6666/\", \"/777-?77-?7777/\", \"/888-?88-?8888/\", \"/999-?99-?9999/\", \"/^000/\", \"/^666/\", \"/^9/\"] } }] }, email: { displayName: \"Email Address\", validators: [{ name: \"required\", condition: \"model.canContact\" }, { name: \"email\", condition: \"model.canContact\" }] }, phone: { displayName: \"Mobile Phone Number\", validators: [{ name: \"required\", condition: \"model.canContact\" }, { name: \"phone\", condition: \"model.canContact\" }] }, payType: { displayName: \"Pay Rate Type\", validators: [{ name: \"required\" }] }, payRate: { displayName: \"Pay Rate\", validators: [\"currency\", { name: \"required\", condition: \"model.payType\" }, { name: \"range\", context: { minValue: 0, maxValue: 50000000 } }] }, homeAddressId: { displayName: \"Home address\", validators: [{ name: \"required\" }] }, workAddressId: { displayName: \"Work address\", validators: [{ name: \"required\" }] } } }, EmployeePaymentMethod: { properties: { defaultAccountType: { displayName: \"Payment Account Type\", required: true }, defaultAccountNumber: { displayName: \"Account Number\", validators: [{ name: \"required\", condition: \"model.defaultAccountType && model.defaultAccountType !== \\\"Printed Check\\\"\" }, { name: \"maxLength\", condition: \"model.defaultAccountType && model.defaultAccountType !== \\\"Printed Check\\\"\", context: { maxLength: 17 } }, { name: \"numeric\", condition: \"model.defaultAccountType && model.defaultAccountType !== \\\"Printed Check\\\"\", context: { allowLeadingZeros: true } }] }, defaultAccountRn: { displayName: \"Routing Number\", validators: [{ name: \"required\", condition: \"model.defaultAccountType && model.defaultAccountType !== \\\"Printed Check\\\"\" }, { name: \"minLength\", condition: \"model.defaultAccountType && model.defaultAccountType !== \\\"Printed Check\\\"\", context: { minLength: 9 } }, { name: \"maxLength\", condition: \"model.defaultAccountType && model.defaultAccountType !== \\\"Printed Check\\\"\", context: { maxLength: 9 } }, { name: \"numeric\", condition: \"model.defaultAccountType && model.defaultAccountType !== \\\"Printed Check\\\"\", context: { allowLeadingZeros: true } }, { name: \"invalidValues\", condition: \"model.defaultAccountType && model.defaultAccountType !== \\\"Printed Check\\\"\", context: { values: [\"999999999\"] } }, { name: \"expression\", condition: \"model.defaultAccountType && model.defaultAccountType !== \\\"Printed Check\\\"\", context: { expression: \"model.defaultAccountBankName\", messageTemplate: \"Could not find bank for Routing Number\" } }] }, split1AccountNumber: { displayName: \"Account Number\", validators: [{ name: \"required\", condition: \"model.split1AccountType && model.split1AccountType !== \\\"Printed Check\\\"\" }, { name: \"maxLength\", condition: \"model.split1AccountType && model.split1AccountType !== \\\"Printed Check\\\"\", context: { maxLength: 17 } }, { name: \"numeric\", condition: \"model.split1AccountType && model.split1AccountType !== \\\"Printed Check\\\"\", context: { allowLeadingZeros: true } }] }, split1AccountRn: { displayName: \"Routing Number\", validators: [{ name: \"required\", condition: \"model.split1AccountType && model.split1AccountType !== \\\"Printed Check\\\"\" }, { name: \"minLength\", condition: \"model.split1AccountType && model.split1AccountType !== \\\"Printed Check\\\"\", context: { minLength: 9 } }, { name: \"maxLength\", condition: \"model.split1AccountType && model.split1AccountType !== \\\"Printed Check\\\"\", context: { maxLength: 9 } }, { name: \"numeric\", condition: \"model.split1AccountType && model.split1AccountType !== \\\"Printed Check\\\"\", context: { allowLeadingZeros: true } }, { name: \"invalidValues\", condition: \"model.split1AccountType && model.split1AccountType !== \\\"Printed Check\\\"\", context: { values: [\"999999999\"] } }, { name: \"expression\", condition: \"model.split1AccountType && model.split1AccountType !== \\\"Printed Check\\\"\", context: { expression: \"model.split1AccountBankName\", messageTemplate: \"Could not find bank for Routing Number\" } }] }, split2AccountNumber: { displayName: \"Account Number\", validators: [{ name: \"required\", condition: \"model.split2AccountType && model.split2AccountType !== \\\"Printed Check\\\"\" }, { name: \"maxLength\", condition: \"model.split2AccountType && model.split2AccountType !== \\\"Printed Check\\\"\", context: { maxLength: 17 } }, { name: \"numeric\", condition: \"model.split2AccountType && model.split2AccountType !== \\\"Printed Check\\\"\", context: { allowLeadingZeros: true } }] }, split2AccountRn: { displayName: \"Routing Number\", validators: [{ name: \"required\", condition: \"model.split2AccountType && model.split2AccountType !== \\\"Printed Check\\\"\" }, { name: \"minLength\", condition: \"model.split2AccountType && model.split2AccountType !== \\\"Printed Check\\\"\", context: { minLength: 9 } }, { name: \"maxLength\", condition: \"model.split2AccountType && model.split2AccountType !== \\\"Printed Check\\\"\", context: { maxLength: 9 } }, { name: \"numeric\", condition: \"model.split2AccountType && model.split2AccountType !== \\\"Printed Check\\\"\", context: { allowLeadingZeros: true } }, { name: \"invalidValues\", condition: \"model.split2AccountType && model.split2AccountType !== \\\"Printed Check\\\"\", context: { values: [\"999999999\"] } }, { name: \"expression\", condition: \"model.split2AccountType && model.split2AccountType !== \\\"Printed Check\\\"\", context: { expression: \"model.split2AccountBankName\", messageTemplate: \"Could not find bank for Routing Number\" } }] } } }, EmployeePaymentAccountVm: { properties: { accountName: { displayName: \"Pay to\", validators: [{ name: \"required\", condition: \"model.accountType === \\\"Printed Check\\\"\" }] }, accountNumber: { displayName: \"Account Number\", validators: [{ name: \"required\", condition: \"model.accountType && model.accountType !== \\\"Printed Check\\\"\" }, { name: \"maxLength\", condition: \"model.accountType && model.accountType !== \\\"Printed Check\\\"\", context: { maxLength: 17 } }, { name: \"numeric\", condition: \"model.accountType && model.accountType !== \\\"Printed Check\\\"\", context: { allowLeadingZeros: true } }] }, accountRn: { displayName: \"Routing Number\", validators: [{ name: \"required\", condition: \"model.accountType && model.accountType !== \\\"Printed Check\\\"\" }, { name: \"minLength\", condition: \"model.accountType && model.accountType !== \\\"Printed Check\\\"\", context: { minLength: 9 } }, { name: \"maxLength\", condition: \"model.accountType && model.accountType !== \\\"Printed Check\\\"\", context: { maxLength: 9 } }, { name: \"numeric\", condition: \"model.accountType && model.accountType !== \\\"Printed Check\\\"\", context: { allowLeadingZeros: true } }, { name: \"invalidValues\", condition: \"model.accountType && model.accountType !== \\\"Printed Check\\\"\", context: { values: [\"999999999\"] } }, { name: \"expression\", condition: \"model.accountType && model.accountType !== \\\"Printed Check\\\" && model.accountNumber\", context: { expression: \"model.accountBankName\", messageTemplate: \"Could not find bank for Routing Number\" } }] } } } }, { SignUpVm: { properties: { isHousehold: { displayName: \"Is Household?\", required: true }, firstName: { displayName: \"First Name\", required: true, maxLength: 20 }, lastName: { displayName: \"Last Name\", required: true, maxLength: 20 }, email: { displayName: \"Email Address\", required: true, maxLength: 255, validators: [\"email\"] }, phone: { displayName: \"Phone Number\", required: true, validators: [\"phone\"] }, username: { displayName: \"Username\", required: true, minLength: 8, maxLength: 18, validators: [\"usernameInvalidCharacters\", { name: \"uniqueUsername\", async: true }] }, password: { displayName: \"Password\", required: true, minLength: 10, maxLength: 40, validators: [{ name: \"passwordPolicy\", async: true }] } } } }, { User: { properties: { firstName: { displayName: \"First Name\", required: true, maxLength: 20 }, lastName: { displayName: \"Last Name\", required: true, maxLength: 20 }, email: { displayName: \"Email Address\", required: true, maxLength: 255, validators: [\"email\"] }, phone: { displayName: \"Phone Number\", required: true, validators: [\"phone\"] } } } }, { DocumentsVm: { properties: { signerFirstName: { displayName: \"Signer First Name\", validators: [{ name: \"required\", condition: \"model.isSigner === \\\"no\\\" || model.isSigner === \\\"spouse\\\"\" }] }, signerLastName: { displayName: \"Signer Last Name\", validators: [{ name: \"required\", condition: \"model.isSigner === \\\"no\\\" || model.isSigner === \\\"spouse\\\"\" }] }, signerTitle: { displayName: \"Signer Title\", validators: [{ name: \"required\", condition: \"model.isSigner === \\\"no\\\" || model.isSigner === \\\"yes\\\"\" }] }, signerEmail: { displayName: \"Signer Email Address\", required: true, validators: [{ name: \"required\", condition: \"model.isSigner === \\\"no\\\" || model.isSigner === \\\"spouse\\\"\" }, { name: \"email\", condition: \"model.isSigner === \\\"no\\\" || model.isSigner === \\\"spouse\\\"\" }] }, spouseFirstName: { displayName: \"Spouse First Name\", validators: [{ name: \"required\", condition: \"model.isSigner === \\\"no\\\" || model.isSigner === \\\"primary\\\"\" }] }, spouseLastName: { displayName: \"Spouse Last Name\", validators: [{ name: \"required\", condition: \"model.isSigner === \\\"no\\\" || model.isSigner === \\\"primary\\\"\" }] }, spouseEmail: { displayName: \"Spouse Email Address\", required: true, validators: [{ name: \"required\", condition: \"model.isSigner === \\\"no\\\" || model.isSigner === \\\"primary\\\"\" }, { name: \"email\", condition: \"model.isSigner === \\\"no\\\" || model.isSigner === \\\"primary\\\"\" }] } } } }, { \"TaxBehaviorWrapper<CompanyTax>\": { properties: { ein: { displayName: \"Employer Identification Number\", validators: [{ name: \"einValidator\", condition: \"(model.appliedForEin == null || model.appliedForEin === false) && model.behavior.hasEin === true\", context: { masksProvider: \"model.behavior.taxEinFormats\" } }] }, rate: { displayName: \"Tax Rate\", validators: [{ name: \"range\", condition: \"model.behavior.hasRate !== true\", context: { minValue: 0.001, maxValue: 100 } }, { name: \"dynamicRange\", condition: \"model.behavior.hasRate === true\", context: { allowZeroProvider: \"model.behavior.rate.allowSubjectRateZero\", minProvider: \"model.behavior.rate.minAllowedRate\", maxProvider: \"model.behavior.rate.maxAllowedRate\" } }] } } }, \"TaxBehaviorWrapper<EmployeeTax>\": { properties: { exemptReasonCode: { displayName: \"Exemption Reason\", validators: [{ name: \"required\", condition: \"model.behavior.hasExemptionReason === true\" }] }, filingStatus: { displayName: \"Filing Status\", validators: [{ name: \"required\", condition: \"model.behavior.hasFilingStatus === true\" }] }, withholdingAllowance: { displayName: \"Withholding Allowances\", validators: [{ name: \"range\", condition: \"model.behavior.hasWithholding === true\", context: { minValue: 0, maxValue: 25 } }] }, extraWithholding: { displayName: \"Extra Withholding Allowances\", validators: [\"currency\", { name: \"required\", condition: \"model.behavior.hasWithholding === true\" }, { name: \"range\", condition: \"model.behavior.hasWithholding === true\", context: { minValue: 0, maxValue: 999999.99 } }] } } } }]]; }, [])]); });\nexport { AppDevModuleNgFactory as AppDevModuleNgFactory };\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from '@app/app.module';\r\nimport { AppDevModule } from '@app/app-dev.module';\r\nimport { environment } from '@environment';\r\n\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\nplatformBrowserDynamic().bootstrapModule(AppDevModule);\r\n// platformBrowserDynamic().bootstrapModule(AppModule);\r\n","import { Injectable } from '@angular/core';\r\nimport { UserManagerSettings } from 'oidc-client';\r\nimport { environment } from '@environment';\r\n\r\nconst client_url = `${window.location.protocol}//${window.location.host}/`;\r\n\r\nexport const oidcManagerConfig: UserManagerSettings = {\r\n  authority: environment.oidcAuthRealm,\r\n  client_id: environment.oidcClientId,\r\n  redirect_uri: `${client_url}${environment.oidcRedirectUri}`,\r\n  response_type: 'id_token token',\r\n  scope: environment.oidcScope,\r\n  post_logout_redirect_uri: `${client_url}index.html`\r\n  // Brock says: \"Use the default Session Storage unless you have a great reason to do otherwise\"\r\n  // userStore: new WebStorageStateStore({ store: window.localStorage })\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, of } from 'rxjs';\r\n/**\r\n * Find user's current geo location (Position)\r\n * Noop version and the service's DI token\r\n */\r\n@Injectable() // providedIn not working. Why?\r\nexport class GeolocationService {\r\n  /** The users current geolocation (Position) */\r\n  currentPosition$ = of<Position>(null);\r\n  /** Update the currentPosition */\r\n  update() {}\r\n}\r\n","import {\r\n  ValidationContextBase, ValidationContext, ValidatorFactory, AsyncValidator,\r\n  Validator, ValidatorFunctionContext\r\n} from './validator';\r\nimport { EntityInfo } from '@entity';\r\n\r\nexport interface ValidatorConfig {\r\n  name: string;\r\n  context?: Partial<ValidationContextBase>;\r\n  async?: boolean;\r\n  condition?: string;\r\n}\r\n\r\nexport interface ValidatorGroupConfig {\r\n  group: string;\r\n  validators: ValidatorConfigLike[];\r\n}\r\n\r\nexport type ValidatorConfigLike = string | ValidatorConfig;\r\n\r\nexport type ValidatorOrGroupConfig = ValidatorConfigLike | ValidatorGroupConfig;\r\n\r\nexport interface PropertyValidationConfig {\r\n  readonly displayName?: string;\r\n  readonly required?: boolean;\r\n  readonly minLength?: number;\r\n  readonly maxLength?: number;\r\n  readonly validators?: ValidatorOrGroupConfig[];\r\n}\r\n\r\nexport interface PropertyValidationConfigMap {\r\n  [propertyName: string]: PropertyValidationConfig;\r\n}\r\n\r\nexport interface ModelValidationConfig {\r\n  readonly extends?: string;\r\n  readonly validators?: ValidatorOrGroupConfig[];\r\n  readonly properties?: PropertyValidationConfigMap;\r\n  readonly condition?: string;\r\n}\r\n\r\nexport interface ModelValidationMetadataMap {\r\n  [modelName: string]: ModelValidationConfig;\r\n}\r\n\r\nexport function isValidatorGroupConfig(config: any): config is ValidatorGroupConfig {\r\n  return !!config.group;\r\n}\r\n\r\nexport class ValidatorMetadata {\r\n\r\n  private config: ValidatorConfig;\r\n  private condition: (context: ValidationContext, model: any, isClient: boolean, isServer: boolean) => boolean;\r\n\r\n  constructor(config: ValidatorConfigLike, private validatorFactories: ValidatorFactory[], private groupConfig?: ValidatorGroupConfig) {\r\n    if (typeof (config) === 'string') {\r\n      this.config = { name: config };\r\n    } else {\r\n      this.config = config;\r\n    }\r\n  }\r\n\r\n  get name(): string { return this.config.name; }\r\n\r\n  get context() { return this.config.context; }\r\n\r\n  get async() { return !!this.config.async; }\r\n\r\n  get group() { return this.groupConfig && this.groupConfig.group; }\r\n\r\n  evalCondition(context: ValidationContext): boolean {\r\n    if (!this.config.condition) {\r\n      return true;\r\n    }\r\n\r\n    try {\r\n      /**\r\n       * SECURITY: Safe because text passed to `Function` comes from our server, not the user\r\n       */\r\n      if (!this.condition) {\r\n        const evalFunc = `function(context, model, isClient, isServer){ return ${this.config.condition} }`;\r\n        this.condition = Function(`\"use strict\";return (${evalFunc})`)();\r\n      }\r\n      return this.condition(context, context.model, context.isClient, context.isServer);\r\n    } catch (e) {\r\n      const message = `Condition '${this.config.condition}' failed for validator '${this.name}'` +\r\n        ` and model type '${context.modelType}' with error '${e.message}'`;\r\n      throw new Error(message);\r\n    }\r\n  }\r\n\r\n  getValidator() {\r\n    const factory = this.validatorFactories.find(f => f.name === this.name);\r\n    if (!factory) {\r\n      throw new Error(`ValidatorMetadata: No factory found with name '${this.name}'.`);\r\n    }\r\n\r\n    const validator = factory.fn(this.group, this.context);\r\n    if (this.async && !(validator instanceof AsyncValidator)) {\r\n      throw new Error(`ValidationService: The validator with name '${this.name}' is not an asynchronous validator.`);\r\n    } else if (!this.async && !(validator instanceof Validator)) {\r\n      throw new Error(`ValidationService: The validator with name '${this.name}' is not a synchronous validator.`);\r\n    }\r\n\r\n    return validator;\r\n  }\r\n}\r\n\r\nfunction asValidatorMetadata(validators: ValidatorOrGroupConfig[], validatorFactories: ValidatorFactory[]): ValidatorMetadata[] {\r\n  return (validators || [])\r\n    .map(config => {\r\n      if (isValidatorGroupConfig(config)) {\r\n        return (config.validators || []).map(validatorConfig => new ValidatorMetadata(validatorConfig, validatorFactories, config));\r\n      } else {\r\n        return [new ValidatorMetadata(config, validatorFactories)];\r\n      }\r\n    })\r\n    .reduce((prev, curr) => [...prev, ...curr], []);\r\n}\r\n\r\nexport class PropertyMetadata {\r\n\r\n  private _validators: ValidatorMetadata[];\r\n\r\n  constructor(readonly propertyName: string, private config: PropertyValidationConfig, private validatorFactories: ValidatorFactory[]) { }\r\n\r\n  get displayName() { return this.config.displayName; }\r\n\r\n  get validators() {\r\n    if (this._validators) {\r\n      return this._validators;\r\n    }\r\n\r\n    this._validators = asValidatorMetadata(this.config.validators || [], this.validatorFactories);\r\n    // Add well-known default validators\r\n    if (this.config.required && !this._validators.some(validator => validator.name === 'required' && !validator.group)) {\r\n      this._validators.push(new ValidatorMetadata('required', this.validatorFactories));\r\n    }\r\n    if (this.config.minLength && !this._validators.some(validator => validator.name === 'minLength' && !validator.group)) {\r\n      const config = {\r\n        name: 'minLength',\r\n        context: {\r\n          minLength: this.config.minLength\r\n        }\r\n      };\r\n      this._validators.push(new ValidatorMetadata(config, this.validatorFactories));\r\n    }\r\n    if (this.config.maxLength && !this._validators.some(validator => validator.name === 'maxLength' && !validator.group)) {\r\n      const config = {\r\n        name: 'maxLength',\r\n        context: {\r\n          maxLength: this.config.maxLength\r\n        }\r\n      };\r\n      this._validators.push(new ValidatorMetadata(config, this.validatorFactories));\r\n    }\r\n\r\n    return this._validators;\r\n  }\r\n}\r\n\r\nexport class ModelMetadata {\r\n\r\n  private _validators: ValidatorMetadata[];\r\n  private _properties: PropertyMetadata[];\r\n  private condition: (entityInfos: EntityInfo[], model: any, isClient: boolean, isServer: boolean) => boolean;\r\n\r\n  constructor(private metadata: ValidationMetadata, readonly modelType: string,\r\n    private config: ModelValidationConfig, private validatorFactories: ValidatorFactory[]) { }\r\n\r\n  get validators() {\r\n    if (this._validators) {\r\n      return this._validators;\r\n    }\r\n\r\n    this._validators = [];\r\n    if (this.config.extends) {\r\n      const parent = this.metadata.getModelConfig(this.config.extends);\r\n      if (parent) {\r\n        this._validators = parent.validators;\r\n      }\r\n    }\r\n    this._validators = [...this._validators, ...asValidatorMetadata(this.config.validators || [], this.validatorFactories)];\r\n    return this._validators;\r\n  }\r\n\r\n  get properties() {\r\n    if (this._properties) {\r\n      return this._properties;\r\n    }\r\n\r\n    this._properties = [];\r\n    if (this.config.extends) {\r\n      const parent = this.metadata.getModelConfig(this.config.extends);\r\n      if (parent) {\r\n        this._properties = parent.properties;\r\n      }\r\n    }\r\n    const properties = Object.keys(this.config.properties || {})\r\n      .map(propertyName => new PropertyMetadata(propertyName, this.config.properties[propertyName], this.validatorFactories));\r\n    this._properties = [...this._properties, ...properties];\r\n    return this._properties;\r\n  }\r\n\r\n  getAsyncProperties(): PropertyMetadata[] {\r\n    return this.properties.filter(property => property.validators.some(validator => validator.async));\r\n  }\r\n\r\n  evalCondition(entityInfos: EntityInfo[], model: any): boolean {\r\n    const parent = this.config.extends && this.metadata.getModelConfig(this.config.extends);\r\n    const condition = this.config.condition || parent && parent.config.condition;\r\n\r\n    if (!condition) {\r\n      return true;\r\n    }\r\n\r\n    try {\r\n      /**\r\n       * SECURITY: Safe because text passed to `Function` comes from our server, not the user\r\n       */\r\n      if (!this.condition) {\r\n        const entityHelpers = [\r\n          `function findEntity(id, type) {\r\n            var ei = entityInfos.find(function(entityInfo) {\r\n              return entityInfo.entity.id === id && entityInfo.entityType === type;\r\n            });\r\n            return ei && ei.entity;\r\n          }`\r\n        ].join('\\n\\n');\r\n        const evalFunc = `function(entityInfos, model, isClient, isServer){ return ${condition}; ${entityHelpers} }`;\r\n        this.condition = Function(`\"use strict\";return (${evalFunc})`)();\r\n      }\r\n      return this.condition(entityInfos, model, true, false);\r\n    } catch (e) {\r\n      const message = `Condition '${condition}' failed for model type '${this.modelType}' with error '${e.message}'`;\r\n      throw new Error(message);\r\n    }\r\n  }\r\n}\r\n\r\nexport class ValidationMetadata {\r\n\r\n  private modelMetadata: ModelMetadata[];\r\n\r\n  constructor(private metadata: ModelValidationMetadataMap[], private validatorFactories: ValidatorFactory[]) {\r\n    validatorFactories.forEach((factory, ix) => {\r\n      if (!factory.name) {\r\n        throw new Error(`Validator factory #${ix} lacks a name`);\r\n      }\r\n      if (!factory.fn) {\r\n        throw new Error(`Validator factory #${ix} lacks a validator function`);\r\n      }\r\n    });\r\n  }\r\n\r\n  getModelConfig(modelType: string): ModelMetadata {\r\n    return this.getModelConfigs().find(config => config.modelType === modelType);\r\n  }\r\n\r\n  getModelConfigs(): ModelMetadata[] {\r\n    return this.modelMetadata || (this.modelMetadata = this.getModelConfigsCore());\r\n  }\r\n\r\n  private getModelConfigsCore(): ModelMetadata[] {\r\n    return this.metadata.map(metadata => {\r\n      return Object.keys(metadata)\r\n        .map(modelType => new ModelMetadata(this, modelType, metadata[modelType], this.validatorFactories));\r\n    }).reduce((prev, curr) => [...prev, ...curr], []);\r\n  }\r\n}\r\n","import { AsyncValidator, Validator } from './validator';\nexport function isValidatorGroupConfig(config) {\n    return !!config.group;\n}\nvar ValidatorMetadata = /** @class */ (function () {\n    function ValidatorMetadata(config, validatorFactories, groupConfig) {\n        this.validatorFactories = validatorFactories;\n        this.groupConfig = groupConfig;\n        if (typeof (config) === 'string') {\n            this.config = { name: config };\n        }\n        else {\n            this.config = config;\n        }\n    }\n    Object.defineProperty(ValidatorMetadata.prototype, \"name\", {\n        get: function () { return this.config.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ValidatorMetadata.prototype, \"context\", {\n        get: function () { return this.config.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ValidatorMetadata.prototype, \"async\", {\n        get: function () { return !!this.config.async; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ValidatorMetadata.prototype, \"group\", {\n        get: function () { return this.groupConfig && this.groupConfig.group; },\n        enumerable: true,\n        configurable: true\n    });\n    ValidatorMetadata.prototype.evalCondition = function (context) {\n        if (!this.config.condition) {\n            return true;\n        }\n        try {\n            /**\n             * SECURITY: Safe because text passed to `Function` comes from our server, not the user\n             */\n            if (!this.condition) {\n                var evalFunc = \"function(context, model, isClient, isServer){ return \" + this.config.condition + \" }\";\n                this.condition = Function(\"\\\"use strict\\\";return (\" + evalFunc + \")\")();\n            }\n            return this.condition(context, context.model, context.isClient, context.isServer);\n        }\n        catch (e) {\n            var message = \"Condition '\" + this.config.condition + \"' failed for validator '\" + this.name + \"'\" +\n                (\" and model type '\" + context.modelType + \"' with error '\" + e.message + \"'\");\n            throw new Error(message);\n        }\n    };\n    ValidatorMetadata.prototype.getValidator = function () {\n        var _this = this;\n        var factory = this.validatorFactories.find(function (f) { return f.name === _this.name; });\n        if (!factory) {\n            throw new Error(\"ValidatorMetadata: No factory found with name '\" + this.name + \"'.\");\n        }\n        var validator = factory.fn(this.group, this.context);\n        if (this.async && !(validator instanceof AsyncValidator)) {\n            throw new Error(\"ValidationService: The validator with name '\" + this.name + \"' is not an asynchronous validator.\");\n        }\n        else if (!this.async && !(validator instanceof Validator)) {\n            throw new Error(\"ValidationService: The validator with name '\" + this.name + \"' is not a synchronous validator.\");\n        }\n        return validator;\n    };\n    return ValidatorMetadata;\n}());\nexport { ValidatorMetadata };\nfunction asValidatorMetadata(validators, validatorFactories) {\n    return (validators || [])\n        .map(function (config) {\n        if (isValidatorGroupConfig(config)) {\n            return (config.validators || []).map(function (validatorConfig) { return new ValidatorMetadata(validatorConfig, validatorFactories, config); });\n        }\n        else {\n            return [new ValidatorMetadata(config, validatorFactories)];\n        }\n    })\n        .reduce(function (prev, curr) { return prev.concat(curr); }, []);\n}\nvar PropertyMetadata = /** @class */ (function () {\n    function PropertyMetadata(propertyName, config, validatorFactories) {\n        this.propertyName = propertyName;\n        this.config = config;\n        this.validatorFactories = validatorFactories;\n    }\n    Object.defineProperty(PropertyMetadata.prototype, \"displayName\", {\n        get: function () { return this.config.displayName; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PropertyMetadata.prototype, \"validators\", {\n        get: function () {\n            if (this._validators) {\n                return this._validators;\n            }\n            this._validators = asValidatorMetadata(this.config.validators || [], this.validatorFactories);\n            // Add well-known default validators\n            if (this.config.required && !this._validators.some(function (validator) { return validator.name === 'required' && !validator.group; })) {\n                this._validators.push(new ValidatorMetadata('required', this.validatorFactories));\n            }\n            if (this.config.minLength && !this._validators.some(function (validator) { return validator.name === 'minLength' && !validator.group; })) {\n                var config = {\n                    name: 'minLength',\n                    context: {\n                        minLength: this.config.minLength\n                    }\n                };\n                this._validators.push(new ValidatorMetadata(config, this.validatorFactories));\n            }\n            if (this.config.maxLength && !this._validators.some(function (validator) { return validator.name === 'maxLength' && !validator.group; })) {\n                var config = {\n                    name: 'maxLength',\n                    context: {\n                        maxLength: this.config.maxLength\n                    }\n                };\n                this._validators.push(new ValidatorMetadata(config, this.validatorFactories));\n            }\n            return this._validators;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PropertyMetadata;\n}());\nexport { PropertyMetadata };\nvar ModelMetadata = /** @class */ (function () {\n    function ModelMetadata(metadata, modelType, config, validatorFactories) {\n        this.metadata = metadata;\n        this.modelType = modelType;\n        this.config = config;\n        this.validatorFactories = validatorFactories;\n    }\n    Object.defineProperty(ModelMetadata.prototype, \"validators\", {\n        get: function () {\n            if (this._validators) {\n                return this._validators;\n            }\n            this._validators = [];\n            if (this.config.extends) {\n                var parent_1 = this.metadata.getModelConfig(this.config.extends);\n                if (parent_1) {\n                    this._validators = parent_1.validators;\n                }\n            }\n            this._validators = this._validators.concat(asValidatorMetadata(this.config.validators || [], this.validatorFactories));\n            return this._validators;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ModelMetadata.prototype, \"properties\", {\n        get: function () {\n            var _this = this;\n            if (this._properties) {\n                return this._properties;\n            }\n            this._properties = [];\n            if (this.config.extends) {\n                var parent_2 = this.metadata.getModelConfig(this.config.extends);\n                if (parent_2) {\n                    this._properties = parent_2.properties;\n                }\n            }\n            var properties = Object.keys(this.config.properties || {})\n                .map(function (propertyName) { return new PropertyMetadata(propertyName, _this.config.properties[propertyName], _this.validatorFactories); });\n            this._properties = this._properties.concat(properties);\n            return this._properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ModelMetadata.prototype.getAsyncProperties = function () {\n        return this.properties.filter(function (property) { return property.validators.some(function (validator) { return validator.async; }); });\n    };\n    ModelMetadata.prototype.evalCondition = function (entityInfos, model) {\n        var parent = this.config.extends && this.metadata.getModelConfig(this.config.extends);\n        var condition = this.config.condition || parent && parent.config.condition;\n        if (!condition) {\n            return true;\n        }\n        try {\n            /**\n             * SECURITY: Safe because text passed to `Function` comes from our server, not the user\n             */\n            if (!this.condition) {\n                var entityHelpers = [\n                    \"function findEntity(id, type) {\\n            var ei = entityInfos.find(function(entityInfo) {\\n              return entityInfo.entity.id === id && entityInfo.entityType === type;\\n            });\\n            return ei && ei.entity;\\n          }\"\n                ].join('\\n\\n');\n                var evalFunc = \"function(entityInfos, model, isClient, isServer){ return \" + condition + \"; \" + entityHelpers + \" }\";\n                this.condition = Function(\"\\\"use strict\\\";return (\" + evalFunc + \")\")();\n            }\n            return this.condition(entityInfos, model, true, false);\n        }\n        catch (e) {\n            var message = \"Condition '\" + condition + \"' failed for model type '\" + this.modelType + \"' with error '\" + e.message + \"'\";\n            throw new Error(message);\n        }\n    };\n    return ModelMetadata;\n}());\nexport { ModelMetadata };\nvar ValidationMetadata = /** @class */ (function () {\n    function ValidationMetadata(metadata, validatorFactories) {\n        this.metadata = metadata;\n        this.validatorFactories = validatorFactories;\n        validatorFactories.forEach(function (factory, ix) {\n            if (!factory.name) {\n                throw new Error(\"Validator factory #\" + ix + \" lacks a name\");\n            }\n            if (!factory.fn) {\n                throw new Error(\"Validator factory #\" + ix + \" lacks a validator function\");\n            }\n        });\n    }\n    ValidationMetadata.prototype.getModelConfig = function (modelType) {\n        return this.getModelConfigs().find(function (config) { return config.modelType === modelType; });\n    };\n    ValidationMetadata.prototype.getModelConfigs = function () {\n        return this.modelMetadata || (this.modelMetadata = this.getModelConfigsCore());\n    };\n    ValidationMetadata.prototype.getModelConfigsCore = function () {\n        var _this = this;\n        return this.metadata.map(function (metadata) {\n            return Object.keys(metadata)\n                .map(function (modelType) { return new ModelMetadata(_this, modelType, metadata[modelType], _this.validatorFactories); });\n        }).reduce(function (prev, curr) { return prev.concat(curr); }, []);\n    };\n    return ValidationMetadata;\n}());\nexport { ValidationMetadata };\n"],"sourceRoot":""}