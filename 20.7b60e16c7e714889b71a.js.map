{"version":3,"sources":["webpack:///./src/app/deductions/company/company-deduction-editor.component.html","webpack:///./src/app/deductions/company/company-deduction-editor.component.ts","webpack:///./src/app/deductions/company/company-deduction-editor.service.ts","webpack:///./src/app/deductions/company/company-deduction-remove.component.html","webpack:///./src/app/deductions/company/company-deduction-remove.component.ts","webpack:///./src/app/deductions/company/company-deductions-container.component.html","webpack:///./src/app/deductions/company/company-deductions-container.component.ts","webpack:///./src/app/deductions/company/company-deductions-table.component.html","webpack:///./src/app/deductions/company/company-deductions-table.component.ts","webpack:///./src/app/deductions/company/company-deductions.guard.ts","webpack:///./src/app/deductions/company/company-deductions.module.ts","webpack:///./src/app/deductions/company/company-retirement.component.html","webpack:///./src/app/deductions/company/company-retirement.component.ts","webpack:///./src/app/deductions/company/deductions-catalog.component.html","webpack:///./src/app/deductions/company/deductions-catalog.component.ts","webpack:///./src/app/shared/amount-or-percent-value/amount-or-percent-value.component.html"],"names":[],"mappings":"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","file":"20.7b60e16c7e714889b71a.js","sourcesContent":["<div class=\"deduction-header d-flex justify-content-between align-items-center\">\r\n  <h2>{{ vm.id }}\r\n      {{ vm.isPreTax ? 'Pre-Tax' : ''}}\r\n      {{ vm.isPostTax ? 'Post-Tax' : ''}}\r\n  </h2>\r\n  <a (click)=\"cancel()\"><i title=\"Cancel and close\"\r\n    class=\"material-icons icon btn-circle\">close</i></a>\r\n</div>\r\n\r\n<ng-container *ngIf=\"vm.hasPreOrPostTaxQuestion; else fixedTaxMode\">\r\n  <sp-radio-group name=\"planTaxOptionCode\" [model]=\"vm\" modelType=\"DeductionViewModel\"\r\n                  propertyName=\"planTaxOptionCode\" label=\"Deduction mode\"\r\n                  (change)=\"updateDescription(vm.planTaxOptionCode)\"\r\n    tooltip=\"true\">\r\n    <span tooltipText class=\"label-tooltip\">\r\n      Select Pre-Tax or Post-Tax depending on when the deduction must be applied.\r\n    </span>\r\n    <sp-radio-button id=\"planPreTax\" value=\"PRETAX\">Pre-Tax</sp-radio-button>\r\n    <sp-radio-button id=\"planPostTax\" value=\"POSTTAX\">Post-Tax</sp-radio-button>\r\n  </sp-radio-group>\r\n</ng-container>\r\n<ng-template #fixedTaxMode>\r\n  <span *ngIf=\"vm.planTaxOptionCode === 'PRETAX'\">Pre-Tax</span>\r\n  <span *ngIf=\"vm.planTaxOptionCode === 'POSTTAX'\">Post-Tax</span>\r\n</ng-template>\r\n\r\n<div *ngIf=\"!vm.hasPreOrPostTaxQuestion || vm.planTaxOptionCode\">\r\n  <ng-container *ngIf=\"vm.htmlDescription\">\r\n    <sp-read-more [description]=\"vm.htmlDescription\" hideSeeLess=\"true\">\r\n    </sp-read-more>\r\n  </ng-container>\r\n\r\n  <div class=\"deduction-name\">\r\n    <label class=\"inline\">Deduction Name </label>\r\n    <sp-input [model]=\"vm\" modelType=\"CompanyDeduction\" propertyName=\"name\"\r\n              [disabled]=\"!vm.canChangeName\">\r\n    </sp-input>\r\n    <label class=\"inline\">Deduction Abbreviation </label>\r\n    <sp-input [model]=\"vm\" modelType=\"CompanyDeduction\" propertyName=\"abbreviation\"\r\n              class=\"input-abbreviation\"\r\n              [disabled]=\"!vm.canChangeAbbreviation\">\r\n    </sp-input>\r\n  </div>\r\n\r\n\r\n  <div *ngIf=\"vm.hasHSAContributionQuestion\">\r\n    <sp-radio-group name=\"hsaContribution\"  [model]=\"vm\" modelType=\"DeductionViewModel\" propertyName=\"hsaContribution\" label=\"Company Match\">\r\n      <sp-radio-button id=\"hsaContributionNoMatch\" [value]=\"HsaMatchType.NoMatch\">No Match</sp-radio-button>\r\n      <sp-radio-button id=\"hsaContributionMatch\" [value]=\"HsaMatchType.Match\">Match Percent</sp-radio-button>\r\n      <sp-radio-button id=\"hsaContributionMatchAll\" [value]=\"HsaMatchType.MatchAll\">Match All</sp-radio-button>\r\n    </sp-radio-group>\r\n    <div *ngIf=\"vm.hsaContribution === HsaMatchType.Match\">\r\n      <span>Match</span>\r\n      <sp-input name=\"hsaMatchPercent\" [propertyName]=\"hsaMatchPercent\"\r\n              maskType=\"percent\" class=\"percent-inline\">\r\n      </sp-input>\r\n      <span>of employee's contribution up to</span>\r\n      <sp-amount-or-percent-value [model]=\"vm\" modelType=\"DeductionViewModel\"\r\n                                isAmountPropertyName=\"isHsaMatchMaxAmount\"\r\n                                propertyNameValue=\"hsaMatchMaxValue\"\r\n                                class=\"aop-inline\">\r\n      </sp-amount-or-percent-value>\r\n      <span>of employee gross earnings.</span>\r\n    </div>\r\n    <div *ngIf=\"vm.hsaContribution === HsaMatchType.MatchAll\">\r\n      <span>Contribute 100% up to </span>\r\n      <sp-amount-or-percent-value [model]=\"vm\" modelType=\"DeductionViewModel\"\r\n                              isAmountPropertyName=\"isHsaMatchAllMaxAmount\"\r\n                              propertyNameValue=\"hsaMatchAllValue\"\r\n                              class=\"aop-inline\">\r\n      </sp-amount-or-percent-value>\r\n      <span>of employee gross earnings.</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"d-flex mt-4 mb-4 justify-content-end\">\r\n  <button (click)=\"cancel()\" class=\"btn btn-light mr-3\">Cancel</button>\r\n  <button *ngIf=\"canConfirm\" (click)=\"done()\" class=\"btn btn-primary\">{{ isNew ? 'Add' : 'Update' }}</button>\r\n</div>\r\n\r\n<hr>\r\n\r\n<!-- Always present at bottom -->\r\n<sp-company-deductions-table></sp-company-deductions-table>\r\n","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\n\r\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\r\nimport { CompanyDeductionItem,\r\n         CreateCompanyDeductionCommand,\r\n         DeductionCommand,\r\n         EditCompanyDeductionCommand,\r\n       } from '@shared/deductions';\r\nimport { Deduction } from '@model';\r\nimport { LoggerService, WellKnownRoutes } from '@core';\r\n\r\n/** Private VM class with default values */\r\nclass DeductionViewModel {\r\n  abbreviation = 'ABBR';\r\n  canChangeAbbreviation = false;\r\n  canChangeName = false;\r\n  hasHSAContributionQuestion = true;\r\n  hasPreOrPostTaxQuestion = true;\r\n  hsaContribution: HsaMatchType;\r\n  hsaMatchAllValue: number;\r\n  hsaMatchMaxValue: number;\r\n  hsaMatchPercent: number;\r\n  htmlDescription: SafeHtml;\r\n  isHsaMatchAllMaxAmount = true;\r\n  isHsaMatchMaxAmount = true;\r\n  name = 'Base name';\r\n  planTaxOptionCode = '';\r\n  isPreTax = false;\r\n  isPostTax = false;\r\n\r\n  constructor(\r\n    public command?: DeductionCommand,\r\n    /** key is the Deduction.codeType */\r\n    public id?: string,\r\n    public code?: string\r\n  ) {\r\n    if (!command) {\r\n      return;\r\n    }\r\n    if (command.isNew) {\r\n      this.configureForCreate(command as CreateCompanyDeductionCommand);\r\n    } else {\r\n      this.configureForEdit(command as EditCompanyDeductionCommand);\r\n    }\r\n  }\r\n  configureForCreate(cmd: CreateCompanyDeductionCommand): void {\r\n    this.hasPreOrPostTaxQuestion = cmd.askPreOrPostTax &&\r\n          !cmd.forcePostTax && !cmd.forcePreTax;\r\n    this.isPreTax = cmd.forcePreTax;\r\n    this.isPostTax = cmd.forcePostTax;\r\n  }\r\n  configureForEdit(cmd: EditCompanyDeductionCommand): void {\r\n    this.hasPreOrPostTaxQuestion = false;\r\n    this.isPreTax = false;\r\n    this.isPostTax = false;\r\n  }\r\n}\r\n\r\nenum HsaMatchType {\r\n  NoMatch = 'NOMATCH',\r\n  Match = 'MATCH',\r\n  MatchAll = 'MATCHALL'\r\n}\r\n\r\n// TODO: Use enums instead of magic values\r\n@Component({\r\n  selector: 'sp-company-deduction-editor',\r\n  templateUrl: './company-deduction-editor.component.html'\r\n})\r\nexport class CompanyDeductionEditorComponent implements OnInit {\r\n  private currentDeductionItem: CompanyDeductionItem;\r\n  HsaMatchType = HsaMatchType; // expose enum to template\r\n  vm: DeductionViewModel = new DeductionViewModel();\r\n\r\n  isNew = false;\r\n  private cancelSave = false;\r\n\r\n  constructor(\r\n    private editorService: CompanyDeductionEditorService,\r\n    private logger: LoggerService,\r\n    private hostEl: ElementRef,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.vm = new DeductionViewModel();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const codeType = this.route.snapshot.params['id'];\r\n    const code = this.route.snapshot.params['code'];\r\n    this.createVm(codeType, code);\r\n    setTimeout(() => this.hostEl.nativeElement.scrollIntoView()); // must delay one tick\r\n  }\r\n\r\n  canLeaveAfterSave(): Observable<any> {\r\n    if (this.cancelSave) {\r\n      this.cancelSave = false;\r\n      return of(true);\r\n    }\r\n    return this.save().pipe(map(d => {\r\n      this.editorService.endEdit();\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  get canConfirm(): boolean {\r\n    return !(this.vm.hasPreOrPostTaxQuestion &&\r\n             this.vm.planTaxOptionCode === ''\r\n            );\r\n  }\r\n\r\n  private createVm(codeType: string, code: string) {\r\n    const cmd = this.editorService.command;\r\n    if (!cmd) {\r\n      this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n      return;\r\n    }\r\n    this.vm = new DeductionViewModel(cmd, codeType, code);\r\n    const deductions = this.editorService.deductions;\r\n\r\n    const isHsa = codeType === 'HSA';\r\n    const deduction = isHsa\r\n      ? deductions.find(d => d.codeTypeId === 43) // first deduction on HSA (1 of 4)\r\n      : deductions.find(d => d.codeType === codeType); // first matching code type will do\r\n\r\n    if (!deduction) {\r\n      // No deduction found!?\r\n      // 1. A user added a bad id in the query string == deep linking mischief\r\n      // 2. Bad grouping category with no deductions == programmer error\r\n      this.logger.error(`No deduction for codeType: \"${codeType}\"`, deduction);\r\n      this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n      return;\r\n    }\r\n\r\n    this.isNew = cmd.isNew;\r\n    if (cmd.isNew) {\r\n      this.currentDeductionItem = this.editorService.create(deduction, code);\r\n    } else {\r\n      this.currentDeductionItem = this.editorService.edit(deduction, code);\r\n    }\r\n\r\n\r\n    this.currentDeductionItem.isDirty = true;\r\n\r\n    // fill the VM from deduction and item data\r\n    this.vm.abbreviation = this.currentDeductionItem.abbreviation;\r\n    this.vm.canChangeName = deduction.canChangeDescription;\r\n    this.vm.canChangeAbbreviation = deduction.canChangeAbbreviation;\r\n    this.vm.hasHSAContributionQuestion = isHsa ? false : this.hasHSAContributionQuestion(deduction);\r\n    if (isHsa) {\r\n      this.vm.hasPreOrPostTaxQuestion = false;\r\n    }\r\n    this.vm.name = this.currentDeductionItem.name;\r\n\r\n    // Security: `definition` is always authored by the SP team and is considered to be safe.\r\n    this.vm.htmlDescription = deduction.definition;\r\n\r\n    if (this.vm.isPreTax) {\r\n      this.updateDescription('PRETAX');\r\n    }\r\n    if (this.vm.isPostTax) {\r\n      this.updateDescription('POSTTAX');\r\n    }\r\n  }\r\n\r\n  updateDescription(taxMode: string): void {\r\n    const isPreTax = taxMode === 'PRETAX' ? true\r\n                                          : taxMode === 'POSTTAX' ? false\r\n                                                                  : null;\r\n    const deduction = this.editorService.getDeductionWithTaxMode(isPreTax);\r\n\r\n    if (isPreTax) {\r\n      this.vm.isPreTax = true;\r\n      this.vm.isPostTax = false;\r\n      this.vm.name = this.currentDeductionItem.deduction.codeType + ' Pre-Tax';\r\n    } else if (isPreTax === false) {\r\n      this.vm.isPreTax = false;\r\n      this.vm.isPostTax = true;\r\n      this.vm.name = this.currentDeductionItem.deduction.codeType + ' Post-Tax';\r\n    } else {\r\n      this.vm.isPreTax = false;\r\n      this.vm.isPostTax = false;\r\n    }\r\n\r\n    if (deduction) {\r\n      this.vm.htmlDescription = deduction.definition;\r\n    } else {\r\n      this.vm.htmlDescription = '';\r\n    }\r\n  }\r\n\r\n  done(): void {\r\n    this.editorService.endEdit();\r\n    this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n  }\r\n  cancel(): void {\r\n    if (this.isNew) {\r\n      this.delete();\r\n      return;\r\n    }\r\n    this.editorService.endEdit();\r\n    this.cancelSave = true;\r\n    this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n  }\r\n  delete() {\r\n    this.editorService.endEdit();\r\n    this.editorService.delete(this.currentDeductionItem).subscribe(\r\n      _ => {},\r\n      error => this.logger.error(error)\r\n    );\r\n    this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n  }\r\n\r\n  save(): Observable<any> {\r\n    const vm = this.vm;\r\n    if (!vm) {\r\n      return of(true);\r\n    }\r\n    const cdi = this.currentDeductionItem;\r\n    if (cdi) {\r\n      cdi.name = vm.name.trim();\r\n      cdi.abbreviation = vm.abbreviation.trim();\r\n      const hasChangedPrePost = canBePreOrPostTax(cdi.deduction.codeTypeId) &&\r\n                                (cdi.isPreTax !== vm.isPreTax ||\r\n                                 cdi.isPostTax !== vm.isPostTax);\r\n\r\n      if (hasChangedPrePost) {\r\n        cdi.companyDeductions[0].isRemoved = true;\r\n        if (vm.isPreTax) {\r\n          const preCTid = this.editorService.getDeductionCodeTypeIdByTaxMode(cdi.deduction.codeType, true);\r\n          const preDed = this.editorService.createByCodeTypeId(preCTid);\r\n          cdi.companyDeductions.push(preDed);\r\n        } else if (vm.isPostTax) {\r\n          const postCTid = this.editorService.getDeductionCodeTypeIdByTaxMode(cdi.deduction.codeType, false);\r\n          const postDed = this.editorService.createByCodeTypeId(postCTid);\r\n          cdi.companyDeductions.push(postDed);\r\n        }\r\n      }\r\n      const cd = cdi.companyDeductions[0];\r\n      cd.abbreviation = vm.abbreviation.trim();\r\n      cd.description = vm.name.trim();\r\n    }\r\n    return this.editorService.save();\r\n  }\r\n\r\n  private hasHSAContributionQuestion(deduction: Deduction): boolean {\r\n    return deduction.codeGroupId === 7; // HSA\r\n  }\r\n}\r\n\r\n\r\nfunction canBePreOrPostTax(codeTypeId: number): boolean {\r\n  switch (codeTypeId) {\r\n    case 20:  // Medical pre\r\n    case 21:  // Vision pre\r\n    case 22:  // Dental pre\r\n    case 30:  // Medial post\r\n    case 31:  // Vision post\r\n    case 32:  // Dental post\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable, of, combineLatest, Subject } from 'rxjs';\nimport { first, map, tap } from 'rxjs/operators';\n\nimport { CompanyDeduction,\n         Deduction,\n         DeductionPlanType,\n         deductionIsCustomType,\n         Employee,\n         EmployeeDeduction,\n         WellKnownDeductionsCodeTypeId\n} from '@model';\nimport { CompanyDeductionItem,\n         DeductionCategory,\n         DeductionCommand,\n         getDeductionCategories,\n         isNewCompanyDeductionItem,\n         updateTreeState\n       } from '@shared/deductions';\nimport { CompanyDeductionService, DeductionService, EmployeeDeductionService, EmployeeService\n       } from '@entity';\n\n@Injectable({ providedIn: 'root' })\nexport class CompanyDeductionEditorService {\n  companyDeductionItems: CompanyDeductionItem[];\n  deductions: Deduction[];\n  deductionCategories: DeductionCategory[];\n\n  currentInEdit: CompanyDeductionItem;\n  private _command: DeductionCommand;\n\n  private employeeDeductionsToDelete: EmployeeDeduction[] = null;\n\n  constructor(\n    private deductionService: DeductionService,\n    private companyDeductionService: CompanyDeductionService,\n    private employeeDeductionService: EmployeeDeductionService,\n    private employeeService: EmployeeService\n  ) {}\n\n\n  get command(): DeductionCommand {\n    return this._command;\n  }\n  set command(cmd: DeductionCommand) {\n    this._command = cmd;\n  }\n  getDeductionWithTaxMode(isPreTax: boolean): Deduction {\n    const deductions = this.command ? this.command.deductions : [];\n    const found = deductions.find(d => {\n      if (isPreTax) {\n        return d.deductionPlanTaxOptionCode === DeductionPlanType.PRETAX;\n      } else if (isPreTax === false) {\n        return d.deductionPlanTaxOptionCode === DeductionPlanType.POSTTAX;\n      } else {\n        return d.deductionPlanTaxOptionCode === DeductionPlanType.NOEEDEDUCT;\n      }\n    });\n    return found;\n  }\n\n\n\n  /**\n   * Create CompanyDeductionItem from a Deduction and add to cached CompanyDeductionItems\n   * @param deduction Deduction master metadata for this item.\n   */\n  create(deduction: Deduction, code: string): CompanyDeductionItem {\n    const cd = this.companyDeductionService.createFromDeduction(deduction);\n    const item = new CompanyDeductionItem(deduction, true, [cd]);\n\n    if (code) {\n      item.setCode(code);\n      let namePrefix: string;\n      let abbreviationPrefix: string;\n      if (deduction.codeTypeId === 23) {    // Misc Pre\n        namePrefix = item.name + ' Pre #';\n        abbreviationPrefix = 'MIPRE';\n      } else  if (deduction.codeTypeId === 24) {    // Cafe 2\n        namePrefix = item.name + ' #';\n        abbreviationPrefix = 'CAFE';\n      } else  if (deduction.codeTypeId === 34) {    //  Misc Post\n        namePrefix = item.name + ' Post #';\n        abbreviationPrefix = 'MIPRO';\n      } else if (deduction.codeTypeId === 56) {  // Custom with Goal\n        namePrefix = 'Custom with Goal #';\n        abbreviationPrefix = 'CUSTWG';\n      } else if (deduction.codeTypeId === 57) {  // Custom No Goal\n        namePrefix = 'Custom No Goal #';\n        abbreviationPrefix = 'CUSTNG';\n      } else if (deduction.codeTypeId === 50) {  // Child Support\n        namePrefix = 'Child Support #';\n        abbreviationPrefix = 'CHILD';\n      } else if (deduction.codeTypeId === 51) {  // Garnishment with Goal\n        namePrefix = 'Garnishment with Goal #';\n        abbreviationPrefix = 'GARWG';\n      } else if (deduction.codeTypeId === 59) {  // Garnishment No Goal\n        namePrefix = 'Garnishment No Goal #';\n        abbreviationPrefix = 'GARNG';\n      }\n\n      if (namePrefix && abbreviationPrefix) {\n        const proposal = this.proposeNameAndAbbreviation(deduction.codeTypeId, namePrefix, abbreviationPrefix);\n        item.name = proposal.name;\n        item.abbreviation = proposal.abbreviation;\n      }\n    }\n\n    this.companyDeductionItems.push(item);\n    this.currentInEdit = item;\n    this.updateCatalog();\n    return item;\n  }\n\n  /**  a unique name and abbreviation for a count-down deduction instance.\n   * Looks for the next available instance number\n   */\n  proposeNameAndAbbreviation(codeTypeId: number,\n                             namePrefix: string,\n                             abbreviationPrefix: string): { name: string, abbreviation: string } {\n    const items = this.companyDeductionItems.filter(d => d.deduction.codeTypeId === codeTypeId);\n    let index = 1;\n    let notUnique = true;\n    let name = '';\n    let abbreviation = '';\n\n    while (notUnique) {\n      name = namePrefix + index.toString();\n      abbreviation = abbreviationPrefix + index.toString();\n\n      const foundName = items.find(d => d.name === name);\n      const foundAbbreviation = items.find(d => d.abbreviation === abbreviation);\n\n      index++;\n      notUnique = !!foundName || !!foundAbbreviation;\n    }\n    return {\n      name,\n      abbreviation\n    };\n  }\n\n  createByCodeTypeId(tid: number): CompanyDeduction {\n    const found = this.deductions.find(t => t.codeTypeId === tid);\n    if (!found) {\n      throw new Error(`Deduction Type ${tid} not found.`);\n    }\n    const cd = this.companyDeductionService.createFromDeduction(found);\n    return cd;\n  }\n\n  getDeductionCodeTypeIdByTaxMode(codeType: string, isPreTax?: boolean): number {\n    const found = this.deductions.filter(t => t.codeType === codeType)\n                                 .find(d => {\n      if (isPreTax === true) {\n        return d.deductionPlanTaxOptionCode === DeductionPlanType.PRETAX;\n      } else if (isPreTax === false) {\n        return d.deductionPlanTaxOptionCode === DeductionPlanType.POSTTAX;\n      } else {\n        return true; // first one\n      }\n    });\n    if (!found) {\n      throw new Error(`Deduction Type ${codeType} not found.`);\n    }\n    return found.codeTypeId;\n  }\n\n  /**\n   * Generates a code number to recognize when more than one instance of a type is needed.\n   * Examples: Miscellaneous deductions for:\n   * Miscellaneous with Goal (up to 5) or\n   * Miscellaneous NO Goal (up to 5)\n   * @param codeTypeId Type of deduction\n   */\n  generateCode(codeTypeId: number): string {\n    if (\n      codeTypeId === WellKnownDeductionsCodeTypeId.MiscellaneousNoGoal ||\n      codeTypeId === WellKnownDeductionsCodeTypeId.MiscellaneousWithGoal\n    ) {\n      const slots: any = { '1': true, '2': true, '3': true, '4': true, '5': true };\n      this.companyDeductionItems.forEach(cdi => {\n        const code = cdi.getCode();\n        if (code && cdi.deduction.codeTypeId === codeTypeId) {\n          slots[code] = false;\n        }\n      });\n      const found = Object.keys(slots).find(it => slots[it] === true);\n      return found ? found : '6';\n    }\n    return '1'; // no multiple instances (singleton)\n  }\n\n  delete(companyDeductionItem: CompanyDeductionItem): Observable<any> {\n    const deleteSource = new Subject();\n    // delete employee deductions affected\n    this.employeeDeductionService.getDeductionsLinkedTo(\n      companyDeductionItem.companyDeductions[0].id\n    ).pipe(first()).subscribe((employeeDeductionsToDelete) => {\n\n      this.employeeDeductionsToDelete = employeeDeductionsToDelete;\n      companyDeductionItem.isDeleted = true;\n      this.updateCatalog();\n      deleteSource.next( this.save() );\n\n    });\n    return deleteSource.asObservable();\n  }\n\n  /**\n   * Find or create the CompanyDeductionItem for the give Deduction\n   * @param deduction Deduction master metadata for this item\n   * @param code Number of instance of the deductions (f.e. used in Miscellaneous Wit/out Goals)\n   * Not needed for single-instance deductions\n   */\n  edit(deduction: Deduction, code: string): CompanyDeductionItem {\n    let cdi: CompanyDeductionItem;\n    if (deductionIsCustomType(deduction) && !code) {\n      cdi = this.create(deduction, '1');\n    } else {\n      const foundInstance = this.foundDeductionInstance(deduction, code);\n      cdi = foundInstance || this.create(deduction, code);\n    }\n    return this.editCompanyDeductionItem(cdi);\n  }\n  editCompanyDeductionItem(cdi: CompanyDeductionItem): CompanyDeductionItem {\n    this.currentInEdit = cdi;\n    this.updateCatalog();\n    return cdi;\n  }\n\n  endEdit(): void {\n    this.currentInEdit = null;\n    this.updateCatalog();\n  }\n\n  /**\n   * Returns a deduction of type catchup if defined\n   */\n  getCatchupDeduction(): CompanyDeductionItem {\n    return this.companyDeductionItems.find(d => d.isCatchUp);\n  }\n  /** Creates a corresponding catchup plan for a deduction plan\n   * @param cdi: base deduction plan\n  */\n  createCatchUpFor(cdi: CompanyDeductionItem): CompanyDeductionItem {\n    const catchUpTid = this.getCorrespondingCatchUpPlanFor(cdi.deduction.codeTypeId);\n    if (!catchUpTid) {\n      return null;\n    }\n    const catchUpDeduction = this.deductions.find(d => d.codeTypeId === catchUpTid);\n    const cd = this.companyDeductionService.createFromDeduction(catchUpDeduction);\n    const item = new CompanyDeductionItem(catchUpDeduction, true, [cd]);\n    this.companyDeductionItems.push(item);\n    this.updateCatalog();\n    return item;\n  }\n\n  getEmployeesEnrolledInDeduction(d: CompanyDeductionItem): Observable<Employee[]> {\n    const employees$ = this.employeeService.entities$;\n    const eds$ = this.employeeDeductionService.entities$;\n    return combineLatest(employees$, eds$).pipe(\n      map(([employees, eds]) => {\n        return employees.filter(e => {\n          const found = eds.find(ed1 =>\n            ed1.employeeId === e.id &&\n            ed1.companyDeductionId === d.companyDeductions[0].id );\n          return found;\n        });\n      }\n    ));\n  }\n\n  private foundDeductionInstance(deduction: Deduction, code: string): CompanyDeductionItem {\n    return this.companyDeductionItems.find(it => {\n      if (code) {\n        const instanceCode = it.getCode();\n        return it.deduction.codeTypeId === deduction.codeTypeId && instanceCode === code;\n      } else {\n        return it.deduction.codeTypeId === deduction.codeTypeId;\n      }\n    });\n  }\n\n  /**\n   * Return boolean observable when the\n   * deductions master/metadata have been loaded\n   * and service is listening for current company deductions\n   * (which are cached in this service).\n   * Always emits true when ready.\n   */\n  ready(): Observable<boolean> {\n    if (this.deductions) {\n      return of(true);\n    }\n\n    return this.deductionService.deductions$.pipe(\n      first(),\n      tap(deductions => {\n        this.deductions = deductions;\n\n        // No need to unsubscribe because this service never dies\n        this.companyDeductionService.entities$.subscribe(cds => {\n          const items = this.mapToItems(cds);\n          this.companyDeductionItems = items;\n          if (!this.deductionCategories) {\n            // cache to preserve visual state expand/collapse after first load\n            this.deductionCategories = getDeductionCategories(deductions);\n          }\n          this.updateCatalog();\n        });\n      }),\n      map(() => true)\n    );\n  }\n\n  /**\n   * Return the terminating, multi-entity-save Observable of the new/changed/deleted CompanyDeductions.\n   * Must subscribe to execute save; no need to unsubscribe.\n   * Cleans cached CompanyDeductionItems immediately, whether or not subscribed.\n   */\n  save(): Observable<any> {\n    if (this.employeeDeductionsToDelete) {\n      this.employeeDeductionsToDelete.forEach(ed => {\n        ed.isRemoved = true;\n      });\n    }\n    this.employeeDeductionService.save(this.employeeDeductionsToDelete)\n                                 .subscribe();\n    this.employeeDeductionsToDelete = null;\n\n    // save the dirty items\n    const toSave = this.companyDeductionItems.filter(d => d.isDirty || d.isDeleted);\n    // mark CompanyDeduction rows for deletion\n    toSave\n      .filter(cdi => cdi.isDeleted)\n      .forEach(cdi => {\n        cdi.companyDeductions.forEach(cd => {\n          cd.isRemoved = true;\n        });\n      });\n    // propagate changes\n    toSave.filter(cdi => cdi.isDirty && !cdi.isDeleted)\n          .forEach(cdi => cdi.viewModelToEntity());\n\n    // flatten each item's CompanyDeductions into a single array-to-save\n    const changes = toSave.map(d => d.companyDeductions)\n                          .reduce((a, b) => a.concat(b), []);\n\n    const ret = this.companyDeductionService.save(changes);\n\n    // Todo: Why is the following down here? Move above the save (below toSave)? Would be easier to read.\n    // PJ: save is checking for isRemoved to do real deletion.\n    // PJ: Need to clean in-mem state after saving.\n\n    // items are no longer dirty after save\n    this.companyDeductionItems.forEach(d => (d.isDirty = false));\n    this.purgeDeleted();\n\n    return ret;\n  }\n\n  // #region private helpers\n\n  /**\n   * Map CompanyDeductions into CompanyDeductionItems\n   */\n  private mapToItems(companyDeductions: CompanyDeduction[]): CompanyDeductionItem[] {\n    // Current Assumption: 1 Company Deduction -> 1 Item Deduction\n    return companyDeductions.map(d => {\n      const deductionType = this.deductions.find(md => md.codeTypeId === d.deductionCodeTypeId);\n      const item = new CompanyDeductionItem(deductionType, false, [d]);\n      return item;\n    });\n  }\n\n  /**\n   * Remove the deleted CompanyDeductionItems and\n   * remove the \"isRemoved\" CompanyDeductions from the remaining, active items\n   */\n  private purgeDeleted(): void {\n    this.companyDeductionItems = this.companyDeductionItems\n      .filter(item => item.isDeleted !== true)\n      .map(item => {\n        // exclude item's removed company deductions\n        item.companyDeductions = item.companyDeductions.filter(d => d.isRemoved !== true);\n        return item;\n      });\n  }\n\n  private updateCatalog(): void {\n    updateTreeState(\n      this.deductionCategories,\n      this.companyDeductionItems.filter(cdi => !isNewCompanyDeductionItem(cdi)),\n      this.currentInEdit\n    );\n  }\n\n  /** Returns correspondence between a retirement plan and a catchup plan */\n  private getCorrespondingCatchUpPlanFor(tid: number): number {\n      const found = this.deductions.find(d => d.retireAddon === tid);\n      return found ? found.codeTypeId : null;\n  }\n\n  // #endregion private helpers\n}\n\n\n","<!-- Modal Content Company Deduction Deletion Confirmation -->\r\n<ng-template #content let-cc=\"close('cancel')\" let-cs=\"close('delete')\" let-d=\"dismiss()\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      <i class=\"material-icons icon text-danger\">warning</i>Delete Company Deduction</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"cc\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"p-4\">\r\n    <p>\r\n      Are you sure you want to <strong>delete</strong> this Company Deduction?\r\n    </p>\r\n    <p>The following {{ employeeList.length }} employees are enrolled for the\r\n      <strong>{{ deductionName }}</strong> deduction:</p>\r\n    <ul>\r\n      <li *ngFor=\"let emp of employeeList\">{{ emp.fullName() }}</li>\r\n    </ul>\r\n    <p>This action <strong>cannot</strong> be undone and will\r\n      <strong>permanently</strong> delete this deductions and its corresponding\r\n      information in already enrolled employees.</p>\r\n    <sp-input name=\"deleteConfirmation\" label=\"Enter the word 'DELETE' to confirm\" [(ngModel)]=\"deleteConfirmation\" autofocus=\"true\"></sp-input>\r\n  </div>\r\n  <div class=\"modal-footer d-flex\">\r\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"cc\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"cs\" [disabled]=\"!isDeleteConfirmed\">Delete</button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { from, Observable, Subject } from 'rxjs';\r\n\r\nimport { Employee } from '@app/model';\r\n\r\n@Component({\r\n  selector: 'sp-company-deduction-remove',\r\n  templateUrl: 'company-deduction-remove.component.html'\r\n})\r\nexport class CompanyDeductionRemoveComponent {\r\n  @ViewChild('content') modalContent: ElementRef;\r\n\r\n  deleteConfirmation: '';\r\n\r\n  get isDeleteConfirmed(): boolean {\r\n    return /delete/i.test(this.deleteConfirmation);\r\n  }\r\n  obs = new Observable<boolean>();\r\n  source: Subject<boolean>;\r\n  private modalRef: NgbModalRef;\r\n\r\n  deductionName: string;\r\n  employeeList: Employee[] = [];\r\n\r\n  constructor(private modalService: NgbModal) {\r\n  }\r\n\r\n  show(deductionName: string, employeeList: Employee[]): Observable<boolean> {\r\n    this.deductionName = deductionName;\r\n    this.employeeList = employeeList;\r\n    this.source = new Subject<boolean>();\r\n    this.obs = from(this.source);\r\n    this.modalRef = this.modalService.open(this.modalContent);\r\n    this.modalRef.result.then(res => {\r\n      this.close(res);\r\n      this.modalRef = null;\r\n    });\r\n    return this.obs;\r\n  }\r\n  close(reason: string): void {\r\n    if (reason === 'delete') {\r\n      this.modalRef.close();\r\n      this.source.next(true);\r\n    } else {\r\n      this.modalRef.dismiss();\r\n      this.source.next(false);\r\n    }\r\n  }\r\n}\r\n","<div class=\"static-nav d-flex flex-column\" id=\"companyDeductions\">\r\n  <div class=\"layout-split-container\">\r\n\r\n    <div class=\"layout-split-menu\">\r\n      <sp-deductions-catalog [catalog]=\"vm.catalog\"\r\n                             (deductionTypeSelected)=\"onCatalogSelection($event)\">\r\n      </sp-deductions-catalog>\r\n    </div>\r\n\r\n    <hr class=\"desktop-hide\">\r\n\r\n    <div class=\"layout-split-content\">\r\n      <router-outlet #outlet=\"outlet\"></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\r\nimport { buildCommandForCreation,\r\n         DeductionCategory,\r\n         DeductionTitle } from '@shared/deductions';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\nclass CompanyDeductionViewModel {\r\n  catalog: DeductionCategory[] = [];\r\n}\r\n\r\nconst companyDeductionsUrl = WellKnownRoutes.Employees + '/company-deductions';\r\n\r\n@Component({\r\n  selector: 'sp-company-deductions',\r\n  templateUrl: './company-deductions-container.component.html'\r\n})\r\nexport class CompanyDeductionsContainerComponent implements OnInit {\r\n  vm: CompanyDeductionViewModel = new CompanyDeductionViewModel();\r\n  selectedKey: string;\r\n  showTable = false;\r\n\r\n  constructor(\r\n    private editorService: CompanyDeductionEditorService,\r\n    private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.vm = {\r\n      catalog: this.editorService.deductionCategories\r\n    };\r\n  }\r\n\r\n  onCatalogSelection(dt: DeductionTitle): void {\r\n    this.selectedKey = dt.key;\r\n    this.editorService.command = buildCommandForCreation(dt);\r\n    const code = this.editorService.command.code;\r\n    if (dt.key === 'Retirements') {\r\n      this.router.navigate([companyDeductionsUrl + '/retirement']);\r\n    } else {\r\n      this.router.navigate([`${companyDeductionsUrl}/deduction/${dt.key}/${code}`]);\r\n    }\r\n  }\r\n}\r\n","<h2>{{ company$ | async | companyKind }} Deductions</h2>\n\n<ng-container *ngIf=\"createdDeductions.length === 0\">\n  <div class=\"sp-card sp-card-helper\">\n    <img src=\"/assets/images/icon-placeholder-add.png\" height=\"86px\" width=\"104px\">\n    <span class=\"mb-2\">You have no deductions yet.</span>\n    <span>Select a category from the \"Add Deduction\" menu and pick a deduction.</span>\n  </div>\n</ng-container>\n\n<div *ngIf=\"createdDeductions.length > 0\">\n  <div *ngFor=\"let di of createdDeductions\" class=\"sp-card link-cursor\">\n    <div class=\"sp-card-content\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n        <span class=\"sp-card-header\">\n          {{ getMenuLabel(di) }}\n        </span>\n\n        <div class=\"sp-card-actions\">\n          <a (click)=\"edit(di)\">\n            <i class=\"material-icons icon d-inline btn-circle\" title=\"Edit\">edit</i>\n          </a>\n          <a (click)=\"delete(di)\">\n            <i class=\"material-icons icon d-inline btn-circle\" title=\"Remove\">delete_forever</i>\n          </a>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between align-items-center mt-1 mobile-stack\">\n        <div class=\"sp-card-subheader mobile-stack\">\n          <span>{{ di.name }}</span>\n          <span class=\"mobile-hide\">&nbsp;&nbsp;</span>\n          <span><i>{{ di.abbreviation }}</i></span>\n        </div>\n\n        <span *ngIf=\"di.isCompleted\" class=\"badge badge-sp badge-complete\">COMPLETED</span>\n        <span *ngIf=\"!di.isCompleted\" class=\"badge badge-sp badge-inprogress\">IN PROGRESS</span>\n      </div>\n    </div>\n  </div>\n</div>\n\n<sp-company-deduction-remove #removeConfirmation>\n</sp-company-deduction-remove>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Company, Employee } from '@model';\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\nimport { CompanyDeductionRemoveComponent } from './company-deduction-remove.component';\nimport { CompanyService } from '@entity';\nimport { CompanyDeductionItem, buildCommandForEdit, isNewCompanyDeductionItem } from '@shared/deductions';\nimport { LoggerService } from '@core';\n\n@Component({\n  selector: 'sp-company-deductions-table',\n  templateUrl: './company-deductions-table.component.html'\n})\nexport class CompanyDeductionsTableComponent implements OnInit {\n  company$: Observable<Company>;\n\n  @ViewChild('removeConfirmation') removeConfirmationModal: CompanyDeductionRemoveComponent;\n\n  constructor(\n    private companyService: CompanyService,\n    private editorService: CompanyDeductionEditorService,\n    private log: LoggerService,\n    private router: Router,\n  ) {  }\n\n  ngOnInit() {\n    this.company$ = this.companyService.currentCompany$;\n  }\n\n  /** Hide the elements been created (new state)\n   *  Show only created ones.\n   */\n  get createdDeductions(): CompanyDeductionItem[] {\n    return this.editorService.companyDeductionItems\n      .filter(d => !isNewCompanyDeductionItem(d) )\n      .sort((a, b) =>  a.deduction.codeType.localeCompare(b.deduction.codeType));\n  }\n\n  getMenuLabel(di: CompanyDeductionItem): string {\n    const suffix = di.isPreTax ? ' (Pre-Tax)' :  di.isPostTax ? ' (Post-Tax)' : '';\n    return di.deduction.codeType + suffix;\n  }\n\n  /**\n   * Navigate to edit deductions\n   * Retirements and most deductions are single instances: you can only instanciate it once.\n   * But some types of deductions like Miscellaneous with/out Goals can be instanciated\n   * till 5 times. Code is the discriminator of the instances to allow navigate to edit the specific one.\n   */\n  edit(d: CompanyDeductionItem) {\n    this.editorService.command = buildCommandForEdit(d);\n    if (d.isRetirement()) {\n      this.router.navigate(['/employees/company-deductions/retirement']);\n    } else {\n      const code = d.getCode();\n      if (code) {\n        this.router.navigate(['/employees/company-deductions/deduction/' + d.deduction.codeType + '/' + code]);\n      } else {\n        this.router.navigate(['/employees/company-deductions/deduction/' + d.deduction.codeType]);\n      }\n    }\n  }\n  delete(d: CompanyDeductionItem): void {\n    this.editorService.getEmployeesEnrolledInDeduction(d)\n      .pipe(first()).subscribe(affectedEmployees => {\n        this.doDelete(d, affectedEmployees);\n      });\n  }\n  private doDelete(d: CompanyDeductionItem, affectedEmployees: Employee[]): void {\n    const needsConfirmation = affectedEmployees.length > 0;\n    if (needsConfirmation) {\n      this.removeConfirmationModal.show(d.name, affectedEmployees)\n          .pipe(first())\n          .subscribe(result => {\n            if (result) {\n              this.confirmDelete(d);\n            }\n          });\n    } else {\n      this.confirmDelete(d);\n    }\n  }\n  private confirmDelete(d: CompanyDeductionItem): void {\n    this.editorService.delete(d).subscribe(\n      _ => {\n        this.router.navigate(['/employees/company-deductions']);\n      },\n      // TODO: Remove error handling that looks like this\n      // because this does nothing that wasn't done at lower level\n      // THE ONLY REASON to handle error in component is to display something (or swallow error)\n      // JESUS: Please hunt for other examples and fix them.\n      // JESUS: Ask Pedro did he have a specific reason for swallowing error here.\n      error => this.log.error(error)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivateChild } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\n\n@Injectable({ providedIn: 'root' })\nexport class CompanyDeductionsGuard implements CanActivateChild {\n\n  constructor(private service: CompanyDeductionEditorService) { }\n\n  canActivateChild(): Observable<boolean> {\n    return this.service.ready();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CompanyDeductionEditorComponent } from './company-deduction-editor.component';\nimport { CompanyDeductionRemoveComponent } from './company-deduction-remove.component';\nimport { CompanyDeductionsContainerComponent } from './company-deductions-container.component';\nimport { CompanyDeductionsGuard } from './company-deductions.guard';\nimport { CompanyDeductionsTableComponent } from './company-deductions-table.component';\nimport { CompanyRetirementComponent } from './company-retirement.component';\nimport { DeductionsCatalogComponent } from './deductions-catalog.component';\nimport { PageLeaveGuard } from '@core/routing-guards';\nimport { SharedModule } from '@shared/shared.module';\n\nexport const routes: Routes = [\n  {\n    // Expected full path: ~/employees/company-deductions\n    path: '',\n    component: CompanyDeductionsContainerComponent,\n    canActivateChild: [CompanyDeductionsGuard],\n    canDeactivate: [PageLeaveGuard],\n    data: { title: 'Company Deductions' },\n    children: [\n      {\n        path: '',\n        component: CompanyDeductionsTableComponent,\n        canDeactivate: [PageLeaveGuard],\n        data: {\n          title: 'Company Deductions',\n          root: true   // root marks the root page to provide info to hide/show deductions-table\n        }\n      },\n      {\n        path: 'retirement',\n        component: CompanyRetirementComponent,\n        canDeactivate: [PageLeaveGuard],\n        data: { title: 'Company Retirement Plan' }\n      },\n      {\n        path: 'deduction/:id/:code', // sample: deduction/Miscellaneous+No+Goal/2\n        component: CompanyDeductionEditorComponent,\n        canDeactivate: [PageLeaveGuard],\n        data: {}\n      },\n      {\n        path: 'deduction/:id', // sample: deduction/Medical\n        component: CompanyDeductionEditorComponent,\n        canDeactivate: [PageLeaveGuard],\n        data: {}\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(routes)],\n  declarations: [\n    CompanyDeductionEditorComponent,\n    CompanyDeductionsContainerComponent,\n    CompanyDeductionsTableComponent,\n    CompanyDeductionRemoveComponent,\n    CompanyRetirementComponent,\n    DeductionsCatalogComponent\n  ]\n})\nexport class CompanyDeductionsModule {}\n","<div class=\"tax-item-form deduction-retirement\">\r\n  <div class=\"tax-item-header d-flex justify-content-between align-items-center\">\r\n    <h2>Retirement Plan</h2>\r\n    <a (click)=\"done()\"><i title=\"Close\"\r\n      class=\"material-icons icon btn-circle\">close</i></a>\r\n  </div>\r\n\r\n  <sp-model [model]=\"vm\" modelType=\"Retirement\">\r\n\r\n    <sp-radio-group name=\"plan\" propertyName=\"plan\"\r\n                    (change)=\"configureEditorForPlan()\"\r\n                    label=\"Retirement Plan Selecction\" tooltip=\"true\">\r\n      <span tooltipText class=\"label-tooltip\">\r\n        Select the Retirement Plan your company offers to your employees.\r\n      </span>\r\n      <sp-radio-button id=\"planIRA\" [value]=\"RetirementPlans.IRA\">IRA</sp-radio-button>\r\n      <sp-radio-button id=\"plan401K\" [value]=\"RetirementPlans.Plan401K\">401(k)</sp-radio-button>\r\n      <sp-radio-button id=\"plan403b\" [value]=\"RetirementPlans.Plan403B\">403(b)</sp-radio-button>\r\n    </sp-radio-group>\r\n\r\n    <ng-container *ngIf=\"vm.plan\">\r\n\r\n      <sp-radio-group *ngIf=\"vm.plan === RetirementPlans.IRA\"\r\n            name=\"planTypeIRA\" propertyName=\"planType\" label=\"Plan Type\"\r\n            tooltip=\"true\" (change)=\"configureEditor()\">\r\n        <span tooltipText class=\"label-tooltip\">\r\n          Select the Plan Type for IRA. SEP IRA apply for self-employed only.\r\n        </span>\r\n        <sp-radio-button id=\"ptSimpleIRA\" [value]=\"RetirementPlanTypes.SimpleIRA\">Simple IRA</sp-radio-button>\r\n        <sp-radio-button id=\"ptSepIRA\" [value]=\"RetirementPlanTypes.SepIRA\">SEP IRA</sp-radio-button>\r\n      </sp-radio-group>\r\n\r\n      <sp-radio-group *ngIf=\"vm.plan === RetirementPlans.Plan401K\"\r\n                name=\"planType\" propertyName=\"planType\" label=\"Plan Type\"\r\n                (change)=\"configureEditor()\"\r\n                tooltip=\"true\">\r\n        <span tooltipText class=\"label-tooltip\">\r\n          Select the Plan Type.\r\n        </span>\r\n        <sp-radio-button id=\"ptTraditional\" [value]=\"RetirementPlanTypes.P401KTraditional\">Traditional</sp-radio-button>\r\n        <sp-radio-button id=\"ptSafeHarbor\" [value]=\"RetirementPlanTypes.P401KSafeHarbor\">Safe Harbor</sp-radio-button>\r\n        <sp-radio-button id=\"ptSimple\" [value]=\"RetirementPlanTypes.P401KSimple\">Simple</sp-radio-button>\r\n      </sp-radio-group>\r\n\r\n      <ng-container *ngIf=\"vm.htmlDescription\">\r\n        <div class=\"tax-item-description\">\r\n          <sp-read-more [description]=\"vm.htmlDescription\" hideSeeLess=\"true\">\r\n          </sp-read-more>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <div>\r\n        <sp-input [model]=\"vm\" modelType=\"Retirement\" propertyName=\"name\" label=\"Deduction Name\"\r\n                 [disabled]=\"!vm.canChangeName\">\r\n        </sp-input>\r\n\r\n        <sp-input [model]=\"vm\" modelType=\"Retirement\" propertyName=\"abbreviation\" label=\"Deduction Abbreviation\"\r\n                  class=\"input-abbreviation\"\r\n                  [disabled]=\"!vm.canChangeAbbreviation\">\r\n        </sp-input>\r\n      </div>\r\n\r\n      <div class=\"d-flex mt-4 mb-4 justify-content-end\">\r\n        <button (click)=\"cancel()\" class=\"btn btn-light mr-3\">Cancel</button>\r\n        <button (click)=\"done()\" class=\"btn btn-primary\">{{ isNew ? 'Add' : 'Update' }}</button>\r\n      </div>\r\n\r\n    </ng-container>\r\n\r\n  </sp-model>\r\n</div>\r\n\r\n<!-- Always present at bottom -->\r\n<sp-company-deductions-table></sp-company-deductions-table>\r\n","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\r\nimport { CompanyDeductionItem } from '@shared/deductions';\r\nimport { CompanyDeduction, Deduction, MatchTypes,\r\n         RetirementPlans, RetirementPlanTypes,\r\n         RetirementPlanApply, EmployeeContributionModel\r\n       } from '@model';\r\nimport { Logger } from 'ngrx-data';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\nclass Retirement {\r\n  retirementTypeName: string;\r\n  plan: RetirementPlans;\r\n  planType: RetirementPlanTypes;\r\n  htmlDescription: SafeHtml | null;\r\n  name: string;\r\n  abbreviation: string;\r\n  canChangeName: boolean;\r\n  canChangeAbbreviation: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'sp-company-retirement',\r\n  templateUrl: './company-retirement.component.html'\r\n})\r\nexport class CompanyRetirementComponent implements OnInit {\r\n  RetirementPlans = RetirementPlans;\r\n  RetirementPlanTypes = RetirementPlanTypes;\r\n  RetirementPlanApply = RetirementPlanApply;\r\n  MatchTypes = MatchTypes;\r\n  EmployeeContributionModel = EmployeeContributionModel;\r\n\r\n  vm: Retirement;\r\n  deductions: Deduction[];\r\n  currentDeductionItem: CompanyDeductionItem;\r\n\r\n  isNew = false;\r\n  private cancelSave = false;\r\n\r\n  constructor(\r\n      private editorService: CompanyDeductionEditorService,\r\n      private hostEl: ElementRef,\r\n      private logger: Logger,\r\n      private router: Router,\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.deductions = this.editorService.deductions;\r\n    this.vm = new Retirement();\r\n    this.loadVm();\r\n\r\n    setTimeout(() => this.hostEl.nativeElement.scrollIntoView()); // must delay one tick\r\n  }\r\n\r\n  done(): void {\r\n    this.editorService.endEdit();\r\n    this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n  }\r\n  cancel(): void {\r\n    this.editorService.endEdit();\r\n    this.cancelSave = true;\r\n    this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n  }\r\n  delete() {\r\n    this.editorService.endEdit();\r\n    this.editorService.delete(this.currentDeductionItem).subscribe(\r\n      _ => {},\r\n      error => this.logger.error(error)\r\n    );\r\n    this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n  }\r\n\r\n  canLeaveAfterSave(): Observable<any> {\r\n    if (this.cancelSave) {\r\n      this.cancelSave = false;\r\n      return of(true);\r\n    }\r\n    return this.save().pipe(map(d => {\r\n      this.editorService.endEdit();\r\n      return true;\r\n    }));\r\n  }\r\n  get showAdditionalPlans(): boolean {\r\n    const vm = this.vm;\r\n    return vm.plan &&\r\n           (vm.planType || vm.plan === RetirementPlans.Plan403B ) && // Has plan and plan type except 403b\r\n           !(vm.plan === RetirementPlans.IRA &&\r\n             vm.planType === RetirementPlanTypes.SepIRA);  // but not for SEP IRA\r\n  }\r\n\r\n  private save(): Observable<any> {\r\n    this.vmToEntity();\r\n    return this.editorService.save();\r\n  }\r\n  private vmToEntity(): void {\r\n    if (!this.currentDeductionItem) {\r\n      return;\r\n    }\r\n    this.currentDeductionItem.name = this.vm.name.trim();\r\n    this.currentDeductionItem.abbreviation = this.vm.abbreviation.trim();\r\n\r\n    const prev = this.currentDeductionItem.companyDeductions[0];\r\n    let target: CompanyDeduction;\r\n    let changedType = false;\r\n    const tid = buildRetirementTypeId(this.vm);\r\n    if (tid !== prev.deductionCodeTypeId) {\r\n      // change type: remove previous and create new one\r\n      prev.isRemoved = true;\r\n      target = this.editorService.createByCodeTypeId(tid);\r\n      this.currentDeductionItem.companyDeductions.push(target);\r\n      changedType = true;\r\n    } else {\r\n      target = prev;\r\n    }\r\n    this.saveRetirementsProperties(target);\r\n  }\r\n\r\n  private saveRetirementsProperties(cd: CompanyDeduction): void {\r\n    cd.description  = this.vm.name;\r\n    cd.abbreviation = this.vm.abbreviation;\r\n  }\r\n\r\n  private loadVm(): void {\r\n    const retirementDeduction = this.editorService.companyDeductionItems.find(\r\n      d => d.deduction.codeGroupId === 1);\r\n\r\n    let cd: CompanyDeductionItem;\r\n    this.isNew = !retirementDeduction;\r\n    if (retirementDeduction) {\r\n      // edit an existing one\r\n      cd = this.editorService.editCompanyDeductionItem(retirementDeduction);\r\n    } else {\r\n      // create new retirement deduction\r\n      const newRetirementType = this.deductions.find(d => d.codeType === '401K');\r\n      cd = this.editorService.create(newRetirementType, '1');\r\n    }\r\n\r\n    const baseDed = cd.companyDeductions[0];\r\n    this.currentDeductionItem = cd;\r\n    this.currentDeductionItem.isDirty = true;\r\n\r\n    this.vm = {\r\n      retirementTypeName: this.vm.retirementTypeName,\r\n      plan: getPlanFrom(baseDed.deductionCodeTypeId),\r\n      planType: getPlanTypeFrom(baseDed.deductionCodeTypeId),\r\n      htmlDescription: cd.deduction.definition,\r\n      name: cd.name || cd.deduction.defaultDescription || '',\r\n      abbreviation: cd.abbreviation || cd.deduction.defaultAbbreviation || '',\r\n      canChangeName: cd.deduction.canChangeDescription,\r\n      canChangeAbbreviation: cd.deduction.canChangeAbbreviation,\r\n    };\r\n  }\r\n\r\n  configureEditorForPlan(): void {\r\n    this.vm.planType = getDefaultPlanTypeForPlan(this.vm.plan);\r\n    this.configureEditor();\r\n  }\r\n\r\n  configureEditor(): void {\r\n    const deduction = this.getDeduction();\r\n    this.setDescriptionPlan(deduction);\r\n  }\r\n\r\n  setDescriptionPlan(deduction: Deduction) {\r\n    if (deduction) {\r\n      this.vm.htmlDescription = deduction.definition;\r\n      this.vm.canChangeName = deduction.canChangeDescription;\r\n      this.vm.canChangeAbbreviation = deduction.canChangeAbbreviation;\r\n\r\n      this.vm.name = (deduction.defaultDescription || 'Deduction 1').trim();\r\n      this.vm.abbreviation = (deduction.defaultAbbreviation || 'RET').trim();\r\n    } else {\r\n      this.vm.htmlDescription = null;\r\n      this.vm.canChangeName = false;\r\n      this.vm.canChangeAbbreviation = false;\r\n      this.vm.name = null;\r\n      this.vm.abbreviation = null;\r\n    }\r\n  }\r\n\r\n  getDeduction(): Deduction {\r\n    if (!this.deductions || this.vm.plan === null) {\r\n      return null;\r\n    }\r\n    if (this.vm.plan === RetirementPlans.Plan403B) {\r\n      const code403 = build403BTypeId(this.vm);\r\n      return this.deductions.find(d => d.codeTypeId === code403);\r\n    }\r\n    if (this.vm.plan === RetirementPlans.IRA) {\r\n      const codeIRA = buildIRATypeId(this.vm);\r\n      return this.deductions.find(d => d.codeTypeId === codeIRA);\r\n    }\r\n    if (this.vm.plan === RetirementPlans.Plan401K) {\r\n      const code401 = build401KTypeId(this.vm);\r\n      return this.deductions.find(d => d.codeTypeId === code401);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction getPlanFrom(codeTypeId: number): RetirementPlans {\r\n  switch (codeTypeId) {\r\n    case 7:\r\n    case 8:\r\n    case 9:\r\n    case 10:\r\n    case 11:\r\n    case 14:\r\n    case 15:\r\n    case 16:\r\n    case 60:\r\n    case 65:\r\n    case 71: return RetirementPlans.Plan401K;\r\n\r\n    case 63:\r\n    case 13: // 'SMPIRA'\r\n    case 17:  return RetirementPlans.IRA;\r\n\r\n    case 12:  return RetirementPlans.Plan403B;\r\n    default:\r\n      throw new Error('codeTypeId not supported:' + codeTypeId);\r\n  }\r\n}\r\n\r\nfunction getPlanTypeFrom(codeTypeId: number): RetirementPlanTypes {\r\n  switch (codeTypeId) {\r\n    case 60:\r\n    case 10: return RetirementPlanTypes.P401KTraditional;\r\n    case 65:\r\n    case 15: return RetirementPlanTypes.P401KSafeHarbor;\r\n    case 71:\r\n    case 19: return RetirementPlanTypes.P401KSimple;\r\n    case 63:\r\n    case 13: return RetirementPlanTypes.SimpleIRA;\r\n    case 17: return RetirementPlanTypes.SepIRA;\r\n    case 12:  // 403B\r\n    case 62:\r\n    default: return null;\r\n  }\r\n}\r\n\r\nfunction buildRetirementTypeId(vm: Retirement): number {\r\n  switch (vm.plan) {\r\n    case RetirementPlans.IRA: return buildIRATypeId(vm);\r\n    case RetirementPlans.Plan403B: return build403BTypeId(vm);\r\n    case RetirementPlans.Plan401K: return build401KTypeId(vm);\r\n    default: return null;\r\n  }\r\n}\r\nfunction buildIRATypeId(vm: Retirement): number {\r\n  /*\r\n    13    Simple IRA\r\n    17    SEP IRA\r\n    63    Simple IRA Catch Up\r\n   */\r\n  switch (vm.planType) {\r\n    case RetirementPlanTypes.SimpleIRA: return 13; // Simple IRA  (overlap with 401K ??? )\r\n    case RetirementPlanTypes.SepIRA: return 17;  // SEP IRA\r\n    default: return null;\r\n  }\r\n}\r\nfunction build403BTypeId(vm: Retirement): number {\r\n  /*\r\n    62  403B Catch Up\r\n    12  403B  (shares name with 401K) ???\r\n    61  401K Tiered Catch Up  (shared with 403B ???? )\r\n   */\r\n  return 12; //  12  403B  (shares name with 401K) ???\r\n}\r\nfunction build401KTypeId(vm: Retirement): number {\r\n  /*\r\n     7  Safe Harbor Roth 401k Match\r\n     8  Safe Harbor Roth 401k NE\r\n     9  Roth 401K Tiered\r\n    10  401K\r\n    11  401K Tiered\r\n  x 12  401K (shared with 403B ???? )\r\n    14  Roth 401K\r\n    15  Safe Harbor 401K\r\n    16  Simple 401K\r\n    18  Safe Harbor 401K (duplicate??)\r\n    19  Simple 401K\r\n\r\n    60  401K Catch Up\r\n    x 61  401K Tiered Catch Up  (shared with 403B ???? )\r\n    64  Roth 401K Catch Up\r\n    65  Safe H 401K Catch Up\r\n    66  Simple 401K Catch Up\r\n    67  Roth 401K Tiered Catch Up\r\n    68  Safe H Roth 401K NE Catchup\r\n    69  Safe H 401K Match Catch Up\r\n    70  Safe H Roth 401K Match Catchup\r\n    71  Simple 401K Catch Up\r\n  */\r\n\r\n  switch (vm.planType) {\r\n    case RetirementPlanTypes.P401KSimple: return 19;\r\n    case RetirementPlanTypes.P401KSafeHarbor: return 15;\r\n    case RetirementPlanTypes.P401KTraditional: return 10;\r\n    default: return null;\r\n  }\r\n}\r\n\r\nfunction getDefaultPlanTypeForPlan(plan: RetirementPlans): RetirementPlanTypes {\r\n  switch (plan) {\r\n    case RetirementPlans.IRA: return RetirementPlanTypes.SimpleIRA;\r\n    case RetirementPlans.Plan403B: return null; // no planType\r\n    case RetirementPlans.Plan401K: return RetirementPlanTypes.P401KTraditional;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","<div>\r\n  <h2>Add Deduction</h2>\r\n\r\n  <ng-container *ngIf=\"catalog\">\r\n    <sp-accordion *ngFor=\"let category of catalog\"\r\n                  [title]=\"category.category\"\r\n                  [(expanded)]=\"category.expanded\" >\r\n      <ul>\r\n        <li *ngFor=\"let title of getListOfDeductionTitles(category.deductionTitles)\"\r\n            class=\"accordion-menu-item\">\r\n          <span *ngIf=\"title.enabled; else notAvailable\"\r\n             class=\"item-available\"\r\n             (click)=\"selectType(title)\"\r\n             >\r\n            <i class=\"material-icons icon\">add</i>\r\n            {{ title.label }}\r\n          </span>\r\n          <ng-template #notAvailable>\r\n            <span class=\"item-unavailable\">{{ title.label }}</span>\r\n          </ng-template>\r\n        </li>\r\n      </ul>\r\n    </sp-accordion>\r\n  </ng-container>\r\n</div>\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { DeductionCategory, DeductionTitle, DeductionTitleDictionary } from '@shared/deductions';\r\nimport { dictionaryToArray } from '@core';\r\n\r\n@Component({\r\n  selector: 'sp-deductions-catalog',\r\n  templateUrl: './deductions-catalog.component.html',\r\n})\r\nexport class DeductionsCatalogComponent {\r\n  @Input()\r\n  catalog: DeductionCategory[];\r\n\r\n  @Output() deductionTypeSelected = new EventEmitter<DeductionTitle>();\r\n\r\n  getListOfDeductionTitles(titles: DeductionTitleDictionary): DeductionTitle[] {\r\n    return dictionaryToArray(titles)\r\n            .filter(t => !t.isHidden)\r\n            .sort((a, b) =>  a.order - b.order);\r\n  }\r\n\r\n  selectType(dt: DeductionTitle): void {\r\n    this.deductionTypeSelected.emit(dt);\r\n  }\r\n}\r\n","<sp-model [model]=\"model\">\r\n  <div class=\"d-flex\">\r\n    <div class=\"amount-or-percent-type\">\r\n      <sp-radio-group name=\"matchPayType\" [propertyName]=\"isAmountPropertyName\" class=\"select-indicator-off\">\r\n        <sp-radio-button id=\"rIsAmount\" (click)=\"setIsAmount(true)\" [value]=\"true\">$</sp-radio-button>\r\n        <sp-radio-button id=\"rIsPercent\" (click)=\"setIsAmount(false)\" [value]=\"false\">%</sp-radio-button>\r\n      </sp-radio-group>\r\n    </div>\r\n    <sp-input #inp *ngIf=\"model && isAmountPropertyName &&\r\n                     model[isAmountPropertyName] !== undefined &&\r\n                     model[isAmountPropertyName] !== null\"\r\n              name=\"iValue\" [propertyName]=\"propertyNameValue\"\r\n              [maskType]=\"model[isAmountPropertyName] ? 'currency' : 'percent'\"\r\n              (blur)=\"setValue(inp.getValue())\"\r\n              class=\"aop-value\">\r\n    </sp-input>\r\n  </div>\r\n</sp-model>\r\n"],"sourceRoot":""}