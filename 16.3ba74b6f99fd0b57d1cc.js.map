{"version":3,"sources":["webpack:///./src/app/review/review-company-data.component.html","webpack:///./src/app/review/review-company-data.component.ts","webpack:///./src/app/review/review-complete.component.html","webpack:///./src/app/review/review-complete.component.ts","webpack:///./src/app/review/review-container.component.html","webpack:///./src/app/review/review-container.component.ts","webpack:///./src/app/review/review-data.component.html","webpack:///./src/app/review/review-data.component.ts","webpack:///./src/app/review/review-employee-data.component.html","webpack:///./src/app/review/review-employee-data.component.ts","webpack:///./src/app/review/review-validation.component.html","webpack:///./src/app/review/review-validation.component.ts","webpack:///./src/app/review/review.module.ts","webpack:///./src/app/shared/nav-bottom.component.ts.NavBottomComponent.html"],"names":[],"mappings":"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","file":"16.3ba74b6f99fd0b57d1cc.js","sourcesContent":["<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <table class=\"table\">\r\n      <tbody>\r\n        <tr>\r\n          <th>{{ company | companyKind }}</th>\r\n          <td class=\"multi-row\">\r\n            <span>{{ company.legalName || 'missing' }}</span>\r\n            <span *ngIf=\"!company.isHousehold && company.name\">{{ company.name }}</span>\r\n          </td>\r\n          <td>\r\n            <a [routerLink]=\"companyLink\">Edit</a>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>Bank Account</th>\r\n          <td class=\"multi-row\">\r\n            <table class=\"table-inner\">\r\n              <tr>\r\n                <td>Bank Name:</td>\r\n                <td>{{ company.bankName || 'missing or invalid' }}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Routing Number:</td>\r\n                <td>{{ company.bankAccountRn }}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Account Number:</td>\r\n                <td>{{ company.bankAccountNumber }}</td>\r\n              </tr>\r\n            </table>\r\n          </td>\r\n          <td>\r\n            <a [routerLink]=\"bankAccountLink\">Edit</a>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>Federal Tax</th>\r\n          <td class=\"multi-row\">\r\n            <table class=\"table-inner\">\r\n              <tbody>\r\n                <tr>\r\n                    <td>FEIN:</td>\r\n                    <td>{{ company.fein || 'missing' }}</td>\r\n                </tr>\r\n                <tr *ngIf=\"futaTax\">\r\n                    <td>FUTA Status:</td>\r\n                    <td>{{ futaTax.isExempt | subjectexempt }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n          <td>\r\n            <a [routerLink]=\"fedTaxLink\">Edit</a>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr class=\"review-section-states\">\r\n          <th>State Taxes</th>\r\n          <td class=\"multi-row\">\r\n            <table class=\"table-inner\" *ngFor=\"let stateTax of stateAndLocalTaxSummaries\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Tax State:</td>\r\n                  <td>{{stateTax.state}}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>{{stateTax.state}} Tax ID Number:</td>\r\n                  <td>{{stateTax.swhEin || 'Missing'}}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>{{stateTax.state}} Unemployment Tax ID Number:</td>\r\n                  <td> {{stateTax.suiEin || 'Missing'}}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>{{stateTax.state}} State Unemployment Rate:</td>\r\n                  <td>{{stateTax.suiFound ? stateTax.suiRate + '%' : 'Missing'}}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>{{stateTax.state}} State Unemployment Status:</td>\r\n                  <td>{{stateTax.suiExempt | subjectexempt}}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n          <td>\r\n            <a [routerLink]=\"companyTaxLink\">Edit</a>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr class=\"review-section-locals\" *ngIf=\"localTaxesTaxSummaries && localTaxesTaxSummaries.length > 0\">\r\n            <th>Local Taxes</th>\r\n            <td class=\"multi-row\">\r\n              <table class=\"table-inner\" *ngFor=\"let localTaxSummary of localTaxesTaxSummaries\">\r\n                <tbody>\r\n                <ng-container *ngFor=\"let localTax of localTaxSummary.localTaxes\">\r\n                  <tr>{{ localTax.localTaxAuthority }}</tr>\r\n                  <table class=\"table-inner\">\r\n                      <tr>\r\n                          <td>EIN:</td>\r\n                          <td>{{ localTax.localTaxEin }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Status:</td>\r\n                            <td>{{ localTax.isExempt | subjectexempt }}</td>\r\n                        </tr>\r\n                  </table>\r\n                  </ng-container>\r\n                </tbody>\r\n              </table>\r\n            </td>\r\n            <td>\r\n              <a [routerLink]=\"companyTaxLink\">Edit</a>\r\n            </td>\r\n          </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\nimport {\r\n  Company, HouseholdFilers, HouseholdFilersStatus, CompanyTax\r\n} from '@model';\r\n\r\nimport { getHouseholdFilerDisplayVm, HouseholdFilerDisplayVm } from '@utils/household-filer-utils';\r\nimport { StateAndLocalTaxSummary } from './review-container.component';\r\n\r\n\r\n@Component({\r\n  selector: 'sp-review-company-data',\r\n  templateUrl: './review-company-data.component.html'\r\n})\r\nexport class ReviewCompanyDataComponent implements OnInit {\r\n  @Input() company: Company;\r\n  @Input() stateAndLocalTaxSummaries: StateAndLocalTaxSummary[];\r\n  @Input() futaTax: CompanyTax;\r\n  @Input() householdFilers: HouseholdFilers;\r\n\r\n  HouseholdFilersStatus = HouseholdFilersStatus;\r\n  householdFilersVm: HouseholdFilerDisplayVm;\r\n\r\n  bankAccountLink = WellKnownRoutes.BankAccount;\r\n  companyLink = WellKnownRoutes.CompanyInfo;\r\n  companyTaxLink = WellKnownRoutes.CompanyTaxInfo;\r\n  fedTaxLink = WellKnownRoutes.CompanyTaxInfo;\r\n\r\n  localTaxesTaxSummaries: StateAndLocalTaxSummary[] = [];\r\n\r\n  ngOnInit() {\r\n    this.householdFilersVm = getHouseholdFilerDisplayVm(this.householdFilers);\r\n    this.localTaxesTaxSummaries = this.stateAndLocalTaxSummaries.filter(t => t.localTaxes && t.localTaxes.length > 0);\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"company\" class=\"d-flex justify-content-end\">\r\n    <button type=\"text\" (click)=\"canApprove ? approveCompanyData() : confirmReady()\" class=\"btn btn-cta\">\r\n      {{ canApprove ? 'Approve Review & Continue to Documents' : 'Continue to Documents' }}\r\n    </button>\r\n</div>\r\n","import { Component, ElementRef, ViewChild, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountStatus, Company } from '@model';\r\nimport { CompanyService } from '@entity';\r\nimport { SessionService } from '@session';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\n@Component({\r\n  selector: 'sp-review-complete',\r\n  templateUrl: './review-complete.component.html'\r\n})\r\nexport class ReviewCompleteComponent implements OnInit {\r\n  @ViewChild('confirmReadyContent')\r\n  confirmReadyContent: ElementRef;\r\n  @Input() company: Company;\r\n  canApprove: boolean;\r\n\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    private sessionService: SessionService,\r\n  )   {}\r\n\r\n  ngOnInit(): void {\r\n    this.sessionService.isAdmin$.pipe(\r\n      first()).subscribe(isAdmin => {\r\n        this.canApprove = !isAdmin && !this.company.hasPriorPayroll;\r\n      });\r\n  }\r\n\r\n  confirmReady() {\r\n    this.sessionService.setAccountStatus(AccountStatus.Docs).subscribe(\r\n      _ => this.router.navigate([WellKnownRoutes.Documents]),\r\n      err => {\r\n        // TODO: Something with error\r\n      }\r\n    );\r\n  }\r\n\r\n  approveCompanyData() {\r\n    this.companyService.createCompanyEvent('CompanyDataVerificationApproved').subscribe(\r\n      _ => this.confirmReady(),\r\n      err => {\r\n        this.sessionService.logger.error('Approval failed');\r\n        // TODO: Something with error\r\n      }\r\n    );\r\n  }\r\n}\r\n","    <div *ngIf=\"isValid$ | async; else invalid\">\r\n      <sp-review-data\r\n        [company]=\"company$ | async\"\r\n        [employees]=\"employees$ | async\"\r\n        [householdFilers]=\"householdFilers$ | async\"\r\n        [stateAndLocalTaxSummaries]=\"stateAndLocalTaxSummaries$ | async\"\r\n        [workLocations]=\"workLocations$ | async\"\r\n        [futaTax]=\"futaTax$ | async\"\r\n      >\r\n      </sp-review-data>\r\n    </div>\r\n\r\n    <ng-template #invalid>\r\n      <sp-review-validation\r\n        [aboutYouErrors] = \"aboutYouErrors$ | async\"\r\n        [bankInfoErrors] = \"bankInfoErrors$ | async\"\r\n        [companyInfoErrors] = \"companyInfoErrors$ | async\"\r\n        [companyTaxErrors] = \"companyTaxErrors$ | async\"\r\n        [employeesErrors] = \"employeesErrors$ | async\"\r\n        [employeeSetupErrors] = \"employeeSetupErrors$ | async\"\r\n        [doneAddingEmployees] = \"doneAddingEmployees$ | async\"\r\n        [returnTo] = \"returnTo$ | async\"\r\n      >\r\n      </sp-review-validation>\r\n    </ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map, scan, withLatestFrom } from 'rxjs/operators';\r\nimport {\r\n  AddressService,\r\n  CompanyTaxService,\r\n  EmployeeService,\r\n  HouseholdFilersService,\r\n  ReviewService\r\n} from '@entity/entity-services';\r\n\r\nimport { AccountStatus, Address, Company, CompanyTax, Employee, HouseholdFilers, TaxTypeCode } from '@model';\r\nimport { getFullName, Indexable, WellKnownRoutes } from '@core';\r\nimport { getEmployeeId } from '@entity';\r\nimport { SessionService } from '@session';\r\nimport { ValidationError } from '@validation';\r\n\r\n /** Summary of company state taxes for review  */\r\nexport class StateAndLocalTaxSummary {\r\n  constructor(public state: string) {}\r\n\r\n  swhFound = false;\r\n  swhEin = '';\r\n\r\n  suiFound = false;\r\n  suiExempt = false;\r\n  suiEin = '';\r\n  suiRate: number;\r\n\r\n  localTaxes: LocalTaxSummary[] = [];\r\n}\r\n\r\nexport class LocalTaxSummary {\r\n  constructor(public localTaxEin: string, public localTaxAuthority: string, public isExempt: boolean) {}\r\n}\r\n\r\n@Component({\r\n  selector: 'sp-review-container',\r\n  templateUrl: './review-container.component.html'\r\n})\r\nexport class ReviewContainerComponent implements OnInit {\r\n  aboutYouErrors$: Observable<string[]>;\r\n  bankInfoErrors$: Observable<string[]>;\r\n  companyInfoErrors$: Observable<string[]>;\r\n  companyTaxErrors$: Observable<{ key: string; messages: string[] }[]>;\r\n  employeesErrors$: Observable<{ employee: Employee; messages: string[] }[]>;\r\n  employeeSetupErrors$: Observable<string[]>;\r\n  isValid$: Observable<boolean>;\r\n\r\n  company$: Observable<Company>;\r\n  employees$: Observable<Employee[]>;\r\n  householdFilers$: Observable<HouseholdFilers>;\r\n  returnTo$: Observable<{ label: string, link: string }>;\r\n  stateAndLocalTaxSummaries$: Observable<StateAndLocalTaxSummary[]>;\r\n  futaTax$: Observable<CompanyTax>;\r\n  workLocations$: Observable<Address[]>;\r\n\r\n   // TODO: replace once tax.categoryCode is present\r\n   swhTaxTermination = '0000-001';\r\n   suiTaxTermination = '0000-010';\r\n\r\n  constructor(\r\n    private addressService: AddressService,\r\n    private companyTaxService: CompanyTaxService,\r\n    private employeeService: EmployeeService,\r\n    private householdFilersService: HouseholdFilersService,\r\n    private reviewService: ReviewService,\r\n    private sessionService: SessionService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    window.scrollTo(0, 0);\r\n\r\n    this.returnTo$ = combineLatest(\r\n      this.sessionService.currentCompany$,\r\n      this.sessionService.isAdmin$,\r\n      ).pipe(\r\n      filter(([company]) => !!company), // TODO: Unnecessary after PR #506\r\n      map(([company, isAdmin]) => {\r\n        if (company.status === AccountStatus.Open || company.status === AccountStatus.Test) {\r\n          return { label: 'Return to Dashboard', link: WellKnownRoutes.Dashboard };\r\n        } else {\r\n          return {\r\n            label: 'Return to AccountView',\r\n            link: isAdmin ? WellKnownRoutes.AdminAccountView : WellKnownRoutes.AccountView\r\n          };\r\n        }\r\n      })\r\n    );\r\n\r\n    this.isValid$ = this.reviewService.isValid$;\r\n    this.dataReview();\r\n    this.validationReview();\r\n  }\r\n\r\n  private dataReview() {\r\n    this.company$ = this.sessionService.currentCompany$;\r\n\r\n    this.stateAndLocalTaxSummaries$ = this.companyTaxService.stateAndLocalTaxes$.pipe(\r\n      map(taxes => taxes.filter(t => !t.isRemoved)),\r\n      map(taxes => {\r\n\r\n        const summaries = taxes.reduce((acc, t) => {\r\n\r\n          if (t.taxTypeCode === TaxTypeCode.State) {\r\n            if (t.mtsTaxCode.endsWith(this.swhTaxTermination)) {\r\n              const sum = getSummary(t.stateCode);\r\n              sum.swhFound = true;\r\n              sum.swhEin = t.appliedForEin ? 'APPLIED FOR' : t.ein;\r\n            }\r\n\r\n            if (t.mtsTaxCode.endsWith(this.suiTaxTermination)) {\r\n              const sum = getSummary(t.stateCode);\r\n              sum.suiFound = true;\r\n              sum.suiExempt = t.isExempt;\r\n              sum.suiEin = t.appliedForEin ? 'APPLIED FOR' : t.ein;\r\n              sum.suiRate = t.rate;\r\n            }\r\n          } else {\r\n            const sum = getSummary(t.stateCode);\r\n            sum.localTaxes.push(new LocalTaxSummary(t.appliedForEin ? 'APPLIED FOR' : t.ein, t.name, t.isExempt));\r\n          }\r\n\r\n          return acc;\r\n\r\n          function getSummary(state: string): StateAndLocalTaxSummary {\r\n            return acc[state] || (acc[state] = new StateAndLocalTaxSummary(state));\r\n          }\r\n        }, {} as { [state: string]: StateAndLocalTaxSummary });\r\n        return Object.keys(summaries).map(st => summaries[st]);\r\n      })\r\n    );\r\n\r\n    this.futaTax$ = this.companyTaxService.federalTaxes$.pipe(\r\n      map(taxes => taxes.find(t => t.mtsTaxCode.endsWith(this.suiTaxTermination)))\r\n    );\r\n\r\n    this.employees$ = this.employeeService.entities$.pipe(\r\n      map(employees => employees.filter(emp => !emp.isRemoved))\r\n    );\r\n\r\n    this.workLocations$ = this.addressService.workAddresses$;\r\n\r\n    this.householdFilers$ = this.householdFilersService.householdFilers$;\r\n  }\r\n\r\n  private validationReview(): void {\r\n\r\n    this.aboutYouErrors$ = this.reviewService.aboutYouErrors$.pipe(\r\n      map(ReviewContainerComponent.getMessages)\r\n    );\r\n\r\n    this.bankInfoErrors$ = this.reviewService.bankInfoErrors$.pipe(\r\n      map(ReviewContainerComponent.getMessages)\r\n    );\r\n\r\n    this.companyInfoErrors$ = this.reviewService.companyInfoErrors$.pipe(\r\n      map(ReviewContainerComponent.getMessages)\r\n    );\r\n\r\n    this.companyTaxErrors$ = this.reviewService.companyTaxErrors$.pipe(\r\n      map(validationErrors => {\r\n        const groups = validationErrors.reduce(\r\n          (g, error) => {\r\n            // For missing state taxes, push error to each missing state key\r\n            if (error.context.missingTaxStates) {\r\n              error.context.missingTaxStates.forEach((state: string) => {\r\n                (g[state] = g[state] || []).push(error);\r\n              });\r\n              return g;\r\n            }\r\n\r\n            const key = error.validator.group === 'fedTax' ? 'Federal' : error.context.model.state;\r\n            (g[key] = g[key] || []).push(error);\r\n            return g;\r\n          },\r\n          {} as Indexable\r\n        );\r\n        return Object.keys(groups)\r\n          .map(key => {\r\n            return {\r\n              key,\r\n              messages: ReviewContainerComponent.getMessages(groups[key])\r\n            };\r\n          })\r\n          .sort((a, b) =>\r\n            // Sort 'Federal' first, then states alphabetically\r\n            (a.key === 'Federal' ? '' : a.key).localeCompare(b.key === 'Federal' ? '' : b.key)\r\n          );\r\n      })\r\n    );\r\n\r\n    this.employeesErrors$ = this.reviewService.employeesErrors$.pipe(\r\n      map(ves => ves.filter(ve => ve.validator.group !== 'employeeSetup')),\r\n      withLatestFrom(this.employeeService.entities$),\r\n      map(([validationErrors, employees]) => {\r\n        const groups = validationErrors\r\n          .reduce((g, error) => {\r\n            if (error.validator.group === 'employeeSetup') {\r\n              return g;\r\n            }\r\n            const employeeId = getEmployeeId(error.context, employees);\r\n            if (employeeId) {\r\n              (g[employeeId] = g[employeeId] || []).push(error);\r\n            }\r\n            return g;\r\n          },\r\n          {} as Indexable\r\n        );\r\n        return Object.keys(groups)\r\n          .map(employeeId => {\r\n            const employee = employees.find(emp => emp.id === employeeId);\r\n            return {\r\n              employee,\r\n              messages: ReviewContainerComponent.getMessages(groups[employeeId])\r\n            };\r\n          })\r\n          .sort((a, b) => getFullName(a.employee).localeCompare(getFullName(b.employee)));\r\n      })\r\n    );\r\n\r\n    this.employeeSetupErrors$ = this.reviewService.employeesErrors$.pipe(\r\n      map(ves => ves.filter(ve => ve.validator.group === 'employeeSetup')),\r\n      map(ReviewContainerComponent.getMessages)\r\n    );\r\n  }\r\n\r\n  private static getMessages(validationErrors: ValidationError[]) {\r\n    return validationErrors\r\n      .map(validationError => validationError.getErrorMessage());\r\n  }\r\n}\r\n","<div class=\"static-nav d-flex flex-column\">\r\n  <header class=\"header-bold\">\r\n    <div class=\"standard\">\r\n      <h1>Review</h1>\r\n      <p>\r\n        Take a moment to review the information you have entered. If everything is correct, push the\r\n        <b>\r\n          <i>Continue to Documents</i>\r\n        </b> button at the bottom of the page. We’ll have you sign a few documents and you can start payroll.\r\n      </p>\r\n    </div>\r\n  </header>\r\n  <div class=\"standard\" *ngIf=\"company\">\r\n\r\n    <a [routerLink]=\"[detailsLink]\" class=\"icon-right d-flex font-weight-bold mb-4\">\r\n      See complete details\r\n      <i class=\"material-icons icon\">arrow_forward</i>\r\n    </a>\r\n    <h3 class=\"mt-3 mb-3 text-center\">Company</h3>\r\n    <sp-review-company-data [company]=\"company\" [stateAndLocalTaxSummaries]=\"stateAndLocalTaxSummaries\" [householdFilers]=\"householdFilers\" [futaTax]=\"futaTax\"></sp-review-company-data>\r\n\r\n    <h3 class=\"mt-3 mb-3 text-center\">Employees</h3>\r\n    <sp-review-employee-data *ngFor='let employee of employees' [employee]=\"employee\"></sp-review-employee-data>\r\n    <sp-review-complete [company]=\"company\"></sp-review-complete>\r\n\r\n  </div>\r\n  <sp-nav-bottom [back]=\"null\" [next]=\"null\"></sp-nav-bottom>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { getFullName, WellKnownRoutes } from '@core';\r\n\r\nimport {\r\n  Address, Company, Employee,\r\n  HouseholdFilers, HouseholdFilersStatus, CompanyTax\r\n} from '@model';\r\nimport { getHouseholdFilerDisplayVm, HouseholdFilerDisplayVm } from '@utils/household-filer-utils';\r\nimport { StateAndLocalTaxSummary } from './review-container.component';\r\n\r\n@Component({\r\n  selector: 'sp-review-data',\r\n  templateUrl: './review-data.component.html'\r\n})\r\nexport class ReviewDataComponent implements OnInit {\r\n  @Input() company: Company;\r\n  @Input() employees: Employee[];\r\n  @Input() householdFilers: HouseholdFilers;\r\n  @Input() stateAndLocalTaxSummaries: StateAndLocalTaxSummary[];\r\n  @Input() workLocations: Address[];\r\n  @Input() futaTax: CompanyTax;\r\n\r\n  getFullName = getFullName;\r\n  HouseholdFilersStatus = HouseholdFilersStatus;\r\n  householdFilersVm: HouseholdFilerDisplayVm;\r\n\r\n  detailsLink = WellKnownRoutes.AccountView;\r\n\r\n  ngOnInit() {\r\n    this.householdFilersVm = getHouseholdFilerDisplayVm(this.householdFilers);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\" *ngIf=\"employee; else NoData\">\r\n\r\n    <table class=\"table\">\r\n      <tbody>\r\n        <tr>\r\n          <th>Name</th>\r\n          <td>{{getFullName(employee)}}</td>\r\n          <td>\r\n              <a [routerLink]=\"getEeLink(employee)\">Edit</a>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>Status</th>\r\n          <td class=\"text-capitalize\">{{ getHireStatus() }}</td>\r\n          <td></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>SSN</th>\r\n          <td class=\"text-capitalize\">{{ employee.ssn | ssn}}</td>\r\n          <td></td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <th>Taxes</th>\r\n            <td class=\"multi-row\">\r\n              <table class=\"table-inner\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Tax State:</td>\r\n                    <td>{{ (homeAddress$ | async).state }}</td>\r\n                  </tr>\r\n                  <ng-container *ngFor=\"let tax of taxSummaries$ | async\">\r\n                      <tr>\r\n                        <td>{{ getFriendlyName(tax) }}:</td>\r\n                        <td>{{ tax.isExempt | subjectexempt }}</td>\r\n                      </tr>\r\n                    </ng-container>\r\n                </tbody>\r\n              </table>\r\n            </td>\r\n            <td></td>\r\n        </tr>\r\n\r\n        <ng-container *ngIf=\"pm && !employee.isTerminated; else noPaymentAccount\">\r\n          <tr>\r\n            <th>Payment Method</th>\r\n            <td class=\"multi-row\">\r\n              <table *ngIf=\"pm.split1IsActive\" class=\"table-inner\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Type:</td>\r\n                    <td>{{pm.split1AccountType}} {{ renderAccountType(pm.split1AccountType) }}</td>\r\n                  </tr>\r\n                  <ng-template [ngIf]=\"pm.split1AccountType !== PrintedCheck\">\r\n                    <tr>\r\n                      <td>Bank Name:</td>\r\n                      <td>{{pm.split1AccountBankName || 'missing or invalid'}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Routing Number:</td>\r\n                      <td>{{pm.split1AccountRn}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Account Number:</td>\r\n                      <td>{{pm.split1AccountNumber}}</td>\r\n                    </tr>\r\n                  </ng-template>\r\n                </tbody>\r\n              </table>\r\n              <table *ngIf=\"pm.split2IsActive\" class=\"table-inner\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Type:</td>\r\n                      <td>{{pm.split2AccountType}} {{ renderAccountType(pm.split2AccountType) }}</td>\r\n                    </tr>\r\n                    <ng-template [ngIf]=\"pm.split2AccountType !== PrintedCheck\">\r\n                      <tr>\r\n                        <td>Bank Name:</td>\r\n                        <td>{{pm.split2AccountBankName || 'missing or invalid'}}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Routing Number:</td>\r\n                        <td>{{pm.split2AccountRn}}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Account Number:</td>\r\n                        <td>{{pm.split2AccountNumber}}</td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </tbody>\r\n                </table>\r\n                <table class=\"table-inner\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Type:</td>\r\n                        <td>{{pm.defaultAccountType}} {{ renderAccountType(pm.defaultAccountType) }}</td>\r\n                      </tr>\r\n                      <ng-template [ngIf]=\"pm.defaultAccountType !== PrintedCheck\">\r\n                        <tr>\r\n                          <td>Bank Name:</td>\r\n                          <td>{{pm.defaultAccountBankName || 'missing or invalid'}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Routing Number:</td>\r\n                          <td>{{pm.defaultAccountRn}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Account Number:</td>\r\n                          <td>{{pm.defaultAccountNumber}}</td>\r\n                        </tr>\r\n                      </ng-template>\r\n                    </tbody>\r\n                  </table>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n        </ng-container>\r\n\r\n        <ng-template #noPaymentAccount>\r\n          <tr>\r\n            <td>\r\n              <span *ngIf=\"employee.isTerminated; else missingPaymentAccount\">\r\n                No payment accounts because {{ employee.firstName }} is terminated.\r\n              </span>\r\n              <ng-template #missingPaymentAccount>\r\n                Payment account(s) missing\r\n              </ng-template>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <ng-template #NoData>\r\n    <div class=\"card-body\">\r\n      No Employee Data Provided\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Employee, Address, EmployeePaymentMethod, PaymentAccountType, PaymentStrategy, TaxExemptionReasonsCodes } from '@model';\r\nimport { EntitySelectors } from '@entity';\r\nimport { getFullName } from '@core/utils/ee-utils';\r\nimport { WellKnownRoutes } from '@core';\r\nimport { EmployeeTax } from '@app/model/entities';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nexport class EmployeeTaxSummary {\r\n  constructor(public name: string) {}\r\n  isExempt = false;\r\n}\r\n\r\n@Component({\r\n  selector: 'sp-review-employee-data',\r\n  templateUrl: './review-employee-data.component.html'\r\n})\r\nexport class ReviewEmployeeDataComponent implements OnInit {\r\n  @Input()\r\n  employee: Employee;\r\n  homeAddress$: Observable<Address>;\r\n  workAddress: Address;\r\n  PrintedCheck = PaymentAccountType.PrintedCheck;\r\n  PaymentAccountType = PaymentAccountType;\r\n  pm: EmployeePaymentMethod;\r\n  taxSummaries$: Observable<EmployeeTax[]>;\r\n\r\n  suiTaxTermination = '0000-010';\r\n  fedSuiPrefix = 'FE';\r\n\r\n  constructor(private entitySelectors: EntitySelectors) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.homeAddress$ = this.entitySelectors.address.entities$.pipe(\r\n      map(addresses => addresses.filter(ar => ar.id === this.employee.homeAddressId).shift())\r\n    );\r\n\r\n    this.entitySelectors.employeePaymentMethod.entities$.subscribe(ar => {\r\n      this.pm = ar.find(p => p.employeeId === this.employee.id);\r\n    });\r\n\r\n    this.taxSummaries$ = this.entitySelectors.employeeTax.entities$.pipe(\r\n      map(taxes => taxes.filter(t => !t.isRemoved\r\n        && t.employeeId === this.employee.id\r\n        && t.mtsTaxCode.endsWith(this.suiTaxTermination)))\r\n    );\r\n\r\n  }\r\n\r\n  renderAccountType(accountType: PaymentAccountType): string {\r\n    return accountType !== PaymentAccountType.PrintedCheck ? 'Account' : '';\r\n  }\r\n\r\n  getFullName = getFullName;\r\n\r\n  getHireStatus() {\r\n    if (!this.employee) {\r\n      return;\r\n    }\r\n    if (this.employee.isNewHire) {\r\n      return 'New Hire';\r\n    }\r\n    if (this.employee.isTerminated) {\r\n      return 'Terminated';\r\n    }\r\n    return 'Active';\r\n  }\r\n\r\n  getFilingStatus(filingStatus: string) {\r\n    switch (filingStatus) {\r\n      case 'S': {\r\n        return 'Single';\r\n      }\r\n      case 'M': {\r\n        return 'Married';\r\n      }\r\n      case 'H': {\r\n        return 'Head of Household';\r\n      }\r\n    }\r\n  }\r\n\r\n  getFriendlyName(tax: EmployeeTax) {\r\n    if (tax.mtsTaxCode.endsWith(this.suiTaxTermination)) {\r\n      if (tax.mtsTaxCode.startsWith(this.fedSuiPrefix)) {\r\n        return 'Federal Unemployment Status';\r\n      } else {\r\n        return tax.stateCode + ' State Unemployment Status';\r\n      }\r\n    } else {\r\n      return tax.name;\r\n    }\r\n  }\r\n  getExemptReason(exemptReasonCode: string) {\r\n    return TaxExemptionReasonsCodes.getDisplayName(exemptReasonCode);\r\n  }\r\n\r\n  getSplitAmount(val: number) {\r\n    if (this.pm.strategy === PaymentStrategy.SplitAmount) {\r\n      return `$ ${val}`;\r\n    }\r\n\r\n    if (this.pm.strategy === PaymentStrategy.SplitPercent) {\r\n      return `${val} %`;\r\n    }\r\n  }\r\n\r\n  getEeLink(emp: Employee) {\r\n    return WellKnownRoutes.Employees + '/' + emp.id;\r\n  }\r\n}\r\n","<div class=\"static-nav d-flex flex-column\">\r\n  <header class=\"header-bold\">\r\n    <div class=\"standard\">\r\n      <h1>Validation Issues</h1>\r\n      <p>\r\n        Some of your payroll information is missing or invalid.\r\n        Correct these issues before completing your payroll application.\r\n      </p>\r\n    </div>\r\n  </header>\r\n  <div class=\"standard\">\r\n\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <table class=\"table\">\r\n          <tbody>\r\n            <tr *ngIf=\"aboutYouErrors?.length;\">\r\n              <th>About You</th>\r\n              <td class=\"multi-row\">\r\n                <ul>\r\n                  <li *ngFor=\"let error of aboutYouErrors\">{{ error }}</li>\r\n                </ul>\r\n              </td>\r\n              <td>\r\n                <a [routerLink]=\"aboutYouLink\">Edit</a>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"companyInfoErrors?.length;\">\r\n              <th>Company Information</th>\r\n              <td>\r\n                <ul>\r\n                  <li *ngFor=\"let error of companyInfoErrors\">{{ error }}</li>\r\n                </ul>\r\n              </td>\r\n              <td>\r\n                <a [routerLink]=\"companyInfoLink\">Edit</a>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"employeesErrors?.length || employeeSetupErrors?.length;\">\r\n              <th>Employees</th>\r\n              <td>\r\n                <ul>\r\n                  <li *ngFor=\"let error of employeeSetupErrors\">{{ error }}</li>\r\n                </ul>\r\n                <div *ngFor=\"let error of employeesErrors\" class=\"section\">\r\n                  <div>\r\n                    <a [routerLink]=\"getEeLink(error.employee)\">{{ error.employee | fullname }}</a>\r\n                  </div>\r\n                  <ul>\r\n                    <li *ngFor=\"let error of error.messages\">{{ error }}</li>\r\n                  </ul>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <a [routerLink]=\"employeesLink\">Edit</a>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"companyTaxErrors?.length;\">\r\n              <th>Federal and State Taxes</th>\r\n              <td>\r\n                <div *ngFor=\"let error of companyTaxErrors\" class=\"section\">\r\n                  <div>\r\n                    <a [routerLink]=\"getTaxLink(error.key)\">{{ error.key }}</a>\r\n                  </div>\r\n                  <ul>\r\n                    <li *ngFor=\"let error of error.messages\">{{ error }}</li>\r\n                  </ul>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <a [routerLink]=\"companyTaxInfoLink\">Edit</a>\r\n              </td>\r\n            </tr>\r\n            <tr *ngIf=\"bankInfoErrors?.length;\">\r\n              <th>Bank Account</th>\r\n              <td>\r\n                <ul>\r\n                  <li *ngFor=\"let error of bankInfoErrors\">{{ error }}</li>\r\n                </ul>\r\n              </td>\r\n              <td>\r\n                <a [routerLink]=\"bankInfoLink\">Edit</a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <a [routerLink]=\"[detailsLink]\" class=\"icon-right d-flex font-weight-bold mb-4\">\r\n      See account details\r\n      <i class=\"material-icons icon\">arrow_forward</i>\r\n    </a>\r\n  </div>\r\n  <sp-nav-bottom [back]=\"null\" [next]=\"null\"\r\n    [returnToLabel]=\"returnTo?.label\" [returnTo]=\"returnTo?.link\"></sp-nav-bottom>\r\n</div>\r\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\r\n\r\nimport { Employee } from '@model';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\n@Component({\r\n  selector: 'sp-review-validation',\r\n  templateUrl: './review-validation.component.html'\r\n})\r\nexport class ReviewValidationComponent {\r\n  @Input() aboutYouErrors: string[] = [];\r\n  @Input() bankInfoErrors: string[] = [];\r\n  @Input() companyInfoErrors: string[] = [];\r\n  @Input() companyTaxErrors: string[] = [];\r\n  @Input() employeesErrors: string[] = [];\r\n  @Input() employeeSetupErrors: string[] = [];\r\n  @Input() doneAddingEmployees = false;\r\n  @Input() returnTo: { label: string, link: string };\r\n\r\n  aboutYouLink = [WellKnownRoutes.AboutYou, { forceValidationFeedback: true }];\r\n  bankInfoLink = [WellKnownRoutes.BankAccount, { forceValidationFeedback: true }];\r\n  companyInfoLink = [WellKnownRoutes.CompanyInfo, { forceValidationFeedback: true }];\r\n  companyTaxInfoLink = [WellKnownRoutes.CompanyTaxInfo, { forceValidationFeedback: true }];\r\n  employeesLink = [WellKnownRoutes.Employees, { forceValidationFeedback: true }];\r\n\r\n  detailsLink = WellKnownRoutes.AccountView;\r\n\r\n  getEeLink(emp: Employee) {\r\n    return [WellKnownRoutes.Employees, { forceValidationFeedback: true }, emp.id];\r\n  }\r\n\r\n  getTaxLink(key: string) {\r\n    return key === 'Federal'\r\n      ? [WellKnownRoutes.CompanyTaxInfo, { forceValidationFeedback: true }]\r\n      : [WellKnownRoutes.CompanyTaxInfo, { forceValidationFeedback: true }, 'state', key];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { AccountDetailsModule } from '@app/account-details';\r\nimport { ReviewCompleteComponent } from './review-complete.component';\r\nimport { ReviewContainerComponent } from './review-container.component';\r\nimport { ReviewDataComponent } from './review-data.component';\r\nimport { ReviewValidationComponent } from './review-validation.component';\r\nimport { ReviewEmployeeDataComponent } from './review-employee-data.component';\r\nimport { ReviewCompanyDataComponent } from './review-company-data.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', component: ReviewContainerComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, AccountDetailsModule, RouterModule.forChild(routes)],\r\n  declarations: [\r\n    ReviewCompleteComponent,\r\n    ReviewContainerComponent,\r\n    ReviewDataComponent,\r\n    ReviewEmployeeDataComponent,\r\n    ReviewCompanyDataComponent,\r\n    ReviewValidationComponent,\r\n  ]\r\n})\r\nexport class ReviewModule {}\r\n","\n  <div class=\"nav-button-container\">\n    <div class=\"nav-buttons d-flex justify-content-end\">\n      <a *ngIf=\"returnTo\" [routerLink]=\"[returnTo]\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" type=\"button\" [disabled]=\"disabled || disableReturnTo\"\n          id=\"navBottomReturnTo\">\n          {{returnToLabel}}\n        </button>\n      </a>\n      <a *ngIf=\"back\" [routerLink]=\"[back]\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" type=\"button\" [disabled]=\"disabled || disableBack\" id=\"navBottomBack\">\n          {{backLabel}}\n        </button>\n      </a>\n      <a *ngIf=\"next\" [routerLink]=\"[next]\">\n        <button type=\"button\" class=\"btn btn-navigation\" type=\"button\" [disabled]=\"disabled || disableNext\" id=\"navBottomNext\">\n          {{nextLabel}}\n        </button>\n      </a>\n    </div>\n  </div>\n  "],"sourceRoot":""}