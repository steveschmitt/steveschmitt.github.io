{"version":3,"sources":["webpack:///./src/app/company-info/company-info-general/company-info-general.component.html","webpack:///./src/app/company-info/company-info-general/company-info-general.component.ts","webpack:///./src/app/company-info/company-info-routing.module.ts","webpack:///./src/app/company-info/company-info-schedule/company-info-schedule.component.html","webpack:///./src/app/company-info/company-info-schedule/company-info-schedule.component.ts","webpack:///./src/app/company-info/company-info.component.html","webpack:///./src/app/company-info/company-info.component.ts","webpack:///./src/app/company-info/company-info.module.ts","webpack:///./src/app/shared/date-range-pay-period/date-range-pay-period.component.html"],"names":[],"mappings":"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","file":"10.c186e5a26ea52ba9ac1e.js","sourcesContent":["\r\n  <div class=\"standard\">\r\n\r\n      <sp-model [model]=\"company\" modelType=\"Company\">\r\n        <sp-input name=\"legalName\" propertyName=\"legalName\" label=\"{{ company | companyKind }} Legal Name\" placeholder=\"Legal Name\"\r\n          tooltip=\"true\" (blur)=\"fixLegalName()\">\r\n          <span class=\"label-tooltip\">\r\n            <span>Enter your legal name exactly as it appears as filed with the IRS. This can be found on anything that\r\n              has been mailed to you by the IRS (see\r\n              example below). Only include punctuation and spaces as they appear.</span><br>\r\n            <img src=\"/assets/images/example-irs-doc.png\" width=\"600\" class=\"mt-3\">\r\n          </span>\r\n        </sp-input>\r\n        <sp-input *ngIf=\"!company.isHousehold\" name=\"dbaName\" propertyName=\"name\" label=\"Doing Business As (Optional)\"\r\n          placeholder=\"DBA\"></sp-input>\r\n\r\n        <sp-control *ngIf=\"!company.isHousehold\" label=\"Company Type\" tooltip=\"true\">\r\n          <span tooltipText class=\"label-tooltip\">\r\n            Pick the company type that most closely matches the type you filed with the IRS.\r\n          </span>\r\n          <sp-select propertyName=\"companyType\" name=\"companyType\">\r\n            <option *ngFor=\"let companyType of companyTypeCodes\" [value]=\"companyType.value\">{{companyType.displayName}}</option>\r\n          </sp-select>\r\n        </sp-control>\r\n      </sp-model>\r\n\r\n      <h2 class=\"pt-3\">Main Address</h2>\r\n\r\n      <sp-address-form [address]=\"main\" [inline]=\"true\" (failedValidation)=\"editMainAddress()\"></sp-address-form>\r\n      <button *ngIf=\"canVerifyMain\" type=\"button\" class=\"btn btn-cta my-3\" (click)=\"editMainAddress()\">Verify</button>\r\n\r\n      <div *ngIf=\"otherAddresses$ | async as otherAddresses\">\r\n        <div *ngIf=\"otherAddresses.length\">\r\n          <h2 class=\"pt-4\">Other Work Locations</h2>\r\n          <table class=\"table interactive-table no-header\">\r\n            <tbody>\r\n              <tr *ngFor=\"let otherAddress of otherAddresses\">\r\n                <td class=\"clickable\" (click)=\"editAddress(otherAddress)\">{{otherAddress | address}}</td>\r\n                <td>\r\n                  <a *ngIf=\"!otherAddress.isVerified\" (click)=\"editAddress(otherAddress)\">\r\n                    <i class=\"material-icons icon d-inline btn-circle\" title=\"Address not verified\">warning</i>\r\n                  </a>\r\n                  <a (click)=\"editAddress(otherAddress)\">\r\n                    <i class=\"material-icons icon d-inline btn-circle\">edit</i>\r\n                  </a>\r\n                  <a (click)=\"removeAddress(otherAddress)\">\r\n                    <i class=\"material-icons icon d-inline btn-circle\">delete_forever</i>\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <a *ngIf=\"!readOnly\" (click)=\"addAddress()\">+ Add Another Work Location</a>\r\n\r\n  </div>\r\n\r\n  <sp-address-modal></sp-address-modal>\r\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { ChangeSetItem, ChangeSetUpdate,  } from 'ngrx-data';\n\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { concatMap, finalize, first, map, tap } from 'rxjs/operators';\n\nimport { tabRouteAnim } from '@animations';\n\nimport { areDifferent, sanitizeLegalName, SubSink } from '@core/utils';\nimport { Address, Company, companyKind, CompanyType, CompanyTypeCodes, PayrollFrequency, PayrollFrequencyCodes } from '@model';\nimport { AddressFormComponent } from '@shared/address/address-form.component';\nimport { AddressService, CompanyService } from '@entity';\nimport { AddressModalComponent } from '@shared';\nimport { changeItemFactory as cif } from '@utils';\nimport { environment } from '@environment';\nimport { TaxCollectorService } from '@core/services/tax-services';\nimport { WellKnownRoutes } from '@core';\n\n@Component({\n  selector: 'sp-company-info-general',\n  templateUrl: 'company-info-general.component.html',\n  styles: []\n})\n\nexport class CompanyInfoGeneralComponent implements OnInit, OnDestroy {\n\n  @ViewChild(AddressModalComponent)\n  addressModal: AddressModalComponent;\n\n  @ViewChild(AddressFormComponent)\n  mainAddressForm: AddressFormComponent;\n\n  /** Snapshot of the current company when component created */\n  company: Company;\n  companyTypeCodes =\n    // All types except HH; you can only change to HH on About You page\n    CompanyTypeCodes.codes.filter(code => code.value !== CompanyType.Household);\n\n  /** Snapshot of the company's main address when component created */\n  main: Address;\n  originalAddressCodes: { geoCode: string, schoolDistrictCode?: number, psdCode: number, isVerified: boolean };\n\n  private currentMain$: Observable<Address>;\n  otherAddresses$: Observable<Address[]>;\n\n  private isModalOpen = false;\n  payrollFrequencyCodes = PayrollFrequencyCodes.codes;\n  readOnly = false;\n  showRemoved = false;\n\n  private sub = new SubSink();\n\n  constructor(\n    private addressService: AddressService,\n    private companyService: CompanyService,\n    private ngTitle: Title,\n    private taxCollectorService: TaxCollectorService,\n  ) {  }\n\n  ngOnInit(): void {\n    window.scrollTo(0, 0);\n\n    this.otherAddresses$ = this.addressService.entities$.pipe(\n      map(addrs =>\n        addrs\n          .filter(a => !a.isHome && !a.isMain && (this.showRemoved || !a.isRemoved))\n          .map(addr => Address.create(addr))\n          .sort((l, r) => l.toString().localeCompare(r.toString()))\n      )\n    );\n\n    this.companyService.currentCompany$.pipe(first()).subscribe(company => {\n      this.company = {\n        ...company\n      };\n      this.ngTitle.setTitle(`SP ${companyKind(company)} Info`);\n    });\n\n    this.currentMain$ = this.addressService.entities$.pipe(\n      first(),\n      map(addrs => addrs.find(addr => addr.isMain))\n    );\n\n    this.currentMain$.subscribe(\n      main => {\n        this.main = main ? { ...main } : Address.createNewCompanyAddress(this.company, true);\n        this.originalAddressCodes = {\n          geoCode: this.main.geoCode,\n          schoolDistrictCode: this.main.schoolDistrictCode,\n          psdCode: this.main.psdCode,\n          isVerified: this.main.isVerified && !!this.main.geoCode\n        };\n      }\n    );\n\n    this.sub.sink = this.companyService.readOnly$.subscribe(ro => this.readOnly = ro);\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  fixLegalName() {\n    if (this.company && this.company.legalName) {\n      this.company.legalName = sanitizeLegalName(this.company.legalName);\n    }\n  }\n\n  addAddress() {\n    this.addressModal.addOrEditAddress({ isHome: false } as Address).subscribe();\n  }\n\n  get canVerifyMain() {\n    const address = this.main;\n    return !this.isModalOpen  && !this.readOnly && !address.isVerified &&\n      address.street1 && address.city && address.state && address.zip;\n  }\n\n  editAddress(existingAddress: Address) {\n    if (!this.readOnly) {\n      this.addressModal.addOrEditAddress(existingAddress).subscribe();\n    }\n  }\n\n  editMainAddress() {\n    if (!this.isModalOpen && !this.readOnly) {\n      this.isModalOpen = true;\n      this.addressModal.addOrEditAddress(this.main)\n        .pipe(finalize(() => this.isModalOpen = false))\n        .subscribe(addr => {\n          if (addr) {\n            this.mainAddressForm.updateAddress(addr);\n          }\n        });\n    }\n  }\n\n  removeAddress(existingAddress: Address) {\n    this.addressModal.removeAddress(existingAddress).subscribe();\n  }\n\n  canLeaveAfterSave() {\n    return this.save();\n  }\n\n  private save() {\n    const saveUrl = environment.apiRoot + '/save/company';\n    return combineLatest(this.getCompanyChange(), this.getMainAddressChange()).pipe(\n      first(),\n      concatMap(([companyChange, addressChange]) => {\n        const changes: ChangeSetItem[] = [];\n        if (companyChange) {\n          changes.push(companyChange);\n        }\n        if (addressChange) {\n          changes.push(addressChange);\n        }\n        if (changes.length) {\n          return this.companyService.saveEntities({ changes }, saveUrl).pipe(\n            concatMap(r => addressChange\n              // If address changed, computeTaxes and wait until it finishes.\n              // Note: taxes would be recomputed and saved anyway but\n              // we want to wait until that tax save completes before leaving page\n              // Totally hacky and saves taxes twice\n              ? this.taxCollectorService.computeTaxes().pipe(map(t => true))\n              : of(true)\n            )\n          );\n        } else {\n          return of(true);\n        }\n      })\n    );\n  }\n\n  /** Update the current company with vm company if they differ */\n  private getCompanyChange(): Observable<ChangeSetUpdate> {\n    const company = this.company;\n\n    return this.companyService.currentCompany$.pipe(\n      first(),\n      map(cachedCompany => {\n        // Merge cached company with cleaned-up properties that were presented.\n        const chgCompany = {\n          ...cachedCompany,\n          companyType: company.companyType,\n          legalName: (company.legalName || '').trim(),\n          name: (company.name || '').trim()\n        };\n\n        // Change to legal name unverifies the FEIN\n        this.companyService.detectLegalNameChangeAfterVerify(chgCompany);\n        return areDifferent(chgCompany, cachedCompany, 'Company') ? cif.update('Company', chgCompany) : null;\n      })\n    );\n  }\n\n  private getMainAddressChange(): Observable<ChangeSetItem> {\n    const currentMain$ = this.addressService.entities$.pipe(\n      first(),\n      map(addrs => addrs.find(addr => addr.isMain))\n    );\n\n    return currentMain$.pipe(\n      map(cachedMain => {\n        if (cachedMain) {\n          return areDifferent(this.main, cachedMain, 'Main Address') ? cif.update('Address', this.main) : null;\n        } else {\n          this.companyService.setIds(this.main);\n          return cif.add('Address', this.main);\n        }\n      })\n    );\n  }\n\n}\n","import { Injectable, NgModule } from '@angular/core';\r\nimport {  Routes, RouterModule } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PageLeaveGuard } from '@core/routing-guards';\r\nimport { CompanyInfoComponent } from './company-info.component';\r\nimport { CompanyInfoGeneralComponent } from './company-info-general/company-info-general.component';\r\nimport { CompanyInfoScheduleComponent } from './company-info-schedule/company-info-schedule.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyInfoComponent,\r\n    canDeactivate: [PageLeaveGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: CompanyInfoGeneralComponent,\r\n        canDeactivate: [PageLeaveGuard],\r\n      },\r\n      {\r\n        path: 'schedule',\r\n        component: CompanyInfoScheduleComponent,\r\n        canDeactivate: [PageLeaveGuard],\r\n      },\r\n      { path: '**', pathMatch: 'prefix', redirectTo: '' } // bad routes redirect to general\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [ PageLeaveGuard ]\r\n})\r\nexport class CompanyInfoRoutingModule {}\r\n","<label class=\"mb-5\"><span class=\"label-text\">What is your payroll frequency?</span></label>\r\n\r\n<div class=\"container-fluid\">\r\n  <div class=\"schedule-icons row mb-4\">\r\n\r\n    <div id=\"payFrequencySelector\"\r\n      class=\"col-sm col-6 pl-0 schedule-frequency-option\"\r\n      *ngFor=\"let n of items; let i=index\"\r\n      (click)=\"selectFrequencyOption(n.title); animateScale(i)\"\r\n      (mouseenter)=\"hoveredFrequencyOption(n.title)\"\r\n      (mouseleave)=\"hoveredItem=''\">\r\n\r\n      <div class=\"text-center\">\r\n        <img [@scaleEffect]='n.state'\r\n          class=\"schedule-frequency-icon\"\r\n          [src]=\"iconFolder + 'icon-' + n.title.toLowerCase() + (isSelectedOrHovered(n.title) ? '-green' : '' ) + '.svg'\">\r\n        <span>{{ n.caption }}</span>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div class=\"pt-2\">Don't see your payroll frequency?&nbsp;<a href=\"#\">See more</a>.</div> -->\r\n\r\n<div *ngIf=\"showSelector\">\r\n    <div class=\"mb-4 mt-3\">\r\n      <sp-date-range-pay-period [companyDates]=\"companyDates\" [selectedFrequency]=\"selectedFrequency\" [holidays]=\"holidayDates\" (scheduleDates)=\"setScheduleDates($event)\"></sp-date-range-pay-period>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { trigger, state, style, animate, transition, keyframes } from '@angular/animations';\nimport { ChangeSetUpdate, ChangeSetItem } from 'ngrx-data';\n\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { Company, PayrollFrequency } from '@model';\nimport { CompanyService } from '@entity';\nimport { changeItemFactory as cif } from '@utils';\nimport { environment } from '@environment';\nimport { HolidaysService } from '@core/services/holidays.service';\nimport { ScheduleDates } from '@shared/date-range-pay-period/schedule-dates';\nimport { WellKnownRoutes, areDifferent } from '@core';\n\n@Component({\n  selector: 'sp-company-info-schedule',\n  templateUrl: 'company-info-schedule.component.html',\n  animations: [\n    trigger('scaleEffect', [\n      state(\n        'small',\n        style({\n          opacity: 1\n        })\n      ),\n      state(\n        'large',\n        style({\n          opacity: 1\n        })\n      ),\n      transition(\n        'small <=> large',\n        animate(\n          '900ms ease-out',\n          keyframes([\n            style({ transform: 'scale(1)' }),\n            style({ transform: 'scale(1.3)' }),\n            style({ transform: 'scale(1)' })\n          ])\n        )\n      )\n    ])\n  ]\n})\nexport class CompanyInfoScheduleComponent implements OnInit {\n  company: Company;\n\n  checkMinDate = new Date(Date.now());\n  defaultDate = new Date(Date.now());\n  checkMaxDate = new Date(Date.now() + 360 * 24 * 3600 * 1000);\n\n  iconFolder = '/assets/images/payroll-frequency/';\n  companyDates: ScheduleDates;\n  holidayDates: Date[];\n\n  // Selected payroll frequency\n  selectedFrequency: string;\n\n  // Hovered payroll frequency option\n  hoveredItem: string;\n\n  tabTitles = [\n    { id: 'general', title: 'General', link: '' },\n    { id: 'schedule', title: 'Schedule', link: 'schedule' }\n  ];\n\n  // Payroll frequency items\n  items = [\n    { title: 'Weekly', caption: 'Weekly', state: 'small' },\n    { title: 'Bi-Weekly', caption: 'Every Two Weeks', state: 'small' },\n    { title: 'Semi-Monthly', caption: 'Twice a Month', state: 'small' },\n    { title: 'Monthly', caption: 'Monthly', state: 'small' },\n    { title: 'Quarterly', caption: 'Quarterly', state: 'small' }\n  ];\n\n  backLink: string = this.tabTitles[0].link;\n  nextLink = WellKnownRoutes.Employees;\n\n  constructor(private companyService: CompanyService, private holidayService: HolidaysService) {}\n\n  ngOnInit() {\n    this.holidayService.getHolidays().subscribe(holidays => (this.holidayDates = holidays));\n\n    this.companyService.currentCompany$.pipe(first()).subscribe(company => {\n      this.company = { ...company };\n    });\n\n    this.companyDates = {\n      periodStartDate: this.company.periodStartDate,\n      periodEndDate: this.company.periodEndDate,\n      checkDate: this.company.firstCheckDate,\n      secondPeriodStartDate: this.company.secondPeriodStartDate,\n      secondPeriodEndDate: this.company.secondPeriodEndDate,\n      secondCheckDate: this.company.secondCheckDate,\n      firstPeriodEndOfMonth: this.company.firstPeriodEndOfMonth,\n      firstCheckEndOfMonth: this.company.firstCheckEndOfMonth,\n      secondPeriodEndOfMonth: this.company.secondPeriodEndOfMonth,\n      secondCheckEndOfMonth: this.company.secondCheckEndOfMonth\n    };\n    this.selectedFrequency = this.company.payrollFrequency;\n  }\n\n  get showSelector() {\n    return this.company != null && this.company.payrollFrequency != null;\n  }\n\n  setScheduleDates(scheduleDates: ScheduleDates) {\n    this.company.firstCheckDate = scheduleDates.checkDate;\n    this.company.periodStartDate = scheduleDates.periodStartDate;\n    this.company.periodEndDate = scheduleDates.periodEndDate;\n    (this.company.secondPeriodStartDate = scheduleDates.secondPeriodStartDate),\n      (this.company.secondPeriodEndDate = scheduleDates.secondPeriodEndDate),\n      (this.company.secondCheckDate = scheduleDates.secondCheckDate),\n      (this.company.firstPeriodEndOfMonth = scheduleDates.firstPeriodEndOfMonth);\n    this.company.firstCheckEndOfMonth = scheduleDates.firstCheckEndOfMonth;\n    this.company.secondPeriodEndOfMonth = scheduleDates.secondPeriodEndOfMonth;\n    this.company.secondCheckEndOfMonth = scheduleDates.secondCheckEndOfMonth;\n  }\n\n  selectFrequencyOption(selectedFrequency: string) {\n    this.selectedFrequency = selectedFrequency;\n    const preFrequencySelected = selectedFrequency.replace('-', '');\n    this.company.payrollFrequency = (<any>PayrollFrequency)[preFrequencySelected];\n    this.company.periodStartDate = null;\n    this.company.periodEndDate = null;\n    this.company.firstCheckDate = null;\n    this.company.secondPeriodStartDate = null;\n    this.company.secondPeriodEndDate = null;\n    this.company.secondCheckDate = null;\n    this.company.firstPeriodEndOfMonth = null;\n    this.company.firstCheckEndOfMonth = null;\n    this.company.secondPeriodEndOfMonth = null;\n    this.company.secondCheckEndOfMonth = null;\n\n    this.companyDates = {\n      periodStartDate: this.company.periodStartDate,\n      periodEndDate: this.company.periodEndDate,\n      checkDate: this.company.firstCheckDate,\n      secondPeriodStartDate: this.company.secondPeriodStartDate,\n      secondPeriodEndDate: this.company.secondPeriodEndDate,\n      secondCheckDate: this.company.secondCheckDate,\n      firstPeriodEndOfMonth: this.company.firstPeriodEndOfMonth,\n      firstCheckEndOfMonth: this.company.firstCheckEndOfMonth,\n      secondPeriodEndOfMonth: this.company.secondPeriodEndOfMonth,\n      secondCheckEndOfMonth: this.company.secondCheckEndOfMonth\n    };\n  }\n\n  animateScale(index: any) {\n    this.items[index].state = this.items[index].state === 'small' ? 'large' : 'small';\n  }\n\n  hoveredFrequencyOption(item: string) {\n    this.hoveredItem = item;\n  }\n\n  isSelectedOrHovered(item: string) {\n    return this.selectedFrequency === item || this.hoveredItem === item;\n  }\n\n  canLeaveAfterSave() {\n    return this.save();\n  }\n\n  private save() {\n    const saveUrl = environment.apiRoot + '/save/company';\n    return this.getCompanyChange().pipe(\n      first(),\n      map(companyChange => {\n        const changes: ChangeSetItem[] = [];\n        if (companyChange) {\n          changes.push(companyChange);\n        }\n\n        if (changes.length) {\n          this.companyService.saveEntities({ changes }, saveUrl);\n        }\n        return true;\n      })\n    );\n  }\n\n  /** Update the current company with vm company if they differ */\n  private getCompanyChange(): Observable<ChangeSetUpdate> {\n    const company = this.company;\n\n    return this.companyService.currentCompany$.pipe(\n      first(),\n      map(cachedCompany => {\n        // Merge cached company with cleaned-up properties that were presented.\n        const chgCompany = {\n          ...cachedCompany,\n          payrollFrequency: company.payrollFrequency,\n          firstCheckDate: company.firstCheckDate,\n          periodStartDate: company.periodStartDate,\n          periodEndDate: company.periodEndDate,\n          secondPeriodStartDate: company.secondPeriodStartDate,\n          secondPeriodEndDate: company.secondPeriodEndDate,\n          secondCheckDate: company.secondCheckDate,\n          firstPeriodEndOfMonth: company.firstPeriodEndOfMonth,\n          firstCheckEndOfMonth: company.firstCheckEndOfMonth,\n          secondPeriodEndOfMonth: company.secondPeriodEndOfMonth,\n          secondCheckEndOfMonth: company.secondCheckEndOfMonth\n        };\n        return areDifferent(chgCompany, cachedCompany, 'Company')\n          ? cif.update('Company', chgCompany)\n          : null;\n      })\n    );\n  }\n}\n","<div class=\"static-nav d-flex flex-column\" id=\"companyInfoComponent\">\r\n  <header class=\"header-bold\">\r\n    <div class=\"standard\">\r\n      <h1>{{ company | companyKind }} Information</h1>\r\n      <p>We need some basic information about your {{ company | companyKind | lowercase }}.</p>\r\n    </div>\r\n  </header>\r\n\r\n  <div class=\"standard\">\r\n\r\n    <ngb-tabset #tabset [activeId]=\"initialId\">\r\n      <ngb-tab *ngFor=\"let tab of tabTitles\" [id]=\"tab.id\">\r\n        <ng-template ngbTabTitle>\r\n          <span>\r\n            <a [routerLink]=\"tab.link\" [routerLinkActive]=\"\" [ngClass]=\"ads.isActive?'active':''\" #ads=\"routerLinkActive\">{{tab.title}}</a>\r\n          </span>\r\n          <ng-template #noTabLink>\r\n            {{tab.title}}\r\n          </ng-template>\r\n        </ng-template>\r\n      </ngb-tab>\r\n    </ngb-tabset>\r\n\r\n    <div class=\" m-0 p-0\">\r\n      <div class=\" \">\r\n        <form>\r\n          <router-outlet #o=\"outlet\"></router-outlet>\r\n        </form>\r\n        <sp-nav-bottom [back]=\"backLink\" [next]=\"nextLink\" nextLabel=\"Continue\" [disabled]=\"disabled\" [disableNext]=\"disableNext\"></sp-nav-bottom>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { NgbTabset } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { concatMap, finalize, first, map, tap } from 'rxjs/operators';\r\n\r\nimport { AddressService, CompanyService } from '@entity';\r\nimport { areDifferent, sanitizeLegalName, SubSink } from '@core/utils';\r\nimport { Company } from '@model';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\n@Component({\r\n  selector: 'sp-co-info',\r\n  templateUrl: 'company-info.component.html'\r\n})\r\nexport class CompanyInfoComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild('tabset')\r\n  tabset: NgbTabset;\r\n\r\n  backLink: string = WellKnownRoutes.AboutYou;\r\n  nextLink: string;\r\n  initialId: string; // initial tab id; tabsetSelect changes thereafter\r\n  private sub = new SubSink();\r\n  private tabLink: string; // link to the tab currently (or about to be) displayed\r\n\r\n  tabTitles = [\r\n    { id: 'general', title: 'General', link: 'general' },\r\n    { id: 'schedule', title: 'Schedule', link: 'schedule' }\r\n  ];\r\n\r\n\r\n  company: Company;\r\n  currentTabTitle: string;\r\n\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private route: ActivatedRoute,\r\n    private ngTitle: Title) {  }\r\n\r\n  ngOnInit(): void {\r\n    window.scrollTo(0, 0);\r\n    this.nextLink = this.tabTitles[1].link;\r\n    this.watchRouteChange();\r\n\r\n    this.companyService.currentCompany$.pipe(first()).subscribe(company => {\r\n      this.company = {\r\n        ...company\r\n      };\r\n    });\r\n\r\n    this.ngTitle.setTitle(`SP Company Info`);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n     get disabled() {\r\n      return false;\r\n    }\r\n\r\n    get disableNext() {\r\n      return false;\r\n    }\r\n\r\n\r\n  /** Listen for route changes. Many of them re-use this component **/\r\n  private watchRouteChange() {\r\n\r\n    if (this.route.url !== undefined) {\r\n      this.sub.sink = this.route.url.subscribe(url => {\r\n        window.scrollTo(0, 0);\r\n        this.tabLink = this.route.snapshot.firstChild.url.toString() || 'general';\r\n        this.initialId = this.initialId || this.tabLink; // only useful first time\r\n        // Wait a tick for tabs to draw\r\n        setTimeout(() => this.updateCurrentTabInfo(this.tabLink));\r\n      });\r\n    }\r\n  }\r\n\r\n  private watchVmChange() {\r\n    this.sub.sink = this.companyService.currentCompany$.subscribe(company => {\r\n      this.company = company;\r\n      this.setBrowserTabTitle();\r\n    });\r\n  }\r\n\r\n  private setBrowserTabTitle() {\r\n    this.ngTitle.setTitle(`SP Company ${this.currentTabTitle}`.trim());\r\n  }\r\n\r\n  /**\r\n   * When the current tab changes, setup the tab-related info\r\n   * such as the tab title, the browser tab title, the \"next\" link,\r\n   */\r\n  private updateCurrentTabInfo(tabLink: string) {\r\n    if (this.tabset) {\r\n      this.tabset.select(tabLink);\r\n    }\r\n    let tabIx = this.tabTitles.findIndex(tt => tt.link === tabLink);\r\n    tabIx = tabIx < 0 ? 0 : tabIx;\r\n    this.currentTabTitle = this.tabTitles[tabIx].title || '';\r\n    const backTab = this.tabTitles[tabIx - 1];\r\n    const nextTab = this.tabTitles[(tabIx += 1)];\r\n    // On overflow, navigates away to the EmployeeList!\r\n    this.backLink = backTab ? backTab.link : WellKnownRoutes.AboutYou;\r\n    this.nextLink = nextTab ? nextTab.link : WellKnownRoutes.Employees;\r\n\r\n    this.setBrowserTabTitle();\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { CompanyInfoComponent } from './company-info.component';\r\nimport { PageLeaveGuard } from '@core/routing-guards';\r\nimport { CompanyInfoGeneralComponent } from './company-info-general/company-info-general.component';\r\nimport { CompanyInfoScheduleComponent } from './company-info-schedule/company-info-schedule.component';\r\nimport { CompanyInfoRoutingModule } from './company-info-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, CompanyInfoRoutingModule],\r\n  declarations: [CompanyInfoComponent, CompanyInfoGeneralComponent, CompanyInfoScheduleComponent]\r\n})\r\nexport class CompanyInfoModule {}\r\n\r\n","<div class=\"container-fluid pay-period-container px-0\">\r\n\r\n  <ng-container *ngIf=\"!IsFrequencySemiMonthly && !IsFrequencyQuarterly\">\r\n\r\n    <div class=\"mb-4 mt-5\">\r\n    <sp-control label=\"Select your pay periods:\" tooltip=\"true\" class=\"daterange-tooltip\">\r\n      <span tooltipText class=\"label-tooltip\">\r\n        <b>CHECK DATE</b>\r\n        <ul>\r\n          <li>Your check date must be at least 2 business days from today's date.</li>\r\n          <li>If a check date lands on a weekend or holiday it will move to the previous business day.</li>\r\n        </ul>\r\n      </span>\r\n    </sp-control>\r\n  </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-3 col-md-4 col-12\">\r\n\r\n        <div class=\"pay-period-labels container-fluid\">\r\n\r\n          <div class=\"row\">\r\n            <div class=\"pay-period-section col-4 col-sm-12\" (click)=\"status = CalendarState.PeriodStart\"\r\n              [style.backgroundColor]=\"status === CalendarState.PeriodStart ? '#fff' : '#f3f3f3'\">\r\n              <label class=\"pay-period-label\">PAY PERIOD START</label>\r\n              <span class=\"pay-period-date pay-period-start\">{{ formatDate(dateRangevm.fromDate) }}</span>\r\n            </div>\r\n\r\n            <div class=\"pay-period-section col-4 col-sm-12\" (click)=\"status = CalendarState.PeriodEnd\"\r\n              [style.backgroundColor]=\"status === CalendarState.PeriodEnd ? '#fff' : '#f3f3f3'\">\r\n              <label class=\"pay-period-label\">PAY PERIOD END</label>\r\n              <span class=\"pay-period-date pay-period-end\">{{ formatDate(dateRangevm.toDate) }}</span>\r\n            </div>\r\n\r\n            <div class=\"pay-period-section col-4 col-sm-12 section-active\" (click)=\"status = CalendarState.Check\"\r\n              [style.backgroundColor]=\"status === CalendarState.Check ? '#fff' : '#f3f3f3'\">\r\n              <label class=\"pay-period-label\">CHECK DATE</label>\r\n              <span class=\"pay-period-date check-date\">{{ formatDate(dateRangevm.checkDate) }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-sm-9 col-md-8 col-12\">\r\n\r\n        <ngb-datepicker class=\"border-0\" #dp [displayMonths]=\"2\" outsideDays=\"collapsed\" [navigation]=\"navigationType\"\r\n          (select)=\"onDateSelection($event)\" [dayTemplate]=\"t\" [markDisabled]=\"markDisabled\" [startDate]=\"fromDate\"\r\n          [firstDayOfWeek]=\"7\">\r\n        </ngb-datepicker>\r\n\r\n        <ng-template #t let-date let-focused=\"focused\">\r\n          <span class=\"custom-day\" [class.check-day]=\"isCheckDate(date)\" [class.focused]=\"focused\"\r\n            [class.range]=\"isRange(date)\" [class.faded]=\"isHovered(date) || isInside(date)\"\r\n            [class.check-day-hover]=\"showCheckDateCssClass\" [class.period-date]=\"showPeriodDateCssClass\"\r\n            (mouseenter)=\"hoveredDate = date\" (mouseleave)=\"hoveredDate = null\">\r\n            {{ date.day }}\r\n          </span>\r\n        </ng-template>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"row\">\r\n    <div class=\"col-sm-6 col-md-8 col-12\">\r\n      <sp-model [model]=\"companyDates\" modelType=\"companyDates\">\r\n        <!-- Additional Question Group for First Period (check day last day of month / PPEnd last day of month) -->\r\n        <div class=\"mt-4\" *ngIf=\"showFirstPeriodQuestion || showFirstCheckQuestion\">\r\n          <div class=\"form-row\" *ngIf=\"showFirstPeriodQuestion\">\r\n            <sp-radio-group name=\"FirstPeriodStatus\" propertyName=\"firstPeriodEndOfMonth\" (change)=\"onPeriodEndOfMonthChange($event)\"\r\n            label=\"Does your Pay Period End date always fall on the last day of the month?\" >\r\n                <sp-radio-button [value]=\"false\">No</sp-radio-button>\r\n                <sp-radio-button [value]=\"true\">Yes</sp-radio-button>\r\n              </sp-radio-group>\r\n            </div>\r\n\r\n\r\n          <div class=\"form-row\" *ngIf=\"showFirstCheckQuestion\">\r\n            <sp-radio-group name=\"FirstCheckStatus\" propertyName=\"firstCheckEndOfMonth\" (change)=\"onEndOfMonthChange($event)\"\r\n            label=\"Does your Check Date always fall on last day of the month?\">\r\n              <sp-radio-button [value]=\"false\">No</sp-radio-button>\r\n              <sp-radio-button [value]=\"true\">Yes</sp-radio-button>\r\n            </sp-radio-group>\r\n          </div>\r\n        </div>\r\n      <!-- /additional questions -->\r\n      </sp-model>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"IsFrequencySemiMonthly\">\r\n\r\n    <form class=\"mb-4 frequency-semi-monthly\">\r\n\r\n      <div class=\"mb-4 mt-5\">\r\n        <sp-control label=\"Select your first Pay Period and Check Date with us:\" tooltip=\"true\" class=\"daterange-tooltip\">\r\n          <span tooltipText class=\"label-tooltip\">\r\n            <b>CHECK DATE</b>\r\n            <ul>\r\n              <li>Your check date must be at least 2 business days from today's date.</li>\r\n              <li>If a check date lands on a weekend or holiday it will move to the previous business day.</li>\r\n            </ul>\r\n          </span>\r\n        </sp-control>\r\n      </div>\r\n      <sp-model [model]=\"dateRangevm\" modelType=\"DateRangePayPeriodvm\">\r\n        <div class=\"form-row\">\r\n          <div class=\"form-group col-6 offset-3 col-sm-4 offset-sm-0\">\r\n            <label for=\"\"><span class=\"label-text\">Pay Period Start</span></label>\r\n            <div class=\"input-group\">\r\n              <input class=\"form-control date-field border-right-0\" outsideDays=\"collapsed\"\r\n                [firstDayOfWeek]=\"7\" placeholder=\"mm/dd/yyyy\" [readonly]=\"true\" [disabled]=\"true\" name=\"semiMonthlyFirstFrom\"\r\n                [dayTemplate]=\"t\" [(ngModel)]=\"dateRangevm.fromDate\" ngbDatepicker [navigation]=\"navigationType\">\r\n              <div class=\"input-group-append\"><span class=\"input-group-text\"><i class=\"material-icons invisible\">calendar_today</i></span></div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group col-6 offset-3 col-sm-4 offset-sm-0\">\r\n            <label for=\"\"><span class=\"label-text\">Pay Period End</span></label>\r\n            <div class=\"input-group\">\r\n              <input class=\"form-control date-field\" (dateSelect)=\"onPeriodEndChange($event)\"  (blur)=\"onPeriodEndChange(dateRangevm.toDate)\"\r\n                outsideDays=\"collapsed\" [firstDayOfWeek]=\"7\" placeholder=\"mm/dd/yyyy\" [markDisabled]=\"disablePeriodDateRule\"\r\n                #input2=\"ngModel\" spValidateProperty spAsyncValidateProperty [spValidationStatus]=\"input2\" [model]=\"dateRangevm\"\r\n                modelType=\"DateRangePayPeriodvm\" propertyName=\"toDate\" name=\"semiMonthlyFirstTo\"\r\n                [(ngModel)]=\"dateRangevm.toDate\" ngbDatepicker #semiMonthlyFirstTo=\"ngbDatepicker\"\r\n                [navigation]=\"navigationType\" (ngModelChange)=\"markControlAsTouched(input4)\">\r\n              <div class=\"input-group-append\"><span class=\"input-group-text clickable\"\r\n                  (click)=\"semiMonthlyFirstTo.toggle()\"><i class=\"material-icons\">calendar_today</i></span></div>\r\n              <div class=\"validationError\" [spValidationFeedback]=\"input2\" [displayName]=\"label\"></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group col-6 offset-3 col-sm-4 offset-sm-0\">\r\n            <label for=\"\"><span class=\"label-text\">Check Date</span></label>\r\n            <div class=\"input-group\">\r\n              <input class=\"form-control date-field\"  (dateSelect)=\"onCheckDateChange($event)\"  (blur)=\"onCheckDateChange(dateRangevm.checkDate)\"\r\n                outsideDays=\"collapsed\" [firstDayOfWeek]=\"7\" placeholder=\"mm/dd/yyyy\" [markDisabled]=\"disabledCheckDateRule\"\r\n                #input3=\"ngModel\" spValidateProperty spAsyncValidateProperty [spValidationStatus]=\"input3\" [model]=\"dateRangevm\"\r\n                modelType=\"DateRangePayPeriodvm\" propertyName=\"checkDate\" name=\"semiMonthlyFirstCheck\" [(ngModel)]=\"dateRangevm.checkDate\"\r\n                ngbDatepicker #semiMonthlyFirstCheck=\"ngbDatepicker\" [navigation]=\"navigationType\" (ngModelChange)=\"markControlAsTouched(input5)\">\r\n              <div class=\"input-group-append\"><span class=\"input-group-text clickable\"\r\n                  (click)=\"semiMonthlyFirstCheck.toggle()\"><i class=\"material-icons\">calendar_today</i></span></div>\r\n              <div class=\"validationError\" [spValidationFeedback]=\"input3\" [displayName]=\"label\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </sp-model>\r\n\r\n    <sp-model [model]=\"companyDates\" modelType=\"companyDates\">\r\n        <!-- Additional Question Group for First Period (check day last day of month / PPEnd last day of month) -->\r\n        <div class=\"mt-4\" *ngIf=\"showFirstPeriodQuestion || showFirstCheckQuestion\">\r\n          <div class=\"form-row\" *ngIf=\"showFirstPeriodQuestion\">\r\n            <sp-radio-group name=\"FirstPeriodStatus\" propertyName=\"firstPeriodEndOfMonth\" (change)=\"onEndOfMonthChange($event)\"\r\n            label=\"Does your Pay Period End date always fall on the last day of the month?\" >\r\n                <sp-radio-button [value]=\"false\">No</sp-radio-button>\r\n                <sp-radio-button [value]=\"true\">Yes</sp-radio-button>\r\n              </sp-radio-group>\r\n            </div>\r\n\r\n\r\n          <div class=\"form-row\" *ngIf=\"showFirstCheckQuestion\">\r\n            <sp-radio-group name=\"FirstCheckStatus\" propertyName=\"firstCheckEndOfMonth\" (change)=\"onEndOfMonthChange($event)\"\r\n            label=\"Does your Check Date always fall on last day of the month?\">\r\n              <sp-radio-button [value]=\"false\">No</sp-radio-button>\r\n              <sp-radio-button [value]=\"true\">Yes</sp-radio-button>\r\n            </sp-radio-group>\r\n          </div>\r\n        </div>\r\n      <!-- /additional questions -->\r\n      </sp-model>\r\n\r\n      <div class=\"mb-4 mt-5\">\r\n        <label><span class=\"label-text\">Select your second Pay Period and Check Date with us:</span></label>\r\n      </div>\r\n      <sp-model [model]=\"dateRangevm\" modelType=\"DateRangePayPeriodvm\">\r\n        <div class=\"form-row\">\r\n          <div class=\"form-group col-6 offset-3 col-sm-4 offset-sm-0\">\r\n            <label for=\"\"><span class=\"label-text\">Pay Period Start</span></label>\r\n            <div class=\"input-group\">\r\n              <input class=\"form-control date-field border-right-0\"\r\n                (dateSelect)=\"onDateSelectionChange($event, CalendarState.SecondPeriodStart)\" outsideDays=\"collapsed\"\r\n                [firstDayOfWeek]=\"7\" placeholder=\"mm/dd/yyyy\" [readonly]=\"true\" [disabled]=\"true\" name=\"semiMonthlySecondFrom\"\r\n                [dayTemplate]=\"t\" [(ngModel)]=\"dateRangevm.secondFromDate\" ngbDatepicker\r\n                #semiMonthlySecondFrom=\"ngbDatepicker\" [navigation]=\"navigationType\"\r\n                (blur)=\"onDateSelectionChange(dateRangevm.secondFromDate, CalendarState.SecondPeriodStart)\">\r\n              <div class=\"input-group-append\"><span class=\"input-group-text\"><i class=\"material-icons invisible\">calendar_today</i></span></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group col-6 offset-3 col-sm-4 offset-sm-0\">\r\n            <label for=\"\"><span class=\"label-text\">Pay Period End</span></label>\r\n            <div class=\"input-group\">\r\n              <input class=\"form-control date-field\" outsideDays=\"collapsed\" [firstDayOfWeek]=\"7\" placeholder=\"mm/dd/yyyy\"\r\n                (dateSelect)=\"onSecondPeriodEndChange($event)\"  (blur)=\"onSecondPeriodEndChange(dateRangevm.secondToDate)\"\r\n                [markDisabled]=\"disablePeriodDateRule\" #input4=\"ngModel\" spValidateProperty spAsyncValidateProperty\r\n                [spValidationStatus]=\"input4\" [model]=\"dateRangevm\"\r\n                modelType=\"DateRangePayPeriodvm\" propertyName=\"secondToDate\" name=\"semiMonthlySecondTo\"\r\n                [(ngModel)]=\"dateRangevm.secondToDate\" ngbDatepicker #semiMonthlySecondTo=\"ngbDatepicker\" [navigation]=\"navigationType\">\r\n              <div class=\"input-group-append\"><span class=\"input-group-text clickable\"\r\n                  (click)=\"semiMonthlySecondTo.toggle()\"><i class=\"material-icons\">calendar_today</i></span></div>\r\n            </div>\r\n            <div class=\"validationError\" [spValidationFeedback]=\"input4\" [displayName]=\"label\"></div>\r\n          </div>\r\n          <div class=\"form-group col-6 offset-3 col-sm-4 offset-sm-0\">\r\n            <label for=\"\"><span class=\"label-text\">Check Date</span></label>\r\n            <div class=\"input-group\">\r\n              <input class=\"form-control date-field\" (dateSelect)=\"onSecondCheckDateChange($event)\"\r\n                (blur)=\"onSecondCheckDateChange(dateRangevm.secondCheckDate)\" outsideDays=\"collapsed\"\r\n                [firstDayOfWeek]=\"7\" placeholder=\"mm/dd/yyyy\" [markDisabled]=\"disabledCheckDateRule\"\r\n                #input5=\"ngModel\" spValidateProperty spAsyncValidateProperty [spValidationStatus]=\"input5\" [model]=\"dateRangevm\"\r\n                modelType=\"DateRangePayPeriodvm\" propertyName=\"secondCheckDate\" name=\"semiMonthlySecondCheck\"\r\n                [(ngModel)]=\"dateRangevm.secondCheckDate\" ngbDatepicker\r\n                #semiMonthlySecondCheck=\"ngbDatepicker\" [navigation]=\"navigationType\">\r\n              <div class=\"input-group-append\"><span class=\"input-group-text clickable\"\r\n                  (click)=\"semiMonthlySecondCheck.toggle();\"><i\r\n                    class=\"material-icons\">calendar_today</i></span></div>\r\n            </div>\r\n            <div class=\"validationError\" [spValidationFeedback]=\"input5\" [displayName]=\"label\"></div>\r\n          </div>\r\n        </div>\r\n      </sp-model>\r\n\r\n    <sp-model [model]=\"companyDates\" modelType=\"companyDates\">\r\n        <!-- Additional Question Group for Second Period (check day last day of month / PPEnd last day of month) -->\r\n        <div class=\"mt-4\" *ngIf=\"showSecondPeriodQuestion || showSecondCheckQuestion\">\r\n          <div class=\"form-row\" *ngIf=\"showSecondPeriodQuestion\">\r\n            <sp-radio-group name=\"SecondPeriodStatus\" propertyName=\"secondPeriodEndOfMonth\" (change)=\"onSecondPeriodEndOfMonthChange($event)\"\r\n             label=\"Does your Pay Period End date always fall on the last day of the month?\">\r\n              <sp-radio-button [value]=\"false\">No</sp-radio-button>\r\n              <sp-radio-button [value]=\"true\">Yes</sp-radio-button>\r\n            </sp-radio-group>\r\n          </div>\r\n\r\n          <div class=\"form-row\" *ngIf=\"showSecondCheckQuestion\">\r\n            <sp-radio-group name=\"SecondCheckStatus\" propertyName=\"secondCheckEndOfMonth\" (change)=\"onEndOfMonthChange($event)\"\r\n            label=\"Does your Check Date always fall on last day of the month?\">\r\n              <sp-radio-button [value]=\"false\">No</sp-radio-button>\r\n              <sp-radio-button [value]=\"true\">Yes</sp-radio-button>\r\n            </sp-radio-group>\r\n          </div>\r\n        </div>\r\n        <!-- /additional questions -->\r\n      </sp-model>\r\n    </form>\r\n  </ng-container>\r\n\r\n  <!-- QUARTERLY-->\r\n  <ng-container *ngIf=\"IsFrequencyQuarterly\">\r\n    <form class=\"mb-4 frequency-semi-monthly\">\r\n\r\n      <div class=\"mb-4 mt-5\">\r\n        <sp-control label=\"Select your Pay Period and Check Date with us:\" tooltip=\"true\" class=\"daterange-tooltip\">\r\n          <span tooltipText class=\"label-tooltip\">\r\n            <b>CHECK DATE</b>\r\n            <ul>\r\n              <li>Your check date must be at least 2 business days from today's date.</li>\r\n              <li>If a check date lands on a weekend or holiday it will move to the previous business day.</li>\r\n            </ul>\r\n          </span>\r\n        </sp-control>\r\n      </div>\r\n      <sp-model [model]=\"dateRangevm\" modelType=\"DateRangePayPeriodvm\">\r\n        <div class=\"form-row\">\r\n          <div class=\"form-group col-6 offset-3 col-sm-4 offset-sm-0\">\r\n            <label for=\"\"><span class=\"label-text\">Pay Period Start</span></label>\r\n            <div class=\"input-group\">\r\n              <input class=\"form-control date-field\" (dateSelect)=\"onPeriodStartChange($event)\" (blur)=\"onPeriodStartChange(dateRangevm.fromDate)\"\r\n                outsideDays=\"collapsed\" [firstDayOfWeek]=\"7\" placeholder=\"mm/dd/yyyy\" [markDisabled]=\"disablePeriodDateRule\"\r\n                #input=\"ngModel\" spValidateProperty spAsyncValidateProperty [spValidationStatus]=\"input\" [model]=\"dateRangevm\"\r\n                modelType=\"DateRangePayPeriodvm\" propertyName=\"fromDate\" name=\"quarterlyFrom\" [dayTemplate]=\"t\"\r\n                [(ngModel)]=\"dateRangevm.fromDate\" ngbDatepicker #quarterlyFrom=\"ngbDatepicker\"\r\n                [navigation]=\"navigationType\" (ngModelChange)=\"markControlAsTouched(input2)\">\r\n              <div class=\"input-group-append\"><span class=\"input-group-text clickable\"\r\n                  (click)=\"quarterlyFrom.toggle()\"><i class=\"material-icons\">calendar_today</i></span></div>\r\n              <div class=\"validationError\" [spValidationFeedback]=\"input\" [displayName]=\"label\"></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group col-6 offset-3 col-sm-4 offset-sm-0\">\r\n            <label for=\"\"><span class=\"label-text\">Pay Period End</span></label>\r\n            <div class=\"input-group\">\r\n              <input class=\"form-control date-field\" (dateSelect)=\"onPeriodEndChange($event)\"  (blur)=\"onPeriodEndChange(dateRangevm.toDate)\"\r\n                outsideDays=\"collapsed\" [firstDayOfWeek]=\"7\" placeholder=\"mm/dd/yyyy\" [markDisabled]=\"disablePeriodDateRule\"\r\n                #input2=\"ngModel\" spValidateProperty spAsyncValidateProperty [spValidationStatus]=\"input2\" [model]=\"dateRangevm\"\r\n                modelType=\"DateRangePayPeriodvm\" propertyName=\"toDate\" name=\"quarterlyTo\"\r\n                [(ngModel)]=\"dateRangevm.toDate\" ngbDatepicker #quarterlyTo=\"ngbDatepicker\"\r\n                [navigation]=\"navigationType\" (ngModelChange)=\"markControlAsTouched(input)\">\r\n              <div class=\"input-group-append\"><span class=\"input-group-text clickable\"\r\n                  (click)=\"quarterlyTo.toggle()\"><i class=\"material-icons\">calendar_today</i></span></div>\r\n              <div class=\"validationError\" [spValidationFeedback]=\"input2\" [displayName]=\"label\"></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group col-6 offset-3 col-sm-4 offset-sm-0\">\r\n            <label for=\"\"><span class=\"label-text\">Check Date</span></label>\r\n            <div class=\"input-group\">\r\n              <input class=\"form-control date-field\"  (dateSelect)=\"onCheckDateChange($event)\"  (blur)=\"onCheckDateChange(dateRangevm.checkDate)\"\r\n                outsideDays=\"collapsed\" [firstDayOfWeek]=\"7\" placeholder=\"mm/dd/yyyy\" [markDisabled]=\"disabledCheckDateRule\"\r\n                #quarterlyCheckDateInput=\"ngModel\" spValidateProperty spAsyncValidateProperty [spValidationStatus]=\"quarterlyCheckDateInput\" [model]=\"dateRangevm\"\r\n                modelType=\"DateRangePayPeriodvm\" propertyName=\"checkDate\" name=\"quarterlyCheck\" [(ngModel)]=\"dateRangevm.checkDate\"\r\n                ngbDatepicker #quarterlyCheck=\"ngbDatepicker\" [navigation]=\"navigationType\">\r\n              <div class=\"input-group-append\"><span class=\"input-group-text clickable\"\r\n                  (click)=\"quarterlyCheck.toggle()\"><i class=\"material-icons\">calendar_today</i></span></div>\r\n              <div class=\"validationError\" [spValidationFeedback]=\"quarterlyCheckDateInput\" [displayName]=\"label\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </sp-model>\r\n\r\n      <sp-model [model]=\"companyDates\" modelType=\"companyDates\">\r\n        <!-- Additional Question Group for First Period (check day last day of month / PPEnd last day of month) -->\r\n        <div class=\"mt-4\" *ngIf=\"showFirstPeriodQuestion || showFirstCheckQuestion\">\r\n          <div class=\"form-row\" *ngIf=\"showFirstPeriodQuestion\">\r\n            <sp-radio-group name=\"FirstPeriodStatus\" propertyName=\"firstPeriodEndOfMonth\" (change)=\"onPeriodEndOfMonthChange($event)\"\r\n            label=\"Does your Pay Period End date always fall on the last day of the quarter?\" >\r\n                <sp-radio-button [value]=\"false\">No</sp-radio-button>\r\n                <sp-radio-button [value]=\"true\">Yes</sp-radio-button>\r\n              </sp-radio-group>\r\n            </div>\r\n\r\n\r\n          <div class=\"form-row\" *ngIf=\"showFirstCheckQuestion\">\r\n            <sp-radio-group name=\"FirstCheckStatus\" propertyName=\"firstCheckEndOfMonth\" (change)=\"onEndOfMonthChange($event)\"\r\n            label=\"Does your Check Date always fall on last day of the quarter?\">\r\n              <sp-radio-button [value]=\"false\">No</sp-radio-button>\r\n              <sp-radio-button [value]=\"true\">Yes</sp-radio-button>\r\n            </sp-radio-group>\r\n          </div>\r\n        </div>\r\n      <!-- /additional questions -->\r\n      </sp-model>\r\n    </form>\r\n  </ng-container>\r\n</div>\r\n"],"sourceRoot":""}