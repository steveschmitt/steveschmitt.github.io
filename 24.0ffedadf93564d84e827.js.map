{"version":3,"sources":["webpack:///./src/app/deductions/employee/employee-deductions-container.component.ts","webpack:///./src/app/deductions/employee/employee-deductions-container.component.ts.pre-build-optimizer.js","webpack:///./src/app/deductions/employee/employee-deductions-editor.service.ts","webpack:///./src/app/deductions/employee/employee-deductions-editor.service.ts.pre-build-optimizer.js","webpack:///./src/app/deductions/employee/employee-deduction.guard.ts","webpack:///./src/app/deductions/employee/employee-deduction.guard.ts.pre-build-optimizer.js","webpack:///./src/app/deductions/employee/employee-deduction-editor.component.ts","webpack:///./src/app/deductions/employee/employee-deductions-table.component.ts","webpack:///./src/app/deductions/employee/employee-retirement.component.ts","webpack:///./src/app/deductions/employee/employee-deductions.module.ts","webpack:///./src/app/deductions/employee/employee-deductions-catalog.component.ts","webpack:///./src/app/deductions/employee/employee-deductions-catalog.component.ts.pre-build-optimizer.js","webpack:///./src/app/deductions/employee/employee-deductions-catalog.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/deductions/employee/employee-deductions-catalog.component.html","webpack:///./src/app/deductions/employee/employee-deductions-container.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/deductions/employee/employee-deductions-container.component.html","webpack:///./src/app/deductions/employee/employee-deductions-table.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/deductions/employee/employee-deductions-table.component.html","webpack:///./src/app/deductions/employee/employee-retirement.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/deductions/employee/employee-retirement.component.html","webpack:///./src/app/deductions/employee/employee-deduction-editor.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/deductions/employee/employee-deduction-editor.component.html","webpack:///./src/app/deductions/employee/employee-deductions.module.ngfactory.js.pre-build-optimizer.js"],"names":["EmployeeDeductionViewModel","this","catalog","hasCompanyDeductions","companyDeductionsUrl","app_core","Employees","employee_deductions_container_component_EmployeeDeductionsContainerComponent","EmployeeDeductionsContainerComponent","companyService","editorService","router","session","vm","prototype","ngOnInit","_this","currentCompany$","pipe","Object","first","subscribe","company","companyDeductionCategories","companyKind","isHousehold","currentEmployee$","ee","currentEmployee","gotoCompanyDeduction","navigate","onCatalogSelection","dt","key","employeeDeductionsUrl","defineProperty","get","id","enumerable","configurable","employee_deductions_editor_service_EmployeeDeductionEditorService","EmployeeDeductionEditorService","deductionService","companyDeductionService","employeeDeductionService","ready","deductions","of","empId$","currentEmployeeId$","empDed$","map","empId","getEmployeeDeductions","cds$","entities$","$ded","deductions$","tap","cds","items","mapToItems","companyDeductionItems","length","deductionCategories","shared_deductions","combo$","combineLatest","_a","eds","buildDeductionCategoriesForEmployee","currentState","employeeId","cdis","employeeDeductions","companyDeductions","d","deductionType","find","md","codeTypeId","deductionCodeTypeId","ngInjectableDef","core","factory","deduction_service","company_deduction_service","employee_deduction_service","session_service","token","providedIn","employee_deduction_guard_EmployeeDeductionsGuard","EmployeeDeductionsGuard","service","canActivateChild","EmployeeDeductionEditorComponent","ngOnDestroy","EmployeeDeductionsTableComponent","log","EmployeeRetirementComponent","configureEditor","EmployeeDeductionsModule","employee_deductions_catalog_component_EmployeeDeductionsCatalogComponent","EmployeeDeductionsCatalogComponent","deductionTypeSelected","getListOfDeductionTitles","titles","sort","a","b","order","selectType","emit","RenderType_EmployeeDeductionsCatalogComponent","encapsulation","styles","data","View_EmployeeDeductionsCatalogComponent_3","_l","_v","en","$event","ad","component","parent","context","$implicit","_ck","label","View_EmployeeDeductionsCatalogComponent_4","View_EmployeeDeductionsCatalogComponent_2","common","ngIf","ngIfElse","enabled","View_EmployeeDeductionsCatalogComponent_1","ngForOf","_co","category","deductionTitles","View_EmployeeDeductionsCatalogComponent_0","RenderType_EmployeeDeductionsContainerComponent","View_EmployeeDeductionsContainerComponent_1","View_EmployeeDeductionsContainerComponent_2","View_EmployeeDeductionsContainerComponent_0","EmployeeDeductionsContainerComponentNgFactory","company_service","RenderType_EmployeeDeductionsTableComponent","View_EmployeeDeductionsTableComponent_0","EmployeeDeductionsTableComponentNgFactory","logger_service","RenderType_EmployeeRetirementComponent","View_EmployeeRetirementComponent_0","EmployeeRetirementComponentNgFactory","RenderType_EmployeeDeductionEditorComponent","View_EmployeeDeductionEditorComponent_0","EmployeeDeductionEditorComponentNgFactory","__webpack_require__","__webpack_exports__","EmployeeDeductionsModuleNgFactory","router_ngfactory","ng_bootstrap_ngfactory","fesm5_forms","ng_bootstrap","angular2TextMask","shared_module","path","canDeactivate","page_leave_guard","title","children"],"mappings":"uJAaAA,EAAA,WACEC,KAAAC,WAEAD,KAAAE,qBAAgC,MAG5BC,EAAuBC,EAAA,EAAgBC,UAAY,sBAEzDC,EAAA,WASE,SAAAC,EACUC,EACAC,EACAC,EACAC,GAHAX,KAAAQ,iBACAR,KAAAS,gBACAT,KAAAU,SACAV,KAAAW,UANVX,KAAAY,GAAiC,IAAIb,EAmCvC,OA1BEQ,EAAAM,UAAAC,SAAA,eAAAC,EAAAf,KACEA,KAAKQ,eAAeQ,gBAAgBC,KAAKC,OAAAC,EAAA,EAAAD,IAASE,UAAU,SAAAC,GAC1DN,EAAKH,IACHX,QAASc,EAAKN,cAAca,2BAC5BC,YAAaF,EAAQG,YAAc,YAAc,UACjDtB,qBAAsBa,EAAKN,cAAcP,wBAI7CF,KAAKW,QAAQc,iBAAiBR,KAAKC,OAAAC,EAAA,EAAAD,IAASE,UAAU,SAAAM,GAAM,OAAAX,EAAKY,gBAAkBD,KAGrFnB,EAAAM,UAAAe,qBAAA,WACE5B,KAAKU,OAAOmB,UAAW1B,KAGzBI,EAAAM,UAAAiB,mBAAA,SAAmBC,GAEf/B,KAAKU,OAAOmB,SADC,gBAAXE,EAAGC,KACoBhC,KAAKiC,sBAAqB,gBAE1BjC,KAAKiC,sBAAqB,cAAcF,EAAGC,OAGxEd,OAAAgB,eAAY3B,EAAAM,UAAA,yBCdNsB,IDcN,WACE,OAAU/B,EAAA,EAAgBC,UAAS,IAAIL,KAAK2B,gBAAgBS,GAAE,eCZ1DC,YAAY,EACZC,cAAc,IDatB/B,EA1CA,+GENAgC,EAAA,WASE,SAAAC,EACUC,EACAC,EACAC,EACAhC,GAHAX,KAAAyC,mBACAzC,KAAA0C,0BACA1C,KAAA2C,2BACA3C,KAAAW,UCsDR,OD3CF6B,EAAA3B,UAAA+B,MAAA,eAAA7B,EAAAf,KACE,GAAIA,KAAK6C,WACP,OAAO3B,OAAA4B,EAAA,EAAA5B,EAAG,GAGZ,IAAM6B,EAAS/C,KAAKW,QAAQqC,mBACtBC,EAAUF,EAAO9B,KACrBC,OAAAgC,EAAA,EAAAhC,CAAI,SAAAiC,GACF,OAAApC,EAAK4B,yBAAyBS,sBAAsBD,MAIlDE,EAAOrD,KAAK0C,wBAAwBY,UAEpCC,EAAOvD,KAAKyC,iBAAiBe,YAAYvC,KAC7CC,OAAAC,EAAA,EAAAD,GACAA,OAAAuC,EAAA,EAAAvC,CAAI,SAAA2B,GACF9B,EAAK8B,WAAaA,EAGlBQ,EAAKjC,UAAU,SAAAsC,GACb,IAAMC,EAAQ5C,EAAK6C,WAAWF,EAAK3C,EAAK8B,YACxC9B,EAAK8C,sBAAwBF,EAC7B5C,EAAKb,qBAAuByD,EAAMG,OAAS,EAC3C/C,EAAKgD,oBAAsB7C,OAAA8C,EAAA,EAAA9C,CAAuB2B,QAKlDoB,EAAS/C,OAAAgD,EAAA,EAAAhD,CAAc6B,EAAQQ,EAAMF,EAAMJ,GAAShC,KACxDC,OAAAgC,EAAA,EAAAhC,CAAI,SAACiD,GCxBC,IDwBAhB,EAAAgB,EAAA,GAAYT,EAAAS,EAAA,GAAKA,EAAA,GACF/C,UAAU,SAAAgD,GAC3B,IAAMT,EAAQ5C,EAAK6C,WAAWF,EAAK3C,EAAK8B,YACxC9B,EAAK8C,sBAAwBF,EAE7B5C,EAAKO,2BACHP,EAAKsD,oCACHtD,EAAKO,2BACL6B,EACApC,EAAK8C,sBACLO,QAQV,OAFAH,EAAO7C,YAEA6C,EAAOhD,KACZC,OAAAgC,EAAA,EAAAhC,CAAI,WAAM,aAgBNsB,EAAA3B,UAAAwD,oCAAR,SACEC,EACAC,EACAC,EACAC,GAMA,OAHKH,IACHA,EAAepD,OAAA8C,EAAA,EAAA9C,IAEVA,OAAA8C,EAAA,EAAA9C,CAAiCoD,EAAcE,EAAMC,IAMtDjC,EAAA3B,UAAA+C,WAAR,SAAmBc,EAAuC7B,GAExD,OAAO6B,EAAkBxB,IAAI,SAAAyB,GAC3B,IAAMC,EAAgB/B,EAAWgC,KAAK,SAAAC,GAAM,OAAAA,EAAGC,aAAeJ,EAAEK,sBAEhE,OADa,IAAIhB,EAAA,EAAqBY,GAAe,GAAQD,OC3C/DnC,EAA+ByC,gBAAkBC,EAAA,kBAAsBC,QAAS,WAAoD,OAAO,IAAI3C,EAA+B0C,EAAA,OAAUE,EAAA,GAAsBF,EAAA,OAAUG,EAAA,GAA6BH,EAAA,OAAUI,EAAA,GAA8BJ,EAAA,OAAUK,EAAA,KAAwBC,MAAOhD,EAAgCiD,WAAY,SAC3WjD,EDnEX,GETAkD,EAAA,WAGE,SAAAC,EAAoBC,GAAA5F,KAAA4F,UCElB,ODAFD,EAAA9E,UAAAgF,iBAAA,WACE,OAAO7F,KAAK4F,QAAQhD,SCFpB+C,EAAwBV,gBAAkBC,EAAA,kBAAsBC,QAAS,WAA6C,OAAO,IAAIQ,EAAwBT,EAAA,OAAU3C,KAAwCiD,MAAOG,EAAyBF,WAAY,SAChPE,EDLX,GEJAG,EAAA,WAKE,SAAAA,KAKF,OAHEA,EAAAjF,UAAAC,SAAA,aACAgF,EAAAjF,UAAAkF,YAAA,aAEFD,EAVA,GCGAE,EAAA,WAME,SAAAA,EAAoBtF,EACDD,EACCwF,GAFAjG,KAAAU,SACDV,KAAAS,gBACCT,KAAAiG,MAKtB,OAFED,EAAAnF,UAAAC,SAAA,aAEFkF,EAbA,GC4BAE,EAAA,WAKE,SAAAA,KAOF,OAJEA,EAAArF,UAAAC,SAAA,aAGAoF,EAAArF,UAAAsF,gBAAA,aACFD,EAZA,GCiBAE,EAAA,iDC5CAC,EAAA,oBAAAC,IAQYtG,KAAAuG,sBAAwB,IAAIrB,EAAA,aAgBxC,OAdEhE,OAAAgB,eAAIoE,EAAAzF,UAAA,YCTEsB,IDSN,WACE,OAAInC,KAAKC,SAAWD,KAAKC,QAAQ6D,OAAS,EACjC9D,KAAKC,QAAQ,GAEf,MCPHoC,YAAY,EACZC,cAAc,IDSpBgE,EAAAzF,UAAA2F,yBAAA,SAAyBC,GACvB,OAAOvF,OAAAd,EAAA,EAAAc,CAAkBuF,GAAQC,KAAK,SAACC,EAAGC,GAAO,OAAAD,EAAEE,MAAQD,EAAEC,SAG/DP,EAAAzF,UAAAiG,WAAA,SAAW/E,GACT/B,KAAKuG,sBAAsBQ,KAAKhF,IAEpCuE,EAxBA,GEIIU,EAAgD9B,EAAA,cAAU+B,cAAe,EAAGC,UAAmDC,UAEnI,SAAAC,EAAmDC,GAAM,OAAOnC,EAAA,aAAQ,ICNhEmC,MAAAnC,EAAA,gGAAAoC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAEE,UAAAF,IDMFE,GAD4D,ICP5DH,EAE8BI,UDKdZ,WAAWQ,EAAGK,OAAOC,QAAQC,YAC/BJ,GCRdA,GAAA,aAGEJ,MAAAnC,EAAA,+FAA+BmC,MAAAnC,EAAA,gCAAOmC,MAAAnC,EAAA,+CAAA4C,EAAAR,GAAAQ,EAAAR,EAAA,IAAAA,EAAAK,OAAAC,QAAAC,UAAAE,SDOhD,SAAAC,EAAmDX,GAAM,OAAOnC,EAAA,aAAQ,ICJ9DmC,MAAAnC,EAAA,+FAA+BmC,MAAAnC,EAAA,6CAAA4C,EAAAR,GAAAQ,EAAAR,EAAA,IAAAA,EAAAK,OAAAC,QAAAC,UAAAE,SDKzC,SAAAE,EAAmDZ,GAAM,OAAOnC,EAAA,aAAQ,ICblEmC,MAAAnC,EAAA,gGAEEmC,MAAAnC,EAAA,uCAAAkC,IAAAlC,EAAA,4BAAAgD,EAAA,MAAAhD,EAAA,iBAAAA,EAAA,cAAAiD,MAAA,UAAAC,UAAA,sBAKAf,MAAAnC,EAAA,gDAAA8C,KAA2B,SAAAF,EAAAR,GAL3BQ,EAAAR,EAAA,IAAMA,EAAAM,QAAAC,UAAAQ,QAAAnD,EAAA,aAAAoC,EAAA,KAAwC,MDYtD,SAAAgB,EAAmDjB,GAAM,OAAOnC,EAAA,aAAQ,IChBtEmC,MAAAnC,EAAA,mEACEmC,MAAAnC,EAAA,uGACEmC,MAAAnC,EAAA,uCAAA+C,IAAA/C,EAAA,6BAAAgD,EAAA,SAAAhD,EAAA,iBAAAA,EAAA,YAAAA,EAAA,kBAAAqD,SAAA,qBAC4B,SAAAT,EAAAR,GAAA,IAAAkB,EAAAlB,EAAAI,UAD5BI,EAAAR,EAAA,IAAIkB,EAAAhC,yBAAAgC,EAAwEC,SAAAC,mBAAA,MDe3E,SAAAC,EAAmDtB,GAAM,OAAOnC,EAAA,aAAQ,ICnB/EmC,MAAAnC,EAAA,kEACEmC,MAAAnC,EAAA,iEAAImC,MAAAnC,EAAA,2CACJmC,MAAAnC,EAAA,uCAAAoD,IAAApD,EAAA,4BAAAgD,EAAA,MAAAhD,EAAA,iBAAAA,EAAA,cAAAiD,MAAA,kBAA+B,SAAAL,EAAAR,GAA/BQ,EAAAR,EAAA,IAA+BA,EAAAI,UAADe,WAAA,MDmBhC,4BELIG,EAAkD1D,EAAA,cAAU+B,cAAe,EAAGC,UAAqDC,UAEvI,SAAA0B,EAAqDxB,GAAM,OAAOnC,EAAA,aAAQ,ICjBxEmC,MAAAnC,EAAA,mEACEmC,MAAAnC,EAAA,oGACEmC,MAAAnC,EAAA,mEAAMmC,MAAAnC,EAAA,sJAKRmC,MAAAnC,EAAA,mEAAAoC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAAG,UAAAF,IDYCE,GAD2C,ICX/CH,EAAoCI,UDWhB9F,wBACF6F,GCZlBA,GAAA,aAAoCJ,MAAAnC,EAAA,oDAAAA,EAAA,mBAEpC,cAAA4C,EAAAR,GAAA,IAAAkB,EAAAlB,EAAAI,UAPQI,EAAAR,EAAA,IAAAkB,EAAA5H,GAAAW,aAK4BuG,EAAAR,EAAA,IAAApC,EAAA,aAAAoC,EAAA,IAAAQ,EAAAR,EAAA,IAAApC,EAAA,aAAAoC,EAAAK,OAAA,GAAAa,EAAA5H,GAAAW,iBDcxC,SAAAuH,EAAqDzB,GAAM,OAAOnC,EAAA,aAAQ,ICTxEmC,MAAAnC,EAAA,oGACEmC,MAAAnC,EAAA,+FACEmC,MAAAnC,EAAA,gHAAAoC,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAEE,0BAAAF,IDOAE,GAD+C,ICRjDH,EAEuDI,UDMrC5F,mBAAmB0F,IACrBC,GCThBA,GAAAkB,EAAA3B,IAAA9B,EAAA,4BAAAmB,MAAApG,SAAA,eAAAsG,sBAAA,2BAMFc,MAAAnC,EAAA,kGACEmC,MAAAnC,EAAA,kFAAAA,EAAA,uCAAAxE,EAAA,GAAAA,EAAA,EAAAwE,EAAA,iBAAAA,EAAA,kCAAAA,EAAA,+BAAgC,SAAA4C,EAAAR,GAPhCQ,EAAAR,EAAA,IAOgCA,EAAAI,UANR9G,GAAAX,SAMxB6H,EAAAR,EAAA,MAAgC,MDI/B,SAAAyB,EAAqD1B,GAAM,OAAOnC,EAAA,aAAQ,GAAIA,EAAA,aAAQ,EAAGgD,EAAA,mBC1BhGb,MAAAnC,EAAA,sIACEmC,MAAAnC,EAAA,uCAAA2D,IAAA3D,EAAA,4BAAAgD,EAAA,MAAAhD,EAAA,iBAAAA,EAAA,cAAAiD,MAAA,kBAYAd,MAAAnC,EAAA,uCAAA4D,IAAA5D,EAAA,4BAAAgD,EAAA,MAAAhD,EAAA,iBAAAA,EAAA,cAAAiD,MAAA,kBAA6E,SAAAL,EAAAR,GAAA,IAAAkB,EAAAlB,EAAAI,UAZ7EI,EAAAR,EAAA,KAAc,IAAAkB,EAAA5H,GAAAV,sBAYd4H,EAAAR,EAAA,KAAK,IAAAkB,EAAA5H,GAAAV,uBAAwC,MDe/C,IAAI8I,EAAgD9D,EAAA,aAAQ,yBAA0B5E,EAD/E,SAA0D+G,GAAM,OAAOnC,EAAA,aAAQ,IAAKmC,MAAQnC,EAAA,aAAQ,EAAG,EAAG,KAAM,KAAM,EAAG,4BAA8B,KAAM,KAAM,KAAM6D,EAA6CH,IAAmD1D,EAAA,aAAQ,EAAG,OAAQ,KAAM,EAAG5E,GAA0C2I,EAAA,EAAmB1G,EAAmC7B,EAAA,EAAW6E,EAAA,GAAoB,KAAM,OAAQ,SAAUuC,EAAKR,GAAMQ,EAAIR,EAAI,EAAG,IAAO,6BEf5d4B,EAA8ChE,EAAA,cAAU+B,cAAe,EAAGC,UAAiDC,UAExH,SAAAgC,EAAiD9B,GAAM,OAAOnC,EAAA,aAAQ,ICd7EmC,MAAAnC,EAAA,kEAAKmC,MAAAnC,EAAA,yDAEL,WDcA,IAAIkE,EAA4ClE,EAAA,aAAQ,+BAAgCc,EADjF,SAAsDqB,GAAM,OAAOnC,EAAA,aAAQ,IAAKmC,MAAQnC,EAAA,aAAQ,EAAG,EAAG,KAAM,KAAM,EAAG,kCAAoC,KAAM,KAAM,KAAMiE,EAAyCD,IAA+ChE,EAAA,aAAQ,EAAG,OAAQ,KAAM,EAAGc,GAAsCtF,EAAA,EAAW6B,EAAmC8G,EAAA,GAAmB,KAAM,OAAQ,SAAUvB,EAAKR,GAAMQ,EAAIR,EAAI,EAAG,IAAO,iBEN9bgC,EAAyCpE,EAAA,cAAU+B,cAAe,EAAGC,UAA4CC,UAE9G,SAAAoC,EAA4ClC,GAAM,OAAOnC,EAAA,aAAQ,ICXxEmC,MAAAnC,EAAA,kEAAKmC,MAAAnC,EAAA,mEAEL,WDWA,IAAIsE,EAAuCtE,EAAA,aAAQ,yBAA0BgB,EADtE,SAAiDmB,GAAM,OAAOnC,EAAA,aAAQ,IAAKmC,MAAQnC,EAAA,aAAQ,EAAG,EAAG,KAAM,KAAM,EAAG,4BAA8B,KAAM,KAAM,KAAMqE,EAAoCD,IAA0CpE,EAAA,aAAQ,EAAG,OAAQ,KAAM,EAAGgB,KAAoC,KAAM,OAAQ,SAAU4B,EAAKR,GAAMQ,EAAIR,EAAI,EAAG,IAAO,iBEHtWmC,EAA8CvE,EAAA,cAAU+B,cAAe,EAAGC,UAAiDC,UAExH,SAAAuC,EAAiDrC,GAAM,OAAOnC,EAAA,aAAQ,ICX7EmC,MAAAnC,EAAA,kEAAKmC,MAAAnC,EAAA,yDAEL,WDWA,IAAIyE,EAA4CzE,EAAA,aAAQ,+BAAgCY,EADjF,SAAsDuB,GAAM,OAAOnC,EAAA,aAAQ,IAAKmC,MAAQnC,EAAA,aAAQ,EAAG,EAAG,KAAM,KAAM,EAAG,kCAAoC,KAAM,KAAM,KAAMwE,EAAyCD,IAA+CvE,EAAA,aAAQ,EAAG,OAAQ,KAAM,EAAGY,KAAyC,KAAM,OAAQ,SAAUgC,EAAKR,GAAMQ,EAAIR,EAAI,EAAG,IAAO,+EEZpYsC,EAAAjF,EAAAkF,EAAA,sDAAAC,KA0BA,IAAIA,GAAoC5E,EAAA,aAAQkB,KAAiC,SAAUiB,GAAM,OAAOnC,EAAA,cAASA,EAAA,aAAQ,IAAKA,EAAA,yBAA6BA,EAAA,2CAAuC,GAAI6E,EAAA,EAAmCC,EAAA,EAAsBA,EAAA,EAA2BA,EAAA,EAAgBA,EAAA,EAAiBA,EAAA,EAAgBA,EAAA,EAAgBA,EAAA,EAAgBhB,EAAkDI,EAA8CI,EAAyCG,KAAiD,EAAGzE,EAAA,0BAA8BA,EAAA,cAAkBA,EAAA,aAAQ,KAAMgD,EAAA,eAAmBA,EAAA,sBAA0BhD,EAAA,WAAe,EAAGgD,EAAA,6CAAyChD,EAAA,aAAQ,KAAM+E,EAAA,wCAAoCA,EAAA,4CAAyC/E,EAAA,aAAQ,KAAM+E,EAAA,YAAgBA,EAAA,gBAAqB/E,EAAA,aAAQ,KAAMgF,EAAA,EAAcA,EAAA,GAAehF,EAAA,yBAA6BA,EAAA,SAAagF,EAAA,EAASA,EAAA,IAAsBhF,EAAA,aAAQ,WAAYgD,EAAA,aAAiBA,EAAA,iBAAsBhD,EAAA,aAAQ,WAAY+E,EAAA,yCAAqCA,EAAA,6CAA0C/E,EAAA,aAAQ,WAAY+E,EAAA,YAAgBA,EAAA,gBAAqB/E,EAAA,aAAQ,WAAY+E,EAAA,oBAAwBA,EAAA,wBAA6B/E,EAAA,aAAQ,WAAYxE,EAAA,EAAkBA,EAAA,IAAoB,EAAGA,EAAA,IAAyC,EAAGA,EAAA,KAAewE,EAAA,aAAQ,WAAYgF,EAAA,EAAwBA,EAAA,MAA6BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAoBA,EAAA,MAAyBhF,EAAA,aAAQ,WAAYgF,EAAA,EAAsBA,EAAA,MAA2BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAuBA,EAAA,MAA4BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAuBA,EAAA,MAA4BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAyBA,EAAA,MAA8BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAuBA,EAAA,MAA4BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAoBA,EAAA,MAAyBhF,EAAA,aAAQ,WAAYgF,EAAA,EAAyBA,EAAA,MAA8BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAsBA,EAAA,MAA2BhF,EAAA,aAAQ,WAAYgF,EAAA,EAA0BA,EAAA,MAA+BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAqBA,EAAA,MAA0BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAqBA,EAAA,MAA0BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAyBA,EAAA,MAA8BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAsBA,EAAA,MAA2BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAwBA,EAAA,MAA6BhF,EAAA,aAAQ,WAAYgF,EAAA,EAAeA,EAAA,MAAoBhF,EAAA,aAAQ,WAAYiF,EAAA,eAAoBA,EAAA,mBAAyBjF,EAAA,aAAQ,WAAYkF,GAAA,EAAkBA,GAAA,MAAuBlF,EAAA,aAAQ,WAAYkB,EAA6BA,MAAkClB,EAAA,aAAQ,KAAMxE,EAAA,EAAY,WAAc,SAAW2J,KAAM,GAAI3C,UAAWpH,EAA0CuF,kBAAmBH,GAA8B4E,eAAgBC,GAAA,GAAqBpD,MAAQqD,MAAO,uBAAyBC,WAAaJ,KAAM,GAAI3C,UAAW1B,EAAsCsE,eAAgBC,GAAA,GAAqBpD,MAAQqD,MAAO,yBAA6BH,KAAM,aAAc3C,UAAWxB,EAAiCoE,eAAgBC,GAAA,GAAqBpD,MAAQqD,MAAO,6BAAiCH,KAAM,sBAAuB3C,UAAW5B,EAAsCwE,eAAgBC,GAAA,GAAqBpD,UAAckD,KAAM,gBAAiB3C,UAAW5B,EAAsCwE,eAAgBC,GAAA,GAAqBpD","file":"24.0ffedadf93564d84e827.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { first} from 'rxjs/operators';\r\n\r\nimport { Company, Employee } from '@model';\r\nimport { CompanyService } from '@entity';\r\nimport { DeductionCategory, DeductionTitle } from '@shared/deductions';\r\nimport { EmployeeDeductionEditorService } from './employee-deductions-editor.service';\r\nimport { SessionService } from '@session';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\nclass EmployeeDeductionViewModel {\r\n  catalog: DeductionCategory[] = [];\r\n  companyKind: string;\r\n  hasCompanyDeductions: boolean = null;\r\n}\r\n\r\nconst companyDeductionsUrl = WellKnownRoutes.Employees + '/company-deductions';\r\n\r\n@Component({\r\n  selector: 'sp-employee-deductions',\r\n  templateUrl: './employee-deductions-container.component.html'\r\n})\r\nexport class EmployeeDeductionsContainerComponent implements OnInit {\r\n  company: Company;\r\n  currentEmployee: Employee;\r\n  vm: EmployeeDeductionViewModel = new EmployeeDeductionViewModel();\r\n\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private editorService: EmployeeDeductionEditorService,\r\n    private router: Router,\r\n    private session: SessionService\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.companyService.currentCompany$.pipe(first()).subscribe(company => {\r\n      this.vm = {\r\n        catalog: this.editorService.companyDeductionCategories,\r\n        companyKind: company.isHousehold ? 'household' : 'company',\r\n        hasCompanyDeductions: this.editorService.hasCompanyDeductions,\r\n      };\r\n    });\r\n\r\n    this.session.currentEmployee$.pipe(first()).subscribe(ee => this.currentEmployee = ee);\r\n  }\r\n\r\n  gotoCompanyDeduction() {\r\n    this.router.navigate([ companyDeductionsUrl ]);\r\n  }\r\n\r\n  onCatalogSelection(dt: DeductionTitle): void {\r\n    if (dt.key === 'Retirements') {\r\n      this.router.navigate([`${this.employeeDeductionsUrl}/retirement`]);\r\n    } else {\r\n      this.router.navigate([`${this.employeeDeductionsUrl}/deduction/${dt.key}`]);\r\n    }\r\n  }\r\n  private get employeeDeductionsUrl(): string {\r\n    return `${WellKnownRoutes.Employees}/${this.currentEmployee.id}/deductions`;\r\n  }\r\n}\r\n","import { OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { CompanyService } from '@entity';\nimport { EmployeeDeductionEditorService } from './employee-deductions-editor.service';\nimport { SessionService } from '@session';\nimport { WellKnownRoutes } from '@core';\nvar EmployeeDeductionViewModel = /** @class */ (function () {\n    function EmployeeDeductionViewModel() {\n        this.catalog = [];\n        this.hasCompanyDeductions = null;\n    }\n    return EmployeeDeductionViewModel;\n}());\nvar companyDeductionsUrl = WellKnownRoutes.Employees + '/company-deductions';\nvar EmployeeDeductionsContainerComponent = /** @class */ (function () {\n    function EmployeeDeductionsContainerComponent(companyService, editorService, router, session) {\n        this.companyService = companyService;\n        this.editorService = editorService;\n        this.router = router;\n        this.session = session;\n        this.vm = new EmployeeDeductionViewModel();\n    }\n    EmployeeDeductionsContainerComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.companyService.currentCompany$.pipe(first()).subscribe(function (company) {\n            _this.vm = {\n                catalog: _this.editorService.companyDeductionCategories,\n                companyKind: company.isHousehold ? 'household' : 'company',\n                hasCompanyDeductions: _this.editorService.hasCompanyDeductions,\n            };\n        });\n        this.session.currentEmployee$.pipe(first()).subscribe(function (ee) { return _this.currentEmployee = ee; });\n    };\n    EmployeeDeductionsContainerComponent.prototype.gotoCompanyDeduction = function () {\n        this.router.navigate([companyDeductionsUrl]);\n    };\n    EmployeeDeductionsContainerComponent.prototype.onCatalogSelection = function (dt) {\n        if (dt.key === 'Retirements') {\n            this.router.navigate([this.employeeDeductionsUrl + \"/retirement\"]);\n        }\n        else {\n            this.router.navigate([this.employeeDeductionsUrl + \"/deduction/\" + dt.key]);\n        }\n    };\n    Object.defineProperty(EmployeeDeductionsContainerComponent.prototype, \"employeeDeductionsUrl\", {\n        get: function () {\n            return WellKnownRoutes.Employees + \"/\" + this.currentEmployee.id + \"/deductions\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmployeeDeductionsContainerComponent;\n}());\nexport { EmployeeDeductionsContainerComponent };\n","import { Injectable } from '@angular/core';\r\nimport { of, Observable, combineLatest } from 'rxjs';\r\nimport { first, tap, map } from 'rxjs/operators';\r\n\r\nimport { CompanyDeduction, Deduction, EmployeeDeduction } from '@model';\r\nimport { buildInitialCompanyDeductionsCategories,\r\n         CompanyDeductionItem, DeductionCategory,\r\n         getDeductionCategories,\r\n         updateCompanyDeductionCategories } from '@shared/deductions';\r\nimport { CompanyDeductionService,\r\n         DeductionService,\r\n         EmployeeDeductionService } from '@entity';\r\nimport { EmployeeDeductionItem } from './employee-deduction-item';\r\nimport { SessionService } from '@app/store/session';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EmployeeDeductionEditorService {\r\n  employeeDeductionItems: EmployeeDeductionItem[];\r\n  companyDeductionItems: CompanyDeductionItem[];\r\n  deductions: Deduction[];\r\n  deductionCategories: DeductionCategory[];\r\n  companyDeductionCategories: DeductionCategory[];\r\n  hasCompanyDeductions: boolean;\r\n\r\n  constructor(\r\n    private deductionService: DeductionService,\r\n    private companyDeductionService: CompanyDeductionService,\r\n    private employeeDeductionService: EmployeeDeductionService,\r\n    private session: SessionService\r\n  ) {}\r\n\r\n\r\n  /**\r\n   * Return boolean observable when the\r\n   * deductions master/metadata have been loaded\r\n   * and service is listening for current company deductions\r\n   * (which are cached in this service).\r\n   * Always emits true when ready.\r\n   */\r\n  ready(): Observable<boolean> {\r\n    if (this.deductions) {\r\n      return of(true);\r\n    }\r\n\r\n    const empId$ = this.session.currentEmployeeId$;\r\n    const empDed$ = empId$.pipe(\r\n      map(empId =>\r\n        this.employeeDeductionService.getEmployeeDeductions(empId)\r\n      )\r\n    );\r\n\r\n    const cds$ = this.companyDeductionService.entities$;\r\n\r\n    const $ded = this.deductionService.deductions$.pipe(\r\n      first(),\r\n      tap(deductions => {\r\n        this.deductions = deductions;\r\n\r\n        // No need to unsubscribe because this service never dies\r\n        cds$.subscribe(cds => {\r\n          const items = this.mapToItems(cds, this.deductions);\r\n          this.companyDeductionItems = items;\r\n          this.hasCompanyDeductions = items.length > 0;\r\n          this.deductionCategories = getDeductionCategories(deductions);\r\n        });\r\n      })\r\n    );\r\n\r\n    const combo$ = combineLatest(empId$, $ded, cds$, empDed$).pipe(\r\n      map(([empId, ded, cds, employeeDeductions]) => {\r\n        employeeDeductions.subscribe(eds => {\r\n          const items = this.mapToItems(cds, this.deductions);\r\n          this.companyDeductionItems = items;\r\n\r\n          this.companyDeductionCategories =\r\n            this.buildDeductionCategoriesForEmployee(\r\n              this.companyDeductionCategories,\r\n              empId,\r\n              this.companyDeductionItems,\r\n              eds\r\n            );\r\n        });\r\n      })\r\n    );\r\n\r\n    combo$.subscribe();\r\n\r\n    return combo$.pipe(\r\n      map(() => true)\r\n    );\r\n\r\n\r\n\r\n  }\r\n\r\n  // #region private helpers\r\n\r\n  /**\r\n   * Filter categories to show only the deductions selected at the company level.\r\n   * Also set state to elements based on current employee.\r\n   * @param employeeId Current Employee\r\n   * @param cdis Current Company deductions\r\n   * @param employeeDeductions Employee Deduductions\r\n   */\r\n  private buildDeductionCategoriesForEmployee(\r\n    currentState: DeductionCategory[],\r\n    employeeId: string,\r\n    cdis: CompanyDeductionItem[],\r\n    employeeDeductions: EmployeeDeduction[]\r\n    ): DeductionCategory[] {\r\n\r\n    if (!currentState) {\r\n      currentState = buildInitialCompanyDeductionsCategories();\r\n    }\r\n    return updateCompanyDeductionCategories(currentState, cdis, employeeDeductions);\r\n  }\r\n\r\n  /**\r\n   * Map CompanyDeductions into CompanyDeductionItems\r\n   */\r\n  private mapToItems(companyDeductions: CompanyDeduction[], deductions: Deduction[]): CompanyDeductionItem[] {\r\n    // Current Assumption: 1 Company Deduction -> 1 Item Deduction\r\n    return companyDeductions.map(d => {\r\n      const deductionType = deductions.find(md => md.codeTypeId === d.deductionCodeTypeId);\r\n      const item = new CompanyDeductionItem(deductionType, false, [d]);\r\n      return item;\r\n    });\r\n  }\r\n\r\n  // #endregion private helpers\r\n}\r\n","import { of, combineLatest } from 'rxjs';\nimport { first, tap, map } from 'rxjs/operators';\nimport { buildInitialCompanyDeductionsCategories, CompanyDeductionItem, getDeductionCategories, updateCompanyDeductionCategories } from '@shared/deductions';\nimport { CompanyDeductionService, DeductionService, EmployeeDeductionService } from '@entity';\nimport { SessionService } from '@app/store/session';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../store/entity/entity-services/deduction.service\";\nimport * as i2 from \"../../store/entity/entity-services/company-deduction.service\";\nimport * as i3 from \"../../store/entity/entity-services/employee-deduction.service\";\nimport * as i4 from \"../../store/session/session.service\";\nvar EmployeeDeductionEditorService = /** @class */ (function () {\n    function EmployeeDeductionEditorService(deductionService, companyDeductionService, employeeDeductionService, session) {\n        this.deductionService = deductionService;\n        this.companyDeductionService = companyDeductionService;\n        this.employeeDeductionService = employeeDeductionService;\n        this.session = session;\n    }\n    /**\n     * Return boolean observable when the\n     * deductions master/metadata have been loaded\n     * and service is listening for current company deductions\n     * (which are cached in this service).\n     * Always emits true when ready.\n     */\n    EmployeeDeductionEditorService.prototype.ready = function () {\n        var _this = this;\n        if (this.deductions) {\n            return of(true);\n        }\n        var empId$ = this.session.currentEmployeeId$;\n        var empDed$ = empId$.pipe(map(function (empId) {\n            return _this.employeeDeductionService.getEmployeeDeductions(empId);\n        }));\n        var cds$ = this.companyDeductionService.entities$;\n        var $ded = this.deductionService.deductions$.pipe(first(), tap(function (deductions) {\n            _this.deductions = deductions;\n            // No need to unsubscribe because this service never dies\n            cds$.subscribe(function (cds) {\n                var items = _this.mapToItems(cds, _this.deductions);\n                _this.companyDeductionItems = items;\n                _this.hasCompanyDeductions = items.length > 0;\n                _this.deductionCategories = getDeductionCategories(deductions);\n            });\n        }));\n        var combo$ = combineLatest(empId$, $ded, cds$, empDed$).pipe(map(function (_a) {\n            var empId = _a[0], ded = _a[1], cds = _a[2], employeeDeductions = _a[3];\n            employeeDeductions.subscribe(function (eds) {\n                var items = _this.mapToItems(cds, _this.deductions);\n                _this.companyDeductionItems = items;\n                _this.companyDeductionCategories =\n                    _this.buildDeductionCategoriesForEmployee(_this.companyDeductionCategories, empId, _this.companyDeductionItems, eds);\n            });\n        }));\n        combo$.subscribe();\n        return combo$.pipe(map(function () { return true; }));\n    };\n    // #region private helpers\n    /**\n     * Filter categories to show only the deductions selected at the company level.\n     * Also set state to elements based on current employee.\n     * @param employeeId Current Employee\n     * @param cdis Current Company deductions\n     * @param employeeDeductions Employee Deduductions\n     */\n    EmployeeDeductionEditorService.prototype.buildDeductionCategoriesForEmployee = function (currentState, employeeId, cdis, employeeDeductions) {\n        if (!currentState) {\n            currentState = buildInitialCompanyDeductionsCategories();\n        }\n        return updateCompanyDeductionCategories(currentState, cdis, employeeDeductions);\n    };\n    /**\n     * Map CompanyDeductions into CompanyDeductionItems\n     */\n    EmployeeDeductionEditorService.prototype.mapToItems = function (companyDeductions, deductions) {\n        // Current Assumption: 1 Company Deduction -> 1 Item Deduction\n        return companyDeductions.map(function (d) {\n            var deductionType = deductions.find(function (md) { return md.codeTypeId === d.deductionCodeTypeId; });\n            var item = new CompanyDeductionItem(deductionType, false, [d]);\n            return item;\n        });\n    };\n    EmployeeDeductionEditorService.ngInjectableDef = i0.defineInjectable({ factory: function EmployeeDeductionEditorService_Factory() { return new EmployeeDeductionEditorService(i0.inject(i1.DeductionService), i0.inject(i2.CompanyDeductionService), i0.inject(i3.EmployeeDeductionService), i0.inject(i4.SessionService)); }, token: EmployeeDeductionEditorService, providedIn: \"root\" });\n    return EmployeeDeductionEditorService;\n}());\nexport { EmployeeDeductionEditorService };\n","import { Injectable } from '@angular/core';\r\nimport { CanActivateChild } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { EmployeeDeductionEditorService } from './employee-deductions-editor.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EmployeeDeductionsGuard implements CanActivateChild {\r\n\r\n  constructor(private service: EmployeeDeductionEditorService) { }\r\n\r\n  canActivateChild(): Observable<boolean> {\r\n    return this.service.ready();\r\n  }\r\n}\r\n","import { EmployeeDeductionEditorService } from './employee-deductions-editor.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./employee-deductions-editor.service\";\nvar EmployeeDeductionsGuard = /** @class */ (function () {\n    function EmployeeDeductionsGuard(service) {\n        this.service = service;\n    }\n    EmployeeDeductionsGuard.prototype.canActivateChild = function () {\n        return this.service.ready();\n    };\n    EmployeeDeductionsGuard.ngInjectableDef = i0.defineInjectable({ factory: function EmployeeDeductionsGuard_Factory() { return new EmployeeDeductionsGuard(i0.inject(i1.EmployeeDeductionEditorService)); }, token: EmployeeDeductionsGuard, providedIn: \"root\" });\n    return EmployeeDeductionsGuard;\n}());\nexport { EmployeeDeductionsGuard };\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sp-employee-deduction-editor',\r\n  templateUrl: './employee-deduction-editor.component.html'\r\n})\r\nexport class EmployeeDeductionEditorComponent implements OnInit, OnDestroy {\r\n  constructor() {\r\n  }\r\n  ngOnInit() {}\r\n  ngOnDestroy() {}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoggerService } from '@app/core';\r\nimport { EmployeeDeductionEditorService } from './employee-deductions-editor.service';\r\n\r\n@Component({\r\n  selector: 'sp-employee-deductions-table',\r\n  templateUrl: './employee-deductions-table.component.html'\r\n})\r\nexport class EmployeeDeductionsTableComponent implements OnInit {\r\n\r\n  constructor(private router: Router,\r\n              public editorService: EmployeeDeductionEditorService,\r\n              private log: LoggerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { OnInit, Component } from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { RetirementPlans, RetirementPlanTypes,\r\n         MatchTypes, RetirementPlanApply\r\n       } from '@app/model';\r\n\r\ninterface EmployeeRetirement {\r\n  retirementTypeName: string;\r\n  plan: RetirementPlans;\r\n  planType: RetirementPlanTypes;\r\n  matchType: MatchTypes;\r\n  planPreOrRoth: RetirementPlanApply;\r\n  htmlDescription: SafeHtml | null;\r\n  name: string;\r\n  abbreviation: string;\r\n  canChangeName: boolean;\r\n  canChangeAbbreviation: boolean;\r\n  isMatchAmount?: boolean;\r\n  matchValue?: number;\r\n  isGrossAmount?: boolean;\r\n  matchGrossValue?: number;\r\n  hasPlanYearMax?: boolean;\r\n  planYearMaxValue?: number;\r\n  allowCatchup?: boolean;\r\n  catchupName?: string;\r\n  catchupAbbreviation?: string;\r\n  canChangeCatchupName: boolean;\r\n  canChangeCatchupAbbreviation: boolean;\r\n  matchTierMinPercent?: number;\r\n  isTierMinAmount?: boolean;\r\n  tierMinValue?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'sp-employee-retirement',\r\n  templateUrl: './employee-retirement.component.html'\r\n})\r\nexport class EmployeeRetirementComponent implements OnInit {\r\n  constructor() {\r\n\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  configureEditor() {}\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PageLeaveGuard } from '@core/routing-guards';\nimport { SharedModule } from '@shared/shared.module';\n\nimport { EmployeeDeductionsContainerComponent } from './employee-deductions-container.component';\nimport { EmployeeDeductionsGuard } from './employee-deduction.guard';\nimport { EmployeeDeductionsCatalogComponent } from './employee-deductions-catalog.component';\nimport { EmployeeDeductionEditorComponent } from './employee-deduction-editor.component';\nimport { EmployeeDeductionsTableComponent } from './employee-deductions-table.component';\nimport { EmployeeRetirementComponent } from './employee-retirement.component';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: EmployeeDeductionsContainerComponent,\n    canActivateChild: [EmployeeDeductionsGuard],\n    canDeactivate: [PageLeaveGuard],\n    data: { title: 'Employee Deductions' },\n    children: [\n      {\n        path: '',\n        component: EmployeeDeductionsTableComponent,\n        canDeactivate: [PageLeaveGuard],\n        data: { title: 'Employee Deductions' }\n      },\n      {\n        path: 'retirement',\n        component: EmployeeRetirementComponent,\n        canDeactivate: [PageLeaveGuard],\n        data: { title: 'Company Retirement Plan' }\n      },\n      {\n        path: 'deduction/:id/:code', // sample: deduction/Miscellaneous+No+Goal/2\n        component: EmployeeDeductionEditorComponent,\n        canDeactivate: [PageLeaveGuard],\n        data: {}\n      },\n      {\n        path: 'deduction/:id', // sample: deduction/Medical\n        component: EmployeeDeductionEditorComponent,\n        canDeactivate: [PageLeaveGuard],\n        data: {}\n      }\n    ]\n  },\n\n];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [\n    EmployeeDeductionsContainerComponent,\n    EmployeeRetirementComponent,\n    EmployeeDeductionsTableComponent,\n    EmployeeDeductionsCatalogComponent,\n    EmployeeDeductionEditorComponent\n  ]\n})\nexport class EmployeeDeductionsModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { DeductionCategory,\r\n         DeductionTitle,\r\n         DeductionTitleDictionary } from '@shared/deductions';\r\nimport { dictionaryToArray } from '@core';\r\n\r\n@Component({\r\n  selector: 'sp-employee-deductions-catalog',\r\n  templateUrl: './employee-deductions-catalog.component.html',\r\n})\r\nexport class EmployeeDeductionsCatalogComponent {\r\n  @Input()\r\n  catalog: DeductionCategory[];\r\n\r\n  @Output() deductionTypeSelected = new EventEmitter<DeductionTitle>();\r\n\r\n  get category(): DeductionCategory {\r\n    if (this.catalog && this.catalog.length > 0) {\r\n      return this.catalog[0];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getListOfDeductionTitles(titles: DeductionTitleDictionary): DeductionTitle[] {\r\n    return dictionaryToArray(titles).sort((a, b) =>  a.order - b.order);\r\n  }\r\n\r\n  selectType(dt: DeductionTitle): void {\r\n    this.deductionTypeSelected.emit(dt);\r\n  }\r\n}\r\n","import { EventEmitter } from '@angular/core';\nimport { dictionaryToArray } from '@core';\nvar EmployeeDeductionsCatalogComponent = /** @class */ (function () {\n    function EmployeeDeductionsCatalogComponent() {\n        this.deductionTypeSelected = new EventEmitter();\n    }\n    Object.defineProperty(EmployeeDeductionsCatalogComponent.prototype, \"category\", {\n        get: function () {\n            if (this.catalog && this.catalog.length > 0) {\n                return this.catalog[0];\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EmployeeDeductionsCatalogComponent.prototype.getListOfDeductionTitles = function (titles) {\n        return dictionaryToArray(titles).sort(function (a, b) { return a.order - b.order; });\n    };\n    EmployeeDeductionsCatalogComponent.prototype.selectType = function (dt) {\n        this.deductionTypeSelected.emit(dt);\n    };\n    return EmployeeDeductionsCatalogComponent;\n}());\nexport { EmployeeDeductionsCatalogComponent };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./employee-deductions-catalog.component\";\nvar styles_EmployeeDeductionsCatalogComponent = [];\nvar RenderType_EmployeeDeductionsCatalogComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_EmployeeDeductionsCatalogComponent, data: {} });\nexport { RenderType_EmployeeDeductionsCatalogComponent as RenderType_EmployeeDeductionsCatalogComponent };\nfunction View_EmployeeDeductionsCatalogComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"span\", [[\"class\", \"item-available\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.selectType(_v.parent.context.$implicit) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"i\", [[\"class\", \"material-icons icon\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"add\"])), (_l()(), i0.ɵted(3, null, [\" \", \" \"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.label; _ck(_v, 3, 0, currVal_0); }); }\nfunction View_EmployeeDeductionsCatalogComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"class\", \"item-unavailable\"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.label; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_EmployeeDeductionsCatalogComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"li\", [[\"class\", \"accordion-menu-item\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_EmployeeDeductionsCatalogComponent_3)), i0.ɵdid(2, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"], ngIfElse: [1, \"ngIfElse\"] }, null), (_l()(), i0.ɵand(0, [[\"notAvailable\", 2]], null, 0, null, View_EmployeeDeductionsCatalogComponent_4))], function (_ck, _v) { var currVal_0 = _v.context.$implicit.enabled; var currVal_1 = i0.ɵnov(_v, 3); _ck(_v, 2, 0, currVal_0, currVal_1); }, null); }\nfunction View_EmployeeDeductionsCatalogComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, null, null, null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, \"ul\", [[\"class\", \"employee-deduction-catalog\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_EmployeeDeductionsCatalogComponent_2)), i0.ɵdid(3, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.getListOfDeductionTitles(_co.category.deductionTitles); _ck(_v, 3, 0, currVal_0); }, null); }\nexport function View_EmployeeDeductionsCatalogComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Add Deductions\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_EmployeeDeductionsCatalogComponent_1)), i0.ɵdid(4, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.category; _ck(_v, 4, 0, currVal_0); }, null); }\nexport function View_EmployeeDeductionsCatalogComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-employee-deductions-catalog\", [], null, null, null, View_EmployeeDeductionsCatalogComponent_0, RenderType_EmployeeDeductionsCatalogComponent)), i0.ɵdid(1, 49152, null, 0, i2.EmployeeDeductionsCatalogComponent, [], null, null)], null, null); }\nvar EmployeeDeductionsCatalogComponentNgFactory = i0.ɵccf(\"sp-employee-deductions-catalog\", i2.EmployeeDeductionsCatalogComponent, View_EmployeeDeductionsCatalogComponent_Host_0, { catalog: \"catalog\" }, { deductionTypeSelected: \"deductionTypeSelected\" }, []);\nexport { EmployeeDeductionsCatalogComponentNgFactory as EmployeeDeductionsCatalogComponentNgFactory };\n","<div>\r\n  <h3>Add Deductions</h3>\r\n  <ng-container *ngIf=\"category\">\r\n    <ul class=\"employee-deduction-catalog\">\r\n      <li *ngFor=\"let title of getListOfDeductionTitles(category.deductionTitles)\"\r\n      class=\"accordion-menu-item\">\r\n        <span *ngIf=\"title.enabled; else notAvailable\"\r\n          class=\"item-available\"\r\n          (click)=\"selectType(title)\">\r\n          <i class=\"material-icons icon\">add</i> {{ title.label }}\r\n        </span>\r\n        <ng-template #notAvailable>\r\n          <span class=\"item-unavailable\">{{ title.label }}</span>\r\n        </ng-template>\r\n      </li>\r\n    </ul>\r\n  </ng-container>\r\n</div>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./employee-deductions-catalog.component.ngfactory\";\nimport * as i2 from \"./employee-deductions-catalog.component\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./employee-deductions-container.component\";\nimport * as i6 from \"../../store/entity/entity-services/company.service\";\nimport * as i7 from \"./employee-deductions-editor.service\";\nimport * as i8 from \"../../store/session/session.service\";\nvar styles_EmployeeDeductionsContainerComponent = [];\nvar RenderType_EmployeeDeductionsContainerComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_EmployeeDeductionsContainerComponent, data: {} });\nexport { RenderType_EmployeeDeductionsContainerComponent as RenderType_EmployeeDeductionsContainerComponent };\nfunction View_EmployeeDeductionsContainerComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 6, null, null, null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, \"div\", [[\"class\", \"sp-card sp-card-helper\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(3, null, [\" Looks like you don't have any \", \" deductions set up yet. You'll need to do that first to add your employee's deductions. \"])), (_l()(), i0.ɵeld(4, 0, null, null, 2, \"a\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.gotoCompanyDeduction() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(5, null, [\" Setup \", \" Deductions -> \"])), i0.ɵppd(6, 1)], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.vm.companyKind; _ck(_v, 3, 0, currVal_0); var currVal_1 = i0.ɵunv(_v, 5, 0, _ck(_v, 6, 0, i0.ɵnov(_v.parent, 0), _co.vm.companyKind)); _ck(_v, 5, 0, currVal_1); }); }\nfunction View_EmployeeDeductionsContainerComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 6, \"div\", [[\"class\", \"layout-split-container\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, \"div\", [[\"class\", \"layout-split-menu\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"sp-employee-deductions-catalog\", [], null, [[null, \"deductionTypeSelected\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"deductionTypeSelected\" === en)) {\n        var pd_0 = (_co.onCatalogSelection($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i1.View_EmployeeDeductionsCatalogComponent_0, i1.RenderType_EmployeeDeductionsCatalogComponent)), i0.ɵdid(3, 49152, null, 0, i2.EmployeeDeductionsCatalogComponent, [], { catalog: [0, \"catalog\"] }, { deductionTypeSelected: \"deductionTypeSelected\" }), (_l()(), i0.ɵeld(4, 0, null, null, 2, \"div\", [[\"class\", \"layout-split-content\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i0.ɵdid(6, 212992, [[\"outlet\", 4]], 0, i3.RouterOutlet, [i3.ChildrenOutletContexts, i0.ViewContainerRef, i0.ComponentFactoryResolver, [8, null], i0.ChangeDetectorRef], null, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.vm.catalog; _ck(_v, 3, 0, currVal_0); _ck(_v, 6, 0); }, null); }\nexport function View_EmployeeDeductionsContainerComponent_0(_l) { return i0.ɵvid(0, [i0.ɵpid(0, i4.TitleCasePipe, []), (_l()(), i0.ɵeld(1, 0, null, null, 4, \"div\", [[\"class\", \"static-nav d-flex flex-column\"], [\"id\", \"companyDeductions\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_EmployeeDeductionsContainerComponent_1)), i0.ɵdid(3, 16384, null, 0, i4.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_EmployeeDeductionsContainerComponent_2)), i0.ɵdid(5, 16384, null, 0, i4.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.vm.hasCompanyDeductions === false); _ck(_v, 3, 0, currVal_0); var currVal_1 = (_co.vm.hasCompanyDeductions === true); _ck(_v, 5, 0, currVal_1); }, null); }\nexport function View_EmployeeDeductionsContainerComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-employee-deductions\", [], null, null, null, View_EmployeeDeductionsContainerComponent_0, RenderType_EmployeeDeductionsContainerComponent)), i0.ɵdid(1, 114688, null, 0, i5.EmployeeDeductionsContainerComponent, [i6.CompanyService, i7.EmployeeDeductionEditorService, i3.Router, i8.SessionService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar EmployeeDeductionsContainerComponentNgFactory = i0.ɵccf(\"sp-employee-deductions\", i5.EmployeeDeductionsContainerComponent, View_EmployeeDeductionsContainerComponent_Host_0, {}, {}, []);\nexport { EmployeeDeductionsContainerComponentNgFactory as EmployeeDeductionsContainerComponentNgFactory };\n","<div class=\"static-nav d-flex flex-column\" id=\"companyDeductions\">\r\n  <ng-container *ngIf=\"vm.hasCompanyDeductions === false\">\r\n    <div class=\"sp-card sp-card-helper\">\r\n      <span>\r\n        Looks like you don't have any {{ vm.companyKind  }} deductions set up yet.\r\n        You'll need to do that first to add your employee's deductions.\r\n      </span>\r\n    </div>\r\n    <a (click)=\"gotoCompanyDeduction()\">\r\n      Setup {{ vm.companyKind | titlecase }} Deductions ->\r\n    </a>\r\n  </ng-container>\r\n\r\n  <div *ngIf=\"vm.hasCompanyDeductions === true\" class=\"layout-split-container\">\r\n    <div class=\"layout-split-menu\">\r\n      <sp-employee-deductions-catalog\r\n        [catalog]=\"vm.catalog\"\r\n        (deductionTypeSelected)=\"onCatalogSelection($event)\">\r\n      </sp-employee-deductions-catalog>\r\n    </div>\r\n\r\n    <div class=\"layout-split-content\">\r\n      <router-outlet #outlet=\"outlet\"></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./employee-deductions-table.component\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./employee-deductions-editor.service\";\nimport * as i4 from \"../../core/services/logger.service\";\nvar styles_EmployeeDeductionsTableComponent = [];\nvar RenderType_EmployeeDeductionsTableComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_EmployeeDeductionsTableComponent, data: {} });\nexport { RenderType_EmployeeDeductionsTableComponent as RenderType_EmployeeDeductionsTableComponent };\nexport function View_EmployeeDeductionsTableComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" Employee deductions table\\n\"]))], null, null); }\nexport function View_EmployeeDeductionsTableComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-employee-deductions-table\", [], null, null, null, View_EmployeeDeductionsTableComponent_0, RenderType_EmployeeDeductionsTableComponent)), i0.ɵdid(1, 114688, null, 0, i1.EmployeeDeductionsTableComponent, [i2.Router, i3.EmployeeDeductionEditorService, i4.LoggerService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar EmployeeDeductionsTableComponentNgFactory = i0.ɵccf(\"sp-employee-deductions-table\", i1.EmployeeDeductionsTableComponent, View_EmployeeDeductionsTableComponent_Host_0, {}, {}, []);\nexport { EmployeeDeductionsTableComponentNgFactory as EmployeeDeductionsTableComponentNgFactory };\n","<div>\r\n  Employee deductions table\r\n</div>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./employee-retirement.component\";\nvar styles_EmployeeRetirementComponent = [];\nvar RenderType_EmployeeRetirementComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_EmployeeRetirementComponent, data: {} });\nexport { RenderType_EmployeeRetirementComponent as RenderType_EmployeeRetirementComponent };\nexport function View_EmployeeRetirementComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" Employee Retirement Component: TODO\\n\"]))], null, null); }\nexport function View_EmployeeRetirementComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-employee-retirement\", [], null, null, null, View_EmployeeRetirementComponent_0, RenderType_EmployeeRetirementComponent)), i0.ɵdid(1, 114688, null, 0, i1.EmployeeRetirementComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar EmployeeRetirementComponentNgFactory = i0.ɵccf(\"sp-employee-retirement\", i1.EmployeeRetirementComponent, View_EmployeeRetirementComponent_Host_0, {}, {}, []);\nexport { EmployeeRetirementComponentNgFactory as EmployeeRetirementComponentNgFactory };\n","<div>\r\n  Employee Retirement Component: TODO\r\n</div>\r\n<!-- Code moved from Company Retirement Component to\r\nEmployee Retirement Component.\r\nWill use this in next set of changes.\r\n-->\r\n\r\n<!--\r\n      <sp-radio-group *ngIf=\"vm.plan === RetirementPlans.Plan401K &&\r\n          (vm.planType === RetirementPlanTypes.P401KTraditional ||\r\n            vm.planType === RetirementPlanTypes.P401KSafeHarbor)\"\r\n          name=\"planPreOrRoth\" propertyName=\"planPreOrRoth\"\r\n          (change)=\"configureEditor()\"\r\n          label=\"Apply\"\r\n          tooltip=\"true\">\r\n        <span tooltipText class=\"label-tooltip\">\r\n          Select where to apply the plan: Pre-Tax or Post-Tax (Roth).\r\n        </span>\r\n        <sp-radio-button id=\"ptPreTax\" [value]=\"RetirementPlanApply.PreTax\">Pre-Tax</sp-radio-button>\r\n        <sp-radio-button id=\"ptPostTax\" [value]=\"RetirementPlanApply.PostTax\">Post-Tax (Roth)</sp-radio-button>\r\n      </sp-radio-group>\r\n\r\n\r\n      <sp-radio-group  *ngIf=\"vm.plan === RetirementPlans.Plan401K\"\r\n          name=\"matchType\" propertyName=\"matchType\" label=\"Company Match\" tooltip=\"true\">\r\n        <span tooltipText class=\"label-tooltip\">\r\n          Select the match type used by your company.\r\n        </span>\r\n        <sp-radio-button id=\"matchNoMatch\" [value]=\"MatchTypes.NoMatch\">No Match</sp-radio-button>\r\n        <sp-radio-button id=\"matchSingleTier\" [value]=\"MatchTypes.SingleTier\">Single Tier</sp-radio-button>\r\n        <sp-radio-button id=\"matchTwoTier\" [value]=\"MatchTypes.TwoTiers\">Two Tiers</sp-radio-button>\r\n      </sp-radio-group>\r\n\r\n      <sp-radio-group  *ngIf=\"vm.plan === RetirementPlans.Plan403B\"\r\n        name=\"matchType\" propertyName=\"matchType\" label=\"Company Match\" tooltip=\"true\">\r\n        <span tooltipText class=\"label-tooltip\">\r\n          Select the match type used by your company.\r\n        </span>\r\n        <sp-radio-button id=\"matchNoMatch\" [value]=\"MatchTypes.NoMatch\">No Match</sp-radio-button>\r\n        <sp-radio-button id=\"matchSingleTier\" [value]=\"MatchTypes.SingleTier\">Single Tier</sp-radio-button>\r\n      </sp-radio-group>\r\n\r\n      <div *ngIf=\"vm.matchType === MatchTypes.NoMatch\">\r\n        Company No Match means contributions will be done by employers gross earnings only.\r\n      </div>\r\n\r\n      <div *ngIf=\"vm.matchType === MatchTypes.SingleTier ||\r\n                           vm.matchType === MatchTypes.TwoTiers\">\r\n        <span>Match</span>\r\n        <sp-input name=\"matchTierMinPercent\" [propertyName]=\"matchTierMinPercent\"\r\n                  maskType=\"percent\" class=\"percent-inline\">\r\n        </sp-input>\r\n        <span> of employee contribution up to:</span>\r\n        <sp-amount-or-percent-value [model]=\"vm\"\r\n                                  isAmountPropertyName=\"isTierMinAmount\"\r\n                                  propertyNameValue=\"tierMinValue\"\r\n                                  class=\"aop-inline\">\r\n        </sp-amount-or-percent-value>\r\n        <span> of employee gross earnings.</span>\r\n      </div>\r\n\r\n      <div *ngIf=\"vm.matchType === MatchTypes.TwoTiers\">\r\n        Two tiers. TODO\r\n      </div>\r\n\r\n      <div *ngIf=\"vm.plan === RetirementPlans.Plan401K\">\r\n        <label>Match Amount by Pay Period</label>\r\n        <sp-amount-or-percent-value [model]=\"vm\"\r\n                                    isAmountPropertyName=\"isMatchAmount\"\r\n                                    propertyNameValue=\"matchValue\">\r\n        </sp-amount-or-percent-value>\r\n      </div>\r\n\r\n      <div *ngIf=\"vm.plan === RetirementPlans.Plan401K\">\r\n        <label>Maximun Match of Employee Gross Payment</label>\r\n        <sp-amount-or-percent-value [model]=\"vm\"\r\n                                    isAmountPropertyName=\"isGrossAmount\"\r\n                                    propertyNameValue=\"matchGrossValue\">\r\n        </sp-amount-or-percent-value>\r\n      </div>\r\n\r\n      <div *ngIf=\"vm.plan === RetirementPlans.Plan401K\">\r\n        <sp-radio-group name=\"hasPlanYearMax\" propertyName=\"hasPlanYearMax\"\r\n                        label=\"Do you have a plan year maximun?\">\r\n          <sp-radio-button id=\"planYearMaxNo\" [value]=\"false\">No</sp-radio-button>\r\n          <sp-radio-button id=\"planYearMaxYes\" [value]=\"true\">Yes</sp-radio-button>\r\n        </sp-radio-group>\r\n\r\n        <div>\r\n            <sp-input *ngIf=\"vm.hasPlanYearMax\"\r\n                      label=\"Plan Year Maximum Amount\"\r\n                      name=\"planYearMaxValue\" propertyName=\"planYearMaxValue\"\r\n                      maskType=\"currency\"\r\n                      class=\"currency-amount\">\r\n            </sp-input>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt-5\" *ngIf=\"getEmployeeContributionMode() as contrib\">\r\n        <h2>Employee Contribution Type</h2>\r\n        <p *ngIf=\"contrib === EmployeeContributionModel.Both\">\r\n          Employees may choose Pre-Tax or Post-Tax contributions.\r\n        </p>\r\n        <p *ngIf=\"contrib === EmployeeContributionModel.PreTax\">\r\n          Employees contributions are Pre-Tax only.\r\n        </p>\r\n        <p *ngIf=\"contrib === EmployeeContributionModel.PostTax\">\r\n          Employees contributions are Post-Tax (Roth) only.\r\n        </p>\r\n      </div>\r\n\r\n      <div *ngIf=\"showAdditionalPlans\" class=\"mt-4\">\r\n        <h3>Additional Plan Deductions</h3>\r\n        <sp-radio-group name=\"allowCatchup\" propertyName=\"allowCatchup\"\r\n              label='Do you allow employees over 50 years old to make \"catchup payments\" to the plan?'>\r\n          <sp-radio-button id=\"allowCatchupNo\" [value]=\"false\">No</sp-radio-button>\r\n          <sp-radio-button id=\"allowCatchupYes\" [value]=\"true\">Yes</sp-radio-button>\r\n        </sp-radio-group>\r\n        <div *ngIf=\"vm.allowCatchup\" class=\"deduction-name\">\r\n          <label class=\"inline\">Catch Up Plan Name</label>\r\n          <sp-input [model]=\"vm\" modelType=\"Retirement\" propertyName=\"catchupName\"\r\n                    [disabled]=\"!vm.canChangeCatchupName\">\r\n          </sp-input>\r\n          <label class=\"inline\">Catch Up Plan Abbreviation</label>\r\n          <sp-input [model]=\"vm\" modelType=\"Retirement\" propertyName=\"catchupAbbreviation\"\r\n                    class=\"input-abbreviation\"\r\n                    [disabled]=\"!vm.canChangeCatchupAbbreviation\">\r\n          </sp-input>\r\n\r\n          <div class=\"mt-3\">\r\n            <sp-radio-group name=\"matchCatchUpContribution\" propertyName=\"matchCatchUpContribution\"\r\n                            label=\"Do you match catch-up contribution?\">\r\n              <sp-radio-button id=\"matchCatchUpContributionNo\" [value]=\"false\">No</sp-radio-button>\r\n              <sp-radio-button id=\"matchCatchUpContributionYes\" [value]=\"true\">Yes</sp-radio-button>\r\n            </sp-radio-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n-->\r\n\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./employee-deduction-editor.component\";\nvar styles_EmployeeDeductionEditorComponent = [];\nvar RenderType_EmployeeDeductionEditorComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_EmployeeDeductionEditorComponent, data: {} });\nexport { RenderType_EmployeeDeductionEditorComponent as RenderType_EmployeeDeductionEditorComponent };\nexport function View_EmployeeDeductionEditorComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" Employee Deduction Editor\\n\"]))], null, null); }\nexport function View_EmployeeDeductionEditorComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-employee-deduction-editor\", [], null, null, null, View_EmployeeDeductionEditorComponent_0, RenderType_EmployeeDeductionEditorComponent)), i0.ɵdid(1, 245760, null, 0, i1.EmployeeDeductionEditorComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar EmployeeDeductionEditorComponentNgFactory = i0.ɵccf(\"sp-employee-deduction-editor\", i1.EmployeeDeductionEditorComponent, View_EmployeeDeductionEditorComponent_Host_0, {}, {}, []);\nexport { EmployeeDeductionEditorComponentNgFactory as EmployeeDeductionEditorComponentNgFactory };\n","<div>\r\n  Employee Deduction Editor\r\n</div>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./employee-deductions.module\";\nimport * as i2 from \"../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"../../../../node_modules/@ng-bootstrap/ng-bootstrap/ng-bootstrap.ngfactory\";\nimport * as i4 from \"./employee-deductions-container.component.ngfactory\";\nimport * as i5 from \"./employee-deductions-table.component.ngfactory\";\nimport * as i6 from \"./employee-retirement.component.ngfactory\";\nimport * as i7 from \"./employee-deduction-editor.component.ngfactory\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i11 from \"@angular/router\";\nimport * as i12 from \"angular2-text-mask\";\nimport * as i13 from \"../../shared/shared.module\";\nimport * as i14 from \"./employee-deductions-container.component\";\nimport * as i15 from \"./employee-deduction.guard\";\nimport * as i16 from \"../../core/routing-guards/page-leave-guard\";\nimport * as i17 from \"./employee-deductions-table.component\";\nimport * as i18 from \"./employee-retirement.component\";\nimport * as i19 from \"./employee-deduction-editor.component\";\nvar EmployeeDeductionsModuleNgFactory = i0.ɵcmf(i1.EmployeeDeductionsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵEmptyOutletComponentNgFactory, i3.NgbAlertNgFactory, i3.NgbDatepickerNgFactory, i3.ɵzNgFactory, i3.ɵbaNgFactory, i3.ɵsNgFactory, i3.ɵvNgFactory, i3.ɵwNgFactory, i4.EmployeeDeductionsContainerComponentNgFactory, i5.EmployeeDeductionsTableComponentNgFactory, i6.EmployeeRetirementComponentNgFactory, i7.EmployeeDeductionEditorComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i8.NgLocalization, i8.NgLocaleLocalization, [i0.LOCALE_ID, [2, i8.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i9.ɵangular_packages_forms_forms_i, i9.ɵangular_packages_forms_forms_i, []), i0.ɵmpd(4608, i9.FormBuilder, i9.FormBuilder, []), i0.ɵmpd(4608, i10.NgbModal, i10.NgbModal, [i0.ComponentFactoryResolver, i0.Injector, i10.ɵbb, i10.NgbModalConfig]), i0.ɵmpd(1073742336, i8.CommonModule, i8.CommonModule, []), i0.ɵmpd(1073742336, i9.ɵangular_packages_forms_forms_bb, i9.ɵangular_packages_forms_forms_bb, []), i0.ɵmpd(1073742336, i9.FormsModule, i9.FormsModule, []), i0.ɵmpd(1073742336, i9.ReactiveFormsModule, i9.ReactiveFormsModule, []), i0.ɵmpd(1073742336, i11.RouterModule, i11.RouterModule, [[2, i11.ɵangular_packages_router_router_a], [2, i11.Router]]), i0.ɵmpd(1073742336, i10.NgbAccordionModule, i10.NgbAccordionModule, []), i0.ɵmpd(1073742336, i10.NgbAlertModule, i10.NgbAlertModule, []), i0.ɵmpd(1073742336, i10.NgbButtonsModule, i10.NgbButtonsModule, []), i0.ɵmpd(1073742336, i10.NgbCarouselModule, i10.NgbCarouselModule, []), i0.ɵmpd(1073742336, i10.NgbCollapseModule, i10.NgbCollapseModule, []), i0.ɵmpd(1073742336, i10.NgbDatepickerModule, i10.NgbDatepickerModule, []), i0.ɵmpd(1073742336, i10.NgbDropdownModule, i10.NgbDropdownModule, []), i0.ɵmpd(1073742336, i10.NgbModalModule, i10.NgbModalModule, []), i0.ɵmpd(1073742336, i10.NgbPaginationModule, i10.NgbPaginationModule, []), i0.ɵmpd(1073742336, i10.NgbPopoverModule, i10.NgbPopoverModule, []), i0.ɵmpd(1073742336, i10.NgbProgressbarModule, i10.NgbProgressbarModule, []), i0.ɵmpd(1073742336, i10.NgbRatingModule, i10.NgbRatingModule, []), i0.ɵmpd(1073742336, i10.NgbTabsetModule, i10.NgbTabsetModule, []), i0.ɵmpd(1073742336, i10.NgbTimepickerModule, i10.NgbTimepickerModule, []), i0.ɵmpd(1073742336, i10.NgbTooltipModule, i10.NgbTooltipModule, []), i0.ɵmpd(1073742336, i10.NgbTypeaheadModule, i10.NgbTypeaheadModule, []), i0.ɵmpd(1073742336, i10.NgbModule, i10.NgbModule, []), i0.ɵmpd(1073742336, i12.TextMaskModule, i12.TextMaskModule, []), i0.ɵmpd(1073742336, i13.SharedModule, i13.SharedModule, []), i0.ɵmpd(1073742336, i1.EmployeeDeductionsModule, i1.EmployeeDeductionsModule, []), i0.ɵmpd(1024, i11.ROUTES, function () { return [[{ path: \"\", component: i14.EmployeeDeductionsContainerComponent, canActivateChild: [i15.EmployeeDeductionsGuard], canDeactivate: [i16.PageLeaveGuard], data: { title: \"Employee Deductions\" }, children: [{ path: \"\", component: i17.EmployeeDeductionsTableComponent, canDeactivate: [i16.PageLeaveGuard], data: { title: \"Employee Deductions\" } }, { path: \"retirement\", component: i18.EmployeeRetirementComponent, canDeactivate: [i16.PageLeaveGuard], data: { title: \"Company Retirement Plan\" } }, { path: \"deduction/:id/:code\", component: i19.EmployeeDeductionEditorComponent, canDeactivate: [i16.PageLeaveGuard], data: {} }, { path: \"deduction/:id\", component: i19.EmployeeDeductionEditorComponent, canDeactivate: [i16.PageLeaveGuard], data: {} }] }]]; }, [])]); });\nexport { EmployeeDeductionsModuleNgFactory as EmployeeDeductionsModuleNgFactory };\n"],"sourceRoot":""}