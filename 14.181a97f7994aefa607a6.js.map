{"version":3,"sources":["webpack:///./src/app/deductions/deductions-enabled.service.ts","webpack:///./src/app/earnings/earnings-enabled.service.ts","webpack:///./src/app/employees/employee-setup-questions.ts.EmployeeSetupQuestionsComponent.html","webpack:///./src/app/employees/employee-setup-questions.ts","webpack:///./src/app/employees/employee-setup/employee-list/employee-list-container.component.html","webpack:///./src/app/employees/employee-setup/employee-list/employee-list-container.component.ts","webpack:///./src/app/employees/employee-setup/employee-list/employee-list-view.service.ts","webpack:///./src/app/employees/employee-setup/employee-list/employee-list.component.html","webpack:///./src/app/employees/employee-setup/employee-list/employee-list.component.ts","webpack:///./src/app/employees/employee-setup/employee-setup-container/employee-setup-container.component.html","webpack:///./src/app/employees/employee-setup/employee-setup-container/employee-setup-container.component.ts","webpack:///./src/app/employees/employee/employee-container/employee-container.component.html","webpack:///./src/app/employees/employee/employee-container/employee-container.component.ts","webpack:///./src/app/employees/employee/employee-employment/employee-employment.component.html","webpack:///./src/app/employees/employee/employee-employment/employee-employment.component.ts","webpack:///./src/app/employees/employee/employee-payment/employee-payment-account-vm.ts","webpack:///./src/app/employees/employee/employee-payment/employee-payment-accounts/employee-payment-account-view.service.ts","webpack:///./src/app/employees/employee/employee-payment/employee-payment-accounts/employee-payment-accounts.component.html","webpack:///./src/app/employees/employee/employee-payment/employee-payment-accounts/employee-payment-accounts.component.ts","webpack:///./src/app/employees/employee/employee-payment/employee-payment-method-vm.ts","webpack:///./src/app/employees/employee/employee-payment/employee-payment/employee-payment-earnings-list.component.html","webpack:///./src/app/employees/employee/employee-payment/employee-payment/employee-payment-earnings-list.component.ts","webpack:///./src/app/employees/employee/employee-payment/employee-payment/employee-payment.component.html","webpack:///./src/app/employees/employee/employee-payment/employee-payment/employee-payment.component.ts","webpack:///./src/app/employees/employee/employee-personal/employee-personal.component.html","webpack:///./src/app/employees/employee/employee-personal/employee-personal.component.ts","webpack:///./src/app/employees/employee/employee-tax/employee-tax.component.html","webpack:///./src/app/employees/employee/employee-tax/employee-tax.component.ts","webpack:///./src/app/employees/employee/employee-tax/employee-taxes.component.html","webpack:///./src/app/employees/employee/employee-tax/employee-taxes.component.ts","webpack:///./src/app/employees/employee/employee-view.service.ts","webpack:///./src/app/employees/employees-container.component.ts.EmployeesContainerComponent.html","webpack:///./src/app/employees/employees-container.component.ts","webpack:///./src/app/employees/employees-routing.module.ts","webpack:///./src/app/employees/employees.module.ts","webpack:///./src/app/shared/input/input-date.component.html"],"names":[],"mappings":"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","file":"14.181a97f7994aefa607a6.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { combineLatest, defer, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { EntitySelectors } from '@entity';\nimport { environment } from '@environment';\nimport { SessionService } from '@app/store/session';\n\n@Injectable({ providedIn: 'root' })\nexport class DeductionsEnabledService {\n  /** Feature flag. Delete after deductions go live */\n  featureEnabled = !!environment.enableDeductions;\n\n  /** Live observable emits true when should show Deductions at Company and EE setup levels */\n  showDeductions$: Observable<boolean>;\n\n  /** Live observable emits true when current company has active Company deductions */\n  hasCompanyDeductions$: Observable<boolean>;\n\n  constructor(entitySelectors: EntitySelectors, sessionService: SessionService) {\n    this.hasCompanyDeductions$ = entitySelectors.companyDeduction.entities$.pipe(\n      map(deductions => deductions.filter(d => !d.isRemoved).length > 0)\n    );\n\n    // defer because might toggle this.enabled for testing\n    // TODO: remove dependency on featureEnabled when Deductions go live\n    this.showDeductions$ = defer(() => {\n      return this.featureEnabled\n        ? combineLatest(\n            this.hasCompanyDeductions$,\n            sessionService.currentCompany$.pipe(\n              map(c => !!c.needDeductionSetup),\n              distinctUntilChanged()\n            )\n          ).pipe(\n            map(\n              ([hasCompanyDeductions, needDeductionSetup]) => hasCompanyDeductions || needDeductionSetup\n            )\n          )\n        : of(false);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SessionService } from '@session';\n\n@Injectable({ providedIn: 'root' })\nexport class EarningsEnabledService {\n  /** Live observable emits true when should show Earnings UX */\n  showEarnings$: Observable<boolean>;\n\n  constructor(sessionService: SessionService) {\n    this.showEarnings$ = sessionService.currentCompany$.pipe(\n      map(company => company.showEarningsTab)\n    );\n  }\n}\n","\n  <sp-model [model]=\"company\" modelType=\"Company\" group=\"employeeSetup\">\n    <sp-radio-group name=\"hasPriorPayroll\" propertyName=\"hasPriorPayroll\"\n      (change)=\"hasPriorPayrollChanged()\"\n      label=\"Have you paid any employees this year?\">\n      <sp-radio-button id=\"priorPayrollNo\" [value]=\"false\">No</sp-radio-button>\n      <sp-radio-button id=\"priorPayrollYes\" [value]=\"true\">Yes</sp-radio-button>\n    </sp-radio-group>\n\n    <sp-radio-group name=\"needDeductionSetup\" propertyName=\"needDeductionSetup\"\n      (change)=\"needDeductionSetupChanged()\"\n      label=\"Do some employees have payroll deductions such as medical insurance, retirement plans, or garnishments?\">\n      <sp-radio-button id=\"deductionsNo\" [value]=\"false\">No</sp-radio-button>\n      <sp-radio-button id=\"deductionsYes\" [value]=\"true\">Yes</sp-radio-button>\n    </sp-radio-group>\n  </sp-model>\n  ","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Company } from '@model';\n\n@Component({\n  selector: 'sp-ee-setup-questions',\n  template: `\n  <sp-model [model]=\"company\" modelType=\"Company\" group=\"employeeSetup\">\n    <sp-radio-group name=\"hasPriorPayroll\" propertyName=\"hasPriorPayroll\"\n      (change)=\"hasPriorPayrollChanged()\"\n      label=\"Have you paid any employees this year?\">\n      <sp-radio-button id=\"priorPayrollNo\" [value]=\"false\">No</sp-radio-button>\n      <sp-radio-button id=\"priorPayrollYes\" [value]=\"true\">Yes</sp-radio-button>\n    </sp-radio-group>\n\n    <sp-radio-group name=\"needDeductionSetup\" propertyName=\"needDeductionSetup\"\n      (change)=\"needDeductionSetupChanged()\"\n      label=\"Do some employees have payroll deductions such as medical insurance, retirement plans, or garnishments?\">\n      <sp-radio-button id=\"deductionsNo\" [value]=\"false\">No</sp-radio-button>\n      <sp-radio-button id=\"deductionsYes\" [value]=\"true\">Yes</sp-radio-button>\n    </sp-radio-group>\n  </sp-model>\n  `\n})\nexport class EmployeeSetupQuestionsComponent {\n  @Input() company: Company;\n  @Output() companyChanged = new EventEmitter();\n\n  hasPriorPayrollChanged() {\n    this.companyChanged.emit('hasPriorPayrollChanged');\n  }\n\n  needDeductionSetupChanged() {\n    this.companyChanged.emit('needDeductionSetupChanged');\n  }\n}\n","<div *ngIf=\"vm$ | async as vm\">\r\n  <sp-model [model]=\"vm.company\" modelType=\"Company\" group=\"employeeSetup\">\r\n\r\n    <div *ngIf=\"employeeVms$ | async as employees\">\r\n      <div *ngIf=\"employees.length === 0\">\r\n        <sp-ee-setup-questions [company]=\"vm.company\" (companyChanged)=\"saveCompanyImmediately()\"></sp-ee-setup-questions>\r\n        <hr class=\"mb-4\">\r\n      </div>\r\n\r\n      <div *ngIf=\"hasActiveEes; else noActiveEes\">\r\n        <button *ngIf=\"!vm.readOnly\" type=\"button\" (click)=\"AddEmployee()\" class=\"btn btn-cta btn-icon-combo mb-3\" id=\"addAnotherEEButton\">\r\n          <i class=\"material-icons icon\">add</i>\r\n          <span>Add Another Employee</span>\r\n        </button>\r\n      </div>\r\n      <ng-template #noActiveEes>\r\n        <p>\r\n          You have not entered any {{employees.length > 0 ? 'active ' : ''}}employees yet.\r\n          You will need to add at least one {{employees.length > 0 ? 'active ' : ''}}employee\r\n          before running your first payroll.\r\n        </p>\r\n        <div *ngIf=\"!vm.readOnly\" >\r\n          <sp-radio-group name=\"doneAddingEEs\" propertyName=\"doneAddingEmployees\" label=\"Do you want to add employees at this time?\">\r\n            <!-- The question asks the reverse of the property value, so false:Yes and true:No-->\r\n            <sp-radio-button id=\"doneAddingEEsNo\" [value]=true>No</sp-radio-button>\r\n            <sp-radio-button id=\"doneAddingEEsYes\" [value]=false>Yes</sp-radio-button>\r\n          </sp-radio-group>\r\n\r\n          <div *ngIf=\"vm.company.doneAddingEmployees !== true\" [@ngIfAnim]>\r\n            <button type=\"button\" (click)=\"AddEmployee()\" class=\"btn btn-cta btn-icon-combo\" id=\"addFirstEEButton\"\r\n              style=\"margin-bottom: 0.7rem;\">\r\n              <i class=\"material-icons icon\">add</i>\r\n              <span>Add Employee</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <sp-ee-list *ngIf=\"employees.length > 0\"\r\n        [employees]=employees\r\n        [showRemoved]=\"vm.showRemoved\"\r\n        [readOnly]=\"vm.readOnly\"\r\n        (isRemovedChanged)=\"setEmployeeIsRemoved($event)\">\r\n      </sp-ee-list>\r\n\r\n      <div *ngIf=\"employees.length > 0\">\r\n        <hr class=\"mb-4\">\r\n        <sp-ee-setup-questions [company]=\"vm.company\" (companyChanged)=\"saveCompanyImmediately()\"></sp-ee-setup-questions>\r\n      </div>\r\n    </div>\r\n\r\n  </sp-model>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { combineLatest, BehaviorSubject, Observable } from 'rxjs';\r\nimport { filter, finalize, first, map, startWith, takeWhile, tap } from 'rxjs/operators';\r\n\r\nimport { EmployeeListViewService } from './employee-list-view.service';\r\nimport { EmployeeListVm, EmployeeVm } from './employee-list-vm';\r\nimport { ngIfAnim } from '@animations';\r\nimport { SaverFactoryService, WellKnownRoutes } from '@core';\r\nimport { SessionService } from '@session/session.service';\r\n\r\n@Component({\r\n  selector: 'sp-ee-list-container',\r\n  templateUrl: './employee-list-container.component.html',\r\n  animations: [ngIfAnim],\r\n})\r\nexport class EmployeeListContainerComponent implements OnInit, OnDestroy {\r\n\r\n  employeeVms$: Observable<EmployeeVm[]>;\r\n  hasActiveEes: boolean;\r\n  private vm: EmployeeListVm;\r\n  vm$: Observable<EmployeeListVm>;\r\n\r\n  private inflightSaveCounter = 0;\r\n  private inflightSaveCounterSubject = new BehaviorSubject<number>(0);\r\n\r\n  back: string = WellKnownRoutes.CompanyInfo;\r\n  next: string = WellKnownRoutes.CompanyTaxInfo;\r\n\r\n  constructor(\r\n    private employeeListViewService: EmployeeListViewService,\r\n    private router: Router,\r\n    private saverFactory: SaverFactoryService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    window.scrollTo(0, 0);\r\n\r\n    this.vm$ = this.employeeListViewService.vm$.pipe(\r\n      tap(vm => this.vm = vm) // need VM in this class\r\n    );\r\n\r\n    this.employeeVms$ = this.employeeListViewService.employeeVms$.pipe(\r\n      map(ees => {\r\n        const activeEes = ees.filter(ee => !ee.isRemoved);\r\n        this.hasActiveEes = activeEes.length > 0; // template needs hasActiveEes\r\n        return this.vm && this.vm.showRemoved ? ees : activeEes;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n  }\r\n\r\n  canLeaveAfterSave() {\r\n    return this.save();\r\n  }\r\n\r\n  AddEmployee() {\r\n    this.employeeListViewService.createNewEmployee().subscribe(ee => {\r\n      this.router.navigate([`${WellKnownRoutes.Employees}/${ee.id}/'personal'`]);\r\n    });\r\n  }\r\n\r\n  setEmployeeIsRemoved(eeVm: EmployeeVm) {\r\n    // Don't wait to leave the page. Start saving the removal immediately.\r\n    // Incrementing count when start and decrementing when done.\r\n    this.inflightSaveCounterSubject.next(this.inflightSaveCounter += 1);\r\n    this.employeeListViewService.saveEmployeeIsRemoved(eeVm).pipe(\r\n      finalize(() => this.inflightSaveCounterSubject.next(this.inflightSaveCounter -= 1))\r\n    ).subscribe();\r\n  }\r\n\r\n  private save() {\r\n    // When countdown to zero, no more pending removals\r\n    const inflightSaveCountDown$ = this.inflightSaveCounterSubject.pipe(\r\n      startWith(1), // must emit at least once\r\n      takeWhile(v => v > 0)\r\n    );\r\n\r\n    return this.saverFactory.create()\r\n      .add(\r\n        this.employeeListViewService.saveCompany(this.vm.company),\r\n        inflightSaveCountDown$ // wait until no more pending removals\r\n      )\r\n      .go();\r\n  }\r\n\r\n  /** Save company change immediately. Typically called when an answer to a setup question changes. */\r\n  saveCompanyImmediately() {\r\n    // Don't wait to leave the page. Start saving the company immediately.\r\n    // Incrementing count when start and decrementing when done.\r\n    this.inflightSaveCounterSubject.next(this.inflightSaveCounter += 1);\r\n    this.employeeListViewService.saveCompany(this.vm.company).pipe(\r\n      finalize(() => this.inflightSaveCounterSubject.next(this.inflightSaveCounter -= 1))\r\n    ).subscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { concatMap, debounceTime, first, map, shareReplay, tap, withLatestFrom } from 'rxjs/operators';\r\n\r\nimport { addressToString, areDifferent, getFullName } from '@utils';\r\nimport { CompanyService, EmployeeService, ReviewService, getEmployeeId } from '@entity';\r\nimport { Address, Company, Employee, EmployeePaymentMethod } from '@model';\r\nimport { EmployeeListVm, EmployeeVm } from './employee-list-vm';\r\nimport { BusyService, Saver } from '@core';\r\nimport { SessionService } from '@session';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class EmployeeListViewService {\r\n\r\n  /**\r\n   * Live observable of Employee VMs to display in the EmployeeListComponent.\r\n   * Changes infrequently during the life of the component.\r\n   * Must unsubscribe.\r\n   */\r\n  employeeVms$: Observable<EmployeeVm[]>;\r\n\r\n  /**\r\n   * Live observable of EmployeeListComponent's VM.\r\n   * Changes frequently\r\n   * Must unsubscribe.\r\n   */\r\n  vm$: Observable<EmployeeListVm>;\r\n\r\n  constructor(\r\n    private busyService: BusyService,\r\n    private companyService: CompanyService,\r\n    private employeeService: EmployeeService,\r\n    reviewService: ReviewService,\r\n    private sessionService: SessionService,\r\n    ) {\r\n\r\n    // EE ids for employees with a validation error\r\n    const eeErrors$ = reviewService.employeesErrors$.pipe(\r\n      withLatestFrom(employeeService.entities$),\r\n      map(([ves, employees]) => {\r\n        return ves.reduce((acc, ve) => {\r\n          const model = ve.context.model;\r\n          const eeId = getEmployeeId(ve.context, employees);\r\n          if (eeId) {\r\n            acc[eeId] = true;\r\n          }\r\n          return acc;\r\n        }, {} as {[eeId: string]: boolean});\r\n      }),\r\n    );\r\n\r\n    this.employeeVms$ = combineLatest(\r\n        employeeService.entities$,\r\n        eeErrors$\r\n      ).pipe(\r\n        debounceTime(0), // let all inputs settle synchronously\r\n        map(([ees, eeErrors]) => {\r\n          return ees.map(ee => {\r\n            return {\r\n              id: ee.id,\r\n              name: getFullName(ee) || 'Unnamed',\r\n              type: ee.isTerminated ? 'terminated' : ee.employeeType || '',\r\n              badgeStatus: ee.isRemoved ? 'Deleted' : eeErrors[ee.id] ? 'In Progress' : 'Complete',\r\n              isRemoved: ee.isRemoved === true\r\n            } as EmployeeVm;\r\n          });\r\n        })\r\n    );\r\n\r\n    this.vm$ = combineLatest(\r\n      companyService.currentCompany$,\r\n      sessionService.isAdmin$,\r\n      sessionService.readOnly$\r\n    ).pipe(\r\n      debounceTime(0), // let all inputs settle synchronously\r\n      map(([company, isAdmin, readOnly]) => {\r\n        const co: Company = {\r\n          ...company,\r\n          // Force a true/false value. The default is false: not done\r\n          doneAddingEmployees: company.doneAddingEmployees === true\r\n        };\r\n\r\n        // Used to `showRemoved` if user is Admin.\r\n        // DISABLING until we're sure \"unremove\" is working. PR 516\r\n        // const howRemoved$ = isAdmin;\r\n        const showRemoved = false;\r\n\r\n        const vm: EmployeeListVm = {\r\n          company: co,\r\n          readOnly,\r\n          showRemoved\r\n        };\r\n\r\n        return vm;\r\n      })\r\n    );\r\n  }\r\n\r\n  createNewEmployee(): Observable<Employee> {\r\n    const result$ = this.sessionService.currentCompanyId$.pipe(\r\n      first(),\r\n      concatMap(currentCompanyId => {\r\n        const ee = new Employee();\r\n        ee.id = this.sessionService.generateId();\r\n        ee.companyId = currentCompanyId;\r\n\r\n        // Create the new Home Address to go with the new EE\r\n        const home = Address.createNewEmployeeAddress(ee);\r\n        home.id = this.sessionService.generateId();\r\n        home.companyId = currentCompanyId;\r\n        ee.homeAddressId = home.id;\r\n\r\n        // Create the new EmployeePaymentMethod to go with the new EE\r\n        const epay = new EmployeePaymentMethod();\r\n        epay.id = this.sessionService.generateId();\r\n        epay.companyId = currentCompanyId;\r\n        epay.employeeId = ee.id;\r\n\r\n        return this.employeeService.saveNewEmployee(ee, home, epay);\r\n      })\r\n    );\r\n\r\n    return this.busyService.busy$('Saving new employee', result$);\r\n  }\r\n\r\n  saveCompany(companyVm: Company): Observable<Company> {\r\n    return this.companyService.currentCompany$.pipe(\r\n      first(),\r\n      concatMap(cachedCompany => {\r\n        const chgCompany: Company = {\r\n          ...cachedCompany,\r\n          // only consider the properties that could change in this view\r\n          doneAddingEmployees: companyVm.doneAddingEmployees === true, // force a value, default to false\r\n          needDeductionSetup: companyVm.needDeductionSetup,\r\n          hasPriorPayroll: companyVm.hasPriorPayroll\r\n        };\r\n        if ( (areDifferent(chgCompany, cachedCompany, 'Company')) ) {\r\n          return this.companyService.update(chgCompany);\r\n        } else {\r\n          return Saver.NO_SAVE; // nothing to do\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  saveEmployeeIsRemoved(eeVm: { id: string, isRemoved: boolean }): Observable<Employee> {\r\n    return this.employeeService.saveEmployeeIsRemovedById(eeVm.id, eeVm.isRemoved);\r\n  }\r\n}\r\n","<table class=\"table interactive-table\">\r\n  <tbody>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Type</th>\r\n      <th>Status</th>\r\n      <th>Edit</th>\r\n      <th *ngIf=\"!readOnly\">Delete</th>\r\n    </tr>\r\n    <tr *ngFor=\"let ee of employees; trackBy: byId\">\r\n      <td [routerLink]=\"toLink(ee)\">\r\n        <a>{{ee.name}}</a>\r\n      </td>\r\n      <td [routerLink]=\"toLink(ee)\">\r\n        <a>{{employeeTypeLookup[ee.type]}}</a>\r\n      </td>\r\n      <td [routerLink]=\"toLink(ee)\">\r\n        <a>\r\n          <span class=\"badge badge-sp\" [ngClass]=\"{\r\n              'badge-complete': ee.badgeStatus === 'Complete',\r\n              'badge-inprogress': ee.badgeStatus === 'In Progress',\r\n              'badge-warning': ee.isRemoved\r\n            }\">\r\n            {{ee.badgeStatus}}\r\n          </span>\r\n        </a>\r\n      </td>\r\n      <td>\r\n        <a *ngIf=\"!ee.isRemoved\" [routerLink]=\"toLink(ee)\">\r\n          <i class=\"material-icons icon d-inline btn-circle\" title=\"Edit\">edit</i>\r\n        </a>\r\n      </td>\r\n      <td *ngIf=\"!showRemoved && !readOnly\">\r\n        <a  (click)=\"openDeleteConfirmation(ee)\" tabindex=\"0\">\r\n          <i class=\"material-icons icon d-inline btn-circle\" title=\"Remove\">delete_forever</i>\r\n        </a>\r\n      </td>\r\n      <td *ngIf=\"showRemoved && !readOnly\" title=\"Remove\">\r\n        <input #removedCheckbox type=\"checkbox\" [checked]=\"ee.isRemoved\" (click)=\"removedCheckbox.checked = !removedCheckbox.checked; toggleIsRemoved(ee)\">\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!-- Modal Content for Employee Deletion Confirmation -->\r\n<ng-template #deleteModalContent let-cc=\"close('cancel')\" let-cs=\"close('delete')\" let-d=\"dismiss()\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      <i class=\"material-icons icon text-danger\">warning</i>Delete {{selectedEe.name}}</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"cc\">\r\n      <i class=\"material-icons icon\" aria-hidden=\"true\">close</i>\r\n    </button>\r\n  </div>\r\n  <div class=\"p-4\">\r\n    <p>\r\n      Are you sure you want to\r\n      <strong>delete {{selectedEe.name}}</strong>?\r\n    </p>\r\n    <p>\r\n      This action\r\n      <strong>cannot</strong> be undone and will\r\n      <!-- Actually will soft delete. An admin can undo it-->\r\n      <strong>permanently</strong> delete this employee and its corresponding information.\r\n    </p>\r\n    <sp-input name=\"deleteConfirmationName\" label=\"Type the employee's exact full name to confirm deletion\" [(ngModel)]=\"deleteConfirmationName\"\r\n      autofocus=\"true\">\r\n    </sp-input>\r\n  </div>\r\n  <div class=\"modal-footer d-flex\">\r\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"cc\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"cs\" [disabled]=\"!isDeleteConfirmed\">Delete</button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { EmployeeVm } from './employee-list-vm';\r\n\r\n@Component({\r\n  selector: 'sp-ee-list',\r\n  templateUrl: './employee-list.component.html'\r\n})\r\nexport class EmployeeListComponent {\r\n  @Input() employees: EmployeeVm[];\r\n  @Input() showRemoved = false;\r\n  @Input() readOnly = false;\r\n  @Output() isRemovedChanged = new EventEmitter<EmployeeVm>();\r\n  @ViewChild('deleteModalContent') deleteModalContentEl: ElementRef;\r\n\r\n  deleteConfirmationName: string;\r\n  selectedEe: EmployeeVm;\r\n\r\n  employeeTypeLookup = {\r\n    fulltime: 'Full-Time',\r\n    parttime: 'Part-Time',\r\n    contractor: 'Contractor',\r\n    household: 'Househld',\r\n    officer: 'Officer',\r\n    terminated: 'Terminated',\r\n    '': ''\r\n  };\r\n\r\n  constructor(private modalService: NgbModal) {}\r\n\r\n  byId(eeVm: EmployeeVm) {\r\n    return eeVm.id;\r\n  }\r\n\r\n  openDeleteConfirmation(selectedEe: EmployeeVm) {\r\n    this.deleteConfirmationName = '';\r\n    this.selectedEe = selectedEe;\r\n    this.openDeleteModal();\r\n  }\r\n\r\n  get isDeleteConfirmed() {\r\n    return this.selectedEe.name === this.deleteConfirmationName;\r\n  }\r\n\r\n  private async openDeleteModal() {\r\n    try {\r\n      const result = await this.modalService.open(this.deleteModalContentEl).result;\r\n      if (result === 'delete' && this.isDeleteConfirmed) {\r\n        this.removeEmployee(this.selectedEe);\r\n      }\r\n    } catch (error) {\r\n      // do nothing\r\n    }\r\n  }\r\n\r\n  removeEmployee(eeVm: EmployeeVm) {\r\n    eeVm.isRemoved = true;\r\n    this.isRemovedChanged.emit(eeVm);\r\n  }\r\n\r\n  toggleIsRemoved(eeVm: EmployeeVm) {\r\n    if (eeVm.isRemoved) {\r\n      eeVm.isRemoved = false;\r\n      this.isRemovedChanged.emit(eeVm);\r\n    } else {\r\n      this.openDeleteConfirmation(eeVm);\r\n    }\r\n  }\r\n\r\n  toLink(eeVm: EmployeeVm) {\r\n    return eeVm.isRemoved ? undefined : eeVm.id;\r\n  }\r\n}\r\n","<div class=\"static-nav d-flex flex-column\" id=\"employeeSetupComponent\">\r\n  <header class=\"header-bold\">\r\n    <div class=\"standard\">\r\n      <h1>Employee Setup</h1>\r\n    </div>\r\n  </header>\r\n\r\n  <div class=\"standard\" *ngIf=\"vm$ | async as vm\">\r\n      <div *ngIf=\"vm.showTabs\" class=\"mb-3 mt-3\">\r\n        <ngb-tabset #tabset [activeId]=\"initialId\">\r\n          <ngb-tab *ngFor=\"let tab of tabConfigurations\" [id]=\"tab.link\">\r\n            <ng-template ngbTabTitle>\r\n              <a [routerLink]=\"tab.link\" routerLinkActive #ads=\"routerLinkActive\">{{tab.title}}</a>\r\n            </ng-template>\r\n          </ngb-tab>\r\n        </ngb-tabset>\r\n      </div>\r\n\r\n      <div class=\"container m-0 p-0\">\r\n        <div [@tabRouteAnim] class=\"container\">\r\n          <form>\r\n            <router-outlet #outlet=\"outlet\"></router-outlet>\r\n          </form>\r\n          <sp-nav-bottom [back]=\"backLink\" [next]=\"nextLink\"></sp-nav-bottom>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { NgbTabset } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { first, map, take } from 'rxjs/operators';\r\n\r\nimport { DeductionsEnabledService } from '@app/deductions/deductions-enabled.service';\r\nimport { EarningsEnabledService } from '@app/earnings/earnings-enabled.service';\r\nimport { tabRouteAnim } from '@animations';\r\nimport { WellKnownRoutes } from '@core';\r\nimport { SessionService } from '@app/store/session';\r\n\r\ninterface TabConfiguration {\r\n  link: string; title: string;\r\n}\r\nconst allTabConfigurations = {\r\n  employees: { link: './', title: 'Employees' } as TabConfiguration,\r\n  deductions: { link: './company-deductions', title: 'Deductions' } as TabConfiguration,\r\n  earnings: { link: './earnings', title: 'Earnings' } as TabConfiguration,\r\n};\r\n\r\nexport class EmployeeSetupVm {\r\n  showTabs = false;\r\n}\r\n\r\n@Component({\r\n  selector: 'sp-employee-setup-container',\r\n  templateUrl: './employee-setup-container.component.html',\r\n  animations: [tabRouteAnim]\r\n})\r\nexport class EmployeeSetupContainerComponent implements OnInit {\r\n  @ViewChild('tabset')\r\n  tabset: NgbTabset;\r\n\r\n  backLink: string = WellKnownRoutes.CompanyInfo;\r\n  nextLink: string = WellKnownRoutes.CompanyTaxInfo;\r\n\r\n  private currentTab: TabConfiguration;\r\n  initialId: string; // initial tab id; tabsetSelect changes thereafter\r\n  tabConfigurations: TabConfiguration[] = [allTabConfigurations.employees];\r\n  vm$: Observable<EmployeeSetupVm>;\r\n\r\n  constructor(\r\n    private deductionsEnabledService: DeductionsEnabledService,\r\n    private earningsEnabledService: EarningsEnabledService,\r\n    private ngTitle: Title,\r\n    private route: ActivatedRoute,\r\n    private sessionService: SessionService\r\n  ) {\r\n    this.currentTab = this.tabConfigurations[0];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.vm$ = combineLatest(\r\n        this.deductionsEnabledService.showDeductions$,\r\n        this.earningsEnabledService.showEarnings$,\r\n      ).pipe(\r\n        map(([showDeductions, showEarnings]) => {\r\n          this.tabConfigurations = [allTabConfigurations.employees];\r\n          if (showEarnings) {\r\n            this.tabConfigurations.push( allTabConfigurations.earnings );\r\n          }\r\n          if (showDeductions) {\r\n            this.tabConfigurations.push(allTabConfigurations.deductions);\r\n        }\r\n          let forceHideTabs = false;\r\n          this.sessionService.currentEmployeeId$.pipe(take(1)).subscribe(val => { forceHideTabs = (val != null); });\r\n\r\n          const vm: EmployeeSetupVm = {\r\n            showTabs: (showDeductions || showEarnings) && !forceHideTabs\r\n          };\r\n          return vm;\r\n        })\r\n      );\r\n\r\n    this.watchRouteChange();\r\n  }\r\n\r\n  private getUrlPath(): string {\r\n    if (this.route.snapshot.firstChild) {\r\n      return './' + this.route.snapshot.firstChild.url.join('/');\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private setBrowserTabTitle() {\r\n    this.ngTitle.setTitle('SP ' + this.currentTab.title);\r\n  }\r\n\r\n  /** Listen for route changes. Many of them re-use this component **/\r\n  private watchRouteChange() {\r\n    this.route.url.subscribe(url => { // THE URL VALUE ISN'T ACTUALLY USED. REFACTOR\r\n      window.scrollTo(0, 0);\r\n      const link = this.getUrlPath() || this.tabConfigurations[0].link;\r\n      this.initialId = this.initialId || link; // only useful first time\r\n      // Wait a tick for tabs to draw\r\n      setTimeout(() => this.updateCurrentTabInfo(link));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * When the current tab changes, setup the tab-related info\r\n   * such as the tab title, the browser tab title, the \"next\" link,\r\n   */\r\n  private updateCurrentTabInfo(tabLink: string) {\r\n    this.currentTab = this.tabConfigurations.find(t => t.link === tabLink) ||\r\n      this.tabConfigurations[0];\r\n    if (this.tabset) {\r\n      this.tabset.select(tabLink); // constraint: select expects an ID and not a link -> forcing id == link\r\n    }\r\n    this.setBrowserTabTitle();\r\n  }\r\n\r\n}\r\n","<div class=\"static-nav d-flex flex-column\" id=\"employeeComponent\">\r\n\r\n  <header class=\"header-bold\">\r\n    <div class=\"standard\">\r\n      <a [routerLink]=\"'/employees'\" class=\"-flex nav-link font-weight-bold icon-left\" id=\"backToSetup\">\r\n        <i class=\"material-icons icon\">arrow_backward</i>\r\n        Employee Setup\r\n      </a>\r\n      <h1>{{(vm | fullname) || 'New Employee'}}</h1>\r\n    </div>\r\n  </header>\r\n\r\n  <div class=\"standard\">\r\n\r\n    <ngb-tabset #tabset [activeId]=\"initialId\">\r\n      <ngb-tab *ngFor=\"let tab of tabConfigurations\" [disabled]=\"!hasName\" [id]=\"tab.id\">\r\n        <ng-template ngbTabTitle>\r\n          <span *ngIf=\"hasName; else noTabLink\">\r\n            <a [routerLink]=\"tab.link\" routerLinkActive #ads=\"routerLinkActive\">{{tab.title}}</a>\r\n          </span>\r\n          <ng-template #noTabLink>\r\n            {{tab.title}}\r\n          </ng-template>\r\n        </ng-template>\r\n      </ngb-tab>\r\n    </ngb-tabset>\r\n\r\n    <div class=\"container m-0 p-0\">\r\n      <div [@tabRouteAnim] class=\"container \">\r\n        <form>\r\n          <router-outlet #o=\"outlet\"></router-outlet>\r\n        </form>\r\n        <sp-nav-bottom [back]=\"backLink\" [next]=\"nextLink\" [nextLabel]=\"nextLabel\" [disabled]=\"disabled\" [disableNext]=\"disableNext\"></sp-nav-bottom>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbTabset } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { DeductionsEnabledService } from '@app/deductions/deductions-enabled.service';\r\nimport { Employee } from '@model';\r\nimport { EmployeeViewService } from '@employees/employee/employee-view.service';\r\nimport { getFullName, hasName } from '@utils';\r\nimport { tabRouteAnim } from '@animations';\r\nimport { SubSink, WellKnownRoutes } from '@core';\r\n\r\ninterface TabInfo {\r\n  id: string;\r\n  title: string;\r\n  link: string;\r\n}\r\n\r\nconst commonTabs = {\r\n  personal: { id: 'personal', title: 'Personal', link: 'personal' } as TabInfo,\r\n  employment: { id: 'employment', title: 'Employment', link: 'employment' } as TabInfo,\r\n  payment: { id: 'payment', title: 'Payment', link: 'payment' } as TabInfo,\r\n  deductionsTab: { id: 'deductions', title: 'Deductions', link: 'deductions'}  as TabInfo,\r\n  taxTab: { id: 'tax', title: 'Taxes', link: 'tax' } as TabInfo\r\n};\r\n\r\n@Component({\r\n  selector: 'sp-ee-container',\r\n  templateUrl: './employee-container.component.html',\r\n  animations: [tabRouteAnim]\r\n})\r\nexport class EmployeeContainerComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild('tabset')\r\n  tabset: NgbTabset;\r\n\r\n  backLink: string = WellKnownRoutes.Employees;\r\n  nextLink = commonTabs.employment.link;\r\n  nextLabel = 'Continue';\r\n\r\n  currentTabTitle = commonTabs.personal.title;\r\n  initialId: string; // initial tab id; tabsetSelect changes thereafter\r\n  isNew = false;\r\n  private sub = new SubSink();\r\n  vm: Employee;\r\n\r\n  tabConfigurations: TabInfo[];\r\n\r\n  private tabLink: string; // link to the tab currently (or about to be) displayed\r\n\r\n  constructor(\r\n    private deductionsEnabledService: DeductionsEnabledService,\r\n    private employeeViewService: EmployeeViewService,\r\n    private ngTitle: Title,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTabs();\r\n    this.watchRouteChange();\r\n    this.watchVmChange();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  get disabled() {\r\n    return !this.hasName && !this.isNew;\r\n  }\r\n\r\n  get disableNext() {\r\n    return !this.hasName;\r\n  }\r\n\r\n  get hasName() {\r\n    return hasName(this.vm);\r\n  }\r\n\r\n  private setTabs() {\r\n    this.deductionsEnabledService.showDeductions$.pipe(first()).subscribe(showDeductions => {\r\n      this.tabConfigurations = [\r\n        commonTabs.personal,\r\n        commonTabs.employment,\r\n        commonTabs.payment,\r\n        commonTabs.deductionsTab,\r\n        commonTabs.taxTab\r\n      ]\r\n      .filter(tab => showDeductions || tab.id !== commonTabs.deductionsTab.id);\r\n    });\r\n  }\r\n\r\n  /** Listen for route changes. Many of them re-use this component **/\r\n  private watchRouteChange() {\r\n    this.sub.sink = this.route.url.subscribe(url => {\r\n      const eeId = url.toString();\r\n      this.employeeViewService.setCurrentEmployeeId(eeId);\r\n      window.scrollTo(0, 0);\r\n      this.tabLink = this.route.snapshot.firstChild.url.toString() || this.tabConfigurations[0].link;\r\n      this.initialId = this.initialId || this.tabLink; // only useful first time\r\n      // Wait a tick for tabs to draw\r\n      setTimeout(() => this.updateCurrentTabInfo(this.tabLink));\r\n    });\r\n  }\r\n\r\n  /** Listen for ViewModel change,  typically from setting a new EE Id or saving */\r\n  private watchVmChange() {\r\n    this.sub.sink = this.employeeViewService.currentEmployee$.subscribe(ee => {\r\n      this.vm = ee;\r\n      this.isNew = !hasName(ee); // is new if the employee-in-cache lacks a name\r\n      this.setBrowserTabTitle();\r\n    });\r\n  }\r\n\r\n  private setBrowserTabTitle() {\r\n    this.ngTitle.setTitle(`SP EE ${getFullName(this.vm)} ${this.currentTabTitle}`.trim());\r\n  }\r\n\r\n  /**\r\n   * When the current tab changes, setup the tab-related info\r\n   * such as the tab title, the browser tab title, the \"next\" link,\r\n   */\r\n  private updateCurrentTabInfo(tabLink: string) {\r\n    if (this.tabset) {\r\n      this.tabset.select(tabLink);\r\n    }\r\n    let tabIx = this.tabConfigurations.findIndex(tt => tt.link === tabLink);\r\n    tabIx = tabIx < 0 ? 0 : tabIx;\r\n    this.currentTabTitle = this.tabConfigurations[tabIx].title || '';\r\n    const backTab = this.tabConfigurations[tabIx - 1];\r\n    const nextTab = this.tabConfigurations[(tabIx += 1)];\r\n    // On overflow, navigates away to the EmployeeList!\r\n    this.backLink = backTab ? backTab.link : WellKnownRoutes.Employees;\r\n    this.nextLink = nextTab ? nextTab.link : WellKnownRoutes.Employees;\r\n    this.setBrowserTabTitle();\r\n  }\r\n}\r\n","<div class=\"standard d-flex flex-column\">\r\n\r\n  <div *ngIf=\"vm\">\r\n    <sp-model [model]=\"vm\" modelType=\"Employee\">\r\n      <sp-radio-group name=\"employeeStatus\" propertyName=\"employeeStatus\" label=\"Employee Status\" tooltip=\"true\">\r\n        <span tooltipText class=\"label-tooltip\">\r\n          <p>\r\n            <strong>Active: </strong> Select active for current employees</p>\r\n          <p>\r\n            <strong>New Hire: </strong> Select new hire if you have not yet paid this employee</p>\r\n          <p>\r\n            <strong>Terminated: </strong> Select terminated if this employee is no longer an employee but you have paid\r\n            them in the\r\n            past\r\n          </p>\r\n        </span>\r\n        <sp-radio-button [value]=\"EmployeeStatus.Active\">Active</sp-radio-button>\r\n        <sp-radio-button [value]=\"EmployeeStatus.NewHire\">New Hire</sp-radio-button>\r\n        <sp-radio-button [value]=\"EmployeeStatus.Terminated\">Terminated</sp-radio-button>\r\n      </sp-radio-group>\r\n\r\n      <sp-radio-group name=\"employeeType\" propertyName=\"employeeType\" label=\"Employee Type\" tooltip=\"true\">\r\n        <span tooltipText class=\"label-tooltip\">\r\n          <p><strong>Full Time:</strong> Most states define full time as 30 hours or more per week.</p>\r\n          <p><strong>Part Time:</strong> Most states define part time as less than 30 hours per week.</p>\r\n          <p *ngIf=\"!isHousehold\"><strong>Contractors:</strong> Contractors are independent contractors.</p>\r\n        </span>\r\n        <sp-radio-button [value]=\"EmployeeType.FullTime\">Full Time</sp-radio-button>\r\n        <sp-radio-button [value]=\"EmployeeType.PartTime\">Part Time</sp-radio-button>\r\n        <sp-radio-button *ngIf=\"!isHousehold\" [value]=\"EmployeeType.Contractor\">1099 Contractor</sp-radio-button>\r\n      </sp-radio-group>\r\n\r\n      <sp-date class=\"input-medium\" id=\"hireDate\" propertyName=\"hireDate\" label=\"Hire Date\" tooltip=\"true\">\r\n        <span class=\"label-tooltip\">This should be the first day of employment.\r\n        </span>\r\n      </sp-date>\r\n\r\n      <sp-control *ngIf=\"workAddresses.length > 0\" label=\"Work Location\">\r\n        <sp-select *ngIf=\"workAddresses.length > 1; else oneAddress\" name=\"Work Location\" propertyName=\"workAddressId\">\r\n          <option *ngFor=\"let address of workAddresses\" [value]=\"address.id\">{{address | address}}</option>\r\n        </sp-select>\r\n        <ng-template #oneAddress>\r\n          <p>{{mainWorkAddress | address}}</p>\r\n        </ng-template>\r\n        <a (click)=\"addWorkAddress()\" tabindex=\"0\">+ Add a New Work Location</a>\r\n      </sp-control>\r\n\r\n    </sp-model>\r\n\r\n    <sp-address-modal></sp-address-modal>\r\n\r\n  </div>\r\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\n\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { SaverFactoryService, SubSink, WellKnownRoutes } from '@core';\r\n\r\nimport { EmployeeViewService } from '@employees/employee/employee-view.service';\r\nimport { AddressModalComponent } from '@shared';\r\nimport { Address, Employee, EmployeeStatus, EmployeeType } from '@model';\r\n\r\n@Component({\r\n  selector: 'sp-ee-employment',\r\n  templateUrl: './employee-employment.component.html',\r\n  styleUrls: ['../employee-tab.scss']\r\n})\r\nexport class EmployeeEmploymentComponent implements OnInit, OnDestroy {\r\n  addWorkAddressLink = WellKnownRoutes.CompanyInfo;\r\n  EmployeeStatus = EmployeeStatus;\r\n  EmployeeType = EmployeeType;\r\n  isHousehold: boolean;\r\n  /** Company's main location */\r\n  mainWorkAddress: Address;\r\n  /** Sorted work addresses */\r\n  workAddresses: Address[];\r\n  private subs = new SubSink();\r\n  vm: Employee;\r\n\r\n  @ViewChild(AddressModalComponent) addressModal: AddressModalComponent;\r\n\r\n  constructor(\r\n    private employeeViewService: EmployeeViewService,\r\n    private saverFactory: SaverFactoryService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.subs.sink = this.employeeViewService.workAddresses$.subscribe(\r\n      addresses => {\r\n        this.mainWorkAddress = addresses.find(addr => addr.isMain);\r\n        this.workAddresses = addresses;\r\n      }\r\n    );\r\n\r\n    this.employeeViewService.currentEmployeeSnapshot$.subscribe(ee => {\r\n      this.vm = ee;\r\n      const workAddressId = ee.workAddressId;\r\n      if (!this.mainWorkAddress) {\r\n        // no main Company address (which should be an error)? Clear EE work address\r\n        ee.workAddressId = null;\r\n      } else if (!ee.workAddressId) {\r\n        // no EE work address, initialize to the main work address\r\n        ee.workAddressId = this.mainWorkAddress.id;\r\n      } else if (!this.workAddresses.find(addr => addr.id === ee.workAddressId)) {\r\n        // old location no longer valid; reset to main location\r\n        ee.workAddressId = this.mainWorkAddress.id;\r\n      }\r\n    }\r\n    );\r\n\r\n    this.employeeViewService.currentCompany$.pipe(first()).subscribe(\r\n      company => this.isHousehold = company.isHousehold\r\n    );\r\n  }\r\n\r\n  addWorkAddress() {\r\n    this.addressModal.addOrEditAddress({ isHome: false } as Address).subscribe(\r\n      addr => {\r\n        if (addr) {\r\n          this.vm.workAddressId = addr.id;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  canLeaveAfterSave() {\r\n    return this.save();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  private save() {\r\n    return this.saverFactory.create()\r\n      .add(this.employeeViewService.saveEmployee(this.vm))\r\n      .go();\r\n  }\r\n}\r\n","import { PaymentStrategy, PaymentAccountType } from '@model';\r\n\r\n/**\r\n * ViewModel for an individual EE payment account,\r\n * one of up to three in the EmployeePaymentMethodVm.\r\n * A payment account specifies how the receives some (or all) of the period pay.\r\n * An EE may have receive pay in up to three separate \"accounts\"\r\n */\r\nexport class EmployeePaymentAccountVm {\r\n\r\n  /**\r\n   * Displayed bank name for the bank routing number.\r\n   * Should parallel accountBankName but could contain error message instead.\r\n   */\r\n  bankNameVm = '';\r\n\r\n  constructor(\r\n    /** Account name or name on printed check */\r\n    public accountName = '',\r\n    /** Account bank account number */\r\n    public accountNumber = '',\r\n    /** Account bank routing number */\r\n    public accountRn = '',\r\n    /** Account bank name associated with the bank RN */\r\n    public accountBankName = '',\r\n    /** Account type */\r\n    public accountType: PaymentAccountType = PaymentAccountType.Checking,\r\n    /** Share of payment */\r\n    public value = 0,\r\n    /** Potential types allowed for the account (changed dynamically on UI). Not persisted */\r\n    public accountTypes: PaymentAccountType[] = []\r\n\r\n  ) {\r\n    this.bankNameVm = accountBankName;\r\n  }\r\n\r\n  get accountTypeDisplayName() {\r\n    const type = this.accountType;\r\n    const result = type\r\n      ? type === PaymentAccountType.PrintedCheck ? type : type + ' account'\r\n      : 'account';\r\n    return result.toLowerCase();\r\n  }\r\n\r\n  get isPrintedCheck(): boolean {\r\n    return this.accountType === PaymentAccountType.PrintedCheck;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, of, throwError} from 'rxjs';\r\nimport { concatMap, map, take, withLatestFrom } from 'rxjs/operators';\r\n\r\nimport { areDifferent } from '@core';\r\nimport { EmployeeService, EmployeePaymentMethodService} from '@entity';\r\nimport { EmployeePaymentMethod } from '@model';\r\nimport { EmployeePaymentMethodVm } from '../employee-payment-method-vm';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EmployeePaymentAccountViewService {\r\n\r\n  constructor(\r\n    private employeePaymentMethodService: EmployeePaymentMethodService,\r\n    private employeeService: EmployeeService\r\n  ) { }\r\n\r\n  /**  Return terminating observable of payment record for the employee with the given id */\r\n  private getEmployeePaymentMethodByEeId$(eeId: string) {\r\n    return this.employeeService.entityMap$.pipe(\r\n      map(eeMap => {\r\n        const ee = eeMap[eeId];\r\n        if (!ee) {\r\n          throw new Error(`Employee ${eeId} not found in cache`);\r\n        }\r\n        return ee;\r\n      }),\r\n      withLatestFrom(\r\n        this.employeePaymentMethodService.entities$\r\n      ),\r\n      map(([ee, payments]) => {\r\n        payments = payments.filter(p => p.employeeId === ee.id);\r\n        // there should be exactly one payments for the given employee\r\n        if (payments.length > 1) {\r\n          throw new Error(`Employee ${ee.id} has more than one EmployeePaymentMethod`);\r\n        }\r\n        if (payments.length === 0) {\r\n          throw new Error(`Employee ${ee.id} has no EmployeePaymentMethod`);\r\n        }\r\n        const payment = payments[0];\r\n        return { ee, payment };\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n  /**  Return terminating observable of ViewModel for the EE payment method record of the employee with the given id */\r\n  getEmployeePaymentMethodVm$(eeId: string): Observable<EmployeePaymentMethodVm> {\r\n    return this.getEmployeePaymentMethodByEeId$(eeId).pipe(\r\n      map(({ ee, payment }) => ee && payment ? new EmployeePaymentMethodVm(ee, payment) : null )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Save the EmployeePaymentMethod for the given EmployeePaymentMethod ViewModel\r\n   * @returns Observable of save operation emitting the saved EmployeePaymentMethod\r\n   */\r\n  save(vm: EmployeePaymentMethodVm): Observable<EmployeePaymentMethod> {\r\n    if (!vm) {\r\n      return of(null);\r\n    } else if (!vm.employeeId) {\r\n      return throwError('EmployeePaymentMethod must have an Employee id to save it');\r\n    } else {\r\n      return this.getEmployeePaymentMethodByEeId$(vm.employeeId)\r\n        .pipe(\r\n          concatMap(({payment: oldPayment}) => {\r\n            const newPayment = vm.toEmployeePaymentMethod();\r\n            if (areDifferent(newPayment, oldPayment)) {\r\n              if (oldPayment && oldPayment.id) {\r\n                newPayment.id = oldPayment.id;\r\n              }\r\n              return this.employeePaymentMethodService.upsert(newPayment);\r\n            } else {\r\n              return of(oldPayment);\r\n            }\r\n          })\r\n        );\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"vm$ | async as vm\">\r\n\r\n  <sp-model [model]=\"vm\" modelType=\"EmployeePaymentMethodVm\">\r\n\r\n    <h2>How do you want to pay {{ vm.employeeName }}?</h2>\r\n\r\n    <sp-radio-group name=\"paymentMethod\" propertyName=\"paymentMethod\"\r\n                    (change)=\"setPaymentMethod()\" label=\" \">\r\n      <sp-radio-button [value]=\"PaymentMethod.PrintedCheck\">Printed Check</sp-radio-button>\r\n      <sp-radio-button [value]=\"PaymentMethod.DepositOrPaycard\">Direct Deposit</sp-radio-button>\r\n      <sp-radio-button [value]=\"PaymentMethod.Both\">Both</sp-radio-button>\r\n    </sp-radio-group>\r\n\r\n    <div *ngIf=\"vm.paymentMethod\" [@ngIfAnim]>\r\n      <div *ngIf=\"vm.paymentMethod !== PaymentMethod.PrintedCheck\" [@ngIfAnim]>\r\n\r\n        <sp-radio-group name=\"paymentSplit1\"  propertyName=\"accountCount\"\r\n                        (change)=\"setValidAccountTypes()\">\r\n          <sp-radio-button [class.display-none]=\"vm.paymentMethod === PaymentMethod.Both\" [value]=\"PaymentAccountCount.OneAccount\">One Account\r\n          </sp-radio-button>\r\n          <sp-radio-button [value]=\"PaymentAccountCount.TwoAccounts\">Two Accounts</sp-radio-button>\r\n          <sp-radio-button [value]=\"PaymentAccountCount.ThreeAccounts\">Three Accounts</sp-radio-button>\r\n        </sp-radio-group>\r\n\r\n        <div class=\"liquid-design\">\r\n          <ng-container *ngFor=\"let account of accounts; let fi = first; let ix = index\">\r\n            <div class=\"wrap\" *ngIf=\"shouldShowAccount(ix, account)\">\r\n              <!-- Account Index -->\r\n              <div class=\"item-counter\">\r\n                {{ vm.accountCount === PaymentAccountCount.OneAccount ? '' : ix + 1 }}\r\n              </div>\r\n              <!-- Account Type -->\r\n              <div class=\"item-type-account\">\r\n                <label class=\"title\">Type</label>\r\n                <sp-select name=\"accountType\" classNames=\"account-combo\" (changed)=\"accountTypeChanged(account, $event)\"\r\n                  propertyName=\"accountType\" [model]=\"account\" modelType=\"EmployeePaymentAccountVm\">\r\n                  <option *ngFor=\"let type of account.accountTypes\" [value]=\"type\">{{type | titlecase}}</option>\r\n                </sp-select>\r\n              </div>\r\n              <!-- Routing Number (or disabled input placeholder if printed check) -->\r\n              <div class=\"item-routing\">\r\n                <label class=\"title\">Routing Number</label>\r\n                <div *ngIf=\"account.accountType !== PaymentAccountType.PrintedCheck\" [@ngIfAnim]>\r\n                  <sp-input #routingNumber class=\"input-small\" name=\"routingNumber\"\r\n                    propertyName=\"accountRn\" [model]=\"account\" modelType=\"EmployeePaymentAccountVm\"\r\n                    (onExit)=\"routingNumberExit(account, $event)\" required>\r\n                    <span helpText class=\"bank-name-overlay\" *ngIf=\"account.bankNameVm\">{{account.bankNameVm}}</span>\r\n                  </sp-input>\r\n                </div>\r\n                <div *ngIf=\"account.accountType === PaymentAccountType.PrintedCheck\" [@ngIfAnim]>\r\n                  <sp-input class=\"input-small\" disabled=\"true\"></sp-input>\r\n                </div>\r\n              </div>\r\n              <!-- Account Number (or disabled input placeholder if printed check) -->\r\n              <div class=\"item-account-number\">\r\n                <label class=\"title\">Account Number</label>\r\n                <div *ngIf=\"account.accountType !== PaymentAccountType.PrintedCheck\" [@ngIfAnim]>\r\n                  <sp-input name=\"accountNumber\" class=\"input-small\" required\r\n                    propertyName=\"accountNumber\" [model]=\"account\" modelType=\"EmployeePaymentAccountVm\">\r\n                  </sp-input>\r\n                </div>\r\n                <div *ngIf=\"account.accountType === PaymentAccountType.PrintedCheck\" [@ngIfAnim]>\r\n                  <sp-input class=\"input-small\" disabled=\"true\"></sp-input>\r\n                </div>\r\n              </div>\r\n              <!-- Allocation toggle ($ or %) -->\r\n              <div class=\"item-allocation\">\r\n                <label class=\"title\" *ngIf=\"showAllocationCell\">\r\n                    Split by {{ vm.isPercent ? '%' : '$' }}\r\n                </label>\r\n                <div *ngIf=\"showAllocationCell\" [@ngIfAnim]>\r\n                  <sp-radio-group name=\"splitType\" propertyName=\"isPercent\" class=\"select-indicator-off\">\r\n                    <sp-radio-button id=\"isNotPercent\" [value]=\"false\">$</sp-radio-button>\r\n                    <sp-radio-button id=\"isPercent\" [value]=\"true\">%</sp-radio-button>\r\n                  </sp-radio-group>\r\n                </div>\r\n              </div>\r\n              <!-- Amount -->\r\n              <div class=\"item-amount\">\r\n                <label class=\"title\" *ngIf=\"showAmountCell\">Amount</label>\r\n                <div *ngIf=\"showAmountCell && !isRemainingAmount(ix)\">\r\n                  <sp-input *ngIf=\"!isLast(ix) || vm.isPercent\" name=\"value\"\r\n                    [disabled]=\"isLast(ix)\"\r\n                    class=\"input-xsmall2\"\r\n                    propertyName=\"value\" [model]=\"account\" modelType=\"EmployeePaymentAccountVm\"\r\n                    [maskType]=\"vm.isPercent ? 'percent' : 'currency'\"\r\n                    (onExit)=\"valueChanged(account)\" required>\r\n                  </sp-input>\r\n                </div>\r\n                <div *ngIf=\"showAmountCell && isRemainingAmount(ix)\">\r\n                  <span *ngIf=\"ix === 0\" class=\"remaining-amount\"></span>\r\n                  <span *ngIf=\"ix !== 0\" class=\"remaining-amount label text-uppercase\">Remaining Amount</span>\r\n                </div>\r\n              </div>\r\n              <!-- Clear Row Icon -->\r\n              <div class=\"item-clear\">\r\n                <a class=\"btn-clear\" title=\"Clear Row\" (click)=\"clearAccount(account)\">\r\n                  <i class=\"material-icons icon d-inline btn-circle btn-filled-light\">clear_all</i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </sp-model>\r\n</div>\r\n","import { Component, Input, OnInit, Optional, ViewChild } from '@angular/core';\r\n\r\nimport { of, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { BankRoutingNumberService, BankRoutingResult, Saver } from '@app/core';\r\nimport { EmployeePaymentAccountVm } from '../employee-payment-account-vm';\r\nimport { EmployeePaymentMethod, PaymentAccountType, PaymentMethod } from '@model';\r\nimport { EmployeePaymentMethodVm, ActiveAccounts } from '../employee-payment-method-vm';\r\nimport { EmployeePaymentAccountViewService } from './employee-payment-account-view.service';\r\nimport { ExitEvent, ModelComponent } from '@app/shared';\r\nimport { ngIfAnim } from '@animations';\r\n\r\n/** Instance of a \"Do nothing\" version for when real BankRoutingNumberService is unavailable */\r\nexport const noopBankRoutingNumberService: BankRoutingNumberService = {\r\n  getBankName: (rn: string) => of({ message: '', rn, name: '', code: 0 } as BankRoutingResult)\r\n} as any;\r\n\r\n@Component({\r\n  selector: 'sp-ee-payment-accounts',\r\n  templateUrl: './employee-payment-accounts.component.html',\r\n  animations: [ngIfAnim]\r\n})\r\nexport class EmployeePaymentAccountsComponent implements OnInit {\r\n  @Input() eeId: string;\r\n  @ViewChild(ModelComponent) modelComponent: ModelComponent;\r\n\r\n  accountTypes2: PaymentAccountType[] = [\r\n    PaymentAccountType.Checking,\r\n    PaymentAccountType.Savings,\r\n    // no PrintedCheck\r\n  ];\r\n\r\n  accountTypes3: PaymentAccountType[] = [\r\n    ...this.accountTypes2,\r\n    PaymentAccountType.PrintedCheck\r\n  ];\r\n\r\n  accountTypes = this.accountTypes3;\r\n\r\n  bankNameVm: string;\r\n\r\n  // Enums exposed in the template\r\n  PaymentMethod = PaymentMethod;\r\n  PaymentAccountCount = ActiveAccounts;\r\n  PaymentAccountType = PaymentAccountType;\r\n\r\n  public vm: EmployeePaymentMethodVm;\r\n  vm$: Observable<EmployeePaymentMethodVm>;\r\n\r\n  constructor(\r\n    private viewService: EmployeePaymentAccountViewService,\r\n    @Optional() private bankRnService?: BankRoutingNumberService\r\n  ) {\r\n    if (!this.bankRnService) {\r\n      // no op version\r\n      this.bankRnService = noopBankRoutingNumberService;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.vm$ = this.viewService.getEmployeePaymentMethodVm$(this.eeId).pipe(\r\n      tap(vm => {\r\n        this.vm = vm;\r\n        this.setPaymentMethod();\r\n      })\r\n    );\r\n  }\r\n\r\n  get accounts(): EmployeePaymentAccountVm[] {\r\n    return this.vm.accounts;\r\n  }\r\n\r\n  accountTypeChanged(\r\n    account: EmployeePaymentAccountVm,\r\n    newType: PaymentAccountType\r\n  ) {\r\n    account.accountType = newType;\r\n\r\n    if (newType !== PaymentAccountType.PrintedCheck && !account.bankNameVm) {\r\n      this.getBankName(account);\r\n    }\r\n\r\n    if (newType === PaymentAccountType.PrintedCheck) {\r\n      // Only the current account can be a printedCheck: set others account to null if PrintedCheck\r\n      this.vm.accounts.forEach((acc) => {\r\n        if (acc !== account) {\r\n          setNullIfPrintedCheck(acc);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setValidAccountTypes();\r\n  }\r\n\r\n  clearAccount(account: EmployeePaymentAccountVm) {\r\n    account.accountType = null;\r\n    account.accountBankName = null;\r\n    account.accountName = null;\r\n    account.accountNumber = null;\r\n    account.accountRn = null;\r\n    account.bankNameVm = null;\r\n    account.value = 0;\r\n\r\n    this.vm.recalc();\r\n  }\r\n\r\n  isPrintedCheck(account: EmployeePaymentAccountVm): boolean {\r\n    return account.accountType === PaymentAccountType.PrintedCheck;\r\n  }\r\n\r\n  /** True if this is the remaining amount account */\r\n  isRemainingAmount(index: number): boolean {\r\n    if (this.vm.isPercent) {\r\n      return false; // when percent split, no account is the remaining amount account\r\n    }\r\n    switch (this.vm.accountCount ) {\r\n      case ActiveAccounts.OneAccount:    return index === 0;\r\n      case ActiveAccounts.TwoAccounts:   return index === 1;\r\n      case ActiveAccounts.ThreeAccounts: return index === 2;\r\n      default: return false;\r\n    }\r\n  }\r\n\r\n  private getBankName(account: EmployeePaymentAccountVm) {\r\n    const accountType = account.accountType;\r\n    const accountRn = (account.accountRn || '').trim();\r\n    account.accountBankName = account.bankNameVm = '';\r\n    if (accountType && accountType !== PaymentAccountType.PrintedCheck && accountRn) {\r\n      this.bankRnService.getBankName(account.accountRn).subscribe((bn: string) => {\r\n        if (bn) {\r\n          account.accountBankName = account.bankNameVm = bn;\r\n        } else {\r\n          account.bankNameVm = `No bank for ${account.accountRn}`;\r\n        }\r\n        this.modelComponent.notifyOfModelChange(); // re-validates and updates the view\r\n      });\r\n    }\r\n  }\r\n\r\n  isLast(ix: number): boolean {\r\n    return ix === this.vm.lastAccountIx;\r\n  }\r\n\r\n  routingNumberExit(account: EmployeePaymentAccountVm, exitEvent: ExitEvent) {\r\n    if (exitEvent.isChanged && exitEvent.exitType !== 'destroyed') {\r\n      this.getBankName(account);\r\n    }\r\n  }\r\n\r\n  save(): Observable<EmployeePaymentMethod> {\r\n    return this.viewService.save(this.vm);\r\n  }\r\n\r\n  setPaymentMethod() {\r\n    switch (this.vm.paymentMethod) {\r\n      case PaymentMethod.PrintedCheck:\r\n        this.vm.accountCount = ActiveAccounts.OneAccount;\r\n        this.accounts[0].accountType = PaymentAccountType.PrintedCheck;\r\n        break;\r\n\r\n      case PaymentMethod.DepositOrPaycard:\r\n        if (!this.vm.accountCount) {\r\n          this.vm.accountCount = ActiveAccounts.OneAccount;\r\n        }\r\n\r\n        // Ensure no account type is a printed check nor can become a printed check\r\n        this.accounts.forEach(setNullIfPrintedCheck);\r\n        this.accountTypes = this.accountTypes2;\r\n        break;\r\n\r\n      case PaymentMethod.Both:\r\n        // An account type could be a printed check\r\n        this.accountTypes = this.accountTypes3;\r\n        // Have either two or three accounts\r\n        if (this.vm.accountCount !== ActiveAccounts.ThreeAccounts) {\r\n          this.vm.accountCount = ActiveAccounts.TwoAccounts;\r\n        }\r\n        this.vm.isPercent = false;\r\n    }\r\n    this.setValidAccountTypes();\r\n  }\r\n\r\n  /**\r\n   * Ensure:\r\n   * 1. In Both mode printed-check can only be the last item (legacy limitation) per PKSP-21648\r\n   */\r\n  setValidAccountTypes() {\r\n    let index = 0;\r\n    this.vm.accounts.forEach(acc => {\r\n      const last = (this.vm.accountCount === ActiveAccounts.TwoAccounts && index === 1) ||\r\n                   (this.vm.accountCount === ActiveAccounts.ThreeAccounts && index === 2);\r\n\r\n      acc.accountTypes = (this.vm.paymentMethod === PaymentMethod.Both && last)\r\n                              ? this.accountTypes3\r\n                              : this.accountTypes2;\r\n      index++;\r\n    });\r\n  }\r\n\r\n  shouldShowAccount(index: number, account: EmployeePaymentAccountVm) {\r\n    switch (index) {\r\n      case 0: return true;\r\n      case 1: return this.vm.accountCount !== ActiveAccounts.OneAccount;\r\n      case 2: return this.vm.accountCount === ActiveAccounts.ThreeAccounts;\r\n      default: return false;\r\n    }\r\n  }\r\n\r\n  get showAllocationCell(): boolean {\r\n    return !(\r\n      (!this.vm.isPercent && this.vm.accountCount === ActiveAccounts.OneAccount) ||\r\n      (this.vm.accountCount === ActiveAccounts.OneAccount &&\r\n        this.vm.paymentMethod === PaymentMethod.DepositOrPaycard) ||\r\n        (this.vm.paymentMethod === PaymentMethod.Both)\r\n    );\r\n  }\r\n\r\n  get showAmountCell(): boolean {\r\n    return this.vm.accountCount !== ActiveAccounts.OneAccount ||\r\n      this.vm.paymentMethod !== PaymentMethod.DepositOrPaycard;  }\r\n\r\n  splitValueChanged(account: EmployeePaymentAccountVm) {\r\n    this.vm.recalc();\r\n  }\r\n\r\n  valueChanged(account: EmployeePaymentAccountVm) {\r\n    if (this.vm.isPercent && this.vm.accountCount !== ActiveAccounts.OneAccount) {\r\n      this.vm.recalc();\r\n    }\r\n  }\r\n}\r\n\r\nfunction setNullIfPrintedCheck(account: EmployeePaymentAccountVm) {\r\n  if (account.accountType === PaymentAccountType.PrintedCheck) {\r\n    account.accountType = null;\r\n  }\r\n}\r\n","import { Employee, EmployeePaymentMethod, PaymentAccountType, PaymentMethod, PaymentStrategy } from '@model';\r\nimport { EmployeePaymentAccountVm } from './employee-payment-account-vm';\r\nimport { getFullName, toDollars } from '@core/utils';\r\n\r\n/** EE pay is split among one, two, or three active accounts */\r\nexport enum ActiveAccounts {\r\n  OneAccount = 'one-account',\r\n  TwoAccounts = 'two-accounts',\r\n  ThreeAccounts = 'three-accounts'\r\n}\r\n\r\n/**\r\n * ViewModel for an EE's payment method.\r\n * The payment method contains 1-3 Employee Payment Accounts that\r\n * specify how the EE's pay should be distributed into 1-3 payment accounts.\r\n */\r\nexport class EmployeePaymentMethodVm {\r\n  private _accountCount?: ActiveAccounts;\r\n  private _isPercent?: boolean;\r\n  private _strategy: PaymentStrategy;\r\n\r\n  accounts: EmployeePaymentAccountVm[];\r\n  companyId: string;\r\n  employeeId: string;\r\n  employeeName: string;\r\n  id: string;\r\n  paymentMethod: PaymentMethod;\r\n\r\n  constructor(\r\n    public ee: Employee,\r\n    eePay: EmployeePaymentMethod,\r\n  ) {\r\n    this.companyId = ee.companyId;\r\n    this.employeeId = ee.id;\r\n    this.employeeName = getFullName(ee) || '';\r\n    this.id = eePay.id;\r\n    this.paymentMethod = eePay.paymentMethod;\r\n\r\n    // tslint:disable-next-line:prefer-const\r\n    let { split1IsActive, split2IsActive, strategy } = eePay;\r\n\r\n    if (strategy === PaymentStrategy.SinglePayment) {\r\n      this._accountCount = ActiveAccounts.OneAccount;\r\n      split1IsActive = false;\r\n      split2IsActive = false;\r\n\r\n      // Payment method must be either printed check or deposit.\r\n      // Can't be both which implies a split\r\n      this.paymentMethod = eePay.defaultAccountType === PaymentAccountType.PrintedCheck\r\n        ? PaymentMethod.PrintedCheck : PaymentMethod.DepositOrPaycard;\r\n    } else if (split1IsActive) {\r\n      this._accountCount = split2IsActive\r\n        ? ActiveAccounts.ThreeAccounts\r\n        : ActiveAccounts.TwoAccounts;\r\n    }\r\n\r\n    // Helper fns\r\n    const getDefault = () => new EmployeePaymentAccountVm(\r\n      eePay.defaultAccountName || this.employeeName,\r\n      eePay.defaultAccountNumber || '',\r\n      eePay.defaultAccountRn || '',\r\n      eePay.defaultAccountBankName || '',\r\n      eePay.defaultAccountType,\r\n    );\r\n\r\n    const getSplit1 = () => new EmployeePaymentAccountVm(\r\n      eePay.split1AccountName || this.employeeName,\r\n      eePay.split1AccountNumber || '',\r\n      eePay.split1AccountRn || '',\r\n      eePay.split1AccountBankName || '',\r\n      eePay.split1AccountType,\r\n      eePay.split1Value,\r\n    );\r\n\r\n    const getSplit2 = () => new EmployeePaymentAccountVm(\r\n      eePay.split2AccountName || this.employeeName,\r\n      eePay.split2AccountNumber || '',\r\n      eePay.split2AccountRn || '',\r\n      eePay.split2AccountBankName || '',\r\n      eePay.split2AccountType,\r\n      eePay.split2Value\r\n    );\r\n\r\n    const makeNew = () => new EmployeePaymentAccountVm();\r\n\r\n    // Set the 3 accounts based on the number of active accounts\r\n    switch (this._accountCount) {\r\n      case ActiveAccounts.OneAccount:\r\n        this.accounts = [getDefault(), makeNew(), makeNew()];\r\n        break;\r\n      case ActiveAccounts.TwoAccounts:\r\n        this.accounts = [getSplit1(), getDefault(), makeNew()];\r\n        break;\r\n      case ActiveAccounts.ThreeAccounts:\r\n        this.accounts = [getSplit1(), getSplit2(), getDefault()];\r\n        break;\r\n      default:\r\n        this.accounts = [makeNew(), makeNew(), makeNew()];\r\n    }\r\n\r\n    this.setFlagsFromStrategy(strategy);\r\n    this.recalc();\r\n  }\r\n\r\n  get accountCount(): ActiveAccounts {\r\n    return this._accountCount;\r\n  }\r\n\r\n  set accountCount(value: ActiveAccounts) {\r\n    this._accountCount = value || ActiveAccounts.OneAccount;\r\n\r\n    if (this._accountCount !== ActiveAccounts.OneAccount && this._isPercent == null) {\r\n      this._isPercent = false; // split by amount by default\r\n    }\r\n    const last = this.lastAccountIx;\r\n\r\n    // removed PrintedCheck from unused accounts so it becomes available as a choice\r\n    for (let i = last + 1; i < 3; i++) {\r\n      const acct = this.accounts[i];\r\n      if (acct.isPrintedCheck) {\r\n        acct.accountType = PaymentAccountType.Checking;\r\n      }\r\n    }\r\n    this.recalc();\r\n  }\r\n\r\n  /** Set all account values to zero and recalc */\r\n  private clearAccountValues() {\r\n    // Clear split values whenever the strategy changes;\r\n    this.accounts.forEach(a => (a.value = 0));\r\n    this.recalc();\r\n  }\r\n\r\n  get isPercent() {\r\n    return this._isPercent;\r\n  }\r\n\r\n  set isPercent(value: boolean) {\r\n    if (value !== this._isPercent) {\r\n      this._isPercent = value;\r\n      this.clearAccountValues();\r\n    }\r\n  }\r\n\r\n  /** Index of the last active account in accounts[] */\r\n  get lastAccountIx(): number {\r\n    switch (this.accountCount) {\r\n      case ActiveAccounts.OneAccount:\r\n        return 0;\r\n      case ActiveAccounts.TwoAccounts:\r\n        return 1;\r\n      case ActiveAccounts.ThreeAccounts:\r\n        return 2;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recalculate the EmployeePaymentMethodVm accounts based on changes to that VM.\r\n   * @returns The updated (mutated) EmployeePaymentMethodVm\r\n   */\r\n  recalc(): EmployeePaymentMethodVm {\r\n    const { accounts, accountCount, paymentMethod } = this;\r\n\r\n    // Reset the strategy based on current flags\r\n    if (accountCount == null || paymentMethod == null) {\r\n      this._strategy = null;\r\n      this._isPercent = undefined;\r\n    } else  if (paymentMethod === PaymentMethod.PrintedCheck) {\r\n      this._strategy = PaymentStrategy.SinglePayment;\r\n    } else if (accountCount === ActiveAccounts.OneAccount) {\r\n      this._strategy = PaymentStrategy.SinglePayment;\r\n    } else {\r\n      this._strategy = this.isPercent === true ? PaymentStrategy.SplitPercent : PaymentStrategy.SplitAmount;\r\n    }\r\n\r\n    const last = this.lastAccountIx;\r\n\r\n    let remaining = 100;\r\n    this.accounts.forEach((a, ix) => {\r\n      if (ix > last) {\r\n        a.value = 0;\r\n      } else if (ix === last) {\r\n        a.value = this.isPercent ? remaining : 0;\r\n      } else if (this.isPercent) {\r\n        a.value = Math.min(remaining, 100, Math.max(0, Math.floor(a.value)));\r\n        remaining -= a.value;\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  private setFlagsFromStrategy(strategy: PaymentStrategy) {\r\n    this._strategy = strategy;\r\n    if (strategy == null) {\r\n      this._isPercent = undefined;\r\n    } else if (strategy === PaymentStrategy.SinglePayment) {\r\n      this._accountCount = ActiveAccounts.OneAccount;\r\n    } else {\r\n      this._isPercent = strategy === PaymentStrategy.SplitPercent;\r\n    }\r\n  }\r\n\r\n  get strategy() {\r\n    if (this.accountCount === ActiveAccounts.OneAccount) {\r\n      return PaymentStrategy.SinglePayment;\r\n    } else if (this.isPercent) {\r\n      return PaymentStrategy.SplitPercent;\r\n    } else {\r\n      return PaymentStrategy.SplitAmount;\r\n    }\r\n  }\r\n\r\n  set strategy(strategy: PaymentStrategy) {\r\n    if (strategy !== this._strategy) {\r\n      this.setFlagsFromStrategy(strategy);\r\n      this.clearAccountValues();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert this EmployeePaymentMethodVm to an EmployeePaymentMethod record (internal)\r\n   * \"Normalizes\" when split1 and/or split2 are inactive.\r\n   */\r\n  toEmployeePaymentMethod(): EmployeePaymentMethod {\r\n    this.recalc(); // to ensure VM is \"clean\";\r\n\r\n    const payment: EmployeePaymentMethod = {\r\n      ...new EmployeePaymentMethod(this.id, this.companyId),\r\n      employeeId: this.employeeId,\r\n      strategy: this.strategy,\r\n      paymentMethod: this.paymentMethod\r\n    };\r\n\r\n    const last = this.lastAccountIx;\r\n\r\n    // start with the \"default\", balance account which is the last one\r\n    let acct = this.accounts[last];\r\n    payment.defaultAccountName = acct.accountName;\r\n    payment.defaultAccountType = acct.accountType;\r\n    if (acct.accountType !== PaymentAccountType.PrintedCheck) {\r\n      payment.defaultAccountBankName = acct.accountBankName;\r\n      payment.defaultAccountNumber = acct.accountNumber;\r\n      payment.defaultAccountRn = acct.accountRn;\r\n    }\r\n\r\n    if (last > 0) {\r\n      // 1st account is split1\r\n      acct = this.accounts[0];\r\n      payment.split1IsActive = true;\r\n      payment.split1AccountName = acct.accountName;\r\n      payment.split1AccountType = acct.accountType;\r\n      payment.split1Value = acct.value;\r\n\r\n      if (acct.accountType !== PaymentAccountType.PrintedCheck) {\r\n        payment.split1AccountBankName = acct.accountBankName,\r\n        payment.split1AccountNumber = acct.accountNumber;\r\n        payment.split1AccountRn = acct.accountRn;\r\n      }\r\n    }\r\n\r\n    if (last > 1) {\r\n      // 2nd account is split2\r\n      acct = this.accounts[1];\r\n      payment.split2IsActive = true;\r\n      payment.split2AccountName = acct.accountName;\r\n      payment.split2AccountType = acct.accountType;\r\n      payment.split2Value = acct.value;\r\n      if (acct.accountType !== PaymentAccountType.PrintedCheck) {\r\n        payment.split2AccountBankName = acct.accountBankName,\r\n        payment.split2AccountNumber = acct.accountNumber;\r\n        payment.split2AccountRn = acct.accountRn;\r\n      }\r\n    }\r\n    return payment;\r\n  }\r\n}\r\n","<style>\r\n  .earningUL {\r\n    list-style: none;\r\n    padding-left: 0;\r\n    margin-top: 20px;\r\n    margin-bottom: 30px;\r\n    display: block;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .earningLI {\r\n    float: left;\r\n    width: 25%;\r\n  }\r\n</style>\r\n\r\n<div *ngIf=\"vm?.displayEarnings$ | async\">\r\n  <p>Here are some common earnings set up to save you time.</p>\r\n  <ul class=\"earningUL\">\r\n    <li class=\"earningLI\" *ngFor=\"let earning of vm.defaultEarnings$ | async\">{{earning.description }}</li>\r\n    <li class=\"earningLI\" *ngFor=\"let earning of vm.additionalEarnings$ | async\">{{earning.description }}</li>\r\n  </ul>\r\n  <p>Need additional earnings? <a [routerLink]=\"['/employees/earnings']\" routerLinkActive=\"active\">Go to Earnings Setup</a></p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nimport { CompanyEarningService, CompanyService, EarningService } from '@entity';\r\nimport { Earning, EarningsCategory } from '@model';\r\n\r\n/** ViewModel for display of an individual Earning */\r\nexport class EarningVm {\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  typeName: string;\r\n}\r\n\r\nexport interface EarningsListVm {\r\n  displayEarnings$: Observable<boolean>;\r\n  defaultEarnings$: Observable<EarningVm[]>;\r\n  additionalEarnings$: Observable<EarningVm[]>;\r\n}\r\n\r\n@Component({\r\n  selector: 'sp-payment-earnings-list',\r\n  templateUrl: './employee-payment-earnings-list.component.html',\r\n})\r\n\r\nexport class EmployeePaymentEarningsListComponent implements OnInit {\r\n\r\n  vm: EarningsListVm;\r\n\r\n  constructor(\r\n    private companyEarningsService: CompanyEarningService,\r\n    private companyService: CompanyService,\r\n    private earningService: EarningService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const displayEarnings$ = this.companyService.currentCompany$.pipe(map(c => c.hasPriorPayroll));\r\n\r\n    const defaultEarnings$ = this.earningService.earnings$\r\n      .pipe(\r\n        first(),\r\n        map(defaultEarning => {\r\n          return defaultEarning\r\n            .filter(q => q.earningsCategory.toUpperCase() === EarningsCategory.DEFAULTOTHERCOMPENSATION)\r\n            .map(earning => {\r\n              return {\r\n                code: earning.code,\r\n                name: earning.name,\r\n                description: earning.description,\r\n                typeName: earning.earningTypeName\r\n              };\r\n            });\r\n        })\r\n      );\r\n\r\n    const additionalEarnings$ = combineLatest(\r\n      this.companyEarningsService.companyEarnings$,\r\n      this.earningService.earnings$)\r\n      .pipe(\r\n        first(),\r\n        map(([companyEarning, earnings]) => {\r\n          return companyEarning\r\n            .filter(ce => !ce.isRemoved)\r\n            .map(ce => {\r\n              return {\r\n                code: ce.earningCode,\r\n                name: ce.name,\r\n                description: ce.description,\r\n                typeName: (earnings.find(e => e.code === ce.earningCode) || {} as Earning).earningTypeName || ''\r\n              };\r\n            })\r\n            .sort((a, b) => a.typeName.toLowerCase().localeCompare(b.typeName.toLowerCase()));\r\n        })\r\n      );\r\n\r\n    this.vm = { displayEarnings$, defaultEarnings$, additionalEarnings$ };\r\n  }\r\n}\r\n","<div class=\"standard d-flex flex-column\">\r\n  <form #form=\"ngForm\" *ngIf=\"vm\">\r\n    <sp-model [model]=\"vm\" modelType=\"Employee\">\r\n\r\n      <h2>Primary Earnings</h2>\r\n\r\n      <sp-radio-group name=\"payType\" propertyName=\"payType\" label=\"Pay Rate Type\">\r\n        <sp-radio-button id=\"hourly\" [value]=\"'hourly'\">Hourly</sp-radio-button>\r\n        <sp-radio-button id=\"salary\" [value]=\"'salary'\">Salary</sp-radio-button>\r\n        <sp-radio-button id=\"unit\" [value]=\"'unit'\">Units</sp-radio-button>\r\n        <sp-radio-button id=\"mile\" [value]=\"'mile'\">Miles</sp-radio-button>\r\n      </sp-radio-group>\r\n\r\n      <sp-input *ngIf=\"vm.payType\" [@ngIfAnim] [ngClass]=\"{'input-small': (vm.payType === 'hourly' ||vm.payType === 'unit' || vm.payType === 'mile'), 'input-medium': vm.payType === 'salary'}\"\r\n        label=\"Pay Rate\" placeholder=\"0.00\" [maskType]=\"getMaskType()\"\r\n        name=\"payRate\" propertyName=\"payRate\"\r\n        (change)=\"payRateChanged()\"\r\n        >\r\n      </sp-input>\r\n\r\n      <div *ngIf=\"vm.payType === 'hourly'\" [@ngIfAnim]>\r\n        <h2>Other Compensation (Optional)</h2>\r\n\r\n        <sp-input class=\"input-small\" name=\"overtimeRate\" label=\"Overtime Hourly Rate (Optional)\" placeholder=\"0.00\"\r\n          maskType=\"currency_per_hour\" name=\"overtime\" required propertyName=\"overtimeRate\">\r\n          <p helpTextAbove class=\"input-help-text\">The overtime rate is generally 1 ½ times the regular hourly rate. Check your local laws for more information.</p>\r\n        </sp-input>\r\n\r\n      </div>\r\n\r\n    </sp-model>\r\n    <sp-payment-earnings-list></sp-payment-earnings-list>\r\n    <!-- Show payment accounts unless EE is terminated -->\r\n    <sp-ee-payment-accounts #paymentAccounts *ngIf=\"vm && !vm.isTerminated\" [eeId]=vm.id></sp-ee-payment-accounts>\r\n  </form>\r\n\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Employee } from '@model';\r\nimport { EmployeeViewService } from '@employees/employee/employee-view.service';\r\nimport { EmployeePaymentAccountVm } from '../employee-payment-account-vm';\r\nimport { EmployeePaymentAccountsComponent } from '../employee-payment-accounts/employee-payment-accounts.component';\r\nimport { ngIfAnim } from '@animations';\r\nimport { SaverFactoryService, LoggerService } from '@core';\r\n\r\n\r\n@Component({\r\n  selector: 'sp-ee-payment',\r\n  templateUrl: './employee-payment.component.html',\r\n  styleUrls: ['../../employee-tab.scss'],\r\n  animations: [ngIfAnim]\r\n})\r\nexport class EmployeePaymentComponent implements OnInit {\r\n  @ViewChild('paymentAccounts') paymentAccountsComponent: EmployeePaymentAccountsComponent;\r\n  vm: Employee;\r\n\r\n  constructor(\r\n    private employeeViewService: EmployeeViewService,\r\n    private saverFactory: SaverFactoryService,\r\n\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.employeeViewService.currentEmployeeSnapshot$.subscribe(ee => this.vm = ee);\r\n  }\r\n\r\n  canLeaveAfterSave(): Observable<boolean> {\r\n    return this.save();\r\n  }\r\n\r\n  payRateChanged() {\r\n    if (this.vm.payType === 'hourly' && this.vm.payRate) {\r\n      this.vm.overtimeRate = this.vm.payRate * 1.5; // Initialize to 1.5 * payrate\r\n    }\r\n  }\r\n  getMaskType() {\r\n    switch (this.vm.payType) {\r\n      case 'hourly':\r\n        return 'currency_per_hour';\r\n      case 'salary':\r\n        return 'currency_per_year';\r\n      case 'unit':\r\n        return 'currency_per_unit';\r\n      case 'mile':\r\n        return 'currency_per_mile';\r\n      default:\r\n        return 'currency_per_year';\r\n    }\r\n  }\r\n\r\n  private save() {\r\n    return this.saverFactory.create()\r\n      .add(this.employeeViewService.saveEmployee(this.vm))\r\n      // PaymentAccountsComponent exists unless terminated\r\n      .add(this.paymentAccountsComponent ? this.paymentAccountsComponent.save() : null)\r\n      .go();\r\n  }\r\n\r\n}\r\n","<div class=\"standard d-flex flex-column\" id=\"employeePersonalComponent\">\r\n\r\n  <div *ngIf=\"vm\">\r\n    <sp-model [model]=\"vm\" modelType=\"Employee\">\r\n      <div class=\"input-group input-split\">\r\n        <sp-input name=\"firstName\" propertyName=\"firstName\" label=\"First Name\" placeholder=\"First Name\" id=\"firstName\"></sp-input>\r\n        <sp-input name=\"lastName\" propertyName=\"lastName\" label=\"Last Name\" placeholder=\"Last Name\" id=\"lastName\"></sp-input>\r\n      </div>\r\n\r\n      <h2>Home Address</h2>\r\n\r\n      <sp-address-form [address]=\"vm.home\" class=\"input-split\" [inline]=\"true\" (failedValidation)=\"editAddress(vm.home)\"></sp-address-form>\r\n      <button *ngIf=\"canVerify(vm.home)\" type=\"button\" class=\"btn btn-cta\" (click)=\"editAddress(vm.home)\">Verify</button>\r\n\r\n      <h2 class=\"mt-3\">Other</h2>\r\n\r\n      <sp-date class=\"input-medium\" id=\"birthDate\" propertyName=\"birthDate\" label=\"Birthdate\"></sp-date>\r\n\r\n      <sp-radio-group name=\"sex\" propertyName=\"sex\" label=\"Sex\" tooltip=\"true\">\r\n        <span tooltipText class=\"label-tooltip\">\r\n          This is required for new hire compliance reporting in most states.\"\r\n        </span>\r\n        <sp-radio-button *ngFor=\"let sex of sexes\" [value]=\"sex.value\" id=\"sex-{{sex.value}}\">{{sex.displayName}}</sp-radio-button>\r\n      </sp-radio-group>\r\n\r\n      <sp-radio-group name=\"employeeAccess\" propertyName=\"canContact\" id=\"canContact\" label=\"Enable Employee Portal\">\r\n          <p helpTextAbove>Grant this employee online access to view pay stubs and W2's, and update personal information.</p>\r\n        <sp-radio-button id=\"canContactYes\" [value]=true>Yes</sp-radio-button>\r\n        <sp-radio-button id=\"canContactNo\" [value]=false>No</sp-radio-button>\r\n      </sp-radio-group>\r\n\r\n      <div *ngIf=\"vm.canContact === true\" [@ngIfAnim]>\r\n        <p>To contact this employee, we need an email address and phone number.</p>\r\n        <div class=\"input-group input-split\">\r\n          <sp-input name=\"email\" propertyName=\"email\" label=\"Email Address\" id=\"email\"></sp-input>\r\n          <sp-input name=\"mobilePhoneNumber\" propertyName=\"phone\" label=\"Mobile Phone Number\" maskType=\"phone\" id=\"phone\"></sp-input>\r\n        </div>\r\n      </div>\r\n\r\n    </sp-model>\r\n  </div>\r\n  <sp-address-modal></sp-address-modal>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ngIfAnim } from '@animations';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { SaverFactoryService } from '@core';\r\n\r\nimport { EmployeeWithAddresses, EmployeeViewService } from '@employees/employee/employee-view.service';\r\nimport { SexCodes } from '@model/codes-enums';\r\nimport { AddressModalComponent } from '@app/shared';\r\nimport { AddressFormComponent } from '@app/shared/address/address-form.component';\r\nimport { Address } from '@app/model';\r\n\r\n@Component({\r\n  selector: 'sp-ee-personal',\r\n  templateUrl: './employee-personal.component.html',\r\n  animations: [ngIfAnim],\r\n  styleUrls: ['../employee-tab.scss']\r\n})\r\nexport class EmployeePersonalComponent implements OnInit {\r\n  sexes = SexCodes.codes;\r\n  vm: EmployeeWithAddresses;\r\n  originalAddressCodes: { geoCode: string, schoolDistrictCode?: number, psdCode: number, isVerified: boolean };\r\n  private isModalOpen = false;\r\n  isNew = false;\r\n\r\n  @ViewChild(AddressModalComponent)\r\n  addressModal: AddressModalComponent;\r\n\r\n  @ViewChild(AddressFormComponent)\r\n  addressForm: AddressFormComponent;\r\n\r\n  constructor(\r\n    private employeeViewService: EmployeeViewService,\r\n    private saverFactory: SaverFactoryService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.employeeViewService.currentEmployeeWithAddressesSnapshot$.subscribe(vm => {\r\n      this.vm = vm;\r\n      this.originalAddressCodes = {\r\n        geoCode: vm.home.geoCode,\r\n        schoolDistrictCode: vm.home.schoolDistrictCode,\r\n        psdCode: vm.home.psdCode,\r\n        isVerified: vm.home.isVerified && !!vm.home.geoCode\r\n      };\r\n      this.isNew = !vm.hasName;\r\n    });\r\n  }\r\n\r\n  editAddress(address: Address) {\r\n    if (!this.isModalOpen) {\r\n      this.isModalOpen = true;\r\n      this.addressModal.addOrEditAddress(address)\r\n      .pipe(finalize(() => this.isModalOpen = false))\r\n      .subscribe(addr => {\r\n        if (addr) {\r\n          this.addressForm.confirmAddress(addr as any);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  canLeaveAfterSave(): boolean | Observable<boolean> {\r\n    return this.vm ? this.save() : true; // can leave immediately if no VM\r\n  }\r\n\r\n  canVerify(address: Address) {\r\n    return !this.isModalOpen && !address.isVerified &&\r\n      !this.isModalOpen && address.street1 && address.city && address.state && address.zip;\r\n    }\r\n\r\n  private save() {\r\n    const saver = this.saverFactory.create();\r\n    if (this.vm.hasName) {\r\n      // can save and leave if the EE has a name\r\n      saver.add(this.employeeViewService.saveEmployeeWithHome(this.vm));\r\n    } else if (this.isNew) {\r\n      // No name but it is a new EE; set soft delete (isRemoved:true), save that, and then leave.\r\n      this.vm.isRemoved = true;\r\n      saver.add(this.employeeViewService.saveEmployeeIsRemoved(this.vm));\r\n    } else {\r\n      // Blocker: user cleared name of existing EE; don't leave\r\n      saver.add(of(false));\r\n    }\r\n    return saver.go();\r\n  }\r\n}\r\n","<form id=\"{{namePrefix}}_container\" #form=\"ngForm\">\r\n    <div *ngIf=\"vm.behavior.shouldShow\" class=\"container\">\r\n        <sp-model [model]=\"vm\" modelType=\"TaxBehaviorWrapper<EmployeeTax>\">\r\n            <div class=\"row\">\r\n                <h3>{{vm.name}} Tax</h3>\r\n            </div>\r\n\r\n            <!-- Is Exempt -->\r\n            <div class=\"row\" *ngIf=\"vm.behavior.hasExemption\">\r\n                <sp-radio-group name=\"isExempt\" propertyName=\"isExempt\" label=\"Tax Exemption Status\">\r\n                    <sp-radio-button id=\"{{namePrefix}}_subject\" [value]=\"false\">Subject</sp-radio-button>\r\n                    <sp-radio-button id=\"{{namePrefix}}_exempt\" [value]=\"true\">Exempt</sp-radio-button>\r\n                    <div helpText class=\"input-help-text\" *ngIf=\"vm.isExempt\" [@ngIfAnim]>Most employees must have taxes withheld. If this person is exempt from withholding, make sure you have a current year W-4 copy on file.\r\n                    </div>\r\n                </sp-radio-group>\r\n            </div>\r\n\r\n            <!-- Exemption Reason -->\r\n            <div class=\"row\" *ngIf=\"vm.isExempt && vm.behavior.hasExemptionReason\">\r\n                <sp-select id=\"{{namePrefix}}_exemptReason\" propertyName=\"exemptReasonCode\" name=\"exemptReasonCode\" label=\"Exemption Reason\">\r\n                    <option *ngFor=\"let reason of exemptReasons\" [value]=\"reason.value\">{{reason.displayName}}</option>\r\n                </sp-select>\r\n            </div>\r\n\r\n            <!-- Filing Status -->\r\n            <div class=\"row\" *ngIf=\"vm.behavior.hasFilingStatus\">\r\n                <sp-select id=\"{{namePrefix}}_filingStatus\" propertyName=\"filingStatus\" name=\"filingStatus\" label=\"Filing Status\">\r\n                    <option *ngFor=\"let filing of vm.behavior.filingStatuses\" [value]=\"filing.code\">{{filing.description}}</option>\r\n                </sp-select>\r\n            </div>\r\n\r\n            <!-- Withholding -->\r\n            <div class=\"row\" *ngIf=\"vm.behavior.hasWithholding\">\r\n                <sp-input id=\"{{namePrefix}}_allowanceWithholding\" name=\"withholdingAllowance\" label=\"Withholding Allowance\" propertyName=\"withholdingAllowance\"\r\n                    value=\"0\" type=\"number\" class=\"input-small mr-5\" maskType=\"whAllowance\"></sp-input>\r\n\r\n                <sp-input id=\"{{namePrefix}}_extraWithholding\" name=\"extraWithholding\" label=\"Extra Withholding\" value=\"0\" type=\"number\" propertyName=\"extraWithholding\"\r\n                    maskType=\"currency\" class=\"input-medium\"></sp-input>\r\n            </div>\r\n\r\n            <!-- Low Income Exempt -->\r\n            <div class=\"row\" *ngIf=\"vm.behavior.hasLowIncomeExempt\">\r\n                <sp-control label=\"Is Low Income Exempt\">\r\n                    <div class=\"btn-group btn-group-toggle\" ngbRadioGroup [(ngModel)]=\"vm.isLowIncomeTaxExempt\" name=\"isLowIncomeExempt\" controlName=\"isLowIncomeExempt\">\r\n                        <label ngbButtonLabel class=\"btn-outline-primary\">\r\n                            <input id=\"{{namePrefix}}_lowIncomeExempt_subject\" ngbButton type=\"radio\" [value]=\"false\">\r\n                            <span class=\"multi-choice-option-text\">Subject</span>\r\n                        </label>\r\n                        <label ngbButtonLabel class=\"btn-outline-primary\">\r\n                            <input id=\"{{namePrefix}}_lowIncomeExempt_exempt\" ngbButton type=\"radio\" [value]=\"true\">\r\n                            <span class=\"multi-choice-option-text\">Exempt</span>\r\n                        </label>\r\n                    </div>\r\n                </sp-control>\r\n            </div>\r\n        </sp-model>\r\n    </div>\r\n</form>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ngIfAnim } from '@animations';\r\n\r\nimport { TaxBehaviorWrapper } from '@app/core/services/tax-services/tax-models';\r\nimport { EmployeeTax, TaxExemptionReasonsCodes } from '@app/model';\r\n\r\n@Component({\r\n  selector: 'sp-employee-tax',\r\n  templateUrl: './employee-tax.component.html',\r\n  animations: [ngIfAnim]\r\n})\r\nexport class EmployeeTaxComponent implements OnInit {\r\n  @Input() vm: TaxBehaviorWrapper<EmployeeTax>;\r\n\r\n  exemptReasons: { value: string, displayName: string }[];\r\n  public namePrefix: string = null;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.namePrefix = this.vm.mtsTaxCode;\r\n    this.determineRenderState();\r\n    this.determineFormatting();\r\n  }\r\n\r\n  determineRenderState() {\r\n    this.vm.behavior.shouldShow = this.vm.behavior.shouldShow || true;\r\n\r\n    this.vm.behavior.hasExemption = this.vm.behavior.hasExemption || false;\r\n    this.vm.behavior.hasExemptionReason = this.vm.behavior.hasExemptionReason || false;\r\n    this.vm.behavior.hasEin = false;\r\n    this.vm.behavior.hasRate = this.vm.behavior.hasRate || false;\r\n    this.vm.behavior.hasFilingStatus = this.vm.behavior.hasFilingStatus || false;\r\n    this.vm.behavior.hasLowIncomeExempt = this.vm.behavior.hasLowIncomeExempt || false;\r\n    this.vm.behavior.hasWithholding = this.vm.behavior.hasWithholding || false;\r\n    this.vm.behavior.hasUbi = this.vm.behavior.hasUbi || false;\r\n    this.vm.behavior.hasBusinessStartDate = this.vm.behavior.hasBusinessStartDate || false;\r\n\r\n    this.vm.behavior.taxEinFormats = [];\r\n    this.vm.behavior.filingStatuses = this.vm.behavior.filingStatuses || [];\r\n  }\r\n\r\n  determineFormatting() {\r\n    this.exemptReasons = TaxExemptionReasonsCodes.codes;\r\n  }\r\n}\r\n","<div *ngIf=\"employee\" class=\"standard d-flex flex-column\">\r\n  <sp-model [model]=\"employee\" modelType=\"Employee\">\r\n    <!-- SSN -->\r\n    <div class=\"input-group\">\r\n      <sp-input label=\"Social Security Number\" name=\"ssn\" propertyName=\"ssn\" maskType='ssn' id=\"ssn\">\r\n      </sp-input>\r\n    </div>\r\n  </sp-model>\r\n\r\n  <div *ngIf=\"eeTaxes\">\r\n    <div *ngIf=\"!eeTaxes.employeeLocation.isTaxesExcluded; else TaxExcluded\">\r\n      <h2 class=\"mt-3\">Federal Taxes</h2>\r\n      <p>Refer to your employee's\r\n        <a href=\"https://www.irs.gov/pub/irs-pdf/fw4.pdf\" target=\"_blank\">W4 form.</a>\r\n      </p>\r\n\r\n      <div *ngFor=\"let taxWrapper of getFederalTaxes(true)\" class=\"my-3\">\r\n        <sp-employee-tax [vm]=\"taxWrapper\">\r\n        </sp-employee-tax>\r\n      </div>\r\n\r\n      <div *ngIf=\"hasStateTaxes(true)\">\r\n        <hr />\r\n        <h2 class=\"mt-3\">State Taxes</h2>\r\n\r\n        <div *ngFor=\"let taxWrapper of getStateTaxes(true)\" class=\"my-3\">\r\n          <sp-employee-tax [vm]=\"taxWrapper\">\r\n          </sp-employee-tax>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"hasLocalTaxes(true)\">\r\n        <hr />\r\n        <h2 class=\"mt-3\">Local Taxes</h2>\r\n\r\n        <div *ngFor=\"let taxWrapper of getLocalTaxes(true)\" class=\"my-3\">\r\n          <sp-employee-tax [vm]=\"taxWrapper\">\r\n          </sp-employee-tax>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"hasOtherTaxes()\">\r\n        <p>For brevity, some taxes are not displayed.</p>\r\n        <a class=\"icon-right\" [ngClass]=\"{'active': showOtherTaxes}\" (click)=\"showOtherTaxes = !showOtherTaxes\">\r\n          <span *ngIf=\"!showOtherTaxes\" class=\"d-flex\">Show All Taxes<i class=\"icon material-icons\">expand_more</i></span>\r\n          <span *ngIf=\"showOtherTaxes\" class=\"d-flex\">Hide Additional Taxes <i class=\"icon material-icons\">expand_less</i></span>\r\n        </a>\r\n\r\n\r\n        <div class=\"additional-taxes mt-3\" *ngIf=\"showOtherTaxes\">\r\n          <h2>Additional Taxes</h2>\r\n\r\n          <div *ngIf=\"hasFederalTaxes(false)\" class=\"tax-section\">\r\n            <h2 class=\"mt-3\">Other Federal Taxes</h2>\r\n\r\n            <div *ngFor=\"let taxWrapper of getFederalTaxes(false)\" class=\"my-3\">\r\n              <sp-employee-tax [vm]=\"taxWrapper\">\r\n              </sp-employee-tax>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"hasStateTaxes(false)\" class=\"tax-section\">\r\n            <hr />\r\n            <h2 class=\"mt-3\">Other State Taxes</h2>\r\n\r\n            <div *ngFor=\"let taxWrapper of getStateTaxes(false)\" class=\"my-3\">\r\n              <sp-employee-tax [vm]=\"taxWrapper\">\r\n              </sp-employee-tax>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"hasLocalTaxes(false)\" class=\"tax-section\">\r\n            <hr />\r\n            <h2 class=\"mt-3\">Local Taxes</h2>\r\n\r\n            <div *ngFor=\"let taxWrapper of getLocalTaxes(false)\" class=\"my-3\">\r\n              <sp-employee-tax [vm]=\"taxWrapper\">\r\n              </sp-employee-tax>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"!eeTaxes.addressVerified\" class=\"mt-3\">\r\n        <p>To collect other than federal taxes, we need to verify your address.</p>\r\n        <p *ngIf=\"!eeTaxes.employeeLocation.isHomeAddressVerified\">Please go to the\r\n          <a [routerLink]=\"eeTaxes.employeeLocation.homeLink\">personal</a> tab and make sure your address is valid.</p>\r\n        <p *ngIf=\"!isWorkAddressSet()\">Please go to the\r\n          <a [routerLink]=\"eeTaxes.employeeLocation.workLink\">employment</a> tab and set your work address.</p>\r\n        <p *ngIf=\"isWorkAddressSet() && !eeTaxes.employeeLocation.isWorkAddressVerified\">Please go to the\r\n          <a [routerLink]=\"[WellKnownRoutes.CompanyInfo]\">company info</a> tab and make sure your work address is valid.</p>\r\n      </div>\r\n    </div>\r\n\r\n    <ng-template #TaxExcluded>\r\n      <p>We do not need additional tax information for this contractor.</p>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ngIfAnim } from '@animations';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SaverFactoryService } from '@core';\r\nimport { WellKnownRoutes } from '@core/well-known-routes';\r\n\r\nimport { EmployeeViewService } from '@employees/employee/employee-view.service';\r\nimport { IEmployeeTaxes, TaxBehaviorWrapper } from '@app/core/services/tax-services/tax-models';\r\nimport { Employee, EmployeeTax, TaxTypeCode } from '@model';\r\n\r\n@Component({\r\n  selector: 'sp-ee-tax',\r\n  templateUrl: './employee-taxes.component.html',\r\n  animations: [ngIfAnim],\r\n  styleUrls: ['../employee-tab.scss']\r\n})\r\nexport class EmployeeTaxesComponent implements OnInit {\r\n  employee: Employee;\r\n  eeTaxes: IEmployeeTaxes;\r\n  WellKnownRoutes = WellKnownRoutes;\r\n  showOtherTaxes = false;\r\n\r\n  constructor(\r\n    private employeeViewService: EmployeeViewService,\r\n    private saverFactory: SaverFactoryService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.employeeViewService.currentEmployeeWithTaxesSnapshot$.subscribe(snapshot => {\r\n      this.employee = snapshot.ee;\r\n      this.eeTaxes = snapshot.eeTaxes;\r\n    });\r\n  }\r\n\r\n  canLeaveAfterSave(): Observable<boolean> {\r\n    return this.save();\r\n  }\r\n\r\n  isWorkAddressSet(): boolean {\r\n    return this.eeTaxes.employeeLocation.workAddressId != null && this.eeTaxes.employeeLocation.workAddressId !== '';\r\n  }\r\n\r\n  hasFederalTaxes(requireInput: boolean): boolean {\r\n    return this.eeTaxes.taxes.some(t =>\r\n      t.taxTypeCode === TaxTypeCode.Federal &&\r\n      t.behavior.shouldShow &&\r\n      t.behavior.requireUserInput === requireInput\r\n    );\r\n  }\r\n\r\n  hasStateTaxes(requireInput: boolean): boolean {\r\n    return this.eeTaxes.taxes.some(t =>\r\n      t.taxTypeCode === TaxTypeCode.State &&\r\n      t.behavior.shouldShow &&\r\n      t.behavior.requireUserInput === requireInput\r\n    );\r\n  }\r\n\r\n  hasLocalTaxes(requireInput: boolean): boolean {\r\n    return this.eeTaxes.taxes.some(t =>\r\n      t.taxTypeCode !== TaxTypeCode.Federal &&\r\n      t.taxTypeCode !== TaxTypeCode.State &&\r\n      t.behavior.shouldShow &&\r\n      t.behavior.requireUserInput === requireInput\r\n    );\r\n  }\r\n\r\n  getFederalTaxes(requireInput: boolean): TaxBehaviorWrapper<EmployeeTax>[] {\r\n    return this.eeTaxes.taxes.filter(t =>\r\n      t.taxTypeCode === TaxTypeCode.Federal &&\r\n      t.behavior.shouldShow &&\r\n      t.behavior.requireUserInput === requireInput\r\n    );\r\n  }\r\n\r\n  getStateTaxes(requireInput: boolean): TaxBehaviorWrapper<EmployeeTax>[] {\r\n    return this.eeTaxes.taxes.filter(t =>\r\n      t.taxTypeCode === TaxTypeCode.State &&\r\n      t.behavior.shouldShow &&\r\n      t.behavior.requireUserInput === requireInput\r\n    );\r\n  }\r\n\r\n  getLocalTaxes(requireInput: boolean): TaxBehaviorWrapper<EmployeeTax>[] {\r\n    return this.eeTaxes.taxes.filter(t =>\r\n      t.taxTypeCode !== TaxTypeCode.Federal &&\r\n      t.taxTypeCode !== TaxTypeCode.State &&\r\n      t.behavior.shouldShow &&\r\n      t.behavior.requireUserInput === requireInput\r\n    );\r\n  }\r\n\r\n  hasOtherTaxes(): boolean {\r\n    if (this.eeTaxes == null || this.eeTaxes.taxes.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    return this.eeTaxes.taxes.some(e => e.behavior.shouldShow && e.behavior.requireUserInput === false);\r\n  }\r\n\r\n  private save() {\r\n    return this.saverFactory.create()\r\n      .add(this.employeeViewService.saveEmployee(this.employee))\r\n      .add(this.employeeViewService.saveEmployeeTaxes(this.eeTaxes))\r\n      .go();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { combineLatest, Observable, of, throwError } from 'rxjs';\r\nimport { concatMap, debounceTime, distinctUntilChanged, filter, map, scan, shareReplay, take } from 'rxjs/operators';\r\n\r\nimport { areDifferent, Saver, WellKnownRoutes } from '@core';\r\nimport { Address, Employee, Company, EmployeeType, EmployeePaymentMethod } from '@model';\r\nimport { AddressService, EmployeeService } from '@entity';\r\nimport { environment } from '@environment';\r\nimport { IEmployeeTaxes } from '@core/services/tax-services/tax-models';\r\nimport { SessionService } from '@session/session.service';\r\nimport { TaxCollectorService } from '@core/services/tax-services/tax-collector.service';\r\n\r\nconst employeesFeatureUrl = WellKnownRoutes.Employees;\r\n\r\n/** ViewModel for the current Employee and its Home and Work address */\r\nexport interface EmployeeWithAddresses extends Employee {\r\n  home?: Address;\r\n  work?: Address;\r\n}\r\n\r\nexport interface EmployeeWithTaxes {\r\n  ee: Employee;\r\n  eeTaxes: IEmployeeTaxes;\r\n}\r\n\r\n/**\r\n * Share an Employee view model and persistence services among a set\r\n * of closely cooperating Employee components\r\n * TODO: consider delegating work to sub-services targeting particular components.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class EmployeeViewService {\r\n\r\n  /** Observable of the current company */\r\n  currentCompany$: Observable<Company>;\r\n\r\n  /** Observable of the current Employee Id */\r\n  currentEmployeeId$: Observable<string>;\r\n\r\n  /**\r\n   * Observable of the current non-null Employee.\r\n   * Emits when current non-null Employee exists and when it changes in any way.\r\n   */\r\n  currentEmployee$: Observable<Employee>;\r\n\r\n  /**\r\n   * Terminating observable of the next (non-null) current Employee VM.\r\n   * No need to unsubscribe.\r\n   */\r\n  currentEmployeeSnapshot$: Observable<Employee>;\r\n\r\n  /**\r\n   * Terminating observable of the next (non-null) current Employee VM with its addresses.\r\n   * No need to unsubscribe.\r\n  */\r\n  currentEmployeeWithAddressesSnapshot$: Observable<EmployeeWithAddresses>;\r\n\r\n  /** T\r\n   * erminating observable of the next (non-null) current Employee VM with its taxes (if any).\r\n   * No need to unsubscribe.\r\n   */\r\n  currentEmployeeWithTaxesSnapshot$: Observable<EmployeeWithTaxes>;\r\n\r\n  /** Observable of work addresses for the current company */\r\n  workAddresses$: Observable<Address[]>;\r\n\r\n  /** Boolean observable of whether current user is an admin */\r\n  isAdmin$: Observable<boolean>;\r\n\r\n  /** Boolean observable of whether can save (false) or not save (true) changes to the current company */\r\n  readOnly$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private addressService: AddressService,\r\n    private employeeService: EmployeeService,\r\n    private router: Router,\r\n    private sessionService: SessionService,\r\n    private taxCollectorService: TaxCollectorService\r\n  ) {\r\n    this.currentCompany$ = this.sessionService.currentCompany$;\r\n    this.currentEmployeeId$ = this.sessionService.currentEmployeeId$;\r\n\r\n    /**\r\n     * Observable of a clone of the current Employee when current Employee exists and changes in any way\r\n     * Emits null when no current Employee.\r\n     * Do NOT expose to consumers.\r\n     * They should only see non-null Employee.\r\n     */\r\n    const currentEmployee$ = combineLatest(\r\n      this.currentEmployeeId$,\r\n      this.sessionService.currentEmployee$,\r\n      this.sessionService.companyPackageLoaded$,\r\n      this.sessionService.isSignedIn$,\r\n      ).pipe(\r\n      // debounce synchronous chatter from input observables by waiting one tick\r\n      debounceTime(0),\r\n\r\n      // Map to a clone of the current Employee if it exists\r\n      // else map to null (which is not emitted)\r\n      map(([eeId, employee, isLoaded, isSignedIn]) => {\r\n\r\n        // Can arrive here with no eeId because some other service cleared it\r\n        // or with an existing EE but no company package (because returning to admin console)\r\n        // or while signing-out.\r\n        // Do NOT emit an Employee. Continue instead without error.\r\n        if (!eeId || !isLoaded || !isSignedIn) {\r\n          return null;\r\n        }\r\n\r\n        if (employee) {\r\n          return Employee.create(employee); // cloned Employee instance\r\n        }\r\n\r\n        // No valid Employee for the currentEmployeeId\r\n        // Can happen if deep link here with bad id in browser address bar\r\n        // Could report it as follows ... but won't for now.\r\n        // const error = `EmployeeViewService did not find EE record for id=${eeId}`;\r\n        // this.sessionService.logger.error(error);\r\n\r\n        // Clear the currentEmployeeId and navigate to EE setup\r\n        this.setCurrentEmployeeId(null);\r\n        this.router.navigate([WellKnownRoutes.Employees], { replaceUrl: true });\r\n        return null;\r\n      }),\r\n\r\n      // Expensive to calculate so hold onto last value\r\n      shareReplay(1),\r\n    );\r\n\r\n    // Non-null currentEmployee$ (do not emit a null EE because EE views will fail).\r\n    this.currentEmployee$ = currentEmployee$.pipe(\r\n      filter(ee => ee != null)\r\n    );\r\n\r\n    this.currentEmployeeSnapshot$ = this.currentEmployee$.pipe(take(1));\r\n\r\n    this.currentEmployeeWithAddressesSnapshot$ = combineLatest(\r\n      this.currentEmployee$,\r\n      this.addressService.entityMap$\r\n    ).pipe(\r\n      take(1),\r\n      map(([ee, addressMap]) => {\r\n        const home = addressMap[ee.homeAddressId];\r\n        if (!home) {\r\n          // No Home Address record for this id. Shouldn't happen (but it did during db migration issue #93!)\r\n          const error = `EmployeeViewService did not find home address (${ee.homeAddressId}) for EE id=${ee.id}`;\r\n          throw new Error(error);\r\n        }\r\n\r\n        const work = addressMap[ee.workAddressId];\r\n\r\n        const vm: EmployeeWithAddresses = ee;\r\n        vm.home = Address.create(home);\r\n        vm.work = work == null ? null : Address.create(work);\r\n        return vm;\r\n      })\r\n    );\r\n\r\n    this.currentEmployeeWithTaxesSnapshot$ = combineLatest(\r\n      this.currentEmployee$,\r\n      this.taxCollectorService.taxes$\r\n    ).pipe(\r\n      take(1),\r\n      map(([ee, taxes]) => {\r\n        const eeTaxes = taxes\r\n          ? taxes.employeeTaxes.find(e => e.employeeLocation.id === ee.id)\r\n          : null;\r\n        return { ee, eeTaxes };\r\n      })\r\n    );\r\n\r\n    // Clear current employee if leaving Employees Feature or going to EE Setup to pick an EE\r\n    // Service never dies so no need to unsubscribe\r\n    router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      map((event: NavigationEnd) => {\r\n        const url = event.urlAfterRedirects;\r\n        return !url.startsWith(employeesFeatureUrl) || url === employeesFeatureUrl;\r\n      }),\r\n      distinctUntilChanged()\r\n    ).subscribe(shouldClear => {\r\n      if (shouldClear) {\r\n        this.setCurrentEmployeeId(null);\r\n      }\r\n    });\r\n\r\n    this.workAddresses$ = addressService.workAddresses$;\r\n  }\r\n\r\n  /** Save existing EE vm (or part of one) by merging it with the EE in cache */\r\n  saveEmployee(eeVm: Partial<EmployeeWithAddresses>): Observable<Employee> {\r\n    if (eeVm == null) {\r\n      return of(null); // nothing to save\r\n    }\r\n\r\n    if (!eeVm.id) {\r\n      return throwError('saveEmployee: no Employee or lacks its id');\r\n    }\r\n\r\n    // Trick: extract pure employee data from the eeVm,\r\n    // by assigning the addresses into (unused) vars\r\n    const { home, work, ...ee } = eeVm;\r\n\r\n    return this.employeeService.entityMap$.pipe(\r\n      take(1),\r\n      map(eeMap => {\r\n        const oldEe: Employee = eeMap[ee.id];\r\n        // strip off the prototype before comparing\r\n        const newEe: Employee = Object.assign({}, oldEe, ee);\r\n\r\n        const changed = areDifferent(newEe, oldEe, 'EE');\r\n        const computeTaxes = oldEe.workAddressId !== newEe.workAddressId ||\r\n          ((oldEe.employeeType === EmployeeType.Contractor || newEe.employeeType === EmployeeType.Contractor) &&\r\n            oldEe.employeeType !== newEe.employeeType);\r\n\r\n        return {\r\n          eeMap: eeMap,\r\n          changed: changed,\r\n          computeTaxes: computeTaxes,\r\n          newEe: newEe,\r\n          oldEe: oldEe\r\n        };\r\n      }),\r\n      concatMap(context => {\r\n        return context.changed\r\n          ? this.employeeService.update(context.newEe, { isOptimistic: true })\r\n          : of(context.oldEe);\r\n      }, (context, updateResult) => ({ ...context, updateResult })),\r\n      concatMap(context => {\r\n        return context.computeTaxes ? this.taxCollectorService.computeTaxes() : of(true);\r\n      }, (context, _) => context),\r\n      map(context => {\r\n        return context.updateResult;\r\n      })\r\n    );\r\n  }\r\n\r\n  // Save using multi-entity save\r\n  saveEmployeeWithHome(eeVm: EmployeeWithAddresses): Observable<Employee> {\r\n    return this.employeeService.saveEmployeeUpdate(eeVm, eeVm.home);\r\n  }\r\n\r\n  saveEmployeeIsRemoved(eeVm: { id: string, isRemoved: boolean }): Observable<Employee> {\r\n    return this.employeeService.saveEmployeeIsRemovedById(eeVm.id, eeVm.isRemoved);\r\n  }\r\n\r\n  /** Save the configured taxes array */\r\n  saveEmployeeTaxes(employeeTaxes: IEmployeeTaxes): Observable<boolean> {\r\n    if (!employeeTaxes) {\r\n      return Saver.NO_SAVE; // no vm to save\r\n    }\r\n\r\n    return this.taxCollectorService.saveEmployeeTaxes(employeeTaxes);\r\n  }\r\n\r\n  /** Set new current EmployeeId */\r\n  setCurrentEmployeeId(eeId: string): void {\r\n    this.sessionService.setCurrentEmployeeId(eeId);\r\n  }\r\n}\r\n","\n    <div [@eeSetupAnim]=\"prepareRoute(outlet)\" class=\"d-flex flex-column\" id=\"employeesComponent\">\n      <router-outlet #outlet=\"outlet\"></router-outlet>\n    </div>\n  ","import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { eeSetupAnim } from '@animations';\r\n\r\n@Component({\r\n  selector: 'sp-ees-container',\r\n  template: `\r\n    <div [@eeSetupAnim]=\"prepareRoute(outlet)\" class=\"d-flex flex-column\" id=\"employeesComponent\">\r\n      <router-outlet #outlet=\"outlet\"></router-outlet>\r\n    </div>\r\n  `,\r\n  animations: [eeSetupAnim]\r\n})\r\nexport class EmployeesContainerComponent {\r\n  prepareRoute(outlet: RouterOutlet) {\r\n    /** Animation relies on title data property to recognize a state change */\r\n    return (\r\n      (outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation']) || 'Employee'\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { EmployeeContainerComponent } from './employee/employee-container/employee-container.component';\r\nimport { EmployeesContainerComponent } from './employees-container.component';\r\nimport { EmployeeEmploymentComponent } from './employee/employee-employment/employee-employment.component';\r\nimport { EmployeeListContainerComponent } from './employee-setup/employee-list/employee-list-container.component';\r\nimport { EmployeePaymentComponent } from './employee/employee-payment/employee-payment/employee-payment.component';\r\nimport { EmployeePersonalComponent } from './employee/employee-personal/employee-personal.component';\r\nimport { EmployeeTaxesComponent } from './employee/employee-tax/employee-taxes.component';\r\n\r\nimport { PageLeaveGuard, DataEntryPageGuard } from '@core/routing-guards';\r\nimport { EmployeeSetupContainerComponent } from './employee-setup/employee-setup-container/employee-setup-container.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EmployeesContainerComponent,\r\n    canActivateChild: [DataEntryPageGuard],\r\n    canDeactivate: [PageLeaveGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: EmployeeSetupContainerComponent,\r\n        // canDeactivate: [PageLeaveGuard], // this is a read-only component\r\n        data: { animation: 'EmployeeSetup' },\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: EmployeeListContainerComponent,\r\n            canDeactivate: [PageLeaveGuard],\r\n            data: { title: 'Employees' },\r\n          },\r\n          {\r\n            path: 'earnings',\r\n            loadChildren: '@app/earnings/earnings.module#EarningsModule',\r\n          },\r\n          {\r\n            path: 'company-deductions',\r\n            loadChildren: '@app/deductions/company/company-deductions.module#CompanyDeductionsModule',\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: EmployeeContainerComponent,\r\n        children: [\r\n          { path: '', redirectTo: 'personal' },\r\n          {\r\n            path: 'personal',\r\n            component: EmployeePersonalComponent,\r\n            canDeactivate: [PageLeaveGuard],\r\n          },\r\n          {\r\n            path: 'employment',\r\n            component: EmployeeEmploymentComponent,\r\n            canDeactivate: [PageLeaveGuard],\r\n          },\r\n          {\r\n            path: 'payment',\r\n            component: EmployeePaymentComponent,\r\n            canDeactivate: [PageLeaveGuard],\r\n          },\r\n          {\r\n            path: 'tax',\r\n            component: EmployeeTaxesComponent,\r\n            canDeactivate: [PageLeaveGuard],\r\n          },\r\n          {\r\n            path: 'deductions',\r\n            loadChildren: '@app/deductions/employee/employee-deductions.module#EmployeeDeductionsModule',\r\n          },\r\n          { path: '**', redirectTo: 'personal' } // bad routes redirect to personal\r\n        ]\r\n      },\r\n      { path: '**', pathMatch: 'prefix', redirectTo: '' }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [ PageLeaveGuard ]\r\n})\r\nexport class EmployeesRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { EmployeesRoutingModule } from './employees-routing.module';\r\n\r\nimport { EmployeeContainerComponent } from './employee/employee-container/employee-container.component';\r\nimport { EmployeesContainerComponent } from './employees-container.component';\r\nimport { EmployeeEmploymentComponent } from './employee/employee-employment/employee-employment.component';\r\nimport { EmployeeListContainerComponent } from './employee-setup/employee-list/employee-list-container.component';\r\nimport { EmployeeListComponent } from './employee-setup/employee-list/employee-list.component';\r\nimport { EmployeePaymentComponent } from './employee/employee-payment//employee-payment/employee-payment.component';\r\nimport { EmployeePaymentAccountsComponent\r\n} from './employee/employee-payment/employee-payment-accounts/employee-payment-accounts.component';\r\nimport { EmployeePersonalComponent } from './employee/employee-personal/employee-personal.component';\r\nimport { EmployeeSetupContainerComponent } from './employee-setup/employee-setup-container/employee-setup-container.component';\r\nimport { EmployeeSetupQuestionsComponent } from './employee-setup-questions';\r\nimport { EmployeeTaxesComponent } from './employee/employee-tax/employee-taxes.component';\r\nimport { EmployeeTaxComponent } from './employee/employee-tax/employee-tax.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { EmployeePaymentEarningsListComponent } from '@employees/employee/employee-payment/employee-payment/employee-payment-earnings-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    EmployeesRoutingModule,\r\n  ],\r\n  declarations: [\r\n    EmployeeContainerComponent,\r\n    EmployeesContainerComponent,\r\n    EmployeeEmploymentComponent,\r\n    EmployeeListComponent,\r\n    EmployeeListContainerComponent,\r\n    EmployeePaymentAccountsComponent,\r\n    EmployeePaymentComponent,\r\n    EmployeePersonalComponent,\r\n    EmployeeSetupContainerComponent,\r\n    EmployeeSetupQuestionsComponent,\r\n    EmployeeTaxesComponent,\r\n    EmployeeTaxComponent,\r\n    EmployeePaymentEarningsListComponent\r\n ]\r\n})\r\nexport class EmployeesModule {}\r\n","<div class=\"form-group input-small\">\r\n  <label [for]=\"name\">\r\n    <span class=\"label-text\">{{label}}</span>\r\n    <span class=\"tooltip-container\">\r\n      <i *ngIf=\"tooltip\" (click)=\"open = !open\" class=\"material-icons tooltip-icon clickable\">info</i>\r\n      <ng-container *ngIf=\"tooltip && open\">\r\n        <ng-content></ng-content>\r\n      </ng-container>\r\n    </span>\r\n  </label>\r\n <div class=\"input-group\" [class.input-prepend]=\"prepend\" [class.input-append]=\"append || picker\">\r\n    <div *ngIf=\"!!prepend\" class=\"input-group-prepend\">\r\n      <span class=\"input-group-text\">{{prepend}}</span>\r\n    </div>\r\n\r\n    <input #child type=\"text\" class=\"form-control date-field\" [id]=\"name\" [name]=\"name\"\r\n           [ngModel]=\"getRenderValue()\"\r\n           [ngModelOptions]=\"{updateOn: 'blur'}\"\r\n           #input=\"ngModel\"\r\n           spValidateProperty spAsyncValidateProperty\r\n           [spValidationStatus]=\"input\"\r\n           [model]=\"model\" [modelType]=\"modelType\" [modelContext]=\"modelContext\"\r\n           [group]=\"group\" [propertyName]=\"propertyName\"\r\n           (blur)=\"onBlur()\"\r\n           (keydown)=\"filterKeys($event)\"\r\n           (keyup.enter)=\"exit('enterKey')\"\r\n           (keyup.esc)=\"escaped()\"\r\n           (focus)=\"onFocus()\"\r\n           [placeholder]=\"placeholder\"\r\n           [disabled]=\"disabled\"\r\n           >\r\n    <input #inputPicker type=\"text\" class=\"picker\">\r\n    <div class=\"input-group-append\">\r\n      <span class=\"input-group-text\" (click)=\"openPicker()\">\r\n        <i class=\"material-icons\">calendar_today</i>\r\n      </span>\r\n    </div>\r\n    <div *ngIf=\"!!append\" class=\"input-group-append\">\r\n      <span class=\"input-group-text\">{{ append }}</span>\r\n    </div>\r\n    <div class=\"validationError\" [spValidationFeedback]=\"input\" [displayName]=\"label\"></div>\r\n  </div>\r\n  <ng-content select=\"[helpText]\"></ng-content>\r\n</div>\r\n"],"sourceRoot":""}