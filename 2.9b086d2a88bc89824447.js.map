{"version":3,"sources":["webpack:///./src/app/account-details/account-details-companyStateTax.component.ts","webpack:///./src/app/account-details/account-details-companyStateTax.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/account-details/account-details-companyStateTax.component.html","webpack:///./src/app/account-details/account-details-address.component.ts","webpack:///./src/app/account-details/account-details-address.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/account-details/account-details-address.component.html","webpack:///./src/app/account-details/account-details-employee.component.ts","webpack:///./src/app/account-details/account-details-employee.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/account-details/account-details-employee.component.html","webpack:///./src/app/account-details/account-details-user.component.ts","webpack:///./src/app/account-details/account-details-user.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/account-details/account-details-user.component.html","webpack:///./src/app/account-details/account-details-company.component.ts","webpack:///./src/app/account-details/account-details-company.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/account-details/account-details-company.component.html","webpack:///./src/app/account-details/account-details-fed-tax.component.ts","webpack:///./src/app/account-details/account-details-fed-tax.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/account-details/account-details-fed-tax.component.html","webpack:///./src/app/account-details/account-details-earnings-list.component.ts","webpack:///./src/app/account-details/account-details-earnings-list.component.ts.pre-build-optimizer.js","webpack:///./src/app/account-details/account-details-earnings-list.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/account-details/account-details-earnings-list.component.html","webpack:///./src/app/account-details/account-details-employee-setup.component.ts","webpack:///./src/app/account-details/account-details-employee-setup.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/account-details/account-details-employee-setup.component.html","webpack:///./src/app/account-details/account-details-container.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/account-details/account-details-container.component.html","webpack:///./src/app/account-details/account-details-container.component.ts","webpack:///./src/app/account-details/account-details-container.component.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/company-earning.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/company-earning.service.ts"],"names":["AccountDetailsCompanyStateTaxComponent","prototype","ngOnInit","RenderType_AccountDetailsCompanyStateTaxComponent","core","encapsulation","styles","data","View_AccountDetailsCompanyStateTaxComponent_4","_l","_ck","_v","parent","context","$implicit","ein","View_AccountDetailsCompanyStateTaxComponent_5","View_AccountDetailsCompanyStateTaxComponent_3","common","ngIf","appliedForEin","View_AccountDetailsCompanyStateTaxComponent_6","rate","View_AccountDetailsCompanyStateTaxComponent_2","rateType","name","isExempt","View_AccountDetailsCompanyStateTaxComponent_1","ngForOf","component","stateTaxes","_co","state","View_AccountDetailsCompanyStateTaxComponent_7","View_AccountDetailsCompanyStateTaxComponent_0","state_name_pipe","subject_exempt_pipe","ngIfElse","length","account_details_address_component_AccountDetailsAddressComponent","AccountDetailsAddressComponent","this","isEmployee","formatted","address","Object","utils","qualifier","type","isHome","isMain","RenderType_AccountDetailsAddressComponent","View_AccountDetailsAddressComponent_0","account_details_employee_component_AccountDetailsEmployeeComponent","AccountDetailsEmployeeComponent","entitySelectors","PrintedCheck","model","getFullName","app_core","_this","eid","employee","id","addresses$","entities$","pipe","map","ar","homeAddress","find","a","homeAddressId","workAddress","workAddressId","paymentMethod$","isTerminated","of","undefined","employeePaymentMethod","pms","p","employeeId","taxes$","employeeTax","taxes","filter","t","isRemoved","getFilingStatus","filingStatus","getHireStatus","isNewHire","getExemptReason","exemptReasonCode","getDisplayName","getSplitAmount","pm","val","strategy","SplitAmount","RenderType_AccountDetailsEmployeeComponent","View_AccountDetailsEmployeeComponent_2","Work","Home","View_AccountDetailsEmployeeComponent_5","split1AccountBankName","split1AccountRn","split1AccountNumber","View_AccountDetailsEmployeeComponent_4","split1AccountType","split1Value","View_AccountDetailsEmployeeComponent_7","split2AccountBankName","split2AccountRn","split2AccountNumber","View_AccountDetailsEmployeeComponent_6","split2AccountType","split2Value","View_AccountDetailsEmployeeComponent_8","View_AccountDetailsEmployeeComponent_9","defaultAccountBankName","defaultAccountRn","defaultAccountNumber","View_AccountDetailsEmployeeComponent_3","split1IsActive","split2IsActive","defaultAccountType","firstName","View_AccountDetailsEmployeeComponent_11","View_AccountDetailsEmployeeComponent_12","View_AccountDetailsEmployeeComponent_10","View_AccountDetailsEmployeeComponent_14","View_AccountDetailsEmployeeComponent_15","View_AccountDetailsEmployeeComponent_16","withholdingAllowance","extraWithholding","View_AccountDetailsEmployeeComponent_13","View_AccountDetailsEmployeeComponent_1","transform","lastName","canContact","email","phone","hireDate","birthDate","sex","employeeType","payType","payRate","overtimeRate","payFrequency","ssn","View_AccountDetailsEmployeeComponent_17","View_AccountDetailsEmployeeComponent_0","yes_no_pipe","phone_pipe","ssn_pipe","AccountDetailsUserComponent","RenderType_AccountDetailsUserComponent","View_AccountDetailsUserComponent_0","user","username","account_details_company_component_AccountDetailsCompanyComponent","AccountDetailsCompanyComponent","addresses","ao","companyId","company","sort","a1","a2","RenderType_AccountDetailsCompanyComponent","View_AccountDetailsCompanyComponent_2","View_AccountDetailsCompanyComponent_3","companyType","View_AccountDetailsCompanyComponent_4","View_AccountDetailsCompanyComponent_1","isHousehold","legalName","bankName","bankAccountRn","bankAccountNumber","bankAccountType","payrollFrequency","periodStartDate","periodEndDate","firstCheckDate","enrollmentStartDate","enrollmentCloseDate","View_AccountDetailsCompanyComponent_5","View_AccountDetailsCompanyComponent_0","account_details_fed_tax_component_AccountDetailsFedTaxComponent","AccountDetailsFedTaxComponent","HouseholdFilersStatus","householdFilersVm","household_filer_utils","householdFilers","verificationStatus","feinStatus","Verified","legalNameVerificationSkipReason","RenderType_AccountDetailsFedTaxComponent","View_AccountDetailsFedTaxComponent_2","spouseName","spouseSsn","View_AccountDetailsFedTaxComponent_1","Joint","primaryName","primarySsn","View_AccountDetailsFedTaxComponent_5","View_AccountDetailsFedTaxComponent_6","View_AccountDetailsFedTaxComponent_4","View_AccountDetailsFedTaxComponent_7","View_AccountDetailsFedTaxComponent_3","View_AccountDetailsFedTaxComponent_0","household_filer_status_pipe","companyFedTaxes","fein","account_details_earnings_list_component_AccountDetailsEarningsListComponent","AccountDetailsEarningsListComponent","earningService","companyEarningsService","vm$","combineLatest","earnings$","companyEarnings$","first","_a","earnings","ce","ern","e","code","earningCode","taxType","earningTaxType","toLowerCase","trim","description","earningTypeName","sortEarnings","b","typeRes","localeCompare","nameRes","desRes","RenderType_AccountDetailsEarningsListComponent","View_AccountDetailsEarningsListComponent_3","View_AccountDetailsEarningsListComponent_2","View_AccountDetailsEarningsListComponent_1","View_AccountDetailsEarningsListComponent_0","AccountDetailsEmployeeSetupComponent","RenderType_AccountDetailsEmployeeSetupComponent","View_AccountDetailsEmployeeSetupComponent_0","hasPriorPayroll","needDeductionSetup","__webpack_require__","d","__webpack_exports__","RenderType_AccountDetailsContainerComponent","View_AccountDetailsContainerComponent_0","View_AccountDetailsContainerComponent_2","View_AccountDetailsContainerComponent_3","View_AccountDetailsContainerComponent_4","entity_selectors","View_AccountDetailsContainerComponent_1","earning_service","company_earning_service","user$","householdFilers$","companyFedTaxes$","companyStateTaxes$","hasAdditionalEarning$","employees$","View_AccountDetailsContainerComponent_5","company_kind_pipe","company$","AccountDetailsContainerComponent","rxjs__WEBPACK_IMPORTED_MODULE_0__","rxjs_operators__WEBPACK_IMPORTED_MODULE_1__","_model__WEBPACK_IMPORTED_MODULE_2__","sessionService","taxLocationService","window","scrollTo","currentCompany$","currentUser$","companyTax","liveOnly","cTax","taxTypeCode","Federal","companyTaxStates$","cTaxes","s","stateCode","documents$","document","employeePaymentMethods$","envelopes$","envelope","envelopesSigners$","envelopeSigner","currentCompanyId$","f","companyEarning","source","entities","CompanyEarningService","extendStatics","_utils__WEBPACK_IMPORTED_MODULE_0__","_model__WEBPACK_IMPORTED_MODULE_1__","_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_2__","_environment__WEBPACK_IMPORTED_MODULE_3__","_angular_core__WEBPACK_IMPORTED_MODULE_4__","_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_5__","__extends","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","create","ENTITY_COMPANY_EARNING","_super","helper","call","createFromEarning","earning","Error","save","updates","adds","generateId","changes","add","update","saveEntities","apiRoot","ngInjectableDef","factory","token","providedIn"],"mappings":"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","file":"2.9b086d2a88bc89824447.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { CompanyTax } from '@app/model/entities';\r\n\r\n@Component({\r\n  selector: 'sp-account-details-companystatetax',\r\n  templateUrl: './account-details-companyStateTax.component.html'\r\n})\r\nexport class AccountDetailsCompanyStateTaxComponent implements OnInit {\r\n  @Input() state: string;\r\n  @Input() stateTaxes: CompanyTax[];\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../shared/pipes/state-name.pipe\";\nimport * as i3 from \"../shared/pipes/subject-exempt.pipe\";\nimport * as i4 from \"./account-details-companyStateTax.component\";\nvar styles_AccountDetailsCompanyStateTaxComponent = [];\nvar RenderType_AccountDetailsCompanyStateTaxComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AccountDetailsCompanyStateTaxComponent, data: {} });\nexport { RenderType_AccountDetailsCompanyStateTaxComponent as RenderType_AccountDetailsCompanyStateTaxComponent };\nfunction View_AccountDetailsCompanyStateTaxComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.parent.context.$implicit.ein; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_AccountDetailsCompanyStateTaxComponent_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Applied For\"]))], null, null); }\nfunction View_AccountDetailsCompanyStateTaxComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 6, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"EIN:\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsCompanyStateTaxComponent_4)), i0.ɵdid(4, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsCompanyStateTaxComponent_5)), i0.ɵdid(6, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var currVal_0 = !_v.parent.context.$implicit.appliedForEin; _ck(_v, 4, 0, currVal_0); var currVal_1 = _v.parent.context.$implicit.appliedForEin; _ck(_v, 6, 0, currVal_1); }, null); }\nfunction View_AccountDetailsCompanyStateTaxComponent_6(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Rate:\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.rate; _ck(_v, 4, 0, currVal_0); }); }\nfunction View_AccountDetailsCompanyStateTaxComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 14, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 13, \"td\", [[\"class\", \"multi-row\"], [\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"span\", [[\"class\", \"font-weight-bold mt-1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(3, null, [\"\", \" Tax\"])), (_l()(), i0.ɵeld(4, 0, null, null, 10, \"ul\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 5, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Filing Status:\"])), (_l()(), i0.ɵeld(8, 0, null, null, 2, \"span\", [[\"class\", \"col2 text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(9, null, [\"\", \"\"])), i0.ɵppd(10, 1), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsCompanyStateTaxComponent_3)), i0.ɵdid(12, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsCompanyStateTaxComponent_6)), i0.ɵdid(14, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var currVal_2 = ((_v.context.$implicit.ein && (_v.context.$implicit.ein !== \"\")) || _v.context.$implicit.appliedForEin); _ck(_v, 12, 0, currVal_2); var currVal_3 = (_v.context.$implicit.rateType === \"Variable\"); _ck(_v, 14, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = _v.context.$implicit.name; _ck(_v, 3, 0, currVal_0); var currVal_1 = i0.ɵunv(_v, 9, 0, _ck(_v, 10, 0, i0.ɵnov(_v.parent.parent, 1), _v.context.$implicit.isExempt)); _ck(_v, 9, 0, currVal_1); }); }\nfunction View_AccountDetailsCompanyStateTaxComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 7, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 6, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 3, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"th\", [[\"class\", \"text-capitalize\"], [\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \" State & Local Taxes\"])), i0.ɵppd(5, 1), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsCompanyStateTaxComponent_2)), i0.ɵdid(7, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.stateTaxes; _ck(_v, 7, 0, currVal_1); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 4, 0, _ck(_v, 5, 0, i0.ɵnov(_v.parent, 0), _co.state)); _ck(_v, 4, 0, currVal_0); }); }\nfunction View_AccountDetailsCompanyStateTaxComponent_7(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"span\", [[\"class\", \"font-weight-bold\"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"])), i0.ɵppd(2, 1), (_l()(), i0.ɵted(-1, null, [\" contains no taxes data \"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 1, 0, _ck(_v, 2, 0, i0.ɵnov(_v.parent, 0), _co.state)); _ck(_v, 1, 0, currVal_0); }); }\nexport function View_AccountDetailsCompanyStateTaxComponent_0(_l) { return i0.ɵvid(0, [i0.ɵpid(0, i2.StateNamePipe, []), i0.ɵpid(0, i3.SubjectExemptBooleanPipe, []), (_l()(), i0.ɵeld(2, 0, null, null, 4, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 3, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsCompanyStateTaxComponent_1)), i0.ɵdid(5, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"], ngIfElse: [1, \"ngIfElse\"] }, null), (_l()(), i0.ɵand(0, [[\"NoData\", 2]], null, 0, null, View_AccountDetailsCompanyStateTaxComponent_7))], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.stateTaxes.length > 0); var currVal_1 = i0.ɵnov(_v, 6); _ck(_v, 5, 0, currVal_0, currVal_1); }, null); }\nexport function View_AccountDetailsCompanyStateTaxComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-account-details-companystatetax\", [], null, null, null, View_AccountDetailsCompanyStateTaxComponent_0, RenderType_AccountDetailsCompanyStateTaxComponent)), i0.ɵdid(1, 114688, null, 0, i4.AccountDetailsCompanyStateTaxComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar AccountDetailsCompanyStateTaxComponentNgFactory = i0.ɵccf(\"sp-account-details-companystatetax\", i4.AccountDetailsCompanyStateTaxComponent, View_AccountDetailsCompanyStateTaxComponent_Host_0, { state: \"state\", stateTaxes: \"stateTaxes\" }, {}, []);\nexport { AccountDetailsCompanyStateTaxComponentNgFactory as AccountDetailsCompanyStateTaxComponentNgFactory };\n","<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <table class=\"table table-sm\" *ngIf=\"stateTaxes.length > 0; else NoData\">\r\n            <tbody>\r\n                <tr class=\"table-subheader\">\r\n                    <th colspan=\"2\" class=\"text-capitalize\">{{ state | stateName }} State & Local Taxes</th>\r\n                </tr>\r\n                <ng-template ngFor let-tax [ngForOf]=\"stateTaxes\">\r\n                    <tr>\r\n                        <td class=\"multi-row\" colspan=\"2\">\r\n                            <span class=\"font-weight-bold mt-1\">{{ tax.name }} Tax</span>\r\n                            <ul>\r\n                                <li>\r\n                                    <span class=\"col1\">Filing Status:</span>\r\n                                    <span class=\"col2 text-capitalize\">{{ tax.isExempt | subjectexempt }}</span>\r\n                                </li>\r\n                                <li *ngIf=\"(tax.ein && tax.ein !== '') || tax.appliedForEin\">\r\n                                    <span class=\"col1\">EIN:</span>\r\n                                    <span class=\"col2\" *ngIf=\"!tax.appliedForEin\">{{ tax.ein }}</span>\r\n                                    <span class=\"col2\" *ngIf=\"tax.appliedForEin\">Applied For</span>\r\n                                </li>\r\n                                <li *ngIf=\"tax.rateType === 'Variable'\">\r\n                                        <span class=\"col1\">Rate:</span>\r\n                                        <span class=\"col2\">{{ tax.rate }}</span>\r\n                                </li>\r\n                            </ul>\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n            </tbody>\r\n        </table>\r\n        <ng-template #NoData>\r\n            <span class=\"font-weight-bold\">{{ state | stateName }}</span> contains no taxes data\r\n        </ng-template>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Address } from '@model';\r\nimport { addressToString } from '@core/utils';\r\n\r\n@Component({\r\n  selector: 'sp-account-details-address',\r\n  templateUrl: './account-details-address.component.html'\r\n})\r\nexport class AccountDetailsAddressComponent implements OnInit {\r\n  @Input()\r\n  address: Address;\r\n  @Input()\r\n  type: string;\r\n  @Input()\r\n  isEmployee = true;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  formatted() {\r\n    return this.address ? addressToString(this.address) : 'missing';\r\n  }\r\n\r\n  qualifier() {\r\n    if (this.type) {\r\n      return this.type;\r\n    } else if (!this.address) {\r\n      return 'Address';\r\n    } else if (this.isEmployee) {\r\n      return this.address.isHome ? 'Home' : 'Work';\r\n    } else {\r\n      return this.address.isMain ? 'Main' : 'Other';\r\n    }\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./account-details-address.component\";\nvar styles_AccountDetailsAddressComponent = [];\nvar RenderType_AccountDetailsAddressComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AccountDetailsAddressComponent, data: {} });\nexport { RenderType_AccountDetailsAddressComponent as RenderType_AccountDetailsAddressComponent };\nexport function View_AccountDetailsAddressComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(2, null, [\"\", \"\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.qualifier(); _ck(_v, 2, 0, currVal_0); var currVal_1 = _co.formatted(); _ck(_v, 4, 0, currVal_1); }); }\nexport function View_AccountDetailsAddressComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-account-details-address\", [], null, null, null, View_AccountDetailsAddressComponent_0, RenderType_AccountDetailsAddressComponent)), i0.ɵdid(1, 114688, null, 0, i1.AccountDetailsAddressComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar AccountDetailsAddressComponentNgFactory = i0.ɵccf(\"sp-account-details-address\", i1.AccountDetailsAddressComponent, View_AccountDetailsAddressComponent_Host_0, { address: \"address\", type: \"type\", isEmployee: \"isEmployee\" }, {}, []);\nexport { AccountDetailsAddressComponentNgFactory as AccountDetailsAddressComponentNgFactory };\n","<tr>\r\n    <th>{{qualifier()}}</th>\r\n    <td>{{ formatted() }}</td>\r\n</tr>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport {\r\n  Address, Employee, EmployeePaymentMethod, EmployeeTax,\r\n  PaymentAccountType, PaymentStrategy, TaxExemptionReasonsCodes\r\n} from '@model';\r\nimport { EntitySelectors } from '@entity';\r\nimport { getFullName } from '@core';\r\n\r\n@Component({\r\n  selector: 'sp-account-details-employee',\r\n  templateUrl: './account-details-employee.component.html'\r\n})\r\nexport class AccountDetailsEmployeeComponent implements OnInit {\r\n  @Input() employee: Employee;\r\n\r\n  addresses$: Observable<{\r\n    homeAddress: Address,\r\n    workAddress: Address\r\n  }>;\r\n\r\n  paymentMethod$: Observable<EmployeePaymentMethod>;\r\n  taxes$: Observable<EmployeeTax[]>;\r\n\r\n  PrintedCheck = PaymentAccountType.PrintedCheck;\r\n\r\n  constructor(private entitySelectors: EntitySelectors) { }\r\n\r\n  ngOnInit(): void {\r\n    const eid = this.employee.id;\r\n\r\n    this.addresses$ = this.entitySelectors.address.entities$.pipe(\r\n      map(ar => ({\r\n        // find first home and work address (should be only) that matches this EE\r\n        homeAddress: ar.find(a => a.id === this.employee.homeAddressId),\r\n        workAddress: ar.find(a => a.id === this.employee.workAddressId)\r\n      }))\r\n    );\r\n\r\n    this.paymentMethod$ = this.employee.isTerminated\r\n      ? of(undefined)\r\n      : this.entitySelectors.employeePaymentMethod.entities$.pipe(\r\n          // find first EmployeePaymentMethod (should be only) for this EE\r\n          map(pms => pms.find(p => p.employeeId === this.employee.id))\r\n        );\r\n\r\n    this.taxes$ = this.entitySelectors.employeeTax.entities$.pipe(\r\n      map(taxes => taxes.filter(t => t.employeeId === eid && t.isRemoved !== true))\r\n    );\r\n  }\r\n\r\n  getFullName = getFullName;\r\n\r\n  getFilingStatus(filingStatus: string) {\r\n    switch (filingStatus) {\r\n      case 'S':\r\n        return 'Single';\r\n      case 'M':\r\n        return 'Married';\r\n      case 'H':\r\n        return 'Head of Household';\r\n      default:\r\n        return filingStatus;\r\n    }\r\n  }\r\n\r\n  getHireStatus() {\r\n    if (this.employee == null) {\r\n      return;\r\n    }\r\n    if (this.employee.isNewHire) {\r\n      return 'New Hire';\r\n    }\r\n    if (this.employee.isTerminated) {\r\n      return 'Terminated';\r\n    }\r\n    return 'Active';\r\n  }\r\n\r\n  getExemptReason(exemptReasonCode: string) {\r\n    return TaxExemptionReasonsCodes.getDisplayName(exemptReasonCode);\r\n  }\r\n\r\n  getSplitAmount(pm: EmployeePaymentMethod , val: number) {\r\n    return pm.strategy === PaymentStrategy.SplitAmount ? `$ ${val}` : `${val} %`;\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./account-details-address.component.ngfactory\";\nimport * as i2 from \"./account-details-address.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../shared/pipes/yes-no.pipe\";\nimport * as i5 from \"../shared/pipes/phone.pipe\";\nimport * as i6 from \"../shared/pipes/ssn.pipe\";\nimport * as i7 from \"../shared/pipes/subject-exempt.pipe\";\nimport * as i8 from \"./account-details-employee.component\";\nimport * as i9 from \"../store/entity/entity-selectors\";\nvar styles_AccountDetailsEmployeeComponent = [];\nvar RenderType_AccountDetailsEmployeeComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AccountDetailsEmployeeComponent, data: {} });\nexport { RenderType_AccountDetailsEmployeeComponent as RenderType_AccountDetailsEmployeeComponent };\nfunction View_AccountDetailsEmployeeComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"sp-account-details-address\", [], null, null, null, i1.View_AccountDetailsAddressComponent_0, i1.RenderType_AccountDetailsAddressComponent)), i0.ɵdid(2, 114688, null, 0, i2.AccountDetailsAddressComponent, [], { address: [0, \"address\"], type: [1, \"type\"] }, null), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"sp-account-details-address\", [], null, null, null, i1.View_AccountDetailsAddressComponent_0, i1.RenderType_AccountDetailsAddressComponent)), i0.ɵdid(4, 114688, null, 0, i2.AccountDetailsAddressComponent, [], { address: [0, \"address\"], type: [1, \"type\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.context.ngIf.workAddress; var currVal_1 = _co.Work; _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_2 = _v.context.ngIf.homeAddress; var currVal_3 = _co.Home; _ck(_v, 4, 0, currVal_2, currVal_3); }, null); }\nfunction View_AccountDetailsEmployeeComponent_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Bank Name:\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"])), (_l()(), i0.ɵeld(5, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Routing Number:\"])), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(9, null, [\"\", \"\"])), (_l()(), i0.ɵeld(10, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Account Number:\"])), (_l()(), i0.ɵeld(13, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(14, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = (_v.parent.parent.context.ngIf.split1AccountBankName || \"missing or invalid\"); _ck(_v, 4, 0, currVal_0); var currVal_1 = _v.parent.parent.context.ngIf.split1AccountRn; _ck(_v, 9, 0, currVal_1); var currVal_2 = _v.parent.parent.context.ngIf.split1AccountNumber; _ck(_v, 14, 0, currVal_2); }); }\nfunction View_AccountDetailsEmployeeComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 15, \"td\", [[\"class\", \"multi-row\"], [\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"span\", [[\"class\", \"font-weight-bold\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"1st Account\"])), (_l()(), i0.ɵeld(4, 0, null, null, 12, \"ul\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Account Type:\"])), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"span\", [[\"class\", \"col2 text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(9, null, [\"\", \"\"])), (_l()(), i0.ɵeld(10, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Split:\"])), (_l()(), i0.ɵeld(13, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(14, null, [\"\", \"\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEmployeeComponent_5)), i0.ɵdid(16, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = (_v.parent.context.ngIf.split1AccountType !== _co.PrintedCheck); _ck(_v, 16, 0, currVal_2); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.parent.context.ngIf.split1AccountType; _ck(_v, 9, 0, currVal_0); var currVal_1 = _co.getSplitAmount(_v.parent.context.ngIf, _v.parent.context.ngIf.split1Value); _ck(_v, 14, 0, currVal_1); }); }\nfunction View_AccountDetailsEmployeeComponent_7(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Bank Name:\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"])), (_l()(), i0.ɵeld(5, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Routing Number:\"])), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(9, null, [\"\", \"\"])), (_l()(), i0.ɵeld(10, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Account Number:\"])), (_l()(), i0.ɵeld(13, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(14, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = (_v.parent.parent.context.ngIf.split2AccountBankName || \"missing or invalid\"); _ck(_v, 4, 0, currVal_0); var currVal_1 = _v.parent.parent.context.ngIf.split2AccountRn; _ck(_v, 9, 0, currVal_1); var currVal_2 = _v.parent.parent.context.ngIf.split2AccountNumber; _ck(_v, 14, 0, currVal_2); }); }\nfunction View_AccountDetailsEmployeeComponent_6(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 15, \"td\", [[\"class\", \"multi-row\"], [\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"span\", [[\"class\", \"font-weight-bold\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"2nd Account\"])), (_l()(), i0.ɵeld(4, 0, null, null, 12, \"ul\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Account Type:\"])), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"span\", [[\"class\", \"col2 text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(9, null, [\"\", \"\"])), (_l()(), i0.ɵeld(10, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Split:\"])), (_l()(), i0.ɵeld(13, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(14, null, [\"\", \"\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEmployeeComponent_7)), i0.ɵdid(16, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = (_v.parent.context.ngIf.split2AccountType !== _co.PrintedCheck); _ck(_v, 16, 0, currVal_2); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.parent.context.ngIf.split2AccountType; _ck(_v, 9, 0, currVal_0); var currVal_1 = _co.getSplitAmount(_v.parent.context.ngIf, _v.parent.context.ngIf.split2Value); _ck(_v, 14, 0, currVal_1); }); }\nfunction View_AccountDetailsEmployeeComponent_8(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"class\", \"font-weight-bold\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Balance\"]))], null, null); }\nfunction View_AccountDetailsEmployeeComponent_9(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Bank Name:\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"])), (_l()(), i0.ɵeld(5, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Routing Number:\"])), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(9, null, [\"\", \"\"])), (_l()(), i0.ɵeld(10, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Account Number:\"])), (_l()(), i0.ɵeld(13, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(14, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = (_v.parent.context.ngIf.defaultAccountBankName || \"missing or invalid\"); _ck(_v, 4, 0, currVal_0); var currVal_1 = _v.parent.context.ngIf.defaultAccountRn; _ck(_v, 9, 0, currVal_1); var currVal_2 = _v.parent.context.ngIf.defaultAccountNumber; _ck(_v, 14, 0, currVal_2); }); }\nfunction View_AccountDetailsEmployeeComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 21, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 20, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 19, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"th\", [[\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(5, null, [\"\", \"'s Payment Accounts\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEmployeeComponent_4)), i0.ɵdid(7, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEmployeeComponent_6)), i0.ɵdid(9, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(10, 0, null, null, 11, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(11, 0, null, null, 10, \"td\", [[\"class\", \"multi-row\"], [\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEmployeeComponent_8)), i0.ɵdid(13, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(14, 0, null, null, 7, \"ul\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(15, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(16, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Account Type:\"])), (_l()(), i0.ɵeld(18, 0, null, null, 1, \"span\", [[\"class\", \"col2 text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(19, null, [\"\", \"\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEmployeeComponent_9)), i0.ɵdid(21, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_1 = _v.context.ngIf.split1IsActive; _ck(_v, 7, 0, currVal_1); var currVal_2 = _v.context.ngIf.split2IsActive; _ck(_v, 9, 0, currVal_2); var currVal_3 = (_v.context.ngIf.split1IsActive || _v.context.ngIf.split2IsActive); _ck(_v, 13, 0, currVal_3); var currVal_5 = (_v.context.ngIf.defaultAccountType !== _co.PrintedCheck); _ck(_v, 21, 0, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.employee.firstName; _ck(_v, 5, 0, currVal_0); var currVal_4 = _v.context.ngIf.defaultAccountType; _ck(_v, 19, 0, currVal_4); }); }\nfunction View_AccountDetailsEmployeeComponent_11(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [\" No payment accounts because \", \" is terminated. \"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.employee.firstName; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_AccountDetailsEmployeeComponent_12(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(-1, null, [\" Payment account(s) missing \"]))], null, null); }\nfunction View_AccountDetailsEmployeeComponent_10(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 9, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 8, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"'s Payment Accounts\"])), (_l()(), i0.ɵeld(5, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 3, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEmployeeComponent_11)), i0.ɵdid(8, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"], ngIfElse: [1, \"ngIfElse\"] }, null), (_l()(), i0.ɵand(0, [[\"missingPaymentAccount\", 2]], null, 0, null, View_AccountDetailsEmployeeComponent_12))], function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.employee.isTerminated; var currVal_2 = i0.ɵnov(_v, 9); _ck(_v, 8, 0, currVal_1, currVal_2); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.employee.firstName; _ck(_v, 4, 0, currVal_0); }); }\nfunction View_AccountDetailsEmployeeComponent_14(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Exempt reason: \"])), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"strong\", [], null, null, null, null, null)), (_l()(), i0.ɵted(3, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.getExemptReason(_v.parent.context.$implicit.exemptReasonCode); _ck(_v, 3, 0, currVal_0); }); }\nfunction View_AccountDetailsEmployeeComponent_15(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Filing Status:\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.getFilingStatus(_v.parent.context.$implicit.filingStatus); _ck(_v, 4, 0, currVal_0); }); }\nfunction View_AccountDetailsEmployeeComponent_16(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 10, null, null, null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Allowances:\"])), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(5, null, [\"\", \"\"])), (_l()(), i0.ɵeld(6, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Extra Withholding:\"])), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(10, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.withholdingAllowance; _ck(_v, 5, 0, currVal_0); var currVal_1 = _v.parent.context.$implicit.extraWithholding; _ck(_v, 10, 0, currVal_1); }); }\nfunction View_AccountDetailsEmployeeComponent_13(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 17, null, null, null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 16, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 15, \"td\", [[\"class\", \"multi-row\"], [\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"font-weight-bold\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \" Tax\"])), (_l()(), i0.ɵeld(5, 0, null, null, 12, \"ul\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 5, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Tax Status:\"])), (_l()(), i0.ɵeld(9, 0, null, null, 2, \"span\", [[\"class\", \"col2 text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(10, null, [\"\", \"\"])), i0.ɵppd(11, 1), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEmployeeComponent_14)), i0.ɵdid(13, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEmployeeComponent_15)), i0.ɵdid(15, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEmployeeComponent_16)), i0.ɵdid(17, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var currVal_2 = ((_v.context.$implicit.isExempt && (_v.context.$implicit.exemptReasonCode != null)) && (_v.context.$implicit.exemptReasonCode !== \"\")); _ck(_v, 13, 0, currVal_2); var currVal_3 = (_v.context.$implicit.filingStatus && (_v.context.$implicit.filingStatus !== \"\")); _ck(_v, 15, 0, currVal_3); var currVal_4 = _v.context.$implicit.withholdingAllowance; _ck(_v, 17, 0, currVal_4); }, function (_ck, _v) { var currVal_0 = _v.context.$implicit.name; _ck(_v, 4, 0, currVal_0); var currVal_1 = i0.ɵunv(_v, 10, 0, _ck(_v, 11, 0, i0.ɵnov(_v.parent.parent, 5), _v.context.$implicit.isExempt)); _ck(_v, 10, 0, currVal_1); }); }\nfunction View_AccountDetailsEmployeeComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 111, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 53, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 52, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader text-center\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"th\", [[\"class\", \"pb-3\"], [\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(5, null, [\"Employee - \", \"\"])), (_l()(), i0.ɵeld(6, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"First Name\"])), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(10, null, [\"\", \"\"])), (_l()(), i0.ɵeld(11, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(12, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Last Name\"])), (_l()(), i0.ɵeld(14, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(15, null, [\"\", \"\"])), (_l()(), i0.ɵeld(16, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(17, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Employee Account Set Up\"])), (_l()(), i0.ɵeld(19, 0, null, null, 2, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(20, null, [\"\", \"\"])), i0.ɵppd(21, 1), (_l()(), i0.ɵeld(22, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(23, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Email\"])), (_l()(), i0.ɵeld(25, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(26, null, [\"\", \"\"])), (_l()(), i0.ɵeld(27, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(28, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Phone\"])), (_l()(), i0.ɵeld(30, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(31, null, [\"\", \"\"])), i0.ɵppd(32, 1), (_l()(), i0.ɵeld(33, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(34, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Status\"])), (_l()(), i0.ɵeld(36, 0, null, null, 1, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(37, null, [\"\", \"\"])), (_l()(), i0.ɵeld(38, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(39, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Hire Date\"])), (_l()(), i0.ɵeld(41, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(42, null, [\"\", \"\"])), i0.ɵppd(43, 2), (_l()(), i0.ɵeld(44, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(45, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Birth Date\"])), (_l()(), i0.ɵeld(47, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(48, null, [\"\", \"\"])), i0.ɵppd(49, 2), (_l()(), i0.ɵeld(50, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(51, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Sex\"])), (_l()(), i0.ɵeld(53, 0, null, null, 1, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(54, null, [\"\", \"\"])), (_l()(), i0.ɵeld(55, 0, null, null, 7, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(56, 0, null, null, 6, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(57, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(58, 0, null, null, 1, \"th\", [[\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(59, null, [\"\", \"'s Addresses\"])), (_l()(), i0.ɵand(16777216, null, null, 2, null, View_AccountDetailsEmployeeComponent_2)), i0.ɵdid(61, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i0.ɵpid(131072, i3.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵeld(63, 0, null, null, 30, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(64, 0, null, null, 29, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(65, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(66, 0, null, null, 1, \"th\", [[\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(67, null, [\"\", \"'s Payment Details\"])), (_l()(), i0.ɵeld(68, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(69, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Employee Type\"])), (_l()(), i0.ɵeld(71, 0, null, null, 1, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(72, null, [\"\", \"\"])), (_l()(), i0.ɵeld(73, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(74, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Pay Type\"])), (_l()(), i0.ɵeld(76, 0, null, null, 1, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(77, null, [\"\", \"\"])), (_l()(), i0.ɵeld(78, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(79, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Pay Rate\"])), (_l()(), i0.ɵeld(81, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(82, null, [\"\", \"\"])), i0.ɵppd(83, 1), (_l()(), i0.ɵeld(84, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(85, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Overtime Rate\"])), (_l()(), i0.ɵeld(87, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(88, null, [\"\", \"\"])), (_l()(), i0.ɵeld(89, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(90, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Pay Frequency\"])), (_l()(), i0.ɵeld(92, 0, null, null, 1, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(93, null, [\"\", \"\"])), (_l()(), i0.ɵand(16777216, null, null, 2, null, View_AccountDetailsEmployeeComponent_3)), i0.ɵdid(95, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"], ngIfElse: [1, \"ngIfElse\"] }, null), i0.ɵpid(131072, i3.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵand(0, [[\"noPaymentAccount\", 2]], null, 0, null, View_AccountDetailsEmployeeComponent_10)), (_l()(), i0.ɵeld(98, 0, null, null, 13, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(99, 0, null, null, 12, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(100, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(101, 0, null, null, 1, \"th\", [[\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(102, null, [\"\", \"'s Taxes\"])), (_l()(), i0.ɵeld(103, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(104, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"SSN\"])), (_l()(), i0.ɵeld(106, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(107, null, [\"\", \"\"])), i0.ɵppd(108, 1), (_l()(), i0.ɵand(16777216, null, null, 2, null, View_AccountDetailsEmployeeComponent_13)), i0.ɵdid(110, 278528, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), i0.ɵpid(131072, i3.AsyncPipe, [i0.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; var currVal_11 = i0.ɵunv(_v, 61, 0, i0.ɵnov(_v, 62).transform(_co.addresses$)); _ck(_v, 61, 0, currVal_11); var currVal_18 = i0.ɵunv(_v, 95, 0, i0.ɵnov(_v, 96).transform(_co.paymentMethod$)); var currVal_19 = i0.ɵnov(_v, 97); _ck(_v, 95, 0, currVal_18, currVal_19); var currVal_22 = i0.ɵunv(_v, 110, 0, i0.ɵnov(_v, 111).transform(_co.taxes$)); _ck(_v, 110, 0, currVal_22); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.getFullName(_co.employee); _ck(_v, 5, 0, currVal_0); var currVal_1 = _co.employee.firstName; _ck(_v, 10, 0, currVal_1); var currVal_2 = _co.employee.lastName; _ck(_v, 15, 0, currVal_2); var currVal_3 = i0.ɵunv(_v, 20, 0, _ck(_v, 21, 0, i0.ɵnov(_v.parent, 0), _co.employee.canContact)); _ck(_v, 20, 0, currVal_3); var currVal_4 = _co.employee.email; _ck(_v, 26, 0, currVal_4); var currVal_5 = i0.ɵunv(_v, 31, 0, _ck(_v, 32, 0, i0.ɵnov(_v.parent, 1), _co.employee.phone)); _ck(_v, 31, 0, currVal_5); var currVal_6 = _co.getHireStatus(); _ck(_v, 37, 0, currVal_6); var currVal_7 = i0.ɵunv(_v, 42, 0, _ck(_v, 43, 0, i0.ɵnov(_v.parent, 2), _co.employee.hireDate, \"MM/dd/yyyy\")); _ck(_v, 42, 0, currVal_7); var currVal_8 = i0.ɵunv(_v, 48, 0, _ck(_v, 49, 0, i0.ɵnov(_v.parent, 2), _co.employee.birthDate, \"MM/dd/yyyy\")); _ck(_v, 48, 0, currVal_8); var currVal_9 = _co.employee.sex; _ck(_v, 54, 0, currVal_9); var currVal_10 = _co.employee.firstName; _ck(_v, 59, 0, currVal_10); var currVal_12 = _co.employee.firstName; _ck(_v, 67, 0, currVal_12); var currVal_13 = _co.employee.employeeType; _ck(_v, 72, 0, currVal_13); var currVal_14 = _co.employee.payType; _ck(_v, 77, 0, currVal_14); var currVal_15 = i0.ɵunv(_v, 82, 0, _ck(_v, 83, 0, i0.ɵnov(_v.parent, 3), _co.employee.payRate)); _ck(_v, 82, 0, currVal_15); var currVal_16 = _co.employee.overtimeRate; _ck(_v, 88, 0, currVal_16); var currVal_17 = _co.employee.payFrequency; _ck(_v, 93, 0, currVal_17); var currVal_20 = _co.employee.firstName; _ck(_v, 102, 0, currVal_20); var currVal_21 = i0.ɵunv(_v, 107, 0, _ck(_v, 108, 0, i0.ɵnov(_v.parent, 4), _co.employee.ssn)); _ck(_v, 107, 0, currVal_21); }); }\nfunction View_AccountDetailsEmployeeComponent_17(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" No Employee Data Provided \"]))], null, null); }\nexport function View_AccountDetailsEmployeeComponent_0(_l) { return i0.ɵvid(0, [i0.ɵpid(0, i4.YesNoBooleanPipe, []), i0.ɵpid(0, i5.PhonePipe, []), i0.ɵpid(0, i3.DatePipe, [i0.LOCALE_ID]), i0.ɵpid(0, i3.CurrencyPipe, [i0.LOCALE_ID]), i0.ɵpid(0, i6.SsnPipe, []), i0.ɵpid(0, i7.SubjectExemptBooleanPipe, []), (_l()(), i0.ɵeld(6, 0, null, null, 3, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEmployeeComponent_1)), i0.ɵdid(8, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"], ngIfElse: [1, \"ngIfElse\"] }, null), (_l()(), i0.ɵand(0, [[\"NoData\", 2]], null, 0, null, View_AccountDetailsEmployeeComponent_17))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.employee; var currVal_1 = i0.ɵnov(_v, 9); _ck(_v, 8, 0, currVal_0, currVal_1); }, null); }\nexport function View_AccountDetailsEmployeeComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-account-details-employee\", [], null, null, null, View_AccountDetailsEmployeeComponent_0, RenderType_AccountDetailsEmployeeComponent)), i0.ɵdid(1, 114688, null, 0, i8.AccountDetailsEmployeeComponent, [i9.EntitySelectors], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar AccountDetailsEmployeeComponentNgFactory = i0.ɵccf(\"sp-account-details-employee\", i8.AccountDetailsEmployeeComponent, View_AccountDetailsEmployeeComponent_Host_0, { employee: \"employee\" }, {}, []);\nexport { AccountDetailsEmployeeComponentNgFactory as AccountDetailsEmployeeComponentNgFactory };\n","<div class=\"card\">\r\n  <div class=\"card-body\" *ngIf=\"employee; else NoData\">\r\n\r\n    <!-- Employee Personal Table -->\r\n    <table class=\"table table-sm\">\r\n      <tbody>\r\n        <tr class=\"table-subheader text-center\">\r\n          <th colspan=\"2\" class=\"pb-3\">Employee - {{getFullName(employee)}}</th>\r\n        </tr>\r\n        <tr>\r\n          <th>First Name</th>\r\n          <td>{{ employee.firstName }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Last Name</th>\r\n          <td>{{ employee.lastName }}</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>Employee Account Set Up</th>\r\n          <td class=\"text-capitalize\">{{ employee.canContact | yesno }}</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>Email</th>\r\n          <td>{{ employee.email }}</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>Phone</th>\r\n          <td>{{ employee.phone | phone }}</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>Status</th>\r\n          <td class=\"text-capitalize\">{{ getHireStatus() }}</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>Hire Date</th>\r\n          <td>{{ employee.hireDate | date:\"MM/dd/yyyy\" }}</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>Birth Date</th>\r\n          <td>{{ employee.birthDate | date:\"MM/dd/yyyy\" }}</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>Sex</th>\r\n          <td class=\"text-capitalize\">{{ employee.sex }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Employee Address Table -->\r\n    <table class=\"table table-sm\">\r\n      <tbody>\r\n        <tr class=\"table-subheader\">\r\n          <th colspan=\"2\">{{ employee.firstName }}'s Addresses</th>\r\n        </tr>\r\n\r\n        <tr *ngIf=\"addresses$ | async as addrs\">\r\n          <sp-account-details-address [address]=\"addrs.workAddress\" [type]=\"Work\"></sp-account-details-address>\r\n          <sp-account-details-address [address]=\"addrs.homeAddress\" [type]=\"Home\"></sp-account-details-address>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Employee Payment Table -->\r\n    <table class=\"table table-sm\">\r\n      <tbody>\r\n        <tr class=\"table-subheader\">\r\n          <th colspan=\"2\">{{ employee.firstName }}'s Payment Details</th>\r\n        </tr>\r\n        <tr>\r\n          <th>Employee Type</th>\r\n          <td class=\"text-capitalize\">{{ employee.employeeType }}</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>Pay Type</th>\r\n          <td class=\"text-capitalize\">{{ employee.payType }}</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>Pay Rate</th>\r\n          <td>{{ employee.payRate | currency }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Overtime Rate</th>\r\n          <td>{{ employee.overtimeRate }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Pay Frequency</th>\r\n          <td class=\"text-capitalize\">{{ employee.payFrequency }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Employee Payment Account Table -->\r\n    <div *ngIf=\"paymentMethod$ | async as pm; else noPaymentAccount\">\r\n      <table class=\"table table-sm\">\r\n        <tbody>\r\n          <tr class=\"table-subheader\">\r\n            <th colspan=\"2\">{{ employee.firstName }}'s Payment Accounts</th>\r\n          </tr>\r\n\r\n          <tr *ngIf=\"pm.split1IsActive\">\r\n            <td class=\"multi-row\" colspan=\"2\">\r\n              <span class=\"font-weight-bold\">1st Account</span>\r\n              <ul>\r\n                  <li>\r\n                    <span class=\"col1\">Account Type:</span>\r\n                    <span class=\"col2 text-capitalize\">{{pm.split1AccountType}}</span>\r\n                  </li>\r\n                  <li>\r\n                    <span class=\"col1\">Split:</span>\r\n                    <span class=\"col2\">{{ getSplitAmount(pm, pm.split1Value) }}</span>\r\n                  </li>\r\n                  <ng-template [ngIf]=\"pm.split1AccountType !== PrintedCheck\">\r\n                    <li>\r\n                      <span class=\"col1\">Bank Name:</span>\r\n                      <span class=\"col2\">{{pm.split1AccountBankName || 'missing or invalid'}}</span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"col1\">Routing Number:</span>\r\n                      <span class=\"col2\">{{pm.split1AccountRn}}</span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"col1\">Account Number:</span>\r\n                      <span class=\"col2\">{{pm.split1AccountNumber}}</span>\r\n                    </li>\r\n                </ng-template>\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr *ngIf=\"pm.split2IsActive\">\r\n            <td class=\"multi-row\" colspan=\"2\">\r\n              <span class=\"font-weight-bold\">2nd Account</span>\r\n              <ul>\r\n                  <li>\r\n                    <span class=\"col1\">Account Type:</span>\r\n                    <span class=\"col2 text-capitalize\">{{pm.split2AccountType}}</span>\r\n                  </li>\r\n                  <li>\r\n                    <span class=\"col1\">Split:</span>\r\n                    <span class=\"col2\">{{ getSplitAmount(pm, pm.split2Value) }}</span>\r\n                  </li>\r\n                  <ng-template [ngIf]=\"pm.split2AccountType !== PrintedCheck\">\r\n                    <li>\r\n                      <span class=\"col1\">Bank Name:</span>\r\n                      <span class=\"col2\">{{pm.split2AccountBankName || 'missing or invalid'}}</span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"col1\">Routing Number:</span>\r\n                      <span class=\"col2\">{{pm.split2AccountRn}}</span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"col1\">Account Number:</span>\r\n                      <span class=\"col2\">{{pm.split2AccountNumber}}</span>\r\n                    </li>\r\n                </ng-template>\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td class=\"multi-row\" colspan=\"2\">\r\n              <span *ngIf=\"pm.split1IsActive || pm.split2IsActive\" class=\"font-weight-bold\">Balance</span>\r\n              <ul>\r\n                  <li>\r\n                    <span class=\"col1\">Account Type:</span>\r\n                    <span class=\"col2 text-capitalize\">{{pm.defaultAccountType}}</span>\r\n                  </li>\r\n                  <ng-template [ngIf]=\"pm.defaultAccountType !== PrintedCheck\">\r\n                    <li>\r\n                      <span class=\"col1\">Bank Name:</span>\r\n                      <span class=\"col2\">{{pm.defaultAccountBankName || 'missing or invalid'}}</span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"col1\">Routing Number:</span>\r\n                      <span class=\"col2\">{{pm.defaultAccountRn}}</span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"col1\">Account Number:</span>\r\n                      <span class=\"col2\">{{pm.defaultAccountNumber}}</span>\r\n                    </li>\r\n                </ng-template>\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <ng-template #noPaymentAccount>\r\n      <table class=\"table table-sm\">\r\n        <tbody>\r\n          <tr class=\"table-subheader\">\r\n            <th>{{ employee.firstName }}'s Payment Accounts</th>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span *ngIf=\"employee.isTerminated; else missingPaymentAccount\">\r\n                No payment accounts because {{ employee.firstName }} is terminated.\r\n              </span>\r\n              <ng-template #missingPaymentAccount>\r\n                Payment account(s) missing\r\n              </ng-template>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </ng-template>\r\n\r\n    <!-- Employee Tax Table -->\r\n    <table class=\"table table-sm\">\r\n      <tbody>\r\n        <tr class=\"table-subheader\">\r\n          <th colspan=\"2\">{{ employee.firstName }}'s Taxes</th>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>SSN</th>\r\n          <td>{{ employee.ssn | ssn}}</td>\r\n        </tr>\r\n\r\n        <ng-container *ngFor=\"let tax of taxes$ | async\">\r\n          <tr>\r\n            <td class=\"multi-row\" colspan=\"2\">\r\n              <span class=\"font-weight-bold\">{{ tax.name }} Tax</span>\r\n              <ul>\r\n                <li>\r\n                    <span class=\"col1\">Tax Status:</span>\r\n                    <span class=\"col2 text-capitalize\">{{ tax.isExempt | subjectexempt }}</span>\r\n                  </li>\r\n                  <li *ngIf=\"tax.isExempt && tax.exemptReasonCode != null && tax.exemptReasonCode !== ''\">Exempt reason:\r\n                    <strong>{{getExemptReason(tax.exemptReasonCode) }}</strong>\r\n                  </li>\r\n                  <li *ngIf=\"tax.filingStatus && tax.filingStatus !== ''\">\r\n                    <span class=\"col1\">Filing Status:</span>\r\n                    <span class=\"col2\">{{getFilingStatus(tax.filingStatus) }}</span>\r\n                  </li>\r\n                  <ng-container *ngIf=\"tax.withholdingAllowance\">\r\n                    <li>\r\n                      <span class=\"col1\">Allowances:</span>\r\n                      <span class=\"col2\">{{tax.withholdingAllowance }}</span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"col1\">Extra Withholding:</span>\r\n                      <span class=\"col2\">{{tax.extraWithholding}}</span>\r\n                    </li>\r\n                </ng-container>\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <ng-template #NoData>\r\n    <div class=\"card-body\">\r\n      No Employee Data Provided\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { User } from '@model';\r\n\r\n@Component({\r\n  selector: 'sp-account-details-user',\r\n  templateUrl: './account-details-user.component.html'\r\n})\r\nexport class AccountDetailsUserComponent implements OnInit {\r\n  @Input()\r\n  user: User;\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/pipes/phone.pipe\";\nimport * as i2 from \"./account-details-user.component\";\nvar styles_AccountDetailsUserComponent = [];\nvar RenderType_AccountDetailsUserComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AccountDetailsUserComponent, data: {} });\nexport { RenderType_AccountDetailsUserComponent as RenderType_AccountDetailsUserComponent };\nexport function View_AccountDetailsUserComponent_0(_l) { return i0.ɵvid(0, [i0.ɵpid(0, i1.PhonePipe, []), (_l()(), i0.ɵeld(1, 0, null, null, 29, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 28, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 27, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 26, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"First Name\"])), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(9, null, [\"\", \"\"])), (_l()(), i0.ɵeld(10, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Last Name\"])), (_l()(), i0.ɵeld(13, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(14, null, [\"\", \"\"])), (_l()(), i0.ɵeld(15, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(16, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Username\"])), (_l()(), i0.ɵeld(18, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(19, null, [\"\", \"\"])), (_l()(), i0.ɵeld(20, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(21, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Email\"])), (_l()(), i0.ɵeld(23, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(24, null, [\"\", \"\"])), (_l()(), i0.ɵeld(25, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(26, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Phone\"])), (_l()(), i0.ɵeld(28, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(29, null, [\"\", \"\"])), i0.ɵppd(30, 1)], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = ((_co.user == null) ? null : _co.user.firstName); _ck(_v, 9, 0, currVal_0); var currVal_1 = ((_co.user == null) ? null : _co.user.lastName); _ck(_v, 14, 0, currVal_1); var currVal_2 = ((_co.user == null) ? null : _co.user.username); _ck(_v, 19, 0, currVal_2); var currVal_3 = ((_co.user == null) ? null : _co.user.email); _ck(_v, 24, 0, currVal_3); var currVal_4 = i0.ɵunv(_v, 29, 0, _ck(_v, 30, 0, i0.ɵnov(_v, 0), ((_co.user == null) ? null : _co.user.phone))); _ck(_v, 29, 0, currVal_4); }); }\nexport function View_AccountDetailsUserComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-account-details-user\", [], null, null, null, View_AccountDetailsUserComponent_0, RenderType_AccountDetailsUserComponent)), i0.ɵdid(1, 114688, null, 0, i2.AccountDetailsUserComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar AccountDetailsUserComponentNgFactory = i0.ɵccf(\"sp-account-details-user\", i2.AccountDetailsUserComponent, View_AccountDetailsUserComponent_Host_0, { user: \"user\" }, {}, []);\nexport { AccountDetailsUserComponentNgFactory as AccountDetailsUserComponentNgFactory };\n","<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <table class=\"table table-sm\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>First Name</th>\r\n                    <td>{{user?.firstName}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Last Name</th>\r\n                    <td>{{user?.lastName}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Username</th>\r\n                    <td>{{user?.username}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Email</th>\r\n                    <td>{{user?.email}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Phone</th>\r\n                    <td>{{user?.phone | phone}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Company, Address } from '@model';\r\nimport { EntitySelectors } from '@entity';\r\n\r\n@Component({\r\n  selector: 'sp-account-details-company',\r\n  templateUrl: './account-details-company.component.html'\r\n})\r\nexport class AccountDetailsCompanyComponent implements OnInit {\r\n  @Input() company: Company;\r\n  addresses: Observable<Address[]>;\r\n\r\n  constructor(private entitySelectors: EntitySelectors) {}\r\n\r\n  ngOnInit(): void {\r\n    this.addresses = this.entitySelectors.address.entities$.pipe(\r\n      map(ao =>\r\n        ao\r\n          .filter(a => a.companyId === this.company.id && !a.isHome)\r\n          .sort((a1, a2) => (a1.isMain === a2.isMain ? 0 : a1.isMain ? -1 : 1))\r\n      )\r\n    );\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./account-details-address.component.ngfactory\";\nimport * as i2 from \"./account-details-address.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../shared/pipes/yes-no.pipe\";\nimport * as i5 from \"./account-details-company.component\";\nimport * as i6 from \"../store/entity/entity-selectors\";\nvar styles_AccountDetailsCompanyComponent = [];\nvar RenderType_AccountDetailsCompanyComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AccountDetailsCompanyComponent, data: {} });\nexport { RenderType_AccountDetailsCompanyComponent as RenderType_AccountDetailsCompanyComponent };\nfunction View_AccountDetailsCompanyComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Doing Business As (DBA)\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.company.name; _ck(_v, 4, 0, currVal_0); }); }\nfunction View_AccountDetailsCompanyComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Company Type\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.company.companyType || \"missing\"); _ck(_v, 4, 0, currVal_0); }); }\nfunction View_AccountDetailsCompanyComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-account-details-address\", [], null, null, null, i1.View_AccountDetailsAddressComponent_0, i1.RenderType_AccountDetailsAddressComponent)), i0.ɵdid(1, 114688, null, 0, i2.AccountDetailsAddressComponent, [], { address: [0, \"address\"], isEmployee: [1, \"isEmployee\"] }, null)], function (_ck, _v) { var currVal_0 = _v.context.$implicit; var currVal_1 = false; _ck(_v, 1, 0, currVal_0, currVal_1); }, null); }\nfunction View_AccountDetailsCompanyComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 99, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 19, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 18, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"th\", [[\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"General\"])), (_l()(), i0.ɵeld(6, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Legal Name\"])), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(10, null, [\"\", \"\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsCompanyComponent_2)), i0.ɵdid(12, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(13, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(14, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Is Household\"])), (_l()(), i0.ɵeld(16, 0, null, null, 2, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(17, null, [\"\", \"\"])), i0.ɵppd(18, 1), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsCompanyComponent_3)), i0.ɵdid(20, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(21, 0, null, null, 8, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(22, 0, null, null, 7, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(23, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(24, 0, null, null, 1, \"th\", [[\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Locations\"])), (_l()(), i0.ɵeld(26, 0, null, null, 3, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 2, null, View_AccountDetailsCompanyComponent_4)), i0.ɵdid(28, 278528, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), i0.ɵpid(131072, i3.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵeld(30, 0, null, null, 24, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(31, 0, null, null, 23, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(32, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(33, 0, null, null, 1, \"th\", [[\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Bank Account\"])), (_l()(), i0.ɵeld(35, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(36, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Bank Name\"])), (_l()(), i0.ɵeld(38, 0, null, null, 1, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(39, null, [\"\", \"\"])), (_l()(), i0.ɵeld(40, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(41, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Bank Routing Number\"])), (_l()(), i0.ɵeld(43, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(44, null, [\"\", \"\"])), (_l()(), i0.ɵeld(45, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(46, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Bank Account Number\"])), (_l()(), i0.ɵeld(48, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(49, null, [\"\", \"\"])), (_l()(), i0.ɵeld(50, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(51, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Bank Account Type\"])), (_l()(), i0.ɵeld(53, 0, null, null, 1, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(54, null, [\"\", \"\"])), (_l()(), i0.ɵeld(55, 0, null, null, 27, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(56, 0, null, null, 26, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(57, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(58, 0, null, null, 1, \"th\", [[\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Payroll\"])), (_l()(), i0.ɵeld(60, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(61, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Payroll Frequency\"])), (_l()(), i0.ɵeld(63, 0, null, null, 1, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(64, null, [\"\", \"\"])), (_l()(), i0.ɵeld(65, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(66, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Period Start Date\"])), (_l()(), i0.ɵeld(68, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(69, null, [\"\", \"\"])), i0.ɵppd(70, 2), (_l()(), i0.ɵeld(71, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(72, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Period End Date\"])), (_l()(), i0.ɵeld(74, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(75, null, [\"\", \"\"])), i0.ɵppd(76, 2), (_l()(), i0.ɵeld(77, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(78, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"First Check Date\"])), (_l()(), i0.ɵeld(80, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(81, null, [\"\", \"\"])), i0.ɵppd(82, 2), (_l()(), i0.ɵeld(83, 0, null, null, 16, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(84, 0, null, null, 15, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(85, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(86, 0, null, null, 1, \"th\", [[\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Enrollment Details\"])), (_l()(), i0.ɵeld(88, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(89, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Enrollment Start Date\"])), (_l()(), i0.ɵeld(91, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(92, null, [\"\", \"\"])), i0.ɵppd(93, 2), (_l()(), i0.ɵeld(94, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(95, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Enrollment Close Date\"])), (_l()(), i0.ɵeld(97, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(98, null, [\"\", \"\"])), i0.ɵppd(99, 2)], function (_ck, _v) { var _co = _v.component; var currVal_1 = !_co.company.isHousehold; _ck(_v, 12, 0, currVal_1); var currVal_3 = !_co.company.isHousehold; _ck(_v, 20, 0, currVal_3); var currVal_4 = i0.ɵunv(_v, 28, 0, i0.ɵnov(_v, 29).transform(_co.addresses)); _ck(_v, 28, 0, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.company.legalName; _ck(_v, 10, 0, currVal_0); var currVal_2 = i0.ɵunv(_v, 17, 0, _ck(_v, 18, 0, i0.ɵnov(_v.parent, 0), _co.company.isHousehold)); _ck(_v, 17, 0, currVal_2); var currVal_5 = (_co.company.bankName || \"missing or invalid\"); _ck(_v, 39, 0, currVal_5); var currVal_6 = _co.company.bankAccountRn; _ck(_v, 44, 0, currVal_6); var currVal_7 = _co.company.bankAccountNumber; _ck(_v, 49, 0, currVal_7); var currVal_8 = _co.company.bankAccountType; _ck(_v, 54, 0, currVal_8); var currVal_9 = (_co.company.payrollFrequency || \"Not Provided\"); _ck(_v, 64, 0, currVal_9); var currVal_10 = i0.ɵunv(_v, 69, 0, _ck(_v, 70, 0, i0.ɵnov(_v.parent, 1), _co.company.periodStartDate, \"MM/dd/yyyy\")); _ck(_v, 69, 0, currVal_10); var currVal_11 = i0.ɵunv(_v, 75, 0, _ck(_v, 76, 0, i0.ɵnov(_v.parent, 1), _co.company.periodEndDate, \"MM/dd/yyyy\")); _ck(_v, 75, 0, currVal_11); var currVal_12 = i0.ɵunv(_v, 81, 0, _ck(_v, 82, 0, i0.ɵnov(_v.parent, 1), _co.company.firstCheckDate, \"MM/dd/yyyy\")); _ck(_v, 81, 0, currVal_12); var currVal_13 = i0.ɵunv(_v, 92, 0, _ck(_v, 93, 0, i0.ɵnov(_v.parent, 1), _co.company.enrollmentStartDate, \"MM/dd/yyyy\")); _ck(_v, 92, 0, currVal_13); var currVal_14 = i0.ɵunv(_v, 98, 0, _ck(_v, 99, 0, i0.ɵnov(_v.parent, 1), _co.company.enrollmentCloseDate, \"full\")); _ck(_v, 98, 0, currVal_14); }); }\nfunction View_AccountDetailsCompanyComponent_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"card-body\"], [\"div\", \"\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" No Company Data Provided \"]))], null, null); }\nexport function View_AccountDetailsCompanyComponent_0(_l) { return i0.ɵvid(0, [i0.ɵpid(0, i4.YesNoBooleanPipe, []), i0.ɵpid(0, i3.DatePipe, [i0.LOCALE_ID]), (_l()(), i0.ɵeld(2, 0, null, null, 3, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsCompanyComponent_1)), i0.ɵdid(4, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"], ngIfElse: [1, \"ngIfElse\"] }, null), (_l()(), i0.ɵand(0, [[\"NoData\", 2]], null, 0, null, View_AccountDetailsCompanyComponent_5))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.company; var currVal_1 = i0.ɵnov(_v, 5); _ck(_v, 4, 0, currVal_0, currVal_1); }, null); }\nexport function View_AccountDetailsCompanyComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-account-details-company\", [], null, null, null, View_AccountDetailsCompanyComponent_0, RenderType_AccountDetailsCompanyComponent)), i0.ɵdid(1, 114688, null, 0, i5.AccountDetailsCompanyComponent, [i6.EntitySelectors], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar AccountDetailsCompanyComponentNgFactory = i0.ɵccf(\"sp-account-details-company\", i5.AccountDetailsCompanyComponent, View_AccountDetailsCompanyComponent_Host_0, { company: \"company\" }, {}, []);\nexport { AccountDetailsCompanyComponentNgFactory as AccountDetailsCompanyComponentNgFactory };\n","<div class=\"card\">\r\n  <div class=\"card-body\" *ngIf=\"company; else NoData\">\r\n\r\n    <!-- General Company Info-->\r\n    <table class=\"table table-sm\">\r\n      <tbody>\r\n        <tr class=\"table-subheader\">\r\n          <th colspan=\"2\">General</th>\r\n        </tr>\r\n        <tr>\r\n          <th>Legal Name</th>\r\n          <td>{{ company.legalName }}</td>\r\n        </tr>\r\n        <tr *ngIf=\"!company.isHousehold\">\r\n          <th>Doing Business As (DBA)</th>\r\n          <td>{{ company.name }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Is Household</th>\r\n          <td class=\"text-capitalize\">{{ company.isHousehold | yesno }}</td>\r\n        </tr>\r\n        <tr *ngIf=\"!company.isHousehold\">\r\n          <th>Company Type</th>\r\n          <td class=\"text-capitalize\">{{ company.companyType || 'missing' }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Addresses -->\r\n    <table class=\"table table-sm\">\r\n      <tbody>\r\n        <tr class=\"table-subheader\">\r\n          <th colspan=\"2\">Locations</th>\r\n        </tr>\r\n        <tr>\r\n          <sp-account-details-address *ngFor=\"let address of addresses | async\" [address]=\"address\" [isEmployee]=\"false\"></sp-account-details-address>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Bank Account -->\r\n    <table class=\"table table-sm\">\r\n      <tbody>\r\n        <tr class=\"table-subheader\">\r\n          <th colspan=\"2\">Bank Account</th>\r\n        </tr>\r\n        <tr>\r\n          <th>Bank Name</th>\r\n          <td class=\"text-capitalize\">{{ company.bankName || 'missing or invalid' }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Bank Routing Number</th>\r\n          <td>{{ company.bankAccountRn }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Bank Account Number</th>\r\n          <td>{{ company.bankAccountNumber }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Bank Account Type</th>\r\n          <td class=\"text-capitalize\">{{ company.bankAccountType }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Payroll  -->\r\n    <table class=\"table table-sm\">\r\n      <tbody>\r\n        <tr class=\"table-subheader\">\r\n          <th colspan=\"2\">Payroll</th>\r\n        </tr>\r\n        <tr>\r\n          <th>Payroll Frequency</th>\r\n          <td class=\"text-capitalize\">{{ company.payrollFrequency || 'Not Provided' }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Period Start Date</th>\r\n          <td>{{ company.periodStartDate | date:\"MM/dd/yyyy\" }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Period End Date</th>\r\n          <td>{{ company.periodEndDate | date:\"MM/dd/yyyy\" }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>First Check Date</th>\r\n          <td>{{ company.firstCheckDate | date:\"MM/dd/yyyy\" }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Enrollment Stats -->\r\n    <table class=\"table table-sm\">\r\n      <tbody>\r\n        <tr class=\"table-subheader\">\r\n          <th colspan=\"2\">Enrollment Details</th>\r\n        </tr>\r\n        <tr>\r\n          <th>Enrollment Start Date</th>\r\n          <td>{{ company.enrollmentStartDate | date:\"MM/dd/yyyy\" }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Enrollment Close Date</th>\r\n          <td>{{ company.enrollmentCloseDate | date:'full' }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n  </div>\r\n  <ng-template #NoData>\r\n    <div div class=\"card-body\">\r\n      No Company Data Provided\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { Company, HouseholdFilers, HouseholdFilersStatus, FeinStatus, CompanyTax, REASON_SERVICE_UNAVAILABLE } from '@model';\r\nimport { getHouseholdFilerDisplayVm, HouseholdFilerDisplayVm } from '@utils/household-filer-utils';\r\n\r\n@Component({\r\n  selector: 'sp-account-details-fed-tax',\r\n  templateUrl: './account-details-fed-tax.component.html'\r\n})\r\nexport class AccountDetailsFedTaxComponent implements OnInit {\r\n  @Input() company: Company;\r\n  @Input() householdFilers: HouseholdFilers;\r\n  @Input() companyFedTaxes: CompanyTax[];\r\n\r\n  householdFilersVm: HouseholdFilerDisplayVm;\r\n  HouseholdFilersStatus = HouseholdFilersStatus;\r\n\r\n  verificationStatus: string;\r\n\r\n  ngOnInit(): void {\r\n    this.householdFilersVm = getHouseholdFilerDisplayVm(this.householdFilers);\r\n\r\n    this.verificationStatus =\r\n      this.company.feinStatus === FeinStatus.Verified\r\n        ? '(Verified)'\r\n        : this.company.legalNameVerificationSkipReason === REASON_SERVICE_UNAVAILABLE\r\n          ? '(Verification skipped due to Service Unavailable)'\r\n          : '(Not verified)';\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../shared/pipes/household-filer-status.pipe\";\nimport * as i3 from \"../shared/pipes/ssn.pipe\";\nimport * as i4 from \"../shared/pipes/subject-exempt.pipe\";\nimport * as i5 from \"./account-details-fed-tax.component\";\nvar styles_AccountDetailsFedTaxComponent = [];\nvar RenderType_AccountDetailsFedTaxComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AccountDetailsFedTaxComponent, data: {} });\nexport { RenderType_AccountDetailsFedTaxComponent as RenderType_AccountDetailsFedTaxComponent };\nfunction View_AccountDetailsFedTaxComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Spouse\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"])), (_l()(), i0.ɵeld(5, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Spouse SSN\"])), (_l()(), i0.ɵeld(8, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(9, null, [\"\", \"\"])), i0.ɵppd(10, 1)], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.householdFilersVm.spouseName; _ck(_v, 4, 0, currVal_0); var currVal_1 = i0.ɵunv(_v, 9, 0, _ck(_v, 10, 0, i0.ɵnov(_v.parent.parent, 1), _co.householdFilersVm.spouseSsn)); _ck(_v, 9, 0, currVal_1); }); }\nfunction View_AccountDetailsFedTaxComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Filing Status\"])), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"])), i0.ɵppd(5, 1), (_l()(), i0.ɵeld(6, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Primary Filer\"])), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(10, null, [\"\", \"\"])), (_l()(), i0.ɵeld(11, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(12, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Primary Filer SSN\"])), (_l()(), i0.ɵeld(14, 0, null, null, 2, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(15, null, [\"\", \"\"])), i0.ɵppd(16, 1), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsFedTaxComponent_2)), i0.ɵdid(18, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_3 = (((_co.householdFilers == null) ? null : _co.householdFilers.filingStatus) === _co.HouseholdFilersStatus.Joint); _ck(_v, 18, 0, currVal_3); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 4, 0, _ck(_v, 5, 0, i0.ɵnov(_v.parent, 0), _co.householdFilersVm.filingStatus)); _ck(_v, 4, 0, currVal_0); var currVal_1 = _co.householdFilersVm.primaryName; _ck(_v, 10, 0, currVal_1); var currVal_2 = i0.ɵunv(_v, 15, 0, _ck(_v, 16, 0, i0.ɵnov(_v.parent, 1), _co.householdFilersVm.primarySsn)); _ck(_v, 15, 0, currVal_2); }); }\nfunction View_AccountDetailsFedTaxComponent_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.parent.context.$implicit.ein; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_AccountDetailsFedTaxComponent_6(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"APPLIED FOR\"]))], null, null); }\nfunction View_AccountDetailsFedTaxComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 6, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"EIN:\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsFedTaxComponent_5)), i0.ɵdid(4, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsFedTaxComponent_6)), i0.ɵdid(6, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var currVal_0 = !_v.parent.context.$implicit.appliedForEin; _ck(_v, 4, 0, currVal_0); var currVal_1 = _v.parent.context.$implicit.appliedForEin; _ck(_v, 6, 0, currVal_1); }, null); }\nfunction View_AccountDetailsFedTaxComponent_7(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Rate:\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"col2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.rate; _ck(_v, 4, 0, currVal_0); }); }\nfunction View_AccountDetailsFedTaxComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 15, null, null, null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 14, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 13, \"td\", [[\"class\", \"multi-row\"], [\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"font-weight-bold\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \" Tax\"])), (_l()(), i0.ɵeld(5, 0, null, null, 10, \"ul\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 5, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 1, \"span\", [[\"class\", \"col1\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Filing Status:\"])), (_l()(), i0.ɵeld(9, 0, null, null, 2, \"span\", [[\"class\", \"col2 text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(10, null, [\"\", \"\"])), i0.ɵppd(11, 1), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsFedTaxComponent_4)), i0.ɵdid(13, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsFedTaxComponent_7)), i0.ɵdid(15, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var currVal_2 = ((_v.context.$implicit.ein && (_v.context.$implicit.ein !== \"\")) || _v.context.$implicit.appliedForEin); _ck(_v, 13, 0, currVal_2); var currVal_3 = (_v.context.$implicit.rateType === \"Variable\"); _ck(_v, 15, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = _v.context.$implicit.name; _ck(_v, 4, 0, currVal_0); var currVal_1 = i0.ɵunv(_v, 10, 0, _ck(_v, 11, 0, i0.ɵnov(_v.parent, 2), _v.context.$implicit.isExempt)); _ck(_v, 10, 0, currVal_1); }); }\nexport function View_AccountDetailsFedTaxComponent_0(_l) { return i0.ɵvid(0, [i0.ɵpid(0, i2.HouseholdFilerStatusPipe, []), i0.ɵpid(0, i3.SsnPipe, []), i0.ɵpid(0, i4.SubjectExemptBooleanPipe, []), (_l()(), i0.ɵeld(3, 0, null, null, 15, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 14, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 13, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 12, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"th\", [[\"class\", \"text-capitalize\"], [\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Federal Taxes\"])), (_l()(), i0.ɵeld(10, 0, null, null, 4, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Federal Tax ID Number\"])), (_l()(), i0.ɵeld(13, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(14, null, [\"\", \" \", \"\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsFedTaxComponent_1)), i0.ɵdid(16, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsFedTaxComponent_3)), i0.ɵdid(18, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.company.isHousehold; _ck(_v, 16, 0, currVal_2); var currVal_3 = _co.companyFedTaxes; _ck(_v, 18, 0, currVal_3); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.company.fein || \"Not Provided\"); var currVal_1 = _co.verificationStatus; _ck(_v, 14, 0, currVal_0, currVal_1); }); }\nexport function View_AccountDetailsFedTaxComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-account-details-fed-tax\", [], null, null, null, View_AccountDetailsFedTaxComponent_0, RenderType_AccountDetailsFedTaxComponent)), i0.ɵdid(1, 114688, null, 0, i5.AccountDetailsFedTaxComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar AccountDetailsFedTaxComponentNgFactory = i0.ɵccf(\"sp-account-details-fed-tax\", i5.AccountDetailsFedTaxComponent, View_AccountDetailsFedTaxComponent_Host_0, { company: \"company\", householdFilers: \"householdFilers\", companyFedTaxes: \"companyFedTaxes\" }, {}, []);\nexport { AccountDetailsFedTaxComponentNgFactory as AccountDetailsFedTaxComponentNgFactory };\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <table class=\"table table-sm\">\r\n      <tbody>\r\n        <tr class=\"table-subheader\">\r\n          <th colspan=\"2\" class=\"text-capitalize\">Federal Taxes</th>\r\n        </tr>\r\n        <tr>\r\n          <th>Federal Tax ID Number</th>\r\n          <td>{{ company.fein || 'Not Provided' }} {{ verificationStatus }}</td>\r\n        </tr>\r\n\r\n        <!-- Household filers -->\r\n        <ng-template [ngIf]=\"company.isHousehold\">\r\n          <tr>\r\n            <th>Filing Status</th>\r\n            <td>{{ householdFilersVm.filingStatus | householdFilerStatus }}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Primary Filer</th>\r\n            <td>{{ householdFilersVm.primaryName }}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Primary Filer SSN</th>\r\n            <td>{{ householdFilersVm.primarySsn | ssn }}</td>\r\n          </tr>\r\n          <ng-template [ngIf]=\"householdFilers?.filingStatus === HouseholdFilersStatus.Joint\">\r\n            <tr>\r\n              <th>Spouse</th>\r\n              <td>{{ householdFilersVm.spouseName }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Spouse SSN</th>\r\n              <td>{{ householdFilersVm.spouseSsn | ssn }}</td>\r\n            </tr>\r\n          </ng-template>\r\n        </ng-template>\r\n\r\n        <ng-container *ngFor=\"let tax of companyFedTaxes\">\r\n          <tr>\r\n            <td class=\"multi-row\" colspan=\"2\">\r\n              <span class=\"font-weight-bold\">{{ tax.name }} Tax</span>\r\n              <ul>\r\n                <li>\r\n                    <span class=\"col1\">Filing Status:</span>\r\n                    <span class=\"col2 text-capitalize\">{{ tax.isExempt | subjectexempt }}</span>\r\n                  </li>\r\n                  <li *ngIf=\"(tax.ein && tax.ein !== '') || tax.appliedForEin\">\r\n                    <span class=\"col1\">EIN:</span>\r\n                    <span class=\"col2\" *ngIf=\"!tax.appliedForEin\">{{ tax.ein }}</span>\r\n                    <span class=\"col2\" *ngIf=\"tax.appliedForEin\">APPLIED FOR</span>\r\n                  </li>\r\n                  <li *ngIf=\"tax.rateType === 'Variable'\">\r\n                    <span class=\"col1\">Rate:</span>\r\n                    <span class=\"col2\">{{ tax.rate }}</span>\r\n                  </li>\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nimport { Earning } from '@app/model';\r\nimport { EarningService, CompanyEarningService } from '@app/store/entity';\r\n\r\ninterface EarningsListModel {\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  earningTypeName: string;\r\n  earningTaxType: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'sp-account-details-earnings-list',\r\n  templateUrl: './account-details-earnings-list.component.html'\r\n})\r\nexport class AccountDetailsEarningsListComponent implements OnInit {\r\n  vm$: Observable<EarningsListModel[]>;\r\n\r\n  constructor(\r\n    private earningService: EarningService,\r\n    private companyEarningsService: CompanyEarningService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.vm$ = combineLatest(\r\n      this.earningService.earnings$,\r\n      this.companyEarningsService.companyEarnings$\r\n    ).pipe(\r\n      first(),\r\n      map(([earnings, companyEarnings]) => {\r\n        return companyEarnings\r\n          .filter(ce => !ce.isRemoved)\r\n          .map(ce => {\r\n            const ern = earnings.find(e => e.code === ce.earningCode) || {} as Earning;\r\n            let taxType = ern.earningTaxType || '';\r\n            taxType = taxType.toLowerCase().trim() === 'none' ? '' : '(' + ern.earningTaxType + ')';\r\n            return {\r\n              code: ce.earningCode,\r\n              name: ce.name,\r\n              description: ce.description,\r\n              earningTypeName: ern.earningTypeName || '',\r\n              earningTaxType: taxType\r\n            };\r\n          })\r\n          .sort(this.sortEarnings);\r\n      })\r\n    );\r\n  }\r\n\r\n  private sortEarnings(a: EarningsListModel, b: EarningsListModel): number {\r\n    const typeRes = a.earningTypeName.toLowerCase().localeCompare(b.earningTypeName.toLowerCase());\r\n    const nameRes = a.name.toLowerCase().localeCompare(b.name.toLowerCase());\r\n    const desRes = a.description.toLowerCase().localeCompare(b.description.toLowerCase());\r\n\r\n    return typeRes === 0 ? (desRes === 0 ? nameRes : desRes) : typeRes;\r\n  }\r\n}\r\n","import { OnInit } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, first } from 'rxjs/operators';\nimport { EarningService, CompanyEarningService } from '@app/store/entity';\nvar AccountDetailsEarningsListComponent = /** @class */ (function () {\n    function AccountDetailsEarningsListComponent(earningService, companyEarningsService) {\n        this.earningService = earningService;\n        this.companyEarningsService = companyEarningsService;\n    }\n    AccountDetailsEarningsListComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.vm$ = combineLatest(this.earningService.earnings$, this.companyEarningsService.companyEarnings$).pipe(first(), map(function (_a) {\n            var earnings = _a[0], companyEarnings = _a[1];\n            return companyEarnings\n                .filter(function (ce) { return !ce.isRemoved; })\n                .map(function (ce) {\n                var ern = earnings.find(function (e) { return e.code === ce.earningCode; }) || {};\n                var taxType = ern.earningTaxType || '';\n                taxType = taxType.toLowerCase().trim() === 'none' ? '' : '(' + ern.earningTaxType + ')';\n                return {\n                    code: ce.earningCode,\n                    name: ce.name,\n                    description: ce.description,\n                    earningTypeName: ern.earningTypeName || '',\n                    earningTaxType: taxType\n                };\n            })\n                .sort(_this.sortEarnings);\n        }));\n    };\n    AccountDetailsEarningsListComponent.prototype.sortEarnings = function (a, b) {\n        var typeRes = a.earningTypeName.toLowerCase().localeCompare(b.earningTypeName.toLowerCase());\n        var nameRes = a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n        var desRes = a.description.toLowerCase().localeCompare(b.description.toLowerCase());\n        return typeRes === 0 ? (desRes === 0 ? nameRes : desRes) : typeRes;\n    };\n    return AccountDetailsEarningsListComponent;\n}());\nexport { AccountDetailsEarningsListComponent };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./account-details-earnings-list.component\";\nimport * as i3 from \"../store/entity/entity-services/earning.service\";\nimport * as i4 from \"../store/entity/entity-services/company-earning.service\";\nvar styles_AccountDetailsEarningsListComponent = [];\nvar RenderType_AccountDetailsEarningsListComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AccountDetailsEarningsListComponent, data: {} });\nexport { RenderType_AccountDetailsEarningsListComponent as RenderType_AccountDetailsEarningsListComponent };\nfunction View_AccountDetailsEarningsListComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 6, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(2, null, [\"\", \" \", \"\"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"])), (_l()(), i0.ɵeld(5, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(6, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.context.$implicit.earningTypeName; var currVal_1 = _v.context.$implicit.earningTaxType; _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_2 = _v.context.$implicit.description; _ck(_v, 4, 0, currVal_2); var currVal_3 = _v.context.$implicit.name; _ck(_v, 6, 0, currVal_3); }); }\nfunction View_AccountDetailsEarningsListComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 12, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 11, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 10, \"table\", [[\"class\", \"table table-m\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 9, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 6, \"tr\", [[\"class\", \"table-subheader\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Earning Type\"])), (_l()(), i0.ɵeld(7, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Name\"])), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Abbreviation\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEarningsListComponent_3)), i0.ɵdid(12, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var currVal_0 = _v.parent.context.ngIf; _ck(_v, 12, 0, currVal_0); }, null); }\nfunction View_AccountDetailsEarningsListComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, null, null, null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AccountDetailsEarningsListComponent_2)), i0.ɵdid(2, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var currVal_0 = (_v.context.ngIf.length > 0); _ck(_v, 2, 0, currVal_0); }, null); }\nexport function View_AccountDetailsEarningsListComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 2, null, View_AccountDetailsEarningsListComponent_1)), i0.ɵdid(1, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i0.ɵpid(131072, i1.AsyncPipe, [i0.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 1, 0, i0.ɵnov(_v, 2).transform(_co.vm$)); _ck(_v, 1, 0, currVal_0); }, null); }\nexport function View_AccountDetailsEarningsListComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-account-details-earnings-list\", [], null, null, null, View_AccountDetailsEarningsListComponent_0, RenderType_AccountDetailsEarningsListComponent)), i0.ɵdid(1, 114688, null, 0, i2.AccountDetailsEarningsListComponent, [i3.EarningService, i4.CompanyEarningService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar AccountDetailsEarningsListComponentNgFactory = i0.ɵccf(\"sp-account-details-earnings-list\", i2.AccountDetailsEarningsListComponent, View_AccountDetailsEarningsListComponent_Host_0, {}, {}, []);\nexport { AccountDetailsEarningsListComponentNgFactory as AccountDetailsEarningsListComponentNgFactory };\n","<ng-container *ngIf=\"vm$ | async as vm\">\r\n  <div class=\"card\" *ngIf=\"vm.length > 0\">\r\n    <div class=\"card-body\">\r\n      <table class=\"table table-m\">\r\n        <tr class=\"table-subheader\">\r\n          <th>Earning Type</th>\r\n          <th>Name</th>\r\n          <th>Abbreviation</th>\r\n        </tr>\r\n        <tr *ngFor=\"let earning of vm\">\r\n          <td>{{earning.earningTypeName}} {{earning.earningTaxType}}</td>\r\n          <td>{{earning.description}}</td>\r\n          <td>{{earning.name}}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { Company } from '@model';\r\n\r\n@Component({\r\n  selector: 'sp-account-details-employee-setup',\r\n  templateUrl: './account-details-employee-setup.component.html'\r\n})\r\nexport class AccountDetailsEmployeeSetupComponent {\r\n  @Input() company: Company;\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/pipes/yes-no.pipe\";\nimport * as i2 from \"./account-details-employee-setup.component\";\nvar styles_AccountDetailsEmployeeSetupComponent = [];\nvar RenderType_AccountDetailsEmployeeSetupComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AccountDetailsEmployeeSetupComponent, data: {} });\nexport { RenderType_AccountDetailsEmployeeSetupComponent as RenderType_AccountDetailsEmployeeSetupComponent };\nexport function View_AccountDetailsEmployeeSetupComponent_0(_l) { return i0.ɵvid(0, [i0.ɵpid(0, i1.YesNoBooleanPipe, []), (_l()(), i0.ɵeld(1, 0, null, null, 18, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 17, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 16, \"table\", [[\"class\", \"table table-sm\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 15, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 2, \"tr\", [[\"class\", \"table-subheader text-center\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"th\", [[\"colspan\", \"2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Employee Setup\"])), (_l()(), i0.ɵeld(8, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Has Prior Payroll\"])), (_l()(), i0.ɵeld(11, 0, null, null, 2, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(12, null, [\"\", \"\"])), i0.ɵppd(13, 1), (_l()(), i0.ɵeld(14, 0, null, null, 5, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(15, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Need Deductions Setup\"])), (_l()(), i0.ɵeld(17, 0, null, null, 2, \"td\", [[\"class\", \"text-capitalize\"]], null, null, null, null, null)), (_l()(), i0.ɵted(18, null, [\"\", \"\"])), i0.ɵppd(19, 1)], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 12, 0, _ck(_v, 13, 0, i0.ɵnov(_v, 0), _co.company.hasPriorPayroll)); _ck(_v, 12, 0, currVal_0); var currVal_1 = i0.ɵunv(_v, 18, 0, _ck(_v, 19, 0, i0.ɵnov(_v, 0), _co.company.needDeductionSetup)); _ck(_v, 18, 0, currVal_1); }); }\nexport function View_AccountDetailsEmployeeSetupComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-account-details-employee-setup\", [], null, null, null, View_AccountDetailsEmployeeSetupComponent_0, RenderType_AccountDetailsEmployeeSetupComponent)), i0.ɵdid(1, 49152, null, 0, i2.AccountDetailsEmployeeSetupComponent, [], null, null)], null, null); }\nvar AccountDetailsEmployeeSetupComponentNgFactory = i0.ɵccf(\"sp-account-details-employee-setup\", i2.AccountDetailsEmployeeSetupComponent, View_AccountDetailsEmployeeSetupComponent_Host_0, { company: \"company\" }, {}, []);\nexport { AccountDetailsEmployeeSetupComponentNgFactory as AccountDetailsEmployeeSetupComponentNgFactory };\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <table class=\"table table-sm\">\r\n      <tbody>\r\n        <tr class=\"table-subheader text-center\">\r\n          <th colspan=\"2\">Employee Setup</th>\r\n        </tr>\r\n        <tr>\r\n          <th>Has Prior Payroll</th>\r\n          <td class=\"text-capitalize\">{{ company.hasPriorPayroll | yesno }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Need Deductions Setup</th>\r\n          <td class=\"text-capitalize\">{{ company.needDeductionSetup | yesno }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./account-details-companyStateTax.component.ngfactory\";\nimport * as i2 from \"./account-details-companyStateTax.component\";\nimport * as i3 from \"./account-details-employee.component.ngfactory\";\nimport * as i4 from \"./account-details-employee.component\";\nimport * as i5 from \"../store/entity/entity-selectors\";\nimport * as i6 from \"./account-details-user.component.ngfactory\";\nimport * as i7 from \"./account-details-user.component\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"./account-details-company.component.ngfactory\";\nimport * as i10 from \"./account-details-company.component\";\nimport * as i11 from \"./account-details-fed-tax.component.ngfactory\";\nimport * as i12 from \"./account-details-fed-tax.component\";\nimport * as i13 from \"./account-details-earnings-list.component.ngfactory\";\nimport * as i14 from \"./account-details-earnings-list.component\";\nimport * as i15 from \"../store/entity/entity-services/earning.service\";\nimport * as i16 from \"../store/entity/entity-services/company-earning.service\";\nimport * as i17 from \"./account-details-employee-setup.component.ngfactory\";\nimport * as i18 from \"./account-details-employee-setup.component\";\nimport * as i19 from \"../shared/pipes/company-kind.pipe\";\nimport * as i20 from \"./account-details-container.component\";\nimport * as i21 from \"../store/session/session.service\";\nimport * as i22 from \"../store/entity/entity-services/tax-location.service\";\nvar styles_AccountDetailsContainerComponent = [];\nvar RenderType_AccountDetailsContainerComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AccountDetailsContainerComponent, data: {} });\nexport { RenderType_AccountDetailsContainerComponent as RenderType_AccountDetailsContainerComponent };\nfunction View_AccountDetailsContainerComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-account-details-companystatetax\", [], null, null, null, i1.View_AccountDetailsCompanyStateTaxComponent_0, i1.RenderType_AccountDetailsCompanyStateTaxComponent)), i0.ɵdid(1, 114688, null, 0, i2.AccountDetailsCompanyStateTaxComponent, [], { state: [0, \"state\"], stateTaxes: [1, \"stateTaxes\"] }, null)], function (_ck, _v) { var currVal_0 = _v.context.$implicit.state; var currVal_1 = _v.context.$implicit.taxes; _ck(_v, 1, 0, currVal_0, currVal_1); }, null); }\nfunction View_AccountDetailsContainerComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"h3\", [[\"class\", \"mt-3 mb-3 text-center\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Additional Earnings\"]))], null, null); }\nfunction View_AccountDetailsContainerComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-account-details-employee\", [], null, null, null, i3.View_AccountDetailsEmployeeComponent_0, i3.RenderType_AccountDetailsEmployeeComponent)), i0.ɵdid(1, 114688, null, 0, i4.AccountDetailsEmployeeComponent, [i5.EntitySelectors], { employee: [0, \"employee\"] }, null)], function (_ck, _v) { var currVal_0 = _v.context.$implicit; _ck(_v, 1, 0, currVal_0); }, null); }\nfunction View_AccountDetailsContainerComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 32, \"div\", [[\"class\", \"standard static-nav d-flex flex-column\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"h3\", [[\"class\", \"mt-3 mb-3 text-center\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Your User Information\"])), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"sp-account-details-user\", [], null, null, null, i6.View_AccountDetailsUserComponent_0, i6.RenderType_AccountDetailsUserComponent)), i0.ɵdid(4, 114688, null, 0, i7.AccountDetailsUserComponent, [], { user: [0, \"user\"] }, null), i0.ɵpid(131072, i8.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵeld(6, 0, null, null, 2, \"h3\", [[\"class\", \"mt-3 mb-3 text-center\"]], null, null, null, null, null)), (_l()(), i0.ɵted(7, null, [\"\", \" Overview\"])), i0.ɵppd(8, 1), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"sp-account-details-company\", [], null, null, null, i9.View_AccountDetailsCompanyComponent_0, i9.RenderType_AccountDetailsCompanyComponent)), i0.ɵdid(10, 114688, null, 0, i10.AccountDetailsCompanyComponent, [i5.EntitySelectors], { company: [0, \"company\"] }, null), (_l()(), i0.ɵeld(11, 0, null, null, 2, \"h3\", [[\"class\", \"mt-3 mb-3 text-center\"]], null, null, null, null, null)), (_l()(), i0.ɵted(12, null, [\"\", \" Employer Taxes\"])), i0.ɵppd(13, 1), (_l()(), i0.ɵeld(14, 0, null, null, 3, \"sp-account-details-fed-tax\", [], null, null, null, i11.View_AccountDetailsFedTaxComponent_0, i11.RenderType_AccountDetailsFedTaxComponent)), i0.ɵdid(15, 114688, null, 0, i12.AccountDetailsFedTaxComponent, [], { company: [0, \"company\"], householdFilers: [1, \"householdFilers\"], companyFedTaxes: [2, \"companyFedTaxes\"] }, null), i0.ɵpid(131072, i8.AsyncPipe, [i0.ChangeDetectorRef]), i0.ɵpid(131072, i8.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵand(16777216, null, null, 2, null, View_AccountDetailsContainerComponent_2)), i0.ɵdid(19, 278528, null, 0, i8.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), i0.ɵpid(131072, i8.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵand(16777216, null, null, 2, null, View_AccountDetailsContainerComponent_3)), i0.ɵdid(22, 16384, null, 0, i8.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i0.ɵpid(131072, i8.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵeld(24, 0, null, null, 1, \"sp-account-details-earnings-list\", [], null, null, null, i13.View_AccountDetailsEarningsListComponent_0, i13.RenderType_AccountDetailsEarningsListComponent)), i0.ɵdid(25, 114688, null, 0, i14.AccountDetailsEarningsListComponent, [i15.EarningService, i16.CompanyEarningService], null, null), (_l()(), i0.ɵeld(26, 0, null, null, 1, \"h3\", [[\"class\", \"mt-3 mb-3 text-center\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Employees \"])), (_l()(), i0.ɵeld(28, 0, null, null, 1, \"sp-account-details-employee-setup\", [], null, null, null, i17.View_AccountDetailsEmployeeSetupComponent_0, i17.RenderType_AccountDetailsEmployeeSetupComponent)), i0.ɵdid(29, 49152, null, 0, i18.AccountDetailsEmployeeSetupComponent, [], { company: [0, \"company\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 2, null, View_AccountDetailsContainerComponent_4)), i0.ɵdid(31, 278528, null, 0, i8.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), i0.ɵpid(131072, i8.AsyncPipe, [i0.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 4, 0, i0.ɵnov(_v, 5).transform(_co.user$)); _ck(_v, 4, 0, currVal_0); var currVal_2 = _v.context.ngIf; _ck(_v, 10, 0, currVal_2); var currVal_4 = _v.context.ngIf; var currVal_5 = i0.ɵunv(_v, 15, 1, i0.ɵnov(_v, 16).transform(_co.householdFilers$)); var currVal_6 = i0.ɵunv(_v, 15, 2, i0.ɵnov(_v, 17).transform(_co.companyFedTaxes$)); _ck(_v, 15, 0, currVal_4, currVal_5, currVal_6); var currVal_7 = i0.ɵunv(_v, 19, 0, i0.ɵnov(_v, 20).transform(_co.companyStateTaxes$)); _ck(_v, 19, 0, currVal_7); var currVal_8 = i0.ɵunv(_v, 22, 0, i0.ɵnov(_v, 23).transform(_co.hasAdditionalEarning$)); _ck(_v, 22, 0, currVal_8); _ck(_v, 25, 0); var currVal_9 = _v.context.ngIf; _ck(_v, 29, 0, currVal_9); var currVal_10 = i0.ɵunv(_v, 31, 0, i0.ɵnov(_v, 32).transform(_co.employees$)); _ck(_v, 31, 0, currVal_10); }, function (_ck, _v) { var currVal_1 = i0.ɵunv(_v, 7, 0, _ck(_v, 8, 0, i0.ɵnov(_v.parent, 0), _v.context.ngIf)); _ck(_v, 7, 0, currVal_1); var currVal_3 = i0.ɵunv(_v, 12, 0, _ck(_v, 13, 0, i0.ɵnov(_v.parent, 0), _v.context.ngIf)); _ck(_v, 12, 0, currVal_3); }); }\nfunction View_AccountDetailsContainerComponent_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(-1, null, [\" No company loaded\\n\"]))], null, null); }\nexport function View_AccountDetailsContainerComponent_0(_l) { return i0.ɵvid(0, [i0.ɵpid(0, i19.CompanyKindPipe, []), (_l()(), i0.ɵand(16777216, null, null, 2, null, View_AccountDetailsContainerComponent_1)), i0.ɵdid(2, 16384, null, 0, i8.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"], ngIfElse: [1, \"ngIfElse\"] }, null), i0.ɵpid(131072, i8.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵand(0, [[\"noCompany\", 2]], null, 0, null, View_AccountDetailsContainerComponent_5))], function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 2, 0, i0.ɵnov(_v, 3).transform(_co.company$)); var currVal_1 = i0.ɵnov(_v, 4); _ck(_v, 2, 0, currVal_0, currVal_1); }, null); }\nexport function View_AccountDetailsContainerComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-account-details-container\", [], null, null, null, View_AccountDetailsContainerComponent_0, RenderType_AccountDetailsContainerComponent)), i0.ɵdid(1, 114688, null, 0, i20.AccountDetailsContainerComponent, [i5.EntitySelectors, i21.SessionService, i22.TaxLocationService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar AccountDetailsContainerComponentNgFactory = i0.ɵccf(\"sp-account-details-container\", i20.AccountDetailsContainerComponent, View_AccountDetailsContainerComponent_Host_0, {}, {}, []);\nexport { AccountDetailsContainerComponentNgFactory as AccountDetailsContainerComponentNgFactory };\n","<div *ngIf=\"company$ | async as company; else noCompany\" class=\"standard static-nav d-flex flex-column\">\r\n  <h3 class=\"mt-3 mb-3 text-center\">Your User Information</h3>\r\n  <sp-account-details-user [user]=\"user$ | async\"></sp-account-details-user>\r\n\r\n  <h3 class=\"mt-3 mb-3 text-center\">{{ company | companyKind }} Overview</h3>\r\n  <sp-account-details-company [company]=\"company\"></sp-account-details-company>\r\n\r\n  <h3 class=\"mt-3 mb-3 text-center\">{{ company | companyKind }} Employer Taxes</h3>\r\n  <sp-account-details-fed-tax [company]=\"company\"\r\n                              [householdFilers]=\"householdFilers$ | async\"\r\n                              [companyFedTaxes]=\"companyFedTaxes$ | async\">\r\n  </sp-account-details-fed-tax>\r\n\r\n  <sp-account-details-companystatetax *ngFor='let companyStateTax of companyStateTaxes$ | async' [state]=\"companyStateTax.state\" [stateTaxes]=\"companyStateTax.taxes\"></sp-account-details-companystatetax>\r\n\r\n  <h3 *ngIf=\"hasAdditionalEarning$ | async\" class=\"mt-3 mb-3 text-center\">Additional Earnings</h3>\r\n  <sp-account-details-earnings-list></sp-account-details-earnings-list>\r\n\r\n  <h3 class=\"mt-3 mb-3 text-center\">Employees </h3>\r\n  <sp-account-details-employee-setup [company]=\"company\"></sp-account-details-employee-setup>\r\n  <sp-account-details-employee *ngFor='let employee of employees$ | async' [employee]=\"employee\"></sp-account-details-employee>\r\n</div>\r\n<ng-template #noCompany>\r\n  No company loaded\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { EntitySelectors, TaxLocationService } from '@entity';\r\nimport * as Model from '@model';\r\nimport { TaxTypeCode } from '@model';\r\nimport { SessionService } from '@session';\r\n\r\n@Component({\r\n  selector: 'sp-account-details-container',\r\n  templateUrl: './account-details-container.component.html'\r\n})\r\nexport class AccountDetailsContainerComponent implements OnInit {\r\n  company$: Observable<Model.Company>;\r\n  companyFedTaxes$: Observable<Model.CompanyTax[]>;\r\n  companyStateTaxes$: Observable<{ state: string, taxes: Model.CompanyTax[] }[]>;\r\n  documents$: Observable<Model.Document[]>;\r\n  employees$: Observable<Model.Employee[]>;\r\n  employeePaymentMethods$: Observable<Model.EmployeePaymentMethod[]>;\r\n  envelopes$: Observable<Model.Envelope[]>;\r\n  envelopesSigners$: Observable<Model.EnvelopeSigner[]>;\r\n  hasAdditionalEarning$: Observable<boolean>;\r\n  householdFilers$: Observable<Model.HouseholdFilers>;\r\n  user$: Observable<Model.User>;\r\n  userFullName$: Observable<string>;\r\n\r\n  constructor(\r\n    private entitySelectors: EntitySelectors,\r\n    private sessionService: SessionService,\r\n    private taxLocationService: TaxLocationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    window.scrollTo(0, 0);\r\n\r\n    this.company$ = this.sessionService.currentCompany$;\r\n    this.user$ = this.sessionService.currentUser$;\r\n\r\n    this.companyFedTaxes$ = this.entitySelectors.companyTax.entities$.pipe(\r\n      liveOnly,\r\n      map(cTax => cTax.filter(t => t.taxTypeCode === TaxTypeCode.Federal))\r\n    );\r\n\r\n    this.companyStateTaxes$ = combineLatest(\r\n      this.entitySelectors.companyTax.entities$.pipe(liveOnly),\r\n      this.taxLocationService.companyTaxStates$,\r\n    ).pipe(\r\n      map(([cTaxes, companyStates]) => {\r\n        const taxesByState = companyStates.map(s =>\r\n          ({\r\n            state: s,\r\n            taxes: cTaxes.filter(t => t.stateCode === s)\r\n          }));\r\n\r\n        return taxesByState;\r\n      }));\r\n    this.documents$ = this.entitySelectors.document.entities$.pipe(liveOnly);\r\n    this.employees$ = this.entitySelectors.employee.entities$.pipe(liveOnly);\r\n    this.employeePaymentMethods$ = this.entitySelectors.employeePaymentMethod.entities$.pipe(liveOnly);\r\n    this.envelopes$ = this.entitySelectors.envelope.entities$.pipe(liveOnly);\r\n    this.envelopesSigners$ = this.entitySelectors.envelopeSigner.entities$.pipe(liveOnly);\r\n\r\n    this.householdFilers$ =\r\n      combineLatest(\r\n        this.sessionService.currentCompanyId$,\r\n        this.entitySelectors.householdFilers.entities$\r\n      ).pipe(\r\n        // Just the one record belonging to the current company (there should only be one anyway)\r\n        map(([companyId, filersCollection]) =>\r\n          filersCollection.find(f => f.companyId === companyId))\r\n      );\r\n\r\n    this.hasAdditionalEarning$ = this.entitySelectors.companyEarning.entities$.pipe(\r\n      liveOnly,\r\n      map(e => e.length > 0)\r\n    );\r\n  }\r\n}\r\n\r\n/** Keep just the first available, \"live\" records (those which do not have isRemoved:true) */\r\nfunction liveOnly<T extends { isRemoved: boolean }>(source: Observable<T[]>): Observable<T[]> {\r\n  return source.pipe(map(entities => entities.filter(e => e.isRemoved !== true)));\r\n}\r\n","import { OnInit } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EntitySelectors, TaxLocationService } from '@entity';\nimport { TaxTypeCode } from '@model';\nimport { SessionService } from '@session';\nvar AccountDetailsContainerComponent = /** @class */ (function () {\n    function AccountDetailsContainerComponent(entitySelectors, sessionService, taxLocationService) {\n        this.entitySelectors = entitySelectors;\n        this.sessionService = sessionService;\n        this.taxLocationService = taxLocationService;\n    }\n    AccountDetailsContainerComponent.prototype.ngOnInit = function () {\n        window.scrollTo(0, 0);\n        this.company$ = this.sessionService.currentCompany$;\n        this.user$ = this.sessionService.currentUser$;\n        this.companyFedTaxes$ = this.entitySelectors.companyTax.entities$.pipe(liveOnly, map(function (cTax) { return cTax.filter(function (t) { return t.taxTypeCode === TaxTypeCode.Federal; }); }));\n        this.companyStateTaxes$ = combineLatest(this.entitySelectors.companyTax.entities$.pipe(liveOnly), this.taxLocationService.companyTaxStates$).pipe(map(function (_a) {\n            var cTaxes = _a[0], companyStates = _a[1];\n            var taxesByState = companyStates.map(function (s) {\n                return ({\n                    state: s,\n                    taxes: cTaxes.filter(function (t) { return t.stateCode === s; })\n                });\n            });\n            return taxesByState;\n        }));\n        this.documents$ = this.entitySelectors.document.entities$.pipe(liveOnly);\n        this.employees$ = this.entitySelectors.employee.entities$.pipe(liveOnly);\n        this.employeePaymentMethods$ = this.entitySelectors.employeePaymentMethod.entities$.pipe(liveOnly);\n        this.envelopes$ = this.entitySelectors.envelope.entities$.pipe(liveOnly);\n        this.envelopesSigners$ = this.entitySelectors.envelopeSigner.entities$.pipe(liveOnly);\n        this.householdFilers$ =\n            combineLatest(this.sessionService.currentCompanyId$, this.entitySelectors.householdFilers.entities$).pipe(\n            // Just the one record belonging to the current company (there should only be one anyway)\n            map(function (_a) {\n                var companyId = _a[0], filersCollection = _a[1];\n                return filersCollection.find(function (f) { return f.companyId === companyId; });\n            }));\n        this.hasAdditionalEarning$ = this.entitySelectors.companyEarning.entities$.pipe(liveOnly, map(function (e) { return e.length > 0; }));\n    };\n    return AccountDetailsContainerComponent;\n}());\nexport { AccountDetailsContainerComponent };\n/** Keep just the first available, \"live\" records (those which do not have isRemoved:true) */\nfunction liveOnly(source) {\n    return source.pipe(map(function (entities) { return entities.filter(function (e) { return e.isRemoved !== true; }); }));\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { changeItemFactory as cif } from '@utils';\nimport { CompanyEarning } from '@model';\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\nimport { CurrentCompanyEntityCollectionService } from './current-company-entity-collection-service';\nimport { environment } from '@environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./company-entity-helper.service\";\nvar ENTITY_COMPANY_EARNING = 'CompanyEarning';\nvar CompanyEarningService = /** @class */ (function (_super) {\n    __extends(CompanyEarningService, _super);\n    function CompanyEarningService(helper) {\n        var _this = _super.call(this, ENTITY_COMPANY_EARNING, helper) || this;\n        _this.helper = helper;\n        /**\n         * Company Earnings\n         */\n        _this.companyEarnings$ = _this.entities$;\n        return _this;\n    }\n    /**\n     * Create a new CompanyEarning from a earning master.\n     * The id is empty because will save with upsert.\n     */\n    CompanyEarningService.prototype.createFromEarning = function (earning) {\n        if (!earning) {\n            throw new Error('earning is null');\n        }\n        return this.create(new CompanyEarning(earning));\n    };\n    /**\n     * Multi-entity save of CompanyEarning with adds, updates and deletes\n     * @param companyEarning Array of earnings to add, update, or delete.\n     * Updates are items with an id, to delete set isRemoved to true\n     * Adds are items without an id; will generate that id here.\n     * @returns Terminating observable of ChangeSet that emits when server responds\n     */\n    CompanyEarningService.prototype.save = function (earnings) {\n        var _this = this;\n        // Cannot use ChangeSetOp.Upsert because server does not support it.\n        // Separate non-deletes into updates (have id) and adds (no id)\n        var updates = earnings.filter(function (d) { return d.id; });\n        // Identity new earnings by missing id and generate their ids before adding\n        var adds = earnings\n            .filter(function (d) { return d.isRemoved !== true && !d.id; })\n            .map(function (d) {\n            d.id = _this.helper.generateId();\n            return d;\n        });\n        var changes = [\n            cif.add(ENTITY_COMPANY_EARNING, adds),\n            cif.update(ENTITY_COMPANY_EARNING, updates)\n        ];\n        var changeSet = { changes: changes };\n        return this.saveEntities(changeSet, environment.apiRoot + '/save/companyearning');\n    };\n    CompanyEarningService.ngInjectableDef = i0.defineInjectable({ factory: function CompanyEarningService_Factory() { return new CompanyEarningService(i0.inject(i1.CompanyEntityHelperService)); }, token: CompanyEarningService, providedIn: \"root\" });\n    return CompanyEarningService;\n}(CurrentCompanyEntityCollectionService));\nexport { CompanyEarningService };\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ChangeSet } from 'ngrx-data';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { changeItemFactory as cif } from '@utils';\r\nimport { CompanyEarning, Earning } from '@model';\r\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\r\nimport { CurrentCompanyEntityCollectionService } from './current-company-entity-collection-service';\r\nimport { environment } from '@environment';\r\n\r\nconst ENTITY_COMPANY_EARNING = 'CompanyEarning';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class CompanyEarningService extends CurrentCompanyEntityCollectionService<CompanyEarning> {\r\n  constructor(protected helper: CompanyEntityHelperService) {\r\n    super(ENTITY_COMPANY_EARNING, helper);\r\n  }\r\n  /**\r\n   * Company Earnings\r\n   */\r\n  readonly companyEarnings$ = this.entities$;\r\n\r\n  /**\r\n   * Create a new CompanyEarning from a earning master.\r\n   * The id is empty because will save with upsert.\r\n   */\r\n  createFromEarning(earning: Earning): CompanyEarning {\r\n    if (!earning) {\r\n      throw new Error('earning is null');\r\n    }\r\n    return this.create(new CompanyEarning(earning));\r\n  }\r\n\r\n  /**\r\n   * Multi-entity save of CompanyEarning with adds, updates and deletes\r\n   * @param companyEarning Array of earnings to add, update, or delete.\r\n   * Updates are items with an id, to delete set isRemoved to true\r\n   * Adds are items without an id; will generate that id here.\r\n   * @returns Terminating observable of ChangeSet that emits when server responds\r\n   */\r\n  save(earnings: CompanyEarning[]): Observable<ChangeSet> {\r\n    // Cannot use ChangeSetOp.Upsert because server does not support it.\r\n    // Separate non-deletes into updates (have id) and adds (no id)\r\n    const updates = earnings.filter(d => d.id);\r\n\r\n    // Identity new earnings by missing id and generate their ids before adding\r\n    const adds = earnings\r\n    .filter(d => d.isRemoved !== true && !d.id)\r\n    .map(d => {\r\n      d.id = this.helper.generateId();\r\n      return d;\r\n    });\r\n\r\n    const changes = [\r\n      cif.add(ENTITY_COMPANY_EARNING, adds),\r\n      cif.update(ENTITY_COMPANY_EARNING, updates)\r\n    ];\r\n    const changeSet: ChangeSet<CompanyEarning> = { changes };\r\n\r\n    return this.saveEntities(changeSet, environment.apiRoot + '/save/companyearning');\r\n  }\r\n}\r\n"],"sourceRoot":""}