{"version":3,"sources":["webpack:///./src/app/processing/processing.component.html","webpack:///./src/app/processing/processing.component.ts","webpack:///./src/app/processing/processing.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGAYI,wHAA8B,KAC5B,qHAAG,2IAA8D,MAEjE,6IAAuB,uHACoB,sjBAAoB,IAAqB,0EACpF,MAEA,8uBAAuD,GAAzC,6XAAwC,sBAAtD,YAAuD,EAAzC,SAAwC;kMAnB5D,2KAAoD,KAElD,0NAAoG,KAClG,sHAAI,kGAAqB,MACzB,gKAA0C,qFAAQ,MAGpD,6IAAuB,KACrB,qHAAG,iMAEH,MAEA,6YAA8B,IAWhC,8nBAA6C,GAA1B,sLAAyB,KAC5C,s1BAAoB,iDAZb,mBAAwB,mBAA7B,aAA8B,EAAzB,SAAwB,GAWZ,sJAAyB,aAA5C,aAA6C,EAA1B,SAAyB,GAC5C,aAAoB;;;;;;;;;;;;;;;;ACxBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuF;AAC9C;AACA;AACiD;AAC5B;AACb;AACR;AACc;AAC4B;AAEnF,qDAAqD;AACrD,IAAM,SAAS,GAAG,IAAI,CAAC;AACvB;IAcE,6BACU,cAA8B,EAC9B,sBAA8C,EAC9C,MAAc,EACd,WAAwB;QAHxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAV1B,SAAI,GAAG,IAAI,6CAAO,EAAE,CAAC;QAC7B,qBAAgB,GAAG,KAAK,CAAC;IAUrB,CAAC;IAEL,sCAAQ,GAAR;QAAA,iBA+BC;QA9BC,+FAA+F;QAC/F,IAAM,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,EAAE,CAAC;QAE7E,iCAAiC;QACjC,sFAAsF;QACtF,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CACzD,iBAAO;YACL,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,EAAE,CAAC;YAC5B,2CAA2C;YAC3C,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,oDAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC9C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qDAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,oDAAa,CAAC,UAAU,CAAC,CAAC,CAAC;oBAChD,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC/B,CAAC;gBACD,KAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;YAC7C,CAAC;QACH,CAAC,CAAC,CAAC;QAEL,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,IAAI,CAC/D,0DAAG,CAAC,YAAE;YACJ,IAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,EAAX,CAAW,CAAC,CAAC;YAClD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,KAAK,MAAM,CAAC,EAAE,EAA1B,CAA0B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC3E,CAAC,CAAC,CACH,CAAC;IAEJ,CAAC;IACD,6CAAe,GAAf;QAAA,iBAEC;QADG,UAAU,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,EAA5C,CAA4C,CAAC,CAAC;IACnE,CAAC;IACO,0CAAY,GAApB;QAAA,iBAoBC;QAnBC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAC5C,wCAAwC;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,kDAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,IAAI;QAC1C,iFAAiF;QACjF,gEAAS,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,EAA5C,CAA4C,CAAC,CAChE,CAAC,SAAS,CACT,iBAAO;YACL,0DAA0D;YAC1D,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,oDAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzD,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;gBAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qDAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,oDAAa,CAAC,UAAU,CAAC,CAAC,CAAC;gBAClE,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;gBAC7B,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,KAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1B,CAAC;QACH,CAAC,CACF,CAAC;IAEJ,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IACH,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FD;AAAA;AAAA;AAAA;AAAuD;AAIM;AAG7D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,MAAM;QACjB,SAAS,EAAE,yEAAmB;KAC/B;CAAC,CAAC;AAEL;IAAA;IAK+B,CAAC;IAAD,uBAAC;AAAD,CAAC","file":"19.b18e947d91c12c13f1bc.js","sourcesContent":["<div class=\"standard d-flex flex-column static-nav\">\r\n\r\n  <div class=\"alert alert-secondary d-flex flex-column justify-content-center align-items-center p-4\">\r\n    <h1>Preparing for Payroll</h1>\r\n    <i class=\"material-icons alert-icon mt-2\">thumb_up</i>\r\n  </div>\r\n\r\n  <div class=\"mt-3 mb-3\">\r\n    <p>\r\n      We are currently processing your payroll application. You'll be able to start payroll and pay your employees soon.\r\n    </p>\r\n\r\n    <div *ngIf=\"migrationStopped\">\r\n      <p>You will receive an email when your payroll account is ready. </p>\r\n\r\n      <p class=\"font-italic\">\r\n        To learn the status of your application, <sp-contact-support></sp-contact-support>.\r\n      </p>\r\n\r\n      <sp-view-docs [envelopeId]=\"signedEnvelopeId$ | async\"></sp-view-docs>\r\n\r\n    </div>\r\n  </div>\r\n  <sp-documents-list [docs]=\"wetdocs$ | async\"></sp-documents-list>\r\n  <sp-ancillary-modal></sp-ancillary-modal>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CompanyService } from '@entity';\r\nimport { DocumentPackageService } from '@entity/entity-services/document-package.service';\r\nimport { BusyService, SubSink, WellKnownRoutes } from '@core';\r\nimport { AccountStatus, Document } from '@model';\r\nimport { Observable, timer } from 'rxjs';\r\nimport { concatMap, first, map } from 'rxjs/operators';\r\nimport { AncillaryModalComponent } from '@app/ancillary/ancillary-modal.component';\r\n\r\n/** Time (in ms) between polling for status change */\r\nconst pollDelay = 5000;\r\n@Component({\r\n  selector: 'sp-processing',\r\n  templateUrl: './processing.component.html'\r\n})\r\nexport class ProcessingComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  private companyId: string;\r\n  /** id of first completed, non-removed envelope with an embedded envelope signer (if exists) */\r\n  signedEnvelopeId$: Observable<string>;\r\n  private subs = new SubSink();\r\n  migrationStopped = false;\r\n  @ViewChild(AncillaryModalComponent)\r\n  ancillaryModal: AncillaryModalComponent;\r\n  wetdocs$: Observable<Document[]>;\r\n\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private documentPackageService: DocumentPackageService,\r\n    private router: Router,\r\n    private busyService: BusyService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // id of the first completed, non-removed envelope with an embedded envelope signer (if exists)\r\n    const signedEnvelopeId$ = this.documentPackageService.loadSignedEnvelopeId();\r\n\r\n    // If enrolled, leave immediately\r\n    // if not enrolled, define the signedEnvelopeId$ and let the template subscribe to it.\r\n    this.companyService.currentCompany$.pipe(first()).subscribe(\r\n      company => {\r\n        this.companyId = company.id;\r\n        // Leave this page immediately if enrolled.\r\n        if (company.status === AccountStatus.Enrolled) {\r\n          this.router.navigate([WellKnownRoutes.Enrolled]);\r\n        } else {\r\n          if (company.status === AccountStatus.Operations) {\r\n            this.migrationStopped = true;\r\n          }\r\n          this.signedEnvelopeId$ = signedEnvelopeId$;\r\n        }\r\n      });\r\n\r\n    if (!this.migrationStopped) {\r\n      this.startPolling();\r\n    }\r\n\r\n    this.wetdocs$ = this.documentPackageService.documentPackage$.pipe(\r\n      map(dp => {\r\n        const wetenv = dp.Envelope.find(e => e.isWetSign);\r\n        return wetenv ? dp.Document.filter(d => d.envelopeId === wetenv.id) : [];\r\n      })\r\n    );\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n      setTimeout(() => this.ancillaryModal.checkAncillaryResponse());\r\n  }\r\n  private startPolling() {\r\n    this.busyService.increment('Processing...');\r\n    // poll the server to get status updates\r\n    this.subs.sink = timer(5000, pollDelay).pipe(\r\n      // reload the company to get the latest status and trigger currentCompany$ update\r\n      concatMap(tick => this.companyService.getByKey(this.companyId))\r\n    ).subscribe(\r\n      company =>  {\r\n        // Leave this page immediately if status becomes enrolled.\r\n        if (company && company.status === AccountStatus.Enrolled) {\r\n          this.busyService.decrement();\r\n          this.router.navigate([WellKnownRoutes.Enrolled]);\r\n        } else if (company && company.status === AccountStatus.Operations) {\r\n          this.busyService.decrement();\r\n          this.migrationStopped = true;\r\n          this.subs.unsubscribe();\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.busyService.decrement();\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { AncillaryModule } from '@app/ancillary/ancillary.module';\r\n\r\nimport { ProcessingComponent } from './processing.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: ProcessingComponent\r\n  }];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, AncillaryModule, RouterModule.forChild(routes)],\r\n  exports: [ProcessingComponent],\r\n  declarations: [ProcessingComponent]\r\n})\r\nexport class ProcessingModule {}\r\n"],"sourceRoot":""}