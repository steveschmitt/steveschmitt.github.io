{"version":3,"sources":["webpack:///./src/app/shared/model.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/shared/model.component.ts.ModelComponent.html","webpack:///./src/app/shared/radio-group/radio-button.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/shared/radio-group/radio-button.component.html","webpack:///./src/app/deductions/company/company-deduction-editor.component.ts","webpack:///./src/app/deductions/company/company-deduction-editor.component.ts.pre-build-optimizer.js","webpack:///./src/app/deductions/company/company-deductions-container.component.ts","webpack:///./src/app/deductions/company/company-deduction-editor.service.ts","webpack:///./src/app/deductions/company/company-deduction-editor.service.ts.pre-build-optimizer.js","webpack:///./src/app/deductions/company/company-deductions.guard.ts","webpack:///./src/app/deductions/company/company-deductions.guard.ts.pre-build-optimizer.js","webpack:///./src/app/deductions/company/company-deductions-table.component.ts","webpack:///./src/app/deductions/company/company-deductions-table.component.ts.pre-build-optimizer.js","webpack:///./src/app/deductions/company/company-retirement.component.ts","webpack:///./src/app/deductions/company/company-retirement.component.ts.pre-build-optimizer.js","webpack:///./src/app/deductions/company/company-deductions.module.ts","webpack:///./src/app/deductions/company/deductions-catalog.component.ts","webpack:///./src/app/deductions/company/deductions-catalog.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/deductions/company/deductions-catalog.component.html","webpack:///./src/app/deductions/company/company-deductions-container.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/deductions/company/company-deductions-container.component.html","webpack:///./src/app/deductions/company/company-deduction-remove.component.ts","webpack:///./src/app/deductions/company/company-deduction-remove.component.ts.pre-build-optimizer.js","webpack:///./src/app/deductions/company/company-deduction-remove.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/deductions/company/company-deduction-remove.component.html","webpack:///./src/app/deductions/company/company-deductions-table.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/deductions/company/company-deductions-table.component.html","webpack:///./src/app/deductions/company/company-retirement.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/deductions/company/company-retirement.component.html","webpack:///./src/app/shared/amount-or-percent-value/amount-or-percent-value.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/shared/amount-or-percent-value/amount-or-percent-value.component.html","webpack:///./src/app/deductions/company/company-deduction-editor.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/deductions/company/company-deduction-editor.component.html","webpack:///./src/app/deductions/company/company-deductions.module.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/shared/radio-group/radio-group.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/shared/radio-group/radio-group.component.html","webpack:///./src/app/store/entity/entity-services/employee.service.ts.pre-build-optimizer.js","webpack:///./src/app/store/entity/entity-services/employee.service.ts"],"names":["__webpack_require__","d","__webpack_exports__","RenderType_ModelComponent","View_ModelComponent_0","_angular_core__WEBPACK_IMPORTED_MODULE_0__","encapsulation","styles","data","_l","RenderType_RadioButtonComponent","View_RadioButtonComponent_0","label","_v","en","$event","ad","_co","component","value","select","onFocus","onBlur","_ck","isSelected","hasFocus","name","disabled","HsaMatchType","DeductionViewModel","command","id","code","this","abbreviation","canChangeAbbreviation","canChangeName","hasHSAContributionQuestion","hasPreOrPostTaxQuestion","isHsaMatchAllMaxAmount","isHsaMatchMaxAmount","planTaxOptionCode","isPreTax","isPostTax","isNew","configureForCreate","configureForEdit","prototype","cmd","askPreOrPostTax","forcePostTax","forcePreTax","company_deduction_editor_component_CompanyDeductionEditorComponent","CompanyDeductionEditorComponent","editorService","logger","hostEl","route","router","vm","cancelSave","ngOnInit","_this","createVm","snapshot","params","setTimeout","nativeElement","scrollIntoView","canLeaveAfterSave","Object","of","save","pipe","map","endEdit","defineProperty","get","enumerable","configurable","codeType","isHsa","deduction","deductions","find","codeTypeId","error","navigate","app_core","CompanyDeductions","currentDeductionItem","create","edit","isDirty","canChangeDescription","htmlDescription","definition","updateDescription","taxMode","getDeductionWithTaxMode","done","cancel","delete","subscribe","_","cdi","trim","canBePreOrPostTax","companyDeductions","isRemoved","preCTid","getDeductionCodeTypeIdByTaxMode","preDed","createByCodeTypeId","push","postCTid","postDed","cd","description","codeGroupId","CompanyDeductionViewModel","catalog","companyDeductionsUrl","Employees","company_deductions_container_component_CompanyDeductionsContainerComponent","CompanyDeductionsContainerComponent","showTable","deductionCategories","onCatalogSelection","dt","selectedKey","key","shared_deductions","company_deduction_editor_service_CompanyDeductionEditorService","CompanyDeductionEditorService","deductionService","companyDeductionService","employeeDeductionService","employeeService","employeeDeductionsToDelete","_command","set","deductionPlanTaxOptionCode","model","PRETAX","POSTTAX","NOEEDEDUCT","createFromDeduction","item","setCode","namePrefix","abbreviationPrefix","proposal","proposeNameAndAbbreviation","companyDeductionItems","currentInEdit","updateCatalog","items","filter","index","notUnique","toString","foundName","foundAbbreviation","tid","found","t","Error","generateCode","MiscellaneousNoGoal","MiscellaneousWithGoal","slots_1","1","2","3","4","5","forEach","getCode","keys","it","companyDeductionItem","deleteSource","Subject","getDeductionsLinkedTo","first","isDeleted","next","asObservable","foundDeductionInstance","editCompanyDeductionItem","getCatchupDeduction","isCatchUp","createCatchUpFor","catchUpTid","getCorrespondingCatchUpPlanFor","catchUpDeduction","getEmployeesEnrolledInDeduction","employees$","entities$","eds$","combineLatest","_a","eds","e","ed1","employeeId","companyDeductionId","instanceCode","ready","deductions$","tap","cds","mapToItems","ed","toSave","viewModelToEntity","changes","reduce","a","b","concat","ret","purgeDeleted","deductionType","md","deductionCodeTypeId","retireAddon","ngInjectableDef","core","factory","deduction_service","company_deduction_service","employee_deduction_service","employee_service","token","providedIn","company_deductions_guard_CompanyDeductionsGuard","CompanyDeductionsGuard","service","canActivateChild","company_deductions_table_component_CompanyDeductionsTableComponent","CompanyDeductionsTableComponent","companyService","log","company$","currentCompany$","sort","localeCompare","getMenuLabel","di","isRetirement","affectedEmployees","doDelete","length","removeConfirmationModal","show","result","confirmDelete","company_retirement_component_CompanyRetirementComponent","CompanyRetirementComponent","RetirementPlans","RetirementPlanTypes","RetirementPlanApply","MatchTypes","EmployeeContributionModel","loadVm","plan","planType","Plan403B","IRA","SepIRA","vmToEntity","target","prev","buildIRATypeId","Plan401K","build401KTypeId","buildRetirementTypeId","saveRetirementsProperties","retirementDeduction","newRetirementType","baseDed","retirementTypeName","getPlanFrom","P401KTraditional","P401KSafeHarbor","P401KSimple","SimpleIRA","getPlanTypeFrom","defaultDescription","defaultAbbreviation","configureEditorForPlan","getDefaultPlanTypeForPlan","configureEditor","getDeduction","setDescriptionPlan","codeIRA_1","code401_1","CompanyDeductionsModule","deductions_catalog_component_DeductionsCatalogComponent","DeductionsCatalogComponent","deductionTypeSelected","getListOfDeductionTitles","titles","isHidden","order","selectType","emit","RenderType_DeductionsCatalogComponent","View_DeductionsCatalogComponent_4","parent","context","$implicit","View_DeductionsCatalogComponent_5","View_DeductionsCatalogComponent_3","common","ngIf","ngIfElse","enabled","View_DeductionsCatalogComponent_2","expanded","accordion_component_ngfactory","accordion_component","title","expandedChange","ngForOf","category","deductionTitles","View_DeductionsCatalogComponent_1","View_DeductionsCatalogComponent_0","RenderType_CompanyDeductionsContainerComponent","View_CompanyDeductionsContainerComponent_0","fesm5_router","CompanyDeductionsContainerComponentNgFactory","company_deduction_remove_component_CompanyDeductionRemoveComponent","CompanyDeductionRemoveComponent","modalService","obs","Observable","employeeList","test","deleteConfirmation","deductionName","source","from","modalRef","open","modalContent","then","res","close","reason","dismiss","RenderType_CompanyDeductionRemoveComponent","View_CompanyDeductionRemoveComponent_2","fullName","View_CompanyDeductionRemoveComponent_1","input_text_component_ngfactory","input_text_component","input_mask_catalog","model_component","autofocus","fesm5_forms","p0_0","update","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","isDeleteConfirmed","View_CompanyDeductionRemoveComponent_0","RenderType_CompanyDeductionsTableComponent","View_CompanyDeductionsTableComponent_1","View_CompanyDeductionsTableComponent_4","View_CompanyDeductionsTableComponent_5","View_CompanyDeductionsTableComponent_3","isCompleted","View_CompanyDeductionsTableComponent_2","createdDeductions","View_CompanyDeductionsTableComponent_0","company_kind_pipe","ng_bootstrap","transform","CompanyDeductionsTableComponentNgFactory","company_service","logger_service","RenderType_CompanyRetirementComponent","View_CompanyRetirementComponent_2","radio_group_component_ngfactory","radio_group_component","propertyName","tooltip","change","radioButtons","radio_button_component_ngfactory","radio_button_component","View_CompanyRetirementComponent_3","View_CompanyRetirementComponent_4","read_more_component_ngfactory","read_more_component","platform_browser","hideSeeLess","View_CompanyRetirementComponent_1","modelType","View_CompanyRetirementComponent_0","model_component_ngfactory","CompanyRetirementComponentNgFactory","ngrx_data","RenderType_AmountOrPercentValueComponent","View_AmountOrPercentValueComponent_1","setValue","getValue","maskType","blur","propertyNameValue","isAmountPropertyName","View_AmountOrPercentValueComponent_0","setIsAmount","undefined","RenderType_CompanyDeductionEditorComponent","View_CompanyDeductionEditorComponent_1","View_CompanyDeductionEditorComponent_3","View_CompanyDeductionEditorComponent_4","View_CompanyDeductionEditorComponent_2","View_CompanyDeductionEditorComponent_6","View_CompanyDeductionEditorComponent_8","amount_or_percent_value_component","hsaMatchPercent","View_CompanyDeductionEditorComponent_9","View_CompanyDeductionEditorComponent_7","NoMatch","Match","MatchAll","hsaContribution","View_CompanyDeductionEditorComponent_5","View_CompanyDeductionEditorComponent_10","View_CompanyDeductionEditorComponent_0","canConfirm","CompanyDeductionEditorComponentNgFactory","CompanyDeductionsModuleNgFactory","router_ngfactory","ng_bootstrap_ngfactory","angular2TextMask","shared_module","path","canDeactivate","page_leave_guard","children","root","RenderType_RadioGroupComponent","View_RadioGroupComponent_0","_angular_common__WEBPACK_IMPORTED_MODULE_1__","_validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_2__","_store_validation_validation_service__WEBPACK_IMPORTED_MODULE_3__","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","_radio_group_component__WEBPACK_IMPORTED_MODULE_5__","View_RadioGroupComponent_2","openTooltip","openKeypress","View_RadioGroupComponent_3","closeTooltip","closeKeypress","View_RadioGroupComponent_1","tooltipButton","group","modelContext","spValidationStatus","spValidationFeedback","displayName","EmployeeService","extendStatics","rxjs__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_1__","rxjs_operators__WEBPACK_IMPORTED_MODULE_2__","rxjs_operators__WEBPACK_IMPORTED_MODULE_3__","rxjs_operators__WEBPACK_IMPORTED_MODULE_4__","_utils__WEBPACK_IMPORTED_MODULE_5__","_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_6__","_environment__WEBPACK_IMPORTED_MODULE_7__","_angular_core__WEBPACK_IMPORTED_MODULE_8__","_entity_selectors__WEBPACK_IMPORTED_MODULE_9__","_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_10__","_core_services_tax_services_tax_collector_service__WEBPACK_IMPORTED_MODULE_11__","__extends","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","_super","entitySelectors","helper","taxCollectorService","call","saveNewEmployee","ee","home","epay","add","saveEntities","apiRoot","saveEmployeeUpdate","saveEmployeeIsRemovedById","eeId","entityMap$","eeMap","saveEmployeeIsRemoved","home$","address","addrs","homeAddressId","payment$","employeePaymentMethod","pms","pm","payment","computeTaxes"],"mappings":"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","file":"23.ffffaa130ffd04c9a3fa.js","sourcesContent":["/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./model.component\";\nvar styles_ModelComponent = [];\nvar RenderType_ModelComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_ModelComponent, data: {} });\nexport { RenderType_ModelComponent as RenderType_ModelComponent };\nexport function View_ModelComponent_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }\nexport function View_ModelComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-model\", [], null, null, null, View_ModelComponent_0, RenderType_ModelComponent)), i0.ɵdid(1, 573440, null, 0, i1.ModelComponent, [], null, null)], null, null); }\nvar ModelComponentNgFactory = i0.ɵccf(\"sp-model\", i1.ModelComponent, View_ModelComponent_Host_0, { model: \"model\", modelType: \"modelType\", group: \"group\" }, { modelChange: \"modelChange\" }, [\"*\"]);\nexport { ModelComponentNgFactory as ModelComponentNgFactory };\n","<ng-content></ng-content>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./radio-button.component\";\nvar styles_RadioButtonComponent = [];\nvar RenderType_RadioButtonComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_RadioButtonComponent, data: {} });\nexport { RenderType_RadioButtonComponent as RenderType_RadioButtonComponent };\nexport function View_RadioButtonComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { label: 0 }), (_l()(), i0.ɵeld(1, 0, [[1, 0], [\"label\", 1]], null, 3, \"label\", [[\"class\", \"btn-outline-primary btn\"]], [[2, \"active\", null], [2, \"focus\", null]], null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 0, \"input\", [[\"type\", \"radio\"]], [[1, \"name\", 0], [8, \"value\", 0], [8, \"disabled\", 0]], [[null, \"valueChange\"], [null, \"click\"], [null, \"focus\"], [null, \"blur\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"valueChange\" === en)) {\n        var pd_0 = ((_co.value = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"click\" === en)) {\n        var pd_1 = (_co.select() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_2 = (_co.onFocus() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_3 = (_co.onBlur() !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"multi-choice-option-text\"]], null, null, null, null, null)), i0.ɵncd(null, 0)], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.isSelected; var currVal_1 = _co.hasFocus; _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_2 = _co.name; var currVal_3 = _co.value; var currVal_4 = _co.disabled; _ck(_v, 2, 0, currVal_2, currVal_3, currVal_4); }); }\nexport function View_RadioButtonComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-radio-button\", [], null, null, null, View_RadioButtonComponent_0, RenderType_RadioButtonComponent)), i0.ɵdid(1, 49152, null, 0, i1.RadioButtonComponent, [], null, null)], null, null); }\nvar RadioButtonComponentNgFactory = i0.ɵccf(\"sp-radio-button\", i1.RadioButtonComponent, View_RadioButtonComponent_Host_0, { name: \"name\", disabled: \"disabled\", selectedValue: \"selectedValue\", value: \"value\" }, { valueChange: \"valueChange\" }, [\"*\"]);\nexport { RadioButtonComponentNgFactory as RadioButtonComponentNgFactory };\n","<label #label class=\"btn-outline-primary btn\"\r\n              [class.active]=\"isSelected\"\r\n              [class.focus]=\"hasFocus\">\r\n    <input [attr.name]=\"name\"\r\n           type=\"radio\"\r\n           [(value)]=\"value\"\r\n           (click)=\"select()\"\r\n           (focus)=\"onFocus()\"\r\n           (blur)=\"onBlur()\"\r\n           [disabled]=\"disabled\">\r\n    <span class=\"multi-choice-option-text\">\r\n      <ng-content></ng-content>\r\n    </span>\r\n</label>\r\n","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\n\r\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\r\nimport { CompanyDeductionItem,\r\n         CreateCompanyDeductionCommand,\r\n         DeductionCommand,\r\n         EditCompanyDeductionCommand,\r\n       } from '@shared/deductions';\r\nimport { Deduction } from '@model';\r\nimport { LoggerService, WellKnownRoutes } from '@core';\r\n\r\n/** Private VM class with default values */\r\nclass DeductionViewModel {\r\n  abbreviation = 'ABBR';\r\n  canChangeAbbreviation = false;\r\n  canChangeName = false;\r\n  hasHSAContributionQuestion = true;\r\n  hasPreOrPostTaxQuestion = true;\r\n  hsaContribution: HsaMatchType;\r\n  hsaMatchAllValue: number;\r\n  hsaMatchMaxValue: number;\r\n  hsaMatchPercent: number;\r\n  htmlDescription: SafeHtml;\r\n  isHsaMatchAllMaxAmount = true;\r\n  isHsaMatchMaxAmount = true;\r\n  name = 'Base name';\r\n  planTaxOptionCode = '';\r\n  isPreTax = false;\r\n  isPostTax = false;\r\n\r\n  constructor(\r\n    public command?: DeductionCommand,\r\n    /** key is the Deduction.codeType */\r\n    public id?: string,\r\n    public code?: string\r\n  ) {\r\n    if (!command) {\r\n      return;\r\n    }\r\n    if (command.isNew) {\r\n      this.configureForCreate(command as CreateCompanyDeductionCommand);\r\n    } else {\r\n      this.configureForEdit(command as EditCompanyDeductionCommand);\r\n    }\r\n  }\r\n  configureForCreate(cmd: CreateCompanyDeductionCommand): void {\r\n    this.hasPreOrPostTaxQuestion = cmd.askPreOrPostTax &&\r\n          !cmd.forcePostTax && !cmd.forcePreTax;\r\n    this.isPreTax = cmd.forcePreTax;\r\n    this.isPostTax = cmd.forcePostTax;\r\n  }\r\n  configureForEdit(cmd: EditCompanyDeductionCommand): void {\r\n    this.hasPreOrPostTaxQuestion = false;\r\n    this.isPreTax = false;\r\n    this.isPostTax = false;\r\n  }\r\n}\r\n\r\nenum HsaMatchType {\r\n  NoMatch = 'NOMATCH',\r\n  Match = 'MATCH',\r\n  MatchAll = 'MATCHALL'\r\n}\r\n\r\n// TODO: Use enums instead of magic values\r\n@Component({\r\n  selector: 'sp-company-deduction-editor',\r\n  templateUrl: './company-deduction-editor.component.html'\r\n})\r\nexport class CompanyDeductionEditorComponent implements OnInit {\r\n  private currentDeductionItem: CompanyDeductionItem;\r\n  HsaMatchType = HsaMatchType; // expose enum to template\r\n  vm: DeductionViewModel = new DeductionViewModel();\r\n\r\n  isNew = false;\r\n  private cancelSave = false;\r\n\r\n  constructor(\r\n    private editorService: CompanyDeductionEditorService,\r\n    private logger: LoggerService,\r\n    private hostEl: ElementRef,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.vm = new DeductionViewModel();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const codeType = this.route.snapshot.params['id'];\r\n    const code = this.route.snapshot.params['code'];\r\n    this.createVm(codeType, code);\r\n    setTimeout(() => this.hostEl.nativeElement.scrollIntoView()); // must delay one tick\r\n  }\r\n\r\n  canLeaveAfterSave(): Observable<any> {\r\n    if (this.cancelSave) {\r\n      this.cancelSave = false;\r\n      return of(true);\r\n    }\r\n    return this.save().pipe(map(d => {\r\n      this.editorService.endEdit();\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  get canConfirm(): boolean {\r\n    return !(this.vm.hasPreOrPostTaxQuestion &&\r\n             this.vm.planTaxOptionCode === ''\r\n            );\r\n  }\r\n\r\n  private createVm(codeType: string, code: string) {\r\n    const cmd = this.editorService.command;\r\n    if (!cmd) {\r\n      this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n      return;\r\n    }\r\n    this.vm = new DeductionViewModel(cmd, codeType, code);\r\n    const deductions = this.editorService.deductions;\r\n\r\n    const isHsa = codeType === 'HSA';\r\n    const deduction = isHsa\r\n      ? deductions.find(d => d.codeTypeId === 43) // first deduction on HSA (1 of 4)\r\n      : deductions.find(d => d.codeType === codeType); // first matching code type will do\r\n\r\n    if (!deduction) {\r\n      // No deduction found!?\r\n      // 1. A user added a bad id in the query string == deep linking mischief\r\n      // 2. Bad grouping category with no deductions == programmer error\r\n      this.logger.error(`No deduction for codeType: \"${codeType}\"`, deduction);\r\n      this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n      return;\r\n    }\r\n\r\n    this.isNew = cmd.isNew;\r\n    if (cmd.isNew) {\r\n      this.currentDeductionItem = this.editorService.create(deduction, code);\r\n    } else {\r\n      this.currentDeductionItem = this.editorService.edit(deduction, code);\r\n    }\r\n\r\n\r\n    this.currentDeductionItem.isDirty = true;\r\n\r\n    // fill the VM from deduction and item data\r\n    this.vm.abbreviation = this.currentDeductionItem.abbreviation;\r\n    this.vm.canChangeName = deduction.canChangeDescription;\r\n    this.vm.canChangeAbbreviation = deduction.canChangeAbbreviation;\r\n    this.vm.hasHSAContributionQuestion = isHsa ? false : this.hasHSAContributionQuestion(deduction);\r\n    if (isHsa) {\r\n      this.vm.hasPreOrPostTaxQuestion = false;\r\n    }\r\n    this.vm.name = this.currentDeductionItem.name;\r\n\r\n    // Security: `definition` is always authored by the SP team and is considered to be safe.\r\n    this.vm.htmlDescription = deduction.definition;\r\n\r\n    if (this.vm.isPreTax) {\r\n      this.updateDescription('PRETAX');\r\n    }\r\n    if (this.vm.isPostTax) {\r\n      this.updateDescription('POSTTAX');\r\n    }\r\n  }\r\n\r\n  updateDescription(taxMode: string): void {\r\n    const isPreTax = taxMode === 'PRETAX' ? true\r\n                                          : taxMode === 'POSTTAX' ? false\r\n                                                                  : null;\r\n    const deduction = this.editorService.getDeductionWithTaxMode(isPreTax);\r\n\r\n    if (isPreTax) {\r\n      this.vm.isPreTax = true;\r\n      this.vm.isPostTax = false;\r\n      this.vm.name = this.currentDeductionItem.deduction.codeType + ' Pre-Tax';\r\n    } else if (isPreTax === false) {\r\n      this.vm.isPreTax = false;\r\n      this.vm.isPostTax = true;\r\n      this.vm.name = this.currentDeductionItem.deduction.codeType + ' Post-Tax';\r\n    } else {\r\n      this.vm.isPreTax = false;\r\n      this.vm.isPostTax = false;\r\n    }\r\n\r\n    if (deduction) {\r\n      this.vm.htmlDescription = deduction.definition;\r\n    } else {\r\n      this.vm.htmlDescription = '';\r\n    }\r\n  }\r\n\r\n  done(): void {\r\n    this.editorService.endEdit();\r\n    this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n  }\r\n  cancel(): void {\r\n    if (this.isNew) {\r\n      this.delete();\r\n      return;\r\n    }\r\n    this.editorService.endEdit();\r\n    this.cancelSave = true;\r\n    this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n  }\r\n  delete() {\r\n    this.editorService.endEdit();\r\n    this.editorService.delete(this.currentDeductionItem).subscribe(\r\n      _ => {},\r\n      error => this.logger.error(error)\r\n    );\r\n    this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n  }\r\n\r\n  save(): Observable<any> {\r\n    const vm = this.vm;\r\n    if (!vm) {\r\n      return of(true);\r\n    }\r\n    const cdi = this.currentDeductionItem;\r\n    if (cdi) {\r\n      cdi.name = vm.name.trim();\r\n      cdi.abbreviation = vm.abbreviation.trim();\r\n      const hasChangedPrePost = canBePreOrPostTax(cdi.deduction.codeTypeId) &&\r\n                                (cdi.isPreTax !== vm.isPreTax ||\r\n                                 cdi.isPostTax !== vm.isPostTax);\r\n\r\n      if (hasChangedPrePost) {\r\n        cdi.companyDeductions[0].isRemoved = true;\r\n        if (vm.isPreTax) {\r\n          const preCTid = this.editorService.getDeductionCodeTypeIdByTaxMode(cdi.deduction.codeType, true);\r\n          const preDed = this.editorService.createByCodeTypeId(preCTid);\r\n          cdi.companyDeductions.push(preDed);\r\n        } else if (vm.isPostTax) {\r\n          const postCTid = this.editorService.getDeductionCodeTypeIdByTaxMode(cdi.deduction.codeType, false);\r\n          const postDed = this.editorService.createByCodeTypeId(postCTid);\r\n          cdi.companyDeductions.push(postDed);\r\n        }\r\n      }\r\n      const cd = cdi.companyDeductions[0];\r\n      cd.abbreviation = vm.abbreviation.trim();\r\n      cd.description = vm.name.trim();\r\n    }\r\n    return this.editorService.save();\r\n  }\r\n\r\n  private hasHSAContributionQuestion(deduction: Deduction): boolean {\r\n    return deduction.codeGroupId === 7; // HSA\r\n  }\r\n}\r\n\r\n\r\nfunction canBePreOrPostTax(codeTypeId: number): boolean {\r\n  switch (codeTypeId) {\r\n    case 20:  // Medical pre\r\n    case 21:  // Vision pre\r\n    case 22:  // Dental pre\r\n    case 30:  // Medial post\r\n    case 31:  // Vision post\r\n    case 32:  // Dental post\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { OnInit, ElementRef } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\nimport { LoggerService, WellKnownRoutes } from '@core';\n/** Private VM class with default values */\nvar DeductionViewModel = /** @class */ (function () {\n    function DeductionViewModel(command, \n    /** key is the Deduction.codeType */\n    id, code) {\n        this.command = command;\n        this.id = id;\n        this.code = code;\n        this.abbreviation = 'ABBR';\n        this.canChangeAbbreviation = false;\n        this.canChangeName = false;\n        this.hasHSAContributionQuestion = true;\n        this.hasPreOrPostTaxQuestion = true;\n        this.isHsaMatchAllMaxAmount = true;\n        this.isHsaMatchMaxAmount = true;\n        this.name = 'Base name';\n        this.planTaxOptionCode = '';\n        this.isPreTax = false;\n        this.isPostTax = false;\n        if (!command) {\n            return;\n        }\n        if (command.isNew) {\n            this.configureForCreate(command);\n        }\n        else {\n            this.configureForEdit(command);\n        }\n    }\n    DeductionViewModel.prototype.configureForCreate = function (cmd) {\n        this.hasPreOrPostTaxQuestion = cmd.askPreOrPostTax &&\n            !cmd.forcePostTax && !cmd.forcePreTax;\n        this.isPreTax = cmd.forcePreTax;\n        this.isPostTax = cmd.forcePostTax;\n    };\n    DeductionViewModel.prototype.configureForEdit = function (cmd) {\n        this.hasPreOrPostTaxQuestion = false;\n        this.isPreTax = false;\n        this.isPostTax = false;\n    };\n    return DeductionViewModel;\n}());\nvar HsaMatchType;\n(function (HsaMatchType) {\n    HsaMatchType[\"NoMatch\"] = \"NOMATCH\";\n    HsaMatchType[\"Match\"] = \"MATCH\";\n    HsaMatchType[\"MatchAll\"] = \"MATCHALL\";\n})(HsaMatchType || (HsaMatchType = {}));\n// TODO: Use enums instead of magic values\nvar CompanyDeductionEditorComponent = /** @class */ (function () {\n    function CompanyDeductionEditorComponent(editorService, logger, hostEl, route, router) {\n        this.editorService = editorService;\n        this.logger = logger;\n        this.hostEl = hostEl;\n        this.route = route;\n        this.router = router;\n        this.HsaMatchType = HsaMatchType; // expose enum to template\n        this.vm = new DeductionViewModel();\n        this.isNew = false;\n        this.cancelSave = false;\n        this.vm = new DeductionViewModel();\n    }\n    CompanyDeductionEditorComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        var codeType = this.route.snapshot.params['id'];\n        var code = this.route.snapshot.params['code'];\n        this.createVm(codeType, code);\n        setTimeout(function () { return _this.hostEl.nativeElement.scrollIntoView(); }); // must delay one tick\n    };\n    CompanyDeductionEditorComponent.prototype.canLeaveAfterSave = function () {\n        var _this = this;\n        if (this.cancelSave) {\n            this.cancelSave = false;\n            return of(true);\n        }\n        return this.save().pipe(map(function (d) {\n            _this.editorService.endEdit();\n            return true;\n        }));\n    };\n    Object.defineProperty(CompanyDeductionEditorComponent.prototype, \"canConfirm\", {\n        get: function () {\n            return !(this.vm.hasPreOrPostTaxQuestion &&\n                this.vm.planTaxOptionCode === '');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompanyDeductionEditorComponent.prototype.createVm = function (codeType, code) {\n        var cmd = this.editorService.command;\n        if (!cmd) {\n            this.router.navigate([WellKnownRoutes.CompanyDeductions]);\n            return;\n        }\n        this.vm = new DeductionViewModel(cmd, codeType, code);\n        var deductions = this.editorService.deductions;\n        var isHsa = codeType === 'HSA';\n        var deduction = isHsa\n            ? deductions.find(function (d) { return d.codeTypeId === 43; }) // first deduction on HSA (1 of 4)\n            : deductions.find(function (d) { return d.codeType === codeType; }); // first matching code type will do\n        if (!deduction) {\n            // No deduction found!?\n            // 1. A user added a bad id in the query string == deep linking mischief\n            // 2. Bad grouping category with no deductions == programmer error\n            this.logger.error(\"No deduction for codeType: \\\"\" + codeType + \"\\\"\", deduction);\n            this.router.navigate([WellKnownRoutes.CompanyDeductions]);\n            return;\n        }\n        this.isNew = cmd.isNew;\n        if (cmd.isNew) {\n            this.currentDeductionItem = this.editorService.create(deduction, code);\n        }\n        else {\n            this.currentDeductionItem = this.editorService.edit(deduction, code);\n        }\n        this.currentDeductionItem.isDirty = true;\n        // fill the VM from deduction and item data\n        this.vm.abbreviation = this.currentDeductionItem.abbreviation;\n        this.vm.canChangeName = deduction.canChangeDescription;\n        this.vm.canChangeAbbreviation = deduction.canChangeAbbreviation;\n        this.vm.hasHSAContributionQuestion = isHsa ? false : this.hasHSAContributionQuestion(deduction);\n        if (isHsa) {\n            this.vm.hasPreOrPostTaxQuestion = false;\n        }\n        this.vm.name = this.currentDeductionItem.name;\n        // Security: `definition` is always authored by the SP team and is considered to be safe.\n        this.vm.htmlDescription = deduction.definition;\n        if (this.vm.isPreTax) {\n            this.updateDescription('PRETAX');\n        }\n        if (this.vm.isPostTax) {\n            this.updateDescription('POSTTAX');\n        }\n    };\n    CompanyDeductionEditorComponent.prototype.updateDescription = function (taxMode) {\n        var isPreTax = taxMode === 'PRETAX' ? true\n            : taxMode === 'POSTTAX' ? false\n                : null;\n        var deduction = this.editorService.getDeductionWithTaxMode(isPreTax);\n        if (isPreTax) {\n            this.vm.isPreTax = true;\n            this.vm.isPostTax = false;\n            this.vm.name = this.currentDeductionItem.deduction.codeType + ' Pre-Tax';\n        }\n        else if (isPreTax === false) {\n            this.vm.isPreTax = false;\n            this.vm.isPostTax = true;\n            this.vm.name = this.currentDeductionItem.deduction.codeType + ' Post-Tax';\n        }\n        else {\n            this.vm.isPreTax = false;\n            this.vm.isPostTax = false;\n        }\n        if (deduction) {\n            this.vm.htmlDescription = deduction.definition;\n        }\n        else {\n            this.vm.htmlDescription = '';\n        }\n    };\n    CompanyDeductionEditorComponent.prototype.done = function () {\n        this.editorService.endEdit();\n        this.router.navigate([WellKnownRoutes.CompanyDeductions]);\n    };\n    CompanyDeductionEditorComponent.prototype.cancel = function () {\n        if (this.isNew) {\n            this.delete();\n            return;\n        }\n        this.editorService.endEdit();\n        this.cancelSave = true;\n        this.router.navigate([WellKnownRoutes.CompanyDeductions]);\n    };\n    CompanyDeductionEditorComponent.prototype.delete = function () {\n        var _this = this;\n        this.editorService.endEdit();\n        this.editorService.delete(this.currentDeductionItem).subscribe(function (_) { }, function (error) { return _this.logger.error(error); });\n        this.router.navigate([WellKnownRoutes.CompanyDeductions]);\n    };\n    CompanyDeductionEditorComponent.prototype.save = function () {\n        var vm = this.vm;\n        if (!vm) {\n            return of(true);\n        }\n        var cdi = this.currentDeductionItem;\n        if (cdi) {\n            cdi.name = vm.name.trim();\n            cdi.abbreviation = vm.abbreviation.trim();\n            var hasChangedPrePost = canBePreOrPostTax(cdi.deduction.codeTypeId) &&\n                (cdi.isPreTax !== vm.isPreTax ||\n                    cdi.isPostTax !== vm.isPostTax);\n            if (hasChangedPrePost) {\n                cdi.companyDeductions[0].isRemoved = true;\n                if (vm.isPreTax) {\n                    var preCTid = this.editorService.getDeductionCodeTypeIdByTaxMode(cdi.deduction.codeType, true);\n                    var preDed = this.editorService.createByCodeTypeId(preCTid);\n                    cdi.companyDeductions.push(preDed);\n                }\n                else if (vm.isPostTax) {\n                    var postCTid = this.editorService.getDeductionCodeTypeIdByTaxMode(cdi.deduction.codeType, false);\n                    var postDed = this.editorService.createByCodeTypeId(postCTid);\n                    cdi.companyDeductions.push(postDed);\n                }\n            }\n            var cd = cdi.companyDeductions[0];\n            cd.abbreviation = vm.abbreviation.trim();\n            cd.description = vm.name.trim();\n        }\n        return this.editorService.save();\n    };\n    CompanyDeductionEditorComponent.prototype.hasHSAContributionQuestion = function (deduction) {\n        return deduction.codeGroupId === 7; // HSA\n    };\n    return CompanyDeductionEditorComponent;\n}());\nexport { CompanyDeductionEditorComponent };\nfunction canBePreOrPostTax(codeTypeId) {\n    switch (codeTypeId) {\n        case 20: // Medical pre\n        case 21: // Vision pre\n        case 22: // Dental pre\n        case 30: // Medial post\n        case 31: // Vision post\n        case 32:// Dental post\n            return true;\n        default:\n            return false;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\r\nimport { buildCommandForCreation,\r\n         DeductionCategory,\r\n         DeductionTitle } from '@shared/deductions';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\nclass CompanyDeductionViewModel {\r\n  catalog: DeductionCategory[] = [];\r\n}\r\n\r\nconst companyDeductionsUrl = WellKnownRoutes.Employees + '/company-deductions';\r\n\r\n@Component({\r\n  selector: 'sp-company-deductions',\r\n  templateUrl: './company-deductions-container.component.html'\r\n})\r\nexport class CompanyDeductionsContainerComponent implements OnInit {\r\n  vm: CompanyDeductionViewModel = new CompanyDeductionViewModel();\r\n  selectedKey: string;\r\n  showTable = false;\r\n\r\n  constructor(\r\n    private editorService: CompanyDeductionEditorService,\r\n    private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.vm = {\r\n      catalog: this.editorService.deductionCategories\r\n    };\r\n  }\r\n\r\n  onCatalogSelection(dt: DeductionTitle): void {\r\n    this.selectedKey = dt.key;\r\n    this.editorService.command = buildCommandForCreation(dt);\r\n    const code = this.editorService.command.code;\r\n    if (dt.key === 'Retirements') {\r\n      this.router.navigate([companyDeductionsUrl + '/retirement']);\r\n    } else {\r\n      this.router.navigate([`${companyDeductionsUrl}/deduction/${dt.key}/${code}`]);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable, of, combineLatest, Subject } from 'rxjs';\nimport { first, map, tap } from 'rxjs/operators';\n\nimport { CompanyDeduction,\n         Deduction,\n         DeductionPlanType,\n         deductionIsCustomType,\n         Employee,\n         EmployeeDeduction,\n         WellKnownDeductionsCodeTypeId\n} from '@model';\nimport { CompanyDeductionItem,\n         DeductionCategory,\n         DeductionCommand,\n         getDeductionCategories,\n         isNewCompanyDeductionItem,\n         updateTreeState\n       } from '@shared/deductions';\nimport { CompanyDeductionService, DeductionService, EmployeeDeductionService, EmployeeService\n       } from '@entity';\n\n@Injectable({ providedIn: 'root' })\nexport class CompanyDeductionEditorService {\n  companyDeductionItems: CompanyDeductionItem[];\n  deductions: Deduction[];\n  deductionCategories: DeductionCategory[];\n\n  currentInEdit: CompanyDeductionItem;\n  private _command: DeductionCommand;\n\n  private employeeDeductionsToDelete: EmployeeDeduction[] = null;\n\n  constructor(\n    private deductionService: DeductionService,\n    private companyDeductionService: CompanyDeductionService,\n    private employeeDeductionService: EmployeeDeductionService,\n    private employeeService: EmployeeService\n  ) {}\n\n\n  get command(): DeductionCommand {\n    return this._command;\n  }\n  set command(cmd: DeductionCommand) {\n    this._command = cmd;\n  }\n  getDeductionWithTaxMode(isPreTax: boolean): Deduction {\n    const deductions = this.command ? this.command.deductions : [];\n    const found = deductions.find(d => {\n      if (isPreTax) {\n        return d.deductionPlanTaxOptionCode === DeductionPlanType.PRETAX;\n      } else if (isPreTax === false) {\n        return d.deductionPlanTaxOptionCode === DeductionPlanType.POSTTAX;\n      } else {\n        return d.deductionPlanTaxOptionCode === DeductionPlanType.NOEEDEDUCT;\n      }\n    });\n    return found;\n  }\n\n\n\n  /**\n   * Create CompanyDeductionItem from a Deduction and add to cached CompanyDeductionItems\n   * @param deduction Deduction master metadata for this item.\n   */\n  create(deduction: Deduction, code: string): CompanyDeductionItem {\n    const cd = this.companyDeductionService.createFromDeduction(deduction);\n    const item = new CompanyDeductionItem(deduction, true, [cd]);\n\n    if (code) {\n      item.setCode(code);\n      let namePrefix: string;\n      let abbreviationPrefix: string;\n      if (deduction.codeTypeId === 23) {    // Misc Pre\n        namePrefix = item.name + ' Pre #';\n        abbreviationPrefix = 'MIPRE';\n      } else  if (deduction.codeTypeId === 24) {    // Cafe 2\n        namePrefix = item.name + ' #';\n        abbreviationPrefix = 'CAFE';\n      } else  if (deduction.codeTypeId === 34) {    //  Misc Post\n        namePrefix = item.name + ' Post #';\n        abbreviationPrefix = 'MIPRO';\n      } else if (deduction.codeTypeId === 56) {  // Custom with Goal\n        namePrefix = 'Custom with Goal #';\n        abbreviationPrefix = 'CUSTWG';\n      } else if (deduction.codeTypeId === 57) {  // Custom No Goal\n        namePrefix = 'Custom No Goal #';\n        abbreviationPrefix = 'CUSTNG';\n      } else if (deduction.codeTypeId === 50) {  // Child Support\n        namePrefix = 'Child Support #';\n        abbreviationPrefix = 'CHILD';\n      } else if (deduction.codeTypeId === 51) {  // Garnishment with Goal\n        namePrefix = 'Garnishment with Goal #';\n        abbreviationPrefix = 'GARWG';\n      } else if (deduction.codeTypeId === 59) {  // Garnishment No Goal\n        namePrefix = 'Garnishment No Goal #';\n        abbreviationPrefix = 'GARNG';\n      }\n\n      if (namePrefix && abbreviationPrefix) {\n        const proposal = this.proposeNameAndAbbreviation(deduction.codeTypeId, namePrefix, abbreviationPrefix);\n        item.name = proposal.name;\n        item.abbreviation = proposal.abbreviation;\n      }\n    }\n\n    this.companyDeductionItems.push(item);\n    this.currentInEdit = item;\n    this.updateCatalog();\n    return item;\n  }\n\n  /**  a unique name and abbreviation for a count-down deduction instance.\n   * Looks for the next available instance number\n   */\n  proposeNameAndAbbreviation(codeTypeId: number,\n                             namePrefix: string,\n                             abbreviationPrefix: string): { name: string, abbreviation: string } {\n    const items = this.companyDeductionItems.filter(d => d.deduction.codeTypeId === codeTypeId);\n    let index = 1;\n    let notUnique = true;\n    let name = '';\n    let abbreviation = '';\n\n    while (notUnique) {\n      name = namePrefix + index.toString();\n      abbreviation = abbreviationPrefix + index.toString();\n\n      const foundName = items.find(d => d.name === name);\n      const foundAbbreviation = items.find(d => d.abbreviation === abbreviation);\n\n      index++;\n      notUnique = !!foundName || !!foundAbbreviation;\n    }\n    return {\n      name,\n      abbreviation\n    };\n  }\n\n  createByCodeTypeId(tid: number): CompanyDeduction {\n    const found = this.deductions.find(t => t.codeTypeId === tid);\n    if (!found) {\n      throw new Error(`Deduction Type ${tid} not found.`);\n    }\n    const cd = this.companyDeductionService.createFromDeduction(found);\n    return cd;\n  }\n\n  getDeductionCodeTypeIdByTaxMode(codeType: string, isPreTax?: boolean): number {\n    const found = this.deductions.filter(t => t.codeType === codeType)\n                                 .find(d => {\n      if (isPreTax === true) {\n        return d.deductionPlanTaxOptionCode === DeductionPlanType.PRETAX;\n      } else if (isPreTax === false) {\n        return d.deductionPlanTaxOptionCode === DeductionPlanType.POSTTAX;\n      } else {\n        return true; // first one\n      }\n    });\n    if (!found) {\n      throw new Error(`Deduction Type ${codeType} not found.`);\n    }\n    return found.codeTypeId;\n  }\n\n  /**\n   * Generates a code number to recognize when more than one instance of a type is needed.\n   * Examples: Miscellaneous deductions for:\n   * Miscellaneous with Goal (up to 5) or\n   * Miscellaneous NO Goal (up to 5)\n   * @param codeTypeId Type of deduction\n   */\n  generateCode(codeTypeId: number): string {\n    if (\n      codeTypeId === WellKnownDeductionsCodeTypeId.MiscellaneousNoGoal ||\n      codeTypeId === WellKnownDeductionsCodeTypeId.MiscellaneousWithGoal\n    ) {\n      const slots: any = { '1': true, '2': true, '3': true, '4': true, '5': true };\n      this.companyDeductionItems.forEach(cdi => {\n        const code = cdi.getCode();\n        if (code && cdi.deduction.codeTypeId === codeTypeId) {\n          slots[code] = false;\n        }\n      });\n      const found = Object.keys(slots).find(it => slots[it] === true);\n      return found ? found : '6';\n    }\n    return '1'; // no multiple instances (singleton)\n  }\n\n  delete(companyDeductionItem: CompanyDeductionItem): Observable<any> {\n    const deleteSource = new Subject();\n    // delete employee deductions affected\n    this.employeeDeductionService.getDeductionsLinkedTo(\n      companyDeductionItem.companyDeductions[0].id\n    ).pipe(first()).subscribe((employeeDeductionsToDelete) => {\n\n      this.employeeDeductionsToDelete = employeeDeductionsToDelete;\n      companyDeductionItem.isDeleted = true;\n      this.updateCatalog();\n      deleteSource.next( this.save() );\n\n    });\n    return deleteSource.asObservable();\n  }\n\n  /**\n   * Find or create the CompanyDeductionItem for the give Deduction\n   * @param deduction Deduction master metadata for this item\n   * @param code Number of instance of the deductions (f.e. used in Miscellaneous Wit/out Goals)\n   * Not needed for single-instance deductions\n   */\n  edit(deduction: Deduction, code: string): CompanyDeductionItem {\n    let cdi: CompanyDeductionItem;\n    if (deductionIsCustomType(deduction) && !code) {\n      cdi = this.create(deduction, '1');\n    } else {\n      const foundInstance = this.foundDeductionInstance(deduction, code);\n      cdi = foundInstance || this.create(deduction, code);\n    }\n    return this.editCompanyDeductionItem(cdi);\n  }\n  editCompanyDeductionItem(cdi: CompanyDeductionItem): CompanyDeductionItem {\n    this.currentInEdit = cdi;\n    this.updateCatalog();\n    return cdi;\n  }\n\n  endEdit(): void {\n    this.currentInEdit = null;\n    this.updateCatalog();\n  }\n\n  /**\n   * Returns a deduction of type catchup if defined\n   */\n  getCatchupDeduction(): CompanyDeductionItem {\n    return this.companyDeductionItems.find(d => d.isCatchUp);\n  }\n  /** Creates a corresponding catchup plan for a deduction plan\n   * @param cdi: base deduction plan\n  */\n  createCatchUpFor(cdi: CompanyDeductionItem): CompanyDeductionItem {\n    const catchUpTid = this.getCorrespondingCatchUpPlanFor(cdi.deduction.codeTypeId);\n    if (!catchUpTid) {\n      return null;\n    }\n    const catchUpDeduction = this.deductions.find(d => d.codeTypeId === catchUpTid);\n    const cd = this.companyDeductionService.createFromDeduction(catchUpDeduction);\n    const item = new CompanyDeductionItem(catchUpDeduction, true, [cd]);\n    this.companyDeductionItems.push(item);\n    this.updateCatalog();\n    return item;\n  }\n\n  getEmployeesEnrolledInDeduction(d: CompanyDeductionItem): Observable<Employee[]> {\n    const employees$ = this.employeeService.entities$;\n    const eds$ = this.employeeDeductionService.entities$;\n    return combineLatest(employees$, eds$).pipe(\n      map(([employees, eds]) => {\n        return employees.filter(e => {\n          const found = eds.find(ed1 =>\n            ed1.employeeId === e.id &&\n            ed1.companyDeductionId === d.companyDeductions[0].id );\n          return found;\n        });\n      }\n    ));\n  }\n\n  private foundDeductionInstance(deduction: Deduction, code: string): CompanyDeductionItem {\n    return this.companyDeductionItems.find(it => {\n      if (code) {\n        const instanceCode = it.getCode();\n        return it.deduction.codeTypeId === deduction.codeTypeId && instanceCode === code;\n      } else {\n        return it.deduction.codeTypeId === deduction.codeTypeId;\n      }\n    });\n  }\n\n  /**\n   * Return boolean observable when the\n   * deductions master/metadata have been loaded\n   * and service is listening for current company deductions\n   * (which are cached in this service).\n   * Always emits true when ready.\n   */\n  ready(): Observable<boolean> {\n    if (this.deductions) {\n      return of(true);\n    }\n\n    return this.deductionService.deductions$.pipe(\n      first(),\n      tap(deductions => {\n        this.deductions = deductions;\n\n        // No need to unsubscribe because this service never dies\n        this.companyDeductionService.entities$.subscribe(cds => {\n          const items = this.mapToItems(cds);\n          this.companyDeductionItems = items;\n          if (!this.deductionCategories) {\n            // cache to preserve visual state expand/collapse after first load\n            this.deductionCategories = getDeductionCategories(deductions);\n          }\n          this.updateCatalog();\n        });\n      }),\n      map(() => true)\n    );\n  }\n\n  /**\n   * Return the terminating, multi-entity-save Observable of the new/changed/deleted CompanyDeductions.\n   * Must subscribe to execute save; no need to unsubscribe.\n   * Cleans cached CompanyDeductionItems immediately, whether or not subscribed.\n   */\n  save(): Observable<any> {\n    if (this.employeeDeductionsToDelete) {\n      this.employeeDeductionsToDelete.forEach(ed => {\n        ed.isRemoved = true;\n      });\n    }\n    this.employeeDeductionService.save(this.employeeDeductionsToDelete)\n                                 .subscribe();\n    this.employeeDeductionsToDelete = null;\n\n    // save the dirty items\n    const toSave = this.companyDeductionItems.filter(d => d.isDirty || d.isDeleted);\n    // mark CompanyDeduction rows for deletion\n    toSave\n      .filter(cdi => cdi.isDeleted)\n      .forEach(cdi => {\n        cdi.companyDeductions.forEach(cd => {\n          cd.isRemoved = true;\n        });\n      });\n    // propagate changes\n    toSave.filter(cdi => cdi.isDirty && !cdi.isDeleted)\n          .forEach(cdi => cdi.viewModelToEntity());\n\n    // flatten each item's CompanyDeductions into a single array-to-save\n    const changes = toSave.map(d => d.companyDeductions)\n                          .reduce((a, b) => a.concat(b), []);\n\n    const ret = this.companyDeductionService.save(changes);\n\n    // Todo: Why is the following down here? Move above the save (below toSave)? Would be easier to read.\n    // PJ: save is checking for isRemoved to do real deletion.\n    // PJ: Need to clean in-mem state after saving.\n\n    // items are no longer dirty after save\n    this.companyDeductionItems.forEach(d => (d.isDirty = false));\n    this.purgeDeleted();\n\n    return ret;\n  }\n\n  // #region private helpers\n\n  /**\n   * Map CompanyDeductions into CompanyDeductionItems\n   */\n  private mapToItems(companyDeductions: CompanyDeduction[]): CompanyDeductionItem[] {\n    // Current Assumption: 1 Company Deduction -> 1 Item Deduction\n    return companyDeductions.map(d => {\n      const deductionType = this.deductions.find(md => md.codeTypeId === d.deductionCodeTypeId);\n      const item = new CompanyDeductionItem(deductionType, false, [d]);\n      return item;\n    });\n  }\n\n  /**\n   * Remove the deleted CompanyDeductionItems and\n   * remove the \"isRemoved\" CompanyDeductions from the remaining, active items\n   */\n  private purgeDeleted(): void {\n    this.companyDeductionItems = this.companyDeductionItems\n      .filter(item => item.isDeleted !== true)\n      .map(item => {\n        // exclude item's removed company deductions\n        item.companyDeductions = item.companyDeductions.filter(d => d.isRemoved !== true);\n        return item;\n      });\n  }\n\n  private updateCatalog(): void {\n    updateTreeState(\n      this.deductionCategories,\n      this.companyDeductionItems.filter(cdi => !isNewCompanyDeductionItem(cdi)),\n      this.currentInEdit\n    );\n  }\n\n  /** Returns correspondence between a retirement plan and a catchup plan */\n  private getCorrespondingCatchUpPlanFor(tid: number): number {\n      const found = this.deductions.find(d => d.retireAddon === tid);\n      return found ? found.codeTypeId : null;\n  }\n\n  // #endregion private helpers\n}\n\n\n","import { of, combineLatest, Subject } from 'rxjs';\nimport { first, map, tap } from 'rxjs/operators';\nimport { DeductionPlanType, deductionIsCustomType, WellKnownDeductionsCodeTypeId } from '@model';\nimport { CompanyDeductionItem, getDeductionCategories, isNewCompanyDeductionItem, updateTreeState } from '@shared/deductions';\nimport { CompanyDeductionService, DeductionService, EmployeeDeductionService, EmployeeService } from '@entity';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../store/entity/entity-services/deduction.service\";\nimport * as i2 from \"../../store/entity/entity-services/company-deduction.service\";\nimport * as i3 from \"../../store/entity/entity-services/employee-deduction.service\";\nimport * as i4 from \"../../store/entity/entity-services/employee.service\";\nvar CompanyDeductionEditorService = /** @class */ (function () {\n    function CompanyDeductionEditorService(deductionService, companyDeductionService, employeeDeductionService, employeeService) {\n        this.deductionService = deductionService;\n        this.companyDeductionService = companyDeductionService;\n        this.employeeDeductionService = employeeDeductionService;\n        this.employeeService = employeeService;\n        this.employeeDeductionsToDelete = null;\n    }\n    Object.defineProperty(CompanyDeductionEditorService.prototype, \"command\", {\n        get: function () {\n            return this._command;\n        },\n        set: function (cmd) {\n            this._command = cmd;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompanyDeductionEditorService.prototype.getDeductionWithTaxMode = function (isPreTax) {\n        var deductions = this.command ? this.command.deductions : [];\n        var found = deductions.find(function (d) {\n            if (isPreTax) {\n                return d.deductionPlanTaxOptionCode === DeductionPlanType.PRETAX;\n            }\n            else if (isPreTax === false) {\n                return d.deductionPlanTaxOptionCode === DeductionPlanType.POSTTAX;\n            }\n            else {\n                return d.deductionPlanTaxOptionCode === DeductionPlanType.NOEEDEDUCT;\n            }\n        });\n        return found;\n    };\n    /**\n     * Create CompanyDeductionItem from a Deduction and add to cached CompanyDeductionItems\n     * @param deduction Deduction master metadata for this item.\n     */\n    CompanyDeductionEditorService.prototype.create = function (deduction, code) {\n        var cd = this.companyDeductionService.createFromDeduction(deduction);\n        var item = new CompanyDeductionItem(deduction, true, [cd]);\n        if (code) {\n            item.setCode(code);\n            var namePrefix = void 0;\n            var abbreviationPrefix = void 0;\n            if (deduction.codeTypeId === 23) {\n                namePrefix = item.name + ' Pre #';\n                abbreviationPrefix = 'MIPRE';\n            }\n            else if (deduction.codeTypeId === 24) {\n                namePrefix = item.name + ' #';\n                abbreviationPrefix = 'CAFE';\n            }\n            else if (deduction.codeTypeId === 34) {\n                namePrefix = item.name + ' Post #';\n                abbreviationPrefix = 'MIPRO';\n            }\n            else if (deduction.codeTypeId === 56) {\n                namePrefix = 'Custom with Goal #';\n                abbreviationPrefix = 'CUSTWG';\n            }\n            else if (deduction.codeTypeId === 57) {\n                namePrefix = 'Custom No Goal #';\n                abbreviationPrefix = 'CUSTNG';\n            }\n            else if (deduction.codeTypeId === 50) {\n                namePrefix = 'Child Support #';\n                abbreviationPrefix = 'CHILD';\n            }\n            else if (deduction.codeTypeId === 51) {\n                namePrefix = 'Garnishment with Goal #';\n                abbreviationPrefix = 'GARWG';\n            }\n            else if (deduction.codeTypeId === 59) {\n                namePrefix = 'Garnishment No Goal #';\n                abbreviationPrefix = 'GARNG';\n            }\n            if (namePrefix && abbreviationPrefix) {\n                var proposal = this.proposeNameAndAbbreviation(deduction.codeTypeId, namePrefix, abbreviationPrefix);\n                item.name = proposal.name;\n                item.abbreviation = proposal.abbreviation;\n            }\n        }\n        this.companyDeductionItems.push(item);\n        this.currentInEdit = item;\n        this.updateCatalog();\n        return item;\n    };\n    /**  a unique name and abbreviation for a count-down deduction instance.\n     * Looks for the next available instance number\n     */\n    CompanyDeductionEditorService.prototype.proposeNameAndAbbreviation = function (codeTypeId, namePrefix, abbreviationPrefix) {\n        var items = this.companyDeductionItems.filter(function (d) { return d.deduction.codeTypeId === codeTypeId; });\n        var index = 1;\n        var notUnique = true;\n        var name = '';\n        var abbreviation = '';\n        while (notUnique) {\n            name = namePrefix + index.toString();\n            abbreviation = abbreviationPrefix + index.toString();\n            var foundName = items.find(function (d) { return d.name === name; });\n            var foundAbbreviation = items.find(function (d) { return d.abbreviation === abbreviation; });\n            index++;\n            notUnique = !!foundName || !!foundAbbreviation;\n        }\n        return {\n            name: name,\n            abbreviation: abbreviation\n        };\n    };\n    CompanyDeductionEditorService.prototype.createByCodeTypeId = function (tid) {\n        var found = this.deductions.find(function (t) { return t.codeTypeId === tid; });\n        if (!found) {\n            throw new Error(\"Deduction Type \" + tid + \" not found.\");\n        }\n        var cd = this.companyDeductionService.createFromDeduction(found);\n        return cd;\n    };\n    CompanyDeductionEditorService.prototype.getDeductionCodeTypeIdByTaxMode = function (codeType, isPreTax) {\n        var found = this.deductions.filter(function (t) { return t.codeType === codeType; })\n            .find(function (d) {\n            if (isPreTax === true) {\n                return d.deductionPlanTaxOptionCode === DeductionPlanType.PRETAX;\n            }\n            else if (isPreTax === false) {\n                return d.deductionPlanTaxOptionCode === DeductionPlanType.POSTTAX;\n            }\n            else {\n                return true; // first one\n            }\n        });\n        if (!found) {\n            throw new Error(\"Deduction Type \" + codeType + \" not found.\");\n        }\n        return found.codeTypeId;\n    };\n    /**\n     * Generates a code number to recognize when more than one instance of a type is needed.\n     * Examples: Miscellaneous deductions for:\n     * Miscellaneous with Goal (up to 5) or\n     * Miscellaneous NO Goal (up to 5)\n     * @param codeTypeId Type of deduction\n     */\n    CompanyDeductionEditorService.prototype.generateCode = function (codeTypeId) {\n        if (codeTypeId === WellKnownDeductionsCodeTypeId.MiscellaneousNoGoal ||\n            codeTypeId === WellKnownDeductionsCodeTypeId.MiscellaneousWithGoal) {\n            var slots_1 = { '1': true, '2': true, '3': true, '4': true, '5': true };\n            this.companyDeductionItems.forEach(function (cdi) {\n                var code = cdi.getCode();\n                if (code && cdi.deduction.codeTypeId === codeTypeId) {\n                    slots_1[code] = false;\n                }\n            });\n            var found = Object.keys(slots_1).find(function (it) { return slots_1[it] === true; });\n            return found ? found : '6';\n        }\n        return '1'; // no multiple instances (singleton)\n    };\n    CompanyDeductionEditorService.prototype.delete = function (companyDeductionItem) {\n        var _this = this;\n        var deleteSource = new Subject();\n        // delete employee deductions affected\n        this.employeeDeductionService.getDeductionsLinkedTo(companyDeductionItem.companyDeductions[0].id).pipe(first()).subscribe(function (employeeDeductionsToDelete) {\n            _this.employeeDeductionsToDelete = employeeDeductionsToDelete;\n            companyDeductionItem.isDeleted = true;\n            _this.updateCatalog();\n            deleteSource.next(_this.save());\n        });\n        return deleteSource.asObservable();\n    };\n    /**\n     * Find or create the CompanyDeductionItem for the give Deduction\n     * @param deduction Deduction master metadata for this item\n     * @param code Number of instance of the deductions (f.e. used in Miscellaneous Wit/out Goals)\n     * Not needed for single-instance deductions\n     */\n    CompanyDeductionEditorService.prototype.edit = function (deduction, code) {\n        var cdi;\n        if (deductionIsCustomType(deduction) && !code) {\n            cdi = this.create(deduction, '1');\n        }\n        else {\n            var foundInstance = this.foundDeductionInstance(deduction, code);\n            cdi = foundInstance || this.create(deduction, code);\n        }\n        return this.editCompanyDeductionItem(cdi);\n    };\n    CompanyDeductionEditorService.prototype.editCompanyDeductionItem = function (cdi) {\n        this.currentInEdit = cdi;\n        this.updateCatalog();\n        return cdi;\n    };\n    CompanyDeductionEditorService.prototype.endEdit = function () {\n        this.currentInEdit = null;\n        this.updateCatalog();\n    };\n    /**\n     * Returns a deduction of type catchup if defined\n     */\n    CompanyDeductionEditorService.prototype.getCatchupDeduction = function () {\n        return this.companyDeductionItems.find(function (d) { return d.isCatchUp; });\n    };\n    /** Creates a corresponding catchup plan for a deduction plan\n     * @param cdi: base deduction plan\n    */\n    CompanyDeductionEditorService.prototype.createCatchUpFor = function (cdi) {\n        var catchUpTid = this.getCorrespondingCatchUpPlanFor(cdi.deduction.codeTypeId);\n        if (!catchUpTid) {\n            return null;\n        }\n        var catchUpDeduction = this.deductions.find(function (d) { return d.codeTypeId === catchUpTid; });\n        var cd = this.companyDeductionService.createFromDeduction(catchUpDeduction);\n        var item = new CompanyDeductionItem(catchUpDeduction, true, [cd]);\n        this.companyDeductionItems.push(item);\n        this.updateCatalog();\n        return item;\n    };\n    CompanyDeductionEditorService.prototype.getEmployeesEnrolledInDeduction = function (d) {\n        var employees$ = this.employeeService.entities$;\n        var eds$ = this.employeeDeductionService.entities$;\n        return combineLatest(employees$, eds$).pipe(map(function (_a) {\n            var employees = _a[0], eds = _a[1];\n            return employees.filter(function (e) {\n                var found = eds.find(function (ed1) {\n                    return ed1.employeeId === e.id &&\n                        ed1.companyDeductionId === d.companyDeductions[0].id;\n                });\n                return found;\n            });\n        }));\n    };\n    CompanyDeductionEditorService.prototype.foundDeductionInstance = function (deduction, code) {\n        return this.companyDeductionItems.find(function (it) {\n            if (code) {\n                var instanceCode = it.getCode();\n                return it.deduction.codeTypeId === deduction.codeTypeId && instanceCode === code;\n            }\n            else {\n                return it.deduction.codeTypeId === deduction.codeTypeId;\n            }\n        });\n    };\n    /**\n     * Return boolean observable when the\n     * deductions master/metadata have been loaded\n     * and service is listening for current company deductions\n     * (which are cached in this service).\n     * Always emits true when ready.\n     */\n    CompanyDeductionEditorService.prototype.ready = function () {\n        var _this = this;\n        if (this.deductions) {\n            return of(true);\n        }\n        return this.deductionService.deductions$.pipe(first(), tap(function (deductions) {\n            _this.deductions = deductions;\n            // No need to unsubscribe because this service never dies\n            _this.companyDeductionService.entities$.subscribe(function (cds) {\n                var items = _this.mapToItems(cds);\n                _this.companyDeductionItems = items;\n                if (!_this.deductionCategories) {\n                    // cache to preserve visual state expand/collapse after first load\n                    _this.deductionCategories = getDeductionCategories(deductions);\n                }\n                _this.updateCatalog();\n            });\n        }), map(function () { return true; }));\n    };\n    /**\n     * Return the terminating, multi-entity-save Observable of the new/changed/deleted CompanyDeductions.\n     * Must subscribe to execute save; no need to unsubscribe.\n     * Cleans cached CompanyDeductionItems immediately, whether or not subscribed.\n     */\n    CompanyDeductionEditorService.prototype.save = function () {\n        if (this.employeeDeductionsToDelete) {\n            this.employeeDeductionsToDelete.forEach(function (ed) {\n                ed.isRemoved = true;\n            });\n        }\n        this.employeeDeductionService.save(this.employeeDeductionsToDelete)\n            .subscribe();\n        this.employeeDeductionsToDelete = null;\n        // save the dirty items\n        var toSave = this.companyDeductionItems.filter(function (d) { return d.isDirty || d.isDeleted; });\n        // mark CompanyDeduction rows for deletion\n        toSave\n            .filter(function (cdi) { return cdi.isDeleted; })\n            .forEach(function (cdi) {\n            cdi.companyDeductions.forEach(function (cd) {\n                cd.isRemoved = true;\n            });\n        });\n        // propagate changes\n        toSave.filter(function (cdi) { return cdi.isDirty && !cdi.isDeleted; })\n            .forEach(function (cdi) { return cdi.viewModelToEntity(); });\n        // flatten each item's CompanyDeductions into a single array-to-save\n        var changes = toSave.map(function (d) { return d.companyDeductions; })\n            .reduce(function (a, b) { return a.concat(b); }, []);\n        var ret = this.companyDeductionService.save(changes);\n        // Todo: Why is the following down here? Move above the save (below toSave)? Would be easier to read.\n        // PJ: save is checking for isRemoved to do real deletion.\n        // PJ: Need to clean in-mem state after saving.\n        // items are no longer dirty after save\n        this.companyDeductionItems.forEach(function (d) { return (d.isDirty = false); });\n        this.purgeDeleted();\n        return ret;\n    };\n    // #region private helpers\n    /**\n     * Map CompanyDeductions into CompanyDeductionItems\n     */\n    CompanyDeductionEditorService.prototype.mapToItems = function (companyDeductions) {\n        var _this = this;\n        // Current Assumption: 1 Company Deduction -> 1 Item Deduction\n        return companyDeductions.map(function (d) {\n            var deductionType = _this.deductions.find(function (md) { return md.codeTypeId === d.deductionCodeTypeId; });\n            var item = new CompanyDeductionItem(deductionType, false, [d]);\n            return item;\n        });\n    };\n    /**\n     * Remove the deleted CompanyDeductionItems and\n     * remove the \"isRemoved\" CompanyDeductions from the remaining, active items\n     */\n    CompanyDeductionEditorService.prototype.purgeDeleted = function () {\n        this.companyDeductionItems = this.companyDeductionItems\n            .filter(function (item) { return item.isDeleted !== true; })\n            .map(function (item) {\n            // exclude item's removed company deductions\n            item.companyDeductions = item.companyDeductions.filter(function (d) { return d.isRemoved !== true; });\n            return item;\n        });\n    };\n    CompanyDeductionEditorService.prototype.updateCatalog = function () {\n        updateTreeState(this.deductionCategories, this.companyDeductionItems.filter(function (cdi) { return !isNewCompanyDeductionItem(cdi); }), this.currentInEdit);\n    };\n    /** Returns correspondence between a retirement plan and a catchup plan */\n    CompanyDeductionEditorService.prototype.getCorrespondingCatchUpPlanFor = function (tid) {\n        var found = this.deductions.find(function (d) { return d.retireAddon === tid; });\n        return found ? found.codeTypeId : null;\n    };\n    CompanyDeductionEditorService.ngInjectableDef = i0.defineInjectable({ factory: function CompanyDeductionEditorService_Factory() { return new CompanyDeductionEditorService(i0.inject(i1.DeductionService), i0.inject(i2.CompanyDeductionService), i0.inject(i3.EmployeeDeductionService), i0.inject(i4.EmployeeService)); }, token: CompanyDeductionEditorService, providedIn: \"root\" });\n    return CompanyDeductionEditorService;\n}());\nexport { CompanyDeductionEditorService };\n","import { Injectable } from '@angular/core';\nimport { CanActivateChild } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\n\n@Injectable({ providedIn: 'root' })\nexport class CompanyDeductionsGuard implements CanActivateChild {\n\n  constructor(private service: CompanyDeductionEditorService) { }\n\n  canActivateChild(): Observable<boolean> {\n    return this.service.ready();\n  }\n}\n","import { CompanyDeductionEditorService } from './company-deduction-editor.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./company-deduction-editor.service\";\nvar CompanyDeductionsGuard = /** @class */ (function () {\n    function CompanyDeductionsGuard(service) {\n        this.service = service;\n    }\n    CompanyDeductionsGuard.prototype.canActivateChild = function () {\n        return this.service.ready();\n    };\n    CompanyDeductionsGuard.ngInjectableDef = i0.defineInjectable({ factory: function CompanyDeductionsGuard_Factory() { return new CompanyDeductionsGuard(i0.inject(i1.CompanyDeductionEditorService)); }, token: CompanyDeductionsGuard, providedIn: \"root\" });\n    return CompanyDeductionsGuard;\n}());\nexport { CompanyDeductionsGuard };\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Company, Employee } from '@model';\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\nimport { CompanyDeductionRemoveComponent } from './company-deduction-remove.component';\nimport { CompanyService } from '@entity';\nimport { CompanyDeductionItem, buildCommandForEdit, isNewCompanyDeductionItem } from '@shared/deductions';\nimport { LoggerService } from '@core';\n\n@Component({\n  selector: 'sp-company-deductions-table',\n  templateUrl: './company-deductions-table.component.html'\n})\nexport class CompanyDeductionsTableComponent implements OnInit {\n  company$: Observable<Company>;\n\n  @ViewChild('removeConfirmation') removeConfirmationModal: CompanyDeductionRemoveComponent;\n\n  constructor(\n    private companyService: CompanyService,\n    private editorService: CompanyDeductionEditorService,\n    private log: LoggerService,\n    private router: Router,\n  ) {  }\n\n  ngOnInit() {\n    this.company$ = this.companyService.currentCompany$;\n  }\n\n  /** Hide the elements been created (new state)\n   *  Show only created ones.\n   */\n  get createdDeductions(): CompanyDeductionItem[] {\n    return this.editorService.companyDeductionItems\n      .filter(d => !isNewCompanyDeductionItem(d) )\n      .sort((a, b) =>  a.deduction.codeType.localeCompare(b.deduction.codeType));\n  }\n\n  getMenuLabel(di: CompanyDeductionItem): string {\n    const suffix = di.isPreTax ? ' (Pre-Tax)' :  di.isPostTax ? ' (Post-Tax)' : '';\n    return di.deduction.codeType + suffix;\n  }\n\n  /**\n   * Navigate to edit deductions\n   * Retirements and most deductions are single instances: you can only instanciate it once.\n   * But some types of deductions like Miscellaneous with/out Goals can be instanciated\n   * till 5 times. Code is the discriminator of the instances to allow navigate to edit the specific one.\n   */\n  edit(d: CompanyDeductionItem) {\n    this.editorService.command = buildCommandForEdit(d);\n    if (d.isRetirement()) {\n      this.router.navigate(['/employees/company-deductions/retirement']);\n    } else {\n      const code = d.getCode();\n      if (code) {\n        this.router.navigate(['/employees/company-deductions/deduction/' + d.deduction.codeType + '/' + code]);\n      } else {\n        this.router.navigate(['/employees/company-deductions/deduction/' + d.deduction.codeType]);\n      }\n    }\n  }\n  delete(d: CompanyDeductionItem): void {\n    this.editorService.getEmployeesEnrolledInDeduction(d)\n      .pipe(first()).subscribe(affectedEmployees => {\n        this.doDelete(d, affectedEmployees);\n      });\n  }\n  private doDelete(d: CompanyDeductionItem, affectedEmployees: Employee[]): void {\n    const needsConfirmation = affectedEmployees.length > 0;\n    if (needsConfirmation) {\n      this.removeConfirmationModal.show(d.name, affectedEmployees)\n          .pipe(first())\n          .subscribe(result => {\n            if (result) {\n              this.confirmDelete(d);\n            }\n          });\n    } else {\n      this.confirmDelete(d);\n    }\n  }\n  private confirmDelete(d: CompanyDeductionItem): void {\n    this.editorService.delete(d).subscribe(\n      _ => {\n        this.router.navigate(['/employees/company-deductions']);\n      },\n      // TODO: Remove error handling that looks like this\n      // because this does nothing that wasn't done at lower level\n      // THE ONLY REASON to handle error in component is to display something (or swallow error)\n      // JESUS: Please hunt for other examples and fix them.\n      // JESUS: Ask Pedro did he have a specific reason for swallowing error here.\n      error => this.log.error(error)\n    );\n  }\n}\n","import { OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\nimport { CompanyDeductionRemoveComponent } from './company-deduction-remove.component';\nimport { CompanyService } from '@entity';\nimport { buildCommandForEdit, isNewCompanyDeductionItem } from '@shared/deductions';\nimport { LoggerService } from '@core';\nvar CompanyDeductionsTableComponent = /** @class */ (function () {\n    function CompanyDeductionsTableComponent(companyService, editorService, log, router) {\n        this.companyService = companyService;\n        this.editorService = editorService;\n        this.log = log;\n        this.router = router;\n    }\n    CompanyDeductionsTableComponent.prototype.ngOnInit = function () {\n        this.company$ = this.companyService.currentCompany$;\n    };\n    Object.defineProperty(CompanyDeductionsTableComponent.prototype, \"createdDeductions\", {\n        /** Hide the elements been created (new state)\n         *  Show only created ones.\n         */\n        get: function () {\n            return this.editorService.companyDeductionItems\n                .filter(function (d) { return !isNewCompanyDeductionItem(d); })\n                .sort(function (a, b) { return a.deduction.codeType.localeCompare(b.deduction.codeType); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompanyDeductionsTableComponent.prototype.getMenuLabel = function (di) {\n        var suffix = di.isPreTax ? ' (Pre-Tax)' : di.isPostTax ? ' (Post-Tax)' : '';\n        return di.deduction.codeType + suffix;\n    };\n    /**\n     * Navigate to edit deductions\n     * Retirements and most deductions are single instances: you can only instanciate it once.\n     * But some types of deductions like Miscellaneous with/out Goals can be instanciated\n     * till 5 times. Code is the discriminator of the instances to allow navigate to edit the specific one.\n     */\n    CompanyDeductionsTableComponent.prototype.edit = function (d) {\n        this.editorService.command = buildCommandForEdit(d);\n        if (d.isRetirement()) {\n            this.router.navigate(['/employees/company-deductions/retirement']);\n        }\n        else {\n            var code = d.getCode();\n            if (code) {\n                this.router.navigate(['/employees/company-deductions/deduction/' + d.deduction.codeType + '/' + code]);\n            }\n            else {\n                this.router.navigate(['/employees/company-deductions/deduction/' + d.deduction.codeType]);\n            }\n        }\n    };\n    CompanyDeductionsTableComponent.prototype.delete = function (d) {\n        var _this = this;\n        this.editorService.getEmployeesEnrolledInDeduction(d)\n            .pipe(first()).subscribe(function (affectedEmployees) {\n            _this.doDelete(d, affectedEmployees);\n        });\n    };\n    CompanyDeductionsTableComponent.prototype.doDelete = function (d, affectedEmployees) {\n        var _this = this;\n        var needsConfirmation = affectedEmployees.length > 0;\n        if (needsConfirmation) {\n            this.removeConfirmationModal.show(d.name, affectedEmployees)\n                .pipe(first())\n                .subscribe(function (result) {\n                if (result) {\n                    _this.confirmDelete(d);\n                }\n            });\n        }\n        else {\n            this.confirmDelete(d);\n        }\n    };\n    CompanyDeductionsTableComponent.prototype.confirmDelete = function (d) {\n        var _this = this;\n        this.editorService.delete(d).subscribe(function (_) {\n            _this.router.navigate(['/employees/company-deductions']);\n        }, \n        // TODO: Remove error handling that looks like this\n        // because this does nothing that wasn't done at lower level\n        // THE ONLY REASON to handle error in component is to display something (or swallow error)\n        // JESUS: Please hunt for other examples and fix them.\n        // JESUS: Ask Pedro did he have a specific reason for swallowing error here.\n        function (error) { return _this.log.error(error); });\n    };\n    return CompanyDeductionsTableComponent;\n}());\nexport { CompanyDeductionsTableComponent };\n","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\r\nimport { CompanyDeductionItem } from '@shared/deductions';\r\nimport { CompanyDeduction, Deduction, MatchTypes,\r\n         RetirementPlans, RetirementPlanTypes,\r\n         RetirementPlanApply, EmployeeContributionModel\r\n       } from '@model';\r\nimport { Logger } from 'ngrx-data';\r\nimport { WellKnownRoutes } from '@core';\r\n\r\nclass Retirement {\r\n  retirementTypeName: string;\r\n  plan: RetirementPlans;\r\n  planType: RetirementPlanTypes;\r\n  htmlDescription: SafeHtml | null;\r\n  name: string;\r\n  abbreviation: string;\r\n  canChangeName: boolean;\r\n  canChangeAbbreviation: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'sp-company-retirement',\r\n  templateUrl: './company-retirement.component.html'\r\n})\r\nexport class CompanyRetirementComponent implements OnInit {\r\n  RetirementPlans = RetirementPlans;\r\n  RetirementPlanTypes = RetirementPlanTypes;\r\n  RetirementPlanApply = RetirementPlanApply;\r\n  MatchTypes = MatchTypes;\r\n  EmployeeContributionModel = EmployeeContributionModel;\r\n\r\n  vm: Retirement;\r\n  deductions: Deduction[];\r\n  currentDeductionItem: CompanyDeductionItem;\r\n\r\n  isNew = false;\r\n  private cancelSave = false;\r\n\r\n  constructor(\r\n      private editorService: CompanyDeductionEditorService,\r\n      private hostEl: ElementRef,\r\n      private logger: Logger,\r\n      private router: Router,\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.deductions = this.editorService.deductions;\r\n    this.vm = new Retirement();\r\n    this.loadVm();\r\n\r\n    setTimeout(() => this.hostEl.nativeElement.scrollIntoView()); // must delay one tick\r\n  }\r\n\r\n  done(): void {\r\n    this.editorService.endEdit();\r\n    this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n  }\r\n  cancel(): void {\r\n    this.editorService.endEdit();\r\n    this.cancelSave = true;\r\n    this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n  }\r\n  delete() {\r\n    this.editorService.endEdit();\r\n    this.editorService.delete(this.currentDeductionItem).subscribe(\r\n      _ => {},\r\n      error => this.logger.error(error)\r\n    );\r\n    this.router.navigate([ WellKnownRoutes.CompanyDeductions ]);\r\n  }\r\n\r\n  canLeaveAfterSave(): Observable<any> {\r\n    if (this.cancelSave) {\r\n      this.cancelSave = false;\r\n      return of(true);\r\n    }\r\n    return this.save().pipe(map(d => {\r\n      this.editorService.endEdit();\r\n      return true;\r\n    }));\r\n  }\r\n  get showAdditionalPlans(): boolean {\r\n    const vm = this.vm;\r\n    return vm.plan &&\r\n           (vm.planType || vm.plan === RetirementPlans.Plan403B ) && // Has plan and plan type except 403b\r\n           !(vm.plan === RetirementPlans.IRA &&\r\n             vm.planType === RetirementPlanTypes.SepIRA);  // but not for SEP IRA\r\n  }\r\n\r\n  private save(): Observable<any> {\r\n    this.vmToEntity();\r\n    return this.editorService.save();\r\n  }\r\n  private vmToEntity(): void {\r\n    if (!this.currentDeductionItem) {\r\n      return;\r\n    }\r\n    this.currentDeductionItem.name = this.vm.name.trim();\r\n    this.currentDeductionItem.abbreviation = this.vm.abbreviation.trim();\r\n\r\n    const prev = this.currentDeductionItem.companyDeductions[0];\r\n    let target: CompanyDeduction;\r\n    let changedType = false;\r\n    const tid = buildRetirementTypeId(this.vm);\r\n    if (tid !== prev.deductionCodeTypeId) {\r\n      // change type: remove previous and create new one\r\n      prev.isRemoved = true;\r\n      target = this.editorService.createByCodeTypeId(tid);\r\n      this.currentDeductionItem.companyDeductions.push(target);\r\n      changedType = true;\r\n    } else {\r\n      target = prev;\r\n    }\r\n    this.saveRetirementsProperties(target);\r\n  }\r\n\r\n  private saveRetirementsProperties(cd: CompanyDeduction): void {\r\n    cd.description  = this.vm.name;\r\n    cd.abbreviation = this.vm.abbreviation;\r\n  }\r\n\r\n  private loadVm(): void {\r\n    const retirementDeduction = this.editorService.companyDeductionItems.find(\r\n      d => d.deduction.codeGroupId === 1);\r\n\r\n    let cd: CompanyDeductionItem;\r\n    this.isNew = !retirementDeduction;\r\n    if (retirementDeduction) {\r\n      // edit an existing one\r\n      cd = this.editorService.editCompanyDeductionItem(retirementDeduction);\r\n    } else {\r\n      // create new retirement deduction\r\n      const newRetirementType = this.deductions.find(d => d.codeType === '401K');\r\n      cd = this.editorService.create(newRetirementType, '1');\r\n    }\r\n\r\n    const baseDed = cd.companyDeductions[0];\r\n    this.currentDeductionItem = cd;\r\n    this.currentDeductionItem.isDirty = true;\r\n\r\n    this.vm = {\r\n      retirementTypeName: this.vm.retirementTypeName,\r\n      plan: getPlanFrom(baseDed.deductionCodeTypeId),\r\n      planType: getPlanTypeFrom(baseDed.deductionCodeTypeId),\r\n      htmlDescription: cd.deduction.definition,\r\n      name: cd.name || cd.deduction.defaultDescription || '',\r\n      abbreviation: cd.abbreviation || cd.deduction.defaultAbbreviation || '',\r\n      canChangeName: cd.deduction.canChangeDescription,\r\n      canChangeAbbreviation: cd.deduction.canChangeAbbreviation,\r\n    };\r\n  }\r\n\r\n  configureEditorForPlan(): void {\r\n    this.vm.planType = getDefaultPlanTypeForPlan(this.vm.plan);\r\n    this.configureEditor();\r\n  }\r\n\r\n  configureEditor(): void {\r\n    const deduction = this.getDeduction();\r\n    this.setDescriptionPlan(deduction);\r\n  }\r\n\r\n  setDescriptionPlan(deduction: Deduction) {\r\n    if (deduction) {\r\n      this.vm.htmlDescription = deduction.definition;\r\n      this.vm.canChangeName = deduction.canChangeDescription;\r\n      this.vm.canChangeAbbreviation = deduction.canChangeAbbreviation;\r\n\r\n      this.vm.name = (deduction.defaultDescription || 'Deduction 1').trim();\r\n      this.vm.abbreviation = (deduction.defaultAbbreviation || 'RET').trim();\r\n    } else {\r\n      this.vm.htmlDescription = null;\r\n      this.vm.canChangeName = false;\r\n      this.vm.canChangeAbbreviation = false;\r\n      this.vm.name = null;\r\n      this.vm.abbreviation = null;\r\n    }\r\n  }\r\n\r\n  getDeduction(): Deduction {\r\n    if (!this.deductions || this.vm.plan === null) {\r\n      return null;\r\n    }\r\n    if (this.vm.plan === RetirementPlans.Plan403B) {\r\n      const code403 = build403BTypeId(this.vm);\r\n      return this.deductions.find(d => d.codeTypeId === code403);\r\n    }\r\n    if (this.vm.plan === RetirementPlans.IRA) {\r\n      const codeIRA = buildIRATypeId(this.vm);\r\n      return this.deductions.find(d => d.codeTypeId === codeIRA);\r\n    }\r\n    if (this.vm.plan === RetirementPlans.Plan401K) {\r\n      const code401 = build401KTypeId(this.vm);\r\n      return this.deductions.find(d => d.codeTypeId === code401);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction getPlanFrom(codeTypeId: number): RetirementPlans {\r\n  switch (codeTypeId) {\r\n    case 7:\r\n    case 8:\r\n    case 9:\r\n    case 10:\r\n    case 11:\r\n    case 14:\r\n    case 15:\r\n    case 16:\r\n    case 60:\r\n    case 65:\r\n    case 71: return RetirementPlans.Plan401K;\r\n\r\n    case 63:\r\n    case 13: // 'SMPIRA'\r\n    case 17:  return RetirementPlans.IRA;\r\n\r\n    case 12:  return RetirementPlans.Plan403B;\r\n    default:\r\n      throw new Error('codeTypeId not supported:' + codeTypeId);\r\n  }\r\n}\r\n\r\nfunction getPlanTypeFrom(codeTypeId: number): RetirementPlanTypes {\r\n  switch (codeTypeId) {\r\n    case 60:\r\n    case 10: return RetirementPlanTypes.P401KTraditional;\r\n    case 65:\r\n    case 15: return RetirementPlanTypes.P401KSafeHarbor;\r\n    case 71:\r\n    case 19: return RetirementPlanTypes.P401KSimple;\r\n    case 63:\r\n    case 13: return RetirementPlanTypes.SimpleIRA;\r\n    case 17: return RetirementPlanTypes.SepIRA;\r\n    case 12:  // 403B\r\n    case 62:\r\n    default: return null;\r\n  }\r\n}\r\n\r\nfunction buildRetirementTypeId(vm: Retirement): number {\r\n  switch (vm.plan) {\r\n    case RetirementPlans.IRA: return buildIRATypeId(vm);\r\n    case RetirementPlans.Plan403B: return build403BTypeId(vm);\r\n    case RetirementPlans.Plan401K: return build401KTypeId(vm);\r\n    default: return null;\r\n  }\r\n}\r\nfunction buildIRATypeId(vm: Retirement): number {\r\n  /*\r\n    13    Simple IRA\r\n    17    SEP IRA\r\n    63    Simple IRA Catch Up\r\n   */\r\n  switch (vm.planType) {\r\n    case RetirementPlanTypes.SimpleIRA: return 13; // Simple IRA  (overlap with 401K ??? )\r\n    case RetirementPlanTypes.SepIRA: return 17;  // SEP IRA\r\n    default: return null;\r\n  }\r\n}\r\nfunction build403BTypeId(vm: Retirement): number {\r\n  /*\r\n    62  403B Catch Up\r\n    12  403B  (shares name with 401K) ???\r\n    61  401K Tiered Catch Up  (shared with 403B ???? )\r\n   */\r\n  return 12; //  12  403B  (shares name with 401K) ???\r\n}\r\nfunction build401KTypeId(vm: Retirement): number {\r\n  /*\r\n     7  Safe Harbor Roth 401k Match\r\n     8  Safe Harbor Roth 401k NE\r\n     9  Roth 401K Tiered\r\n    10  401K\r\n    11  401K Tiered\r\n  x 12  401K (shared with 403B ???? )\r\n    14  Roth 401K\r\n    15  Safe Harbor 401K\r\n    16  Simple 401K\r\n    18  Safe Harbor 401K (duplicate??)\r\n    19  Simple 401K\r\n\r\n    60  401K Catch Up\r\n    x 61  401K Tiered Catch Up  (shared with 403B ???? )\r\n    64  Roth 401K Catch Up\r\n    65  Safe H 401K Catch Up\r\n    66  Simple 401K Catch Up\r\n    67  Roth 401K Tiered Catch Up\r\n    68  Safe H Roth 401K NE Catchup\r\n    69  Safe H 401K Match Catch Up\r\n    70  Safe H Roth 401K Match Catchup\r\n    71  Simple 401K Catch Up\r\n  */\r\n\r\n  switch (vm.planType) {\r\n    case RetirementPlanTypes.P401KSimple: return 19;\r\n    case RetirementPlanTypes.P401KSafeHarbor: return 15;\r\n    case RetirementPlanTypes.P401KTraditional: return 10;\r\n    default: return null;\r\n  }\r\n}\r\n\r\nfunction getDefaultPlanTypeForPlan(plan: RetirementPlans): RetirementPlanTypes {\r\n  switch (plan) {\r\n    case RetirementPlans.IRA: return RetirementPlanTypes.SimpleIRA;\r\n    case RetirementPlans.Plan403B: return null; // no planType\r\n    case RetirementPlans.Plan401K: return RetirementPlanTypes.P401KTraditional;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import { OnInit, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CompanyDeductionEditorService } from './company-deduction-editor.service';\nimport { MatchTypes, RetirementPlans, RetirementPlanTypes, RetirementPlanApply, EmployeeContributionModel } from '@model';\nimport { Logger } from 'ngrx-data';\nimport { WellKnownRoutes } from '@core';\nvar Retirement = /** @class */ (function () {\n    function Retirement() {\n    }\n    return Retirement;\n}());\nvar CompanyRetirementComponent = /** @class */ (function () {\n    function CompanyRetirementComponent(editorService, hostEl, logger, router) {\n        this.editorService = editorService;\n        this.hostEl = hostEl;\n        this.logger = logger;\n        this.router = router;\n        this.RetirementPlans = RetirementPlans;\n        this.RetirementPlanTypes = RetirementPlanTypes;\n        this.RetirementPlanApply = RetirementPlanApply;\n        this.MatchTypes = MatchTypes;\n        this.EmployeeContributionModel = EmployeeContributionModel;\n        this.isNew = false;\n        this.cancelSave = false;\n    }\n    CompanyRetirementComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.deductions = this.editorService.deductions;\n        this.vm = new Retirement();\n        this.loadVm();\n        setTimeout(function () { return _this.hostEl.nativeElement.scrollIntoView(); }); // must delay one tick\n    };\n    CompanyRetirementComponent.prototype.done = function () {\n        this.editorService.endEdit();\n        this.router.navigate([WellKnownRoutes.CompanyDeductions]);\n    };\n    CompanyRetirementComponent.prototype.cancel = function () {\n        this.editorService.endEdit();\n        this.cancelSave = true;\n        this.router.navigate([WellKnownRoutes.CompanyDeductions]);\n    };\n    CompanyRetirementComponent.prototype.delete = function () {\n        var _this = this;\n        this.editorService.endEdit();\n        this.editorService.delete(this.currentDeductionItem).subscribe(function (_) { }, function (error) { return _this.logger.error(error); });\n        this.router.navigate([WellKnownRoutes.CompanyDeductions]);\n    };\n    CompanyRetirementComponent.prototype.canLeaveAfterSave = function () {\n        var _this = this;\n        if (this.cancelSave) {\n            this.cancelSave = false;\n            return of(true);\n        }\n        return this.save().pipe(map(function (d) {\n            _this.editorService.endEdit();\n            return true;\n        }));\n    };\n    Object.defineProperty(CompanyRetirementComponent.prototype, \"showAdditionalPlans\", {\n        get: function () {\n            var vm = this.vm;\n            return vm.plan &&\n                (vm.planType || vm.plan === RetirementPlans.Plan403B) && // Has plan and plan type except 403b\n                !(vm.plan === RetirementPlans.IRA &&\n                    vm.planType === RetirementPlanTypes.SepIRA); // but not for SEP IRA\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompanyRetirementComponent.prototype.save = function () {\n        this.vmToEntity();\n        return this.editorService.save();\n    };\n    CompanyRetirementComponent.prototype.vmToEntity = function () {\n        if (!this.currentDeductionItem) {\n            return;\n        }\n        this.currentDeductionItem.name = this.vm.name.trim();\n        this.currentDeductionItem.abbreviation = this.vm.abbreviation.trim();\n        var prev = this.currentDeductionItem.companyDeductions[0];\n        var target;\n        var changedType = false;\n        var tid = buildRetirementTypeId(this.vm);\n        if (tid !== prev.deductionCodeTypeId) {\n            // change type: remove previous and create new one\n            prev.isRemoved = true;\n            target = this.editorService.createByCodeTypeId(tid);\n            this.currentDeductionItem.companyDeductions.push(target);\n            changedType = true;\n        }\n        else {\n            target = prev;\n        }\n        this.saveRetirementsProperties(target);\n    };\n    CompanyRetirementComponent.prototype.saveRetirementsProperties = function (cd) {\n        cd.description = this.vm.name;\n        cd.abbreviation = this.vm.abbreviation;\n    };\n    CompanyRetirementComponent.prototype.loadVm = function () {\n        var retirementDeduction = this.editorService.companyDeductionItems.find(function (d) { return d.deduction.codeGroupId === 1; });\n        var cd;\n        this.isNew = !retirementDeduction;\n        if (retirementDeduction) {\n            // edit an existing one\n            cd = this.editorService.editCompanyDeductionItem(retirementDeduction);\n        }\n        else {\n            // create new retirement deduction\n            var newRetirementType = this.deductions.find(function (d) { return d.codeType === '401K'; });\n            cd = this.editorService.create(newRetirementType, '1');\n        }\n        var baseDed = cd.companyDeductions[0];\n        this.currentDeductionItem = cd;\n        this.currentDeductionItem.isDirty = true;\n        this.vm = {\n            retirementTypeName: this.vm.retirementTypeName,\n            plan: getPlanFrom(baseDed.deductionCodeTypeId),\n            planType: getPlanTypeFrom(baseDed.deductionCodeTypeId),\n            htmlDescription: cd.deduction.definition,\n            name: cd.name || cd.deduction.defaultDescription || '',\n            abbreviation: cd.abbreviation || cd.deduction.defaultAbbreviation || '',\n            canChangeName: cd.deduction.canChangeDescription,\n            canChangeAbbreviation: cd.deduction.canChangeAbbreviation,\n        };\n    };\n    CompanyRetirementComponent.prototype.configureEditorForPlan = function () {\n        this.vm.planType = getDefaultPlanTypeForPlan(this.vm.plan);\n        this.configureEditor();\n    };\n    CompanyRetirementComponent.prototype.configureEditor = function () {\n        var deduction = this.getDeduction();\n        this.setDescriptionPlan(deduction);\n    };\n    CompanyRetirementComponent.prototype.setDescriptionPlan = function (deduction) {\n        if (deduction) {\n            this.vm.htmlDescription = deduction.definition;\n            this.vm.canChangeName = deduction.canChangeDescription;\n            this.vm.canChangeAbbreviation = deduction.canChangeAbbreviation;\n            this.vm.name = (deduction.defaultDescription || 'Deduction 1').trim();\n            this.vm.abbreviation = (deduction.defaultAbbreviation || 'RET').trim();\n        }\n        else {\n            this.vm.htmlDescription = null;\n            this.vm.canChangeName = false;\n            this.vm.canChangeAbbreviation = false;\n            this.vm.name = null;\n            this.vm.abbreviation = null;\n        }\n    };\n    CompanyRetirementComponent.prototype.getDeduction = function () {\n        if (!this.deductions || this.vm.plan === null) {\n            return null;\n        }\n        if (this.vm.plan === RetirementPlans.Plan403B) {\n            var code403_1 = build403BTypeId(this.vm);\n            return this.deductions.find(function (d) { return d.codeTypeId === code403_1; });\n        }\n        if (this.vm.plan === RetirementPlans.IRA) {\n            var codeIRA_1 = buildIRATypeId(this.vm);\n            return this.deductions.find(function (d) { return d.codeTypeId === codeIRA_1; });\n        }\n        if (this.vm.plan === RetirementPlans.Plan401K) {\n            var code401_1 = build401KTypeId(this.vm);\n            return this.deductions.find(function (d) { return d.codeTypeId === code401_1; });\n        }\n        return null;\n    };\n    return CompanyRetirementComponent;\n}());\nexport { CompanyRetirementComponent };\nfunction getPlanFrom(codeTypeId) {\n    switch (codeTypeId) {\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 14:\n        case 15:\n        case 16:\n        case 60:\n        case 65:\n        case 71: return RetirementPlans.Plan401K;\n        case 63:\n        case 13: // 'SMPIRA'\n        case 17: return RetirementPlans.IRA;\n        case 12: return RetirementPlans.Plan403B;\n        default:\n            throw new Error('codeTypeId not supported:' + codeTypeId);\n    }\n}\nfunction getPlanTypeFrom(codeTypeId) {\n    switch (codeTypeId) {\n        case 60:\n        case 10: return RetirementPlanTypes.P401KTraditional;\n        case 65:\n        case 15: return RetirementPlanTypes.P401KSafeHarbor;\n        case 71:\n        case 19: return RetirementPlanTypes.P401KSimple;\n        case 63:\n        case 13: return RetirementPlanTypes.SimpleIRA;\n        case 17: return RetirementPlanTypes.SepIRA;\n        case 12: // 403B\n        case 62:\n        default: return null;\n    }\n}\nfunction buildRetirementTypeId(vm) {\n    switch (vm.plan) {\n        case RetirementPlans.IRA: return buildIRATypeId(vm);\n        case RetirementPlans.Plan403B: return build403BTypeId(vm);\n        case RetirementPlans.Plan401K: return build401KTypeId(vm);\n        default: return null;\n    }\n}\nfunction buildIRATypeId(vm) {\n    /*\n      13    Simple IRA\n      17    SEP IRA\n      63    Simple IRA Catch Up\n     */\n    switch (vm.planType) {\n        case RetirementPlanTypes.SimpleIRA: return 13; // Simple IRA  (overlap with 401K ??? )\n        case RetirementPlanTypes.SepIRA: return 17; // SEP IRA\n        default: return null;\n    }\n}\nfunction build403BTypeId(vm) {\n    /*\n      62  403B Catch Up\n      12  403B  (shares name with 401K) ???\n      61  401K Tiered Catch Up  (shared with 403B ???? )\n     */\n    return 12; //  12  403B  (shares name with 401K) ???\n}\nfunction build401KTypeId(vm) {\n    /*\n       7  Safe Harbor Roth 401k Match\n       8  Safe Harbor Roth 401k NE\n       9  Roth 401K Tiered\n      10  401K\n      11  401K Tiered\n    x 12  401K (shared with 403B ???? )\n      14  Roth 401K\n      15  Safe Harbor 401K\n      16  Simple 401K\n      18  Safe Harbor 401K (duplicate??)\n      19  Simple 401K\n  \r\n      60  401K Catch Up\n      x 61  401K Tiered Catch Up  (shared with 403B ???? )\n      64  Roth 401K Catch Up\n      65  Safe H 401K Catch Up\n      66  Simple 401K Catch Up\n      67  Roth 401K Tiered Catch Up\n      68  Safe H Roth 401K NE Catchup\n      69  Safe H 401K Match Catch Up\n      70  Safe H Roth 401K Match Catchup\n      71  Simple 401K Catch Up\n    */\n    switch (vm.planType) {\n        case RetirementPlanTypes.P401KSimple: return 19;\n        case RetirementPlanTypes.P401KSafeHarbor: return 15;\n        case RetirementPlanTypes.P401KTraditional: return 10;\n        default: return null;\n    }\n}\nfunction getDefaultPlanTypeForPlan(plan) {\n    switch (plan) {\n        case RetirementPlans.IRA: return RetirementPlanTypes.SimpleIRA;\n        case RetirementPlans.Plan403B: return null; // no planType\n        case RetirementPlans.Plan401K: return RetirementPlanTypes.P401KTraditional;\n        default:\n            return null;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CompanyDeductionEditorComponent } from './company-deduction-editor.component';\nimport { CompanyDeductionRemoveComponent } from './company-deduction-remove.component';\nimport { CompanyDeductionsContainerComponent } from './company-deductions-container.component';\nimport { CompanyDeductionsGuard } from './company-deductions.guard';\nimport { CompanyDeductionsTableComponent } from './company-deductions-table.component';\nimport { CompanyRetirementComponent } from './company-retirement.component';\nimport { DeductionsCatalogComponent } from './deductions-catalog.component';\nimport { PageLeaveGuard } from '@core/routing-guards';\nimport { SharedModule } from '@shared/shared.module';\n\nexport const routes: Routes = [\n  {\n    // Expected full path: ~/employees/company-deductions\n    path: '',\n    component: CompanyDeductionsContainerComponent,\n    canActivateChild: [CompanyDeductionsGuard],\n    canDeactivate: [PageLeaveGuard],\n    data: { title: 'Company Deductions' },\n    children: [\n      {\n        path: '',\n        component: CompanyDeductionsTableComponent,\n        canDeactivate: [PageLeaveGuard],\n        data: {\n          title: 'Company Deductions',\n          root: true   // root marks the root page to provide info to hide/show deductions-table\n        }\n      },\n      {\n        path: 'retirement',\n        component: CompanyRetirementComponent,\n        canDeactivate: [PageLeaveGuard],\n        data: { title: 'Company Retirement Plan' }\n      },\n      {\n        path: 'deduction/:id/:code', // sample: deduction/Miscellaneous+No+Goal/2\n        component: CompanyDeductionEditorComponent,\n        canDeactivate: [PageLeaveGuard],\n        data: {}\n      },\n      {\n        path: 'deduction/:id', // sample: deduction/Medical\n        component: CompanyDeductionEditorComponent,\n        canDeactivate: [PageLeaveGuard],\n        data: {}\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(routes)],\n  declarations: [\n    CompanyDeductionEditorComponent,\n    CompanyDeductionsContainerComponent,\n    CompanyDeductionsTableComponent,\n    CompanyDeductionRemoveComponent,\n    CompanyRetirementComponent,\n    DeductionsCatalogComponent\n  ]\n})\nexport class CompanyDeductionsModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { DeductionCategory, DeductionTitle, DeductionTitleDictionary } from '@shared/deductions';\r\nimport { dictionaryToArray } from '@core';\r\n\r\n@Component({\r\n  selector: 'sp-deductions-catalog',\r\n  templateUrl: './deductions-catalog.component.html',\r\n})\r\nexport class DeductionsCatalogComponent {\r\n  @Input()\r\n  catalog: DeductionCategory[];\r\n\r\n  @Output() deductionTypeSelected = new EventEmitter<DeductionTitle>();\r\n\r\n  getListOfDeductionTitles(titles: DeductionTitleDictionary): DeductionTitle[] {\r\n    return dictionaryToArray(titles)\r\n            .filter(t => !t.isHidden)\r\n            .sort((a, b) =>  a.order - b.order);\r\n  }\r\n\r\n  selectType(dt: DeductionTitle): void {\r\n    this.deductionTypeSelected.emit(dt);\r\n  }\r\n}\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../shared/accordion/accordion.component.ngfactory\";\nimport * as i3 from \"../../shared/accordion/accordion.component\";\nimport * as i4 from \"./deductions-catalog.component\";\nvar styles_DeductionsCatalogComponent = [];\nvar RenderType_DeductionsCatalogComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_DeductionsCatalogComponent, data: {} });\nexport { RenderType_DeductionsCatalogComponent as RenderType_DeductionsCatalogComponent };\nfunction View_DeductionsCatalogComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"span\", [[\"class\", \"item-available\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.selectType(_v.parent.context.$implicit) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"i\", [[\"class\", \"material-icons icon\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"add\"])), (_l()(), i0.ɵted(3, null, [\" \", \" \"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.label; _ck(_v, 3, 0, currVal_0); }); }\nfunction View_DeductionsCatalogComponent_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"class\", \"item-unavailable\"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.label; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_DeductionsCatalogComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"li\", [[\"class\", \"accordion-menu-item\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_DeductionsCatalogComponent_4)), i0.ɵdid(2, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"], ngIfElse: [1, \"ngIfElse\"] }, null), (_l()(), i0.ɵand(0, [[\"notAvailable\", 2]], null, 0, null, View_DeductionsCatalogComponent_5))], function (_ck, _v) { var currVal_0 = _v.context.$implicit.enabled; var currVal_1 = i0.ɵnov(_v, 3); _ck(_v, 2, 0, currVal_0, currVal_1); }, null); }\nfunction View_DeductionsCatalogComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"sp-accordion\", [], null, [[null, \"expandedChange\"]], function (_v, en, $event) { var ad = true; if ((\"expandedChange\" === en)) {\n        var pd_0 = ((_v.context.$implicit.expanded = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_AccordionComponent_0, i2.RenderType_AccordionComponent)), i0.ɵdid(1, 49152, null, 0, i3.AccordionComponent, [], { title: [0, \"title\"], expanded: [1, \"expanded\"] }, { expandedChange: \"expandedChange\" }), (_l()(), i0.ɵeld(2, 0, null, 0, 2, \"ul\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_DeductionsCatalogComponent_3)), i0.ɵdid(4, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.context.$implicit.category; var currVal_1 = _v.context.$implicit.expanded; _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_2 = _co.getListOfDeductionTitles(_v.context.$implicit.deductionTitles); _ck(_v, 4, 0, currVal_2); }, null); }\nfunction View_DeductionsCatalogComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, null, null, null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_DeductionsCatalogComponent_2)), i0.ɵdid(2, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.catalog; _ck(_v, 2, 0, currVal_0); }, null); }\nexport function View_DeductionsCatalogComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Add Deduction\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_DeductionsCatalogComponent_1)), i0.ɵdid(4, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.catalog; _ck(_v, 4, 0, currVal_0); }, null); }\nexport function View_DeductionsCatalogComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-deductions-catalog\", [], null, null, null, View_DeductionsCatalogComponent_0, RenderType_DeductionsCatalogComponent)), i0.ɵdid(1, 49152, null, 0, i4.DeductionsCatalogComponent, [], null, null)], null, null); }\nvar DeductionsCatalogComponentNgFactory = i0.ɵccf(\"sp-deductions-catalog\", i4.DeductionsCatalogComponent, View_DeductionsCatalogComponent_Host_0, { catalog: \"catalog\" }, { deductionTypeSelected: \"deductionTypeSelected\" }, []);\nexport { DeductionsCatalogComponentNgFactory as DeductionsCatalogComponentNgFactory };\n","<div>\r\n  <h2>Add Deduction</h2>\r\n\r\n  <ng-container *ngIf=\"catalog\">\r\n    <sp-accordion *ngFor=\"let category of catalog\"\r\n                  [title]=\"category.category\"\r\n                  [(expanded)]=\"category.expanded\" >\r\n      <ul>\r\n        <li *ngFor=\"let title of getListOfDeductionTitles(category.deductionTitles)\"\r\n            class=\"accordion-menu-item\">\r\n          <span *ngIf=\"title.enabled; else notAvailable\"\r\n             class=\"item-available\"\r\n             (click)=\"selectType(title)\"\r\n             >\r\n            <i class=\"material-icons icon\">add</i>\r\n            {{ title.label }}\r\n          </span>\r\n          <ng-template #notAvailable>\r\n            <span class=\"item-unavailable\">{{ title.label }}</span>\r\n          </ng-template>\r\n        </li>\r\n      </ul>\r\n    </sp-accordion>\r\n  </ng-container>\r\n</div>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./deductions-catalog.component.ngfactory\";\nimport * as i2 from \"./deductions-catalog.component\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./company-deductions-container.component\";\nimport * as i5 from \"./company-deduction-editor.service\";\nvar styles_CompanyDeductionsContainerComponent = [];\nvar RenderType_CompanyDeductionsContainerComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CompanyDeductionsContainerComponent, data: {} });\nexport { RenderType_CompanyDeductionsContainerComponent as RenderType_CompanyDeductionsContainerComponent };\nexport function View_CompanyDeductionsContainerComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 8, \"div\", [[\"class\", \"static-nav d-flex flex-column\"], [\"id\", \"companyDeductions\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 7, \"div\", [[\"class\", \"layout-split-container\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 2, \"div\", [[\"class\", \"layout-split-menu\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"sp-deductions-catalog\", [], null, [[null, \"deductionTypeSelected\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"deductionTypeSelected\" === en)) {\n        var pd_0 = (_co.onCatalogSelection($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i1.View_DeductionsCatalogComponent_0, i1.RenderType_DeductionsCatalogComponent)), i0.ɵdid(4, 49152, null, 0, i2.DeductionsCatalogComponent, [], { catalog: [0, \"catalog\"] }, { deductionTypeSelected: \"deductionTypeSelected\" }), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"hr\", [[\"class\", \"desktop-hide\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 2, \"div\", [[\"class\", \"layout-split-content\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(7, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i0.ɵdid(8, 212992, [[\"outlet\", 4]], 0, i3.RouterOutlet, [i3.ChildrenOutletContexts, i0.ViewContainerRef, i0.ComponentFactoryResolver, [8, null], i0.ChangeDetectorRef], null, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.vm.catalog; _ck(_v, 4, 0, currVal_0); _ck(_v, 8, 0); }, null); }\nexport function View_CompanyDeductionsContainerComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-company-deductions\", [], null, null, null, View_CompanyDeductionsContainerComponent_0, RenderType_CompanyDeductionsContainerComponent)), i0.ɵdid(1, 114688, null, 0, i4.CompanyDeductionsContainerComponent, [i5.CompanyDeductionEditorService, i3.Router], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar CompanyDeductionsContainerComponentNgFactory = i0.ɵccf(\"sp-company-deductions\", i4.CompanyDeductionsContainerComponent, View_CompanyDeductionsContainerComponent_Host_0, {}, {}, []);\nexport { CompanyDeductionsContainerComponentNgFactory as CompanyDeductionsContainerComponentNgFactory };\n","<div class=\"static-nav d-flex flex-column\" id=\"companyDeductions\">\r\n  <div class=\"layout-split-container\">\r\n\r\n    <div class=\"layout-split-menu\">\r\n      <sp-deductions-catalog [catalog]=\"vm.catalog\"\r\n                             (deductionTypeSelected)=\"onCatalogSelection($event)\">\r\n      </sp-deductions-catalog>\r\n    </div>\r\n\r\n    <hr class=\"desktop-hide\">\r\n\r\n    <div class=\"layout-split-content\">\r\n      <router-outlet #outlet=\"outlet\"></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { from, Observable, Subject } from 'rxjs';\r\n\r\nimport { Employee } from '@app/model';\r\n\r\n@Component({\r\n  selector: 'sp-company-deduction-remove',\r\n  templateUrl: 'company-deduction-remove.component.html'\r\n})\r\nexport class CompanyDeductionRemoveComponent {\r\n  @ViewChild('content') modalContent: ElementRef;\r\n\r\n  deleteConfirmation: '';\r\n\r\n  get isDeleteConfirmed(): boolean {\r\n    return /delete/i.test(this.deleteConfirmation);\r\n  }\r\n  obs = new Observable<boolean>();\r\n  source: Subject<boolean>;\r\n  private modalRef: NgbModalRef;\r\n\r\n  deductionName: string;\r\n  employeeList: Employee[] = [];\r\n\r\n  constructor(private modalService: NgbModal) {\r\n  }\r\n\r\n  show(deductionName: string, employeeList: Employee[]): Observable<boolean> {\r\n    this.deductionName = deductionName;\r\n    this.employeeList = employeeList;\r\n    this.source = new Subject<boolean>();\r\n    this.obs = from(this.source);\r\n    this.modalRef = this.modalService.open(this.modalContent);\r\n    this.modalRef.result.then(res => {\r\n      this.close(res);\r\n      this.modalRef = null;\r\n    });\r\n    return this.obs;\r\n  }\r\n  close(reason: string): void {\r\n    if (reason === 'delete') {\r\n      this.modalRef.close();\r\n      this.source.next(true);\r\n    } else {\r\n      this.modalRef.dismiss();\r\n      this.source.next(false);\r\n    }\r\n  }\r\n}\r\n","import { ElementRef } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { from, Observable, Subject } from 'rxjs';\nvar CompanyDeductionRemoveComponent = /** @class */ (function () {\n    function CompanyDeductionRemoveComponent(modalService) {\n        this.modalService = modalService;\n        this.obs = new Observable();\n        this.employeeList = [];\n    }\n    Object.defineProperty(CompanyDeductionRemoveComponent.prototype, \"isDeleteConfirmed\", {\n        get: function () {\n            return /delete/i.test(this.deleteConfirmation);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompanyDeductionRemoveComponent.prototype.show = function (deductionName, employeeList) {\n        var _this = this;\n        this.deductionName = deductionName;\n        this.employeeList = employeeList;\n        this.source = new Subject();\n        this.obs = from(this.source);\n        this.modalRef = this.modalService.open(this.modalContent);\n        this.modalRef.result.then(function (res) {\n            _this.close(res);\n            _this.modalRef = null;\n        });\n        return this.obs;\n    };\n    CompanyDeductionRemoveComponent.prototype.close = function (reason) {\n        if (reason === 'delete') {\n            this.modalRef.close();\n            this.source.next(true);\n        }\n        else {\n            this.modalRef.dismiss();\n            this.source.next(false);\n        }\n    };\n    return CompanyDeductionRemoveComponent;\n}());\nexport { CompanyDeductionRemoveComponent };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../shared/input/input-text.component.ngfactory\";\nimport * as i3 from \"../../shared/input/input-text.component\";\nimport * as i4 from \"../../shared/input/input-mask-catalog\";\nimport * as i5 from \"../../shared/model.component\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"./company-deduction-remove.component\";\nimport * as i8 from \"@ng-bootstrap/ng-bootstrap\";\nvar styles_CompanyDeductionRemoveComponent = [];\nvar RenderType_CompanyDeductionRemoveComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CompanyDeductionRemoveComponent, data: {} });\nexport { RenderType_CompanyDeductionRemoveComponent as RenderType_CompanyDeductionRemoveComponent };\nfunction View_CompanyDeductionRemoveComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"li\", [], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.context.$implicit.fullName(); _ck(_v, 1, 0, currVal_0); }); }\nfunction View_CompanyDeductionRemoveComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 7, \"div\", [[\"class\", \"modal-header\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 3, \"h4\", [[\"class\", \"modal-title\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"i\", [[\"class\", \"material-icons icon text-danger\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"warning\"])), (_l()(), i0.ɵted(-1, null, [\"Delete Company Deduction\"])), (_l()(), i0.ɵeld(5, 0, null, null, 2, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"type\", \"button\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (_v.context.close('cancel') !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"span\", [[\"aria-hidden\", \"true\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\u00D7\"])), (_l()(), i0.ɵeld(8, 0, null, null, 27, \"div\", [[\"class\", \"p-4\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(9, 0, null, null, 4, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" Are you sure you want to \"])), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"strong\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"delete\"])), (_l()(), i0.ɵted(-1, null, [\" this Company Deduction? \"])), (_l()(), i0.ɵeld(14, 0, null, null, 4, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(15, null, [\"The following \", \" employees are enrolled for the \"])), (_l()(), i0.ɵeld(16, 0, null, null, 1, \"strong\", [], null, null, null, null, null)), (_l()(), i0.ɵted(17, null, [\"\", \"\"])), (_l()(), i0.ɵted(-1, null, [\" deduction:\"])), (_l()(), i0.ɵeld(19, 0, null, null, 2, \"ul\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionRemoveComponent_2)), i0.ɵdid(21, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵeld(22, 0, null, null, 7, \"p\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"This action \"])), (_l()(), i0.ɵeld(24, 0, null, null, 1, \"strong\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"cannot\"])), (_l()(), i0.ɵted(-1, null, [\" be undone and will \"])), (_l()(), i0.ɵeld(27, 0, null, null, 1, \"strong\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"permanently\"])), (_l()(), i0.ɵted(-1, null, [\" delete this deductions and its corresponding information in already enrolled employees.\"])), (_l()(), i0.ɵeld(30, 0, null, null, 5, \"sp-input\", [[\"autofocus\", \"true\"], [\"label\", \"Enter the word 'DELETE' to confirm\"], [\"name\", \"deleteConfirmation\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngModelChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"ngModelChange\" === en)) {\n        var pd_0 = ((_co.deleteConfirmation = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_InputTextComponent_0, i2.RenderType_InputTextComponent)), i0.ɵdid(31, 4440064, null, 0, i3.InputTextComponent, [i4.InputMaskCatalog, i0.ChangeDetectorRef, [2, i5.ModelComponent]], { autofocus: [0, \"autofocus\"], label: [1, \"label\"], name: [2, \"name\"] }, null), i0.ɵprd(1024, null, i6.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.InputTextComponent]), i0.ɵdid(33, 671744, null, 0, i6.NgModel, [[8, null], [8, null], [8, null], [6, i6.NG_VALUE_ACCESSOR]], { name: [0, \"name\"], model: [1, \"model\"] }, { update: \"ngModelChange\" }), i0.ɵprd(2048, null, i6.NgControl, null, [i6.NgModel]), i0.ɵdid(35, 16384, null, 0, i6.NgControlStatus, [[4, i6.NgControl]], null, null), (_l()(), i0.ɵeld(36, 0, null, null, 4, \"div\", [[\"class\", \"modal-footer d-flex\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(37, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-light\"], [\"type\", \"button\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (_v.context.close('cancel') !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"Cancel\"])), (_l()(), i0.ɵeld(39, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary\"], [\"type\", \"button\"]], [[8, \"disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (_v.context.close('delete') !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"Delete\"]))], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.employeeList; _ck(_v, 21, 0, currVal_2); var currVal_10 = \"true\"; var currVal_11 = \"Enter the word 'DELETE' to confirm\"; var currVal_12 = \"deleteConfirmation\"; _ck(_v, 31, 0, currVal_10, currVal_11, currVal_12); var currVal_13 = \"deleteConfirmation\"; var currVal_14 = _co.deleteConfirmation; _ck(_v, 33, 0, currVal_13, currVal_14); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.employeeList.length; _ck(_v, 15, 0, currVal_0); var currVal_1 = _co.deductionName; _ck(_v, 17, 0, currVal_1); var currVal_3 = i0.ɵnov(_v, 35).ngClassUntouched; var currVal_4 = i0.ɵnov(_v, 35).ngClassTouched; var currVal_5 = i0.ɵnov(_v, 35).ngClassPristine; var currVal_6 = i0.ɵnov(_v, 35).ngClassDirty; var currVal_7 = i0.ɵnov(_v, 35).ngClassValid; var currVal_8 = i0.ɵnov(_v, 35).ngClassInvalid; var currVal_9 = i0.ɵnov(_v, 35).ngClassPending; _ck(_v, 30, 0, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9); var currVal_15 = !_co.isDeleteConfirmed; _ck(_v, 39, 0, currVal_15); }); }\nexport function View_CompanyDeductionRemoveComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { modalContent: 0 }), (_l()(), i0.ɵand(0, [[1, 2], [\"content\", 2]], null, 0, null, View_CompanyDeductionRemoveComponent_1))], null, null); }\nexport function View_CompanyDeductionRemoveComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-company-deduction-remove\", [], null, null, null, View_CompanyDeductionRemoveComponent_0, RenderType_CompanyDeductionRemoveComponent)), i0.ɵdid(1, 49152, null, 0, i7.CompanyDeductionRemoveComponent, [i8.NgbModal], null, null)], null, null); }\nvar CompanyDeductionRemoveComponentNgFactory = i0.ɵccf(\"sp-company-deduction-remove\", i7.CompanyDeductionRemoveComponent, View_CompanyDeductionRemoveComponent_Host_0, {}, {}, []);\nexport { CompanyDeductionRemoveComponentNgFactory as CompanyDeductionRemoveComponentNgFactory };\n","<!-- Modal Content Company Deduction Deletion Confirmation -->\r\n<ng-template #content let-cc=\"close('cancel')\" let-cs=\"close('delete')\" let-d=\"dismiss()\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      <i class=\"material-icons icon text-danger\">warning</i>Delete Company Deduction</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"cc\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"p-4\">\r\n    <p>\r\n      Are you sure you want to <strong>delete</strong> this Company Deduction?\r\n    </p>\r\n    <p>The following {{ employeeList.length }} employees are enrolled for the\r\n      <strong>{{ deductionName }}</strong> deduction:</p>\r\n    <ul>\r\n      <li *ngFor=\"let emp of employeeList\">{{ emp.fullName() }}</li>\r\n    </ul>\r\n    <p>This action <strong>cannot</strong> be undone and will\r\n      <strong>permanently</strong> delete this deductions and its corresponding\r\n      information in already enrolled employees.</p>\r\n    <sp-input name=\"deleteConfirmation\" label=\"Enter the word 'DELETE' to confirm\" [(ngModel)]=\"deleteConfirmation\" autofocus=\"true\"></sp-input>\r\n  </div>\r\n  <div class=\"modal-footer d-flex\">\r\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"cc\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"cs\" [disabled]=\"!isDeleteConfirmed\">Delete</button>\r\n  </div>\r\n</ng-template>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../shared/pipes/company-kind.pipe\";\nimport * as i3 from \"./company-deduction-remove.component.ngfactory\";\nimport * as i4 from \"./company-deduction-remove.component\";\nimport * as i5 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i6 from \"./company-deductions-table.component\";\nimport * as i7 from \"../../store/entity/entity-services/company.service\";\nimport * as i8 from \"./company-deduction-editor.service\";\nimport * as i9 from \"../../core/services/logger.service\";\nimport * as i10 from \"@angular/router\";\nvar styles_CompanyDeductionsTableComponent = [];\nvar RenderType_CompanyDeductionsTableComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CompanyDeductionsTableComponent, data: {} });\nexport { RenderType_CompanyDeductionsTableComponent as RenderType_CompanyDeductionsTableComponent };\nfunction View_CompanyDeductionsTableComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 6, null, null, null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 5, \"div\", [[\"class\", \"sp-card sp-card-helper\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 0, \"img\", [[\"height\", \"86px\"], [\"src\", \"/assets/images/icon-placeholder-add.png\"], [\"width\", \"104px\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"mb-2\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"You have no deductions yet.\"])), (_l()(), i0.ɵeld(5, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Select a category from the \\\"Add Deduction\\\" menu and pick a deduction.\"]))], null, null); }\nfunction View_CompanyDeductionsTableComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"class\", \"badge badge-sp badge-complete\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"COMPLETED\"]))], null, null); }\nfunction View_CompanyDeductionsTableComponent_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"class\", \"badge badge-sp badge-inprogress\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"IN PROGRESS\"]))], null, null); }\nfunction View_CompanyDeductionsTableComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 24, \"div\", [[\"class\", \"sp-card link-cursor\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 23, \"div\", [[\"class\", \"sp-card-content\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 9, \"div\", [[\"class\", \"d-flex justify-content-between align-items-center\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"span\", [[\"class\", \"sp-card-header\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\" \", \" \"])), (_l()(), i0.ɵeld(5, 0, null, null, 6, \"div\", [[\"class\", \"sp-card-actions\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 2, \"a\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.edit(_v.context.$implicit) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 1, \"i\", [[\"class\", \"material-icons icon d-inline btn-circle\"], [\"title\", \"Edit\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"edit\"])), (_l()(), i0.ɵeld(9, 0, null, null, 2, \"a\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.delete(_v.context.$implicit) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(10, 0, null, null, 1, \"i\", [[\"class\", \"material-icons icon d-inline btn-circle\"], [\"title\", \"Remove\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"delete_forever\"])), (_l()(), i0.ɵeld(12, 0, null, null, 12, \"div\", [[\"class\", \"d-flex justify-content-between align-items-center mt-1 mobile-stack\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(13, 0, null, null, 7, \"div\", [[\"class\", \"sp-card-subheader mobile-stack\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(14, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(15, null, [\"\", \"\"])), (_l()(), i0.ɵeld(16, 0, null, null, 1, \"span\", [[\"class\", \"mobile-hide\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\u00A0\\u00A0\"])), (_l()(), i0.ɵeld(18, 0, null, null, 2, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(19, 0, null, null, 1, \"i\", [], null, null, null, null, null)), (_l()(), i0.ɵted(20, null, [\"\", \"\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionsTableComponent_4)), i0.ɵdid(22, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionsTableComponent_5)), i0.ɵdid(24, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var currVal_3 = _v.context.$implicit.isCompleted; _ck(_v, 22, 0, currVal_3); var currVal_4 = !_v.context.$implicit.isCompleted; _ck(_v, 24, 0, currVal_4); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.getMenuLabel(_v.context.$implicit); _ck(_v, 4, 0, currVal_0); var currVal_1 = _v.context.$implicit.name; _ck(_v, 15, 0, currVal_1); var currVal_2 = _v.context.$implicit.abbreviation; _ck(_v, 20, 0, currVal_2); }); }\nfunction View_CompanyDeductionsTableComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionsTableComponent_3)), i0.ɵdid(2, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.createdDeductions; _ck(_v, 2, 0, currVal_0); }, null); }\nexport function View_CompanyDeductionsTableComponent_0(_l) { return i0.ɵvid(0, [i0.ɵpid(0, i2.CompanyKindPipe, []), i0.ɵqud(402653184, 1, { removeConfirmationModal: 0 }), (_l()(), i0.ɵeld(2, 0, null, null, 3, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(3, null, [\"\", \" Deductions\"])), i0.ɵpid(131072, i1.AsyncPipe, [i0.ChangeDetectorRef]), i0.ɵppd(5, 1), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionsTableComponent_1)), i0.ɵdid(7, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionsTableComponent_2)), i0.ɵdid(9, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(10, 0, null, null, 1, \"sp-company-deduction-remove\", [], null, null, null, i3.View_CompanyDeductionRemoveComponent_0, i3.RenderType_CompanyDeductionRemoveComponent)), i0.ɵdid(11, 49152, [[1, 4], [\"removeConfirmation\", 4]], 0, i4.CompanyDeductionRemoveComponent, [i5.NgbModal], null, null)], function (_ck, _v) { var _co = _v.component; var currVal_1 = (_co.createdDeductions.length === 0); _ck(_v, 7, 0, currVal_1); var currVal_2 = (_co.createdDeductions.length > 0); _ck(_v, 9, 0, currVal_2); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵunv(_v, 3, 0, _ck(_v, 5, 0, i0.ɵnov(_v, 0), i0.ɵunv(_v, 3, 0, i0.ɵnov(_v, 4).transform(_co.company$)))); _ck(_v, 3, 0, currVal_0); }); }\nexport function View_CompanyDeductionsTableComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-company-deductions-table\", [], null, null, null, View_CompanyDeductionsTableComponent_0, RenderType_CompanyDeductionsTableComponent)), i0.ɵdid(1, 114688, null, 0, i6.CompanyDeductionsTableComponent, [i7.CompanyService, i8.CompanyDeductionEditorService, i9.LoggerService, i10.Router], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar CompanyDeductionsTableComponentNgFactory = i0.ɵccf(\"sp-company-deductions-table\", i6.CompanyDeductionsTableComponent, View_CompanyDeductionsTableComponent_Host_0, {}, {}, []);\nexport { CompanyDeductionsTableComponentNgFactory as CompanyDeductionsTableComponentNgFactory };\n","<h2>{{ company$ | async | companyKind }} Deductions</h2>\n\n<ng-container *ngIf=\"createdDeductions.length === 0\">\n  <div class=\"sp-card sp-card-helper\">\n    <img src=\"/assets/images/icon-placeholder-add.png\" height=\"86px\" width=\"104px\">\n    <span class=\"mb-2\">You have no deductions yet.</span>\n    <span>Select a category from the \"Add Deduction\" menu and pick a deduction.</span>\n  </div>\n</ng-container>\n\n<div *ngIf=\"createdDeductions.length > 0\">\n  <div *ngFor=\"let di of createdDeductions\" class=\"sp-card link-cursor\">\n    <div class=\"sp-card-content\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n        <span class=\"sp-card-header\">\n          {{ getMenuLabel(di) }}\n        </span>\n\n        <div class=\"sp-card-actions\">\n          <a (click)=\"edit(di)\">\n            <i class=\"material-icons icon d-inline btn-circle\" title=\"Edit\">edit</i>\n          </a>\n          <a (click)=\"delete(di)\">\n            <i class=\"material-icons icon d-inline btn-circle\" title=\"Remove\">delete_forever</i>\n          </a>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between align-items-center mt-1 mobile-stack\">\n        <div class=\"sp-card-subheader mobile-stack\">\n          <span>{{ di.name }}</span>\n          <span class=\"mobile-hide\">&nbsp;&nbsp;</span>\n          <span><i>{{ di.abbreviation }}</i></span>\n        </div>\n\n        <span *ngIf=\"di.isCompleted\" class=\"badge badge-sp badge-complete\">COMPLETED</span>\n        <span *ngIf=\"!di.isCompleted\" class=\"badge badge-sp badge-inprogress\">IN PROGRESS</span>\n      </div>\n    </div>\n  </div>\n</div>\n\n<sp-company-deduction-remove #removeConfirmation>\n</sp-company-deduction-remove>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/radio-group/radio-group.component.ngfactory\";\nimport * as i2 from \"../../shared/radio-group/radio-group.component\";\nimport * as i3 from \"../../shared/model.component\";\nimport * as i4 from \"../../shared/radio-group/radio-button.component.ngfactory\";\nimport * as i5 from \"../../shared/radio-group/radio-button.component\";\nimport * as i6 from \"../../shared/read-more/read-more.component.ngfactory\";\nimport * as i7 from \"../../shared/read-more/read-more.component\";\nimport * as i8 from \"@angular/platform-browser\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"../../shared/input/input-text.component.ngfactory\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"../../shared/input/input-text.component\";\nimport * as i13 from \"../../shared/input/input-mask-catalog\";\nimport * as i14 from \"../../shared/model.component.ngfactory\";\nimport * as i15 from \"./company-deductions-table.component.ngfactory\";\nimport * as i16 from \"./company-deductions-table.component\";\nimport * as i17 from \"../../store/entity/entity-services/company.service\";\nimport * as i18 from \"./company-deduction-editor.service\";\nimport * as i19 from \"../../core/services/logger.service\";\nimport * as i20 from \"@angular/router\";\nimport * as i21 from \"./company-retirement.component\";\nimport * as i22 from \"ngrx-data\";\nvar styles_CompanyRetirementComponent = [];\nvar RenderType_CompanyRetirementComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CompanyRetirementComponent, data: {} });\nexport { RenderType_CompanyRetirementComponent as RenderType_CompanyRetirementComponent };\nfunction View_CompanyRetirementComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 10, \"sp-radio-group\", [[\"label\", \"Plan Type\"], [\"name\", \"planTypeIRA\"], [\"propertyName\", \"planType\"], [\"tooltip\", \"true\"]], null, [[null, \"change\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"change\" === en)) {\n        var pd_0 = (_co.configureEditor() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i1.View_RadioGroupComponent_0, i1.RenderType_RadioGroupComponent)), i0.ɵdid(1, 114688, null, 1, i2.RadioGroupComponent, [i0.Renderer2, i0.ElementRef, i0.ViewContainerRef, [2, i3.ModelComponent]], { label: [0, \"label\"], name: [1, \"name\"], propertyName: [2, \"propertyName\"], tooltip: [3, \"tooltip\"] }, { change: \"change\" }), i0.ɵqud(603979776, 2, { radioButtons: 1 }), (_l()(), i0.ɵeld(3, 0, null, 0, 1, \"span\", [[\"class\", \"label-tooltip\"], [\"tooltipText\", \"\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" Select the Plan Type for IRA. SEP IRA apply for self-employed only. \"])), (_l()(), i0.ɵeld(5, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"ptSimpleIRA\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(6, 49152, [[2, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Simple IRA\"])), (_l()(), i0.ɵeld(8, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"ptSepIRA\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(9, 49152, [[2, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"SEP IRA\"])), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"Plan Type\"; var currVal_1 = \"planTypeIRA\"; var currVal_2 = \"planType\"; var currVal_3 = \"true\"; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3); var currVal_4 = _co.RetirementPlanTypes.SimpleIRA; _ck(_v, 6, 0, currVal_4); var currVal_5 = _co.RetirementPlanTypes.SepIRA; _ck(_v, 9, 0, currVal_5); }, null); }\nfunction View_CompanyRetirementComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 13, \"sp-radio-group\", [[\"label\", \"Plan Type\"], [\"name\", \"planType\"], [\"propertyName\", \"planType\"], [\"tooltip\", \"true\"]], null, [[null, \"change\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"change\" === en)) {\n        var pd_0 = (_co.configureEditor() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i1.View_RadioGroupComponent_0, i1.RenderType_RadioGroupComponent)), i0.ɵdid(1, 114688, null, 1, i2.RadioGroupComponent, [i0.Renderer2, i0.ElementRef, i0.ViewContainerRef, [2, i3.ModelComponent]], { label: [0, \"label\"], name: [1, \"name\"], propertyName: [2, \"propertyName\"], tooltip: [3, \"tooltip\"] }, { change: \"change\" }), i0.ɵqud(603979776, 3, { radioButtons: 1 }), (_l()(), i0.ɵeld(3, 0, null, 0, 1, \"span\", [[\"class\", \"label-tooltip\"], [\"tooltipText\", \"\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" Select the Plan Type. \"])), (_l()(), i0.ɵeld(5, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"ptTraditional\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(6, 49152, [[3, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Traditional\"])), (_l()(), i0.ɵeld(8, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"ptSafeHarbor\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(9, 49152, [[3, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Safe Harbor\"])), (_l()(), i0.ɵeld(11, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"ptSimple\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(12, 49152, [[3, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Simple\"])), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"Plan Type\"; var currVal_1 = \"planType\"; var currVal_2 = \"planType\"; var currVal_3 = \"true\"; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3); var currVal_4 = _co.RetirementPlanTypes.P401KTraditional; _ck(_v, 6, 0, currVal_4); var currVal_5 = _co.RetirementPlanTypes.P401KSafeHarbor; _ck(_v, 9, 0, currVal_5); var currVal_6 = _co.RetirementPlanTypes.P401KSimple; _ck(_v, 12, 0, currVal_6); }, null); }\nfunction View_CompanyRetirementComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, null, null, null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, \"div\", [[\"class\", \"tax-item-description\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"sp-read-more\", [[\"hideSeeLess\", \"true\"]], null, null, null, i6.View_ReadMoreComponent_0, i6.RenderType_ReadMoreComponent)), i0.ɵdid(3, 114688, null, 0, i7.ReadMoreComponent, [i8.DomSanitizer], { hideSeeLess: [0, \"hideSeeLess\"], description: [1, \"description\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"true\"; var currVal_1 = _co.vm.htmlDescription; _ck(_v, 3, 0, currVal_0, currVal_1); }, null); }\nfunction View_CompanyRetirementComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 18, null, null, null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyRetirementComponent_2)), i0.ɵdid(2, 16384, null, 0, i9.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyRetirementComponent_3)), i0.ɵdid(4, 16384, null, 0, i9.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyRetirementComponent_4)), i0.ɵdid(6, 16384, null, 0, i9.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(7, 0, null, null, 6, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(8, 0, null, null, 2, \"sp-input\", [[\"label\", \"Deduction Name\"], [\"modelType\", \"Retirement\"], [\"propertyName\", \"name\"]], null, null, null, i10.View_InputTextComponent_0, i10.RenderType_InputTextComponent)), i0.ɵprd(5120, null, i11.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i12.InputTextComponent]), i0.ɵdid(10, 4440064, null, 0, i12.InputTextComponent, [i13.InputMaskCatalog, i0.ChangeDetectorRef, [2, i3.ModelComponent]], { disabled: [0, \"disabled\"], label: [1, \"label\"], model: [2, \"model\"], modelType: [3, \"modelType\"], propertyName: [4, \"propertyName\"] }, null), (_l()(), i0.ɵeld(11, 0, null, null, 2, \"sp-input\", [[\"class\", \"input-abbreviation\"], [\"label\", \"Deduction Abbreviation\"], [\"modelType\", \"Retirement\"], [\"propertyName\", \"abbreviation\"]], null, null, null, i10.View_InputTextComponent_0, i10.RenderType_InputTextComponent)), i0.ɵprd(5120, null, i11.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i12.InputTextComponent]), i0.ɵdid(13, 4440064, null, 0, i12.InputTextComponent, [i13.InputMaskCatalog, i0.ChangeDetectorRef, [2, i3.ModelComponent]], { disabled: [0, \"disabled\"], label: [1, \"label\"], model: [2, \"model\"], modelType: [3, \"modelType\"], propertyName: [4, \"propertyName\"] }, null), (_l()(), i0.ɵeld(14, 0, null, null, 4, \"div\", [[\"class\", \"d-flex mt-4 mb-4 justify-content-end\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(15, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-light mr-3\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.cancel() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"Cancel\"])), (_l()(), i0.ɵeld(17, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.done() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(18, null, [\"\", \"\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.vm.plan === _co.RetirementPlans.IRA); _ck(_v, 2, 0, currVal_0); var currVal_1 = (_co.vm.plan === _co.RetirementPlans.Plan401K); _ck(_v, 4, 0, currVal_1); var currVal_2 = _co.vm.htmlDescription; _ck(_v, 6, 0, currVal_2); var currVal_3 = !_co.vm.canChangeName; var currVal_4 = \"Deduction Name\"; var currVal_5 = _co.vm; var currVal_6 = \"Retirement\"; var currVal_7 = \"name\"; _ck(_v, 10, 0, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7); var currVal_8 = !_co.vm.canChangeAbbreviation; var currVal_9 = \"Deduction Abbreviation\"; var currVal_10 = _co.vm; var currVal_11 = \"Retirement\"; var currVal_12 = \"abbreviation\"; _ck(_v, 13, 0, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12); }, function (_ck, _v) { var _co = _v.component; var currVal_13 = (_co.isNew ? \"Add\" : \"Update\"); _ck(_v, 18, 0, currVal_13); }); }\nexport function View_CompanyRetirementComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 24, \"div\", [[\"class\", \"tax-item-form deduction-retirement\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 5, \"div\", [[\"class\", \"tax-item-header d-flex justify-content-between align-items-center\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Retirement Plan\"])), (_l()(), i0.ɵeld(4, 0, null, null, 2, \"a\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.done() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 1, \"i\", [[\"class\", \"material-icons icon btn-circle\"], [\"title\", \"Close\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"close\"])), (_l()(), i0.ɵeld(7, 0, null, null, 17, \"sp-model\", [[\"modelType\", \"Retirement\"]], null, null, null, i14.View_ModelComponent_0, i14.RenderType_ModelComponent)), i0.ɵdid(8, 573440, null, 0, i3.ModelComponent, [], { model: [0, \"model\"], modelType: [1, \"modelType\"] }, null), (_l()(), i0.ɵeld(9, 16777216, null, 0, 13, \"sp-radio-group\", [[\"label\", \"Retirement Plan Selecction\"], [\"name\", \"plan\"], [\"propertyName\", \"plan\"], [\"tooltip\", \"true\"]], null, [[null, \"change\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"change\" === en)) {\n        var pd_0 = (_co.configureEditorForPlan() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i1.View_RadioGroupComponent_0, i1.RenderType_RadioGroupComponent)), i0.ɵdid(10, 114688, null, 1, i2.RadioGroupComponent, [i0.Renderer2, i0.ElementRef, i0.ViewContainerRef, [2, i3.ModelComponent]], { label: [0, \"label\"], name: [1, \"name\"], propertyName: [2, \"propertyName\"], tooltip: [3, \"tooltip\"] }, { change: \"change\" }), i0.ɵqud(603979776, 1, { radioButtons: 1 }), (_l()(), i0.ɵeld(12, 0, null, 0, 1, \"span\", [[\"class\", \"label-tooltip\"], [\"tooltipText\", \"\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" Select the Retirement Plan your company offers to your employees. \"])), (_l()(), i0.ɵeld(14, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"planIRA\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(15, 49152, [[1, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"IRA\"])), (_l()(), i0.ɵeld(17, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"plan401K\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(18, 49152, [[1, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"401(k)\"])), (_l()(), i0.ɵeld(20, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"plan403b\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(21, 49152, [[1, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"403(b)\"])), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_CompanyRetirementComponent_1)), i0.ɵdid(24, 16384, null, 0, i9.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(25, 0, null, null, 1, \"sp-company-deductions-table\", [], null, null, null, i15.View_CompanyDeductionsTableComponent_0, i15.RenderType_CompanyDeductionsTableComponent)), i0.ɵdid(26, 114688, null, 0, i16.CompanyDeductionsTableComponent, [i17.CompanyService, i18.CompanyDeductionEditorService, i19.LoggerService, i20.Router], null, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.vm; var currVal_1 = \"Retirement\"; _ck(_v, 8, 0, currVal_0, currVal_1); var currVal_2 = \"Retirement Plan Selecction\"; var currVal_3 = \"plan\"; var currVal_4 = \"plan\"; var currVal_5 = \"true\"; _ck(_v, 10, 0, currVal_2, currVal_3, currVal_4, currVal_5); var currVal_6 = _co.RetirementPlans.IRA; _ck(_v, 15, 0, currVal_6); var currVal_7 = _co.RetirementPlans.Plan401K; _ck(_v, 18, 0, currVal_7); var currVal_8 = _co.RetirementPlans.Plan403B; _ck(_v, 21, 0, currVal_8); var currVal_9 = _co.vm.plan; _ck(_v, 24, 0, currVal_9); _ck(_v, 26, 0); }, null); }\nexport function View_CompanyRetirementComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-company-retirement\", [], null, null, null, View_CompanyRetirementComponent_0, RenderType_CompanyRetirementComponent)), i0.ɵdid(1, 114688, null, 0, i21.CompanyRetirementComponent, [i18.CompanyDeductionEditorService, i0.ElementRef, i22.Logger, i20.Router], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar CompanyRetirementComponentNgFactory = i0.ɵccf(\"sp-company-retirement\", i21.CompanyRetirementComponent, View_CompanyRetirementComponent_Host_0, {}, {}, []);\nexport { CompanyRetirementComponentNgFactory as CompanyRetirementComponentNgFactory };\n","<div class=\"tax-item-form deduction-retirement\">\r\n  <div class=\"tax-item-header d-flex justify-content-between align-items-center\">\r\n    <h2>Retirement Plan</h2>\r\n    <a (click)=\"done()\"><i title=\"Close\"\r\n      class=\"material-icons icon btn-circle\">close</i></a>\r\n  </div>\r\n\r\n  <sp-model [model]=\"vm\" modelType=\"Retirement\">\r\n\r\n    <sp-radio-group name=\"plan\" propertyName=\"plan\"\r\n                    (change)=\"configureEditorForPlan()\"\r\n                    label=\"Retirement Plan Selecction\" tooltip=\"true\">\r\n      <span tooltipText class=\"label-tooltip\">\r\n        Select the Retirement Plan your company offers to your employees.\r\n      </span>\r\n      <sp-radio-button id=\"planIRA\" [value]=\"RetirementPlans.IRA\">IRA</sp-radio-button>\r\n      <sp-radio-button id=\"plan401K\" [value]=\"RetirementPlans.Plan401K\">401(k)</sp-radio-button>\r\n      <sp-radio-button id=\"plan403b\" [value]=\"RetirementPlans.Plan403B\">403(b)</sp-radio-button>\r\n    </sp-radio-group>\r\n\r\n    <ng-container *ngIf=\"vm.plan\">\r\n\r\n      <sp-radio-group *ngIf=\"vm.plan === RetirementPlans.IRA\"\r\n            name=\"planTypeIRA\" propertyName=\"planType\" label=\"Plan Type\"\r\n            tooltip=\"true\" (change)=\"configureEditor()\">\r\n        <span tooltipText class=\"label-tooltip\">\r\n          Select the Plan Type for IRA. SEP IRA apply for self-employed only.\r\n        </span>\r\n        <sp-radio-button id=\"ptSimpleIRA\" [value]=\"RetirementPlanTypes.SimpleIRA\">Simple IRA</sp-radio-button>\r\n        <sp-radio-button id=\"ptSepIRA\" [value]=\"RetirementPlanTypes.SepIRA\">SEP IRA</sp-radio-button>\r\n      </sp-radio-group>\r\n\r\n      <sp-radio-group *ngIf=\"vm.plan === RetirementPlans.Plan401K\"\r\n                name=\"planType\" propertyName=\"planType\" label=\"Plan Type\"\r\n                (change)=\"configureEditor()\"\r\n                tooltip=\"true\">\r\n        <span tooltipText class=\"label-tooltip\">\r\n          Select the Plan Type.\r\n        </span>\r\n        <sp-radio-button id=\"ptTraditional\" [value]=\"RetirementPlanTypes.P401KTraditional\">Traditional</sp-radio-button>\r\n        <sp-radio-button id=\"ptSafeHarbor\" [value]=\"RetirementPlanTypes.P401KSafeHarbor\">Safe Harbor</sp-radio-button>\r\n        <sp-radio-button id=\"ptSimple\" [value]=\"RetirementPlanTypes.P401KSimple\">Simple</sp-radio-button>\r\n      </sp-radio-group>\r\n\r\n      <ng-container *ngIf=\"vm.htmlDescription\">\r\n        <div class=\"tax-item-description\">\r\n          <sp-read-more [description]=\"vm.htmlDescription\" hideSeeLess=\"true\">\r\n          </sp-read-more>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <div>\r\n        <sp-input [model]=\"vm\" modelType=\"Retirement\" propertyName=\"name\" label=\"Deduction Name\"\r\n                 [disabled]=\"!vm.canChangeName\">\r\n        </sp-input>\r\n\r\n        <sp-input [model]=\"vm\" modelType=\"Retirement\" propertyName=\"abbreviation\" label=\"Deduction Abbreviation\"\r\n                  class=\"input-abbreviation\"\r\n                  [disabled]=\"!vm.canChangeAbbreviation\">\r\n        </sp-input>\r\n      </div>\r\n\r\n      <div class=\"d-flex mt-4 mb-4 justify-content-end\">\r\n        <button (click)=\"cancel()\" class=\"btn btn-light mr-3\">Cancel</button>\r\n        <button (click)=\"done()\" class=\"btn btn-primary\">{{ isNew ? 'Add' : 'Update' }}</button>\r\n      </div>\r\n\r\n    </ng-container>\r\n\r\n  </sp-model>\r\n</div>\r\n\r\n<!-- Always present at bottom -->\r\n<sp-company-deductions-table></sp-company-deductions-table>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../input/input-text.component.ngfactory\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../input/input-text.component\";\nimport * as i4 from \"../input/input-mask-catalog\";\nimport * as i5 from \"../model.component\";\nimport * as i6 from \"../model.component.ngfactory\";\nimport * as i7 from \"../radio-group/radio-group.component.ngfactory\";\nimport * as i8 from \"../radio-group/radio-group.component\";\nimport * as i9 from \"../radio-group/radio-button.component.ngfactory\";\nimport * as i10 from \"../radio-group/radio-button.component\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"./amount-or-percent-value.component\";\nvar styles_AmountOrPercentValueComponent = [];\nvar RenderType_AmountOrPercentValueComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_AmountOrPercentValueComponent, data: {} });\nexport { RenderType_AmountOrPercentValueComponent as RenderType_AmountOrPercentValueComponent };\nfunction View_AmountOrPercentValueComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"sp-input\", [[\"class\", \"aop-value\"], [\"name\", \"iValue\"]], null, [[null, \"blur\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"blur\" === en)) {\n        var pd_0 = (_co.setValue(i0.ɵnov(_v, 2).getValue()) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i1.View_InputTextComponent_0, i1.RenderType_InputTextComponent)), i0.ɵprd(5120, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.InputTextComponent]), i0.ɵdid(2, 4440064, [[\"inp\", 4]], 0, i3.InputTextComponent, [i4.InputMaskCatalog, i0.ChangeDetectorRef, [2, i5.ModelComponent]], { name: [0, \"name\"], propertyName: [1, \"propertyName\"], maskType: [2, \"maskType\"] }, { blur: \"blur\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"iValue\"; var currVal_1 = _co.propertyNameValue; var currVal_2 = (_co.model[_co.isAmountPropertyName] ? \"currency\" : \"percent\"); _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2); }, null); }\nexport function View_AmountOrPercentValueComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 14, \"sp-model\", [], null, null, null, i6.View_ModelComponent_0, i6.RenderType_ModelComponent)), i0.ɵdid(1, 573440, null, 0, i5.ModelComponent, [], { model: [0, \"model\"] }, null), (_l()(), i0.ɵeld(2, 0, null, 0, 12, \"div\", [[\"class\", \"d-flex\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 9, \"div\", [[\"class\", \"amount-or-percent-type\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 16777216, null, null, 8, \"sp-radio-group\", [[\"class\", \"select-indicator-off\"], [\"name\", \"matchPayType\"]], null, null, null, i7.View_RadioGroupComponent_0, i7.RenderType_RadioGroupComponent)), i0.ɵdid(5, 114688, null, 1, i8.RadioGroupComponent, [i0.Renderer2, i0.ElementRef, i0.ViewContainerRef, [2, i5.ModelComponent]], { name: [0, \"name\"], propertyName: [1, \"propertyName\"] }, null), i0.ɵqud(603979776, 1, { radioButtons: 1 }), (_l()(), i0.ɵeld(7, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"rIsAmount\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.setIsAmount(true) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i9.View_RadioButtonComponent_0, i9.RenderType_RadioButtonComponent)), i0.ɵdid(8, 49152, [[1, 4]], 0, i10.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"$\"])), (_l()(), i0.ɵeld(10, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"rIsPercent\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.setIsAmount(false) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i9.View_RadioButtonComponent_0, i9.RenderType_RadioButtonComponent)), i0.ɵdid(11, 49152, [[1, 4]], 0, i10.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"%\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_AmountOrPercentValueComponent_1)), i0.ɵdid(14, 16384, null, 0, i11.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.model; _ck(_v, 1, 0, currVal_0); var currVal_1 = \"matchPayType\"; var currVal_2 = _co.isAmountPropertyName; _ck(_v, 5, 0, currVal_1, currVal_2); var currVal_3 = true; _ck(_v, 8, 0, currVal_3); var currVal_4 = false; _ck(_v, 11, 0, currVal_4); var currVal_5 = (((_co.model && _co.isAmountPropertyName) && (_co.model[_co.isAmountPropertyName] !== undefined)) && (_co.model[_co.isAmountPropertyName] !== null)); _ck(_v, 14, 0, currVal_5); }, null); }\nexport function View_AmountOrPercentValueComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-amount-or-percent-value\", [], null, null, null, View_AmountOrPercentValueComponent_0, RenderType_AmountOrPercentValueComponent)), i0.ɵdid(1, 114688, null, 0, i12.AmountOrPercentValueComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar AmountOrPercentValueComponentNgFactory = i0.ɵccf(\"sp-amount-or-percent-value\", i12.AmountOrPercentValueComponent, View_AmountOrPercentValueComponent_Host_0, { model: \"model\", isAmountPropertyName: \"isAmountPropertyName\", propertyNameValue: \"propertyNameValue\" }, { isAmountChange: \"isAmountChange\", valueChange: \"valueChange\" }, []);\nexport { AmountOrPercentValueComponentNgFactory as AmountOrPercentValueComponentNgFactory };\n","<sp-model [model]=\"model\">\r\n  <div class=\"d-flex\">\r\n    <div class=\"amount-or-percent-type\">\r\n      <sp-radio-group name=\"matchPayType\" [propertyName]=\"isAmountPropertyName\" class=\"select-indicator-off\">\r\n        <sp-radio-button id=\"rIsAmount\" (click)=\"setIsAmount(true)\" [value]=\"true\">$</sp-radio-button>\r\n        <sp-radio-button id=\"rIsPercent\" (click)=\"setIsAmount(false)\" [value]=\"false\">%</sp-radio-button>\r\n      </sp-radio-group>\r\n    </div>\r\n    <sp-input #inp *ngIf=\"model && isAmountPropertyName &&\r\n                     model[isAmountPropertyName] !== undefined &&\r\n                     model[isAmountPropertyName] !== null\"\r\n              name=\"iValue\" [propertyName]=\"propertyNameValue\"\r\n              [maskType]=\"model[isAmountPropertyName] ? 'currency' : 'percent'\"\r\n              (blur)=\"setValue(inp.getValue())\"\r\n              class=\"aop-value\">\r\n    </sp-input>\r\n  </div>\r\n</sp-model>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/radio-group/radio-group.component.ngfactory\";\nimport * as i2 from \"../../shared/radio-group/radio-group.component\";\nimport * as i3 from \"../../shared/model.component\";\nimport * as i4 from \"../../shared/radio-group/radio-button.component.ngfactory\";\nimport * as i5 from \"../../shared/radio-group/radio-button.component\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../shared/read-more/read-more.component.ngfactory\";\nimport * as i8 from \"../../shared/read-more/read-more.component\";\nimport * as i9 from \"@angular/platform-browser\";\nimport * as i10 from \"../../shared/input/input-text.component.ngfactory\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"../../shared/input/input-text.component\";\nimport * as i13 from \"../../shared/input/input-mask-catalog\";\nimport * as i14 from \"../../shared/amount-or-percent-value/amount-or-percent-value.component.ngfactory\";\nimport * as i15 from \"../../shared/amount-or-percent-value/amount-or-percent-value.component\";\nimport * as i16 from \"./company-deductions-table.component.ngfactory\";\nimport * as i17 from \"./company-deductions-table.component\";\nimport * as i18 from \"../../store/entity/entity-services/company.service\";\nimport * as i19 from \"./company-deduction-editor.service\";\nimport * as i20 from \"../../core/services/logger.service\";\nimport * as i21 from \"@angular/router\";\nimport * as i22 from \"./company-deduction-editor.component\";\nvar styles_CompanyDeductionEditorComponent = [];\nvar RenderType_CompanyDeductionEditorComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CompanyDeductionEditorComponent, data: {} });\nexport { RenderType_CompanyDeductionEditorComponent as RenderType_CompanyDeductionEditorComponent };\nfunction View_CompanyDeductionEditorComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 11, null, null, null, null, null, null, null)), (_l()(), i0.ɵeld(1, 16777216, null, null, 10, \"sp-radio-group\", [[\"label\", \"Deduction mode\"], [\"modelType\", \"DeductionViewModel\"], [\"name\", \"planTaxOptionCode\"], [\"propertyName\", \"planTaxOptionCode\"], [\"tooltip\", \"true\"]], null, [[null, \"change\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"change\" === en)) {\n        var pd_0 = (_co.updateDescription(_co.vm.planTaxOptionCode) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i1.View_RadioGroupComponent_0, i1.RenderType_RadioGroupComponent)), i0.ɵdid(2, 114688, null, 1, i2.RadioGroupComponent, [i0.Renderer2, i0.ElementRef, i0.ViewContainerRef, [2, i3.ModelComponent]], { label: [0, \"label\"], name: [1, \"name\"], propertyName: [2, \"propertyName\"], tooltip: [3, \"tooltip\"], model: [4, \"model\"], modelType: [5, \"modelType\"] }, { change: \"change\" }), i0.ɵqud(603979776, 1, { radioButtons: 1 }), (_l()(), i0.ɵeld(4, 0, null, 0, 1, \"span\", [[\"class\", \"label-tooltip\"], [\"tooltipText\", \"\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\" Select Pre-Tax or Post-Tax depending on when the deduction must be applied. \"])), (_l()(), i0.ɵeld(6, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"planPreTax\"], [\"value\", \"PRETAX\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(7, 49152, [[1, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Pre-Tax\"])), (_l()(), i0.ɵeld(9, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"planPostTax\"], [\"value\", \"POSTTAX\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(10, 49152, [[1, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Post-Tax\"])), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"Deduction mode\"; var currVal_1 = \"planTaxOptionCode\"; var currVal_2 = \"planTaxOptionCode\"; var currVal_3 = \"true\"; var currVal_4 = _co.vm; var currVal_5 = \"DeductionViewModel\"; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); var currVal_6 = \"PRETAX\"; _ck(_v, 7, 0, currVal_6); var currVal_7 = \"POSTTAX\"; _ck(_v, 10, 0, currVal_7); }, null); }\nfunction View_CompanyDeductionEditorComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Pre-Tax\"]))], null, null); }\nfunction View_CompanyDeductionEditorComponent_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Post-Tax\"]))], null, null); }\nfunction View_CompanyDeductionEditorComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionEditorComponent_3)), i0.ɵdid(1, 16384, null, 0, i6.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionEditorComponent_4)), i0.ɵdid(3, 16384, null, 0, i6.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.vm.planTaxOptionCode === \"PRETAX\"); _ck(_v, 1, 0, currVal_0); var currVal_1 = (_co.vm.planTaxOptionCode === \"POSTTAX\"); _ck(_v, 3, 0, currVal_1); }, null); }\nfunction View_CompanyDeductionEditorComponent_6(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, null, null, null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"sp-read-more\", [[\"hideSeeLess\", \"true\"]], null, null, null, i7.View_ReadMoreComponent_0, i7.RenderType_ReadMoreComponent)), i0.ɵdid(2, 114688, null, 0, i8.ReadMoreComponent, [i9.DomSanitizer], { hideSeeLess: [0, \"hideSeeLess\"], description: [1, \"description\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"true\"; var currVal_1 = _co.vm.htmlDescription; _ck(_v, 2, 0, currVal_0, currVal_1); }, null); }\nfunction View_CompanyDeductionEditorComponent_8(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 11, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Match\"])), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"sp-input\", [[\"class\", \"percent-inline\"], [\"maskType\", \"percent\"], [\"name\", \"hsaMatchPercent\"]], null, null, null, i10.View_InputTextComponent_0, i10.RenderType_InputTextComponent)), i0.ɵprd(5120, null, i11.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i12.InputTextComponent]), i0.ɵdid(5, 4440064, null, 0, i12.InputTextComponent, [i13.InputMaskCatalog, i0.ChangeDetectorRef, [2, i3.ModelComponent]], { name: [0, \"name\"], propertyName: [1, \"propertyName\"], maskType: [2, \"maskType\"] }, null), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"of employee's contribution up to\"])), (_l()(), i0.ɵeld(8, 0, null, null, 1, \"sp-amount-or-percent-value\", [[\"class\", \"aop-inline\"], [\"isAmountPropertyName\", \"isHsaMatchMaxAmount\"], [\"modelType\", \"DeductionViewModel\"], [\"propertyNameValue\", \"hsaMatchMaxValue\"]], null, null, null, i14.View_AmountOrPercentValueComponent_0, i14.RenderType_AmountOrPercentValueComponent)), i0.ɵdid(9, 114688, null, 0, i15.AmountOrPercentValueComponent, [], { model: [0, \"model\"], isAmountPropertyName: [1, \"isAmountPropertyName\"], propertyNameValue: [2, \"propertyNameValue\"] }, null), (_l()(), i0.ɵeld(10, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"of employee gross earnings.\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"hsaMatchPercent\"; var currVal_1 = _co.hsaMatchPercent; var currVal_2 = \"percent\"; _ck(_v, 5, 0, currVal_0, currVal_1, currVal_2); var currVal_3 = _co.vm; var currVal_4 = \"isHsaMatchMaxAmount\"; var currVal_5 = \"hsaMatchMaxValue\"; _ck(_v, 9, 0, currVal_3, currVal_4, currVal_5); }, null); }\nfunction View_CompanyDeductionEditorComponent_9(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 6, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Contribute 100% up to \"])), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"sp-amount-or-percent-value\", [[\"class\", \"aop-inline\"], [\"isAmountPropertyName\", \"isHsaMatchAllMaxAmount\"], [\"modelType\", \"DeductionViewModel\"], [\"propertyNameValue\", \"hsaMatchAllValue\"]], null, null, null, i14.View_AmountOrPercentValueComponent_0, i14.RenderType_AmountOrPercentValueComponent)), i0.ɵdid(4, 114688, null, 0, i15.AmountOrPercentValueComponent, [], { model: [0, \"model\"], isAmountPropertyName: [1, \"isAmountPropertyName\"], propertyNameValue: [2, \"propertyNameValue\"] }, null), (_l()(), i0.ɵeld(5, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"of employee gross earnings.\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.vm; var currVal_1 = \"isHsaMatchAllMaxAmount\"; var currVal_2 = \"hsaMatchAllValue\"; _ck(_v, 4, 0, currVal_0, currVal_1, currVal_2); }, null); }\nfunction View_CompanyDeductionEditorComponent_7(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 16, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 16777216, null, null, 11, \"sp-radio-group\", [[\"label\", \"Company Match\"], [\"modelType\", \"DeductionViewModel\"], [\"name\", \"hsaContribution\"], [\"propertyName\", \"hsaContribution\"]], null, null, null, i1.View_RadioGroupComponent_0, i1.RenderType_RadioGroupComponent)), i0.ɵdid(2, 114688, null, 1, i2.RadioGroupComponent, [i0.Renderer2, i0.ElementRef, i0.ViewContainerRef, [2, i3.ModelComponent]], { label: [0, \"label\"], name: [1, \"name\"], propertyName: [2, \"propertyName\"], model: [3, \"model\"], modelType: [4, \"modelType\"] }, null), i0.ɵqud(603979776, 2, { radioButtons: 1 }), (_l()(), i0.ɵeld(4, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"hsaContributionNoMatch\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(5, 49152, [[2, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"No Match\"])), (_l()(), i0.ɵeld(7, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"hsaContributionMatch\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(8, 49152, [[2, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Match Percent\"])), (_l()(), i0.ɵeld(10, 0, null, 2, 2, \"sp-radio-button\", [[\"id\", \"hsaContributionMatchAll\"]], null, null, null, i4.View_RadioButtonComponent_0, i4.RenderType_RadioButtonComponent)), i0.ɵdid(11, 49152, [[2, 4]], 0, i5.RadioButtonComponent, [], { value: [0, \"value\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Match All\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionEditorComponent_8)), i0.ɵdid(14, 16384, null, 0, i6.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionEditorComponent_9)), i0.ɵdid(16, 16384, null, 0, i6.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"Company Match\"; var currVal_1 = \"hsaContribution\"; var currVal_2 = \"hsaContribution\"; var currVal_3 = _co.vm; var currVal_4 = \"DeductionViewModel\"; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); var currVal_5 = _co.HsaMatchType.NoMatch; _ck(_v, 5, 0, currVal_5); var currVal_6 = _co.HsaMatchType.Match; _ck(_v, 8, 0, currVal_6); var currVal_7 = _co.HsaMatchType.MatchAll; _ck(_v, 11, 0, currVal_7); var currVal_8 = (_co.vm.hsaContribution === _co.HsaMatchType.Match); _ck(_v, 14, 0, currVal_8); var currVal_9 = (_co.vm.hsaContribution === _co.HsaMatchType.MatchAll); _ck(_v, 16, 0, currVal_9); }, null); }\nfunction View_CompanyDeductionEditorComponent_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 15, \"div\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionEditorComponent_6)), i0.ɵdid(2, 16384, null, 0, i6.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(3, 0, null, null, 10, \"div\", [[\"class\", \"deduction-name\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"label\", [[\"class\", \"inline\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Deduction Name \"])), (_l()(), i0.ɵeld(6, 0, null, null, 2, \"sp-input\", [[\"modelType\", \"CompanyDeduction\"], [\"propertyName\", \"name\"]], null, null, null, i10.View_InputTextComponent_0, i10.RenderType_InputTextComponent)), i0.ɵprd(5120, null, i11.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i12.InputTextComponent]), i0.ɵdid(8, 4440064, null, 0, i12.InputTextComponent, [i13.InputMaskCatalog, i0.ChangeDetectorRef, [2, i3.ModelComponent]], { disabled: [0, \"disabled\"], model: [1, \"model\"], modelType: [2, \"modelType\"], propertyName: [3, \"propertyName\"] }, null), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"label\", [[\"class\", \"inline\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Deduction Abbreviation \"])), (_l()(), i0.ɵeld(11, 0, null, null, 2, \"sp-input\", [[\"class\", \"input-abbreviation\"], [\"modelType\", \"CompanyDeduction\"], [\"propertyName\", \"abbreviation\"]], null, null, null, i10.View_InputTextComponent_0, i10.RenderType_InputTextComponent)), i0.ɵprd(5120, null, i11.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i12.InputTextComponent]), i0.ɵdid(13, 4440064, null, 0, i12.InputTextComponent, [i13.InputMaskCatalog, i0.ChangeDetectorRef, [2, i3.ModelComponent]], { disabled: [0, \"disabled\"], model: [1, \"model\"], modelType: [2, \"modelType\"], propertyName: [3, \"propertyName\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionEditorComponent_7)), i0.ɵdid(15, 16384, null, 0, i6.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.vm.htmlDescription; _ck(_v, 2, 0, currVal_0); var currVal_1 = !_co.vm.canChangeName; var currVal_2 = _co.vm; var currVal_3 = \"CompanyDeduction\"; var currVal_4 = \"name\"; _ck(_v, 8, 0, currVal_1, currVal_2, currVal_3, currVal_4); var currVal_5 = !_co.vm.canChangeAbbreviation; var currVal_6 = _co.vm; var currVal_7 = \"CompanyDeduction\"; var currVal_8 = \"abbreviation\"; _ck(_v, 13, 0, currVal_5, currVal_6, currVal_7, currVal_8); var currVal_9 = _co.vm.hasHSAContributionQuestion; _ck(_v, 15, 0, currVal_9); }, null); }\nfunction View_CompanyDeductionEditorComponent_10(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.done() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.isNew ? \"Add\" : \"Update\"); _ck(_v, 1, 0, currVal_0); }); }\nexport function View_CompanyDeductionEditorComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \"div\", [[\"class\", \"deduction-header d-flex justify-content-between align-items-center\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(2, null, [\"\", \" \", \" \", \" \"])), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"a\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.cancel() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"i\", [[\"class\", \"material-icons icon btn-circle\"], [\"title\", \"Cancel and close\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"close\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionEditorComponent_1)), i0.ɵdid(7, 16384, null, 0, i6.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"], ngIfElse: [1, \"ngIfElse\"] }, null), (_l()(), i0.ɵand(0, [[\"fixedTaxMode\", 2]], null, 0, null, View_CompanyDeductionEditorComponent_2)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionEditorComponent_5)), i0.ɵdid(10, 16384, null, 0, i6.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(11, 0, null, null, 4, \"div\", [[\"class\", \"d-flex mt-4 mb-4 justify-content-end\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(12, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-light mr-3\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.cancel() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"Cancel\"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CompanyDeductionEditorComponent_10)), i0.ɵdid(15, 16384, null, 0, i6.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(16, 0, null, null, 0, \"hr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(17, 0, null, null, 1, \"sp-company-deductions-table\", [], null, null, null, i16.View_CompanyDeductionsTableComponent_0, i16.RenderType_CompanyDeductionsTableComponent)), i0.ɵdid(18, 114688, null, 0, i17.CompanyDeductionsTableComponent, [i18.CompanyService, i19.CompanyDeductionEditorService, i20.LoggerService, i21.Router], null, null)], function (_ck, _v) { var _co = _v.component; var currVal_3 = _co.vm.hasPreOrPostTaxQuestion; var currVal_4 = i0.ɵnov(_v, 8); _ck(_v, 7, 0, currVal_3, currVal_4); var currVal_5 = (!_co.vm.hasPreOrPostTaxQuestion || _co.vm.planTaxOptionCode); _ck(_v, 10, 0, currVal_5); var currVal_6 = _co.canConfirm; _ck(_v, 15, 0, currVal_6); _ck(_v, 18, 0); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.vm.id; var currVal_1 = (_co.vm.isPreTax ? \"Pre-Tax\" : \"\"); var currVal_2 = (_co.vm.isPostTax ? \"Post-Tax\" : \"\"); _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_CompanyDeductionEditorComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"sp-company-deduction-editor\", [], null, null, null, View_CompanyDeductionEditorComponent_0, RenderType_CompanyDeductionEditorComponent)), i0.ɵdid(1, 114688, null, 0, i22.CompanyDeductionEditorComponent, [i19.CompanyDeductionEditorService, i20.LoggerService, i0.ElementRef, i21.ActivatedRoute, i21.Router], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar CompanyDeductionEditorComponentNgFactory = i0.ɵccf(\"sp-company-deduction-editor\", i22.CompanyDeductionEditorComponent, View_CompanyDeductionEditorComponent_Host_0, {}, {}, []);\nexport { CompanyDeductionEditorComponentNgFactory as CompanyDeductionEditorComponentNgFactory };\n","<div class=\"deduction-header d-flex justify-content-between align-items-center\">\r\n  <h2>{{ vm.id }}\r\n      {{ vm.isPreTax ? 'Pre-Tax' : ''}}\r\n      {{ vm.isPostTax ? 'Post-Tax' : ''}}\r\n  </h2>\r\n  <a (click)=\"cancel()\"><i title=\"Cancel and close\"\r\n    class=\"material-icons icon btn-circle\">close</i></a>\r\n</div>\r\n\r\n<ng-container *ngIf=\"vm.hasPreOrPostTaxQuestion; else fixedTaxMode\">\r\n  <sp-radio-group name=\"planTaxOptionCode\" [model]=\"vm\" modelType=\"DeductionViewModel\"\r\n                  propertyName=\"planTaxOptionCode\" label=\"Deduction mode\"\r\n                  (change)=\"updateDescription(vm.planTaxOptionCode)\"\r\n    tooltip=\"true\">\r\n    <span tooltipText class=\"label-tooltip\">\r\n      Select Pre-Tax or Post-Tax depending on when the deduction must be applied.\r\n    </span>\r\n    <sp-radio-button id=\"planPreTax\" value=\"PRETAX\">Pre-Tax</sp-radio-button>\r\n    <sp-radio-button id=\"planPostTax\" value=\"POSTTAX\">Post-Tax</sp-radio-button>\r\n  </sp-radio-group>\r\n</ng-container>\r\n<ng-template #fixedTaxMode>\r\n  <span *ngIf=\"vm.planTaxOptionCode === 'PRETAX'\">Pre-Tax</span>\r\n  <span *ngIf=\"vm.planTaxOptionCode === 'POSTTAX'\">Post-Tax</span>\r\n</ng-template>\r\n\r\n<div *ngIf=\"!vm.hasPreOrPostTaxQuestion || vm.planTaxOptionCode\">\r\n  <ng-container *ngIf=\"vm.htmlDescription\">\r\n    <sp-read-more [description]=\"vm.htmlDescription\" hideSeeLess=\"true\">\r\n    </sp-read-more>\r\n  </ng-container>\r\n\r\n  <div class=\"deduction-name\">\r\n    <label class=\"inline\">Deduction Name </label>\r\n    <sp-input [model]=\"vm\" modelType=\"CompanyDeduction\" propertyName=\"name\"\r\n              [disabled]=\"!vm.canChangeName\">\r\n    </sp-input>\r\n    <label class=\"inline\">Deduction Abbreviation </label>\r\n    <sp-input [model]=\"vm\" modelType=\"CompanyDeduction\" propertyName=\"abbreviation\"\r\n              class=\"input-abbreviation\"\r\n              [disabled]=\"!vm.canChangeAbbreviation\">\r\n    </sp-input>\r\n  </div>\r\n\r\n\r\n  <div *ngIf=\"vm.hasHSAContributionQuestion\">\r\n    <sp-radio-group name=\"hsaContribution\"  [model]=\"vm\" modelType=\"DeductionViewModel\" propertyName=\"hsaContribution\" label=\"Company Match\">\r\n      <sp-radio-button id=\"hsaContributionNoMatch\" [value]=\"HsaMatchType.NoMatch\">No Match</sp-radio-button>\r\n      <sp-radio-button id=\"hsaContributionMatch\" [value]=\"HsaMatchType.Match\">Match Percent</sp-radio-button>\r\n      <sp-radio-button id=\"hsaContributionMatchAll\" [value]=\"HsaMatchType.MatchAll\">Match All</sp-radio-button>\r\n    </sp-radio-group>\r\n    <div *ngIf=\"vm.hsaContribution === HsaMatchType.Match\">\r\n      <span>Match</span>\r\n      <sp-input name=\"hsaMatchPercent\" [propertyName]=\"hsaMatchPercent\"\r\n              maskType=\"percent\" class=\"percent-inline\">\r\n      </sp-input>\r\n      <span>of employee's contribution up to</span>\r\n      <sp-amount-or-percent-value [model]=\"vm\" modelType=\"DeductionViewModel\"\r\n                                isAmountPropertyName=\"isHsaMatchMaxAmount\"\r\n                                propertyNameValue=\"hsaMatchMaxValue\"\r\n                                class=\"aop-inline\">\r\n      </sp-amount-or-percent-value>\r\n      <span>of employee gross earnings.</span>\r\n    </div>\r\n    <div *ngIf=\"vm.hsaContribution === HsaMatchType.MatchAll\">\r\n      <span>Contribute 100% up to </span>\r\n      <sp-amount-or-percent-value [model]=\"vm\" modelType=\"DeductionViewModel\"\r\n                              isAmountPropertyName=\"isHsaMatchAllMaxAmount\"\r\n                              propertyNameValue=\"hsaMatchAllValue\"\r\n                              class=\"aop-inline\">\r\n      </sp-amount-or-percent-value>\r\n      <span>of employee gross earnings.</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"d-flex mt-4 mb-4 justify-content-end\">\r\n  <button (click)=\"cancel()\" class=\"btn btn-light mr-3\">Cancel</button>\r\n  <button *ngIf=\"canConfirm\" (click)=\"done()\" class=\"btn btn-primary\">{{ isNew ? 'Add' : 'Update' }}</button>\r\n</div>\r\n\r\n<hr>\r\n\r\n<!-- Always present at bottom -->\r\n<sp-company-deductions-table></sp-company-deductions-table>\r\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./company-deductions.module\";\nimport * as i2 from \"../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"../../../../node_modules/@ng-bootstrap/ng-bootstrap/ng-bootstrap.ngfactory\";\nimport * as i4 from \"./company-deductions-container.component.ngfactory\";\nimport * as i5 from \"./company-deductions-table.component.ngfactory\";\nimport * as i6 from \"./company-retirement.component.ngfactory\";\nimport * as i7 from \"./company-deduction-editor.component.ngfactory\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i11 from \"@angular/router\";\nimport * as i12 from \"angular2-text-mask\";\nimport * as i13 from \"../../shared/shared.module\";\nimport * as i14 from \"./company-deductions-container.component\";\nimport * as i15 from \"./company-deductions.guard\";\nimport * as i16 from \"../../core/routing-guards/page-leave-guard\";\nimport * as i17 from \"./company-deductions-table.component\";\nimport * as i18 from \"./company-retirement.component\";\nimport * as i19 from \"./company-deduction-editor.component\";\nvar CompanyDeductionsModuleNgFactory = i0.ɵcmf(i1.CompanyDeductionsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵEmptyOutletComponentNgFactory, i3.NgbAlertNgFactory, i3.NgbDatepickerNgFactory, i3.ɵzNgFactory, i3.ɵbaNgFactory, i3.ɵsNgFactory, i3.ɵvNgFactory, i3.ɵwNgFactory, i4.CompanyDeductionsContainerComponentNgFactory, i5.CompanyDeductionsTableComponentNgFactory, i6.CompanyRetirementComponentNgFactory, i7.CompanyDeductionEditorComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i8.NgLocalization, i8.NgLocaleLocalization, [i0.LOCALE_ID, [2, i8.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i9.ɵangular_packages_forms_forms_i, i9.ɵangular_packages_forms_forms_i, []), i0.ɵmpd(4608, i9.FormBuilder, i9.FormBuilder, []), i0.ɵmpd(4608, i10.NgbModal, i10.NgbModal, [i0.ComponentFactoryResolver, i0.Injector, i10.ɵbb, i10.NgbModalConfig]), i0.ɵmpd(1073742336, i8.CommonModule, i8.CommonModule, []), i0.ɵmpd(1073742336, i9.ɵangular_packages_forms_forms_bb, i9.ɵangular_packages_forms_forms_bb, []), i0.ɵmpd(1073742336, i9.FormsModule, i9.FormsModule, []), i0.ɵmpd(1073742336, i9.ReactiveFormsModule, i9.ReactiveFormsModule, []), i0.ɵmpd(1073742336, i11.RouterModule, i11.RouterModule, [[2, i11.ɵangular_packages_router_router_a], [2, i11.Router]]), i0.ɵmpd(1073742336, i10.NgbAccordionModule, i10.NgbAccordionModule, []), i0.ɵmpd(1073742336, i10.NgbAlertModule, i10.NgbAlertModule, []), i0.ɵmpd(1073742336, i10.NgbButtonsModule, i10.NgbButtonsModule, []), i0.ɵmpd(1073742336, i10.NgbCarouselModule, i10.NgbCarouselModule, []), i0.ɵmpd(1073742336, i10.NgbCollapseModule, i10.NgbCollapseModule, []), i0.ɵmpd(1073742336, i10.NgbDatepickerModule, i10.NgbDatepickerModule, []), i0.ɵmpd(1073742336, i10.NgbDropdownModule, i10.NgbDropdownModule, []), i0.ɵmpd(1073742336, i10.NgbModalModule, i10.NgbModalModule, []), i0.ɵmpd(1073742336, i10.NgbPaginationModule, i10.NgbPaginationModule, []), i0.ɵmpd(1073742336, i10.NgbPopoverModule, i10.NgbPopoverModule, []), i0.ɵmpd(1073742336, i10.NgbProgressbarModule, i10.NgbProgressbarModule, []), i0.ɵmpd(1073742336, i10.NgbRatingModule, i10.NgbRatingModule, []), i0.ɵmpd(1073742336, i10.NgbTabsetModule, i10.NgbTabsetModule, []), i0.ɵmpd(1073742336, i10.NgbTimepickerModule, i10.NgbTimepickerModule, []), i0.ɵmpd(1073742336, i10.NgbTooltipModule, i10.NgbTooltipModule, []), i0.ɵmpd(1073742336, i10.NgbTypeaheadModule, i10.NgbTypeaheadModule, []), i0.ɵmpd(1073742336, i10.NgbModule, i10.NgbModule, []), i0.ɵmpd(1073742336, i12.TextMaskModule, i12.TextMaskModule, []), i0.ɵmpd(1073742336, i13.SharedModule, i13.SharedModule, []), i0.ɵmpd(1073742336, i1.CompanyDeductionsModule, i1.CompanyDeductionsModule, []), i0.ɵmpd(1024, i11.ROUTES, function () { return [[{ path: \"\", component: i14.CompanyDeductionsContainerComponent, canActivateChild: [i15.CompanyDeductionsGuard], canDeactivate: [i16.PageLeaveGuard], data: { title: \"Company Deductions\" }, children: [{ path: \"\", component: i17.CompanyDeductionsTableComponent, canDeactivate: [i16.PageLeaveGuard], data: { title: \"Company Deductions\", root: true } }, { path: \"retirement\", component: i18.CompanyRetirementComponent, canDeactivate: [i16.PageLeaveGuard], data: { title: \"Company Retirement Plan\" } }, { path: \"deduction/:id/:code\", component: i19.CompanyDeductionEditorComponent, canDeactivate: [i16.PageLeaveGuard], data: {} }, { path: \"deduction/:id\", component: i19.CompanyDeductionEditorComponent, canDeactivate: [i16.PageLeaveGuard], data: {} }] }]]; }, [])]); });\nexport { CompanyDeductionsModuleNgFactory as CompanyDeductionsModuleNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../validation/validate-property.directive\";\nimport * as i3 from \"../../store/validation/validation.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"./radio-group.component\";\nimport * as i6 from \"../model.component\";\nvar styles_RadioGroupComponent = [];\nvar RenderType_RadioGroupComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_RadioGroupComponent, data: {} });\nexport { RenderType_RadioGroupComponent as RenderType_RadioGroupComponent };\nfunction View_RadioGroupComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, [[1, 0], [\"tooltipButton\", 1]], null, 1, \"i\", [[\"class\", \"material-icons tooltip-icon clickable\"], [\"tabIndex\", \"0\"]], null, [[null, \"click\"], [null, \"keypress\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.openTooltip() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keypress\" === en)) {\n        var pd_1 = (_co.openKeypress($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"info\"]))], null, null); }\nfunction View_RadioGroupComponent_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, null, null, null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"div\", [[\"id\", \"tooltipZone\"], [\"tabIndex\", \"1\"]], null, [[null, \"blur\"], [null, \"keypress\"], [null, \"keyup.esc\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"blur\" === en)) {\n        var pd_0 = (_co.closeTooltip() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keypress\" === en)) {\n        var pd_1 = (_co.closeKeypress($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"keyup.esc\" === en)) {\n        var pd_2 = (_co.closeTooltip() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i0.ɵncd(null, 0)], null, null); }\nfunction View_RadioGroupComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 7, \"label\", [], [[8, \"htmlFor\", 0]], null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"label-text\"]], null, null, null, null, null)), (_l()(), i0.ɵted(2, null, [\"\", \"\"])), (_l()(), i0.ɵeld(3, 0, null, null, 4, \"span\", [[\"class\", \"tooltip-container\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_RadioGroupComponent_2)), i0.ɵdid(5, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_RadioGroupComponent_3)), i0.ɵdid(7, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.tooltip; _ck(_v, 5, 0, currVal_2); var currVal_3 = (_co.tooltip && _co.open); _ck(_v, 7, 0, currVal_3); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.name; _ck(_v, 0, 0, currVal_0); var currVal_1 = _co.label; _ck(_v, 2, 0, currVal_1); }); }\nexport function View_RadioGroupComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { tooltipButton: 0 }), i0.ɵqud(402653184, 2, { root: 0 }), (_l()(), i0.ɵeld(2, 0, [[2, 0], [\"root\", 1]], null, 19, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_RadioGroupComponent_1)), i0.ɵdid(4, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(5, 0, null, null, 15, \"div\", [], null, null, null, null, null)), i0.ɵncd(null, 1), (_l()(), i0.ɵeld(7, 0, null, null, 11, \"div\", [[\"class\", \"btn-group btn-group-toggle f-wrap\"], [\"spAsyncValidateProperty\", \"\"], [\"spRadioGroupValueAccessor\", \"\"], [\"spValidateProperty\", \"\"]], [[8, \"id\", 0], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngModelChange\"], [null, \"blur\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"blur\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 12).blur() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i0.ɵnov(_v, 17).blur() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"ngModelChange\" === en)) {\n        var pd_2 = (_co.setValue($event) !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i0.ɵdid(8, 147456, null, 0, i2.ValidatePropertyDirective, [i3.ValidationService], { model: [0, \"model\"], modelType: [1, \"modelType\"], propertyName: [2, \"propertyName\"], group: [3, \"group\"], modelContext: [4, \"modelContext\"] }, null), i0.ɵprd(1024, null, i4.NG_VALIDATORS, function (p0_0) { return [p0_0]; }, [i2.ValidatePropertyDirective]), i0.ɵdid(10, 147456, null, 0, i2.AsyncValidatePropertyDirective, [i3.ValidationService], { model: [0, \"model\"], modelType: [1, \"modelType\"], propertyName: [2, \"propertyName\"], group: [3, \"group\"], modelContext: [4, \"modelContext\"] }, null), i0.ɵprd(1024, null, i4.NG_ASYNC_VALIDATORS, function (p0_0) { return [p0_0]; }, [i2.AsyncValidatePropertyDirective]), i0.ɵdid(12, 4341760, null, 0, i5.RadioGroupValueAccessorDirective, [], { radioButtons: [0, \"radioButtons\"], name: [1, \"name\"] }, null), i0.ɵprd(1024, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i5.RadioGroupValueAccessorDirective]), i0.ɵdid(14, 671744, [[\"input\", 4]], 0, i4.NgModel, [[8, null], [6, i4.NG_VALIDATORS], [6, i4.NG_ASYNC_VALIDATORS], [6, i4.NG_VALUE_ACCESSOR]], { name: [0, \"name\"], model: [1, \"model\"] }, { update: \"ngModelChange\" }), i0.ɵprd(2048, null, i4.NgControl, null, [i4.NgModel]), i0.ɵdid(16, 16384, null, 0, i4.NgControlStatus, [[4, i4.NgControl]], null, null), i0.ɵdid(17, 737280, null, 0, i2.ValidationStatusDirective, [i0.ElementRef, i0.Renderer2, [2, i2.FormDirective]], { spValidationStatus: [0, \"spValidationStatus\"] }, null), i0.ɵncd(null, 2), (_l()(), i0.ɵeld(19, 0, null, null, 1, \"div\", [[\"class\", \"validationError\"]], null, null, null, null, null)), i0.ɵdid(20, 671744, null, 0, i2.ValidationFeedbackDirective, [i0.ElementRef, i0.Renderer2, [2, i2.FormDirective]], { spValidationFeedback: [0, \"spValidationFeedback\"], displayName: [1, \"displayName\"] }, null), i0.ɵncd(null, 3)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.label; _ck(_v, 4, 0, currVal_0); var currVal_9 = _co.model; var currVal_10 = _co.modelType; var currVal_11 = _co.propertyName; var currVal_12 = _co.group; var currVal_13 = _co.modelContext; _ck(_v, 8, 0, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13); var currVal_14 = _co.model; var currVal_15 = _co.modelType; var currVal_16 = _co.propertyName; var currVal_17 = _co.group; var currVal_18 = _co.modelContext; _ck(_v, 10, 0, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18); var currVal_19 = _co.radioButtons; var currVal_20 = _co.name; _ck(_v, 12, 0, currVal_19, currVal_20); var currVal_21 = _co.name; var currVal_22 = _co.getValue(); _ck(_v, 14, 0, currVal_21, currVal_22); var currVal_23 = i0.ɵnov(_v, 14); _ck(_v, 17, 0, currVal_23); var currVal_24 = i0.ɵnov(_v, 14); var currVal_25 = _co.label; _ck(_v, 20, 0, currVal_24, currVal_25); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.name; var currVal_2 = i0.ɵnov(_v, 16).ngClassUntouched; var currVal_3 = i0.ɵnov(_v, 16).ngClassTouched; var currVal_4 = i0.ɵnov(_v, 16).ngClassPristine; var currVal_5 = i0.ɵnov(_v, 16).ngClassDirty; var currVal_6 = i0.ɵnov(_v, 16).ngClassValid; var currVal_7 = i0.ɵnov(_v, 16).ngClassInvalid; var currVal_8 = i0.ɵnov(_v, 16).ngClassPending; _ck(_v, 7, 0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); }); }\nexport function View_RadioGroupComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 2, \"sp-radio-group\", [], null, null, null, View_RadioGroupComponent_0, RenderType_RadioGroupComponent)), i0.ɵdid(1, 114688, null, 1, i5.RadioGroupComponent, [i0.Renderer2, i0.ElementRef, i0.ViewContainerRef, [2, i6.ModelComponent]], null, null), i0.ɵqud(603979776, 1, { radioButtons: 1 })], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar RadioGroupComponentNgFactory = i0.ɵccf(\"sp-radio-group\", i5.RadioGroupComponent, View_RadioGroupComponent_Host_0, { label: \"label\", name: \"name\", propertyName: \"propertyName\", tooltip: \"tooltip\", group: \"group\", model: \"model\", modelType: \"modelType\" }, { change: \"change\" }, [\"[tooltipText]\", \"[helpTextAbove]\", \"sp-radio-button\", \"[helpText]\"]);\nexport { RadioGroupComponentNgFactory as RadioGroupComponentNgFactory };\n","<div #root class=\"form-group\">\r\n  <label *ngIf=\"label\" [for]=\"name\">\r\n    <span class=\"label-text\">{{label}}</span>\r\n    <span class=\"tooltip-container\">\r\n      <i #tooltipButton *ngIf=\"tooltip\" (click)=\"openTooltip()\" (keypress)=\"openKeypress($event)\" tabIndex=\"0\" class=\"material-icons tooltip-icon clickable\">info</i>\r\n      <ng-container *ngIf=\"tooltip && open\">\r\n        <div id=\"tooltipZone\" (blur)=\"closeTooltip()\" (keypress)=\"closeKeypress($event)\" (keyup.esc)=\"closeTooltip()\"\r\n          tabIndex=\"1\">\r\n          <ng-content select=\"[tooltipText]\"></ng-content>\r\n        </div>\r\n      </ng-container>\r\n    </span>\r\n  </label>\r\n  <div>\r\n      <ng-content select=\"[helpTextAbove]\"></ng-content>\r\n      <div class=\"btn-group btn-group-toggle f-wrap\" spRadioGroupValueAccessor #input=\"ngModel\" [id]=\"name\" [name]=\"name\"\r\n      [ngModel]=\"getValue()\" (ngModelChange)=\"setValue($event)\" spValidateProperty spAsyncValidateProperty\r\n      [spValidationStatus]=\"input\" [model]=\"model\" [modelType]=\"modelType\" [propertyName]=\"propertyName\" [group]=\"group\"\r\n      [modelContext]=\"modelContext\" [radioButtons]=\"radioButtons\">\r\n      <ng-content select=\"sp-radio-button\"></ng-content>\r\n    </div>\r\n    <div class=\"validationError\" [spValidationFeedback]=\"input\" [displayName]=\"label\"></div>\r\n  </div>\r\n  <ng-content select=\"[helpText]\"></ng-content>\r\n</div>\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { combineLatest, of } from 'rxjs';\nimport { concatMap, first, map } from 'rxjs/operators';\nimport { changeItemFactory as cif } from '@utils';\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\nimport { CurrentCompanyEntityCollectionService } from './current-company-entity-collection-service';\nimport { environment } from '@environment';\nimport { EntitySelectors } from '../entity-selectors';\nimport { TaxCollectorService } from '@core/services/tax-services/tax-collector.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../entity-selectors\";\nimport * as i2 from \"./company-entity-helper.service\";\nimport * as i3 from \"../../../core/services/tax-services/tax-collector.service\";\nvar EmployeeService = /** @class */ (function (_super) {\n    __extends(EmployeeService, _super);\n    function EmployeeService(entitySelectors, helper, taxCollectorService) {\n        var _this = _super.call(this, 'Employee', helper) || this;\n        _this.entitySelectors = entitySelectors;\n        _this.helper = helper;\n        _this.taxCollectorService = taxCollectorService;\n        return _this;\n    }\n    EmployeeService.prototype.saveNewEmployee = function (ee, home, epay) {\n        var changes = [\n            cif.add('Address', home),\n            cif.add('Employee', ee),\n            cif.add('EmployeePaymentMethod', epay)\n        ];\n        return this.saveEntities({ changes: changes }, environment.apiRoot + '/save/employee').pipe(map(function (_) { return ee; }));\n    };\n    EmployeeService.prototype.saveEmployeeUpdate = function (ee, home) {\n        var changes = [\n            cif.update('Address', home),\n            cif.update('Employee', ee),\n        ];\n        return this.saveEntities({ changes: changes }, environment.apiRoot + '/save/employee').pipe(map(function (_) { return ee; }));\n    };\n    /**\n     * If Employee.isRemoved flag is changed, toggle and save isRemoved for the entire EE graph.\n     * @param eeId Id of the Employee in question\n     * @param isRemoved the proposed change to the \"soft delete\" flag\n     */\n    EmployeeService.prototype.saveEmployeeIsRemovedById = function (eeId, isRemoved) {\n        var _this = this;\n        return this.entityMap$.pipe(first(), map(function (eeMap) { return eeMap[eeId]; }), concatMap(function (ee) { return _this.saveEmployeeIsRemoved(ee, isRemoved); }));\n    };\n    // TODO: There might be much more work to toggling the isRemoved state.\n    /**\n     * If Employee.isRemoved flag is changed, toggle and save isRemoved for the entire EE graph.\n     * @param ee Employee in question\n     * @param isRemoved the proposed change to the \"soft delete\" flag\n     */\n    EmployeeService.prototype.saveEmployeeIsRemoved = function (ee, isRemoved) {\n        var _this = this;\n        if (ee == null || ee.isRemoved === isRemoved) {\n            return of(null);\n        }\n        ee.isRemoved = isRemoved;\n        var home$ = this.entitySelectors.address.entities$.pipe(map(function (addrs) { return addrs.find(function (a) { return a.id === ee.homeAddressId; }); }));\n        var payment$ = this.entitySelectors.employeePaymentMethod.entities$.pipe(map(function (pms) { return pms.find(function (pm) { return pm.employeeId === ee.id; }); }));\n        // TODO: Always use this multi-entity save\n        var result$ = combineLatest(home$, payment$).pipe(first(), concatMap(function (_a) {\n            var home = _a[0], payment = _a[1];\n            home.isRemoved = ee.isRemoved;\n            var changes = [\n                cif.update('Employee', ee),\n                cif.update('Address', home),\n            ];\n            if (payment) {\n                payment.isRemoved = ee.isRemoved;\n                changes.push(cif.update('EmployeePaymentMethod', payment));\n            }\n            return _this.saveEntities({ changes: changes }, environment.apiRoot + '/save/employee/removed').pipe(concatMap(function () { return _this.taxCollectorService.computeTaxes().pipe(map(function () { return ee; })); }));\n        }));\n        return result$;\n    };\n    EmployeeService.ngInjectableDef = i0.defineInjectable({ factory: function EmployeeService_Factory() { return new EmployeeService(i0.inject(i1.EntitySelectors), i0.inject(i2.CompanyEntityHelperService), i0.inject(i3.TaxCollectorService)); }, token: EmployeeService, providedIn: \"root\" });\n    return EmployeeService;\n}(CurrentCompanyEntityCollectionService));\nexport { EmployeeService };\n","import { Injectable } from '@angular/core';\r\n\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { concatMap, first, map } from 'rxjs/operators';\r\n\r\nimport { Address, Employee, EmployeePaymentMethod } from '@model';\r\nimport { changeItemFactory as cif } from '@utils';\r\nimport { CompanyEntityHelperService } from './company-entity-helper.service';\r\nimport { CurrentCompanyEntityCollectionService } from './current-company-entity-collection-service';\r\nimport { environment } from '@environment';\r\nimport { EntitySelectors } from '../entity-selectors';\r\nimport { TaxCollectorService } from '@core/services/tax-services/tax-collector.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class EmployeeService extends CurrentCompanyEntityCollectionService<Employee> {\r\n  constructor(\r\n    private entitySelectors: EntitySelectors,\r\n    protected helper: CompanyEntityHelperService,\r\n    private taxCollectorService: TaxCollectorService\r\n  ) {\r\n    super('Employee', helper);\r\n  }\r\n\r\n\r\n  saveNewEmployee(ee: Employee, home: Address, epay: EmployeePaymentMethod): Observable<Employee> {\r\n    const changes = [\r\n      cif.add('Address', home),\r\n      cif.add('Employee', ee),\r\n      cif.add('EmployeePaymentMethod', epay)\r\n    ];\r\n    return this.saveEntities({ changes }, environment.apiRoot + '/save/employee').pipe(\r\n      map(_ => ee)\r\n    );\r\n  }\r\n\r\n  saveEmployeeUpdate(ee: Employee, home: Address): Observable<Employee> {\r\n    const changes = [\r\n      cif.update('Address', home),\r\n      cif.update('Employee', ee),\r\n    ];\r\n    return this.saveEntities({ changes }, environment.apiRoot + '/save/employee').pipe(\r\n      map(_ => ee)\r\n    );\r\n  }\r\n  /**\r\n   * If Employee.isRemoved flag is changed, toggle and save isRemoved for the entire EE graph.\r\n   * @param eeId Id of the Employee in question\r\n   * @param isRemoved the proposed change to the \"soft delete\" flag\r\n   */\r\n  saveEmployeeIsRemovedById(eeId: string, isRemoved: boolean ): Observable<Employee> {\r\n    return this.entityMap$.pipe(\r\n      first(),\r\n      map(eeMap => eeMap[eeId]),\r\n      concatMap(ee => this.saveEmployeeIsRemoved(ee, isRemoved))\r\n    );\r\n  }\r\n\r\n  // TODO: There might be much more work to toggling the isRemoved state.\r\n  /**\r\n   * If Employee.isRemoved flag is changed, toggle and save isRemoved for the entire EE graph.\r\n   * @param ee Employee in question\r\n   * @param isRemoved the proposed change to the \"soft delete\" flag\r\n   */\r\n  saveEmployeeIsRemoved(ee: Employee, isRemoved: boolean ): Observable<Employee> {\r\n    if (ee == null || ee.isRemoved === isRemoved) {\r\n      return of(null as Employee);\r\n    }\r\n\r\n    ee.isRemoved = isRemoved;\r\n\r\n    const home$ = this.entitySelectors.address.entities$.pipe(\r\n      map(addrs => addrs.find(a => a.id === ee.homeAddressId))\r\n    );\r\n\r\n    const payment$ = this.entitySelectors.employeePaymentMethod.entities$.pipe(\r\n      map(pms => pms.find(pm => pm.employeeId === ee.id))\r\n    );\r\n\r\n    // TODO: Always use this multi-entity save\r\n    const result$ = combineLatest(home$, payment$).pipe(\r\n      first(),\r\n      concatMap(([home, payment]) => {\r\n        home.isRemoved = ee.isRemoved;\r\n        const changes = [\r\n          cif.update('Employee', ee),\r\n          cif.update('Address', home),\r\n        ];\r\n        if (payment) {\r\n          payment.isRemoved = ee.isRemoved;\r\n          changes.push(cif.update('EmployeePaymentMethod', payment));\r\n        }\r\n        return this.saveEntities({ changes }, environment.apiRoot + '/save/employee/removed').pipe(\r\n          concatMap(() => this.taxCollectorService.computeTaxes().pipe(map(() => ee)))\r\n        );\r\n      }),\r\n    );\r\n    return result$;\r\n  }\r\n}\r\n\r\n"],"sourceRoot":""}