{"version":3,"sources":["webpack:///./src/app/company-bank-info/company-bank-info.component.html","webpack:///./src/app/company-bank-info/company-bank-info.component.ts","webpack:///./src/app/company-bank-info/company-bank-info.module.ts","webpack:///./src/app/shared/model.component.ts.ModelComponent.html"],"names":[],"mappings":"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","file":"9.170621e1a2a30edc9ac3.js","sourcesContent":["<div class=\"static-nav d-flex flex-column\" id=\"companyBankComponent\">\r\n  <header class=\"header-bold\">\r\n    <div class=\"standard\">\r\n      <h1>Your Payroll Bank Account</h1>\r\n      <p>Enter the information for the checking account youâ€™ll be using for your payroll.</p>\r\n    </div>\r\n  </header>\r\n\r\n  <div class=\"standard\">\r\n\r\n    <img src=\"/assets/images/illustration-check-mini.png\" width=\"300\" height=\"125\" class=\"img-fluid border rounded d-block mb-3\">\r\n    <form #form=\"ngForm\">\r\n\r\n      <sp-model *ngIf=\"vm$ | async as vm\" [model]=\"vm\" modelType=\"CompanyBankInfoVm\">\r\n        <div class=\"input-group input-split\">\r\n          <sp-input name=\"bankAccountRn\" propertyName=\"bankAccountRn\" label=\"Routing Number\" placeholder=\"Routing Number\" (blur)=\"bankLookup()\" class=\"input-medium\"></sp-input>\r\n          <div class=\"bank-name-overlay\">{{ vm.bankNameDisplay }}</div>\r\n        </div>\r\n        <sp-input name=\"bankName\" propertyName=\"bankName\" label=\"Bank Name (Admin Only)\" class=\"input-medium\" *ngIf=\"vm.isAdmin\"></sp-input>\r\n        <sp-input name=\"bankAccountNumber\" propertyName=\"bankAccountNumber\" label=\"Account Number\" placeholder=\"Account Number\" class=\"input-medium\"></sp-input>\r\n        <sp-input name=\"bankAccountNumberConfirm\" propertyName=\"bankAccountNumberConfirm\" label=\"Re-Enter Account Number\" placeholder=\"Account Number\" class=\"input-medium\"></sp-input>\r\n      </sp-model>\r\n\r\n    </form>\r\n  </div>\r\n  <sp-nav-bottom [back]=\"back\" [next]=\"next\" nextLabel=\"Finish\" [disableNext]=\"isInvalid\"></sp-nav-bottom>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { concatMap, filter, map, take, tap } from 'rxjs/operators';\r\n\r\nimport { areDifferent } from '@core';\r\nimport { BankRoutingNumberService, Saver, SaverFactoryService, WellKnownRoutes } from '@core';\r\nimport { Company } from '@model';\r\nimport { CompanyBankInfoVm } from './company-bank-info-vm';\r\nimport { CompanyService } from '@entity';\r\nimport { ModelComponent } from '@shared';\r\nimport { SessionService } from '@session';\r\nimport { ValidationService } from '@validation';\r\n\r\n@Component({\r\n  selector: 'sp-co-bank-info',\r\n  templateUrl: './company-bank-info.component.html'\r\n})\r\nexport class CompanyBankInfoComponent implements OnInit {\r\n\r\n  @ViewChild('form') form: NgForm;\r\n  @ViewChild(ModelComponent) modelComponent: ModelComponent;\r\n\r\n  back: string = WellKnownRoutes.CompanyTaxInfo;\r\n  next: string = WellKnownRoutes.Dashboard;\r\n\r\n  private currentCompany$: Observable<Company>;\r\n\r\n  vm$: Observable<CompanyBankInfoVm>;\r\n  private vm: CompanyBankInfoVm;\r\n\r\n  constructor(\r\n    private companyService: CompanyService,\r\n    private bnrService: BankRoutingNumberService,\r\n    private saverFactory: SaverFactoryService,\r\n    private sessionService: SessionService,\r\n    private validationService: ValidationService\r\n  ) {\r\n    this.currentCompany$ = companyService.currentCompany$.pipe(filter(c => c != null));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    window.scrollTo(0, 0);\r\n\r\n    this.vm$ = combineLatest(\r\n       this.currentCompany$,\r\n       this.sessionService.isAdmin$\r\n    ).pipe(\r\n      map(([company, isAdmin]) => {\r\n        return this.vm = this.makeVm(company, isAdmin);\r\n      }),\r\n      tap(_ => this.bankLookup()),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  bankLookup() {\r\n    this.vm.bankName = this.vm.bankNameDisplay = ''; // clear existing bank name and its display\r\n    this.bnrService.getBankName(this.vm.bankAccountRn).subscribe((bn: string) => {\r\n      if (bn) {\r\n        this.vm.bankName = this.vm.bankNameDisplay = bn;\r\n      } else {\r\n        this.vm.bankNameDisplay = `No bank for ${this.vm.bankAccountRn}`;\r\n      }\r\n      const component = this.modelComponent;\r\n      if (component) {\r\n        component.notifyOfModelChange(); // re-validates and updates the view\r\n      }\r\n    });\r\n  }\r\n\r\n  canLeaveAfterSave() {\r\n    return this.vm ? this.save() : true;\r\n  }\r\n\r\n  get isInvalid() {\r\n    return this.form.invalid || this.vm.bankAccountNumber !== this.vm.bankAccountNumberConfirm;\r\n  }\r\n\r\n  makeVm(company: Company, isAdmin: boolean): CompanyBankInfoVm {\r\n    return {\r\n      id: company.id,\r\n      bankName: company.bankName,\r\n      bankAccountRn: company.bankAccountRn,\r\n      bankAccountNumber: company.bankAccountNumber,\r\n\r\n      bankNameDisplay: company.bankName,\r\n      bankAccountNumberConfirm: company.bankAccountNumber,\r\n      isAdmin,\r\n    };\r\n  }\r\n\r\n  private save() {\r\n    const saver = this.saverFactory.create();\r\n    saver.add(this.saveCompany());\r\n    return saver.go();\r\n  }\r\n\r\n  private saveCompany() {\r\n    return this.currentCompany$.pipe(\r\n      take(1),\r\n      concatMap(oldCompany => {\r\n        // Save current cached company merged with cleaned-up properties that were presented.\r\n        const vm = this.vm;\r\n        const newCompany = {\r\n          ...oldCompany,\r\n          bankName: vm.bankName,\r\n          bankAccountRn: vm.bankAccountRn,\r\n          bankAccountNumber: vm.bankAccountNumber,\r\n          // TODO: Remove from Company. Per Zorian, can only ever be checking account\r\n          bankAccountType: 'checking' as 'checking'\r\n        };\r\n        const changed = areDifferent(newCompany, oldCompany, 'Company');\r\n        return changed ? this.companyService.update(newCompany) : Saver.NO_SAVE;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { CompanyBankInfoComponent } from './company-bank-info.component';\r\nimport { PageLeaveGuard } from '@core/routing-guards';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', component: CompanyBankInfoComponent, canDeactivate: [ PageLeaveGuard ] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild(routes)],\r\n  declarations: [CompanyBankInfoComponent ]\r\n})\r\nexport class CompanyBankInfoModule {}\r\n","<ng-content></ng-content>"],"sourceRoot":""}