(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!**************************************************!*\
  !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) { // check for number or string
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return id;
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./src/$$_lazy_route_resource lazy recursive":
/*!**********************************************************!*\
  !*** ./src/$$_lazy_route_resource lazy namespace object ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"@app/abandoned/abandoned.module.ngfactory": [
		"./src/app/abandoned/abandoned.module.ngfactory.js",
		18
	],
	"@app/about-you/about-you.module.ngfactory": [
		"./src/app/about-you/about-you.module.ngfactory.js",
		0,
		"common",
		6
	],
	"@app/account-view/account-view.module.ngfactory": [
		"./src/app/account-view/account-view.module.ngfactory.js",
		2,
		"common",
		7
	],
	"@app/admin-console/admin-console.module.ngfactory": [
		"./src/app/admin-console/admin-console.module.ngfactory.js",
		2,
		"common",
		8
	],
	"@app/company-bank-info/company-bank-info.module.ngfactory": [
		"./src/app/company-bank-info/company-bank-info.module.ngfactory.js",
		1,
		"common",
		9
	],
	"@app/company-info/company-info.module.ngfactory": [
		"./src/app/company-info/company-info.module.ngfactory.js",
		0,
		1,
		3,
		"common",
		10
	],
	"@app/company-tax-info/company-tax-info.module.ngfactory": [
		"./src/app/company-tax-info/company-tax-info.module.ngfactory.js",
		0,
		1,
		"common",
		11
	],
	"@app/dashboard/dashboard.module.ngfactory": [
		"./src/app/dashboard/dashboard.module.ngfactory.js",
		12
	],
	"@app/deductions/company/company-deductions.module.ngfactory": [
		"./src/app/deductions/company/company-deductions.module.ngfactory.js",
		0,
		4,
		"common",
		20
	],
	"@app/deductions/employee/employee-deductions.module.ngfactory": [
		"./src/app/deductions/employee/employee-deductions.module.ngfactory.js",
		4,
		"common",
		21
	],
	"@app/documents/documents.module.ngfactory": [
		"./src/app/documents/documents.module.ngfactory.js",
		0,
		"common",
		15
	],
	"@app/earnings/earnings.module.ngfactory": [
		"./src/app/earnings/earnings.module.ngfactory.js",
		0,
		"common",
		13
	],
	"@app/employees/employees.module.ngfactory": [
		"./src/app/employees/employees.module.ngfactory.js",
		0,
		1,
		3,
		"common",
		14
	],
	"@app/enrolled/enrolled.module.ngfactory": [
		"./src/app/enrolled/enrolled.module.ngfactory.js",
		5,
		"common",
		17
	],
	"@app/processing/processing.module.ngfactory": [
		"./src/app/processing/processing.module.ngfactory.js",
		5,
		"common",
		19
	],
	"@app/review/review.module.ngfactory": [
		"./src/app/review/review.module.ngfactory.js",
		"common",
		16
	]
};
function webpackAsyncContext(req) {
	var ids = map[req];
	if(!ids) {
		return Promise.resolve().then(function() {
			var e = new Error("Cannot find module '" + req + "'");
			e.code = 'MODULE_NOT_FOUND';
			throw e;
		});
	}
	return Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {
		var id = ids[0];
		return __webpack_require__(id);
	});
}
webpackAsyncContext.keys = function webpackAsyncContextKeys() {
	return Object.keys(map);
};
webpackAsyncContext.id = "./src/$$_lazy_route_resource lazy recursive";
module.exports = webpackAsyncContext;

/***/ }),

/***/ "./src/app/account-details/account-details.module.ts":
/*!***********************************************************!*\
  !*** ./src/app/account-details/account-details.module.ts ***!
  \***********************************************************/
/*! exports provided: AccountDetailsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountDetailsModule", function() { return AccountDetailsModule; });
var AccountDetailsModule = /** @class */ (function () {
    function AccountDetailsModule() {
    }
    return AccountDetailsModule;
}());



/***/ }),

/***/ "./src/app/app-dev.module.ngfactory.js":
/*!*********************************************!*\
  !*** ./src/app/app-dev.module.ngfactory.js ***!
  \*********************************************/
/*! exports provided: AppDevModuleNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppDevModuleNgFactory", function() { return AppDevModuleNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _app_dev_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app-dev.module */ "./src/app/app-dev.module.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _node_modules_angular_router_router_ngfactory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../node_modules/@angular/router/router.ngfactory */ "./node_modules/@angular/router/router.ngfactory.js");
/* harmony import */ var _node_modules_ng_bootstrap_ng_bootstrap_ng_bootstrap_ngfactory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../node_modules/@ng-bootstrap/ng-bootstrap/ng-bootstrap.ngfactory */ "./node_modules/@ng-bootstrap/ng-bootstrap/ng-bootstrap.ngfactory.js");
/* harmony import */ var _mock_signin_mock_signin_component_ngfactory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mock-signin/mock-signin.component.ngfactory */ "./src/app/mock-signin/mock-signin.component.ngfactory.js");
/* harmony import */ var _terms_terms_component_ngfactory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./terms/terms.component.ngfactory */ "./src/app/terms/terms.component.ngfactory.js");
/* harmony import */ var _failed_failed_component_ngfactory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./failed/failed.component.ngfactory */ "./src/app/failed/failed.component.ngfactory.js");
/* harmony import */ var _concurrency_failure_concurrency_failure_component_ngfactory__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./concurrency-failure/concurrency-failure.component.ngfactory */ "./src/app/concurrency-failure/concurrency-failure.component.ngfactory.js");
/* harmony import */ var _auth_components_auth_failed_component_ngfactory__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./auth-components/auth-failed.component.ngfactory */ "./src/app/auth-components/auth-failed.component.ngfactory.js");
/* harmony import */ var _auth_components_oidc_callback_component_ngfactory__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./auth-components/oidc-callback.component.ngfactory */ "./src/app/auth-components/oidc-callback.component.ngfactory.js");
/* harmony import */ var _auth_components_signed_out_component_ngfactory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./auth-components/signed-out.component.ngfactory */ "./src/app/auth-components/signed-out.component.ngfactory.js");
/* harmony import */ var _auth_components_unauthorized_component_ngfactory__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./auth-components/unauthorized.component.ngfactory */ "./src/app/auth-components/unauthorized.component.ngfactory.js");
/* harmony import */ var _node_modules_ngx_toastr_ngx_toastr_ngfactory__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../node_modules/ngx-toastr/ngx-toastr.ngfactory */ "./node_modules/ngx-toastr/ngx-toastr.ngfactory.js");
/* harmony import */ var _app_component_ngfactory__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./app.component.ngfactory */ "./src/app/app.component.ngfactory.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_animations_browser__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/animations/browser */ "./node_modules/@angular/animations/fesm5/browser.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm5/animations.js");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/animations */ "./node_modules/@angular/animations/fesm5/animations.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _core_analytics_analytics_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./core/analytics/analytics.service */ "./src/app/core/analytics/analytics.service.ts");
/* harmony import */ var _core_analytics_providers_router_navigation_analytics_provider__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./core/analytics/providers/router-navigation-analytics.provider */ "./src/app/core/analytics/providers/router-navigation-analytics.provider.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_analytics_receivers_google_tagmanager_receiver__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./core/analytics/receivers/google-tagmanager.receiver */ "./src/app/core/analytics/receivers/google-tagmanager.receiver.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _core_http_interceptors_busy_http_interceptor__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./core/http-interceptors/busy-http-interceptor */ "./src/app/core/http-interceptors/busy-http-interceptor.ts");
/* harmony import */ var _core_http_interceptors_read_only_http_interceptor__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./core/http-interceptors/read-only-http-interceptor */ "./src/app/core/http-interceptors/read-only-http-interceptor.ts");
/* harmony import */ var _core_http_interceptors_accept_json_only_http_interceptor__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./core/http-interceptors/accept-json-only-http-interceptor */ "./src/app/core/http-interceptors/accept-json-only-http-interceptor.ts");
/* harmony import */ var _core_http_interceptors_queued_request_http_interceptor__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./core/http-interceptors/queued-request-http-interceptor */ "./src/app/core/http-interceptors/queued-request-http-interceptor.ts");
/* harmony import */ var _core_http_interceptors_auth_http_interceptor__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./core/http-interceptors/auth-http-interceptor */ "./src/app/core/http-interceptors/auth-http-interceptor.ts");
/* harmony import */ var _core_http_interceptors_concurrency_http_interceptor__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./core/http-interceptors/concurrency-http-interceptor */ "./src/app/core/http-interceptors/concurrency-http-interceptor.ts");
/* harmony import */ var _core_services_busy_service__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./core/services/busy.service */ "./src/app/core/services/busy.service.ts");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./store/session/session.service */ "./src/app/store/session/session.service.ts");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _store_entity_entity_services_company_service__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./store/entity/entity-services/company.service */ "./src/app/store/entity/entity-services/company.service.ts");
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @ngrx/effects */ "./node_modules/@ngrx/effects/fesm5/effects.js");
/* harmony import */ var _store_entity_entity_services_sp_entity_collection_dataservice__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./store/entity/entity-services/sp-entity-collection-dataservice */ "./src/app/store/entity/entity-services/sp-entity-collection-dataservice.ts");
/* harmony import */ var _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @ngrx/store-devtools */ "./node_modules/@ngrx/store-devtools/fesm5/store-devtools.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _shared_filter_filter_dateformat__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./shared/filter/filter-dateformat */ "./src/app/shared/filter/filter-dateformat.ts");
/* harmony import */ var _mock_services_in_memory_data_service__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./mock-services/in-memory-data.service */ "./src/app/mock-services/in-memory-data.service.ts");
/* harmony import */ var angular_in_memory_web_api_interfaces__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! angular-in-memory-web-api/interfaces */ "./node_modules/angular-in-memory-web-api/interfaces.js");
/* harmony import */ var _core_services_auth_services_oidc_manager_factory__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./core/services/auth-services/oidc-manager-factory */ "./src/app/core/services/auth-services/oidc-manager-factory.ts");
/* harmony import */ var _mock_auth_mock_oidc_manager_factory__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./mock-auth/mock-oidc-manager-factory */ "./src/app/mock-auth/mock-oidc-manager-factory.ts");
/* harmony import */ var _mock_auth_mock_oidc_manager__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./mock-auth/mock-oidc-manager */ "./src/app/mock-auth/mock-oidc-manager.ts");
/* harmony import */ var _core_error_handling_sentry_error_handler__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./core/error-handling/sentry-error-handler */ "./src/app/core/error-handling/sentry-error-handler.ts");
/* harmony import */ var _mock_signin_mock_signin_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./mock-signin/mock-signin.component */ "./src/app/mock-signin/mock-signin.component.ts");
/* harmony import */ var _mock_signin_mock_signin_module__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./mock-signin/mock-signin.module */ "./src/app/mock-signin/mock-signin.module.ts");
/* harmony import */ var _core_routing_guards_data_entry_page_guard__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./core/routing-guards/data-entry-page-guard */ "./src/app/core/routing-guards/data-entry-page-guard.ts");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _core_routing_guards_account_view_guard__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./core/routing-guards/account-view-guard */ "./src/app/core/routing-guards/account-view-guard.ts");
/* harmony import */ var _core_routing_guards_admin_console_guard__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./core/routing-guards/admin-console-guard */ "./src/app/core/routing-guards/admin-console-guard.ts");
/* harmony import */ var _core_routing_guards_single_page_status_guard__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./core/routing-guards/single-page-status-guard */ "./src/app/core/routing-guards/single-page-status-guard.ts");
/* harmony import */ var _terms_terms_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./terms/terms.component */ "./src/app/terms/terms.component.ts");
/* harmony import */ var _failed_failed_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./failed/failed.component */ "./src/app/failed/failed.component.ts");
/* harmony import */ var _concurrency_failure_concurrency_failure_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./concurrency-failure/concurrency-failure.component */ "./src/app/concurrency-failure/concurrency-failure.component.ts");
/* harmony import */ var _auth_components_auth_failed_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./auth-components/auth-failed.component */ "./src/app/auth-components/auth-failed.component.ts");
/* harmony import */ var _core_routing_guards_auth_failed_guard__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./core/routing-guards/auth-failed-guard */ "./src/app/core/routing-guards/auth-failed-guard.ts");
/* harmony import */ var _auth_components_oidc_callback_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./auth-components/oidc-callback.component */ "./src/app/auth-components/oidc-callback.component.ts");
/* harmony import */ var _auth_components_signed_out_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./auth-components/signed-out.component */ "./src/app/auth-components/signed-out.component.ts");
/* harmony import */ var _auth_components_unauthorized_component__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./auth-components/unauthorized.component */ "./src/app/auth-components/unauthorized.component.ts");
/* harmony import */ var _core_sp_route_reuse_strategy__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./core/sp-route-reuse-strategy */ "./src/app/core/sp-route-reuse-strategy.ts");
/* harmony import */ var angular2_text_mask__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! angular2-text-mask */ "./node_modules/angular2-text-mask/dist/angular2TextMask.js");
/* harmony import */ var angular2_text_mask__WEBPACK_IMPORTED_MODULE_67___default = /*#__PURE__*/__webpack_require__.n(angular2_text_mask__WEBPACK_IMPORTED_MODULE_67__);
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _account_details_account_details_module__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./account-details/account-details.module */ "./src/app/account-details/account-details.module.ts");
/* harmony import */ var _core_analytics_analytics_module__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./core/analytics/analytics.module */ "./src/app/core/analytics/analytics.module.ts");
/* harmony import */ var _auth_components_auth_components_module__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./auth-components/auth-components.module */ "./src/app/auth-components/auth-components.module.ts");
/* harmony import */ var _core_services_location_services_geolocation_service__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./core/services/location-services/geolocation.service */ "./src/app/core/services/location-services/geolocation.service.ts");
/* harmony import */ var _core_services_location_services_browser_geolocation_service__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./core/services/location-services/browser-geolocation.service */ "./src/app/core/services/location-services/browser-geolocation.service.ts");
/* harmony import */ var _core_services_location_services_address_finder_service__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./core/services/location-services/address-finder.service */ "./src/app/core/services/location-services/address-finder.service.ts");
/* harmony import */ var _core_services_location_services_google_places_service__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./core/services/location-services/google-places.service */ "./src/app/core/services/location-services/google-places.service.ts");
/* harmony import */ var _core_window__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./core/window */ "./src/app/core/window.ts");
/* harmony import */ var _core_core_module__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./core/core.module */ "./src/app/core/core.module.ts");
/* harmony import */ var _core_services_title_service__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./core/services/title.service */ "./src/app/core/services/title.service.ts");
/* harmony import */ var _core_components_core_components_module__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./core-components/core-components.module */ "./src/app/core-components/core-components.module.ts");
/* harmony import */ var _store_session_reducer__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./store/session/reducer */ "./src/app/store/session/reducer.ts");
/* harmony import */ var _store_session_session_store_module__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./store/session/session-store.module */ "./src/app/store/session/session-store.module.ts");
/* harmony import */ var _store_entity_sort_comparers__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./store/entity/sort-comparers */ "./src/app/store/entity/sort-comparers.ts");
/* harmony import */ var _store_entity_entity_metadata__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./store/entity/entity-metadata */ "./src/app/store/entity/entity-metadata.ts");
/* harmony import */ var _mock_services_in_mem_account_service__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./mock-services/in-mem-account.service */ "./src/app/mock-services/in-mem-account.service.ts");
/* harmony import */ var _mock_services_in_mem_address_validator_service__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./mock-services/in-mem-address-validator.service */ "./src/app/mock-services/in-mem-address-validator.service.ts");
/* harmony import */ var _mock_services_in_mem_admin_service__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./mock-services/in-mem-admin.service */ "./src/app/mock-services/in-mem-admin.service.ts");
/* harmony import */ var _mock_services_in_mem_company_package_service__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./mock-services/in-mem-company-package.service */ "./src/app/mock-services/in-mem-company-package.service.ts");
/* harmony import */ var _mock_services_in_mem_deduction_service__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./mock-services/in-mem-deduction.service */ "./src/app/mock-services/in-mem-deduction.service.ts");
/* harmony import */ var _mock_services_in_mem_earning_service__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./mock-services/in-mem-earning.service */ "./src/app/mock-services/in-mem-earning.service.ts");
/* harmony import */ var _mock_services_in_mem_ein_service__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./mock-services/in-mem-ein.service */ "./src/app/mock-services/in-mem-ein.service.ts");
/* harmony import */ var _mock_services_in_mem_esign_service__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./mock-services/in-mem-esign.service */ "./src/app/mock-services/in-mem-esign.service.ts");
/* harmony import */ var _mock_services_in_mem_enrollment_service__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./mock-services/in-mem-enrollment.service */ "./src/app/mock-services/in-mem-enrollment.service.ts");
/* harmony import */ var _mock_services_in_mem_identity_service__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./mock-services/in-mem-identity.service */ "./src/app/mock-services/in-mem-identity.service.ts");
/* harmony import */ var _mock_services_in_mem_save_entities_service__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./mock-services/in-mem-save-entities.service */ "./src/app/mock-services/in-mem-save-entities.service.ts");
/* harmony import */ var _mock_services_in_mem_tax_service__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./mock-services/in-mem-tax.service */ "./src/app/mock-services/in-mem-tax.service.ts");
/* harmony import */ var _mock_services_in_mem_tax_rate_service__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./mock-services/in-mem-tax-rate.service */ "./src/app/mock-services/in-mem-tax-rate.service.ts");
/* harmony import */ var _mock_services_in_mem_surepayroll_service__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./mock-services/in-mem-surepayroll.service */ "./src/app/mock-services/in-mem-surepayroll.service.ts");
/* harmony import */ var _mock_services_http_client_backend_service_sp__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./mock-services/http-client-backend-service-sp */ "./src/app/mock-services/http-client-backend-service-sp.ts");
/* harmony import */ var _store_entity_sp_entity_action_factory__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./store/entity/sp-entity-action-factory */ "./src/app/store/entity/sp-entity-action-factory.ts");
/* harmony import */ var _core_services_id_generator_service__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./core/services/id-generator.service */ "./src/app/core/services/id-generator.service.ts");
/* harmony import */ var _store_session_session_selectors__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./store/session/session-selectors */ "./src/app/store/session/session-selectors.ts");
/* harmony import */ var _store_entity_data_service_config__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./store/entity/data-service-config */ "./src/app/store/entity/data-service-config.ts");
/* harmony import */ var _store_entity_entity_services_ngrx_data_toast_service__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./store/entity/entity-services/ngrx-data-toast.service */ "./src/app/store/entity/entity-services/ngrx-data-toast.service.ts");
/* harmony import */ var _core_services_toast_service__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./core/services/toast.service */ "./src/app/core/services/toast.service.ts");
/* harmony import */ var _store_entity_entity_services_entity_services_module__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./store/entity/entity-services/entity-services.module */ "./src/app/store/entity/entity-services/entity-services.module.ts");
/* harmony import */ var _store_entity_entity_store_module__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./store/entity/entity-store.module */ "./src/app/store/entity/entity-store.module.ts");
/* harmony import */ var _store_app_store_module__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./store/app-store.module */ "./src/app/store/app-store.module.ts");
/* harmony import */ var _core_error_handling_sentry_enricher__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./core/error-handling/sentry-enricher */ "./src/app/core/error-handling/sentry-enricher.ts");
/* harmony import */ var _core_error_handling_auth_error_enricher__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./core/error-handling/auth-error-enricher */ "./src/app/core/error-handling/auth-error-enricher.ts");
/* harmony import */ var _core_error_handling_logger_enricher__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./core/error-handling/logger-enricher */ "./src/app/core/error-handling/logger-enricher.ts");
/* harmony import */ var _core_error_handling_sentry_module__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./core/error-handling/sentry.module */ "./src/app/core/error-handling/sentry.module.ts");
/* harmony import */ var _store_validation_validation_module__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./store/validation/validation.module */ "./src/app/store/validation/validation.module.ts");
/* harmony import */ var _app_module__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./app.module */ "./src/app/app.module.ts");
/* harmony import */ var _store_entity_entity_services_stats_service__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./store/entity/entity-services/stats.service */ "./src/app/store/entity/entity-services/stats.service.ts");
/* harmony import */ var _core_services_tax_services_tax_collector_service__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./core/services/tax-services/tax-collector.service */ "./src/app/core/services/tax-services/tax-collector.service.ts");
/* harmony import */ var angular_in_memory_web_api_http_client_in_memory_web_api_module__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! angular-in-memory-web-api/http-client-in-memory-web-api.module */ "./node_modules/angular-in-memory-web-api/http-client-in-memory-web-api.module.js");
/* harmony import */ var _mock_services_mock_services_module__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./mock-services/mock-services.module */ "./src/app/mock-services/mock-services.module.ts");
/* harmony import */ var _mock_auth_mock_auth_module__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./mock-auth/mock-auth.module */ "./src/app/mock-auth/mock-auth.module.ts");
/* harmony import */ var _store_validation_validation_service__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./store/validation/validation.service */ "./src/app/store/validation/validation.service.ts");
/* harmony import */ var _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./store/validation/default-validators */ "./src/app/store/validation/default-validators.ts");
/* harmony import */ var _model_validators_must_have_employees_validator__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./model/validators/must-have-employees-validator */ "./src/app/model/validators/must-have-employees-validator.ts");
/* harmony import */ var _model_validators_federal_taxes_validator__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./model/validators/federal-taxes-validator */ "./src/app/model/validators/federal-taxes-validator.ts");
/* harmony import */ var _model_validators_state_taxes_validator__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./model/validators/state-taxes-validator */ "./src/app/model/validators/state-taxes-validator.ts");
/* harmony import */ var _model_validators_employee_taxes_validator__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./model/validators/employee-taxes-validator */ "./src/app/model/validators/employee-taxes-validator.ts");
/* harmony import */ var _model_validators_username_validator__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./model/validators/username-validator */ "./src/app/model/validators/username-validator.ts");
/* harmony import */ var _model_validators_password_validator__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./model/validators/password-validator */ "./src/app/model/validators/password-validator.ts");
/* harmony import */ var _model_validators_household_filer_must_exist_validator__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./model/validators/household-filer-must-exist-validator */ "./src/app/model/validators/household-filer-must-exist-validator.ts");
/* harmony import */ var _model_validators_earnings_validator__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./model/validators/earnings-validator */ "./src/app/model/validators/earnings-validator.ts");
/* harmony import */ var _model_validators_checkdate_criteria_validator__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./model/validators/checkdate-criteria-validator */ "./src/app/model/validators/checkdate-criteria-validator.ts");
/* harmony import */ var _model_validators_address_criteria_validator__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./model/validators/address-criteria-validator */ "./src/app/model/validators/address-criteria-validator.ts");
/* harmony import */ var _model_validators_document_signing_complete_validator__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./model/validators/document-signing-complete-validator */ "./src/app/model/validators/document-signing-complete-validator.ts");
/* harmony import */ var _model_validators_must_not_be_exempt_validator__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./model/validators/must-not-be-exempt-validator */ "./src/app/model/validators/must-not-be-exempt-validator.ts");
/* harmony import */ var _model_validators_dynamic_range_validator__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./model/validators/dynamic-range-validator */ "./src/app/model/validators/dynamic-range-validator.ts");
/* harmony import */ var _model_validators_ein_validator__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./model/validators/ein-validator */ "./src/app/model/validators/ein-validator.ts");
/* harmony import */ var _model_validators_verified_address_validator__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./model/validators/verified-address-validator */ "./src/app/model/validators/verified-address-validator.ts");
/* harmony import */ var _store_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./store/entity/entity-selectors */ "./src/app/store/entity/entity-selectors.ts");
/* harmony import */ var _store_entity_entity_services_earning_service__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./store/entity/entity-services/earning.service */ "./src/app/store/entity/entity-services/earning.service.ts");
/* harmony import */ var _core_services_holidays_service__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./core/services/holidays.service */ "./src/app/core/services/holidays.service.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 











































































































































var AppDevModuleNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcmf"](_app_dev_module__WEBPACK_IMPORTED_MODULE_1__["AppDevModule"], [_app_component__WEBPACK_IMPORTED_MODULE_2__["AppComponent"]], function (_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmod"]([_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵCodegenComponentFactoryResolver"], [[8, [_node_modules_angular_router_router_ngfactory__WEBPACK_IMPORTED_MODULE_3__["ɵEmptyOutletComponentNgFactory"], _node_modules_ng_bootstrap_ng_bootstrap_ng_bootstrap_ngfactory__WEBPACK_IMPORTED_MODULE_4__["NgbAlertNgFactory"], _node_modules_ng_bootstrap_ng_bootstrap_ng_bootstrap_ngfactory__WEBPACK_IMPORTED_MODULE_4__["NgbDatepickerNgFactory"], _node_modules_ng_bootstrap_ng_bootstrap_ng_bootstrap_ngfactory__WEBPACK_IMPORTED_MODULE_4__["ɵzNgFactory"], _node_modules_ng_bootstrap_ng_bootstrap_ng_bootstrap_ngfactory__WEBPACK_IMPORTED_MODULE_4__["ɵbaNgFactory"], _node_modules_ng_bootstrap_ng_bootstrap_ng_bootstrap_ngfactory__WEBPACK_IMPORTED_MODULE_4__["ɵsNgFactory"], _node_modules_ng_bootstrap_ng_bootstrap_ng_bootstrap_ngfactory__WEBPACK_IMPORTED_MODULE_4__["ɵvNgFactory"], _node_modules_ng_bootstrap_ng_bootstrap_ng_bootstrap_ngfactory__WEBPACK_IMPORTED_MODULE_4__["ɵwNgFactory"], _mock_signin_mock_signin_component_ngfactory__WEBPACK_IMPORTED_MODULE_5__["MockSigninComponentNgFactory"], _terms_terms_component_ngfactory__WEBPACK_IMPORTED_MODULE_6__["TermsComponentNgFactory"], _failed_failed_component_ngfactory__WEBPACK_IMPORTED_MODULE_7__["FailedComponentNgFactory"], _concurrency_failure_concurrency_failure_component_ngfactory__WEBPACK_IMPORTED_MODULE_8__["ConcurrencyFailureComponentNgFactory"], _auth_components_auth_failed_component_ngfactory__WEBPACK_IMPORTED_MODULE_9__["AuthFailedComponentNgFactory"], _auth_components_oidc_callback_component_ngfactory__WEBPACK_IMPORTED_MODULE_10__["OidcCallbackComponentNgFactory"], _auth_components_signed_out_component_ngfactory__WEBPACK_IMPORTED_MODULE_11__["SignedOutComponentNgFactory"], _auth_components_unauthorized_component_ngfactory__WEBPACK_IMPORTED_MODULE_12__["UnauthorizedComponentNgFactory"], _node_modules_ngx_toastr_ngx_toastr_ngfactory__WEBPACK_IMPORTED_MODULE_13__["ToastNgFactory"], _app_component_ngfactory__WEBPACK_IMPORTED_MODULE_14__["AppComponentNgFactory"]]], [3, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]], _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModuleRef"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵangular_packages_core_core_k"], [[3, _angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_common__WEBPACK_IMPORTED_MODULE_15__["NgLocalization"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["NgLocaleLocalization"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"], [2, _angular_common__WEBPACK_IMPORTED_MODULE_15__["ɵangular_packages_common_common_a"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_core__WEBPACK_IMPORTED_MODULE_0__["APP_ID"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵangular_packages_core_core_f"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵangular_packages_core_core_i"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵangular_packages_core_core_j"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["DomSanitizer"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵDomSanitizerImpl"], [_angular_common__WEBPACK_IMPORTED_MODULE_15__["DOCUMENT"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](6144, _angular_core__WEBPACK_IMPORTED_MODULE_0__["Sanitizer"], null, [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["DomSanitizer"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["HAMMER_GESTURE_CONFIG"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["HammerGestureConfig"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["EVENT_MANAGER_PLUGINS"], function (p0_0, p0_1, p0_2, p1_0, p2_0, p2_1, p2_2, p2_3) { return [new _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵDomEventsPlugin"](p0_0, p0_1, p0_2), new _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵKeyEventsPlugin"](p1_0), new _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵHammerGesturesPlugin"](p2_0, p2_1, p2_2, p2_3)]; }, [_angular_common__WEBPACK_IMPORTED_MODULE_15__["DOCUMENT"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["PLATFORM_ID"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["DOCUMENT"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["DOCUMENT"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["HAMMER_GESTURE_CONFIG"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵConsole"], [2, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["HAMMER_LOADER"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["EventManager"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["EventManager"], [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["EVENT_MANAGER_PLUGINS"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](135680, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵDomSharedStylesHost"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵDomSharedStylesHost"], [_angular_common__WEBPACK_IMPORTED_MODULE_15__["DOCUMENT"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵDomRendererFactory2"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵDomRendererFactory2"], [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["EventManager"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵDomSharedStylesHost"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_animations_browser__WEBPACK_IMPORTED_MODULE_17__["AnimationDriver"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_18__["ɵangular_packages_platform_browser_animations_animations_b"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_animations_browser__WEBPACK_IMPORTED_MODULE_17__["ɵAnimationStyleNormalizer"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_18__["ɵangular_packages_platform_browser_animations_animations_c"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_animations_browser__WEBPACK_IMPORTED_MODULE_17__["ɵAnimationEngine"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_18__["ɵangular_packages_platform_browser_animations_animations_a"], [_angular_common__WEBPACK_IMPORTED_MODULE_15__["DOCUMENT"], _angular_animations_browser__WEBPACK_IMPORTED_MODULE_17__["AnimationDriver"], _angular_animations_browser__WEBPACK_IMPORTED_MODULE_17__["ɵAnimationStyleNormalizer"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_core__WEBPACK_IMPORTED_MODULE_0__["RendererFactory2"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_18__["ɵangular_packages_platform_browser_animations_animations_d"], [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵDomRendererFactory2"], _angular_animations_browser__WEBPACK_IMPORTED_MODULE_17__["ɵAnimationEngine"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](6144, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵSharedStylesHost"], null, [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵDomSharedStylesHost"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_core__WEBPACK_IMPORTED_MODULE_0__["Testability"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Testability"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_animations__WEBPACK_IMPORTED_MODULE_19__["AnimationBuilder"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_18__["ɵBrowserAnimationBuilder"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["RendererFactory2"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["DOCUMENT"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_forms__WEBPACK_IMPORTED_MODULE_20__["ɵangular_packages_forms_forms_i"], _angular_forms__WEBPACK_IMPORTED_MODULE_20__["ɵangular_packages_forms_forms_i"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_forms__WEBPACK_IMPORTED_MODULE_20__["FormBuilder"], _angular_forms__WEBPACK_IMPORTED_MODULE_20__["FormBuilder"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbModal"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbModal"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["ɵbb"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbModalConfig"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _core_analytics_analytics_service__WEBPACK_IMPORTED_MODULE_22__["ANALYTICS_EVENT_PROVIDER"], function (p0_0) { return [new _core_analytics_providers_router_navigation_analytics_provider__WEBPACK_IMPORTED_MODULE_23__["RouterAnalyticsNavigationProvider"](p0_0)]; }, [_angular_router__WEBPACK_IMPORTED_MODULE_24__["Router"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _core_analytics_analytics_service__WEBPACK_IMPORTED_MODULE_22__["ANALYTICS_EVENT_RECEIVER"], function (p0_0, p0_1) { return [new _core_analytics_receivers_google_tagmanager_receiver__WEBPACK_IMPORTED_MODULE_25__["GoogleTagManagerReceiver"](p0_0, p0_1)]; }, [_angular_common__WEBPACK_IMPORTED_MODULE_15__["DOCUMENT"], _core_services_logger_service__WEBPACK_IMPORTED_MODULE_26__["LoggerService"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpXsrfTokenExtractor"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_g"], [_angular_common__WEBPACK_IMPORTED_MODULE_15__["DOCUMENT"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["PLATFORM_ID"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_e"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_h"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_h"], [_angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpXsrfTokenExtractor"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_f"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_b"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_c"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["JsonpClientBackend"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["JsonpClientBackend"], [_angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_b"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["DOCUMENT"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HTTP_INTERCEPTORS"], function (p0_0, p1_0, p3_0, p4_0, p4_1, p4_2, p5_0, p5_1, p5_2, p6_0, p7_0) { return [new _core_http_interceptors_busy_http_interceptor__WEBPACK_IMPORTED_MODULE_28__["BusyHttpInterceptor"](p0_0), new _core_http_interceptors_read_only_http_interceptor__WEBPACK_IMPORTED_MODULE_29__["ReadOnlyHttpInterceptor"](p1_0), new _core_http_interceptors_accept_json_only_http_interceptor__WEBPACK_IMPORTED_MODULE_30__["AcceptJsonOnlyHttpInterceptor"](), new _core_http_interceptors_queued_request_http_interceptor__WEBPACK_IMPORTED_MODULE_31__["QueuedRequestHttpInterceptor"](p3_0), new _core_http_interceptors_auth_http_interceptor__WEBPACK_IMPORTED_MODULE_32__["AuthHttpInterceptor"](p4_0, p4_1, p4_2), new _core_http_interceptors_concurrency_http_interceptor__WEBPACK_IMPORTED_MODULE_33__["ConcurrencyHttpInterceptor"](p5_0, p5_1, p5_2), p6_0, new _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["JsonpInterceptor"](p7_0)]; }, [_core_services_busy_service__WEBPACK_IMPORTED_MODULE_34__["BusyService"], _store_session_session_service__WEBPACK_IMPORTED_MODULE_35__["SessionService"], _store_session_session_service__WEBPACK_IMPORTED_MODULE_35__["SessionService"], _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_36__["AuthService"], _store_session_session_service__WEBPACK_IMPORTED_MODULE_35__["SessionService"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["Router"], _store_entity_entity_services_company_service__WEBPACK_IMPORTED_MODULE_37__["CompanyService"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["Router"], _store_session_session_service__WEBPACK_IMPORTED_MODULE_35__["SessionService"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_h"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["JsonpClientBackend"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpXhrBackend"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpXhrBackend"], [_angular_common_http__WEBPACK_IMPORTED_MODULE_27__["XhrFactory"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_router__WEBPACK_IMPORTED_MODULE_24__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_g"], [_angular_router__WEBPACK_IMPORTED_MODULE_24__["Router"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_router__WEBPACK_IMPORTED_MODULE_24__["NoPreloading"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["NoPreloading"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](6144, _angular_router__WEBPACK_IMPORTED_MODULE_24__["PreloadingStrategy"], null, [_angular_router__WEBPACK_IMPORTED_MODULE_24__["NoPreloading"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](135680, _angular_router__WEBPACK_IMPORTED_MODULE_24__["RouterPreloader"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["RouterPreloader"], [_angular_router__WEBPACK_IMPORTED_MODULE_24__["Router"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModuleFactoryLoader"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Compiler"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["PreloadingStrategy"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_router__WEBPACK_IMPORTED_MODULE_24__["PreloadAllModules"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["PreloadAllModules"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_n"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_c"], [_angular_router__WEBPACK_IMPORTED_MODULE_24__["Router"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["ViewportScroller"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ROUTER_CONFIGURATION"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_router__WEBPACK_IMPORTED_MODULE_24__["ROUTER_INITIALIZER"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_j"], [_angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_h"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _angular_core__WEBPACK_IMPORTED_MODULE_0__["APP_BOOTSTRAP_LISTENER"], function (p0_0) { return [p0_0]; }, [_angular_router__WEBPACK_IMPORTED_MODULE_24__["ROUTER_INITIALIZER"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["CorrelationIdGenerator"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["CorrelationIdGenerator"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4352, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDispatcherDefaultOptions"], { optimisticAdd: true, optimisticDelete: true, optimisticUpdate: true, optimisticUpsert: true, optimisticSaveEntities: true }, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCacheDispatcher"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCacheDispatcher"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["CorrelationIdGenerator"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDispatcherDefaultOptions"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ScannedActionsSubject"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["Store"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_CACHE_SELECTOR_TOKEN"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["createEntityCacheSelector"], [[2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_CACHE_NAME_TOKEN"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](135680, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDispatcherFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDispatcherFactory"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityActionFactory"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["Store"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDispatcherDefaultOptions"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ScannedActionsSubject"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_CACHE_SELECTOR_TOKEN"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["CorrelationIdGenerator"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntitySelectorsFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntitySelectorsFactory"], [[2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionCreator"]], [2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_CACHE_SELECTOR_TOKEN"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntitySelectors$Factory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntitySelectors$Factory"], [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["Store"], _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["Actions"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_CACHE_SELECTOR_TOKEN"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionServiceElementsFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionServiceElementsFactory"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDispatcherFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDefinitionService"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntitySelectorsFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntitySelectors$Factory"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionServiceFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionServiceFactory"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionServiceElementsFactory"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityServicesElements"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityServicesElements"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionServiceFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDispatcherFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntitySelectors$Factory"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["Store"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityServices"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityServicesBase"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityServicesElements"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["DefaultDataService"], _store_entity_entity_services_sp_entity_collection_dataservice__WEBPACK_IMPORTED_MODULE_41__["SpEntityCollectionDataServiceFactory"], [_angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClient"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["HttpUrlGenerator"], [2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["DefaultDataServiceConfig"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](135680, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["State"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["State"], [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ActionsSubject"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ReducerObservable"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ScannedActionsSubject"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["INITIAL_STATE"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](5120, _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_a"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_b"], [_ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_j"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_h"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["OverlayContainer"], ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["OverlayContainer"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["Overlay"], ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["Overlay"], [ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["OverlayContainer"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationRef"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["ToastrService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["ToastrService"], [ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["TOAST_CONFIG"], ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["Overlay"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["DomSanitizer"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_common__WEBPACK_IMPORTED_MODULE_15__["DecimalPipe"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["DecimalPipe"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _angular_common__WEBPACK_IMPORTED_MODULE_15__["DatePipe"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["DatePipe"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["LOCALE_ID"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbRadioGroup"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbRadioGroup"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbDateParserFormatter"], _shared_filter_filter_dateformat__WEBPACK_IMPORTED_MODULE_44__["DateParserFormatter"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](6144, _mock_services_in_memory_data_service__WEBPACK_IMPORTED_MODULE_45__["InMemoryDataService"], null, [angular_in_memory_web_api_interfaces__WEBPACK_IMPORTED_MODULE_46__["InMemoryDbService"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](4608, _core_services_auth_services_oidc_manager_factory__WEBPACK_IMPORTED_MODULE_47__["OidcManagerFactory"], _mock_auth_mock_oidc_manager_factory__WEBPACK_IMPORTED_MODULE_48__["MockOidcManagerFactory"], [_mock_auth_mock_oidc_manager__WEBPACK_IMPORTED_MODULE_49__["MockOidcManager"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_common__WEBPACK_IMPORTED_MODULE_15__["CommonModule"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["CommonModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ErrorHandler"], _core_error_handling_sentry_error_handler__WEBPACK_IMPORTED_MODULE_50__["SentryErrorHandler"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgProbeToken"], function () { return [_angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_b"]()]; }, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_h"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_h"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _angular_core__WEBPACK_IMPORTED_MODULE_0__["APP_INITIALIZER"], function (p0_0, p1_0) { return [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["ɵangular_packages_platform_browser_platform_browser_j"](p0_0), _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_i"](p1_0)]; }, [[2, _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgProbeToken"]], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_h"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationInitStatus"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationInitStatus"], [[2, _angular_core__WEBPACK_IMPORTED_MODULE_0__["APP_INITIALIZER"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](131584, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationRef"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵConsole"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ErrorHandler"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationInitStatus"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationModule"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationModule"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationRef"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["BrowserModule"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["BrowserModule"], [[3, _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__["BrowserModule"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_18__["BrowserAnimationsModule"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_18__["BrowserAnimationsModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_forms__WEBPACK_IMPORTED_MODULE_20__["ɵangular_packages_forms_forms_bb"], _angular_forms__WEBPACK_IMPORTED_MODULE_20__["ɵangular_packages_forms_forms_bb"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_forms__WEBPACK_IMPORTED_MODULE_20__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_20__["FormsModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_forms__WEBPACK_IMPORTED_MODULE_20__["ReactiveFormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_20__["ReactiveFormsModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_a"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_e"], [[3, _angular_router__WEBPACK_IMPORTED_MODULE_24__["Router"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_router__WEBPACK_IMPORTED_MODULE_24__["UrlSerializer"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["DefaultUrlSerializer"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_router__WEBPACK_IMPORTED_MODULE_24__["ChildrenOutletContexts"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ChildrenOutletContexts"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, _angular_router__WEBPACK_IMPORTED_MODULE_24__["ROUTER_CONFIGURATION"], { enableTracing: false }, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _angular_common__WEBPACK_IMPORTED_MODULE_15__["LocationStrategy"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_d"], [_angular_common__WEBPACK_IMPORTED_MODULE_15__["PlatformLocation"], [2, _angular_common__WEBPACK_IMPORTED_MODULE_15__["APP_BASE_HREF"]], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ROUTER_CONFIGURATION"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_common__WEBPACK_IMPORTED_MODULE_15__["Location"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["Location"], [_angular_common__WEBPACK_IMPORTED_MODULE_15__["LocationStrategy"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_core__WEBPACK_IMPORTED_MODULE_0__["Compiler"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Compiler"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModuleFactoryLoader"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["SystemJsNgModuleLoader"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Compiler"], [2, _angular_core__WEBPACK_IMPORTED_MODULE_0__["SystemJsNgModuleLoaderConfig"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _angular_router__WEBPACK_IMPORTED_MODULE_24__["ROUTES"], function () { return [[{ path: "mock-signin", pathMatch: "full", component: _mock_signin_mock_signin_component__WEBPACK_IMPORTED_MODULE_51__["MockSigninComponent"], data: _mock_signin_mock_signin_module__WEBPACK_IMPORTED_MODULE_52__["ɵ0"] }], [{ path: "", pathMatch: "full", redirectTo: "dashboard" }, { path: "about-you", canActivateChild: [_core_routing_guards_data_entry_page_guard__WEBPACK_IMPORTED_MODULE_53__["DataEntryPageGuard"]], loadChildren: "@app/about-you/about-you.module#AboutYouModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ0"] }, { path: "account-view", canActivate: [_core_routing_guards_account_view_guard__WEBPACK_IMPORTED_MODULE_55__["AccountViewGuard"]], loadChildren: "@app/account-view/account-view.module#AccountViewModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ1"] }, { path: "admin", canActivateChild: [_core_routing_guards_admin_console_guard__WEBPACK_IMPORTED_MODULE_56__["AdminConsoleGuard"]], loadChildren: "@app/admin-console/admin-console.module#AdminConsoleModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ2"] }, { path: "company-bank-account", canActivateChild: [_core_routing_guards_data_entry_page_guard__WEBPACK_IMPORTED_MODULE_53__["DataEntryPageGuard"]], loadChildren: "@app/company-bank-info/company-bank-info.module#CompanyBankInfoModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ3"] }, { path: "company-info", canActivateChild: [_core_routing_guards_data_entry_page_guard__WEBPACK_IMPORTED_MODULE_53__["DataEntryPageGuard"]], loadChildren: "@app/company-info/company-info.module#CompanyInfoModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ4"] }, { path: "tax-info", canActivateChild: [_core_routing_guards_data_entry_page_guard__WEBPACK_IMPORTED_MODULE_53__["DataEntryPageGuard"]], loadChildren: "@app/company-tax-info/company-tax-info.module#CompanyTaxInfoModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ5"] }, { path: "dashboard", canActivateChild: [_core_routing_guards_data_entry_page_guard__WEBPACK_IMPORTED_MODULE_53__["DataEntryPageGuard"]], loadChildren: "@app/dashboard/dashboard.module#DashboardModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ6"] }, { path: "earnings", canActivateChild: [_core_routing_guards_data_entry_page_guard__WEBPACK_IMPORTED_MODULE_53__["DataEntryPageGuard"]], loadChildren: "@app/earnings/earnings.module#EarningsModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ7"] }, { path: "employees", canActivateChild: [_core_routing_guards_data_entry_page_guard__WEBPACK_IMPORTED_MODULE_53__["DataEntryPageGuard"]], loadChildren: "@app/employees/employees.module#EmployeesModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ8"] }, { path: "documents", canActivate: [_core_routing_guards_single_page_status_guard__WEBPACK_IMPORTED_MODULE_57__["SinglePageStatusGuard"]], loadChildren: "@app/documents/documents.module#DocumentsModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ9"] }, { path: "review", canActivate: [_core_routing_guards_account_view_guard__WEBPACK_IMPORTED_MODULE_55__["AccountViewGuard"]], loadChildren: "@app/review/review.module#ReviewModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ10"] }, { path: "terms", component: _terms_terms_component__WEBPACK_IMPORTED_MODULE_58__["TermsComponent"] }, { path: "enrolled", canActivate: [_core_routing_guards_single_page_status_guard__WEBPACK_IMPORTED_MODULE_57__["SinglePageStatusGuard"]], loadChildren: "@app/enrolled/enrolled.module#EnrolledModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ11"] }, { path: "abandoned", canActivate: [_core_routing_guards_single_page_status_guard__WEBPACK_IMPORTED_MODULE_57__["SinglePageStatusGuard"]], loadChildren: "@app/abandoned/abandoned.module#AbandonedModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ12"] }, { path: "processing", canActivate: [_core_routing_guards_single_page_status_guard__WEBPACK_IMPORTED_MODULE_57__["SinglePageStatusGuard"]], loadChildren: "@app/processing/processing.module#ProcessingModule", data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ13"] }, { path: "failed", component: _failed_failed_component__WEBPACK_IMPORTED_MODULE_59__["FailedComponent"], data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ14"] }, { path: "concurrency-failure", component: _concurrency_failure_concurrency_failure_component__WEBPACK_IMPORTED_MODULE_60__["ConcurrencyFailureComponent"], data: _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["ɵ15"] }], [{ path: "error", component: _auth_components_auth_failed_component__WEBPACK_IMPORTED_MODULE_61__["AuthFailedComponent"], data: { title: "Signin Failed" }, canDeactivate: [_core_routing_guards_auth_failed_guard__WEBPACK_IMPORTED_MODULE_62__["AuthFailedGuard"]] }, { path: "oidc-callback", component: _auth_components_oidc_callback_component__WEBPACK_IMPORTED_MODULE_63__["OidcCallbackComponent"] }, { path: "signed-out", component: _auth_components_signed_out_component__WEBPACK_IMPORTED_MODULE_64__["SignedOutComponent"], data: { title: "Signed-out" } }, { path: "unauthorized", component: _auth_components_unauthorized_component__WEBPACK_IMPORTED_MODULE_65__["UnauthorizedComponent"], data: { title: "Unauthorized" } }], [{ path: "**", redirectTo: "" }]]; }, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_router__WEBPACK_IMPORTED_MODULE_24__["RouteReuseStrategy"], _core_sp_route_reuse_strategy__WEBPACK_IMPORTED_MODULE_66__["SpRouteReuseStrategy"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _angular_router__WEBPACK_IMPORTED_MODULE_24__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_f"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ApplicationRef"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["UrlSerializer"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ChildrenOutletContexts"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["Location"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModuleFactoryLoader"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Compiler"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ROUTES"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["ROUTER_CONFIGURATION"], [2, _angular_router__WEBPACK_IMPORTED_MODULE_24__["UrlHandlingStrategy"]], [2, _angular_router__WEBPACK_IMPORTED_MODULE_24__["RouteReuseStrategy"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_router__WEBPACK_IMPORTED_MODULE_24__["RouterModule"], _angular_router__WEBPACK_IMPORTED_MODULE_24__["RouterModule"], [[2, _angular_router__WEBPACK_IMPORTED_MODULE_24__["ɵangular_packages_router_router_a"]], [2, _angular_router__WEBPACK_IMPORTED_MODULE_24__["Router"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbAccordionModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbAccordionModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbAlertModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbAlertModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbButtonsModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbButtonsModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbCarouselModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbCarouselModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbCollapseModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbCollapseModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbDatepickerModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbDatepickerModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbDropdownModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbDropdownModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbModalModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbModalModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbPaginationModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbPaginationModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbPopoverModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbPopoverModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbProgressbarModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbProgressbarModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbRatingModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbRatingModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbTabsetModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbTabsetModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbTimepickerModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbTimepickerModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbTooltipModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbTooltipModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbTypeaheadModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbTypeaheadModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, angular2_text_mask__WEBPACK_IMPORTED_MODULE_67__["TextMaskModule"], angular2_text_mask__WEBPACK_IMPORTED_MODULE_67__["TextMaskModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _shared_shared_module__WEBPACK_IMPORTED_MODULE_68__["SharedModule"], _shared_shared_module__WEBPACK_IMPORTED_MODULE_68__["SharedModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _account_details_account_details_module__WEBPACK_IMPORTED_MODULE_69__["AccountDetailsModule"], _account_details_account_details_module__WEBPACK_IMPORTED_MODULE_69__["AccountDetailsModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _core_analytics_analytics_module__WEBPACK_IMPORTED_MODULE_70__["AnalyticsModule"], _core_analytics_analytics_module__WEBPACK_IMPORTED_MODULE_70__["AnalyticsModule"], [[3, _core_analytics_analytics_module__WEBPACK_IMPORTED_MODULE_70__["AnalyticsModule"]], _core_analytics_analytics_service__WEBPACK_IMPORTED_MODULE_22__["AnalyticsService"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _auth_components_auth_components_module__WEBPACK_IMPORTED_MODULE_71__["AuthComponentsModule"], _auth_components_auth_components_module__WEBPACK_IMPORTED_MODULE_71__["AuthComponentsModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _core_services_location_services_geolocation_service__WEBPACK_IMPORTED_MODULE_72__["GeolocationService"], _core_services_location_services_browser_geolocation_service__WEBPACK_IMPORTED_MODULE_73__["BrowserGeolocationService"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _core_services_location_services_address_finder_service__WEBPACK_IMPORTED_MODULE_74__["AddressFinderService"], _core_services_location_services_google_places_service__WEBPACK_IMPORTED_MODULE_75__["GooglePlacesService"], [_core_services_logger_service__WEBPACK_IMPORTED_MODULE_26__["LoggerService"], _core_window__WEBPACK_IMPORTED_MODULE_76__["WindowToken"], [2, _core_services_location_services_geolocation_service__WEBPACK_IMPORTED_MODULE_72__["GeolocationService"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _core_core_module__WEBPACK_IMPORTED_MODULE_77__["CoreModule"], _core_core_module__WEBPACK_IMPORTED_MODULE_77__["CoreModule"], [[3, _core_core_module__WEBPACK_IMPORTED_MODULE_77__["CoreModule"]], _core_services_location_services_address_finder_service__WEBPACK_IMPORTED_MODULE_74__["AddressFinderService"], _core_services_title_service__WEBPACK_IMPORTED_MODULE_78__["TitleService"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _core_components_core_components_module__WEBPACK_IMPORTED_MODULE_79__["CoreComponentsModule"], _core_components_core_components_module__WEBPACK_IMPORTED_MODULE_79__["CoreComponentsModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClientXsrfModule"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClientXsrfModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClientModule"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClientModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClientJsonpModule"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClientJsonpModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _mock_signin_mock_signin_module__WEBPACK_IMPORTED_MODULE_52__["MockSigninModule"], _mock_signin_mock_signin_module__WEBPACK_IMPORTED_MODULE_52__["MockSigninModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["AppRoutingModule"], _app_routing_module__WEBPACK_IMPORTED_MODULE_54__["AppRoutingModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](131584, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ActionsSubject"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ActionsSubject"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](131584, _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_g"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_g"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](2048, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ReducerManagerDispatcher"], null, [_ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_g"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_INITIAL_STATE"], undefined, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["INITIAL_STATE"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_initialStateFactory"], [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_INITIAL_STATE"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_INITIAL_REDUCERS"], {}, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](2048, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_STORE_REDUCERS"], null, [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_INITIAL_REDUCERS"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["INITIAL_REDUCERS"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_createStoreReducers"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_INITIAL_REDUCERS"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_STORE_REDUCERS"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_REDUCER_FACTORY"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["combineReducers"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["META_REDUCERS"], [], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["REDUCER_FACTORY"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["createReducerFactory"], [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_REDUCER_FACTORY"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["META_REDUCERS"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](131584, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ReducerManager"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ReducerManager"], [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ReducerManagerDispatcher"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["INITIAL_STATE"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["INITIAL_REDUCERS"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["REDUCER_FACTORY"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](2048, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ReducerObservable"], null, [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ReducerManager"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](131584, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ScannedActionsSubject"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ScannedActionsSubject"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_j"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_c"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_i"], {}, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_h"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_f"], [_ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_i"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_k"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_k"], [_ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_j"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_h"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["StoreDevtools"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["StoreDevtools"], [_ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_g"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ActionsSubject"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ReducerObservable"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_k"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ScannedActionsSubject"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ErrorHandler"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["INITIAL_STATE"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_h"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["StateObservable"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["ɵngrx_modules_store_devtools_store_devtools_d"], [_ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["StoreDevtools"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["Store"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["Store"], [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["StateObservable"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ActionsSubject"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ReducerManager"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["StoreRootModule"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["StoreRootModule"], [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ActionsSubject"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ReducerObservable"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ScannedActionsSubject"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["Store"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["EffectSources"], _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["EffectSources"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ErrorHandler"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](131584, _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["ɵngrx_modules_effects_effects_f"], _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["ɵngrx_modules_effects_effects_f"], [_ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["EffectSources"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["Store"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["ɵngrx_modules_effects_effects_d"], _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["ɵngrx_modules_effects_effects_a"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["STORE_FEATURES"], function () { return [{ key: "session", reducerFactory: _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["combineReducers"], metaReducers: [], initialState: undefined }]; }, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_FEATURE_REDUCERS"], function () { return [_store_session_reducer__WEBPACK_IMPORTED_MODULE_80__["sessionReducer"]]; }, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_FEATURE_REDUCERS_TOKEN"], function (p0_0) { return [p0_0]; }, [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_FEATURE_REDUCERS"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["FEATURE_REDUCERS"], function (p0_0, p0_1, p0_2) { return [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_createFeatureReducers"](p0_0, p0_1, p0_2)]; }, [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_FEATURE_REDUCERS"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["_FEATURE_REDUCERS_TOKEN"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073873408, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["StoreFeatureModule"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["StoreFeatureModule"], [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["STORE_FEATURES"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["FEATURE_REDUCERS"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ReducerManager"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["StoreRootModule"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["ɵngrx_modules_effects_effects_b"], _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["ɵngrx_modules_effects_effects_b"], [_ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["EffectSources"], _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["ɵngrx_modules_effects_effects_f"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["Store"], _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["ɵngrx_modules_effects_effects_d"], [2, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["StoreRootModule"]], [2, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["StoreFeatureModule"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _store_session_session_store_module__WEBPACK_IMPORTED_MODULE_81__["SessionStoreModule"], _store_session_session_store_module__WEBPACK_IMPORTED_MODULE_81__["SessionStoreModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["StoreModule"], _ngrx_store__WEBPACK_IMPORTED_MODULE_39__["StoreModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_METADATA_TOKEN"], function () { return [{ Address: {}, Ancillary: {}, Company: { sortComparer: _store_entity_sort_comparers__WEBPACK_IMPORTED_MODULE_82__["sortByName"] }, CompanyDeduction: {}, CompanyDeductionParameter: {}, CompanyTax: {}, CompanyAncillary: {}, CompanyEarning: {}, Deduction: { selectId: _store_entity_entity_metadata__WEBPACK_IMPORTED_MODULE_83__["selectDeductionId"] }, Document: {}, Earning: { selectId: _store_entity_entity_metadata__WEBPACK_IMPORTED_MODULE_83__["selectCode"] }, Employee: { sortComparer: _store_entity_sort_comparers__WEBPACK_IMPORTED_MODULE_82__["sortByFirstLast"] }, EmployeeDeduction: {}, EmployeeDeductionParameter: {}, EmployeePaymentMethod: {}, EmployeeTax: {}, Envelope: {}, EnvelopeSigner: {}, HouseholdFilers: {}, Stats: {}, User: { sortComparer: _store_entity_sort_comparers__WEBPACK_IMPORTED_MODULE_82__["sortByName"] }, TaxRate: {} }]; }, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDefinitionService"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDefinitionService"], [[2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_METADATA_TOKEN"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionCreator"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionCreator"], [[2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDefinitionService"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionReducerMethodsFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionReducerMethodsFactory"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDefinitionService"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionReducerFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionReducerFactory"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionReducerMethodsFactory"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_COLLECTION_META_REDUCERS"], [], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionReducerRegistry"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionReducerRegistry"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionReducerFactory"], [2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_COLLECTION_META_REDUCERS"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["Logger"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["DefaultLogger"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCacheReducerFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCacheReducerFactory"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionCreator"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCollectionReducerRegistry"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["Logger"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_CACHE_NAME_TOKEN"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_CACHE_NAME"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_CACHE_META_REDUCERS"], [], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073873408, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["NgrxDataModuleWithoutEffects"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["NgrxDataModuleWithoutEffects"], [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ReducerManager"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCacheReducerFactory"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], [2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_CACHE_NAME_TOKEN"]], [2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["INITIAL_ENTITY_CACHE_STATE"]], [2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ENTITY_CACHE_META_REDUCERS"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["EffectsModule"], _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["EffectsModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["Actions"], _ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["Actions"], [_ngrx_store__WEBPACK_IMPORTED_MODULE_39__["ScannedActionsSubject"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, angular_in_memory_web_api_interfaces__WEBPACK_IMPORTED_MODULE_46__["InMemoryDbService"], _mock_services_in_memory_data_service__WEBPACK_IMPORTED_MODULE_45__["InMemoryDataService"], [_mock_services_in_mem_account_service__WEBPACK_IMPORTED_MODULE_84__["InMemAccountService"], _mock_services_in_mem_address_validator_service__WEBPACK_IMPORTED_MODULE_85__["InMemAddressValidatorService"], _mock_services_in_mem_admin_service__WEBPACK_IMPORTED_MODULE_86__["InMemAdminService"], _mock_services_in_mem_company_package_service__WEBPACK_IMPORTED_MODULE_87__["InMemCompanyPackageService"], _mock_services_in_mem_deduction_service__WEBPACK_IMPORTED_MODULE_88__["InMemDeductionService"], _mock_services_in_mem_earning_service__WEBPACK_IMPORTED_MODULE_89__["InMemEarningService"], _mock_services_in_mem_ein_service__WEBPACK_IMPORTED_MODULE_90__["InMemEinService"], _mock_services_in_mem_esign_service__WEBPACK_IMPORTED_MODULE_91__["InMemEsignService"], _mock_services_in_mem_enrollment_service__WEBPACK_IMPORTED_MODULE_92__["InMemEnrollmentService"], _mock_services_in_mem_identity_service__WEBPACK_IMPORTED_MODULE_93__["InMemIdentityService"], _mock_services_in_mem_save_entities_service__WEBPACK_IMPORTED_MODULE_94__["InMemSaveEntitiesService"], _mock_services_in_mem_tax_service__WEBPACK_IMPORTED_MODULE_95__["InMemTaxService"], _mock_services_in_mem_tax_rate_service__WEBPACK_IMPORTED_MODULE_96__["InMemTaxRateService"], _mock_services_in_mem_surepayroll_service__WEBPACK_IMPORTED_MODULE_97__["InMemSurepayrollService"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, angular_in_memory_web_api_interfaces__WEBPACK_IMPORTED_MODULE_46__["InMemoryBackendConfig"], { dataEncapsulation: false, delay: 500, passThruUnknownUrl: true }, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_d"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_d"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](2048, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["XhrFactory"], null, [_angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_d"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpBackend"], _mock_services_http_client_backend_service_sp__WEBPACK_IMPORTED_MODULE_98__["httpClientInMemBackendServiceFactory"], [angular_in_memory_web_api_interfaces__WEBPACK_IMPORTED_MODULE_46__["InMemoryDbService"], angular_in_memory_web_api_interfaces__WEBPACK_IMPORTED_MODULE_46__["InMemoryBackendConfig"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["XhrFactory"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpHandler"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵHttpInterceptingHandler"], [_angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpBackend"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClient"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClient"], [_angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpHandler"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["DefaultDataServiceConfig"], { root: "http://localhost:5105", timeout: 60000 }, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCacheDataService"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCacheDataService"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDefinitionService"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClient"], [2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["DefaultDataServiceConfig"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityActionFactory"], _store_entity_sp_entity_action_factory__WEBPACK_IMPORTED_MODULE_99__["SpEntityActionFactory"], [_core_services_id_generator_service__WEBPACK_IMPORTED_MODULE_100__["IdGeneratorService"], _store_session_session_selectors__WEBPACK_IMPORTED_MODULE_101__["SessionSelectors"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCacheEffects"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCacheEffects"], [_ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["Actions"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCacheDataService"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityActionFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["Logger"], [2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ɵa"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["Pluralizer"], _store_entity_data_service_config__WEBPACK_IMPORTED_MODULE_102__["NoPluralizer"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["HttpUrlGenerator"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["DefaultHttpUrlGenerator"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["Pluralizer"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["DefaultDataServiceFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["DefaultDataServiceFactory"], [_angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClient"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["HttpUrlGenerator"], [2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["DefaultDataServiceConfig"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDataService"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDataService"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["DefaultDataServiceFactory"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["PersistenceResultHandler"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["DefaultPersistenceResultHandler"], [ngrx_data__WEBPACK_IMPORTED_MODULE_38__["Logger"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityActionFactory"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityEffects"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityEffects"], [_ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["Actions"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityDataService"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityActionFactory"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["PersistenceResultHandler"], [2, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["ɵa"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["NgrxDataModule"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["NgrxDataModule"], [_ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["EffectSources"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityCacheEffects"], ngrx_data__WEBPACK_IMPORTED_MODULE_38__["EntityEffects"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](512, _store_entity_entity_services_ngrx_data_toast_service__WEBPACK_IMPORTED_MODULE_103__["NgrxDataToastService"], _store_entity_entity_services_ngrx_data_toast_service__WEBPACK_IMPORTED_MODULE_103__["NgrxDataToastService"], [_ngrx_effects__WEBPACK_IMPORTED_MODULE_40__["Actions"], _core_services_logger_service__WEBPACK_IMPORTED_MODULE_26__["LoggerService"], _core_services_toast_service__WEBPACK_IMPORTED_MODULE_104__["ToastService"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _store_entity_entity_services_entity_services_module__WEBPACK_IMPORTED_MODULE_105__["EntityServicesModule"], _store_entity_entity_services_entity_services_module__WEBPACK_IMPORTED_MODULE_105__["EntityServicesModule"], [_store_entity_entity_services_ngrx_data_toast_service__WEBPACK_IMPORTED_MODULE_103__["NgrxDataToastService"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _store_entity_entity_store_module__WEBPACK_IMPORTED_MODULE_106__["EntityStoreModule"], _store_entity_entity_store_module__WEBPACK_IMPORTED_MODULE_106__["EntityStoreModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["StoreDevtoolsModule"], _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_42__["StoreDevtoolsModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _store_app_store_module__WEBPACK_IMPORTED_MODULE_107__["AppStoreModule"], _store_app_store_module__WEBPACK_IMPORTED_MODULE_107__["AppStoreModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["ToastrModule"], ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["ToastrModule"], [[3, ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["ToastrModule"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _core_error_handling_sentry_enricher__WEBPACK_IMPORTED_MODULE_108__["SENTRY_ENRICHER"], function (p0_0, p0_1, p1_0) { return [new _core_error_handling_auth_error_enricher__WEBPACK_IMPORTED_MODULE_109__["AuthErrorEnricher"](p0_0, p0_1), new _core_error_handling_logger_enricher__WEBPACK_IMPORTED_MODULE_110__["LoggerServiceEnricher"](p1_0)]; }, [_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_36__["AuthService"], _store_session_session_service__WEBPACK_IMPORTED_MODULE_35__["SessionService"], _core_services_logger_service__WEBPACK_IMPORTED_MODULE_26__["LoggerService"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _core_error_handling_sentry_module__WEBPACK_IMPORTED_MODULE_111__["SentryModule"], _core_error_handling_sentry_module__WEBPACK_IMPORTED_MODULE_111__["SentryModule"], [[2, _core_error_handling_sentry_enricher__WEBPACK_IMPORTED_MODULE_108__["SENTRY_ENRICHER"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _store_validation_validation_module__WEBPACK_IMPORTED_MODULE_112__["ValidationModule"], _store_validation_validation_module__WEBPACK_IMPORTED_MODULE_112__["ValidationModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _app_module__WEBPACK_IMPORTED_MODULE_113__["AppModule"], _app_module__WEBPACK_IMPORTED_MODULE_113__["AppModule"], [_store_entity_entity_services_stats_service__WEBPACK_IMPORTED_MODULE_114__["StatsService"], _core_services_tax_services_tax_collector_service__WEBPACK_IMPORTED_MODULE_115__["TaxCollectorService"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, angular_in_memory_web_api_http_client_in_memory_web_api_module__WEBPACK_IMPORTED_MODULE_116__["HttpClientInMemoryWebApiModule"], angular_in_memory_web_api_http_client_in_memory_web_api_module__WEBPACK_IMPORTED_MODULE_116__["HttpClientInMemoryWebApiModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _mock_services_mock_services_module__WEBPACK_IMPORTED_MODULE_117__["MockServicesModule"], _mock_services_mock_services_module__WEBPACK_IMPORTED_MODULE_117__["MockServicesModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _mock_auth_mock_auth_module__WEBPACK_IMPORTED_MODULE_118__["MockAuthModule"], _mock_auth_mock_auth_module__WEBPACK_IMPORTED_MODULE_118__["MockAuthModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1073742336, _app_dev_module__WEBPACK_IMPORTED_MODULE_1__["AppDevModule"], _app_dev_module__WEBPACK_IMPORTED_MODULE_1__["AppDevModule"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵAPP_ROOT"], true, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_18__["ANIMATION_MODULE_TYPE"], "BrowserAnimations", []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_e"], "XSRF-TOKEN", []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["ɵangular_packages_common_http_http_f"], "X-XSRF-TOKEN", []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, ngrx_data__WEBPACK_IMPORTED_MODULE_38__["PLURAL_NAMES_TOKEN"], function () { return [{}]; }, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _store_validation_validation_service__WEBPACK_IMPORTED_MODULE_119__["VALIDATOR_FACTORY"], function (p14_0, p15_0, p16_0, p17_0, p18_0, p20_0, p21_0, p22_0, p23_0, p23_1, p24_0, p24_1, p25_0, p26_0, p27_0, p28_0) { return [{ name: "required", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["RequiredValidator"].create }, { name: "minLength", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["MinLengthValidator"].create }, { name: "maxLength", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["MaxLengthValidator"].create }, { name: "zipCode", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["makeZipCodeValidator"] }, { name: "phone", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["makePhoneValidator"] }, { name: "email", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["makeEmailValidator"] }, { name: "currency", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["CurrencyValidator"].create }, { name: "social", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["makeSocialSecurityNumberValidator"] }, { name: "fein", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["makeFeinValidator"] }, { name: "compare", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["CompareValidator"].create }, { name: "range", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["RangeValidator"].create }, { name: "numeric", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["makeNumericValidator"] }, { name: "invalidValues", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["InvalidValuesValidator"].create }, { name: "expression", fn: _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["ExpressionValidator"].create }, _store_validation_default_validators__WEBPACK_IMPORTED_MODULE_120__["DateValidator"].factory(p14_0), _model_validators_must_have_employees_validator__WEBPACK_IMPORTED_MODULE_121__["MustHaveEmployeesValidator"].factory(p15_0), _model_validators_federal_taxes_validator__WEBPACK_IMPORTED_MODULE_122__["FederalTaxesValidator"].factory(p16_0), _model_validators_state_taxes_validator__WEBPACK_IMPORTED_MODULE_123__["StateTaxesValidator"].factory(p17_0), _model_validators_employee_taxes_validator__WEBPACK_IMPORTED_MODULE_124__["EmployeeTaxesValidator"].factory(p18_0), { name: "usernameInvalidCharacters", fn: _model_validators_username_validator__WEBPACK_IMPORTED_MODULE_125__["makeUsernameInvalidCharacterValidator"] }, _model_validators_username_validator__WEBPACK_IMPORTED_MODULE_125__["UniqueUsernameValidator"].factory(p20_0), _model_validators_password_validator__WEBPACK_IMPORTED_MODULE_126__["PasswordPolicyValidator"].factory(p21_0), _model_validators_household_filer_must_exist_validator__WEBPACK_IMPORTED_MODULE_127__["HouseholdFilerMustExistValidator"].factory(p22_0), _model_validators_earnings_validator__WEBPACK_IMPORTED_MODULE_128__["EarningsNameValidator"].factory(p23_0, p23_1), _model_validators_earnings_validator__WEBPACK_IMPORTED_MODULE_128__["EarningsDescriptionValidator"].factory(p24_0, p24_1), _model_validators_checkdate_criteria_validator__WEBPACK_IMPORTED_MODULE_129__["CheckDateCriteriaValidator"].factory(p25_0), _model_validators_address_criteria_validator__WEBPACK_IMPORTED_MODULE_130__["AddressCriteriaValidator"].factory(p26_0), _model_validators_document_signing_complete_validator__WEBPACK_IMPORTED_MODULE_131__["DocumentSigningCompleteValidator"].factory(p27_0), _model_validators_must_not_be_exempt_validator__WEBPACK_IMPORTED_MODULE_132__["MustNotBeExemptValidator"].factory(p28_0), { name: "dynamicRange", fn: _model_validators_dynamic_range_validator__WEBPACK_IMPORTED_MODULE_133__["DynamicRangeValidator"].create }, { name: "einValidator", fn: _model_validators_ein_validator__WEBPACK_IMPORTED_MODULE_134__["EinMaskValidator"].create }, { name: "addressMustBeVerified", fn: _model_validators_verified_address_validator__WEBPACK_IMPORTED_MODULE_135__["VerifiedAddressesValidator"].create }]; }, [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_21__["NgbCalendar"], _store_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_136__["EntitySelectors"], _core_services_tax_services_tax_collector_service__WEBPACK_IMPORTED_MODULE_115__["TaxCollectorService"], _core_services_tax_services_tax_collector_service__WEBPACK_IMPORTED_MODULE_115__["TaxCollectorService"], _core_services_tax_services_tax_collector_service__WEBPACK_IMPORTED_MODULE_115__["TaxCollectorService"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClient"], _angular_common_http__WEBPACK_IMPORTED_MODULE_27__["HttpClient"], _store_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_136__["EntitySelectors"], _store_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_136__["EntitySelectors"], _store_entity_entity_services_earning_service__WEBPACK_IMPORTED_MODULE_137__["EarningService"], _store_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_136__["EntitySelectors"], _store_entity_entity_services_earning_service__WEBPACK_IMPORTED_MODULE_137__["EarningService"], _core_services_holidays_service__WEBPACK_IMPORTED_MODULE_138__["HolidaysService"], _store_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_136__["EntitySelectors"], _store_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_136__["EntitySelectors"], _store_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_136__["EntitySelectors"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](256, ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["TOAST_CONFIG"], { config: {}, defaults: ngx_toastr__WEBPACK_IMPORTED_MODULE_43__["DefaultGlobalConfig"] }, []), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵmpd"](1024, _store_validation_validation_service__WEBPACK_IMPORTED_MODULE_119__["VALIDATION_ENTITY_METADATA"], function () { return [[{ Address: { validators: [{ name: "addressMustBeVerified", async: false, condition: "isClient" }], properties: { street1: { displayName: "Street 1", required: true, maxLength: 30, validators: [{ name: "invalidValues", context: { values: ["/[^a-zA-Z0-9#%\\/\\s\\-&\\.]/"] } }] }, street2: { displayName: "Street 2", maxLength: 30, validators: [{ name: "invalidValues", context: { values: ["/[^a-zA-Z0-9#%\\/\\s\\-&\\.]/"] } }] }, city: { displayName: "City", required: true, maxLength: 28, validators: [{ name: "invalidValues", context: { values: ["/[^a-zA-Z\\s\\-&]/"] } }] }, state: { displayName: "State", required: true }, zip: { displayName: "Zip", required: true, validators: ["zipCode"] } } } }, { Company: { validators: [{ group: "stateTax", validators: [{ name: "stateTaxesValidator", async: true, condition: "isClient" }] }, { group: "fedTax", validators: [{ name: "householdFilerMustExist", async: true, condition: "model.isHousehold" }, { name: "federalTaxesValidator", async: true, condition: "isClient" }, { name: "expression", context: { expression: "model.legalNameVerified || (model.legalNameVerificationSkipReason === \"ServiceUnavailable\")", messageTemplate: "Federal Tax ID must be verified" } }] }, { group: "transition-migrating", validators: [{ name: "mustHaveEmployees", async: true, context: { messageTemplate: "No employees have been entered for the company" } }, { name: "expression", context: { expression: "!model.hasPriorPayroll", messageTemplate: "Company has prior payroll" } }, { name: "expression", context: { expression: "!model.needDeductionSetup", messageTemplate: "Some employees have payroll deductions such as medical insurance, retirement plans, or garnishments" } }, { name: "addressCriteria", async: true, context: { criteria: "!(['AL', 'AR', 'DE', 'GA', 'NV', 'NC', 'OK', 'UT', 'VT'].some(function(state) { return context.value.state === state }))", messageTemplate: "Wet signature is required" } }, { name: "addressCriteria", async: true, context: { criteria: "context.value.state !== 'PA'", messageTemplate: "Company is subject to PA taxes" } }, { name: "addressCriteria", async: true, context: { criteria: "context.value.state !== 'WA'", messageTemplate: "Company is subject to WA L&I" } }, { name: "expression", context: { expression: "model.feinStatus === 'verified'", messageTemplate: "Company failed FEIN validation" } }, { name: "expression", context: { expression: "model.bankName", messageTemplate: "Company bank routing number has no matching bank" } }, { name: "documentSigningComplete", async: true }, { name: "mustNotBeExempt", async: true }] }], properties: { payrollFrequency: { displayName: "Payroll Frequency", required: true }, periodStartDate: { displayName: "Period Start Date", validators: [{ name: "required", context: { messageTemplate: "Period Start Date is required" } }] }, periodEndDate: { displayName: "Period End Date", validators: [{ name: "required", context: { messageTemplate: "Period End Date is required" } }, { name: "expression", condition: "model.periodStartDate && model.periodEndDate\n                  && model.payrollFrequency === 'Semi-Monthly'", context: { expression: "model.periodStartDate < model.periodEndDate", messageTemplate: "Period start date must be before the Period end date" } }, { name: "expression", context: { expression: "Date.parse(model.periodEndDate) < (Date.now() + 31622400000) && Date.parse(model.periodEndDate) > (Date.now() - 31622400000)", messageTemplate: "Period End Date must be within one year from today" } }] }, firstCheckDate: { displayName: "Check Date", validators: ["date", { name: "expression", context: { expression: "Date.parse(model.firstCheckDate) < (Date.now() + 31622400000)", messageTemplate: "Check Date must be in the next 365 days" } }, { name: "required", context: { messageTemplate: "Check Date is required" } }, { name: "checkDateCriteria", condition: "isClient && model.firstCheckDate", async: true, context: { messageTemplate: "Check Date needs to be at least two business days from todays date" } }] }, secondPeriodStartDate: { displayName: "Second Period Start Date", validators: ["date", { name: "required", condition: "model.payrollFrequency === 'Semi-Monthly'", context: { messageTemplate: "Second Period Start Date is required" } }] }, secondPeriodEndDate: { displayName: "Second Period End Date", validators: ["date", { name: "required", condition: "model.payrollFrequency === 'Semi-Monthly'", context: { messageTemplate: "Second Period End Date is required" } }, { name: "expression", condition: "model.periodEndDate && model.secondPeriodEndDate\n                  && model.payrollFrequency === 'Semi-Monthly'", context: { expression: "model.periodEndDate < model.secondPeriodEndDate", messageTemplate: "Second Period End date must be after the First Period End date" } }, { name: "expression", condition: "model.payrollFrequency === 'Semi-Monthly'", context: { expression: "Date.parse(model.secondPeriodEndDate) < (Date.now() + 31622400000) && Date.parse(model.secondPeriodEndDate) > (Date.now() - 31622400000)", messageTemplate: "Second Period End Date must be within one year from today" } }, { name: "expression", condition: "model.payrollFrequency === 'Semi-Monthly'\n                && model.periodEndDate && model.secondPeriodEndDate", context: { expression: "(Date.parse(model.secondPeriodEndDate) - Date.parse(model.periodEndDate)) <= (86400000 * 27)", messageTemplate: "First Period end date and second period end date should be no more than 27 days apart" } }] }, secondCheckDate: { displayName: "Second Check Date", validators: ["date", { name: "required", condition: "model.payrollFrequency === 'Semi-Monthly'", context: { messageTemplate: "Second Check Date is required" } }, { name: "expression", condition: "model.payrollFrequency === 'Semi-Monthly'", context: { expression: "Date.parse(model.secondCheckDate) < (Date.now() + 31622400000)", messageTemplate: "Second Check Date must be in the next 365 days" } }, { name: "expression", condition: "model.payrollFrequency === 'Semi-Monthly'\n                && model.firstCheckDate && model.secondCheckDate", context: { expression: "model.secondCheckDate > model.firstCheckDate", messageTemplate: "Second Check date should be after the First Check date" } }, { name: "expression", condition: "model.payrollFrequency === 'Semi-Monthly'\n                && model.firstCheckDate && model.secondCheckDate", context: { expression: "(Date.parse(model.secondCheckDate) - Date.parse(model.firstCheckDate)) <= (86400000 * 27)", messageTemplate: "First Check date and Second Check date should be no more than 27 days apart" } }, { name: "checkDateCriteria", condition: "isClient\n                          && model.payrollFrequency === 'Semi-Monthly'\n                          && model.secondCheckDate", async: true, context: { messageTemplate: "Second Check Date needs to be at least two business days from todays date" } }] }, legalName: { displayName: "Legal Name", required: true, validators: ["required", { name: "maxLength", context: { maxLength: 80 } }, { name: "invalidValues", context: { values: ["/[^- a-zA-Z0-9&]/"], messageTemplate: "Only letters, numbers, hyphen, and ampersand are allowed." } }] }, name: { displayName: "Doing Business As (DBA)", maxLength: 80 }, companyType: { displayName: "Company Type", required: true }, fein: { displayName: "Federal Tax ID Number", validators: [{ group: "fedTax", validators: ["required", "fein", { name: "maxLength", context: { maxLength: 10 } }, { name: "minLength", context: { minLength: 10 } }, { name: "invalidValues", context: { values: ["36-4350777", "/^00-/", "/^07-/", "/^08-/", "/^09-/", "/^17-/", "/^18-/", "/^19-/", "/^28-/", "/^29-/", "/^49-/", "/^78-/", "/^79-/", "/^89-/", "/^96-/", "/^97-/"], messageTemplate: "%displayName% is not a valid Federal Employer Identification Number" } }] }] }, bankAccountRn: { displayName: "Routing Number", validators: [{ group: "bank", validators: ["required", { name: "minLength", context: { minLength: 9 } }, { name: "maxLength", context: { maxLength: 9 } }, { name: "numeric", context: { allowLeadingZeros: true } }, { name: "invalidValues", context: { values: ["999999999"] } }, { name: "expression", context: { expression: "model.bankName", messageTemplate: "Could not find bank for Routing Number" } }] }] }, bankAccountNumber: { displayName: "Account Number", validators: [{ group: "bank", validators: ["required", { name: "maxLength", context: { maxLength: 17 } }, { name: "numeric", context: { allowLeadingZeros: true } }] }] }, doneAddingEmployees: { displayName: "\"Do you want to add employees at this time?\"", validators: [{ group: "employeeSetup", validators: [{ name: "mustHaveEmployees", async: true, condition: "!model.doneAddingEmployees" }] }] }, hasPriorPayroll: { displayName: "\"Have you paid any employees this year?\"", validators: [{ group: "employeeSetup", validators: ["required"] }] }, needDeductionSetup: { displayName: "\"Do some employees have payroll deductions?\"", validators: [{ group: "employeeSetup", validators: ["required"] }] } } }, CompanyBankInfoVm: { properties: { bankAccountRn: { displayName: "Routing Number", validators: ["required", { name: "minLength", context: { minLength: 9 } }, { name: "maxLength", context: { maxLength: 9 } }, { name: "numeric", context: { allowLeadingZeros: true } }, { name: "invalidValues", context: { values: ["999999999"] } }, { name: "expression", context: { expression: "model.bankName", messageTemplate: "Could not find bank for Routing Number" } }] }, bankAccountNumber: { displayName: "Account Number", validators: ["required", { name: "maxLength", context: { maxLength: 17 } }, { name: "numeric", context: { allowLeadingZeros: true } }] }, bankAccountNumberConfirm: { displayName: "Re-enter Account Number", validators: ["required", { name: "compare", context: { other: "bankAccountNumber", op: "==", messageTemplate: "%displayName% must match Account Number" } }] } } }, HouseholdFilers: { condition: "findEntity(model.companyId, 'Company').isHousehold", properties: { filingStatus: { displayName: "How do you file your taxes?", validators: [{ group: "fedTax", validators: ["required"] }] }, primaryFirstName: { displayName: "Primary Filer First Name", validators: [{ group: "fedTax", validators: ["required"] }] }, primaryLastName: { displayName: "Primary Filer Last Name", validators: [{ group: "fedTax", validators: ["required"] }] }, primarySsn: { displayName: "Primary Filer Social Security Number", required: true, validators: [{ group: "fedTax", validators: ["required", "social", { name: "invalidValues", context: { values: ["/123-?45-?6789/", "/111-?11-?1111/", "/222-?22-?2222/", "/333-?33-?3333/", "/444-?44-?4444/", "/555-?55-?5555/", "/666-?66-?6666/", "/777-?77-?7777/", "/888-?88-?8888/", "/999-?99-?9999/", "/^000/", "/^666/", "/^9/"] } }] }] }, spouseFirstName: { displayName: "Spouse First Name", validators: [{ group: "fedTax", validators: [{ name: "required", condition: "model.filingStatus === 'joint'" }] }] }, spouseLastName: { displayName: "Spouse Last Name", validators: [{ group: "fedTax", validators: [{ name: "required", condition: "model.filingStatus === 'joint'" }] }] }, spouseSsn: { displayName: "Spouse Social Security Number", validators: [{ group: "fedTax", validators: [{ name: "required", condition: "model.filingStatus === 'joint'" }, { name: "social", condition: "model.filingStatus === 'joint'" }, { name: "invalidValues", condition: "model.filingStatus === 'joint'", context: { values: ["/123-?45-?6789/", "/111-?11-?1111/", "/222-?22-?2222/", "/333-?33-?3333/", "/444-?44-?4444/", "/555-?55-?5555/", "/666-?66-?6666/", "/777-?77-?7777/", "/888-?88-?8888/", "/999-?99-?9999/", "/^000/", "/^666/", "/^9/"] } }] }] } } }, HouseholdFedTaxViewModel: { extends: "HouseholdFilers" }, DateRangePayPeriodvm: { properties: { fromDate: { displayName: "Period Start Date", required: true, validators: ["date"] }, toDate: { displayName: "Period End Date", required: true, validators: ["date", { name: "expression", condition: "model.toDate && model.toDate.year", context: { expression: "new Date(model.toDate.year, model.toDate.month - 1, model.toDate.day) < (Date.now() + 31622400000)\n               && new Date(model.toDate.year, model.toDate.month - 1, model.toDate.day) > (Date.now() - 31622400000)", messageTemplate: "Period End Date must be within one year from today" } }, { name: "expression", condition: "model._fromDate && model._fromDate.year && model.toDate && model.toDate.year", context: { expression: "new Date(model.toDate.year, model.toDate.month - 1, model.toDate.day)\n              > new Date(model._fromDate.year, model._fromDate.month - 1, model._fromDate.day)", messageTemplate: "Period start date must be before the Period end date" } }] }, checkDate: { displayName: "Check Date", required: true, validators: ["date", { name: "expression", condition: "model.checkDate && model.checkDate.year", context: { expression: "new Date(model.checkDate.year, model.checkDate.month - 1, model.checkDate.day) < (Date.now() + 31622400000)", messageTemplate: "Check Date must be in the next 365 days" } }, { name: "checkDateCriteria", async: true, context: { messageTemplate: "Check Date needs to be at least two business days from todays date" } }] }, secondToDate: { displayName: "Second Period End Date", required: true, validators: ["date", { name: "expression", condition: "model.secondToDate && model.secondToDate.year", context: { expression: "new Date(model.secondToDate.year, model.secondToDate.month - 1, model.secondToDate.day)\n              < (Date.now() + 31622400000) && new Date(model.secondToDate.year, model.secondToDate.month - 1, model.secondToDate.day)\n              > (Date.now() - 31622400000)", messageTemplate: "Second Period End Date must be within one year from today" } }, { name: "expression", condition: "model._toDate && model._toDate.year && model.secondToDate && model.secondToDate.year", context: { expression: "new Date(model.secondToDate.year, model.secondToDate.month - 1, model.secondToDate.day)\n              > new Date(model._toDate.year, model._toDate.month - 1, model._toDate.day)", messageTemplate: "Second Period End date must be after the First Period End date" } }, { name: "expression", condition: "model._toDate && model._toDate.year && model.secondToDate && model.secondToDate.year", context: { expression: "(new Date(model.secondToDate.year, model.secondToDate.month - 1, model.secondToDate.day)\n               - new Date(model._toDate.year, model._toDate.month - 1, model._toDate.day)) <= (86400000 * 27)", messageTemplate: "First Period end date and second period end date should be no more than 27 days apart" } }] }, secondCheckDate: { displayName: "Second Check Date", required: true, validators: ["date", { name: "expression", condition: "model.secondCheckDate && model.secondCheckDate.year", context: { expression: "new Date(model.secondCheckDate.year, model.secondCheckDate.month - 1, model.secondCheckDate.day)\n               < (Date.now() + 31622400000)", messageTemplate: "Second Check Date must be in the next 365 days" } }, { name: "expression", condition: "model._checkDate && model._checkDate.year && model.secondCheckDate && model.secondCheckDate.year", context: { expression: "new Date(model.secondCheckDate.year, model.secondCheckDate.month - 1, model.secondCheckDate.day)\n               > new Date(model._checkDate.year, model._checkDate.month - 1, model._checkDate.day)", messageTemplate: "Second Check date should be after the First Check date" } }, { name: "expression", condition: "model._checkDate && model._checkDate.year && model.secondCheckDate && model.secondCheckDate.year", context: { expression: "(new Date(model.secondCheckDate.year, model.secondCheckDate.month - 1, model.secondCheckDate.day)\n              - new Date(model._checkDate.year, model._checkDate.month - 1, model._checkDate.day)) <= (86400000 * 27)", messageTemplate: "First Check date and Second Check date should be no more than 27 days apart" } }, { name: "checkDateCriteria", async: true, context: { messageTemplate: "Second Check Date needs to be at least two business days from todays date" } }] } } }, EarningsGeneralEditorModel: { extends: "CompanyEarning" }, CompanyEarning: { properties: { name: { displayName: "Earning Abbreviation", validators: [{ group: "employeeSetup", validators: ["required", { name: "maxLength", context: { maxLength: 7, messageTemplate: "%displayName% can be up to %maxLength% characters." } }, { name: "invalidValues", context: { values: ["/[^- a-zA-Z0-9$&()'/@+#%]/"], messageTemplate: "Only alphanumeric,&,-,(),',$,/,@,+,#,% are allowed for %displayName%." } }, { name: "earningsNameValidator", async: true, context: { messageTemplate: "%model.name% is already in use. Please update." } }] }] }, description: { displayName: "Earning Name", validators: [{ group: "employeeSetup", validators: ["required", { name: "maxLength", context: { maxLength: 25, messageTemplate: "%displayName% can be up to %maxLength% characters." } }, { name: "invalidValues", context: { values: ["/[^- a-zA-Z0-9$&()'/@+#%]/"], messageTemplate: "Only alphanumeric,&,-,(),',$,/,@,+,#,% are allowed for %displayName%." } }, { name: "earningsDescriptionValidator", async: true, context: { messageTemplate: "%model.description% is already in use. Please update." } }] }] } } } }, { Employee: { validators: [{ name: "employeeTaxesValidator", async: true, condition: "isClient" }], properties: { firstName: { displayName: "First Name", required: true, maxLength: 50 }, lastName: { displayName: "Last Name", required: true, maxLength: 50 }, birthDate: { required: true, displayName: "Birthdate", validators: ["date", { name: "expression", context: { expression: "Date.parse(model.birthDate) < ( Date.now() - 315532800000)", messageTemplate: "Must be at least 10 years old" } }, { name: "expression", context: { expression: "Date.parse(model.birthDate) > (Date.now() - 3786912000000)", messageTemplate: "Must be under 120 years old" } }, { name: "expression", context: { expression: "Date.parse(model.birthDate) < Date.now()", messageTemplate: "Birthdate cannot be in the future" } }] }, hireDate: { displayName: "Hire Date", required: true, validators: ["date", { name: "expression", context: { expression: "Date.parse(model.birthDate) < Date.parse(model.hireDate)", messageTemplate: "Hire date cannot be before birthdate" } }, { name: "expression", context: { expression: "Date.parse(model.hireDate) < (Date.now() + 63072000000)", messageTemplate: "Hire date is too far in the future" } }] }, ssn: { displayName: "Employee Social Security Number", required: true, validators: ["social", { name: "invalidValues", context: { values: ["/123-?45-?6789/", "/111-?11-?1111/", "/222-?22-?2222/", "/333-?33-?3333/", "/444-?44-?4444/", "/555-?55-?5555/", "/666-?66-?6666/", "/777-?77-?7777/", "/888-?88-?8888/", "/999-?99-?9999/", "/^000/", "/^666/", "/^9/"] } }] }, email: { displayName: "Email Address", validators: [{ name: "required", condition: "model.canContact" }, { name: "email", condition: "model.canContact" }] }, phone: { displayName: "Mobile Phone Number", validators: [{ name: "required", condition: "model.canContact" }, { name: "phone", condition: "model.canContact" }] }, payType: { displayName: "Pay Rate Type", validators: [{ name: "required" }] }, payRate: { displayName: "Pay Rate", validators: ["currency", { name: "required", condition: "model.payType" }, { name: "range", context: { minValue: 0, maxValue: 50000000 } }] }, homeAddressId: { displayName: "Home address", validators: [{ name: "required" }] }, workAddressId: { displayName: "Work address", validators: [{ name: "required" }] } } }, EmployeePaymentMethod: { properties: { defaultAccountType: { displayName: "Payment Account Type", required: true }, defaultAccountNumber: { displayName: "Account Number", validators: [{ name: "required", condition: "model.defaultAccountType && model.defaultAccountType !== \"Printed Check\"" }, { name: "maxLength", condition: "model.defaultAccountType && model.defaultAccountType !== \"Printed Check\"", context: { maxLength: 17 } }, { name: "numeric", condition: "model.defaultAccountType && model.defaultAccountType !== \"Printed Check\"", context: { allowLeadingZeros: true } }] }, defaultAccountRn: { displayName: "Routing Number", validators: [{ name: "required", condition: "model.defaultAccountType && model.defaultAccountType !== \"Printed Check\"" }, { name: "minLength", condition: "model.defaultAccountType && model.defaultAccountType !== \"Printed Check\"", context: { minLength: 9 } }, { name: "maxLength", condition: "model.defaultAccountType && model.defaultAccountType !== \"Printed Check\"", context: { maxLength: 9 } }, { name: "numeric", condition: "model.defaultAccountType && model.defaultAccountType !== \"Printed Check\"", context: { allowLeadingZeros: true } }, { name: "invalidValues", condition: "model.defaultAccountType && model.defaultAccountType !== \"Printed Check\"", context: { values: ["999999999"] } }, { name: "expression", condition: "model.defaultAccountType && model.defaultAccountType !== \"Printed Check\"", context: { expression: "model.defaultAccountBankName", messageTemplate: "Could not find bank for Routing Number" } }] }, split1AccountNumber: { displayName: "Account Number", validators: [{ name: "required", condition: "model.split1AccountType && model.split1AccountType !== \"Printed Check\"" }, { name: "maxLength", condition: "model.split1AccountType && model.split1AccountType !== \"Printed Check\"", context: { maxLength: 17 } }, { name: "numeric", condition: "model.split1AccountType && model.split1AccountType !== \"Printed Check\"", context: { allowLeadingZeros: true } }] }, split1AccountRn: { displayName: "Routing Number", validators: [{ name: "required", condition: "model.split1AccountType && model.split1AccountType !== \"Printed Check\"" }, { name: "minLength", condition: "model.split1AccountType && model.split1AccountType !== \"Printed Check\"", context: { minLength: 9 } }, { name: "maxLength", condition: "model.split1AccountType && model.split1AccountType !== \"Printed Check\"", context: { maxLength: 9 } }, { name: "numeric", condition: "model.split1AccountType && model.split1AccountType !== \"Printed Check\"", context: { allowLeadingZeros: true } }, { name: "invalidValues", condition: "model.split1AccountType && model.split1AccountType !== \"Printed Check\"", context: { values: ["999999999"] } }, { name: "expression", condition: "model.split1AccountType && model.split1AccountType !== \"Printed Check\"", context: { expression: "model.split1AccountBankName", messageTemplate: "Could not find bank for Routing Number" } }] }, split2AccountNumber: { displayName: "Account Number", validators: [{ name: "required", condition: "model.split2AccountType && model.split2AccountType !== \"Printed Check\"" }, { name: "maxLength", condition: "model.split2AccountType && model.split2AccountType !== \"Printed Check\"", context: { maxLength: 17 } }, { name: "numeric", condition: "model.split2AccountType && model.split2AccountType !== \"Printed Check\"", context: { allowLeadingZeros: true } }] }, split2AccountRn: { displayName: "Routing Number", validators: [{ name: "required", condition: "model.split2AccountType && model.split2AccountType !== \"Printed Check\"" }, { name: "minLength", condition: "model.split2AccountType && model.split2AccountType !== \"Printed Check\"", context: { minLength: 9 } }, { name: "maxLength", condition: "model.split2AccountType && model.split2AccountType !== \"Printed Check\"", context: { maxLength: 9 } }, { name: "numeric", condition: "model.split2AccountType && model.split2AccountType !== \"Printed Check\"", context: { allowLeadingZeros: true } }, { name: "invalidValues", condition: "model.split2AccountType && model.split2AccountType !== \"Printed Check\"", context: { values: ["999999999"] } }, { name: "expression", condition: "model.split2AccountType && model.split2AccountType !== \"Printed Check\"", context: { expression: "model.split2AccountBankName", messageTemplate: "Could not find bank for Routing Number" } }] } } }, EmployeePaymentAccountVm: { properties: { accountName: { displayName: "Pay to", validators: [{ name: "required", condition: "model.accountType === \"Printed Check\"" }] }, accountNumber: { displayName: "Account Number", validators: [{ name: "required", condition: "model.accountType && model.accountType !== \"Printed Check\"" }, { name: "maxLength", condition: "model.accountType && model.accountType !== \"Printed Check\"", context: { maxLength: 17 } }, { name: "numeric", condition: "model.accountType && model.accountType !== \"Printed Check\"", context: { allowLeadingZeros: true } }] }, accountRn: { displayName: "Routing Number", validators: [{ name: "required", condition: "model.accountType && model.accountType !== \"Printed Check\"" }, { name: "minLength", condition: "model.accountType && model.accountType !== \"Printed Check\"", context: { minLength: 9 } }, { name: "maxLength", condition: "model.accountType && model.accountType !== \"Printed Check\"", context: { maxLength: 9 } }, { name: "numeric", condition: "model.accountType && model.accountType !== \"Printed Check\"", context: { allowLeadingZeros: true } }, { name: "invalidValues", condition: "model.accountType && model.accountType !== \"Printed Check\"", context: { values: ["999999999"] } }, { name: "expression", condition: "model.accountType && model.accountType !== \"Printed Check\" && model.accountNumber", context: { expression: "model.accountBankName", messageTemplate: "Could not find bank for Routing Number" } }] } } } }, { SignUpVm: { properties: { isHousehold: { displayName: "Is Household?", required: true }, firstName: { displayName: "First Name", required: true, maxLength: 20 }, lastName: { displayName: "Last Name", required: true, maxLength: 20 }, email: { displayName: "Email Address", required: true, maxLength: 255, validators: ["email"] }, phone: { displayName: "Phone Number", required: true, validators: ["phone"] }, username: { displayName: "Username", required: true, minLength: 8, maxLength: 18, validators: ["usernameInvalidCharacters", { name: "uniqueUsername", async: true }] }, password: { displayName: "Password", required: true, minLength: 10, maxLength: 40, validators: [{ name: "passwordPolicy", async: true }] } } } }, { User: { properties: { firstName: { displayName: "First Name", required: true, maxLength: 20 }, lastName: { displayName: "Last Name", required: true, maxLength: 20 }, email: { displayName: "Email Address", required: true, maxLength: 255, validators: ["email"] }, phone: { displayName: "Phone Number", required: true, validators: ["phone"] } } } }, { DocumentsVm: { properties: { signerFirstName: { displayName: "Signer First Name", validators: [{ name: "required", condition: "model.isSigner === \"no\" || model.isSigner === \"spouse\"" }] }, signerLastName: { displayName: "Signer Last Name", validators: [{ name: "required", condition: "model.isSigner === \"no\" || model.isSigner === \"spouse\"" }] }, signerTitle: { displayName: "Signer Title", validators: [{ name: "required", condition: "model.isSigner === \"no\" || model.isSigner === \"yes\"" }] }, signerEmail: { displayName: "Signer Email Address", required: true, validators: [{ name: "required", condition: "model.isSigner === \"no\" || model.isSigner === \"spouse\"" }, { name: "email", condition: "model.isSigner === \"no\" || model.isSigner === \"spouse\"" }] }, spouseFirstName: { displayName: "Spouse First Name", validators: [{ name: "required", condition: "model.isSigner === \"no\" || model.isSigner === \"primary\"" }] }, spouseLastName: { displayName: "Spouse Last Name", validators: [{ name: "required", condition: "model.isSigner === \"no\" || model.isSigner === \"primary\"" }] }, spouseEmail: { displayName: "Spouse Email Address", required: true, validators: [{ name: "required", condition: "model.isSigner === \"no\" || model.isSigner === \"primary\"" }, { name: "email", condition: "model.isSigner === \"no\" || model.isSigner === \"primary\"" }] } } } }, { "TaxBehaviorWrapper<CompanyTax>": { properties: { ein: { displayName: "Employer Identification Number", validators: [{ name: "einValidator", condition: "(model.appliedForEin == null || model.appliedForEin === false) && model.behavior.hasEin === true", context: { masksProvider: "model.behavior.taxEinFormats" } }] }, rate: { displayName: "Tax Rate", validators: [{ name: "range", condition: "model.behavior.hasRate !== true", context: { minValue: 0.001, maxValue: 100 } }, { name: "dynamicRange", condition: "model.behavior.hasRate === true", context: { allowZeroProvider: "model.behavior.rate.allowSubjectRateZero", minProvider: "model.behavior.rate.minAllowedRate", maxProvider: "model.behavior.rate.maxAllowedRate" } }] } } }, "TaxBehaviorWrapper<EmployeeTax>": { properties: { exemptReasonCode: { displayName: "Exemption Reason", validators: [{ name: "required", condition: "model.behavior.hasExemptionReason === true" }] }, filingStatus: { displayName: "Filing Status", validators: [{ name: "required", condition: "model.behavior.hasFilingStatus === true" }] }, withholdingAllowance: { displayName: "Withholding Allowances", validators: [{ name: "range", condition: "model.behavior.hasWithholding === true", context: { minValue: 0, maxValue: 25 } }] }, extraWithholding: { displayName: "Extra Withholding Allowances", validators: ["currency", { name: "required", condition: "model.behavior.hasWithholding === true" }, { name: "range", condition: "model.behavior.hasWithholding === true", context: { minValue: 0, maxValue: 999999.99 } }] } } } }]]; }, [])]); });



/***/ }),

/***/ "./src/app/app-dev.module.ts":
/*!***********************************!*\
  !*** ./src/app/app-dev.module.ts ***!
  \***********************************/
/*! exports provided: AppDevModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppDevModule", function() { return AppDevModule; });
var AppDevModule = /** @class */ (function () {
    function AppDevModule() {
    }
    return AppDevModule;
}());



/***/ }),

/***/ "./src/app/app-routing.module.ts":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule, ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9, ɵ10, ɵ11, ɵ12, ɵ13, ɵ14, ɵ15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ0", function() { return ɵ0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ1", function() { return ɵ1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ2", function() { return ɵ2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ3", function() { return ɵ3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ4", function() { return ɵ4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ5", function() { return ɵ5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ6", function() { return ɵ6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ7", function() { return ɵ7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ8", function() { return ɵ8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ9", function() { return ɵ9; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ10", function() { return ɵ10; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ11", function() { return ɵ11; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ12", function() { return ɵ12; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ13", function() { return ɵ13; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ14", function() { return ɵ14; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ15", function() { return ɵ15; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_routing_guards__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @core/routing-guards */ "./src/app/core/routing-guards/index.ts");
/* harmony import */ var _concurrency_failure_concurrency_failure_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./concurrency-failure/concurrency-failure.component */ "./src/app/concurrency-failure/concurrency-failure.component.ts");
/* harmony import */ var _failed_failed_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./failed/failed.component */ "./src/app/failed/failed.component.ts");
/* harmony import */ var _terms_terms_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./terms/terms.component */ "./src/app/terms/terms.component.ts");





var ɵ0 = { title: 'About You' }, ɵ1 = { title: 'Account Details' }, ɵ2 = { title: 'Admin' }, ɵ3 = { title: 'Bank Account' }, ɵ4 = { title: 'Company Info' }, ɵ5 = { title: 'Tax Info' }, ɵ6 = { title: 'Dashboard' }, ɵ7 = { title: 'Earnings' }, ɵ8 = { title: 'Employees' }, ɵ9 = { title: 'Documents' }, ɵ10 = { title: 'Review' }, ɵ11 = { title: 'Enrolled' }, ɵ12 = { title: 'Welcome back!' }, ɵ13 = { title: 'Processing' }, ɵ14 = { title: 'Failed' }, ɵ15 = { title: 'Concurrency Failure' };
var routes = [
    { path: '', pathMatch: 'full', redirectTo: 'dashboard' },
    // {
    //   path: 'signup',
    //   canActivate: [SignupGuard],
    //   loadChildren: '@app/signup/signup.module#SignupModule',
    //   data: { title: 'Signup' }
    // },
    {
        path: 'about-you',
        canActivateChild: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["DataEntryPageGuard"]],
        loadChildren: '@app/about-you/about-you.module#AboutYouModule',
        data: ɵ0
    },
    {
        path: 'account-view',
        canActivate: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["AccountViewGuard"]],
        loadChildren: '@app/account-view/account-view.module#AccountViewModule',
        data: ɵ1
    },
    {
        path: 'admin',
        canActivateChild: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["AdminConsoleGuard"]],
        loadChildren: '@app/admin-console/admin-console.module#AdminConsoleModule',
        data: ɵ2
    },
    {
        path: 'company-bank-account',
        canActivateChild: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["DataEntryPageGuard"]],
        loadChildren: '@app/company-bank-info/company-bank-info.module#CompanyBankInfoModule',
        data: ɵ3
    },
    {
        path: 'company-info',
        canActivateChild: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["DataEntryPageGuard"]],
        loadChildren: '@app/company-info/company-info.module#CompanyInfoModule',
        data: ɵ4
    },
    {
        path: 'tax-info',
        canActivateChild: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["DataEntryPageGuard"]],
        loadChildren: '@app/company-tax-info/company-tax-info.module#CompanyTaxInfoModule',
        data: ɵ5
    },
    {
        path: 'dashboard',
        canActivateChild: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["DataEntryPageGuard"]],
        loadChildren: '@app/dashboard/dashboard.module#DashboardModule',
        data: ɵ6
    },
    {
        path: 'earnings',
        canActivateChild: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["DataEntryPageGuard"]],
        loadChildren: '@app/earnings/earnings.module#EarningsModule',
        data: ɵ7
    },
    {
        path: 'employees',
        canActivateChild: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["DataEntryPageGuard"]],
        loadChildren: '@app/employees/employees.module#EmployeesModule',
        data: ɵ8
    },
    {
        path: 'documents',
        canActivate: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["SinglePageStatusGuard"]],
        loadChildren: '@app/documents/documents.module#DocumentsModule',
        data: ɵ9
    },
    {
        path: 'review',
        canActivate: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["AccountViewGuard"]],
        loadChildren: '@app/review/review.module#ReviewModule',
        data: ɵ10
    },
    {
        path: 'terms',
        component: _terms_terms_component__WEBPACK_IMPORTED_MODULE_4__["TermsComponent"]
    },
    {
        path: 'enrolled',
        canActivate: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["SinglePageStatusGuard"]],
        loadChildren: '@app/enrolled/enrolled.module#EnrolledModule',
        data: ɵ11
    },
    {
        path: 'abandoned',
        canActivate: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["SinglePageStatusGuard"]],
        loadChildren: '@app/abandoned/abandoned.module#AbandonedModule',
        data: ɵ12
    },
    {
        path: 'processing',
        canActivate: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_1__["SinglePageStatusGuard"]],
        loadChildren: '@app/processing/processing.module#ProcessingModule',
        data: ɵ13
    },
    {
        path: 'failed',
        component: _failed_failed_component__WEBPACK_IMPORTED_MODULE_3__["FailedComponent"],
        data: ɵ14
    },
    {
        path: 'concurrency-failure',
        component: _concurrency_failure_concurrency_failure_component__WEBPACK_IMPORTED_MODULE_2__["ConcurrencyFailureComponent"],
        data: ɵ15
    },
];
/** Must come after all other routes else can't get to those routes */
var lastRoutes = [
    { path: '**', redirectTo: '' } // bad routes redirect to root
];
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    return AppRoutingModule;
}());




/***/ }),

/***/ "./src/app/app.component.ngfactory.js":
/*!********************************************!*\
  !*** ./src/app/app.component.ngfactory.js ***!
  \********************************************/
/*! exports provided: RenderType_AppComponent, View_AppComponent_0, View_AppComponent_Host_0, AppComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_AppComponent", function() { return RenderType_AppComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_AppComponent_0", function() { return View_AppComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_AppComponent_Host_0", function() { return View_AppComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponentNgFactory", function() { return AppComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_components_toolbar_toolbar_component_ngfactory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core-components/toolbar/toolbar.component.ngfactory */ "./src/app/core-components/toolbar/toolbar.component.ngfactory.js");
/* harmony import */ var _core_components_toolbar_toolbar_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core-components/toolbar/toolbar.component */ "./src/app/core-components/toolbar/toolbar.component.ts");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _store_entity_entity_services_document_package_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./store/entity/entity-services/document-package.service */ "./src/app/store/entity/entity-services/document-package.service.ts");
/* harmony import */ var _store_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./store/entity/entity-selectors */ "./src/app/store/entity/entity-selectors.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./store/session/session.service */ "./src/app/store/session/session.service.ts");
/* harmony import */ var _core_components_spinner_spinner_component_ngfactory__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./core-components/spinner/spinner.component.ngfactory */ "./src/app/core-components/spinner/spinner.component.ngfactory.js");
/* harmony import */ var _core_components_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core-components/spinner/spinner.component */ "./src/app/core-components/spinner/spinner.component.ts");
/* harmony import */ var _core_services_busy_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./core/services/busy.service */ "./src/app/core/services/busy.service.ts");
/* harmony import */ var _core_components_chat_chat_component_ngfactory__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./core-components/chat/chat.component.ngfactory */ "./src/app/core-components/chat/chat.component.ngfactory.js");
/* harmony import */ var _core_components_chat_chat_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./core-components/chat/chat.component */ "./src/app/core-components/chat/chat.component.ts");
/* harmony import */ var _core_services_chat_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./core/services/chat.service */ "./src/app/core/services/chat.service.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 

















var styles_AppComponent = [];
var RenderType_AppComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_AppComponent, data: { "animation": [{ type: 7, name: "routeAnim", definitions: [{ type: 1, expr: "* <=> *", animation: [{ type: 6, styles: { position: "relative" }, offset: null }, { type: 11, selector: ".nav-button-container", animation: { type: 6, styles: { position: "absolute", opacity: 0 }, offset: null }, options: { optional: true } }, { type: 11, selector: ":enter, :leave", animation: [{ type: 6, styles: { position: "absolute", top: 0, left: 0, width: "100%" }, offset: null }], options: { optional: true } }, { type: 11, selector: ":leave", animation: { type: 9, options: null }, options: { optional: true } }, { type: 3, steps: [{ type: 11, selector: ":leave", animation: { type: 4, styles: { type: 6, styles: { opacity: 0 }, offset: null }, timings: "300ms ease-out" }, options: { optional: true } }], options: null }, { type: 11, selector: ":enter", animation: { type: 9, options: null }, options: { optional: true } }], options: null }], options: {} }] } });

function View_AppComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 7, "div", [["class", "layout"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 1, "sp-toolbar", [], null, null, null, _core_components_toolbar_toolbar_component_ngfactory__WEBPACK_IMPORTED_MODULE_1__["View_ToolbarComponent_0"], _core_components_toolbar_toolbar_component_ngfactory__WEBPACK_IMPORTED_MODULE_1__["RenderType_ToolbarComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](2, 49152, null, 0, _core_components_toolbar_toolbar_component__WEBPACK_IMPORTED_MODULE_2__["ToolbarComponent"], [_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_3__["AuthService"], _store_entity_entity_services_document_package_service__WEBPACK_IMPORTED_MODULE_4__["DocumentPackageService"], _store_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_5__["EntitySelectors"], _core_services_logger_service__WEBPACK_IMPORTED_MODULE_6__["LoggerService"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"], _store_session_session_service__WEBPACK_IMPORTED_MODULE_8__["SessionService"]], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 2, "div", [["class", "content"], ["id", "routercontainer"]], [[24, "@routeAnim", 0]], null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](4, 16777216, null, null, 1, "router-outlet", [], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](5, 212992, [["outlet", 4]], 0, _angular_router__WEBPACK_IMPORTED_MODULE_7__["RouterOutlet"], [_angular_router__WEBPACK_IMPORTED_MODULE_7__["ChildrenOutletContexts"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"], [8, null], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](6, 0, null, null, 1, "sp-spinner", [], null, null, null, _core_components_spinner_spinner_component_ngfactory__WEBPACK_IMPORTED_MODULE_9__["View_SpinnerComponent_0"], _core_components_spinner_spinner_component_ngfactory__WEBPACK_IMPORTED_MODULE_9__["RenderType_SpinnerComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](7, 49152, null, 0, _core_components_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_10__["SpinnerComponent"], [_core_services_busy_service__WEBPACK_IMPORTED_MODULE_11__["BusyService"]], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](8, 0, null, null, 2, "div", [["style", "overflow:auto; -webkit-overflow-scrolling: touch"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](9, 0, null, null, 1, "iframe", [["height", "100%"], ["id", "fullframe"], ["style", "display:none;"], ["width", "100%"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" DocuFrame Here "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](11, 0, null, null, 1, "sp-chat", [], null, null, null, _core_components_chat_chat_component_ngfactory__WEBPACK_IMPORTED_MODULE_12__["View_ChatComponent_0"], _core_components_chat_chat_component_ngfactory__WEBPACK_IMPORTED_MODULE_12__["RenderType_ChatComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](12, 114688, null, 0, _core_components_chat_chat_component__WEBPACK_IMPORTED_MODULE_13__["ChatComponent"], [_core_services_chat_service__WEBPACK_IMPORTED_MODULE_14__["ChatService"]], null, null)], function (_ck, _v) { _ck(_v, 5, 0); _ck(_v, 12, 0); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.prepareRoute(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 5)); _ck(_v, 3, 0, currVal_0); }); }
function View_AppComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "root", [], [[40, "@.disabled", 0]], null, null, View_AppComponent_0, RenderType_AppComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 114688, null, 0, _app_component__WEBPACK_IMPORTED_MODULE_15__["AppComponent"], [_angular_common__WEBPACK_IMPORTED_MODULE_16__["Location"]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, function (_ck, _v) { var currVal_0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 1).animationsDisabled; _ck(_v, 0, 0, currVal_0); }); }
var AppComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("root", _app_component__WEBPACK_IMPORTED_MODULE_15__["AppComponent"], View_AppComponent_Host_0, {}, {}, []);



/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");



var AppComponent = /** @class */ (function () {
    function AppComponent(location) {
        this.location = location;
        this.animationsDisabled = false; // disable all animations when true
    }
    AppComponent.prototype.ngOnInit = function () {
        // Disable animations when initial URL search string has 'qa' (e.g. '.../?qa')
        var p = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]({ fromString: location.search && location.search.substring(1) });
        var qa = p.get('qa');
        this.disableAnimations(qa != null && qa !== 'false');
    };
    AppComponent.prototype.prepareRoute = function (outlet) {
        /** Animation relies on title data property to recognize a state change */
        return outlet && outlet.activatedRouteData && outlet.activatedRouteData['title'];
    };
    /** Call in test to disable animations */
    AppComponent.prototype.disableAnimations = function (disable) {
        if (disable === void 0) { disable = true; }
        this.animationsDisabled = disable;
    };
    return AppComponent;
}());



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var _core_services_tax_services_tax_collector_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @core/services/tax-services/tax-collector.service */ "./src/app/core/services/tax-services/tax-collector.service.ts");
/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @entity */ "./src/app/store/entity/index.ts");


var AppModule = /** @class */ (function () {
    // Inject StatsService. Needs to be created upfront to hook into router and start tracking routes
    // The tax collector needs to be initialized for the entire application
    function AppModule(statsService, taxCollector) {
    }
    return AppModule;
}());



/***/ }),

/***/ "./src/app/auth-components/auth-components.module.ts":
/*!***********************************************************!*\
  !*** ./src/app/auth-components/auth-components.module.ts ***!
  \***********************************************************/
/*! exports provided: authRoutes, AuthComponentsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "authRoutes", function() { return authRoutes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthComponentsModule", function() { return AuthComponentsModule; });
/* harmony import */ var _core_routing_guards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @core/routing-guards */ "./src/app/core/routing-guards/index.ts");
/* harmony import */ var _auth_failed_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth-failed.component */ "./src/app/auth-components/auth-failed.component.ts");
/* harmony import */ var _oidc_callback_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./oidc-callback.component */ "./src/app/auth-components/oidc-callback.component.ts");
/* harmony import */ var _signed_out_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signed-out.component */ "./src/app/auth-components/signed-out.component.ts");
/* harmony import */ var _unauthorized_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./unauthorized.component */ "./src/app/auth-components/unauthorized.component.ts");





/** Routes to blend with the main routes */
var authRoutes = [
    {
        path: 'error',
        component: _auth_failed_component__WEBPACK_IMPORTED_MODULE_1__["AuthFailedComponent"],
        data: { title: 'Signin Failed' },
        canDeactivate: [_core_routing_guards__WEBPACK_IMPORTED_MODULE_0__["AuthFailedGuard"]]
    },
    {
        path: 'oidc-callback',
        component: _oidc_callback_component__WEBPACK_IMPORTED_MODULE_2__["OidcCallbackComponent"]
        // never visible
    },
    {
        path: 'signed-out',
        component: _signed_out_component__WEBPACK_IMPORTED_MODULE_3__["SignedOutComponent"],
        data: { title: 'Signed-out' }
    },
    {
        path: 'unauthorized',
        component: _unauthorized_component__WEBPACK_IMPORTED_MODULE_4__["UnauthorizedComponent"],
        data: { title: 'Unauthorized' }
    },
];
var AuthComponentsModule = /** @class */ (function () {
    function AuthComponentsModule() {
    }
    return AuthComponentsModule;
}());



/***/ }),

/***/ "./src/app/auth-components/auth-failed.component.ngfactory.js":
/*!********************************************************************!*\
  !*** ./src/app/auth-components/auth-failed.component.ngfactory.js ***!
  \********************************************************************/
/*! exports provided: RenderType_AuthFailedComponent, View_AuthFailedComponent_0, View_AuthFailedComponent_Host_0, AuthFailedComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_AuthFailedComponent", function() { return RenderType_AuthFailedComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_AuthFailedComponent_0", function() { return View_AuthFailedComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_AuthFailedComponent_Host_0", function() { return View_AuthFailedComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthFailedComponentNgFactory", function() { return AuthFailedComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _shared_contact_cust_support_component_ngfactory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/contact-cust-support.component.ngfactory */ "./src/app/shared/contact-cust-support.component.ngfactory.js");
/* harmony import */ var _shared_contact_cust_support_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared/contact-cust-support.component */ "./src/app/shared/contact-cust-support.component.ts");
/* harmony import */ var _auth_failed_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./auth-failed.component */ "./src/app/auth-components/auth-failed.component.ts");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 






var styles_AuthFailedComponent = [];
var RenderType_AuthFailedComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_AuthFailedComponent, data: {} });

function View_AuthFailedComponent_1(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 5, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" The error message was: "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](2, 0, null, null, 2, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 1, "i", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](4, null, ["", ""])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](5, 0, null, null, 0, "p", [], null, null, null, null, null))], null, function (_ck, _v) { var currVal_0 = _v.context.ngIf; _ck(_v, 4, 0, currVal_0); }); }
function View_AuthFailedComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 15, "div", [["class", "card-center standard"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 1, "p", [["class", "h3 mt-3 mb-3"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["We're sorry"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 2, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](4, 0, null, null, 1, "b", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["We've experienced an unexpected error that signed you out of the application."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 2, null, View_AuthFailedComponent_1)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](7, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpid"](131072, _angular_common__WEBPACK_IMPORTED_MODULE_1__["AsyncPipe"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]]), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](9, 0, null, null, 4, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" You may be able to try again by signing back in. If that doesn't work, "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](11, 0, null, null, 1, "sp-contact-support", [], null, null, null, _shared_contact_cust_support_component_ngfactory__WEBPACK_IMPORTED_MODULE_2__["View_ContactCustomerSupportComponent_0"], _shared_contact_cust_support_component_ngfactory__WEBPACK_IMPORTED_MODULE_2__["RenderType_ContactCustomerSupportComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](12, 49152, null, 0, _shared_contact_cust_support_component__WEBPACK_IMPORTED_MODULE_3__["ContactCustomerSupportComponent"], [], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [". "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](14, 0, null, null, 1, "button", [["class", "btn btn-primary btn-cta"], ["type", "text"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.signout() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Continue"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵunv"](_v, 7, 0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 8).transform(_co.authService.errors$)); _ck(_v, 7, 0, currVal_0); }, null); }
function View_AuthFailedComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-auth-failed", [], null, null, null, View_AuthFailedComponent_0, RenderType_AuthFailedComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 114688, null, 0, _auth_failed_component__WEBPACK_IMPORTED_MODULE_4__["AuthFailedComponent"], [_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_5__["AuthService"]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var AuthFailedComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-auth-failed", _auth_failed_component__WEBPACK_IMPORTED_MODULE_4__["AuthFailedComponent"], View_AuthFailedComponent_Host_0, {}, {}, []);



/***/ }),

/***/ "./src/app/auth-components/auth-failed.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/auth-components/auth-failed.component.ts ***!
  \**********************************************************/
/*! exports provided: AuthFailedComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthFailedComponent", function() { return AuthFailedComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");


var AuthFailedComponent = /** @class */ (function () {
    function AuthFailedComponent(authService) {
        this.authService = authService;
    }
    AuthFailedComponent.prototype.ngOnInit = function () {
        this.authService.clearReroute('AuthFailedComponent');
    };
    AuthFailedComponent.prototype.signout = function () {
        // Actually signs-out first
        this.authService.logEvent('AuthFailedComponent called AuthService.signout() after user pressed button');
        this.authService.signout();
    };
    return AuthFailedComponent;
}());



/***/ }),

/***/ "./src/app/auth-components/oidc-callback.component.ngfactory.js":
/*!**********************************************************************!*\
  !*** ./src/app/auth-components/oidc-callback.component.ngfactory.js ***!
  \**********************************************************************/
/*! exports provided: RenderType_OidcCallbackComponent, View_OidcCallbackComponent_0, View_OidcCallbackComponent_Host_0, OidcCallbackComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_OidcCallbackComponent", function() { return RenderType_OidcCallbackComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_OidcCallbackComponent_0", function() { return View_OidcCallbackComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_OidcCallbackComponent_Host_0", function() { return View_OidcCallbackComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OidcCallbackComponentNgFactory", function() { return OidcCallbackComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _oidc_callback_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./oidc-callback.component */ "./src/app/auth-components/oidc-callback.component.ts");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 



var styles_OidcCallbackComponent = [];
var RenderType_OidcCallbackComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_OidcCallbackComponent, data: {} });

function View_OidcCallbackComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [], null, null); }
function View_OidcCallbackComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-oidc-callback", [], null, null, null, View_OidcCallbackComponent_0, RenderType_OidcCallbackComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 114688, null, 0, _oidc_callback_component__WEBPACK_IMPORTED_MODULE_1__["OidcCallbackComponent"], [_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var OidcCallbackComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-oidc-callback", _oidc_callback_component__WEBPACK_IMPORTED_MODULE_1__["OidcCallbackComponent"], View_OidcCallbackComponent_Host_0, {}, {}, []);



/***/ }),

/***/ "./src/app/auth-components/oidc-callback.component.ts":
/*!************************************************************!*\
  !*** ./src/app/auth-components/oidc-callback.component.ts ***!
  \************************************************************/
/*! exports provided: OidcCallbackComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OidcCallbackComponent", function() { return OidcCallbackComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");


var OidcCallbackComponent = /** @class */ (function () {
    function OidcCallbackComponent(authService) {
        this.authService = authService;
    }
    OidcCallbackComponent.prototype.ngOnInit = function () {
        // this.authService.signinRedirectCallback().subscribe();
        // this.authService.logEvent('OidcCallbackComponent.ngOnInit called AuthService.signinRedirectCallback()');
    };
    return OidcCallbackComponent;
}());



/***/ }),

/***/ "./src/app/auth-components/signed-out.component.ngfactory.js":
/*!*******************************************************************!*\
  !*** ./src/app/auth-components/signed-out.component.ngfactory.js ***!
  \*******************************************************************/
/*! exports provided: RenderType_SignedOutComponent, View_SignedOutComponent_0, View_SignedOutComponent_Host_0, SignedOutComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_SignedOutComponent", function() { return RenderType_SignedOutComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_SignedOutComponent_0", function() { return View_SignedOutComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_SignedOutComponent_Host_0", function() { return View_SignedOutComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SignedOutComponentNgFactory", function() { return SignedOutComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _signed_out_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./signed-out.component */ "./src/app/auth-components/signed-out.component.ts");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 



var styles_SignedOutComponent = [];
var RenderType_SignedOutComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_SignedOutComponent, data: {} });

function View_SignedOutComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 4, "div", [["class", "card-center standard"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 1, "p", [["class", "h3 mt-3 mb-3"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Successfully Signed Out"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 1, "button", [["class", "btn btn-primary btn-cta"], ["type", "text"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.signin() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Return to Sign In"]))], null, null); }
function View_SignedOutComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-signed-out", [], null, null, null, View_SignedOutComponent_0, RenderType_SignedOutComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 114688, null, 0, _signed_out_component__WEBPACK_IMPORTED_MODULE_1__["SignedOutComponent"], [_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var SignedOutComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-signed-out", _signed_out_component__WEBPACK_IMPORTED_MODULE_1__["SignedOutComponent"], View_SignedOutComponent_Host_0, {}, {}, []);



/***/ }),

/***/ "./src/app/auth-components/signed-out.component.ts":
/*!*********************************************************!*\
  !*** ./src/app/auth-components/signed-out.component.ts ***!
  \*********************************************************/
/*! exports provided: SignedOutComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SignedOutComponent", function() { return SignedOutComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");


var SignedOutComponent = /** @class */ (function () {
    function SignedOutComponent(authService) {
        this.authService = authService;
    }
    SignedOutComponent.prototype.ngOnInit = function () {
        this.authService.clearReroute('SignedOutComponent');
    };
    SignedOutComponent.prototype.signin = function () {
        this.authService.logEvent('SignedOutComponent called AuthService.signin() after user pressed button');
        this.authService.signin();
    };
    return SignedOutComponent;
}());



/***/ }),

/***/ "./src/app/auth-components/unauthorized.component.ngfactory.js":
/*!*********************************************************************!*\
  !*** ./src/app/auth-components/unauthorized.component.ngfactory.js ***!
  \*********************************************************************/
/*! exports provided: RenderType_UnauthorizedComponent, View_UnauthorizedComponent_0, View_UnauthorizedComponent_Host_0, UnauthorizedComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_UnauthorizedComponent", function() { return RenderType_UnauthorizedComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_UnauthorizedComponent_0", function() { return View_UnauthorizedComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_UnauthorizedComponent_Host_0", function() { return View_UnauthorizedComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnauthorizedComponentNgFactory", function() { return UnauthorizedComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _unauthorized_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./unauthorized.component */ "./src/app/auth-components/unauthorized.component.ts");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 



var styles_UnauthorizedComponent = [];
var RenderType_UnauthorizedComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_UnauthorizedComponent, data: {} });

function View_UnauthorizedComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 8, "div", [["class", "standard static-nav d-flex flex-column unauthorized"], ["style", "max-width: 30rem;"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 1, "h1", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Unauthorized"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["I'm sorry but you have tried to access data or perform an action that you are not authorized for."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](5, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Signout out and sign back in with another account."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](7, 0, null, null, 1, "button", [["class", "btn btn-primary btn-cta"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.authService.signout() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Sign out"]))], null, null); }
function View_UnauthorizedComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-app-unauthorized", [], null, null, null, View_UnauthorizedComponent_0, RenderType_UnauthorizedComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 49152, null, 0, _unauthorized_component__WEBPACK_IMPORTED_MODULE_1__["UnauthorizedComponent"], [_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"]], null, null)], null, null); }
var UnauthorizedComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-app-unauthorized", _unauthorized_component__WEBPACK_IMPORTED_MODULE_1__["UnauthorizedComponent"], View_UnauthorizedComponent_Host_0, {}, {}, []);



/***/ }),

/***/ "./src/app/auth-components/unauthorized.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/auth-components/unauthorized.component.ts ***!
  \***********************************************************/
/*! exports provided: UnauthorizedComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnauthorizedComponent", function() { return UnauthorizedComponent; });
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");

var UnauthorizedComponent = /** @class */ (function () {
    function UnauthorizedComponent(authService) {
        this.authService = authService;
        this.authService.logEvent('UnauthorizedComponent created');
    }
    return UnauthorizedComponent;
}());



/***/ }),

/***/ "./src/app/concurrency-failure/concurrency-failure.component.ngfactory.js":
/*!********************************************************************************!*\
  !*** ./src/app/concurrency-failure/concurrency-failure.component.ngfactory.js ***!
  \********************************************************************************/
/*! exports provided: RenderType_ConcurrencyFailureComponent, View_ConcurrencyFailureComponent_0, View_ConcurrencyFailureComponent_Host_0, ConcurrencyFailureComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_ConcurrencyFailureComponent", function() { return RenderType_ConcurrencyFailureComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_ConcurrencyFailureComponent_0", function() { return View_ConcurrencyFailureComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_ConcurrencyFailureComponent_Host_0", function() { return View_ConcurrencyFailureComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConcurrencyFailureComponentNgFactory", function() { return ConcurrencyFailureComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_contact_cust_support_component_ngfactory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/contact-cust-support.component.ngfactory */ "./src/app/shared/contact-cust-support.component.ngfactory.js");
/* harmony import */ var _shared_contact_cust_support_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/contact-cust-support.component */ "./src/app/shared/contact-cust-support.component.ts");
/* harmony import */ var _concurrency_failure_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./concurrency-failure.component */ "./src/app/concurrency-failure/concurrency-failure.component.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../store/session/session.service */ "./src/app/store/session/session.service.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 






var styles_ConcurrencyFailureComponent = [];
var RenderType_ConcurrencyFailureComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_ConcurrencyFailureComponent, data: {} });

function View_ConcurrencyFailureComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 26, "div", [["class", "d-flex flex-column"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 5, "header", [["class", "header-bold"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](2, 0, null, null, 4, "div", [["class", "standard"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 1, "h1", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Conflicting Saves"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](5, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" Another user saved changes to this account while you were viewing or editing it. "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](7, 0, null, null, 19, "div", [["class", "standard"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](8, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" Only one person can view and edit an account at the same time. "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](10, 0, null, null, 2, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](11, 0, null, null, 1, "i", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["If you had pending, unsaved changes, they are lost and you'll have to re-enter them. We regret this inconvenience. "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](13, 0, null, null, 1, "h3", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" 1.\u00A0 Close other views "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](15, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" Close all other views of the application. Tell other users to sign-out as well. "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](17, 0, null, null, 1, "h3", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["2.\u00A0 Refresh"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" Press the \"Refresh\" button to reset the application with the latest account data. After refresh, you can continue working here. "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](20, 0, null, null, 1, "button", [["class", "btn btn-primary btn-cta btn-large mb-3"], ["title", "Refresh the account data and go back to the previous page"], ["type", "button"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.refresh() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Refresh"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](22, 0, null, null, 4, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" If refresh doesn't work and you keep returning to this page, "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](24, 0, null, null, 1, "sp-contact-support", [["linkText", "contact"]], null, null, null, _shared_contact_cust_support_component_ngfactory__WEBPACK_IMPORTED_MODULE_1__["View_ContactCustomerSupportComponent_0"], _shared_contact_cust_support_component_ngfactory__WEBPACK_IMPORTED_MODULE_1__["RenderType_ContactCustomerSupportComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](25, 49152, null, 0, _shared_contact_cust_support_component__WEBPACK_IMPORTED_MODULE_2__["ContactCustomerSupportComponent"], [], { linkText: [0, "linkText"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" . "]))], function (_ck, _v) { var currVal_0 = "contact"; _ck(_v, 25, 0, currVal_0); }, null); }
function View_ConcurrencyFailureComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-concurrency-failure", [], null, null, null, View_ConcurrencyFailureComponent_0, RenderType_ConcurrencyFailureComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 114688, null, 0, _concurrency_failure_component__WEBPACK_IMPORTED_MODULE_3__["ConcurrencyFailureComponent"], [_angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _store_session_session_service__WEBPACK_IMPORTED_MODULE_5__["SessionService"]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var ConcurrencyFailureComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-concurrency-failure", _concurrency_failure_component__WEBPACK_IMPORTED_MODULE_3__["ConcurrencyFailureComponent"], View_ConcurrencyFailureComponent_Host_0, {}, {}, []);



/***/ }),

/***/ "./src/app/concurrency-failure/concurrency-failure.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/concurrency-failure/concurrency-failure.component.ts ***!
  \**********************************************************************/
/*! exports provided: ConcurrencyFailureComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConcurrencyFailureComponent", function() { return ConcurrencyFailureComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");




var ConcurrencyFailureComponent = /** @class */ (function () {
    function ConcurrencyFailureComponent(router, sessionService) {
        this.router = router;
        this.sessionService = sessionService;
    }
    ConcurrencyFailureComponent.prototype.ngOnInit = function () {
        // Never let it fail on application launch
        // or user won't have a chance to recover with a browser refresh.
        if (this.router.navigationId === 1) {
            this.router.navigate([_core__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].Dashboard], { replaceUrl: true });
        }
    };
    ConcurrencyFailureComponent.prototype.refresh = function () {
        var _this = this;
        return this.sessionService.reloadCurrentCompanyPackage().subscribe(function (_) { return window.history && window.history.length > 1 ? window.history.back()
            : _this.router.navigate([_core__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].Dashboard], { replaceUrl: true }); }, function (error) { return _this.router.navigate([_core__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].Failed]); });
    };
    return ConcurrencyFailureComponent;
}());



/***/ }),

/***/ "./src/app/core-components/chat/chat.component.ngfactory.js":
/*!******************************************************************!*\
  !*** ./src/app/core-components/chat/chat.component.ngfactory.js ***!
  \******************************************************************/
/*! exports provided: RenderType_ChatComponent, View_ChatComponent_0, View_ChatComponent_Host_0, ChatComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_ChatComponent", function() { return RenderType_ChatComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_ChatComponent_0", function() { return View_ChatComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_ChatComponent_Host_0", function() { return View_ChatComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChatComponentNgFactory", function() { return ChatComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _chat_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chat.component */ "./src/app/core-components/chat/chat.component.ts");
/* harmony import */ var _core_services_chat_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/services/chat.service */ "./src/app/core/services/chat.service.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 



var styles_ChatComponent = [];
var RenderType_ChatComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_ChatComponent, data: {} });

function View_ChatComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](402653184, 1, { onlineEl: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](402653184, 2, { offlineEl: 0 }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](2, 0, [[1, 0], ["online", 1]], null, 2, "div", [["class", "chat-element"], ["style", "display: none;"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.chatIconClicked() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 1, "i", [["class", "material-icons icon"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["message"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](5, 0, [[2, 0], ["offline", 1]], null, 0, "div", [["style", "display: none;"]], null, null, null, null, null))], null, null); }
function View_ChatComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-chat", [], null, null, null, View_ChatComponent_0, RenderType_ChatComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 114688, null, 0, _chat_component__WEBPACK_IMPORTED_MODULE_1__["ChatComponent"], [_core_services_chat_service__WEBPACK_IMPORTED_MODULE_2__["ChatService"]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var ChatComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-chat", _chat_component__WEBPACK_IMPORTED_MODULE_1__["ChatComponent"], View_ChatComponent_Host_0, {}, {}, []);



/***/ }),

/***/ "./src/app/core-components/chat/chat.component.ts":
/*!********************************************************!*\
  !*** ./src/app/core-components/chat/chat.component.ts ***!
  \********************************************************/
/*! exports provided: ChatComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChatComponent", function() { return ChatComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _core_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/services */ "./src/app/core/services/index.ts");



var chatButtonId = _environment__WEBPACK_IMPORTED_MODULE_1__["environment"].chatConfig.BUTTON_ID;
var ChatComponent = /** @class */ (function () {
    function ChatComponent(chatService) {
        this.chatService = chatService;
    }
    ChatComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.chatService.chatAgent$.subscribe(function (chatAgent) {
            _this.chatAgent = chatAgent;
            // WTF? Seems to work with just the code below
            if (!window._laq) {
                window._laq = [];
            }
            window._laq.push(function () {
                // Worked when we just called these two lines directly
                chatAgent.showWhenOnline(chatButtonId, _this.onlineEl.nativeElement);
                chatAgent.showWhenOffline(chatButtonId, _this.offlineEl.nativeElement);
            });
        });
    };
    ChatComponent.prototype.chatIconClicked = function () {
        if (this.chatAgent) {
            this.chatAgent.startChat(chatButtonId);
        }
    };
    return ChatComponent;
}());



/***/ }),

/***/ "./src/app/core-components/core-components.module.ts":
/*!***********************************************************!*\
  !*** ./src/app/core-components/core-components.module.ts ***!
  \***********************************************************/
/*! exports provided: CoreComponentsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoreComponentsModule", function() { return CoreComponentsModule; });
var CoreComponentsModule = /** @class */ (function () {
    function CoreComponentsModule() {
    }
    return CoreComponentsModule;
}());



/***/ }),

/***/ "./src/app/core-components/spinner/spinner.component.ngfactory.js":
/*!************************************************************************!*\
  !*** ./src/app/core-components/spinner/spinner.component.ngfactory.js ***!
  \************************************************************************/
/*! exports provided: RenderType_SpinnerComponent, View_SpinnerComponent_0, View_SpinnerComponent_Host_0, SpinnerComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_SpinnerComponent", function() { return RenderType_SpinnerComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_SpinnerComponent_0", function() { return View_SpinnerComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_SpinnerComponent_Host_0", function() { return View_SpinnerComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpinnerComponentNgFactory", function() { return SpinnerComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _spinner_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./spinner.component */ "./src/app/core-components/spinner/spinner.component.ts");
/* harmony import */ var _core_services_busy_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/services/busy.service */ "./src/app/core/services/busy.service.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 




var styles_SpinnerComponent = [];
var RenderType_SpinnerComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_SpinnerComponent, data: {} });

function View_SpinnerComponent_1(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 9, "div", [["class", "spinner-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 7, "div", [["class", "spinner-shade"]], [[8, "hidden", 0]], null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpid"](131072, _angular_common__WEBPACK_IMPORTED_MODULE_1__["AsyncPipe"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]]), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 5, "div", [["class", "spinner-box"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](4, 0, null, null, 1, "div", [["class", "spinner-animation"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](5, 0, null, null, 0, "img", [["src", "/assets/images/green-spinner-on-white.gif"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](6, 0, null, null, 2, "div", [["class", "spinner-label"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](7, 0, null, null, 1, "h2", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](8, null, ["", ""])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](9, 0, null, null, 0, "input", [["autofocus", ""], ["onkeydown", "return false;"], ["style", "position: fixed; top:-200px; left:-200px"], ["type", "text"]], null, null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = !_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵunv"](_v, 1, 0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 2).transform(_co.spinning$)); _ck(_v, 1, 0, currVal_0); var currVal_1 = _co.busyService.message; _ck(_v, 8, 0, currVal_1); }); }
function View_SpinnerComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 2, null, View_SpinnerComponent_1)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpid"](131072, _angular_common__WEBPACK_IMPORTED_MODULE_1__["AsyncPipe"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])], function (_ck, _v) { var _co = _v.component; var currVal_0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵunv"](_v, 1, 0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 2).transform(_co.visible$)); _ck(_v, 1, 0, currVal_0); }, null); }
function View_SpinnerComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-spinner", [], null, null, null, View_SpinnerComponent_0, RenderType_SpinnerComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 49152, null, 0, _spinner_component__WEBPACK_IMPORTED_MODULE_2__["SpinnerComponent"], [_core_services_busy_service__WEBPACK_IMPORTED_MODULE_3__["BusyService"]], null, null)], null, null); }
var SpinnerComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-spinner", _spinner_component__WEBPACK_IMPORTED_MODULE_2__["SpinnerComponent"], View_SpinnerComponent_Host_0, {}, {}, []);



/***/ }),

/***/ "./src/app/core-components/spinner/spinner.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/core-components/spinner/spinner.component.ts ***!
  \**************************************************************/
/*! exports provided: SpinnerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpinnerComponent", function() { return SpinnerComponent; });
/* harmony import */ var _core_services_busy_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @core/services/busy.service */ "./src/app/core/services/busy.service.ts");

/*
Spinner to display during long operations.
The outer div blocks the entire screen, so user cannot input while app is busy.
The inner div shows the spinner after a delay, so it won't show immediately.
The textbox captures keyboard events but stays offscreen.
*/
var SpinnerComponent = /** @class */ (function () {
    function SpinnerComponent(busyService) {
        this.busyService = busyService;
        this.visible$ = busyService.isBusy;
        this.spinning$ = busyService.isDelayBusy;
    }
    return SpinnerComponent;
}());



/***/ }),

/***/ "./src/app/core-components/stepper/stepper.component.ngfactory.js":
/*!************************************************************************!*\
  !*** ./src/app/core-components/stepper/stepper.component.ngfactory.js ***!
  \************************************************************************/
/*! exports provided: RenderType_StepperComponent, View_StepperComponent_0, View_StepperComponent_Host_0, StepperComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_StepperComponent", function() { return RenderType_StepperComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_StepperComponent_0", function() { return View_StepperComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_StepperComponent_Host_0", function() { return View_StepperComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StepperComponentNgFactory", function() { return StepperComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _stepper_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stepper.component */ "./src/app/core-components/stepper/stepper.component.ts");
/* harmony import */ var _dashboard_dashboard_view_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../dashboard/dashboard-view.service */ "./src/app/dashboard/dashboard-view.service.ts");
/* harmony import */ var _store_entity_entity_services_company_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../store/entity/entity-services/company.service */ "./src/app/store/entity/entity-services/company.service.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 






var styles_StepperComponent = [];
var RenderType_StepperComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_StepperComponent, data: {} });

function View_StepperComponent_3(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 4, "div", [["class", "step active"]], [[2, "read-only", null]], null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](2, 0, null, null, 0, "span", [["class", "step-counter"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 1, "span", [["class", "step-text"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](4, null, ["", ""]))], function (_ck, _v) { var currVal_1 = "step active"; var currVal_2 = _v.parent.context.$implicit.cssClass; _ck(_v, 1, 0, currVal_1, currVal_2); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.readOnly; _ck(_v, 0, 0, currVal_0); var currVal_3 = _v.parent.context.$implicit.name; _ck(_v, 4, 0, currVal_3); }); }
function View_StepperComponent_4(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 6, "div", [["class", "step"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; if (("click" === en)) {
        var pd_0 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 2).onClick() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](2, 16384, null, 0, _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterLink"], [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], [8, null], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]], { routerLink: [0, "routerLink"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpad"](3, 1), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](4, 0, null, null, 0, "span", [["class", "step-counter"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](5, 0, null, null, 1, "span", [["class", "step-text"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](6, null, ["", ""]))], function (_ck, _v) { var currVal_0 = "step"; var currVal_1 = _v.parent.context.$implicit.cssClass; _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_2 = _ck(_v, 3, 0, _v.parent.context.$implicit.link); _ck(_v, 2, 0, currVal_2); }, function (_ck, _v) { var currVal_3 = _v.parent.context.$implicit.name; _ck(_v, 6, 0, currVal_3); }); }
function View_StepperComponent_2(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 3, null, null, null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_StepperComponent_3)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](2, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"], ngIfElse: [1, "ngIfElse"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](0, [["NotActive", 2]], null, 0, null, View_StepperComponent_4))], function (_ck, _v) { var currVal_0 = _v.context.$implicit.active; var currVal_1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 3); _ck(_v, 2, 0, currVal_0, currVal_1); }, null); }
function View_StepperComponent_1(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 3, "div", [["class", "stepper-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 2, "div", [["class", "stepper"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_StepperComponent_2)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](3, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgForOf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"]], { ngForOf: [0, "ngForOf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.steps; _ck(_v, 3, 0, currVal_0); }, null); }
function View_StepperComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_StepperComponent_1)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.showStepper; _ck(_v, 1, 0, currVal_0); }, null); }
function View_StepperComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-stepper", [], null, null, null, View_StepperComponent_0, RenderType_StepperComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 245760, null, 0, _stepper_component__WEBPACK_IMPORTED_MODULE_3__["StepperComponent"], [_dashboard_dashboard_view_service__WEBPACK_IMPORTED_MODULE_4__["DashboardViewService"], _store_entity_entity_services_company_service__WEBPACK_IMPORTED_MODULE_5__["CompanyService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var StepperComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-stepper", _stepper_component__WEBPACK_IMPORTED_MODULE_3__["StepperComponent"], View_StepperComponent_Host_0, { readOnly: "readOnly" }, {}, []);



/***/ }),

/***/ "./src/app/core-components/stepper/stepper.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/core-components/stepper/stepper.component.ts ***!
  \**************************************************************/
/*! exports provided: StepperComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StepperComponent", function() { return StepperComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _app_dashboard_dashboard_view_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/dashboard/dashboard-view.service */ "./src/app/dashboard/dashboard-view.service.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @entity */ "./src/app/store/entity/index.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};







var COMPANY_STEP_INDEX = 1;
var StepperComponent = /** @class */ (function () {
    function StepperComponent(dashboardViewService, companyService, router) {
        this.dashboardViewService = dashboardViewService;
        this.companyService = companyService;
        this.router = router;
        this.readOnly = false;
        this.showStepper = false;
        this.subs = new _core__WEBPACK_IMPORTED_MODULE_6__["SubSink"]();
        this.sourceSteps = [
            {
                name: 'About You',
                link: _core__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].AboutYou,
                active: false,
                id: 'aboutYou',
                cssClass: {}
            },
            {
                name: 'Company Info',
                link: _core__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].CompanyInfo,
                active: false,
                id: 'companyInfo',
                cssClass: {}
            },
            {
                name: 'Employees',
                link: _core__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Employees,
                active: false,
                id: 'employees',
                cssClass: {}
            },
            {
                name: 'Taxes',
                link: _core__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].CompanyTaxInfo,
                active: false,
                id: 'companyTax',
                cssClass: {}
            },
            {
                name: 'Bank Account',
                link: _core__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].BankAccount,
                active: false,
                id: 'bankInfo',
                cssClass: {}
            }
        ];
        this.steps = this.sourceSteps.map(function (s) { return (__assign({}, s)); });
    }
    StepperComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subs.sink = this.dashboardViewService.vm$.subscribe(function (vm) {
            _this.steps.forEach(function (step) {
                step.cssClass = vm[step.id + 'Class'];
            });
        });
        this.subs.sink = this.router.events
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (event) { return event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_1__["NavigationEnd"]; }))
            .subscribe(function (event) {
            _this.showStepper = false;
            var url = event.url;
            _this.steps.forEach(function (step) {
                if (-1 < url.indexOf(step.link)) {
                    _this.showStepper = true;
                    step.active = true;
                }
                else {
                    step.active = false;
                }
            });
        });
        this.companyService.currentCompany$.subscribe(function (company) {
            _this.company = company;
            _this.steps[COMPANY_STEP_INDEX].name = Object(_model__WEBPACK_IMPORTED_MODULE_4__["companyKind"])(company) + " Info";
        });
    };
    StepperComponent.prototype.ngOnDestroy = function () {
        this.subs.unsubscribe();
    };
    return StepperComponent;
}());



/***/ }),

/***/ "./src/app/core-components/toolbar/toolbar.component.ngfactory.js":
/*!************************************************************************!*\
  !*** ./src/app/core-components/toolbar/toolbar.component.ngfactory.js ***!
  \************************************************************************/
/*! exports provided: RenderType_ToolbarComponent, View_ToolbarComponent_0, View_ToolbarComponent_Host_0, ToolbarComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_ToolbarComponent", function() { return RenderType_ToolbarComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_ToolbarComponent_0", function() { return View_ToolbarComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_ToolbarComponent_Host_0", function() { return View_ToolbarComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToolbarComponentNgFactory", function() { return ToolbarComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _stepper_stepper_component_ngfactory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../stepper/stepper.component.ngfactory */ "./src/app/core-components/stepper/stepper.component.ngfactory.js");
/* harmony import */ var _stepper_stepper_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../stepper/stepper.component */ "./src/app/core-components/stepper/stepper.component.ts");
/* harmony import */ var _dashboard_dashboard_view_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../dashboard/dashboard-view.service */ "./src/app/dashboard/dashboard-view.service.ts");
/* harmony import */ var _store_entity_entity_services_company_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../store/entity/entity-services/company.service */ "./src/app/store/entity/entity-services/company.service.ts");
/* harmony import */ var _toolbar_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./toolbar.component */ "./src/app/core-components/toolbar/toolbar.component.ts");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _store_entity_entity_services_document_package_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store/entity/entity-services/document-package.service */ "./src/app/store/entity/entity-services/document-package.service.ts");
/* harmony import */ var _store_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store/entity/entity-selectors */ "./src/app/store/entity/entity-selectors.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../store/session/session.service */ "./src/app/store/session/session.service.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 













var styles_ToolbarComponent = [];
var RenderType_ToolbarComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_ToolbarComponent, data: {} });

function View_ToolbarComponent_3(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 6, "a", [["class", "nav-item nav-link btn btn-light mr-3"], ["id", "admin-link"], ["routerLinkActive", "router-link-active"]], [[1, "target", 0], [8, "href", 4]], [[null, "click"]], function (_v, en, $event) { var ad = true; if (("click" === en)) {
        var pd_0 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 1).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 671744, [[2, 4]], 0, _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterLinkWithHref"], [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["LocationStrategy"]], { routerLink: [0, "routerLink"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpad"](2, 1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](3, 1720320, null, 2, _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterLinkActive"], [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]], { routerLinkActive: [0, "routerLinkActive"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](603979776, 1, { links: 1 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](603979776, 2, { linksWithHrefs: 1 }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Admin"]))], function (_ck, _v) { var currVal_2 = _ck(_v, 2, 0, _v.parent.parent.context.ngIf.adminConsoleRoute); _ck(_v, 1, 0, currVal_2); var currVal_3 = "router-link-active"; _ck(_v, 3, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 1).target; var currVal_1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 1).href; _ck(_v, 0, 0, currVal_0, currVal_1); }); }
function View_ToolbarComponent_4(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 2, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 1, "i", [["class", "nav-item material-icons icon btn-circle"], ["style", "cursor: pointer; color: lightgray;"]], [[8, "title", 0]], [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.toggleEdit() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](2, null, ["", ""]))], null, function (_ck, _v) { var currVal_0 = (_v.parent.parent.context.ngIf.isReadOnly ? "Edit" : "Set read-only"); _ck(_v, 1, 0, currVal_0); var currVal_1 = (_v.parent.parent.context.ngIf.isReadOnly ? "create" : "block"); _ck(_v, 2, 0, currVal_1); }); }
function View_ToolbarComponent_5(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 4, "span", [["title", "Account Details"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 3, "i", [["class", "material-icons icon btn-circle"], ["style", "cursor: pointer; color: lightgray;"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; if (("click" === en)) {
        var pd_0 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 2).onClick() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](2, 16384, null, 0, _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterLink"], [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"], [8, null], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]], { routerLink: [0, "routerLink"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpad"](3, 1), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["view_list"]))], function (_ck, _v) { var currVal_0 = _ck(_v, 3, 0, _v.parent.parent.context.ngIf.accountDetailsRoute); _ck(_v, 2, 0, currVal_0); }, null); }
function View_ToolbarComponent_2(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 11, "div", [["class", "navbar-nav d-flex justify-content-between align-items-center"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 10, "div", [["class", "navbar-nav nav-user-details"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_ToolbarComponent_3)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](3, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_ToolbarComponent_4)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](5, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_ToolbarComponent_5)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](7, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](8, 0, null, null, 1, "span", [["class", "navbar-text sp-user-name"], ["id", "user-name"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](9, null, ["", ""])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](10, 0, null, null, 1, "a", [["class", "nav-item nav-link"], ["id", "sign-out"], ["tabindex", "0"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.signout() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Sign Out"]))], function (_ck, _v) { var currVal_0 = _v.parent.context.ngIf.isAdmin; _ck(_v, 3, 0, currVal_0); var currVal_1 = _v.parent.context.ngIf.showEditToggle; _ck(_v, 5, 0, currVal_1); var currVal_2 = _v.parent.context.ngIf.showAccountDetailsLink; _ck(_v, 7, 0, currVal_2); }, function (_ck, _v) { var currVal_3 = _v.parent.context.ngIf.name; _ck(_v, 9, 0, currVal_3); }); }
function View_ToolbarComponent_1(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 10, "nav", [["class", "navbar navbar-expand-sm"]], [[2, "read-only", null]], null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 9, "div", [["class", "navbar-content"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](2, 0, null, null, 1, "span", [["class", "navbar-brand d-flex"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.refresh() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 0, "img", [["alt", "SurePayroll Logo"], ["id", "logo-link"], ["src", "/assets/images/surepayroll-logo-white.svg"], ["width", "auto"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](4, 0, null, null, 1, "sp-stepper", [["class", "mobile-hide"]], null, null, null, _stepper_stepper_component_ngfactory__WEBPACK_IMPORTED_MODULE_3__["View_StepperComponent_0"], _stepper_stepper_component_ngfactory__WEBPACK_IMPORTED_MODULE_3__["RenderType_StepperComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](5, 245760, null, 0, _stepper_stepper_component__WEBPACK_IMPORTED_MODULE_4__["StepperComponent"], [_dashboard_dashboard_view_service__WEBPACK_IMPORTED_MODULE_5__["DashboardViewService"], _store_entity_entity_services_company_service__WEBPACK_IMPORTED_MODULE_6__["CompanyService"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]], { readOnly: [0, "readOnly"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_ToolbarComponent_2)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](7, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](8, 0, null, null, 2, "div", [["style", "cursor: pointer;font-size: 8pt; position: absolute; right: 24px; top: 2px;"]], [[8, "title", 0]], [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.versionClicked($event) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpad"](9, 1), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](10, null, ["Version ", ""]))], function (_ck, _v) { var currVal_1 = _v.context.ngIf.isReadOnly; _ck(_v, 5, 0, currVal_1); var currVal_2 = _v.context.ngIf.name; _ck(_v, 7, 0, currVal_2); }, function (_ck, _v) { var currVal_0 = _v.context.ngIf.isReadOnly; _ck(_v, 0, 0, currVal_0); var currVal_3 = _ck(_v, 9, 0, ("Version " + _v.context.ngIf.version)); _ck(_v, 8, 0, currVal_3); var currVal_4 = _v.context.ngIf.version; _ck(_v, 10, 0, currVal_4); }); }
function View_ToolbarComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 2, null, View_ToolbarComponent_1)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpid"](131072, _angular_common__WEBPACK_IMPORTED_MODULE_2__["AsyncPipe"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])], function (_ck, _v) { var _co = _v.component; var currVal_0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵunv"](_v, 1, 0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 2).transform(_co.vm$)); _ck(_v, 1, 0, currVal_0); }, null); }
function View_ToolbarComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-toolbar", [], null, null, null, View_ToolbarComponent_0, RenderType_ToolbarComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 49152, null, 0, _toolbar_component__WEBPACK_IMPORTED_MODULE_7__["ToolbarComponent"], [_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_8__["AuthService"], _store_entity_entity_services_document_package_service__WEBPACK_IMPORTED_MODULE_9__["DocumentPackageService"], _store_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_10__["EntitySelectors"], _core_services_logger_service__WEBPACK_IMPORTED_MODULE_11__["LoggerService"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], _store_session_session_service__WEBPACK_IMPORTED_MODULE_12__["SessionService"]], null, null)], null, null); }
var ToolbarComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-toolbar", _toolbar_component__WEBPACK_IMPORTED_MODULE_7__["ToolbarComponent"], View_ToolbarComponent_Host_0, {}, {}, []);



/***/ }),

/***/ "./src/app/core-components/toolbar/toolbar.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/core-components/toolbar/toolbar.component.ts ***!
  \**************************************************************/
/*! exports provided: ToolbarVm, ToolbarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToolbarVm", function() { return ToolbarVm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToolbarComponent", function() { return ToolbarComponent; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _core_error_handling_sentry_functions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core/error-handling/sentry.functions */ "./src/app/core/error-handling/sentry.functions.ts");
/* harmony import */ var _entity_entity_selectors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @entity/entity-selectors */ "./src/app/store/entity/entity-selectors.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @entity */ "./src/app/store/entity/index.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};











var ToolbarVm = /** @class */ (function () {
    function ToolbarVm() {
        this.accountDetailsRoute = _core__WEBPACK_IMPORTED_MODULE_7__["WellKnownRoutes"].AccountView;
        this.adminConsoleRoute = _core__WEBPACK_IMPORTED_MODULE_7__["WellKnownRoutes"].Admin;
        this.isAdmin = false;
        this.isLoaded = false;
        this.isReadOnly = false;
        this.name = '';
        this.showAccountDetailsLink = false;
        this.showDashboard = false;
        this.showEditToggle = false;
        this.version = _environment__WEBPACK_IMPORTED_MODULE_6__["environment"].version;
    }
    return ToolbarVm;
}());

var ToolbarComponent = /** @class */ (function () {
    function ToolbarComponent(authService, documentPackageService, entitySelectors, logger, router, sessionService) {
        var _this = this;
        this.authService = authService;
        this.documentPackageService = documentPackageService;
        this.entitySelectors = entitySelectors;
        this.logger = logger;
        this.router = router;
        this.sessionService = sessionService;
        this.vm$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.sessionService.authUser$, this.sessionService.currentUser$, this.sessionService.companyPackageLoaded$, this.sessionService.readOnly$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var authUser = _a[0], currUser = _a[1], isLoaded = _a[2], readOnly = _a[3];
            var vm = new ToolbarVm();
            if (authUser) {
                var isAdmin = vm.isAdmin = authUser.userRole === _model__WEBPACK_IMPORTED_MODULE_9__["UserRole"].Administrator;
                vm.isLoaded = isLoaded;
                vm.showEditToggle = isAdmin && isLoaded;
                vm.isReadOnly = isAdmin && isLoaded && readOnly;
                vm.showDashboard = isLoaded;
                if (currUser) {
                    vm.showAccountDetailsLink = true;
                    vm.accountDetailsRoute = isAdmin ? _core__WEBPACK_IMPORTED_MODULE_7__["WellKnownRoutes"].AdminAccountView : _core__WEBPACK_IMPORTED_MODULE_7__["WellKnownRoutes"].AccountView;
                    if (currUser.id === authUser.id) {
                        vm.name = Object(_core__WEBPACK_IMPORTED_MODULE_7__["getFullName"])(currUser);
                    }
                    else {
                        vm.name = Object(_core__WEBPACK_IMPORTED_MODULE_7__["getFullName"])(authUser) + " (for " + Object(_core__WEBPACK_IMPORTED_MODULE_7__["getFullName"])(currUser) + ")";
                    }
                }
                else {
                    vm.name = Object(_core__WEBPACK_IMPORTED_MODULE_7__["getFullName"])(authUser);
                }
            }
            return _this.vm = vm;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["startWith"])(new ToolbarVm()), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
    }
    /**
     * Reload the company package after first
     * navigating to a safe place (discarding pending changes!)
     */
    ToolbarComponent.prototype.refresh = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var currentReadOnly, successCallback, refreshUrl;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.vm.isLoaded) {
                            return [2 /*return*/]; // don't refresh/reload when there is no current company
                        }
                        currentReadOnly = this.vm.isReadOnly;
                        successCallback = function () { return _this.sessionService.setReadOnly(currentReadOnly); };
                        refreshUrl = this.vm.isLoaded
                            ? _core__WEBPACK_IMPORTED_MODULE_7__["WellKnownRoutes"].Dashboard
                            : this.vm.isAdmin ? _core__WEBPACK_IMPORTED_MODULE_7__["WellKnownRoutes"].Admin : '';
                        if (!refreshUrl) return [3 /*break*/, 2];
                        // Go readOny temporarily to prevent save
                        this.sessionService.setReadOnly(true);
                        return [4 /*yield*/, this.router.navigate([refreshUrl])];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        this.reload(successCallback);
                        return [2 /*return*/];
                }
            });
        });
    };
    ToolbarComponent.prototype.reload = function (successCallback) {
        successCallback = successCallback || (function () { });
        Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["concat"])(this.sessionService.reloadCurrentCompanyPackage(), this.documentPackageService.loadDocumentPackage()).subscribe(function () { return successCallback(); });
    };
    ToolbarComponent.prototype.signout = function () {
        this.authService.signout();
    };
    ToolbarComponent.prototype.toggleEdit = function () {
        var _this = this;
        if (this.vm.isReadOnly) {
            // switching to edit mode; reload first.
            this.reload(function () { return _this.sessionService.setReadOnly(false); });
        }
        else {
            this.sessionService.setReadOnly(true);
        }
    };
    /** Dump the entity cache if version number is clicked while holding shift key */
    ToolbarComponent.prototype.versionClicked = function (evt) {
        var _this = this;
        if (evt.shiftKey) {
            this.entitySelectors.entityCache$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])()).subscribe(function (cache) { return _this.logger.warn(_core_error_handling_sentry_functions__WEBPACK_IMPORTED_MODULE_4__["ENTITY_CACHE_DUMP_MESSAGE"], cache); });
        }
    };
    return ToolbarComponent;
}());



/***/ }),

/***/ "./src/app/core/analytics/analytics-event.ts":
/*!***************************************************!*\
  !*** ./src/app/core/analytics/analytics-event.ts ***!
  \***************************************************/
/*! exports provided: AnalyticsEventType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnalyticsEventType", function() { return AnalyticsEventType; });
var AnalyticsEventType;
(function (AnalyticsEventType) {
    AnalyticsEventType["BeginAction"] = "BeginAction";
    AnalyticsEventType["EndAction"] = "EndAction";
    AnalyticsEventType["Navigate"] = "Navigate";
    AnalyticsEventType["Exception"] = "Exception";
    AnalyticsEventType["Custom"] = "Custom";
})(AnalyticsEventType || (AnalyticsEventType = {}));


/***/ }),

/***/ "./src/app/core/analytics/analytics.module.ts":
/*!****************************************************!*\
  !*** ./src/app/core/analytics/analytics.module.ts ***!
  \****************************************************/
/*! exports provided: AnalyticsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnalyticsModule", function() { return AnalyticsModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _analytics_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./analytics.service */ "./src/app/core/analytics/analytics.service.ts");


var AnalyticsModule = /** @class */ (function () {
    function AnalyticsModule(parentModule, analyticsService) {
        this.analyticsService = analyticsService;
        if (parentModule) {
            throw new Error('AnalyticsModule is already loaded. Import it in the AppModule only');
        }
        this.analyticsService.initialize();
    }
    AnalyticsModule.forRoot = function (providers) {
        return {
            ngModule: AnalyticsModule,
            providers: providers,
        };
    };
    return AnalyticsModule;
}());



/***/ }),

/***/ "./src/app/core/analytics/analytics.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/core/analytics/analytics.service.ts ***!
  \*****************************************************/
/*! exports provided: ANALYTICS_EVENT_PROVIDER, ANALYTICS_EVENT_RECEIVER, AnalyticsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ANALYTICS_EVENT_PROVIDER", function() { return ANALYTICS_EVENT_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ANALYTICS_EVENT_RECEIVER", function() { return ANALYTICS_EVENT_RECEIVER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnalyticsService", function() { return AnalyticsService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");





var ANALYTICS_EVENT_PROVIDER = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('EventProvider');
var ANALYTICS_EVENT_RECEIVER = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('EventConsumer');
// Maximum number of events to buffer for subscribers
var MAX_EVENTS_BUFFER = 100;
var AnalyticsService = /** @class */ (function () {
    function AnalyticsService(eventProviders, eventConsumers, loggerService) {
        this.eventProviders = eventProviders;
        this.eventConsumers = eventConsumers;
        this.loggerService = loggerService;
        this.eventsSubject = new rxjs__WEBPACK_IMPORTED_MODULE_1__["ReplaySubject"](MAX_EVENTS_BUFFER);
        this.events$ = this.eventsSubject;
    }
    AnalyticsService.prototype.next = function (value) {
        this.eventsSubject.next(value);
    };
    AnalyticsService.prototype.complete = function () {
    };
    AnalyticsService.prototype.error = function (err) {
        this.loggerService.error(err);
    };
    AnalyticsService.prototype.initialize = function () {
        var _this = this;
        this.eventProviders.forEach(function (provider) {
            provider.events$.subscribe(_this);
        });
        this.eventConsumers.forEach(function (consumer) {
            consumer.initialize(_this.events$);
        });
    };
    AnalyticsService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"]({ factory: function AnalyticsService_Factory() { return new AnalyticsService(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](ANALYTICS_EVENT_PROVIDER, 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](ANALYTICS_EVENT_RECEIVER, 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_2__["LoggerService"])); }, token: AnalyticsService, providedIn: "root" });
    return AnalyticsService;
}());



/***/ }),

/***/ "./src/app/core/analytics/providers/router-navigation-analytics.provider.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/core/analytics/providers/router-navigation-analytics.provider.ts ***!
  \**********************************************************************************/
/*! exports provided: RouterAnalyticsNavigationProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RouterAnalyticsNavigationProvider", function() { return RouterAnalyticsNavigationProvider; });
/* harmony import */ var node_modules_angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node_modules/@angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _core_analytics_analytics_event__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/analytics/analytics-event */ "./src/app/core/analytics/analytics-event.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var RouterAnalyticsNavigationProvider = /** @class */ (function () {
    function RouterAnalyticsNavigationProvider(router) {
        var _this = this;
        this.router = router;
        this.events$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.router.events.subscribe(function (event) {
            if (event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_1__["NavigationEnd"]) {
                _this.events$.next({
                    type: _core_analytics_analytics_event__WEBPACK_IMPORTED_MODULE_3__["AnalyticsEventType"].Navigate,
                    payload: event.urlAfterRedirects
                });
            }
        });
    }
    RouterAnalyticsNavigationProvider = __decorate([
        Object(node_modules_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], RouterAnalyticsNavigationProvider);
    return RouterAnalyticsNavigationProvider;
}());



/***/ }),

/***/ "./src/app/core/analytics/receivers/google-tagmanager.receiver.ts":
/*!************************************************************************!*\
  !*** ./src/app/core/analytics/receivers/google-tagmanager.receiver.ts ***!
  \************************************************************************/
/*! exports provided: GoogleTagManagerReceiver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GoogleTagManagerReceiver", function() { return GoogleTagManagerReceiver; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
/* harmony import */ var _core_analytics_analytics_event__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/analytics/analytics-event */ "./src/app/core/analytics/analytics-event.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};





var tagInstalled = false;
var GoogleTagManagerReceiver = /** @class */ (function () {
    function GoogleTagManagerReceiver(document, logger) {
        this.document = document;
        this.logger = logger;
        this.TagManagerKey = _environment__WEBPACK_IMPORTED_MODULE_4__["environment"].googleTagManagerKey;
    }
    GoogleTagManagerReceiver.prototype.initialize = function (events$) {
        return __awaiter(this, void 0, void 0, function () {
            var dataLayer;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.loadLibrary().toPromise()];
                    case 1:
                        dataLayer = _a.sent();
                        if (!dataLayer) {
                            return [2 /*return*/];
                        }
                        events$.subscribe(function (ev) {
                            if (ev.type === _core_analytics_analytics_event__WEBPACK_IMPORTED_MODULE_3__["AnalyticsEventType"].Navigate) {
                                dataLayer.push({
                                    'event': ev.type,
                                    'route': ev.payload
                                });
                            } // Tag manager already listens to navigate events for angular so this custom event could be disabled
                            if (ev.type === _core_analytics_analytics_event__WEBPACK_IMPORTED_MODULE_3__["AnalyticsEventType"].BeginAction ||
                                ev.type === _core_analytics_analytics_event__WEBPACK_IMPORTED_MODULE_3__["AnalyticsEventType"].EndAction) {
                                dataLayer.push({
                                    'event': ev.type,
                                    'action': ev.payload
                                });
                            }
                            if (ev.type === _core_analytics_analytics_event__WEBPACK_IMPORTED_MODULE_3__["AnalyticsEventType"].Exception) {
                                dataLayer.push({
                                    'event': ev.type,
                                    'exception': ev.payload
                                });
                            } // Tag manager already listens error triggers, however SP as non exception errors which might be usefull to send
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    GoogleTagManagerReceiver.prototype.loadLibrary = function () {
        var _this = this;
        if (!tagInstalled) {
            tagInstalled = true; // install once
            var ref = this.document.getElementsByTagName('script')[0];
            var script = this.document.createElement('script');
            script.text = "\n            (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n              new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n              j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n              'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n              })(window,document,'script','dataLayer','" + this.TagManagerKey + "');";
            ref.parentNode.insertBefore(script, ref);
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["interval"])(1000).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["skipWhile"])(function (tick) { return window.dataLayer == null && tick < 15; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (_) {
            if (!window.dataLayer) {
                var msg = 'Google Tag Manager load timed out; look in console for script load error(s).';
                _this.logger.error(msg);
            }
            return window.dataLayer;
        }));
    };
    return GoogleTagManagerReceiver;
}());



/***/ }),

/***/ "./src/app/core/core.module.ts":
/*!*************************************!*\
  !*** ./src/app/core/core.module.ts ***!
  \*************************************/
/*! exports provided: CoreModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoreModule", function() { return CoreModule; });
/* harmony import */ var _services_location_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services/location-services */ "./src/app/core/services/location-services/index.ts");
/* harmony import */ var _module_import_check__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./module-import-check */ "./src/app/core/module-import-check.ts");
/* harmony import */ var _services_title_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/title.service */ "./src/app/core/services/title.service.ts");



/**
 * Application services and components that are core to running the application.
 * It is eagerly loaded when the application starts.
 * This module should be imported exactly once, in the AppModule.
 */
var CoreModule = /** @class */ (function () {
    function CoreModule(parentModule, addressFinder, titleService // inject it to start it
    ) {
        Object(_module_import_check__WEBPACK_IMPORTED_MODULE_1__["throwIfAlreadyLoaded"])(parentModule, 'CoreModule');
        addressFinder.loadLibrary();
    }
    return CoreModule;
}());



/***/ }),

/***/ "./src/app/core/e2e-check.ts":
/*!***********************************!*\
  !*** ./src/app/core/e2e-check.ts ***!
  \***********************************/
/*! exports provided: isE2E */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isE2E", function() { return isE2E; });
/** True if running under e2e testing (e.g., launch URL ends `?e2e`) */
var isE2E = window.location.search.includes('e2e');


/***/ }),

/***/ "./src/app/core/error-handling/auth-error-enricher.ts":
/*!************************************************************!*\
  !*** ./src/app/core/error-handling/auth-error-enricher.ts ***!
  \************************************************************/
/*! exports provided: AuthErrorEnricher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthErrorEnricher", function() { return AuthErrorEnricher; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var raven_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raven-js */ "./node_modules/raven-js/src/singleton.js");
/* harmony import */ var raven_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(raven_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");






var AuthErrorEnricher = /** @class */ (function () {
    function AuthErrorEnricher(authService, sessionService) {
        this.authService = authService;
        this.sessionService = sessionService;
    }
    AuthErrorEnricher.prototype.initialize = function () {
        Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["combineLatest"])(this.sessionService.authUser$, this.sessionService.currentUser$).subscribe(function (_a) {
            var authUser = _a[0], currUser = _a[1];
            var name;
            if (authUser == null) {
                raven_js__WEBPACK_IMPORTED_MODULE_1__["setUserContext"]({
                    version: _environment__WEBPACK_IMPORTED_MODULE_3__["environment"].version
                });
                return;
            }
            if (currUser) {
                var context = {
                    userId: currUser.id,
                    email: currUser.email,
                    companyId: currUser.companyId,
                    version: _environment__WEBPACK_IMPORTED_MODULE_3__["environment"].version
                };
                if (currUser.id === authUser.id) {
                    // regular user
                    context.username = Object(_core__WEBPACK_IMPORTED_MODULE_4__["getFullName"])(currUser);
                }
                else {
                    // admin user
                    context.username = Object(_core__WEBPACK_IMPORTED_MODULE_4__["getFullName"])(authUser) + " (for " + Object(_core__WEBPACK_IMPORTED_MODULE_4__["getFullName"])(currUser) + ")";
                    context.adminEmail = authUser.email;
                }
                raven_js__WEBPACK_IMPORTED_MODULE_1__["setUserContext"](context);
            }
            else {
                // No current user
                name = Object(_core__WEBPACK_IMPORTED_MODULE_4__["getFullName"])(authUser);
                raven_js__WEBPACK_IMPORTED_MODULE_1__["setUserContext"]({
                    username: name,
                    userId: authUser.id,
                    email: authUser.email,
                    companyId: authUser.companyId,
                    version: _environment__WEBPACK_IMPORTED_MODULE_3__["environment"].version
                });
            }
        });
        this.authService.errors$.subscribe(function (err) {
            if (err) {
                raven_js__WEBPACK_IMPORTED_MODULE_1__["captureMessage"](err, {
                    level: 'error',
                    tags: { location: 'auth' }
                });
            }
        });
    };
    return AuthErrorEnricher;
}());



/***/ }),

/***/ "./src/app/core/error-handling/logger-enricher.ts":
/*!********************************************************!*\
  !*** ./src/app/core/error-handling/logger-enricher.ts ***!
  \********************************************************/
/*! exports provided: LoggerServiceEnricher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoggerServiceEnricher", function() { return LoggerServiceEnricher; });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var raven_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raven-js */ "./node_modules/raven-js/src/singleton.js");
/* harmony import */ var raven_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(raven_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _core_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/services */ "./src/app/core/services/index.ts");



var LoggerServiceEnricher = /** @class */ (function () {
    function LoggerServiceEnricher(logger) {
        this.logger = logger;
    }
    LoggerServiceEnricher.prototype.initialize = function () {
        this.logger.entries$
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["filter"])(function (e) { return e.type === 'error' || e.type === 'warn'; }))
            .subscribe(function (err) {
            raven_js__WEBPACK_IMPORTED_MODULE_1__["captureMessage"](err.entry, {
                level: err.type,
                tags: { location: 'Logger Service' }
            });
        });
    };
    return LoggerServiceEnricher;
}());



/***/ }),

/***/ "./src/app/core/error-handling/sentry-enricher.ts":
/*!********************************************************!*\
  !*** ./src/app/core/error-handling/sentry-enricher.ts ***!
  \********************************************************/
/*! exports provided: SENTRY_ENRICHER */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SENTRY_ENRICHER", function() { return SENTRY_ENRICHER; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

var SENTRY_ENRICHER = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('EventProvider');


/***/ }),

/***/ "./src/app/core/error-handling/sentry-error-handler.ts":
/*!*************************************************************!*\
  !*** ./src/app/core/error-handling/sentry-error-handler.ts ***!
  \*************************************************************/
/*! exports provided: CustomErrorHandler, SentryErrorHandler, errorProviders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomErrorHandler", function() { return CustomErrorHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SentryErrorHandler", function() { return SentryErrorHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorProviders", function() { return errorProviders; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var raven_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raven-js */ "./node_modules/raven-js/src/singleton.js");
/* harmony import */ var raven_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(raven_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _sentry_functions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sentry.functions */ "./src/app/core/error-handling/sentry.functions.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




Object(_sentry_functions__WEBPACK_IMPORTED_MODULE_2__["configureLogging"])();
var CustomErrorHandler = /** @class */ (function (_super) {
    __extends(CustomErrorHandler, _super);
    function CustomErrorHandler(injector) {
        var _this = _super.call(this) || this;
        _this.injector = injector;
        return _this;
    }
    CustomErrorHandler.prototype.handleError = function (err) {
        if (!_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
            _super.prototype.handleError.call(this, err);
            // Can't inject Router directly. Causes circular dependency
            // TODO: Discover who commented out and why.
            // const router = this.injector.get(Router, null);
            // if (router) {
            //   router.navigate([WellKnownRoutes.Failed])
            //     .catch(navErr => {}); // swallow nav error to avoid endless loop
            // }
        }
    };
    return CustomErrorHandler;
}(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ErrorHandler"]));

var SentryErrorHandler = /** @class */ (function (_super) {
    __extends(SentryErrorHandler, _super);
    function SentryErrorHandler(injector) {
        return _super.call(this, injector) || this;
    }
    SentryErrorHandler.prototype.handleError = function (err) {
        try {
            raven_js__WEBPACK_IMPORTED_MODULE_1__["captureException"](err.originalError || err);
        }
        finally {
            _super.prototype.handleError.call(this, err);
        }
    };
    return SentryErrorHandler;
}(CustomErrorHandler));

function errorProviders() {
    var ERROR_HANDLER_SENTRY = [
        { provide: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ErrorHandler"], useClass: SentryErrorHandler },
    ];
    var ERROR_HANDLER = [
        { provide: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ErrorHandler"], useClass: CustomErrorHandler },
    ];
    if (_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].enableSentry) {
        return ERROR_HANDLER_SENTRY;
    }
    else {
        return ERROR_HANDLER;
    }
}


/***/ }),

/***/ "./src/app/core/error-handling/sentry.functions.ts":
/*!*********************************************************!*\
  !*** ./src/app/core/error-handling/sentry.functions.ts ***!
  \*********************************************************/
/*! exports provided: ENTITY_CACHE_DUMP_MESSAGE, configureLogging */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENTITY_CACHE_DUMP_MESSAGE", function() { return ENTITY_CACHE_DUMP_MESSAGE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "configureLogging", function() { return configureLogging; });
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var raven_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! raven-js */ "./node_modules/raven-js/src/singleton.js");
/* harmony import */ var raven_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(raven_js__WEBPACK_IMPORTED_MODULE_1__);


var ENTITY_CACHE_DUMP_MESSAGE = 'EntityCache Dump';
function configureLogging() {
    if (_environment__WEBPACK_IMPORTED_MODULE_0__["environment"].enableSentry) {
        raven_js__WEBPACK_IMPORTED_MODULE_1__["config"](_environment__WEBPACK_IMPORTED_MODULE_0__["environment"].sentryUri, {
            environment: _environment__WEBPACK_IMPORTED_MODULE_0__["environment"].env,
            release: _environment__WEBPACK_IMPORTED_MODULE_0__["environment"].version,
            ignoreErrors: [
                ENTITY_CACHE_DUMP_MESSAGE
            ]
        })
            .install();
    }
}


/***/ }),

/***/ "./src/app/core/error-handling/sentry.module.ts":
/*!******************************************************!*\
  !*** ./src/app/core/error-handling/sentry.module.ts ***!
  \******************************************************/
/*! exports provided: SentryModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SentryModule", function() { return SentryModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _auth_error_enricher__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth-error-enricher */ "./src/app/core/error-handling/auth-error-enricher.ts");
/* harmony import */ var _logger_enricher__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logger-enricher */ "./src/app/core/error-handling/logger-enricher.ts");
/* harmony import */ var _sentry_enricher__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sentry-enricher */ "./src/app/core/error-handling/sentry-enricher.ts");





var SentryModule = /** @class */ (function () {
    function SentryModule(eventProviders) {
        this.eventProviders = eventProviders;
        if (_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].enableSentry && this.eventProviders) {
            this.eventProviders.forEach(function (ep) {
                ep.initialize();
            });
        }
    }
    SentryModule.forRoot = function () {
        return {
            ngModule: SentryModule,
            providers: [
                { provide: _sentry_enricher__WEBPACK_IMPORTED_MODULE_4__["SENTRY_ENRICHER"], useClass: _auth_error_enricher__WEBPACK_IMPORTED_MODULE_2__["AuthErrorEnricher"], multi: true },
                { provide: _sentry_enricher__WEBPACK_IMPORTED_MODULE_4__["SENTRY_ENRICHER"], useClass: _logger_enricher__WEBPACK_IMPORTED_MODULE_3__["LoggerServiceEnricher"], multi: true },
            ]
        };
    };
    return SentryModule;
}());



/***/ }),

/***/ "./src/app/core/guid-fns.ts":
/*!**********************************!*\
  !*** ./src/app/core/guid-fns.ts ***!
  \**********************************/
/*! exports provided: getUuid, getGuidComb, guidComparer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUuid", function() { return getUuid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGuidComb", function() { return getGuidComb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guidComparer", function() { return guidComparer; });
// Client-side id-generator
// From breeze.core.getUuid
/**
 * Creates a Universally Unique Identifier (AKA Guid)
 */
function getUuid() {
    // The original implementation is based on this SO answer:
    // http://stackoverflow.com/a/2117523/200253
    return 'xxxxxxxxxx4xxyxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        // tslint:disable-next-line:no-bitwise
        var r = (Math.random() * 16) | 0, 
        // tslint:disable-next-line:no-bitwise
        v = c === 'x' ? r : (r & 0x3) | 0x8;
        return v.toString(16);
    });
}
/**
 * Creates a pseudo-Guid (globally unique identifier)
 * whose trailing 6 bytes (12 hex digits) are time-based
 * Start either with the given getTime() value, seedTime,
 * or get the current time in ms.
 *
 * @param seed {number} - optional seed for reproducible time-part
 */
function getGuidComb(seed) {
    // Each new Guid is greater than next if more than 1ms passes
    // See http://thatextramile.be/blog/2009/05/using-the-guidcomb-identifier-strategy
    // Based on breeze.core.getUuid which is based on this StackOverflow answer
    // http://stackoverflow.com/a/2117523/200253
    //
    // Convert time value to hex: n.toString(16)
    // Make sure it is 6 bytes long: ('00'+ ...).slice(-12) ... from the rear
    // Replace LAST 6 bytes (12 hex digits) of regular Guid (that's where they sort in a Db)
    //
    // Play with this in jsFiddle: http://jsfiddle.net/wardbell/qS8aN/
    var timePart = ('00' + (seed || new Date().getTime()).toString(16)).slice(-12);
    return ('xxxxxxxxxxxx4xxxyxxx'.replace(/[xy]/g, function (c) {
        // tslint:disable:no-bitwise
        var r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;
        return v.toString(16);
    }) + timePart);
}
// Sort comparison value that's good enough
function guidComparer(l, r) {
    var l_low = l.slice(-12);
    var r_low = r.slice(-12);
    return l_low !== r_low
        ? l_low < r_low ? -1 : +(l_low !== r_low)
        : l < r ? -1 : +(l !== r);
}


/***/ }),

/***/ "./src/app/core/http-interceptors/accept-json-only-http-interceptor.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/core/http-interceptors/accept-json-only-http-interceptor.ts ***!
  \*****************************************************************************/
/*! exports provided: AcceptJsonOnlyHttpInterceptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AcceptJsonOnlyHttpInterceptor", function() { return AcceptJsonOnlyHttpInterceptor; });
/**
 * If no 'Accept' header in request, add request header that demands JSON response.
 * If your HTTP request should accept other media types, specify the `Accept` header explicitly
 */
var AcceptJsonOnlyHttpInterceptor = /** @class */ (function () {
    function AcceptJsonOnlyHttpInterceptor() {
    }
    AcceptJsonOnlyHttpInterceptor.prototype.intercept = function (req, next) {
        var headers = req.headers;
        if (!headers.get('Accept')) {
            // No Accept header provided so add one that requires a JSON response
            headers = headers.set('Accept', 'application/json; charset=utf-8');
            req = req.clone({ headers: headers });
        }
        return next.handle(req);
    };
    return AcceptJsonOnlyHttpInterceptor;
}());



/***/ }),

/***/ "./src/app/core/http-interceptors/auth-http-interceptor.ts":
/*!*****************************************************************!*\
  !*** ./src/app/core/http-interceptors/auth-http-interceptor.ts ***!
  \*****************************************************************/
/*! exports provided: AuthHttpInterceptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthHttpInterceptor", function() { return AuthHttpInterceptor; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _session_session_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @session/session.service */ "./src/app/store/session/session.service.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @core/well-known-routes */ "./src/app/core/well-known-routes.ts");







var AuthHttpInterceptor = /** @class */ (function () {
    function AuthHttpInterceptor(authService, sessionService, router) {
        this.authService = authService;
        this.sessionService = sessionService;
        this.router = router;
    }
    AuthHttpInterceptor.prototype.intercept = function (req, next) {
        var _this = this;
        // add withCredentials to ensure that auth cookies are sent on CORS requests
        req = req.clone({
            withCredentials: true
        });
        if (req.url.startsWith(_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].apiRoot) || req.url.startsWith(_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].spApiRoot)) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.authService.accessToken$, this.authService.oidcUser$, this.sessionService.currentUserId$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (_a) {
                var accessToken = _a[0], oidcUser = _a[1], currentUserId = _a[2];
                if (accessToken) {
                    _this.authService.logEvent("AuthHttpInterceptor adding access token to HTTP request \"" + req.url + "\"");
                    var headers = {
                        'Authorization': "Bearer " + accessToken
                    };
                    if (currentUserId) {
                        headers['X-Sp-Current-User-Id'] = currentUserId;
                    }
                    req = req.clone({ setHeaders: headers });
                }
                else {
                    _this.authService.logEvent("AuthHttpInterceptor request to \"" + req.url + "\" untouched because no AuthService.accessToken.");
                }
                return next.handle(req).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (error) {
                    if (error && error.status === 401) {
                        var authFailRoute = void 0;
                        _this.authService.onAuthError("AuthHttpInterceptor HTTP auth-related error response, " + error.status + ".");
                        // Actual example: WWW-Authenticate: Bearer error="invalid_token", error_description="The token is expired"
                        var authResHeader = error.headers ? error.headers.get('WWW-Authenticate') : null;
                        if (/is expired/.test(authResHeader) || (oidcUser && oidcUser.expired)) {
                            authFailRoute = _core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].SignedOut;
                            var msg = "AuthHttpInterceptor: Token expired. WWW-Authenticate: " + authResHeader + ";\n                  re-routing to  " + authFailRoute + " and signing in.";
                            _this.authService.logEvent(msg);
                            _this.authService.signin();
                        }
                        else {
                            authFailRoute = _core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].AuthFailed;
                            var authErrorMessage = authResHeader ? " (WWW-Authenticate: \"" + authResHeader + "\")" : '';
                            var msg = "AuthHttpInterceptor error:" + authErrorMessage + ". Re-routing to " + authFailRoute + ".";
                            _this.sessionService.logger.error(msg, error);
                            _this.authService.logEvent(msg);
                        }
                        _this.router.navigate([authFailRoute]);
                        return rxjs__WEBPACK_IMPORTED_MODULE_1__["EMPTY"]; // completes w/o calling next
                    }
                    else {
                        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(error);
                    }
                }));
            }));
        }
        else {
            return next.handle(req);
        }
    };
    return AuthHttpInterceptor;
}());



/***/ }),

/***/ "./src/app/core/http-interceptors/busy-http-interceptor.ts":
/*!*****************************************************************!*\
  !*** ./src/app/core/http-interceptors/busy-http-interceptor.ts ***!
  \*****************************************************************/
/*! exports provided: BusyHttpInterceptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BusyHttpInterceptor", function() { return BusyHttpInterceptor; });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_busy_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @core/services/busy.service */ "./src/app/core/services/busy.service.ts");


/** Ignore requests to these urls */
var whiteListUrls = [
    '/stats',
    '/authentication/username/valid/',
    '/authentication/username/valid/',
    // Tax calc will now lock navigation however the Saver is not yet integrated with the busy status
    // So its better to show a spinner rather than hanging navigation on a primed screen
    // The only issue is that when first loading a company package the saver spinner will show
    // until the initial tax calculation is done.
    '/taxapi/taxes',
    '/taxapi/address'
];
var BusyHttpInterceptor = /** @class */ (function () {
    function BusyHttpInterceptor(busyService) {
        this.busyService = busyService;
    }
    BusyHttpInterceptor.prototype.intercept = function (request, next) {
        var _this = this;
        // Don't "busy" the white-listed urls
        var url = request.url;
        if (whiteListUrls.some(function (w) { return url.includes(w); })) {
            return next.handle(request);
        }
        var msg = request.method === 'GET' ? 'Loading...' : 'Saving...';
        this.busyService.increment(msg);
        return next.handle(request).pipe(
        // map(event => {
        //   return event;
        // }),
        // catchError(error => {
        //   return throwError(error);
        // }),
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["finalize"])(function () {
            _this.busyService.decrement();
        }));
    };
    return BusyHttpInterceptor;
}());



/***/ }),

/***/ "./src/app/core/http-interceptors/concurrency-http-interceptor.ts":
/*!************************************************************************!*\
  !*** ./src/app/core/http-interceptors/concurrency-http-interceptor.ts ***!
  \************************************************************************/
/*! exports provided: ConcurrencyHttpInterceptor, requiresConcurrencyControl, getEtagFromHeader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConcurrencyHttpInterceptor", function() { return ConcurrencyHttpInterceptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "requiresConcurrencyControl", function() { return requiresConcurrencyControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEtagFromHeader", function() { return getEtagFromHeader; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _entity_entity_services_company_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @entity/entity-services/company.service */ "./src/app/store/entity/entity-services/company.service.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _app_signup_signup_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @app/signup/signup.service */ "./src/app/signup/signup.service.ts");
/* harmony import */ var _core_well_known_routes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @core/well-known-routes */ "./src/app/core/well-known-routes.ts");









/**
 * Implements client-side etag/precondition header concurrency behavior documented in
 * https://docs.google.com/document/d/1WzMeGVaVcxp3q0QNV0dC0ZLaUAZal39DnErQ0hbdwjM/edit#
 */
var ConcurrencyHttpInterceptor = /** @class */ (function () {
    function ConcurrencyHttpInterceptor(companyService, router, sessionService) {
        this.companyService = companyService;
        this.router = router;
        this.sessionService = sessionService;
        this.logger = sessionService.logger;
    }
    ConcurrencyHttpInterceptor.prototype.intercept = function (req, next) {
        var _this = this;
        var res$ = requiresConcurrencyControl(req)
            ? this.handleConcurrencyRequest(req, next)
            : next.handle(req);
        return res$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (res) {
            var reqDebug = req; // capture request for debugging
            // Only extract etag from a full response
            // Ignore other response types such as "Sent" which arrives when browser sends an OPTION
            // https://angular.io/api/common/http/HttpEventType
            if (res.type !== _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpEventType"].Response) {
                return res;
            }
            var etag = getEtagFromHeader(res.headers && res.headers.get('Etag'));
            if (etag) {
                _this.sessionService.setCurrentCompanyEtag(etag);
            }
        }));
    };
    ConcurrencyHttpInterceptor.prototype.handleConcurrencyRequest = function (req, next) {
        var _this = this;
        var method = req.method.toUpperCase();
        var url = req.url;
        return this.sessionService.currentCompanyEtag$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (etag) {
            if (etag) {
                var headers = { 'If-Match': "W/\"" + etag + "\"" };
                req = req.clone({ setHeaders: headers });
            }
            else {
                _this.logger.error("No Etag; cannot set 'If-Match' header for " + method + " " + url);
            }
            return next.handle(req).pipe(function (res$) { return _this.handleConcurrencyResponse(req, res$); });
        }));
    };
    ConcurrencyHttpInterceptor.prototype.handleConcurrencyResponse = function (req, res$) {
        var _this = this;
        return res$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (error) {
            var method = req.method.toUpperCase();
            var url = req.url;
            if (error && error.status === 412 && req.headers.get) {
                var ifMatchHeader = req.headers.get('If-Match');
                if (!ifMatchHeader) {
                    // some other precondition failed; pass errant response along;
                    return res$;
                }
                // tslint:disable-next-line:max-line-length
                var msg = method + " " + url + " failed because another user saved conflicting changes. Navigating to failure page.";
                _this.sessionService.logger.warn(msg, error);
                _this.gotoConcurrencyFailure();
                // TODO: send error response that indicates it was handled and doesn't make a big noise
                return res$; // pass errant response along
            }
            else {
                return res$; // pass errant response along
            }
        }));
    };
    ConcurrencyHttpInterceptor.prototype.gotoConcurrencyFailure = function () {
        var _this = this;
        this.sessionService.readOnly$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (ro) {
            _this.sessionService.setReadOnly(true); // forces discard of changes on navigation
            _this.router.navigate([_core_well_known_routes__WEBPACK_IMPORTED_MODULE_8__["WellKnownRoutes"].ConcurrencyFailure]).then(
            // restore previous read-only setting regardless
            function (_) { return _this.sessionService.setReadOnly(ro); }, function (error) { return _this.sessionService.setReadOnly(ro); });
        })).subscribe();
    };
    return ConcurrencyHttpInterceptor;
}());

/** Requests that require etag/precondition header concurrency control */
function requiresConcurrencyControl(req) {
    var method = req.method.toUpperCase(); // UPPERCASE for comparison
    var url = req.url.toLowerCase(); // lowercase for comparison
    // All methods except GET and JSONP that are
    // requests to eCommerce APIs (for now; expand later?).
    // Certain requests are NOT under concurrency control
    // such as account creation and Tax API requests
    return 'GET' !== method &&
        (url.startsWith(_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].apiRoot) || url.startsWith(_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].spApiRoot)) &&
        // POST to Stats
        !url.includes('/stats/') &&
        // POST to Tax Service API is actually a GET
        !url.includes('/taxapi/') &&
        // POST to EventLog
        !url.includes('/eventlog/') &&
        // POST to SP to create the account in NewCust
        url !== _app_signup_signup_service__WEBPACK_IMPORTED_MODULE_7__["newSpAccountUrl"] &&
        // POST to EC to create the account in eCommerce
        url !== _app_signup_signup_service__WEBPACK_IMPORTED_MODULE_7__["newEcAccountUrl"] &&
        // Rare and never under concurrency control.
        method !== 'JSONP';
}
/**
 * Extract normalized etag value from an Etag header
 * @param etagHeaderValue typically from `headers.get('Etag')`
 * @returns normalized "weak" etag or empty string if no header or can't normalize.
 * @examples:
 * ```
 *   null                 // -> '' from null or empty string Etag header
 *   "adfadf8768af/321"   // -> 'adfadf8768af/321' from strong etag header
 *   W/"adfadf8768af/321" // -> 'adfadf8768af/321' from weak etag header
 * ```
 * @see  https://docs.google.com/document/d/1WzMeGVaVcxp3q0QNV0dC0ZLaUAZal39DnErQ0hbdwjM/edit#
 */
function getEtagFromHeader(etagHeaderValue) {
    var match = etagHeaderValue ? etagHeaderValue.match(/(W\/"|")?([^\/]*\/[\d]*)["]?$/) : null;
    return match ? match[2] || '' : '';
}


/***/ }),

/***/ "./src/app/core/http-interceptors/queued-request-http-interceptor.ts":
/*!***************************************************************************!*\
  !*** ./src/app/core/http-interceptors/queued-request-http-interceptor.ts ***!
  \***************************************************************************/
/*! exports provided: QueuedRequestReleaseType, QueuedRequest, QueuedRequestHttpInterceptor, requiresQueuing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueuedRequestReleaseType", function() { return QueuedRequestReleaseType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueuedRequest", function() { return QueuedRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueuedRequestHttpInterceptor", function() { return QueuedRequestHttpInterceptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "requiresQueuing", function() { return requiresQueuing; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");





/** INTERNAL - exported for testing */
var QueuedRequestReleaseType;
(function (QueuedRequestReleaseType) {
    /** Proceed with handling the queued request */
    QueuedRequestReleaseType[QueuedRequestReleaseType["Ok"] = 0] = "Ok";
    /** Cancel the queued request */
    QueuedRequestReleaseType[QueuedRequestReleaseType["Cancel"] = 1] = "Cancel";
})(QueuedRequestReleaseType || (QueuedRequestReleaseType = {}));
/**
 * INTERNAL - exported for testing
 * HTTP request whose execution is delayed until a previous inflight request completes
 */
var QueuedRequest = /** @class */ (function () {
    function QueuedRequest(
    /** Intercepted request that is queued because another queueable request is inflight */
    request, 
    /** Request observable to return when and if this queued request is OK to release */
    requestObservable) {
        var _this = this;
        this.request = request;
        this.requestObservable = requestObservable;
        this.signal = new rxjs__WEBPACK_IMPORTED_MODULE_1__["ReplaySubject"](1);
        this.wasReleased = false; // can only release once
        /**
         * The request as observable which will by handled by the next handler
         * in the interceptor chain when the request is released.
         */
        // The signal subject emits once when the release method is called.
        this.request$ = this.signal.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (_a) {
            var type = _a.type, reason = _a.reason;
            if (type === QueuedRequestReleaseType.Ok) {
                return _this.requestObservable;
            }
            else {
                // HttpErrorResponse with status 499 - Client Closed Request
                // because the client never issued the request, for the given reason.
                var errResponse = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpErrorResponse"]({
                    status: 499,
                    statusText: 'Client Closed Request',
                    url: _this.request.url,
                    error: reason
                });
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(errResponse);
            }
        }));
    }
    /**
     * If type is OK, release the request for processing as if it had just been issued.
     * If not OK, cancel the request with the given reason as the error
     * Can only release once. Subsequent calls are ignored.
     * @param type Either the OK type or some kind of cancellation
     * @param [reason]: The reason for cancellation, typically because the inflight request failed.
     */
    QueuedRequest.prototype.release = function (type, reason) {
        if (!this.wasReleased) {
            this.wasReleased = true;
            this.signal.next({ type: type, reason: reason });
            this.signal.complete();
        }
    };
    return QueuedRequest;
}());

/**
 * Queue requests such that only one qualifying request is inflight at a time.
 *
 * Puts an intercepted request into its private queue if the request is "queuable" and
 * there is already a queuable request inflight.
 *
 * When an inflight request responds successfully (or is unsubscribed before response),
 * it gets the next request from the queue and sends it to the next interceptor handler in the chain.
 *
 * If the inflight request failed, it passes the error response to the subscriber
 * and cancels all remaining queued requests with a 499 - Client Cancelled Request HttpErrorResponse
 * that explains the cause.
 *
 * If the app goes ready-only, it cancels all remaining queued requests with a 499
 * that explains this cause.
 */
var QueuedRequestHttpInterceptor = /** @class */ (function () {
    function QueuedRequestHttpInterceptor(sessionService) {
        var _this = this;
        this.requestQueue = [];
        // No need to unsubscribe because interceptors never die.
        sessionService.readOnly$.subscribe(function (isReadOnly) {
            if (isReadOnly) {
                _this.requestQueue.forEach(function (q) {
                    q.release(QueuedRequestReleaseType.Cancel, 'App became read-only');
                });
                _this.requestQueue = [];
            }
        });
    }
    QueuedRequestHttpInterceptor.prototype.intercept = function (req, next) {
        return requiresQueuing(req)
            ? this.queueRequest(req, next)
            : next.handle(req);
    };
    QueuedRequestHttpInterceptor.prototype.queueRequest = function (req, next) {
        var q = new QueuedRequest(req, this.createQueuedRequestObservable(req, next));
        if (this.inflight) {
            this.requestQueue.push(q);
        }
        else {
            q.release(QueuedRequestReleaseType.Ok);
        }
        return q.request$;
    };
    QueuedRequestHttpInterceptor.prototype.createQueuedRequestObservable = function (
    /** Intercepted queued request */
    req, 
    /** Angular HTTP interceptor handler from when the request was intercepted */
    next) {
        var _this = this;
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["defer"])(function () {
            _this.inflight = req; // this request is now inflight.
            var errMessage;
            return next.handle(req).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(null, function (err) {
                var reqDebug = req; // for debugging
                errMessage = 'Unknown error'; // ensure there is an error message of some sort.
                try {
                    if (err instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpErrorResponse"]) {
                        errMessage = " status: " + err.status + " - " + err.statusText + ", message: \"" + err.message + "\"";
                    }
                    else {
                        errMessage = typeof err === 'string' ? err : 'unknown error';
                    }
                    errMessage = req.method.toUpperCase() + " " + req.url + " failed. " + errMessage;
                }
                catch (e) { }
            }), 
            // Finalize ensures that queued requests are released even if
            // the subscriber to this request unsubscribes from its observable
            Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["finalize"])(function () {
                var reqDebug = req; // for debugging
                if (errMessage) {
                    // Errant response to this request.
                    // Cancel remaining queued requests.
                    _this.inflight = undefined;
                    try {
                        _this.requestQueue.forEach(function (q) { return q.release(QueuedRequestReleaseType.Cancel, errMessage); });
                    }
                    catch (e) {
                        // ignore errors trying to release each queued request
                    }
                    finally {
                        _this.requestQueue = [];
                    }
                }
                else {
                    // Response succeeded OR the request was unsubscribed before the server responded.
                    // Either way, take the next request from the front of the queue and process it.
                    var q = _this.requestQueue.shift();
                    if (q) {
                        _this.inflight = q.request;
                        q.release(QueuedRequestReleaseType.Ok);
                    }
                    else {
                        _this.inflight = undefined;
                    }
                }
            }));
        });
    };
    return QueuedRequestHttpInterceptor;
}());

/**
 * Requests that require queuing and must wait until the inflight
 * request and previously queued requests have completed.
 */
function requiresQueuing(req) {
    var method = req.method.toUpperCase();
    var url = req.url;
    // All methods except GET and JSONP that are
    // requests to eCommerce APIs (for now; expand later?).
    // Certain kinds of requests such Tax API requests are NOT queued
    return 'GET' !== method &&
        (url.startsWith(_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiRoot) || url.startsWith(_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].spApiRoot)) &&
        // POST to Tax Service API is actually a GET
        !url.includes('/taxapi/') &&
        // Rare and never queued.
        method !== 'JSONP';
}


/***/ }),

/***/ "./src/app/core/http-interceptors/read-only-http-interceptor.ts":
/*!**********************************************************************!*\
  !*** ./src/app/core/http-interceptors/read-only-http-interceptor.ts ***!
  \**********************************************************************/
/*! exports provided: ReadOnlyHttpInterceptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReadOnlyHttpInterceptor", function() { return ReadOnlyHttpInterceptor; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");




var ReadOnlyHttpInterceptor = /** @class */ (function () {
    function ReadOnlyHttpInterceptor(sessionService) {
        this.sessionService = sessionService;
    }
    ReadOnlyHttpInterceptor.prototype.intercept = function (req, next) {
        var _this = this;
        var method = req.method.toUpperCase();
        var url = req.url;
        if (couldBeReadOnly()) {
            return this.sessionService.readOnly$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (readOnly) {
                if (readOnly) {
                    var msg = "ReadOnlyHttpInterceptor error: cannot " + method + " " + url + " when read-only";
                    _this.sessionService.logger.error(msg);
                    throw Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(new Error(msg));
                }
                return next.handle(req);
            }));
        }
        else {
            return next.handle(req);
        }
        /**
         * Could be subject to read-only interception
         * if not a GET or JSONP and
         * not a POST to the Tax API
         */
        function couldBeReadOnly() {
            return ('GET' !== method && 'JSONP' !== method) &&
                // POST to Tax Service API is actually a GET
                !(/\/taxapi\//.test(url) && method === 'POST');
        }
    };
    return ReadOnlyHttpInterceptor;
}());



/***/ }),

/***/ "./src/app/core/index.ts":
/*!*******************************!*\
  !*** ./src/app/core/index.ts ***!
  \*******************************/
/*! exports provided: SpRouteReuseStrategy, WellKnownRoutes, WellKnownRoutes_entries, isWellKnownRoute, CoreModule, isE2E, getUuid, getGuidComb, guidComparer, Saver, SaverFactoryService, BusyService, ChatService, HolidaysService, LoggerService, WindowToken, windowProviderFactory, BankRoutingNumberService, noopBankRoutingNumberService, EsignService, EinLookupService, IdGeneratorService, AddressFinderService, BrowserGeolocationService, GeolocationService, TinCheckService, einLookupInterceptor, isBadFeinNumber, isGoodFeinNumber, TitleService, ToastService, addressToString, isComplete, formatZip, zipFirstDigits, getFirstAllowedCheckDate, currentCentralOffset, getNgbDate, isValidDate, getFirstDayOfMonth, getDaysInMonth, getDateFromNgb, getMoment, ngbDateToString, formatDate, getNgbDateFromString, getDateWithOffset, determineEndOfMonthStatus, determineEndOfQuarterStatus, getFirst, getAll, ChangeItemFactory, changeItemFactory, toUpdate, NgbDatepickerConfig, dateToString, dateToDateStruct, dateStructToDate, dateToday, safeToDate, toMMDDYY, vmDateToEntityDate, entityDateToVmDate, employeeStatus, getTrimmedNameParts, getFullName, hasName, genPassword, getFilerName, getHouseholdFilerDisplayVm, isPromise, SubSink, ɵ0, areDifferent, dictionaryToArray, extractEntityFromVm, filterRemoved, firstDiffBetweenStrings, lowerCamelCase, upperCamelCase, titleCase, raw, toDollars, toInteger, stringify, sanitizeLegalName, parseUrlParams, getCookies, GooglePlacesService, nullAutocomplete, nullAutocompleteService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _e2e_check__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./e2e-check */ "./src/app/core/e2e-check.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isE2E", function() { return _e2e_check__WEBPACK_IMPORTED_MODULE_0__["isE2E"]; });

/* harmony import */ var _guid_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./guid-fns */ "./src/app/core/guid-fns.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getUuid", function() { return _guid_fns__WEBPACK_IMPORTED_MODULE_1__["getUuid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getGuidComb", function() { return _guid_fns__WEBPACK_IMPORTED_MODULE_1__["getGuidComb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "guidComparer", function() { return _guid_fns__WEBPACK_IMPORTED_MODULE_1__["guidComparer"]; });

/* harmony import */ var _saver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./saver */ "./src/app/core/saver.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Saver", function() { return _saver__WEBPACK_IMPORTED_MODULE_2__["Saver"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaverFactoryService", function() { return _saver__WEBPACK_IMPORTED_MODULE_2__["SaverFactoryService"]; });

/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./services */ "./src/app/core/services/index.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BusyService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["BusyService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChatService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["ChatService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HolidaysService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["HolidaysService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LoggerService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["LoggerService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BankRoutingNumberService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["BankRoutingNumberService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "noopBankRoutingNumberService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["noopBankRoutingNumberService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EsignService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["EsignService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EinLookupService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["EinLookupService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IdGeneratorService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["IdGeneratorService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AddressFinderService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["AddressFinderService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BrowserGeolocationService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["BrowserGeolocationService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GeolocationService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["GeolocationService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TinCheckService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["TinCheckService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "einLookupInterceptor", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["einLookupInterceptor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBadFeinNumber", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["isBadFeinNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isGoodFeinNumber", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["isGoodFeinNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TitleService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["TitleService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToastService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["ToastService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GooglePlacesService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["GooglePlacesService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nullAutocomplete", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["nullAutocomplete"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nullAutocompleteService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["nullAutocompleteService"]; });

/* harmony import */ var _sp_route_reuse_strategy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sp-route-reuse-strategy */ "./src/app/core/sp-route-reuse-strategy.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpRouteReuseStrategy", function() { return _sp_route_reuse_strategy__WEBPACK_IMPORTED_MODULE_4__["SpRouteReuseStrategy"]; });

/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ "./src/app/core/utils/index.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addressToString", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["addressToString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isComplete", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["isComplete"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatZip", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["formatZip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zipFirstDigits", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["zipFirstDigits"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFirstAllowedCheckDate", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getFirstAllowedCheckDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "currentCentralOffset", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["currentCentralOffset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getNgbDate", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getNgbDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isValidDate", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["isValidDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFirstDayOfMonth", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getFirstDayOfMonth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDaysInMonth", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getDaysInMonth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDateFromNgb", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getDateFromNgb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMoment", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getMoment"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ngbDateToString", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["ngbDateToString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDate", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["formatDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getNgbDateFromString", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getNgbDateFromString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDateWithOffset", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getDateWithOffset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "determineEndOfMonthStatus", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["determineEndOfMonthStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "determineEndOfQuarterStatus", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["determineEndOfQuarterStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFirst", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getFirst"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getAll", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getAll"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChangeItemFactory", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["ChangeItemFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "changeItemFactory", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["changeItemFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toUpdate", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["toUpdate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NgbDatepickerConfig", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["NgbDatepickerConfig"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dateToString", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["dateToString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dateToDateStruct", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["dateToDateStruct"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dateStructToDate", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["dateStructToDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dateToday", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["dateToday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "safeToDate", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["safeToDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toMMDDYY", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["toMMDDYY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vmDateToEntityDate", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["vmDateToEntityDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "entityDateToVmDate", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["entityDateToVmDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "employeeStatus", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["employeeStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTrimmedNameParts", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getTrimmedNameParts"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFullName", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getFullName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hasName", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["hasName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "genPassword", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["genPassword"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFilerName", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getFilerName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getHouseholdFilerDisplayVm", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getHouseholdFilerDisplayVm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPromise", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["isPromise"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SubSink", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["SubSink"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵ0", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["ɵ0"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "areDifferent", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["areDifferent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dictionaryToArray", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["dictionaryToArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extractEntityFromVm", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["extractEntityFromVm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterRemoved", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["filterRemoved"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "firstDiffBetweenStrings", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["firstDiffBetweenStrings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lowerCamelCase", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["lowerCamelCase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "upperCamelCase", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["upperCamelCase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "titleCase", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["titleCase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "raw", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["raw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toDollars", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["toDollars"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toInteger", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["toInteger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringify", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["stringify"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sanitizeLegalName", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["sanitizeLegalName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseUrlParams", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["parseUrlParams"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCookies", function() { return _utils__WEBPACK_IMPORTED_MODULE_5__["getCookies"]; });

/* harmony import */ var _well_known_routes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./well-known-routes */ "./src/app/core/well-known-routes.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WellKnownRoutes", function() { return _well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WellKnownRoutes_entries", function() { return _well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes_entries"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isWellKnownRoute", function() { return _well_known_routes__WEBPACK_IMPORTED_MODULE_6__["isWellKnownRoute"]; });

/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./window */ "./src/app/core/window.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WindowToken", function() { return _window__WEBPACK_IMPORTED_MODULE_7__["WindowToken"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowProviderFactory", function() { return _window__WEBPACK_IMPORTED_MODULE_7__["windowProviderFactory"]; });

/* harmony import */ var _core_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./core.module */ "./src/app/core/core.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CoreModule", function() { return _core_module__WEBPACK_IMPORTED_MODULE_8__["CoreModule"]; });



// do not export routing guards as this promotes circular references









/***/ }),

/***/ "./src/app/core/module-import-check.ts":
/*!*********************************************!*\
  !*** ./src/app/core/module-import-check.ts ***!
  \*********************************************/
/*! exports provided: throwIfAlreadyLoaded */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwIfAlreadyLoaded", function() { return throwIfAlreadyLoaded; });
function throwIfAlreadyLoaded(parentModule, moduleName) {
    if (parentModule) {
        var msg = moduleName + " has already been loaded. Import Core modules in the AppModule only.";
        throw new Error(msg);
    }
}


/***/ }),

/***/ "./src/app/core/routing-guards/account-status-guard-helper.ts":
/*!********************************************************************!*\
  !*** ./src/app/core/routing-guards/account-status-guard-helper.ts ***!
  \********************************************************************/
/*! exports provided: okRoute, AccountStatusGuardHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "okRoute", function() { return okRoute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountStatusGuardHelper", function() { return AccountStatusGuardHelper; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @core/well-known-routes */ "./src/app/core/well-known-routes.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../store/session/session.service */ "./src/app/store/session/session.service.ts");











var okRoute = function () { return true; };
/**
 * Helper service whose primary job is to determine if a route can be activated
 * based on the route, the user, and the current Account status.
 * Always re-routes if there is no signed-in user or no company package loaded.
 * See accountStatusAllows$.
 * Includes other utility methods.
 * Injected by router guards. It is not itself a router guard.
 */
var AccountStatusGuardHelper = /** @class */ (function () {
    function AccountStatusGuardHelper(authService, sessionService, router) {
        var _this = this;
        this.authService = authService;
        this.sessionService = sessionService;
        this.router = router;
        /**
         * Create a function that will reroute to another app page,
         * after logging this fact (if Auth Tracing is turned on).
         * Delegates to Router.navigate().
         * By default includes option that replaces original route URL in history.
         */
        this.rerouteFactory = function (newRoute, extras) {
            return function (guardName, originalRoute, status) {
                _this.logEvent(guardName, "Company status is \"" + status + "\"; re-routing from \"" + originalRoute + "\" to \"" + newRoute + "\"");
                _this.router.navigate([newRoute], extras || { replaceUrl: true });
                return false;
            };
        };
        // Given the two base status/route maps below, `accountStatusAllows$` would
        // reject activation of all pages and re-route to an appropriate page regardless of status.
        // A consumer of this helper will clone these maps and
        // replace a re-route function with the `okRoute` function
        // when the page-to-activate is permitted for the company's current AccountStatus
        this.toAdminAccountView = this.rerouteFactory(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].AdminAccountView);
        /**
         * Status/route map that re-routes ADMIN users to a safe page for all account statuses.
         * Clone and modify to allow activation of a page for a particular status.
         */
        this.adminBaseRoutes = (_a = {},
            _a[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Abandoned] = this.toAdminAccountView,
            _a[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Docs] = this.toAdminAccountView,
            _a[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Enrolled] = this.toAdminAccountView,
            _a[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Open] = this.toAdminAccountView,
            _a[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].AutoMigrate] = this.toAdminAccountView,
            _a[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Operations] = this.toAdminAccountView,
            _a[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Migrating] = this.toAdminAccountView,
            _a[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Test] = this.toAdminAccountView,
            _a);
        /**
         * Status/route map that re-routes REGULAR users to a safe page for all account statuses.
         * Clone and modify to allow activation of a page for a particular status.
         */
        this.regularBaseRoutes = (_b = {},
            _b[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Abandoned] = this.rerouteFactory(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Abandoned),
            _b[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Docs] = this.rerouteFactory(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Documents),
            _b[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Enrolled] = this.rerouteFactory(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Enrolled),
            _b[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Open] = this.rerouteFactory(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Dashboard),
            _b[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].AutoMigrate] = this.rerouteFactory(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Processing),
            _b[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Operations] = this.rerouteFactory(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Processing),
            _b[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Migrating] = this.rerouteFactory(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Processing),
            _b[_model__WEBPACK_IMPORTED_MODULE_3__["AccountStatus"].Test] = this.rerouteFactory(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Dashboard),
            _b);
        /**
         * Creates a function that uses a company's status to determine if the router should activate
         * the current route or deny activation and re-route.
         * Caller supplies two status/route maps, one for admins and one for regular users.
         * A status/route map is a map from CompanyStatus to a function that either allows activation
         * or denies it and re-routes the user to another page.
         * @param guardName The name of the guard that calls this function; for reporting.
         * @param adminRoutes The admin's status/routes map.
         * @param regularRoutes The regular user's status/routes map.
         * @returns A function that takes a Company and the guard name and returns
         * a cold terminating Observable<boolean> that determines activation.
         *
         */
        this.byAccountStatusOperatorFactory = function (adminRoutes, regularRoutes) { return function (company, guardName, originalRoute) { return _this.isAdminOnce$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (isAdmin) {
            var status = company.status;
            var routeFn = isAdmin ? adminRoutes[status] : regularRoutes[status];
            routeFn = routeFn || _this.rerouteFactory(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Failed);
            return routeFn(guardName, originalRoute, status);
        })); }; };
        this.isAdminOnce$ = authService.isAdmin$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])());
        var _a, _b;
    }
    /**
     * Log a message about what this guard did
     * when auth tracing is turned on.
     * Typically log a re-routing event.
     */
    AccountStatusGuardHelper.prototype.logEvent = function (guardName, message) {
        this.authService.logEvent(guardName + " " + message);
    };
    /**
     * Returns a router canActivate's Observable<boolean> that determines if the user may
     * activate this route or must not do so.
     * In the later case, it re-routes the user to an appropriate page.
     * If there is no signed in user or current company, the page cannot be activated and
     * the side-effect of the guard re-routes to a safe page (see signedInWithCompanyPackage$).
     * If there is a current company package, a status/route map determines the outcome.
     * A status/route map is a map from CompanyStatus to a function that either allows activation
     * or denies it and re-routes the user to another page.
     * The caller supplies two such maps, one for admins and one for regular users.
     * @param guardName The name of the guard that calls this function; for reporting.
     * @param adminRoutes The admin's status/routes map.
     * @param regularRoutes The regular user's status/routes map.
     * @param state The router state indicating where the user intended to go; if the user is not signed-in
     * this observable arranges for the app to try the route again after sign-in.
     */
    AccountStatusGuardHelper.prototype.accountStatusAllows$ = function (guardName, adminRoutes, regularRoutes, state) {
        var byStatusOperator = this.byAccountStatusOperatorFactory(adminRoutes, regularRoutes);
        return this.signedInWithCompanyPackage$(guardName, state).pipe(
        // if have company, decide based on CompanyStatus, else deny activation and re-route
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (company) { return company ? byStatusOperator(company, guardName, state.url) : Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(false); }));
    };
    /**
     * Observable emits the current user's company if that user is signed in and the company package is loaded.
     * This is a terminating observable with side-effects.
     * If signed out, navigates to sign-in and emits null.
     * If signed in, waits for company package to finish loading, before emitting the company.
     * If company package is not loaded, navigates to sign-out and emits null.
     */
    AccountStatusGuardHelper.prototype.signedInWithCompanyPackage$ = function (guardName, state) {
        var _this = this;
        var signedIn$ = this.authService.isSignedIn$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function (signedIn) {
            if (!signedIn) {
                // Not signed in. Remember where user was trying to go and sign in.
                _this.authService.setReroute(state.url, guardName);
                _this.logEvent(guardName, "calling AuthService.signin() because user is not signed-in");
                _this.authService.signin();
            }
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])());
        var doneLoading$ = this.sessionService.companyPackageLoading$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function (loading) {
            if (loading) {
                _this.logEvent(guardName, 'SessionService is loading current user data');
            }
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (loading) { return !loading; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["observeOn"])(rxjs__WEBPACK_IMPORTED_MODULE_1__["asapScheduler"]));
        var withData$ = doneLoading$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function () { return _this.sessionService.companyPackageLoaded$; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), // ensure terminates after first attempt
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (loaded) { return (loaded ? _this.sessionService.currentCompany$ : Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null)); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (company) {
            if (company) {
                _this.logEvent(guardName, "The current user's company is \"" + company.name + "\".");
            }
            else {
                _this.logEvent(guardName, 'SessionService data load must have failed because still not loaded after loading:false. Signing out.');
                _this.authService.signout();
            }
            return company;
        }));
        return signedIn$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (signedIn) { return signedIn ? withData$ : Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null); }));
    };
    AccountStatusGuardHelper.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_7__["defineInjectable"]({ factory: function AccountStatusGuardHelper_Factory() { return new AccountStatusGuardHelper(_angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_4__["AuthService"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_store_session_session_service__WEBPACK_IMPORTED_MODULE_8__["SessionService"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"])); }, token: AccountStatusGuardHelper, providedIn: "root" });
    return AccountStatusGuardHelper;
}());



/***/ }),

/***/ "./src/app/core/routing-guards/account-view-guard.ts":
/*!***********************************************************!*\
  !*** ./src/app/core/routing-guards/account-view-guard.ts ***!
  \***********************************************************/
/*! exports provided: AccountViewGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountViewGuard", function() { return AccountViewGuard; });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./account-status-guard-helper */ "./src/app/core/routing-guards/account-status-guard-helper.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");




var guardName = 'AccountDetailsGuard';
/**
 * Guard route to Account Details page
 */
var AccountViewGuard = /** @class */ (function () {
    function AccountViewGuard(accountStatusGuardHelper) {
        this.accountStatusGuardHelper = accountStatusGuardHelper;
    }
    AccountViewGuard.prototype.canActivate = function (route, state) {
        return this.signedInWithCompanyPackage$(state);
    };
    AccountViewGuard.prototype.signedInWithCompanyPackage$ = function (state) {
        return this.accountStatusGuardHelper.signedInWithCompanyPackage$(guardName, state).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["map"])(function (company) {
            return company ? true : false;
        }));
    };
    AccountViewGuard.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function AccountViewGuard_Factory() { return new AccountViewGuard(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](_account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__["AccountStatusGuardHelper"])); }, token: AccountViewGuard, providedIn: "root" });
    return AccountViewGuard;
}());



/***/ }),

/***/ "./src/app/core/routing-guards/admin-console-guard.ts":
/*!************************************************************!*\
  !*** ./src/app/core/routing-guards/admin-console-guard.ts ***!
  \************************************************************/
/*! exports provided: AdminConsoleGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminConsoleGuard", function() { return AdminConsoleGuard; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");








/**
 * Guard a page that must be authenticated but is not tied to the Current Account
 */
var AdminConsoleGuard = /** @class */ (function () {
    function AdminConsoleGuard(authService, router) {
        this.authService = authService;
        this.router = router;
    }
    AdminConsoleGuard.prototype.canActivate = function (route, state) {
        return this.canActivate$('canActivate', route, state);
    };
    AdminConsoleGuard.prototype.canActivateChild = function (route, state) {
        return this.canActivate$('canActivateChild', route, state);
    };
    AdminConsoleGuard.prototype.canActivate$ = function (method, route, state) {
        var _this = this;
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.authService.isAdmin$, this.authService.isSignedIn$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var isAdmin = _a[0], isSignedIn = _a[1];
            var caller = 'AdminConsoleGuard.' + method;
            if (isSignedIn) {
                _this.authService.logEvent(caller + " sees user is signed in");
                if (isAdmin) {
                    return true; // signed-in Admins can see the admin console
                }
                else {
                    _this.authService.logEvent(caller + " re-routing non-Admin user from admin console to dashboard");
                    _this.router.navigate([_core__WEBPACK_IMPORTED_MODULE_4__["WellKnownRoutes"].Dashboard], { replaceUrl: true });
                    return false; // regular user can't see the admin console
                }
            }
            else {
                _this.authService.logEvent(caller + " sees user is not signed in");
                _this.authService.setReroute(state.url, '${caller}');
                _this.authService.logEvent(caller + " called AuthService.signin()");
                _this.authService.signin(); // re-navigates to signin page
                return false; // not signed in.
            }
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])());
    };
    AdminConsoleGuard.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_5__["defineInjectable"]({ factory: function AdminConsoleGuard_Factory() { return new AdminConsoleGuard(_angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_3__["AuthService"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"])); }, token: AdminConsoleGuard, providedIn: "root" });
    return AdminConsoleGuard;
}());



/***/ }),

/***/ "./src/app/core/routing-guards/auth-failed-guard.ts":
/*!**********************************************************!*\
  !*** ./src/app/core/routing-guards/auth-failed-guard.ts ***!
  \**********************************************************/
/*! exports provided: AuthFailedGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthFailedGuard", function() { return AuthFailedGuard; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/well-known-routes */ "./src/app/core/well-known-routes.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");






var AuthFailedGuard = /** @class */ (function () {
    function AuthFailedGuard(authService) {
        this.authService = authService;
    }
    AuthFailedGuard.prototype.canDeactivate = function (component, currentRoute, currentState, nextState) {
        var _this = this;
        return this.authService.isSignedIn$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (isSignedIn) {
            if (isSignedIn) {
                _this.authService.signout();
            }
            var isSignedOutPage = nextState && nextState.url === _core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].SignedOut;
            return isSignedOutPage;
        }));
    };
    AuthFailedGuard.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function AuthFailedGuard_Factory() { return new AuthFailedGuard(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"])); }, token: AuthFailedGuard, providedIn: "root" });
    return AuthFailedGuard;
}());



/***/ }),

/***/ "./src/app/core/routing-guards/data-entry-page-guard.ts":
/*!**************************************************************!*\
  !*** ./src/app/core/routing-guards/data-entry-page-guard.ts ***!
  \**************************************************************/
/*! exports provided: DataEntryPageGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataEntryPageGuard", function() { return DataEntryPageGuard; });
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./account-status-guard-helper */ "./src/app/core/routing-guards/account-status-guard-helper.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};




var guardName = 'DataEntryPageGuard';
/**
 * Guard routes to pages where the user enters company data
 */
var DataEntryPageGuard = /** @class */ (function () {
    function DataEntryPageGuard(accountStatusGuardHelper) {
        this.accountStatusGuardHelper = accountStatusGuardHelper;
        // Any route with this activation guard can be activated if the account status is Open or Test
        // The route will be rejected and the user re-routed for any other account status.
        this.adminRoutes = __assign({}, accountStatusGuardHelper.adminBaseRoutes);
        this.adminRoutes[_model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Open] = _account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__["okRoute"];
        this.adminRoutes[_model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Test] = _account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__["okRoute"];
        this.regularRoutes = __assign({}, accountStatusGuardHelper.regularBaseRoutes);
        this.regularRoutes[_model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Open] = _account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__["okRoute"];
        this.regularRoutes[_model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Test] = _account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__["okRoute"];
    }
    DataEntryPageGuard.prototype.canActivate = function (route, state) {
        return this.ifAccountStatusAllows$(state);
    };
    DataEntryPageGuard.prototype.canActivateChild = function (route, state) {
        return this.ifAccountStatusAllows$(state);
    };
    DataEntryPageGuard.prototype.ifAccountStatusAllows$ = function (state) {
        return this.accountStatusGuardHelper.accountStatusAllows$(guardName, this.adminRoutes, this.regularRoutes, state);
    };
    DataEntryPageGuard.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function DataEntryPageGuard_Factory() { return new DataEntryPageGuard(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](_account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__["AccountStatusGuardHelper"])); }, token: DataEntryPageGuard, providedIn: "root" });
    return DataEntryPageGuard;
}());



/***/ }),

/***/ "./src/app/core/routing-guards/index.ts":
/*!**********************************************!*\
  !*** ./src/app/core/routing-guards/index.ts ***!
  \**********************************************/
/*! exports provided: AccountViewGuard, AdminConsoleGuard, AuthFailedGuard, DataEntryPageGuard, SinglePageStatusGuard, PageLeaveGuard, SignupGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _account_view_guard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./account-view-guard */ "./src/app/core/routing-guards/account-view-guard.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccountViewGuard", function() { return _account_view_guard__WEBPACK_IMPORTED_MODULE_0__["AccountViewGuard"]; });

/* harmony import */ var _admin_console_guard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./admin-console-guard */ "./src/app/core/routing-guards/admin-console-guard.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AdminConsoleGuard", function() { return _admin_console_guard__WEBPACK_IMPORTED_MODULE_1__["AdminConsoleGuard"]; });

/* harmony import */ var _auth_failed_guard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth-failed-guard */ "./src/app/core/routing-guards/auth-failed-guard.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AuthFailedGuard", function() { return _auth_failed_guard__WEBPACK_IMPORTED_MODULE_2__["AuthFailedGuard"]; });

/* harmony import */ var _data_entry_page_guard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data-entry-page-guard */ "./src/app/core/routing-guards/data-entry-page-guard.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataEntryPageGuard", function() { return _data_entry_page_guard__WEBPACK_IMPORTED_MODULE_3__["DataEntryPageGuard"]; });

/* harmony import */ var _page_leave_guard__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./page-leave-guard */ "./src/app/core/routing-guards/page-leave-guard.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PageLeaveGuard", function() { return _page_leave_guard__WEBPACK_IMPORTED_MODULE_4__["PageLeaveGuard"]; });

/* harmony import */ var _signup_page_guard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./signup-page-guard */ "./src/app/core/routing-guards/signup-page-guard.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SignupGuard", function() { return _signup_page_guard__WEBPACK_IMPORTED_MODULE_5__["SignupGuard"]; });

/* harmony import */ var _single_page_status_guard__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./single-page-status-guard */ "./src/app/core/routing-guards/single-page-status-guard.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SinglePageStatusGuard", function() { return _single_page_status_guard__WEBPACK_IMPORTED_MODULE_6__["SinglePageStatusGuard"]; });










/***/ }),

/***/ "./src/app/core/routing-guards/page-leave-guard.ts":
/*!*********************************************************!*\
  !*** ./src/app/core/routing-guards/page-leave-guard.ts ***!
  \*********************************************************/
/*! exports provided: PageLeaveGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageLeaveGuard", function() { return PageLeaveGuard; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../store/session/session.service */ "./src/app/store/session/session.service.ts");






/**
 * Routing guard the asks a component if (when) the user can leave the page.
 * Implements the router's `CanDeactivate` by asking the component if it has
 * a `canLeaveAfterSave` method and calling that method if it does.
 * Don't bother if in ReadOnly mode
 */
var PageLeaveGuard = /** @class */ (function () {
    function PageLeaveGuard(sessionService) {
        this.readOnly$ = sessionService.readOnly$;
    }
    PageLeaveGuard.prototype.canDeactivate = function (component, currentRoute, currentState, nextState) {
        return this.readOnly$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function (readOnly) {
            if (readOnly || component === null || !component.canLeaveAfterSave) {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(true);
            }
            var res = component.canLeaveAfterSave(component, currentRoute, currentState, nextState);
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["isObservable"])(res) || Object(_core__WEBPACK_IMPORTED_MODULE_2__["isPromise"])(res) ? res : Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(res);
        }));
    };
    PageLeaveGuard.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function PageLeaveGuard_Factory() { return new PageLeaveGuard(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_store_session_session_service__WEBPACK_IMPORTED_MODULE_5__["SessionService"])); }, token: PageLeaveGuard, providedIn: "root" });
    return PageLeaveGuard;
}());



/***/ }),

/***/ "./src/app/core/routing-guards/signup-page-guard.ts":
/*!**********************************************************!*\
  !*** ./src/app/core/routing-guards/signup-page-guard.ts ***!
  \**********************************************************/
/*! exports provided: SignupGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SignupGuard", function() { return SignupGuard; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");








/**
 * Guard attempts to get to the Signup Page
 */
var SignupGuard = /** @class */ (function () {
    function SignupGuard(authService, router) {
        this.authService = authService;
        this.router = router;
    }
    SignupGuard.prototype.canActivate = function () {
        return this.isSignedOut$;
    };
    SignupGuard.prototype.canActivateChild = function () {
        return this.isSignedOut$;
    };
    Object.defineProperty(SignupGuard.prototype, "isSignedOut$", {
        // Continue to sign up only if signed out. Must sign out before sign up.
        // If signed in as regular user, navigate to dashboard.
        // If signed in as admin, sign out (an admin cannot sign up).
        get: function () {
            var _this = this;
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.authService.isAdmin$, this.authService.isSignedIn$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
                var isAdmin = _a[0], isSignedIn = _a[1];
                if (isSignedIn) {
                    if (isAdmin) {
                        _this.authService.logEvent("SignupNavigationGuard calling AuthService.signout() for signed in Administrator user.");
                        _this.authService.signout();
                    }
                    else {
                        // TODO: consider signing out instead.
                        var newRoute = _core__WEBPACK_IMPORTED_MODULE_4__["WellKnownRoutes"].Dashboard;
                        _this.authService.logEvent("SignupNavigationGuard re-routing signed in regular user to \"" + newRoute + "\"");
                        _this.router.navigate([newRoute], { replaceUrl: true });
                    }
                }
                else {
                    var reroute = _this.authService.getReroute('SignupNavigationGuard');
                    if (reroute === _core__WEBPACK_IMPORTED_MODULE_4__["WellKnownRoutes"].SignedOut) {
                        _this.router.navigate([reroute], { replaceUrl: true });
                    }
                }
                return !isSignedIn;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])());
        },
        enumerable: true,
        configurable: true
    });
    SignupGuard.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_5__["defineInjectable"]({ factory: function SignupGuard_Factory() { return new SignupGuard(_angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_3__["AuthService"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"])); }, token: SignupGuard, providedIn: "root" });
    return SignupGuard;
}());



/***/ }),

/***/ "./src/app/core/routing-guards/single-page-status-guard.ts":
/*!*****************************************************************!*\
  !*** ./src/app/core/routing-guards/single-page-status-guard.ts ***!
  \*****************************************************************/
/*! exports provided: SinglePageStatusGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SinglePageStatusGuard", function() { return SinglePageStatusGuard; });
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./account-status-guard-helper */ "./src/app/core/routing-guards/account-status-guard-helper.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};





var guardName = 'SinglePageStatusGuard';
/**
 * Guard single-page route which can be activated only when the account's status permits it.
 * For example, if the route-to-activate is '/abandoned',
 * only an account whose status is "Abandoned" may activate it.
 * Not for routes with child routes.
 * Not for data entry page routes.
 */
var SinglePageStatusGuard = /** @class */ (function () {
    function SinglePageStatusGuard(accountStatusGuardHelper) {
        this.accountStatusGuardHelper = accountStatusGuardHelper;
    }
    SinglePageStatusGuard.prototype.canActivate = function (route, state) {
        return this.ifAccountStatusAllows$(state);
    };
    SinglePageStatusGuard.prototype.canActivateChild = function (route, state) {
        return this.ifAccountStatusAllows$(state);
    };
    SinglePageStatusGuard.prototype.ifAccountStatusAllows$ = function (state) {
        // Start with route fns that reject activation of all routes.
        var adminRoutes = __assign({}, this.accountStatusGuardHelper.adminBaseRoutes);
        var regularRoutes = __assign({}, this.accountStatusGuardHelper.regularBaseRoutes);
        // Decide which account status(es) allow activation of the pending route.
        // For example, if the route-to-activate is '/abandoned',
        // only an account whose status is "Abandoned" may activate it.
        var okStatuses = [];
        var url = state.url;
        // strip off the query string (if any)
        var qi = url.indexOf('?');
        if (qi > -1) {
            url = url.substr(0, qi);
        }
        switch (url) {
            case _core__WEBPACK_IMPORTED_MODULE_2__["WellKnownRoutes"].Abandoned:
                okStatuses = [_model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Abandoned];
                break;
            case _core__WEBPACK_IMPORTED_MODULE_2__["WellKnownRoutes"].Documents:
                okStatuses = [_model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Docs, _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Test];
                adminRoutes[_model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Open] = _account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__["okRoute"]; // special case
                break;
            case _core__WEBPACK_IMPORTED_MODULE_2__["WellKnownRoutes"].Enrolled:
                okStatuses = [_model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Enrolled];
                break;
            case _core__WEBPACK_IMPORTED_MODULE_2__["WellKnownRoutes"].Processing:
                okStatuses = [_model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].AutoMigrate, _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Operations, _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Migrating];
                break;
        }
        // This step allows activation of the pending route for "ok statuses"
        okStatuses.forEach(function (status) {
            adminRoutes[status] = _account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__["okRoute"];
            regularRoutes[status] = _account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__["okRoute"];
        });
        return this.accountStatusGuardHelper.accountStatusAllows$(guardName, adminRoutes, regularRoutes, state);
    };
    SinglePageStatusGuard.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_3__["defineInjectable"]({ factory: function SinglePageStatusGuard_Factory() { return new SinglePageStatusGuard(_angular_core__WEBPACK_IMPORTED_MODULE_3__["inject"](_account_status_guard_helper__WEBPACK_IMPORTED_MODULE_1__["AccountStatusGuardHelper"])); }, token: SinglePageStatusGuard, providedIn: "root" });
    return SinglePageStatusGuard;
}());



/***/ }),

/***/ "./src/app/core/saver.ts":
/*!*******************************!*\
  !*** ./src/app/core/saver.ts ***!
  \*******************************/
/*! exports provided: Saver, SaverFactoryService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Saver", function() { return Saver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaverFactoryService", function() { return SaverFactoryService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _services_logger_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");





var Saver = /** @class */ (function () {
    /**
     * Helper to compose an array of save observables returned by a save method within a canDeactivate.
     *
     * @param [logger] optional logger service to be used when save fails and no explicit errorHandler
     * @example from AboutYouComponent
     *
     * save(): Observable<boolean> {
     *   const saver = this.saveFactory.create(); // preferred
     *   // const saver = new Saver(); // OK but lacks the logger
     *
     *   // Get fresh versions of the current Company and User
     *   // and save each if it was changed here.
     *   return this.modelData$.pipe(
     *     concatMap(([company, user]) => {
     *       if (this.isHousehold !== company.isHousehold) {
     *         saver.add(this.companyService.update({ ...company, isHousehold: this.isHousehold }));
     *       }
     *       if (areDifferent(this.user, user, 'User')) {
     *         saver.add(this.userService.update(this.user));
     *       }
     *       return saver.go(error => logger.error('Ouch!', error));
     *     })
     *   );
     * }
     *  ...
     * canLeaveAfterSave() {
     *    return this.save(); // router will call and subscribe.
     * }
     *
     */
    function Saver(logger) {
        this.logger = logger;
        this.save$ = [];
    }
    /**
     * Adds saving Observable(s) (0, 1, ...) to the saver's collection.
     * Exclude nulls and the NO_SAVE sentinel Observable.
     * @returns This Saver instance, for method chaining.
     */
    Saver.prototype.add = function () {
        var save = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            save[_i] = arguments[_i];
        }
        save = Array.isArray(save) ? save : [save];
        this.save$ = this.save$.concat(save.filter(function (s) { return s != null && s !== Saver.NO_SAVE; }));
        return this;
    };
    // TODO: Add spinner here?
    /**
     * Return Observable<boolean> that combines multiple saver Observables in a single Observable
     * that emits when all saver Observables terminate.
     * Observable emits true if they all succeed and false if any of them fail.
     * @param [errorHandler] Optional error handler returning Observable<boolean> or void.
     *
     * If fails, logs with errorHandler (if provided).
     * If no errorHandler, logs the error with the logger service (if defined)
     */
    Saver.prototype.go = function (errorHandler) {
        var _this = this;
        return this.save$.length === 0 ? Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(true) : Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["forkJoin"])(this.save$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (results) { return true; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["catchError"])(function (error) {
            if (errorHandler) {
                return errorHandler(error) || Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(false);
            }
            else {
                if (_this.logger) {
                    _this.logger.error("Saver: save observable failed.", error);
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(false);
            }
        }));
    };
    /** Nothing-to-save placeholder observable that Saver will ignore  */
    Saver.NO_SAVE = Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(null);
    return Saver;
}());

/**
 * Creates an instance of a Saver with an injected LoggerService
 */
var SaverFactoryService = /** @class */ (function () {
    function SaverFactoryService(logger) {
        this.logger = logger;
    }
    /** Create new instance of a Saver with a logger for errors */
    SaverFactoryService.prototype.create = function () {
        return new Saver(this.logger);
    };
    SaverFactoryService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_3__["defineInjectable"]({ factory: function SaverFactoryService_Factory() { return new SaverFactoryService(_angular_core__WEBPACK_IMPORTED_MODULE_3__["inject"](_services_logger_service__WEBPACK_IMPORTED_MODULE_2__["LoggerService"])); }, token: SaverFactoryService, providedIn: "root" });
    return SaverFactoryService;
}());



/***/ }),

/***/ "./src/app/core/services/auth-services/auth-data.service.ts":
/*!******************************************************************!*\
  !*** ./src/app/core/services/auth-services/auth-data.service.ts ***!
  \******************************************************************/
/*! exports provided: AuthDataService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthDataService", function() { return AuthDataService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _logger_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _core_guid_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @core/guid-fns */ "./src/app/core/guid-fns.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};










var AuthDataService = /** @class */ (function () {
    function AuthDataService(http, logger) {
        this.http = http;
        this.logger = logger;
        this.url = _environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiRoot + "/account/user";
    }
    /**
     * Get the authorized user from the server based on oidcSub
     * @param oidcSub The id of the user from IdentityServer
     * @returns  The corresponding application user with that oidcSub (or undefined if not found)
     */
    AuthDataService.prototype.getAuthUser = function (oidcUser) {
        return (oidcUser && oidcUser.access_token) ? this.getAuthUserFromServer(oidcUser) : Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null);
    };
    /** Get the user from the server, and create if not exists */
    AuthDataService.prototype.getAuthUserFromServer = function (oidcUser) {
        var p = oidcUser.profile;
        var quser = {
            username: p.preferred_username,
            firstName: p.given_name && p.given_name.trim(),
            lastName: p.family_name && p.family_name.trim(),
            oidcSub: p.sub,
            email: p.email,
            phone: p.phone_number,
            bcl: p.bcl,
        };
        var leadInfo = this.getLeadInfo(p);
        this.callPardotFormHandler(quser, leadInfo);
        var params = __assign({}, quser, { lead: leadInfo });
        return this.http.post(this.url, params).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (user) { return repairUser(user, oidcUser); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (error) {
            if (error.status === 404) {
                var newError = __assign({}, error, { message: "Could not find an ECommerce user to match the signed-in user. Signing out." });
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(newError);
            }
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(error);
        }));
    };
    AuthDataService.prototype.callPardotFormHandler = function (user, leadInfo) {
        var _this = this;
        if (!leadInfo || !leadInfo.pardotVisitorId) {
            return;
        }
        if (!_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].pardotVisitorHandler) {
            this.logger.warn('pardotVisitorHandler not defined');
            return;
        }
        var formData = new FormData();
        formData.append('pardot_visitor_id', leadInfo.pardotVisitorId);
        formData.append('email', user.email);
        formData.append('first_name', user.firstName);
        formData.append('last_name', user.lastName);
        formData.append('phone_number', user.phone);
        formData.append('username', user.username);
        formData.append('promo_campaign_id', leadInfo.promoCampaignId);
        formData.append('priceCampaignId', leadInfo.priceCampaignId);
        formData.append('promoCampaignId', leadInfo.promoCampaignId);
        formData.append('partner code', leadInfo.partnerCode);
        formData.append('ShortCode', leadInfo.shortCode);
        this.http.post(_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].pardotVisitorHandler, formData)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (error) {
            _this.logger.warn("Pardot form handler error", error);
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["empty"])();
        })).subscribe();
    };
    /** Get the CMS info from state.search */
    AuthDataService.prototype.getLeadInfo = function (profile) {
        // formId=222&leadId=333&pardotVisitorId=444&partnerCode=CITI&shortCode=XYZ&promoCampaignId=ADRP&priceCampaignId=555
        if (!profile || !profile.cms_profile) {
            return null;
        }
        var params = Object(_utils__WEBPACK_IMPORTED_MODULE_4__["parseUrlParams"])(profile.cms_profile);
        var leadid = params.leadid, pardotvisitorid = params.pardotvisitorid, partnercode = params.partnercode, shortcode = params.shortcode, promocampaignid = params.promocampaignid, pricecampaignid = params.pricecampaignid, remains = __rest(params, ["leadid", "pardotvisitorid", "partnercode", "shortcode", "promocampaignid", "pricecampaignid"]);
        var info = {
            id: Object(_core_guid_fns__WEBPACK_IMPORTED_MODULE_6__["getGuidComb"])(),
            leadId: leadid,
            pardotVisitorId: pardotvisitorid,
            partnerCode: partnercode,
            priceCampaignId: pricecampaignid,
            promoCampaignId: promocampaignid,
            shortCode: shortcode,
            parameters: remains
        };
        if (!info.pardotVisitorId) {
            info.pardotVisitorId = this.getPardotVisitorIdFromCookie();
        }
        return info;
    };
    AuthDataService.prototype.getPardotVisitorIdFromCookie = function () {
        var pardotCookie = Object(_utils__WEBPACK_IMPORTED_MODULE_4__["getCookies"])('visitor_id', '-hash');
        var visitorId = pardotCookie[0];
        return visitorId;
    };
    AuthDataService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_7__["defineInjectable"]({ factory: function AuthDataService_Factory() { return new AuthDataService(_angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_logger_service__WEBPACK_IMPORTED_MODULE_5__["LoggerService"])); }, token: AuthDataService, providedIn: "root" });
    return AuthDataService;
}());

function repairUser(user, oidcUser) {
    if (!user.firstName && !user.lastName) {
        // No name. Try to get name from oidcUser.
        var _a = oidcUser ? oidcUser.profile : {}, _b = _a.family_name, family_name = _b === void 0 ? null : _b, _c = _a.given_name, given_name = _c === void 0 ? null : _c;
        user.firstName = given_name && given_name.trim();
        user.lastName = family_name && family_name.trim();
        // If couldn't get name from oidcUser, get it from the 'first.last@surepayroll.com' username.
        if (!user.firstName && !user.lastName) {
            var name_1 = user.username.match(/([^@])*/)[0];
            var _d = Object(_utils__WEBPACK_IMPORTED_MODULE_4__["titleCase"])(name_1).split('.'), fn = _d[0], ln = _d[1];
            user.firstName = fn;
            user.lastName = ln;
        }
        // If still no name, set to unknown.
        if (!user.firstName && !user.lastName) {
            user.firstName = 'Unknown';
            user.lastName = 'User';
        }
    }
    return user;
}


/***/ }),

/***/ "./src/app/core/services/auth-services/auth.service.ts":
/*!*************************************************************!*\
  !*** ./src/app/core/services/auth-services/auth.service.ts ***!
  \*************************************************************/
/*! exports provided: AuthService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthService", function() { return AuthService; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/well-known-routes */ "./src/app/core/well-known-routes.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _session_session_dispatcher__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @session/session-dispatcher */ "./src/app/store/session/session-dispatcher.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _iframe_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../iframe.service */ "./src/app/core/services/iframe.service.ts");
/* harmony import */ var _auth_data_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./auth-data.service */ "./src/app/core/services/auth-services/auth-data.service.ts");
/* harmony import */ var _oidc_manager_factory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./oidc-manager-factory */ "./src/app/core/services/auth-services/oidc-manager-factory.ts");
/* harmony import */ var _oidc_signup_user__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./oidc-signup-user */ "./src/app/core/services/auth-services/oidc-signup-user.ts");
/* harmony import */ var _oidc_token_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./oidc-token.service */ "./src/app/core/services/auth-services/oidc-token.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");






















var doNotRememberUrls = [
    _core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].Abandoned,
    _core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].AuthFailed,
    _core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].Failed,
    _core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].SignedOut,
];
var serviceName = 'AuthService';
var AuthService = /** @class */ (function () {
    function AuthService(authDataService, logger, mgrFactory, oidcTokenService, router, sessionDispatcher, iframeService) {
        var _this = this;
        this.authDataService = authDataService;
        this.logger = logger;
        this.oidcTokenService = oidcTokenService;
        this.router = router;
        this.sessionDispatcher = sessionDispatcher;
        this.iframeService = iframeService;
        this.errorsSubject = new rxjs__WEBPACK_IMPORTED_MODULE_7__["BehaviorSubject"](null);
        this.oidcUserSubject = new rxjs__WEBPACK_IMPORTED_MODULE_7__["ReplaySubject"](1);
        /** Observable of errors caught during authorization */
        this.errors$ = this.errorsSubject.asObservable();
        /** Storage key for app path after user returns from IdentityServer */
        this.reroutePathKey = 'reroutePathKey';
        this.eventsSubject = new rxjs__WEBPACK_IMPORTED_MODULE_7__["BehaviorSubject"](serviceName + 'created');
        this.events$ = this.eventsSubject.asObservable();
        if (_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].authTracing) {
            this.events$.subscribe(function (event) { return _this.logger.log('Auth Tracing: ' + event); });
        }
        this.oidcManager = mgrFactory.create();
        this.oidcTokenService.logEvent = this.logEvent.bind(this);
        // initialize in the next tick, so dependencies on this constructor can be resolved first.
        setTimeout(function () { return _this.initialize(); }, 0);
    }
    AuthService.prototype.initialize = function () {
        var _this = this;
        this.oidcManager.clearStaleState();
        this.oidcUser$ = this.oidcUserSubject.pipe(
        // Either a properly signed in OidcUser or null
        // It must exist, have an access token, and not be expired
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (oidcUser) {
            if (oidcUser) {
                if (oidcUser.access_token && !oidcUser.expired) {
                    _this.logEvent('oidcUser changed and appears valid');
                }
                else {
                    _this.logEvent('oidcUser changed but is invalid; returning null');
                    oidcUser = null;
                }
            }
            else {
                _this.logEvent('oidcUser changed to null');
            }
            return oidcUser;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["shareReplay"])(1));
        /**
         * Observable of the authenticated app User, derived from changes to the OidcUser.
         * Gets the app user from the back-end API when the OidcUser$ changes
         */
        this.authUser$ = this.oidcUser$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["concatMap"])(function (oidcUser) { return _this.getAuthUserFromOidcUser(oidcUser); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["shareReplay"])(1));
        // Let Session know about it whenever the AuthUser changes
        // Never need to unsubscribe from self.
        this.authUser$.subscribe(function (authUser) {
            var name = Object(_core_utils__WEBPACK_IMPORTED_MODULE_2__["getFullName"])(authUser);
            _this.logEvent(serviceName + " set AuthUser named \"" + name + "\"; dispatching AuthUser to Session");
            _this.sessionDispatcher.setAuthUser(authUser);
        });
        this.accessToken$ = this.oidcUser$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (user) { return (user ? user.access_token : ''); }));
        this.isAdmin$ = this.authUser$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (authUser) { return authUser && authUser.userRole === _model__WEBPACK_IMPORTED_MODULE_5__["UserRole"].Administrator; }));
        this.isSignedIn$ = this.authUser$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (authUser) { return authUser != null; }));
        // Attempt initial sign-in from stored user, without bouncing to /oidc-callback
        this.signinRedirectCallback();
    };
    /** Log a significant Auth cycle event */
    AuthService.prototype.logEvent = function (event) {
        this.eventsSubject.next(event);
    };
    // #region commands
    /**
     * Get the route AuthService. Will re-route to this route after successful signin.
     * @param [caller] caller's name
     */
    AuthService.prototype.getReroute = function (caller) {
        var route;
        if (window.sessionStorage) {
            route = sessionStorage.getItem(this.reroutePathKey);
        }
        this.logEvent((caller || 'caller') + " asked for postSigninRoute from browser storage and will receive \"" + route + "\"");
        return route;
    };
    /**
     * Called when an Auth-related error occurs while performing some process requiring authentication.
     * This method resets authentication to a safe state prior to the post-error action.
     * Caller is responsible for the action to take next.
     */
    AuthService.prototype.onAuthError = function (reason) {
        if (reason) {
            this.logEvent(reason);
        }
        this.oidcTokenService.clearSignupToken();
    };
    /**
     * Clear the re-route path in local browser storage.
     * @param url of page to return to after signin. A falsy url clears the stash.
     * @param [caller] caller's name
     */
    AuthService.prototype.clearReroute = function (caller) {
        this.setReroute('', caller);
    };
    /**
     * Stash (or clear) a route in local browser storage.
     * AuthService will re-route to it after successful signin.
     * @param url of page to return to after signin. A falsy url clears the stash.
     * @param [caller] caller's name
     */
    AuthService.prototype.setReroute = function (url, caller) {
        if (window.sessionStorage) {
            var message = void 0;
            if (url) {
                if (doNotRememberUrls.includes(url) || !Object(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__["isWellKnownRoute"])(url)) {
                    message = "did not stash blacklisted url, \"" + url + "\" in browser storage";
                }
                else {
                    // trim off query string
                    var q = url.indexOf('?');
                    if (q > 0) {
                        url = url.substring(0, q);
                    }
                    sessionStorage.setItem(this.reroutePathKey, url);
                    message = "stashed postSigninRoute, \"" + url + "\", in browser storage";
                }
            }
            else {
                sessionStorage.removeItem(this.reroutePathKey);
                message = 'cleared postSigninRoute in browser storage';
            }
            this.logEvent((caller || 'caller') + " " + message + ".");
        }
    };
    /** Leave the app and open the signin dialog on IdentityServer */
    AuthService.prototype.signin = function () {
        this.logEvent(serviceName + '.signin() called');
        // Get query params from the url for sending to IdentityServer as part of the 'state'
        // it will send them back after signin on oidcUser.state
        // Can't use router here - it's not ready yet
        var search = window.location.search;
        if (search.startsWith('?')) {
            search = search.substring(1);
        }
        return this.execute('signin', this.oidcManager.signinRedirect({
            extraQueryParams: {
                sendto: 'signup',
                cms: search
            }
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["concatMap"])(function () { return rxjs__WEBPACK_IMPORTED_MODULE_7__["NEVER"]; }));
    };
    /**
     * Prepare to navigate the next time AuthUser changes
     * which will be after IdentityServer returns its OIDC user
     */
    AuthService.prototype.navigateOnNextAuthUser = function () {
        var _this = this;
        this.authUser$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function (authUser) { return !!authUser; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["first"])()).subscribe(function (authUser) {
            _this.logEvent(serviceName + ".navigateForAuthUser() navigating with AuthUser, \"" + Object(_core_utils__WEBPACK_IMPORTED_MODULE_2__["getFullName"])(authUser) + "\"");
            _this.navigateAfterSignIn(authUser);
        });
    };
    /**
     * Update the OIDC UserManager when called back after successful signin.
     * @param [data] Always null from OidcCallbackComponent; has OIDC user data when mocked.
     * @returns Terminating observable of the OIDC user
     */
    AuthService.prototype.signinRedirectCallback = function (data) {
        var _this = this;
        this.logEvent(serviceName + ".signinRedirectCallback() called with " + (data ? '' : 'no') + " data");
        // router not yet ready, so save requested url
        var url = window.location.pathname;
        this.setReroute(url, 'signinRedirectCallback');
        this.navigateOnNextAuthUser();
        if (!this.hasSignInState() && !data) {
            // not really doing a redirect, so try to get current user
            return this.execute('getUser', this.oidcManager.getUser().then(function (oidcUser) {
                _this.logEvent(serviceName + ".signinRedirectCallback() called getUser() and got " + oidcUser);
                if (oidcUser && oidcUser.expires_in > 300) {
                    // This triggers fetch of application AuthUser
                    _this.oidcUserSubject.next(oidcUser);
                }
                else {
                    // Jump out of the app to the signin page
                    _this.signin();
                }
                return oidcUser;
            }));
        }
        return this.execute('redirectCallback', this.oidcManager.signinRedirectCallback(data).then(function (oidcUser) {
            _this.logEvent(serviceName + ".signinRedirectCallback() received OIDC User " + oidcUser + " from OIDC manager");
            // This triggers fetch of application AuthUser
            _this.oidcUserSubject.next(oidcUser);
            return oidcUser;
        }));
    };
    /** Determine if we have stored state to match the url state.  If we don't, and we call
     * oidcManager.signinRedirectCallback, we get "no matching state found in storage".  So don't do that. */
    AuthService.prototype.hasSignInState = function () {
        var url = window.location.href;
        if (!url.includes(_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].oidcRedirectUri) || !url.includes('&state=')) {
            return false;
        }
        var matches = url.match(/state=([^&#]*)/);
        var state = matches && matches[1];
        var stateData = state && window.localStorage && window.localStorage.getItem('oidc.' + state);
        return !!stateData;
    };
    /**
     * Leave the app, sign-out on IdentityServer, ... and return to signed-out page
     * If IdentityServer handles sign-out, observable never completes so that
     * current page is blocked while browser navigates to IdentityServer.
     * If authenticated with signup token, clear oidcUser and navigate to signed-out page immediately
     */
    AuthService.prototype.signout = function () {
        var _this = this;
        this.logEvent(serviceName + '.signout() called');
        this.oidcTokenService.clearSignupToken(serviceName + '.signout()');
        this.iframeService.hide();
        this.oidcUserSubject.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["concatMap"])(function (oidcUser) {
            if (oidcUser && oidcUser.state === _oidc_signup_user__WEBPACK_IMPORTED_MODULE_12__["OidcSignupUser"].signupUserState) {
                _this.oidcUserSubject.next(null); // also nulls the AuthUser
                _this.router.navigate([_core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].SignedOut]);
            }
            else {
                _this.setReroute(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].SignedOut, serviceName + '.signout()');
                // start execution of IdentityServer signout ...
                _this.execute('signout', _this.oidcManager.signoutRedirect());
                // clear oidcUser after execute starts and before IdentityServer finishes.
                _this.oidcUserSubject.next(null); // also nulls the AuthUser
            }
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["of"])();
        })).subscribe(null, function (error) { return _this.errorsSubject.next(error); });
        this.oidcUserSubject.next(null);
    };
    AuthService.prototype.authFailed = function (error) {
        var reason = typeof error === 'string' ? error : !error ? '' : error.message ? error.message : error.toString();
        this.errorsSubject.next(reason);
        this.router.navigate([_core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].AuthFailed], { replaceUrl: true });
    };
    /**
     * Navigate to an app page after successful signin.
     * Which page depends on who the user is and whether the target route is in browser storage
     * @param oidcUser signed in user
     */
    AuthService.prototype.navigateAfterSignIn = function (authUser) {
        var routeUrl;
        if (authUser) {
            routeUrl = this.getReroute(serviceName + '.navigateAfterSignIn()');
            if (routeUrl) {
                this.clearReroute(serviceName + '.navigateAfterSignIn()');
            }
            // Administrators always start on the admin account list page ...
            if (authUser.userRole === _model__WEBPACK_IMPORTED_MODULE_5__["UserRole"].Administrator) {
                // ... unless deep linking into AdminAccountView for a particular companyId and userId
                // Ex: ~/admin/account-view/14869218ca0645cea77d491325216e46/76d58284c1a04e3eb8080162c1bc45a9
                if (!/\/admin\/account-view\/[a-fA-F0-9]{32,}\/[a-fA-F0-9]{32,}/.test(routeUrl)) {
                    routeUrl = _core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].Admin;
                }
                this.logEvent(serviceName + " routing Administrator to \"" + routeUrl + "\" after signin");
            }
            else {
                routeUrl = routeUrl || _core_well_known_routes__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].Dashboard;
                this.logEvent(serviceName + " routing regular user to \"" + routeUrl + "\" after signin");
            }
        }
        else {
            // Not fully signed in. No place to go.
            // Could be because of
            this.logEvent(serviceName + "'s AuthUser is null after signin");
            return;
        }
        this.router.navigateByUrl(routeUrl, { replaceUrl: true });
    };
    AuthService.prototype.execute = function (operationName, promise) {
        var _this = this;
        this.errorsSubject.next(null);
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["from"])(promise.catch(function (error) {
            // TODO: Should log errors to a server
            _this.logger.error("\"" + operationName + "\" failed", error);
            _this.authFailed(error);
            return null;
        }));
    };
    /** Get the application authenticated user based on an OidcUser */
    AuthService.prototype.getAuthUserFromOidcUser = function (oidcUser) {
        var _this = this;
        if (oidcUser) {
            this.logEvent('fetch auth user from server based on OIDC user');
            return this.authDataService.getAuthUser(oidcUser).pipe(
            // scheduler ensures one tick, forcing async observation
            // observeOn(asapScheduler),
            Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["catchError"])(function (error) {
                var sub = (oidcUser.profile && oidcUser.profile.sub) || 'unknown';
                var emsg = "Error while getting AuthUser from server for oidcUser.sub=" + sub + ".";
                _this.logger.error(emsg, error);
                _this.logEvent(emsg);
                _this.authFailed(error);
                // Don't return error as that breaks subscriptions.
                // Return null which clears the decks.
                // authFailed() will take care of navigation.
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["of"])(null);
            }));
        }
        else {
            this.logEvent('not fetching auth user because no OIDC user');
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["of"])(null);
        }
    };
    /**
     * Get the OidcUser (not the application user) from the OidcManager.
     * Diagnostic. Not used.
     */
    AuthService.prototype.getOidcUser = function () {
        var _this = this;
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["from"])(this.oidcManager.getUser()
            .catch(function (error) {
            // TODO: Should log on the server
            // this.logger.error(`"${operationName}" failed`, error);
            _this.errorsSubject.next(error.message ? error.message : error.toString());
            return null;
        }));
    };
    AuthService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_14__["defineInjectable"]({ factory: function AuthService_Factory() { return new AuthService(_angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_auth_data_service__WEBPACK_IMPORTED_MODULE_10__["AuthDataService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_1__["LoggerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_oidc_manager_factory__WEBPACK_IMPORTED_MODULE_11__["OidcManagerFactory"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_oidc_token_service__WEBPACK_IMPORTED_MODULE_13__["OidcTokenService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_session_session_dispatcher__WEBPACK_IMPORTED_MODULE_6__["SessionDispatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_iframe_service__WEBPACK_IMPORTED_MODULE_9__["IframeService"])); }, token: AuthService, providedIn: "root" });
    return AuthService;
}());



/***/ }),

/***/ "./src/app/core/services/auth-services/oidc-manager-config.ts":
/*!********************************************************************!*\
  !*** ./src/app/core/services/auth-services/oidc-manager-config.ts ***!
  \********************************************************************/
/*! exports provided: oidcManagerConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "oidcManagerConfig", function() { return oidcManagerConfig; });
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");

var client_url = window.location.protocol + "//" + window.location.host + "/";
var oidcManagerConfig = {
    authority: _environment__WEBPACK_IMPORTED_MODULE_0__["environment"].oidcAuthRealm,
    client_id: _environment__WEBPACK_IMPORTED_MODULE_0__["environment"].oidcClientId,
    redirect_uri: "" + client_url + _environment__WEBPACK_IMPORTED_MODULE_0__["environment"].oidcRedirectUri,
    response_type: 'id_token token',
    scope: _environment__WEBPACK_IMPORTED_MODULE_0__["environment"].oidcScope,
    post_logout_redirect_uri: client_url + "index.html"
    // Brock says: "Use the default Session Storage unless you have a great reason to do otherwise"
    // userStore: new WebStorageStateStore({ store: window.localStorage })
};


/***/ }),

/***/ "./src/app/core/services/auth-services/oidc-manager-factory.ts":
/*!*********************************************************************!*\
  !*** ./src/app/core/services/auth-services/oidc-manager-factory.ts ***!
  \*********************************************************************/
/*! exports provided: OidcManagerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OidcManagerFactory", function() { return OidcManagerFactory; });
/* harmony import */ var oidc_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! oidc-client */ "./node_modules/oidc-client/lib/oidc-client.js");
/* harmony import */ var oidc_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(oidc_client__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _oidc_manager_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./oidc-manager-config */ "./src/app/core/services/auth-services/oidc-manager-config.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");



var OidcManagerFactory = /** @class */ (function () {
    function OidcManagerFactory() {
    }
    /** Create a new, configured oidc-client UserManager */
    OidcManagerFactory.prototype.create = function () {
        return new oidc_client__WEBPACK_IMPORTED_MODULE_0__["UserManager"](_oidc_manager_config__WEBPACK_IMPORTED_MODULE_1__["oidcManagerConfig"]);
    };
    OidcManagerFactory.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function OidcManagerFactory_Factory() { return new OidcManagerFactory(); }, token: OidcManagerFactory, providedIn: "root" });
    return OidcManagerFactory;
}());



/***/ }),

/***/ "./src/app/core/services/auth-services/oidc-signup-user.ts":
/*!*****************************************************************!*\
  !*** ./src/app/core/services/auth-services/oidc-signup-user.ts ***!
  \*****************************************************************/
/*! exports provided: OidcSignupUser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OidcSignupUser", function() { return OidcSignupUser; });
/**
 * OidcUser-like object derived from the sign-up token response.
 * Has essential features of OidcUser for the purposes of accessing the SP APIs
 * and identifying the ecommerce authenticated user (AuthUser)
 */
var OidcSignupUser = /** @class */ (function () {
    function OidcSignupUser(
    /** Sign-up token response from ECommerce server */
    tokenResponse) {
        this.tokenResponse = tokenResponse;
        /** Marker to identify this as an OidcUser created from sign-up, not IdentityServer */
        this.state = OidcSignupUser.signupUserState;
        this.access_token = tokenResponse.access_token;
        this.created = Date.now();
        this.expires_in = tokenResponse.expires_in;
        // Calculate expiration DateTime (in seconds)
        // Shorten by 30 seconds to be safe.
        this.expires_at = Math.floor(this.created / 1000) + (this.expires_in - 30);
        // Note: could have extracted the precise expiration from the access token but that would
        // require use of the JWT parse library which currently is only in mock services
        this.token_type = tokenResponse.token_type;
    }
    Object.defineProperty(OidcSignupUser.prototype, "expired", {
        /** Is token expired? */
        get: function () {
            return Date.now() > (this.expires_at * 1000);
        },
        enumerable: true,
        configurable: true
    });
    /** Marks this OidcUser as a faked SignUp Oidc user */
    OidcSignupUser.signupUserState = 'SIGNUP-OIDC-USER';
    return OidcSignupUser;
}());



/***/ }),

/***/ "./src/app/core/services/auth-services/oidc-token.service.ts":
/*!*******************************************************************!*\
  !*** ./src/app/core/services/auth-services/oidc-token.service.ts ***!
  \*******************************************************************/
/*! exports provided: OidcTokenService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OidcTokenService", function() { return OidcTokenService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_ajax__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/ajax */ "./node_modules/rxjs/_esm5/ajax/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");







var serviceName = 'OidcTokenService';
var OidcTokenService = /** @class */ (function () {
    function OidcTokenService(http) {
        this.http = http;
        /** Log a significant Auth cycle event. Set by the AuthService into which this token service is injected. */
        this.logEvent = function (event) { };
        /** Key of the accessToken in browser storage that was captured during sign-up */
        this.signupTokenKey = 'signupToken';
    }
    /**
     * Clear the access token info acquired during sign-up in browser storage.
     * @param [caller] caller's name
     */
    OidcTokenService.prototype.clearSignupToken = function (caller) {
        if (caller === void 0) { caller = serviceName; }
        var token;
        if (window.sessionStorage) {
            token = sessionStorage.getItem(this.signupTokenKey);
            if (token) {
                sessionStorage.removeItem(this.signupTokenKey);
                var msg = (caller || 'caller') + " cleared an existing signup token from browser storage";
                this.logEvent(msg);
            }
        }
        return token;
    };
    /**
     * Get the access token info acquired during sign-up from browser storage if it's available.
     * @param [caller] caller's name
     */
    OidcTokenService.prototype.getSignupToken = function (caller) {
        if (caller === void 0) { caller = serviceName; }
        var token;
        if (window.sessionStorage) {
            token = sessionStorage.getItem(this.signupTokenKey);
            var msg = (caller || 'caller') + " asked for signupToken from browser storage and will get " + (token ? token.substr(0, 50) : 'null') + "\"";
            this.logEvent(msg);
        }
        try {
            return JSON.parse(token);
        }
        catch (e) {
            return null;
        }
    };
    /**
     * Get the SP API AccessToken after successful signup,
     * with the username and password entered by the user during signup
     */
    OidcTokenService.prototype.getAccessTokenFromIdentityServer = function (user, password, caller) {
        var _this = this;
        if (caller === void 0) { caller = serviceName; }
        this.clearSignupToken();
        var options = {
            grant_type: 'password',
            scope: _environment__WEBPACK_IMPORTED_MODULE_4__["environment"].oidcScope,
            client_id: _environment__WEBPACK_IMPORTED_MODULE_4__["environment"].oidcClientId,
            username: user.username,
            password: password
        };
        // Strictly for mocking; the IdentityServer would error if we sent these
        if (_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].mockServices) {
            options.email = user.email;
            options.sub = user.oidcSub;
        }
        var result$;
        var url = _environment__WEBPACK_IMPORTED_MODULE_4__["environment"].oidcAuthRealm + "/connect/token";
        if (_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].mockServices) {
            // Cannot make HttpClient succeed.
            // Browser refuses to give the client the results even though it gets them
            // Missing a configuration step that isn't needed by RxJS.ajax or jQuery
            // But ... if mocking, we will use HttpClient because in-mem-web-api is setup to intercept :-)
            var body = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]({ fromObject: options }).toString();
            var headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]({ 'Content-Type': 'application/x-www-form-urlencoded' });
            result$ = this.http.post(url, body, { headers: headers });
        }
        else {
            result$ = postWithRxjsAjax(url, options);
        }
        return result$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (tokenResponse) { return _this.setSignupToken(tokenResponse, caller); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (error) { return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null); }) // OK if errors; user will just have to sign-in.
        );
    };
    /**
     * Set the access token info into browser storage .
     * @param token API access token info acquired during sign-up
     * @param [caller] caller's name
     */
    OidcTokenService.prototype.setSignupToken = function (token, caller) {
        if (caller === void 0) { caller = serviceName; }
        if (window.sessionStorage) {
            var toke = token ? JSON.stringify(token) : null;
            if (toke) {
                sessionStorage.setItem(this.signupTokenKey, toke);
                var msg = (caller || 'caller') + " set signupToken to " + (toke ? toke.substr(0, 50) : 'null') + "\"";
                this.logEvent(msg);
            }
            else {
                this.clearSignupToken(caller);
            }
        }
    };
    OidcTokenService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_5__["defineInjectable"]({ factory: function OidcTokenService_Factory() { return new OidcTokenService(_angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"])); }, token: OidcTokenService, providedIn: "root" });
    return OidcTokenService;
}());

function postWithRxjsAjax(url, tokenRequest) {
    return Object(rxjs_ajax__WEBPACK_IMPORTED_MODULE_1__["ajax"])({
        method: 'POST',
        crossDomain: true,
        url: url,
        body: tokenRequest,
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
    }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (r) { return r.response; }));
}
// <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js" type="text/javascript"></script>
// return postWithjQuery(url, options) // works, if you load jQuery just to get Ajax
function postWithjQuery(url, tokenRequest) {
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(window['$'].ajax({
        type: 'POST',
        crossDomain: true,
        url: url,
        data: tokenRequest,
        dataType: 'json',
        contentType: 'application/x-www-form-urlencoded'
    }));
}


/***/ }),

/***/ "./src/app/core/services/bank-routing-number.service.ts":
/*!**************************************************************!*\
  !*** ./src/app/core/services/bank-routing-number.service.ts ***!
  \**************************************************************/
/*! exports provided: BankRoutingNumberService, noopBankRoutingNumberService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BankRoutingNumberService", function() { return BankRoutingNumberService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noopBankRoutingNumberService", function() { return noopBankRoutingNumberService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");







var BankRoutingNumberService = /** @class */ (function () {
    function BankRoutingNumberService(http, logger) {
        this.http = http;
        this.logger = logger;
        this.cache = {};
    }
    /**
     * Get bank name from routingNumber, preferably from cache
     * @param errorOk true (default) if call to service allowed to fail.
     * @returns Cold, terminating observable of string ('' if invalid RN or service failed and that is OK).
     * Must subscribe but need not unsubscribe.
     */
    BankRoutingNumberService.prototype.getBankName = function (routingNumber, errorOk) {
        var _this = this;
        if (errorOk === void 0) { errorOk = true; }
        routingNumber = (routingNumber || '').trim();
        if (!routingNumber) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(''); // ignore when no routing number
        }
        else if (!/^\d{9}$/.test(routingNumber)) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(''); // ignore when no routing number is not 9 digits. Validation handles error
            // const emsg = 'Routing number must be a 9 digit number';
            // return errorOk ? of(emsg) : throwError(emsg);
        }
        var val = this.cache[routingNumber];
        if (val) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(val);
        }
        var url = 'https://www.routingnumbers.info/api/name.json?rn=' + routingNumber;
        return this.http.jsonp(url, 'callback').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (r) {
            if (r.code === 200) {
                return _this.cache[routingNumber] = r.name;
            }
            else if (r.code === 404) {
                return _this.cache[routingNumber] = '';
            }
            else {
                var emsg = "Routing number service error '" + JSON.stringify(r) + "'";
                _this.logger.error(emsg);
                throw new Error(emsg);
            }
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (error) {
            return errorOk ? Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])('') : Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(error.toString());
        }));
    };
    BankRoutingNumberService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function BankRoutingNumberService_Factory() { return new BankRoutingNumberService(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_3__["LoggerService"])); }, token: BankRoutingNumberService, providedIn: "root" });
    return BankRoutingNumberService;
}());

/** Instance of a "Do nothing" version for when real BankRoutingNumberService is unavailable */
var noopBankRoutingNumberService = {
    getBankName: function (rn) { return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])({ message: '', rn: rn, name: '', code: 0 }); }
};


/***/ }),

/***/ "./src/app/core/services/busy.service.ts":
/*!***********************************************!*\
  !*** ./src/app/core/services/busy.service.ts ***!
  \***********************************************/
/*! exports provided: BusyService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BusyService", function() { return BusyService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");



var BusyService = /** @class */ (function () {
    function BusyService() {
        this.busyCounter = 0;
        this.busySubject = new rxjs__WEBPACK_IMPORTED_MODULE_0__["BehaviorSubject"](false);
    }
    Object.defineProperty(BusyService.prototype, "message", {
        get: function () {
            return this._message;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BusyService.prototype, "isBusy", {
        get: function () {
            return this.busySubject.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BusyService.prototype, "isDelayBusy", {
        get: function () {
            return this.busySubject.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["switchMap"])(function (b) { return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["timer"])(1000).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["mapTo"])(b)); }));
        },
        enumerable: true,
        configurable: true
    });
    BusyService.prototype.busy = function (op) {
        var _this = this;
        this.increment();
        op.then(function (result) {
            _this.decrement();
        }).catch(function (reason) {
            _this.decrement();
            throw reason; // Rethrow error
        });
        return op;
    };
    /**
     * Indicate busy until the observable completes
     * @param obs Observable that the busy service should watch
     * @return piped continuation of the source observable.
     * Warning: busy and live forever if observable fails to terminate
     */
    BusyService.prototype.busy$ = function (message, obs) {
        var _this = this;
        this.increment(message);
        return obs.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["finalize"])(function () { return _this.decrement(); }));
    };
    /**
     * Set busy flag and clear it when all loading$ observables return false
     * @param message to show while busy
     * @param loadings$ Observables of multiple loading flags
     * @returns Observable that emits and terminates when all loading flags become false.
     * Warning: busy and live forever if any loading flag observable fails to emit false
     */
    BusyService.prototype.busyWhileTrue$ = function (message) {
        var _this = this;
        var loadings$ = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            loadings$[_i - 1] = arguments[_i];
        }
        this.increment(message);
        var mapped = loadings$.map(function (o) { return o.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (loading) { return !loading; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])()); });
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["forkJoin"])(mapped).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["finalize"])(function () { return _this.decrement(); }));
    };
    /**
     * Set busy flag and clear it when every service's loading$ observables return false
     * @param message to show while busy
     * @param services Services with observable `loading$` flags.
     * @returns Observable that emits and terminates when all loading flags become false.
     * Warning: busy and live forever if any loading flag observable fails to emit false
     */
    BusyService.prototype.busyLoading$ = function (message) {
        var services = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            services[_i - 1] = arguments[_i];
        }
        var loadings = services.map(function (s) { return s.loading$; });
        return this.busyWhileTrue$.apply(this, [message].concat(loadings));
    };
    /**
     * Set busy flag and clear it when all services.loading$ are false.
     * Delegates to `busyLoading$` and subscribes for you.
     */
    BusyService.prototype.busyLoading = function (message) {
        var services = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            services[_i - 1] = arguments[_i];
        }
        return this.busyLoading$.apply(this, [message].concat(services)).subscribe();
    };
    BusyService.prototype.increment = function (msg) {
        // only outermost message is shown
        if (msg && !this.message) {
            this._message = msg;
        }
        this.busyCounter++;
        this.busySubject.next(this.isBusyCore);
    };
    BusyService.prototype.decrement = function () {
        if (this.busyCounter > 0) {
            this.busyCounter--;
        }
        if (this.busyCounter <= 0) {
            this._message = '';
        }
        this.busySubject.next(this.isBusyCore);
    };
    Object.defineProperty(BusyService.prototype, "isBusyCore", {
        get: function () {
            return this.busyCounter > 0;
        },
        enumerable: true,
        configurable: true
    });
    BusyService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function BusyService_Factory() { return new BusyService(); }, token: BusyService, providedIn: "root" });
    return BusyService;
}());



/***/ }),

/***/ "./src/app/core/services/chat.service.ts":
/*!***********************************************!*\
  !*** ./src/app/core/services/chat.service.ts ***!
  \***********************************************/
/*! exports provided: ChatService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChatService", function() { return ChatService; });
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../store/session/session.service */ "./src/app/store/session/session.service.ts");









var chatConfig = _environment__WEBPACK_IMPORTED_MODULE_0__["environment"].chatConfig;
var chatInstalled = false;
var ChatService = /** @class */ (function () {
    function ChatService(logger, sessionService) {
        var _this = this;
        this.logger = logger;
        this.sessionService = sessionService;
        this.chatAgentSubject = new rxjs__WEBPACK_IMPORTED_MODULE_1__["ReplaySubject"](1);
        /** Terminating observable that emits the chat's "liveagent" when it becomes available and a regular user is signed in. */
        this.chatAgent$ = this.chatAgentSubject.asObservable();
        var chatAgentLoaded$ = this.loadChatLibrary();
        var currentUser$ = this.sessionService.currentUser$.pipe(
        // only consider a "real" user (not an Admin)
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (currentUser) { return currentUser != null; }));
        Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(currentUser$, chatAgentLoaded$)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["take"])(1))
            .subscribe(function (_a) {
            var firstUser = _a[0], agent = _a[1];
            if (agent) {
                agent.init(chatConfig.CHAT_URL, chatConfig.DEPLOYMENT_ID, chatConfig.ORGANIZATION_ID);
                var name_1 = Object(_core_utils__WEBPACK_IMPORTED_MODULE_3__["getFullName"])(firstUser);
                var email = firstUser.email;
                var msg = void 0;
                if (email) {
                    agent.addCustomDetail('Email', email, true);
                    msg = "Chat enabled for user \"" + name_1 + "\" with email \"" + email + "\".";
                }
                else {
                    msg = "Chat enabled for user \"" + name_1 + "\" who does not have email.";
                }
                _this.chatAgentSubject.next(agent);
                if (chatConfig.TRACING) {
                    _this.logger.log(msg);
                }
            }
            else {
                _this.logger.error('Chat liveagent did not load properly. Look for error.');
            }
            _this.chatAgentSubject.complete(); // release all subscribers
        });
    }
    /**
     * Load the Salesforce Liveagent  (via dynamic script)
     */
    ChatService.prototype.loadChatLibrary = function () {
        var _this = this;
        // Gets the URL from environment
        var liveagentScriptUrl = chatConfig.LIVEAGENT_SCRIPT_URL;
        // no library if no key
        if (!liveagentScriptUrl) {
            return rxjs__WEBPACK_IMPORTED_MODULE_1__["EMPTY"];
        }
        if (!chatInstalled) {
            chatInstalled = true; // only try to install it once
            // load after the page's first script element
            var ref = window.document.getElementsByTagName('script')[0];
            var script = window.document.createElement('script');
            script.src = liveagentScriptUrl;
            ref.parentNode.insertBefore(script, ref);
        }
        // RxJS coolness: iterate until liveagent arrives or 15 x 1 second passes
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["interval"])(1000).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["skipWhile"])(function (tick) { return window.liveagent == null && tick < 15; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_) {
            var agent = window.liveagent;
            if (agent) {
                if (chatConfig.TRACING) {
                    _this.logger.log('Chat script loaded');
                }
            }
            else {
                _this.logger.error('Chat load timed out; look in console for script load error.');
            }
            return agent;
        }));
    };
    ChatService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_6__["defineInjectable"]({ factory: function ChatService_Factory() { return new ChatService(_angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_4__["LoggerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_store_session_session_service__WEBPACK_IMPORTED_MODULE_7__["SessionService"])); }, token: ChatService, providedIn: "root" });
    return ChatService;
}());



/***/ }),

/***/ "./src/app/core/services/ein-lookup.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/core/services/ein-lookup.service.ts ***!
  \*****************************************************/
/*! exports provided: EinLookupService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EinLookupService", function() { return EinLookupService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");




/*
 * Validate EIN
 */
var EinLookupService = /** @class */ (function () {
    function EinLookupService(http) {
        this.http = http;
    }
    /** Validate that the EIN belongs to the company with call to SP API*/
    EinLookupService.prototype.validateTinName = function (ein, companyName) {
        var url = _environment__WEBPACK_IMPORTED_MODULE_1__["environment"].spApiRoot + '/tincheck/tinname';
        var body = {
            tin: ein,
            name: companyName
        };
        return this.http.get(url, { params: body });
    };
    EinLookupService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function EinLookupService_Factory() { return new EinLookupService(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"])); }, token: EinLookupService, providedIn: "root" });
    return EinLookupService;
}());



/***/ }),

/***/ "./src/app/core/services/esign.service.ts":
/*!************************************************!*\
  !*** ./src/app/core/services/esign.service.ts ***!
  \************************************************/
/*! exports provided: EsignService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EsignService", function() { return EsignService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _app_core_services_busy_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/core/services/busy.service */ "./src/app/core/services/busy.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");







var EsignService = /** @class */ (function () {
    function EsignService(http, busyService) {
        this.http = http;
        this.busyService = busyService;
    }
    /**
     * Tell DocuSign to create an Envelope and optionally send an email to signer and spouse.
     * @returns Cold, terminating observable with envelope and DocuSign's status (e.g., 'sent' if the email was sent).
     * You must subscribe but do not have to unsubscribe.
     */
    EsignService.prototype.postEnvelope = function (envelopeId, signers) {
        var eurl = _environment__WEBPACK_IMPORTED_MODULE_2__["environment"].apiRoot + ("/signing/esignsend/" + envelopeId);
        var params = { signers: signers };
        return this.busyService.busy$('Building Documents ...', this.http.post(eurl, params));
    };
    /**
     * Get a temporary Esign URL which enables short-term access to an ESign envelope
     * @return Cold terminating observable emitting the URL
     * You must subscribe but do not have to unsubscribe.
     */
    EsignService.prototype.getEnvelopeUrl = function (envelopeId) {
        var url = _environment__WEBPACK_IMPORTED_MODULE_2__["environment"].apiRoot + ("/signing/esigngeturl/" + envelopeId);
        var options = { params: {
                apiRoot: _environment__WEBPACK_IMPORTED_MODULE_2__["environment"].apiRoot,
                appUrl: location.origin + '/assets/esign.html'
            } };
        return this.busyService.busy$('Opening DocuSign ...', this.http.get(url, options).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (r) { return r.url; })));
    };
    /**
     * Mark a company's envelopes as "signed and complete"
     * @param companyId
     * @returns Cold terminating boolean observable that emits true if operation was successful.
     * You must subscribe but do not have to unsubscribe.
     */
    EsignService.prototype.markEnvelopesSigned = function (companyId) {
        var url = _environment__WEBPACK_IMPORTED_MODULE_2__["environment"].apiRoot + "/envelope/complete";
        var body = { companyId: companyId };
        return this.busyService.busy$('Updating document envelopes ...', this.http.post(url, body));
    };
    EsignService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function EsignService_Factory() { return new EsignService(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_app_core_services_busy_service__WEBPACK_IMPORTED_MODULE_3__["BusyService"])); }, token: EsignService, providedIn: "root" });
    return EsignService;
}());



/***/ }),

/***/ "./src/app/core/services/holidays.service.ts":
/*!***************************************************!*\
  !*** ./src/app/core/services/holidays.service.ts ***!
  \***************************************************/
/*! exports provided: HolidaysService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HolidaysService", function() { return HolidaysService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");








/**
 * Gets list of Holidays for check date validation as string[]
 */
var HolidaysService = /** @class */ (function () {
    function HolidaysService(http, logger) {
        this.http = http;
        this.logger = logger;
        this.cachedHolidays = null;
    }
    /**
     * Get bank holidays
     * @returns Terminating observable of cached bank holidays. Do not have to unsubscribe.
     */
    HolidaysService.prototype.getHolidays = function () {
        var _this = this;
        if (this.cachedHolidays != null) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(this.cachedHolidays);
        }
        var url = _environment__WEBPACK_IMPORTED_MODULE_3__["environment"].spApiRoot + '/taxapi/taxes/holidays';
        return this.http.get(url).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (e) {
            var holidays = e
                ? e.map(function (d) { return new Date(d.substr(0, 19)); }).filter(function (d) { return !isNaN(d.getTime()); })
                : [];
            return _this.cachedHolidays = holidays;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (error) {
            _this.logger.error('Failed getting holidays', error);
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])([]);
        }));
    };
    HolidaysService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_5__["defineInjectable"]({ factory: function HolidaysService_Factory() { return new HolidaysService(_angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_4__["LoggerService"])); }, token: HolidaysService, providedIn: "root" });
    return HolidaysService;
}());



/***/ }),

/***/ "./src/app/core/services/id-generator.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/core/services/id-generator.service.ts ***!
  \*******************************************************/
/*! exports provided: IdGeneratorService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IdGeneratorService", function() { return IdGeneratorService; });
/* harmony import */ var _core_guid_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @core/guid-fns */ "./src/app/core/guid-fns.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


/*
 * Client-side id (key) generator
 */
var IdGeneratorService = /** @class */ (function () {
    function IdGeneratorService() {
    }
    /** Generate nextId for new entities with number keys */
    IdGeneratorService.prototype.generateId = function () {
        return Object(_core_guid_fns__WEBPACK_IMPORTED_MODULE_0__["getGuidComb"])();
    };
    IdGeneratorService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_1__["defineInjectable"]({ factory: function IdGeneratorService_Factory() { return new IdGeneratorService(); }, token: IdGeneratorService, providedIn: "root" });
    return IdGeneratorService;
}());



/***/ }),

/***/ "./src/app/core/services/iframe.service.ts":
/*!*************************************************!*\
  !*** ./src/app/core/services/iframe.service.ts ***!
  \*************************************************/
/*! exports provided: IframeService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IframeService", function() { return IframeService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

/*
 * Controls the top-level "fullframe" iframe that takes over the screen for DocuSign etc.
 */
var IframeService = /** @class */ (function () {
    function IframeService() {
        var _this = this;
        this.receiveMessage = this.receiveMessage.bind(this);
        // wait for message from the iframe
        window.addEventListener('message', function (event) {
            _this.receiveMessage(event);
        });
    }
    /**
     * Show the iframe, and remember the callback for receiveMessage
     * @param url source url for the iframe
     * @param closeCallback called when iframe is hidden; passed message from iframe's postMessage
     */
    IframeService.prototype.show = function (url, closeCallback) {
        window.scrollTo(0, 0);
        // this.lastWindow = window.open(url);
        var iframe = document.getElementById('fullframe');
        iframe.style.display = 'block';
        iframe.src = url;
        this.lastWindow = iframe.contentWindow;
        document.body.style.overflow = 'hidden'; // prevents double scrollbars
        this.callback = closeCallback;
        var routercontainer = document.getElementById('routercontainer');
        routercontainer.style.display = 'none';
    };
    IframeService.prototype.hide = function () {
        var iframe = document.getElementById('fullframe');
        iframe.style.display = 'none';
        iframe.src = '';
        document.body.style.overflow = 'auto';
    };
    /**
     * Hide the iframe upon receiving a message from its window
     * @param event from postMessage in the iframe, but also from ngrx etc.
     */
    IframeService.prototype.receiveMessage = function (event) {
        // 'event.data.type' filters out ngrx events
        // if (event.origin !== window.location.origin || event.data.type) {
        if (event.data.type) {
            return false;
        }
        var iframe = document.getElementById('fullframe');
        if (event.source !== this.lastWindow) {
            return false;
        }
        var routercontainer = document.getElementById('routercontainer');
        routercontainer.style.display = 'block';
        iframe.style.display = 'none';
        iframe.src = '';
        window.iframeEvent = event.data;
        document.body.style.overflow = 'auto';
        if (this.callback) {
            this.callback(event.data);
            this.callback = null;
        }
    };
    IframeService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"]({ factory: function IframeService_Factory() { return new IframeService(); }, token: IframeService, providedIn: "root" });
    return IframeService;
}());



/***/ }),

/***/ "./src/app/core/services/index.ts":
/*!****************************************!*\
  !*** ./src/app/core/services/index.ts ***!
  \****************************************/
/*! exports provided: BusyService, ChatService, HolidaysService, LoggerService, BankRoutingNumberService, noopBankRoutingNumberService, EsignService, EinLookupService, IdGeneratorService, AddressFinderService, BrowserGeolocationService, GeolocationService, TinCheckService, einLookupInterceptor, isBadFeinNumber, isGoodFeinNumber, TitleService, ToastService, GooglePlacesService, nullAutocomplete, nullAutocompleteService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bank_routing_number_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bank-routing-number.service */ "./src/app/core/services/bank-routing-number.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BankRoutingNumberService", function() { return _bank_routing_number_service__WEBPACK_IMPORTED_MODULE_0__["BankRoutingNumberService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "noopBankRoutingNumberService", function() { return _bank_routing_number_service__WEBPACK_IMPORTED_MODULE_0__["noopBankRoutingNumberService"]; });

/* harmony import */ var _busy_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./busy.service */ "./src/app/core/services/busy.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BusyService", function() { return _busy_service__WEBPACK_IMPORTED_MODULE_1__["BusyService"]; });

/* harmony import */ var _chat_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chat.service */ "./src/app/core/services/chat.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChatService", function() { return _chat_service__WEBPACK_IMPORTED_MODULE_2__["ChatService"]; });

/* harmony import */ var _esign_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./esign.service */ "./src/app/core/services/esign.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EsignService", function() { return _esign_service__WEBPACK_IMPORTED_MODULE_3__["EsignService"]; });

/* harmony import */ var _ein_lookup_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ein-lookup.service */ "./src/app/core/services/ein-lookup.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EinLookupService", function() { return _ein_lookup_service__WEBPACK_IMPORTED_MODULE_4__["EinLookupService"]; });

/* harmony import */ var _id_generator_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./id-generator.service */ "./src/app/core/services/id-generator.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IdGeneratorService", function() { return _id_generator_service__WEBPACK_IMPORTED_MODULE_5__["IdGeneratorService"]; });

/* harmony import */ var _holidays_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./holidays.service */ "./src/app/core/services/holidays.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HolidaysService", function() { return _holidays_service__WEBPACK_IMPORTED_MODULE_6__["HolidaysService"]; });

/* harmony import */ var _location_services__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./location-services */ "./src/app/core/services/location-services/index.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AddressFinderService", function() { return _location_services__WEBPACK_IMPORTED_MODULE_7__["AddressFinderService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BrowserGeolocationService", function() { return _location_services__WEBPACK_IMPORTED_MODULE_7__["BrowserGeolocationService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GeolocationService", function() { return _location_services__WEBPACK_IMPORTED_MODULE_7__["GeolocationService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GooglePlacesService", function() { return _location_services__WEBPACK_IMPORTED_MODULE_7__["GooglePlacesService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nullAutocomplete", function() { return _location_services__WEBPACK_IMPORTED_MODULE_7__["nullAutocomplete"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nullAutocompleteService", function() { return _location_services__WEBPACK_IMPORTED_MODULE_7__["nullAutocompleteService"]; });

/* harmony import */ var _logger_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LoggerService", function() { return _logger_service__WEBPACK_IMPORTED_MODULE_8__["LoggerService"]; });

/* harmony import */ var _tin_check_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tin-check.service */ "./src/app/core/services/tin-check.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TinCheckService", function() { return _tin_check_service__WEBPACK_IMPORTED_MODULE_9__["TinCheckService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "einLookupInterceptor", function() { return _tin_check_service__WEBPACK_IMPORTED_MODULE_9__["einLookupInterceptor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBadFeinNumber", function() { return _tin_check_service__WEBPACK_IMPORTED_MODULE_9__["isBadFeinNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isGoodFeinNumber", function() { return _tin_check_service__WEBPACK_IMPORTED_MODULE_9__["isGoodFeinNumber"]; });

/* harmony import */ var _title_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./title.service */ "./src/app/core/services/title.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TitleService", function() { return _title_service__WEBPACK_IMPORTED_MODULE_10__["TitleService"]; });

/* harmony import */ var _toast_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./toast.service */ "./src/app/core/services/toast.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToastService", function() { return _toast_service__WEBPACK_IMPORTED_MODULE_11__["ToastService"]; });

// Do NOT include auth-services because that causes circular references









// export * from './tax-services'; // creates circular references





/***/ }),

/***/ "./src/app/core/services/location-services/address-finder.service.ts":
/*!***************************************************************************!*\
  !*** ./src/app/core/services/location-services/address-finder.service.ts ***!
  \***************************************************************************/
/*! exports provided: AddressFinderService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddressFinderService", function() { return AddressFinderService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");

/**
 * Look up addresses using a geo API
 * Noop version and the service's DI token
 * See GooglePlacesService.
 */
/**
 * Find user's current geo location (Position)
 * Noop version and the service's DI token
 */
var AddressFinderService = /** @class */ (function () {
    function AddressFinderService() {
    }
    /**
     * Get address that user picked from address finder service.
     * It is rarely as simple as returning information that the finder service has cached locally.
     * The picked item is typically just a string and the service (e.g, Google Places)
     * makes a call back to its server to retrieve address data.
     * That call takes an unpredictable amount of time and can fail.
     * @param input {HTMLInputElement} input element where user enters address.
     * The FinderService listens for changes to that element and builds its picklist
     * based on the user's keystrokes.
     */
    AddressFinderService.prototype.getAutocompleteAddress = function (inputEl) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["empty"])();
    };
    /** Load the library that supports this service */
    AddressFinderService.prototype.loadLibrary = function () { };
    /**
     * Disable the browser's built-in autocomplete for the given element.
     * @param inputEl {HTMLInputElement} input element where user enters address.
     */
    AddressFinderService.prototype.disableBrowserAutocomplete = function (inputEl) { };
    return AddressFinderService;
}());



/***/ }),

/***/ "./src/app/core/services/location-services/browser-geolocation.service.ts":
/*!********************************************************************************!*\
  !*** ./src/app/core/services/location-services/browser-geolocation.service.ts ***!
  \********************************************************************************/
/*! exports provided: BrowserGeolocationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BrowserGeolocationService", function() { return BrowserGeolocationService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");

/**
 * Find user's current geo location (Position) using browser's geoLocation feature
 */
var BrowserGeolocationService = /** @class */ (function () {
    function BrowserGeolocationService() {
        this.currentPositionSubject = new rxjs__WEBPACK_IMPORTED_MODULE_0__["BehaviorSubject"](null);
        this.currentPosition$ = this.currentPositionSubject.asObservable();
    }
    BrowserGeolocationService.prototype.update = function () {
        var _this = this;
        if (navigator.geolocation) {
            try {
                navigator.geolocation.getCurrentPosition(function (position) {
                    _this.currentPositionSubject.next(position);
                });
            }
            catch (error) {
                // do nothing
            }
        }
    };
    return BrowserGeolocationService;
}());



/***/ }),

/***/ "./src/app/core/services/location-services/geolocation.service.ts":
/*!************************************************************************!*\
  !*** ./src/app/core/services/location-services/geolocation.service.ts ***!
  \************************************************************************/
/*! exports provided: GeolocationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeolocationService", function() { return GeolocationService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");

/**
 * Find user's current geo location (Position)
 * Noop version and the service's DI token
 */
var GeolocationService = /** @class */ (function () {
    function GeolocationService() {
        /** The users current geolocation (Position) */
        this.currentPosition$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(null);
    }
    /** Update the currentPosition */
    GeolocationService.prototype.update = function () { };
    return GeolocationService;
}());



/***/ }),

/***/ "./src/app/core/services/location-services/google-places.service.ts":
/*!**************************************************************************!*\
  !*** ./src/app/core/services/location-services/google-places.service.ts ***!
  \**************************************************************************/
/*! exports provided: GooglePlacesService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GooglePlacesService", function() { return GooglePlacesService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _geolocation_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./geolocation.service */ "./src/app/core/services/location-services/geolocation.service.ts");
/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interfaces */ "./src/app/core/services/location-services/interfaces.ts");
// This example displays an address form, using the autocomplete feature
// of the Google Places API to help users fill in the information.
// https://developers.google.com/maps/documentation/javascript/places-autocomplete#place_autocomplete_service
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};






var emptyAddress = {
    street1: '',
    street2: '',
    city: '',
    state: '',
    zip: '',
    country: 'US'
};
// Relies on Google Places AutocompleteService
// https://developers.google.com/maps/documentation/javascript/reference/3/#AutocompleteService
// Uses the getPlacePredictions() method (not the QueryPrediction with its search terms)
// Install google maps asynchronously as soon as possible
var googleMapsInstalled = false;
/**
 * Google Places Service
 * Look up addresses using the Google Places Web API (AutoCompleteService)
 * Presupposes that Google Places library has been loaded from a script on the host web page.
 */
var GooglePlacesService = /** @class */ (function () {
    function GooglePlacesService(logger, window, geolocationService) {
        this.logger = logger;
        this.window = window;
        this.geolocationService = geolocationService;
        this.disableBrowserAutocomplete = this.disableBrowserAutocomplete.bind(this);
        this.isChrome = !!window.chrome && !!window.chrome.app && !!window.chrome.csi;
        if (!geolocationService) {
            // Nullo version for when real GeolocationService is unavailable.
            this.geolocationService = new _geolocation_service__WEBPACK_IMPORTED_MODULE_4__["GeolocationService"]();
        }
    }
    Object.defineProperty(GooglePlacesService.prototype, "autocompleteService", {
        get: function () {
            return this._autocompleteService ? this._autocompleteService : this.setAutocompleteService();
        },
        enumerable: true,
        configurable: true
    });
    GooglePlacesService.prototype.getGoogleMapsService = function () {
        var google = this.window.google;
        return google && google.maps;
    };
    GooglePlacesService.prototype.getAutocompleteAddress = function (inputEl) {
        var _this = this;
        var ac = this.getAutocompletePlace(inputEl);
        if (!ac) {
            return null;
        }
        if (this.isChrome) {
            // wait for response, then disable autocomplete.  Hack to wait until after Places has set `autocomplete="off"` on inputEl.
            this.autocompleteService.getPlacePredictions({ input: 'home', componentRestrictions: { country: 'us' }, types: ['geocode'] }, function () {
                _this.disableBrowserAutocomplete(inputEl);
            });
        }
        return ac.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(toAddress));
    };
    GooglePlacesService.prototype.getAutocompletePlace = function (inputEl) {
        var _this = this;
        var maps = this.getGoogleMapsService();
        if (!maps) {
            // not available yet
            return null;
        }
        var placeChanges$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (observer) {
            var autocomplete = new maps.places.Autocomplete(inputEl, {
                componentRestrictions: { country: 'us' },
                types: ['geocode']
            });
            autocomplete.addListener('place_changed', function () {
                var place = autocomplete.getPlace();
                observer.next(place);
            });
            var geoSubscription = _this.geolocationService.currentPosition$.subscribe(function (position) {
                if (!position) {
                    return;
                }
                try {
                    var center = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var radius = position.coords.accuracy;
                    var circle = new maps.Circle({ center: center, radius: radius });
                    autocomplete.setBounds(circle.getBounds());
                }
                catch (error) {
                    // do nothing
                }
            });
            // Teardown on unsubscribe
            return function () {
                geoSubscription.unsubscribe();
                // https://developers.google.com/maps/documentation/javascript/reference/3/?csw=1#MapsEventListener
                maps.event.clearInstanceListeners(autocomplete);
                autocomplete = null;
            };
        });
        return placeChanges$;
    };
    GooglePlacesService.prototype.setAutocompleteService = function () {
        try {
            var maps = this.getGoogleMapsService();
            if (!maps) {
                // not available yet; return the nullo and try again next time
                return _interfaces__WEBPACK_IMPORTED_MODULE_5__["nullAutocompleteService"];
            }
            this._autocompleteService = new maps.places.AutocompleteService();
            this.okStatus = maps.places.PlacesServiceStatus.OK;
        }
        catch (error) {
            // failed to create AutoComplete; use the nullo from now on.
            this.logger.error('GooglePlacesService autocompleteService setup error: ', error);
            this._autocompleteService = _interfaces__WEBPACK_IMPORTED_MODULE_5__["nullAutocompleteService"];
        }
        return this._autocompleteService;
    };
    GooglePlacesService.prototype.getAutocompletePredictions = function (input) {
        var _this = this;
        return new rxjs__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (observer) {
            if (!input) {
                resolve(null);
                return;
            }
            var callback = function (predictions, status) {
                if (status !== _this.okStatus) {
                    _this.logger.error('GooglePlacesService status error: ' + status);
                    predictions = null;
                }
                resolve(predictions);
            };
            var req = {
                input: input,
                componentRestrictions: { country: 'us' },
                types: ['geocode']
            };
            _this.geolocationService.currentPosition$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])()).subscribe(function (position) {
                if (position) {
                    req.location = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    req.radius = position.coords.accuracy;
                }
                _this.autocompleteService.getPlacePredictions(req, callback);
            });
            function resolve(predictions) {
                observer.next(predictions || null);
                observer.complete();
            }
        });
    };
    /**
     * Load the Google Maps Service (via dynamic script)
     * Instantiate and call this method early (as in the module that provides this service)
     * so that google maps installs before you need it.
     */
    GooglePlacesService.prototype.loadLibrary = function () {
        var Maps = this.getGoogleMapsService();
        if (Maps || googleMapsInstalled) {
            return; // already installed
        }
        googleMapsInstalled = true; // only try to install it once
        // Gets the API url from the environment (`googlePlacesApiUrl`).
        // E.g. https://maps.googleapis.com/maps/api/js?key=AIzaSyBl3MM25oNKAgODg9RzYYDqkiYNPQRNqY4&libraries=places
        var apiUrl = _environment__WEBPACK_IMPORTED_MODULE_2__["environment"].googlePlacesApiUrl;
        // no library if no url
        if (!apiUrl) {
            return;
        }
        // load after the page's first script element
        var ref = this.window.document.getElementsByTagName('script')[0];
        var script = this.window.document.createElement('script');
        script.src = apiUrl;
        ref.parentNode.insertBefore(script, ref);
    };
    /**
     * Disable the browser's built-in autocomplete because it conflicts with Google Places
     * @param inputEl
     */
    GooglePlacesService.prototype.disableBrowserAutocomplete = function (inputEl) {
        // use "inactive" (or other random string, not "off") to disable autocomplete in Chrome browser
        var off = this.isChrome ? 'inactive' : 'off';
        inputEl.setAttribute('autocomplete', off);
    };
    return GooglePlacesService;
}());

/**
 * Map Autocomplete {PlaceResult} to an application {Address}
 */
function toAddress(_a) {
    var address_components = _a.address_components;
    if (!address_components) {
        return emptyAddress;
    }
    return address_components.reduce(function (parts, part) {
        switch (part.types[0]) {
            case 'street_number': {
                parts.street1 = (part.long_name + ' ' + parts.street1).trim();
                break;
            }
            case 'route': {
                parts.street1 = (parts.street1 + ' ' + part.long_name).trim();
                break;
            }
            case 'premise': {
                parts.street2 = part.long_name;
                break;
            }
            case 'locality': {
                parts.city = part.long_name;
                break;
            }
            case 'administrative_area_level_1': {
                parts.state = part.short_name;
                break;
            }
            case 'postal_code': {
                parts.zip = part.long_name + (parts.zip || '').trim();
                break;
            }
            case 'postal_code_suffix': {
                parts.zip = ((parts.zip || '') + '-' + part.long_name).trim();
                break;
            }
        }
        return parts;
    }, __assign({}, emptyAddress, { street1: '' }));
}


/***/ }),

/***/ "./src/app/core/services/location-services/index.ts":
/*!**********************************************************!*\
  !*** ./src/app/core/services/location-services/index.ts ***!
  \**********************************************************/
/*! exports provided: AddressFinderService, BrowserGeolocationService, GeolocationService, GooglePlacesService, nullAutocomplete, nullAutocompleteService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _address_finder_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address-finder.service */ "./src/app/core/services/location-services/address-finder.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AddressFinderService", function() { return _address_finder_service__WEBPACK_IMPORTED_MODULE_0__["AddressFinderService"]; });

/* harmony import */ var _browser_geolocation_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser-geolocation.service */ "./src/app/core/services/location-services/browser-geolocation.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BrowserGeolocationService", function() { return _browser_geolocation_service__WEBPACK_IMPORTED_MODULE_1__["BrowserGeolocationService"]; });

/* harmony import */ var _geolocation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./geolocation.service */ "./src/app/core/services/location-services/geolocation.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GeolocationService", function() { return _geolocation_service__WEBPACK_IMPORTED_MODULE_2__["GeolocationService"]; });

/* harmony import */ var _google_places_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./google-places.service */ "./src/app/core/services/location-services/google-places.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GooglePlacesService", function() { return _google_places_service__WEBPACK_IMPORTED_MODULE_3__["GooglePlacesService"]; });

/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./interfaces */ "./src/app/core/services/location-services/interfaces.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nullAutocomplete", function() { return _interfaces__WEBPACK_IMPORTED_MODULE_4__["nullAutocomplete"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nullAutocompleteService", function() { return _interfaces__WEBPACK_IMPORTED_MODULE_4__["nullAutocompleteService"]; });








/***/ }),

/***/ "./src/app/core/services/location-services/interfaces.ts":
/*!***************************************************************!*\
  !*** ./src/app/core/services/location-services/interfaces.ts ***!
  \***************************************************************/
/*! exports provided: nullAutocomplete, nullAutocompleteService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nullAutocomplete", function() { return nullAutocomplete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nullAutocompleteService", function() { return nullAutocompleteService; });
/**
 * Location services interfaces and types
 * Drawn from Google Maps API
 * https://developers.google.com/maps/documentation/javascript/reference/3
 */
// https://developers.google.com/maps/documentation/javascript/reference/3/#Autocomplete
/** Nullo version for when Autocomplete is unavailable. */
var nullAutocomplete = {
    getPlace: function () { return null; },
    setBounds: function (bounds) { },
    setOptions: function (options) { },
    addListener: function (eventName, callback) { }
};
// https://developers.google.com/maps/documentation/javascript/reference/3/#AutocompleteService
/** Nullo version for when AutocompleteService is unavailable. */
var nullAutocompleteService = {
    getPlacePredictions: function (args, callBack) {
        callBack([], null);
    }
};


/***/ }),

/***/ "./src/app/core/services/logger.service.ts":
/*!*************************************************!*\
  !*** ./src/app/core/services/logger.service.ts ***!
  \*************************************************/
/*! exports provided: LoggerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoggerService", function() { return LoggerService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _app_core_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/core/utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");



var LoggerService = /** @class */ (function () {
    function LoggerService() {
        this.entriesSubject$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
        this.entries$ = this.entriesSubject$.asObservable();
    }
    LoggerService.prototype.log = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        var args = [message].concat(optionalParams);
        console.log.apply(console, args);
        this.nextEntry('log', args);
    };
    LoggerService.prototype.debug = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        var args = [message].concat(optionalParams);
        console.debug ? console.debug.apply(console, args) : console.log.apply(console, args);
        this.nextEntry('debug', args);
    };
    LoggerService.prototype.error = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        var args = [message].concat(optionalParams);
        console.error.apply(console, args);
        this.nextEntry('error', args);
    };
    LoggerService.prototype.warn = function (message) {
        var optionalParams = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            optionalParams[_i - 1] = arguments[_i];
        }
        var args = [message].concat(optionalParams);
        console.warn.apply(console, args);
        this.nextEntry('warn', args);
    };
    LoggerService.prototype.nextEntry = function (type, args) {
        this.entriesSubject$.next({
            type: type,
            entry: Object(_app_core_utils__WEBPACK_IMPORTED_MODULE_1__["stringify"])(args).join('\n')
        });
    };
    LoggerService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function LoggerService_Factory() { return new LoggerService(); }, token: LoggerService, providedIn: "root" });
    return LoggerService;
}());



/***/ }),

/***/ "./src/app/core/services/tax-services/index.ts":
/*!*****************************************************!*\
  !*** ./src/app/core/services/tax-services/index.ts ***!
  \*****************************************************/
/*! exports provided: TaxBehaviorService, TaxCollectorService, TaxService, TaxSaveHelperService, TaxAddressService, TaxAddressValidationService, TaxRate, buildTaxBehavior, EMPTY_TAXES, TaxCatalogKey, TaxSelectorService, isCompanyTaxValid, isEmployeeTaxValid, isCompanyTaxModified, isEmployeeTaxModified, isValidEin, isValidRate, isValidFilingStatus, isValidExemptReason, isValidWithholdAllowance, isValidExtraWithhold */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tax_address_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tax-address.service */ "./src/app/core/services/tax-services/tax-address.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxAddressService", function() { return _tax_address_service__WEBPACK_IMPORTED_MODULE_0__["TaxAddressService"]; });

/* harmony import */ var _tax_address_validation_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tax-address-validation.service */ "./src/app/core/services/tax-services/tax-address-validation.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxAddressValidationService", function() { return _tax_address_validation_service__WEBPACK_IMPORTED_MODULE_1__["TaxAddressValidationService"]; });

/* harmony import */ var _tax_behavior_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tax-behavior.service */ "./src/app/core/services/tax-services/tax-behavior.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxBehaviorService", function() { return _tax_behavior_service__WEBPACK_IMPORTED_MODULE_2__["TaxBehaviorService"]; });

/* harmony import */ var _tax_collector_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tax-collector.service */ "./src/app/core/services/tax-services/tax-collector.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxCollectorService", function() { return _tax_collector_service__WEBPACK_IMPORTED_MODULE_3__["TaxCollectorService"]; });

/* harmony import */ var _tax_models__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tax-models */ "./src/app/core/services/tax-services/tax-models.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxRate", function() { return _tax_models__WEBPACK_IMPORTED_MODULE_4__["TaxRate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "buildTaxBehavior", function() { return _tax_models__WEBPACK_IMPORTED_MODULE_4__["buildTaxBehavior"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EMPTY_TAXES", function() { return _tax_models__WEBPACK_IMPORTED_MODULE_4__["EMPTY_TAXES"]; });

/* harmony import */ var _tax_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tax.service */ "./src/app/core/services/tax-services/tax.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxService", function() { return _tax_service__WEBPACK_IMPORTED_MODULE_5__["TaxService"]; });

/* harmony import */ var _tax_save_helper_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tax-save-helper.service */ "./src/app/core/services/tax-services/tax-save-helper.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxSaveHelperService", function() { return _tax_save_helper_service__WEBPACK_IMPORTED_MODULE_6__["TaxSaveHelperService"]; });

/* harmony import */ var _tax_selector_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tax-selector.service */ "./src/app/core/services/tax-services/tax-selector.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxCatalogKey", function() { return _tax_selector_service__WEBPACK_IMPORTED_MODULE_7__["TaxCatalogKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxSelectorService", function() { return _tax_selector_service__WEBPACK_IMPORTED_MODULE_7__["TaxSelectorService"]; });

/* harmony import */ var _tax_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tax-utils */ "./src/app/core/services/tax-services/tax-utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isCompanyTaxValid", function() { return _tax_utils__WEBPACK_IMPORTED_MODULE_8__["isCompanyTaxValid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEmployeeTaxValid", function() { return _tax_utils__WEBPACK_IMPORTED_MODULE_8__["isEmployeeTaxValid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isCompanyTaxModified", function() { return _tax_utils__WEBPACK_IMPORTED_MODULE_8__["isCompanyTaxModified"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEmployeeTaxModified", function() { return _tax_utils__WEBPACK_IMPORTED_MODULE_8__["isEmployeeTaxModified"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isValidEin", function() { return _tax_utils__WEBPACK_IMPORTED_MODULE_8__["isValidEin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isValidRate", function() { return _tax_utils__WEBPACK_IMPORTED_MODULE_8__["isValidRate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isValidFilingStatus", function() { return _tax_utils__WEBPACK_IMPORTED_MODULE_8__["isValidFilingStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isValidExemptReason", function() { return _tax_utils__WEBPACK_IMPORTED_MODULE_8__["isValidExemptReason"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isValidWithholdAllowance", function() { return _tax_utils__WEBPACK_IMPORTED_MODULE_8__["isValidWithholdAllowance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isValidExtraWithhold", function() { return _tax_utils__WEBPACK_IMPORTED_MODULE_8__["isValidExtraWithhold"]; });












/***/ }),

/***/ "./src/app/core/services/tax-services/tax-address-validation.service.ts":
/*!******************************************************************************!*\
  !*** ./src/app/core/services/tax-services/tax-address-validation.service.ts ***!
  \******************************************************************************/
/*! exports provided: TaxAddressValidationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxAddressValidationService", function() { return TaxAddressValidationService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _utils_address_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @utils/address-utils */ "./src/app/core/utils/address-utils.ts");
/* harmony import */ var _tax_address_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tax-address.service */ "./src/app/core/services/tax-services/tax-address.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");






/**
 * Gets the raw data from the Tax service.
 */
var TaxAddressValidationService = /** @class */ (function () {
    function TaxAddressValidationService(addressProviderService) {
        this.addressProviderService = addressProviderService;
        this.cache = {};
    }
    TaxAddressValidationService.prototype.validateAddress = function (address) {
        var _this = this;
        var key = this.getKey(address);
        var result = this.cache[key];
        if (result) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(result);
        }
        return this.addressProviderService.validateAddress(address).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["tap"])(function (addr) { return (_this.cache[key] = addr); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["catchError"])(function (error) { return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])({ isValid: false, suggestedAddresses: [] }); }));
    };
    TaxAddressValidationService.prototype.hasSuggestion = function (address) {
        var key = this.getKey(address);
        var result = this.cache[key];
        return (result && !result.isValid && result.suggestedAddresses && result.suggestedAddresses.length > 0);
    };
    TaxAddressValidationService.prototype.getKey = function (address) {
        // exclude street2 - not important for taxes TODO validate
        var streetAddress = {
            street1: address.street1,
            city: address.city,
            state: address.state,
            zip: address.zip
        };
        return JSON.stringify(streetAddress);
    };
    TaxAddressValidationService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function TaxAddressValidationService_Factory() { return new TaxAddressValidationService(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_tax_address_service__WEBPACK_IMPORTED_MODULE_3__["TaxAddressService"])); }, token: TaxAddressValidationService, providedIn: "root" });
    return TaxAddressValidationService;
}());



/***/ }),

/***/ "./src/app/core/services/tax-services/tax-address.service.ts":
/*!*******************************************************************!*\
  !*** ./src/app/core/services/tax-services/tax-address.service.ts ***!
  \*******************************************************************/
/*! exports provided: TaxAddressService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxAddressService", function() { return TaxAddressService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _utils_address_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @utils/address-utils */ "./src/app/core/utils/address-utils.ts");
/* harmony import */ var _logger_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");









/**
 * Gets the raw data from the Tax service.
 */
var TaxAddressService = /** @class */ (function () {
    function TaxAddressService(http, logger) {
        this.http = http;
        this.logger = logger;
    }
    /**
     * If the address is valid it should only return one result.
     * Multiple results are returned if the address matches potential locations.
     * @param address The address object to validate
     */
    TaxAddressService.prototype.validateAddress = function (address) {
        var _this = this;
        if (this.isLookupAddressValid(address) === false) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])({
                isValid: false,
                suggestedAddresses: []
            });
        }
        var url = _environment__WEBPACK_IMPORTED_MODULE_3__["environment"].spApiRoot + '/taxapi/address';
        // The api crashes if you send a null schoolDistrict or psdCode
        // The api will return the address if a geoCode is provided
        // DO NOT SEND THE geoCode it will ignore the validation!
        var addressRequest = {
            addressLine1: address.street1,
            addressLine2: address.street2,
            city: address.city,
            state: address.state,
            zip: address.zip
        };
        return this.http.post(url, addressRequest).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err) {
            _this.logger.error('Error validating address', err, addressRequest);
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])([]);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            // Format the zip to what the app expects
            res.forEach(function (r) {
                r.zip = Object(_utils_address_utils__WEBPACK_IMPORTED_MODULE_4__["formatZip"])(r);
                if (r.city.toLowerCase() === address.city.toLowerCase()) {
                    r.city = address.city;
                }
            });
            // Simple nr check
            var isValid = res.length === 1;
            // The real check, even if the number returned is 1 our addresses might not match
            // In fact it might vary wildly. If we send the correct everything minus the state it will
            // return a valid address for the valid state, we need to check a few things to make sure
            // the actual returned address is the one the user intended to input.
            if (isValid) {
                var firstResult = res[0];
                isValid = address.city === firstResult.city && address.state === firstResult.state;
                if (firstResult.zip.length === 5 || firstResult.zip.length === address.zip.length) {
                    isValid = address.zip === firstResult.zip;
                }
                else {
                    var zipHead = Object(_utils_address_utils__WEBPACK_IMPORTED_MODULE_4__["zipFirstDigits"])(firstResult);
                    isValid = address.zip === zipHead;
                }
            }
            return {
                isValid: isValid,
                suggestedAddresses: res
            };
        }));
    };
    TaxAddressService.prototype.isLookupAddressValid = function (address) {
        return address != null && address.zip != null && address.zip.length > 0; // It will work with partial zips but not empty
    };
    TaxAddressService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_6__["defineInjectable"]({ factory: function TaxAddressService_Factory() { return new TaxAddressService(_angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_logger_service__WEBPACK_IMPORTED_MODULE_5__["LoggerService"])); }, token: TaxAddressService, providedIn: "root" });
    return TaxAddressService;
}());



/***/ }),

/***/ "./src/app/core/services/tax-services/tax-behavior.service.ts":
/*!********************************************************************!*\
  !*** ./src/app/core/services/tax-services/tax-behavior.service.ts ***!
  \********************************************************************/
/*! exports provided: TaxBehaviorService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxBehaviorService", function() { return TaxBehaviorService; });
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _tax_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tax-models */ "./src/app/core/services/tax-services/tax-models.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");



var TaxSelectorType;
(function (TaxSelectorType) {
    TaxSelectorType[TaxSelectorType["None"] = 0] = "None";
    TaxSelectorType[TaxSelectorType["Code"] = 1] = "Code";
    TaxSelectorType[TaxSelectorType["Description"] = 2] = "Description";
    TaxSelectorType[TaxSelectorType["CategoryDescription"] = 3] = "CategoryDescription";
})(TaxSelectorType || (TaxSelectorType = {}));
/** Exceptions to the rule. We can inject custom tax properties here to enrich the api metadata
 * Ex: if a tax has withholding allowance, UBI or a rate, even tax level data like the name.
 * This is applied after the api behavior so it takes precedence!
 *  - isForEmployee and isForCompany can be used to filter if the exception applies to company and/or employee taxes
 *  - selectorType and selectorValue filter out the taxes the behavior is applied to
 *  - overwriteBehavior: overwrites ITaxBehavior that handles display/behavior
 *  - overwriteTax: overwrites the actual tax, chan change values, names, even the mtsTaxCode, use wisely
 */
var exceptions = [
    {
        // All WH taxes codes end with 0000-001. Ex: FE0000-001 or NY0000-001
        isForEmployee: true,
        isForCompany: false,
        selectorType: TaxSelectorType.Code,
        selectorValue: '0000-001',
        overwriteBehavior: {
            hasExemption: true,
            shouldShow: true,
            hasWithholding: true
        }
    },
    {
        // The FUTA has exempt reasons
        isForEmployee: true,
        isForCompany: false,
        selectorType: TaxSelectorType.Code,
        selectorValue: 'FE0000-010',
        overwriteBehavior: {
            hasExemptionReason: true
        }
    },
    {
        // All unemployment taxes codes end with 0000-010. Ex: FE0000-010 or NY0000-010
        isForEmployee: true,
        isForCompany: false,
        selectorType: TaxSelectorType.Code,
        selectorValue: '0000-010',
        overwriteBehavior: {
            hasExemption: true,
            shouldShow: true,
            requireUserInput: true
        }
    },
    // TAXES THAT ARE EXCLUDED FROM THE API
    {
        // The FIN is collected explicitly so we can exclude it, its the: Federal Tax ID Number
        isForEmployee: false,
        isForCompany: true,
        selectorType: TaxSelectorType.Code,
        selectorValue: 'FE0000-001',
        dontCollect: true
    }
];
/** These are hard coded taxes that the tax logic should always present
 * If the api can't be called because there are no addresses we would still show
 * these taxes, when the api call is performed the data is overwritten by the api one */
var defaultTaxes = [
    {
        isForEmployee: true,
        isForCompany: false,
        availableTax: {
            categoryDescription: 'Federal W/H',
            code: 'FE0000-001',
            description: 'FEDERAL WH',
            displayOrder: 3,
            filingStatuses: [
                { code: 'H', description: 'Head of Household' },
                { code: 'M', description: 'Married' },
                { code: 'S', description: 'Single' }
            ],
            isEmployee: true,
            isVariableRate: false,
            stateCode: null,
            taxFormats: [{ stateCode: 'US', format: '##-#######', regEx: '\d{2}\-\d{7}' }],
            taxTypeCode: 'FD'
        }
    },
    {
        isForEmployee: true,
        isForCompany: true,
        availableTax: {
            categoryDescription: 'FUTA Employer',
            code: 'FE0000-010',
            description: 'FUTA ER',
            displayOrder: 14,
            filingStatuses: null,
            isEmployee: false,
            isVariableRate: false,
            stateCode: null,
            taxFormats: null,
            taxTypeCode: 'FD',
        }
    }
];
/**
 * Given a CompanyTax or a EmployeeTax this server will produce associated ITaxBehavior's.
 * There seems to be varied exceptions to how a tax should behave based on the unique code,
 * state, description or other. This service encapsulates those exceptions and provides a future
 * plugin point for returning a "generic" tax behavior
 */
var TaxBehaviorService = /** @class */ (function () {
    function TaxBehaviorService() {
    }
    TaxBehaviorService.prototype.getEmployeeAlwaysAvailableTaxes = function () {
        return defaultTaxes.filter(function (e) { return e.isForEmployee; }).map(function (t) { return t.availableTax; });
    };
    TaxBehaviorService.prototype.getCompanyAlwaysAvailableTaxes = function () {
        return defaultTaxes.filter(function (e) { return e.isForCompany; }).map(function (t) { return t.availableTax; });
    };
    /**
     * Wraps the CompanyTax object into a behavior container. It also mutates the tax object based on some simple rules.
     * If the api returns `null` the tax must be ignored
     *
     * @param tax The CompanyTax.
     * @param availableTax The available tax for the associated employee tax. This should come from the backend api.
     * @param taxRate The associated tax rate for the company tax.
     */
    TaxBehaviorService.prototype.tryGetCompanyTaxBehavior = function (tax, availableTax, taxRate, availableTaxes) {
        var behavior = this.getBaseBehavior(availableTax);
        // This is the behavior buildup phase
        behavior = this.applyCompanyRules(behavior, tax, availableTax, taxRate, availableTaxes);
        behavior = this.applyExceptions(tax, availableTax, behavior, true, false);
        if (behavior == null) {
            return null;
        }
        // If the tax can be hidden from the user in normal screens
        behavior.shouldShow = this.shouldShowCompanyTax(tax, behavior);
        // If the tax requires user input. In other words if the default is not enough
        // Ex: Rates or FilingStatus
        behavior.requireUserInput = this.doesCompanyTaxRequireInput(tax, behavior);
        return Object(_tax_models__WEBPACK_IMPORTED_MODULE_1__["buildTaxBehavior"])(tax, behavior);
    };
    /**
     * Wraps the EmployeeTax object into a behavior container. It also mutates the tax object based on some simple rules.
     * If the api returns `null` the tax must be ignored
     *
     * @param tax The EmployeeTax.
     * @param availableTax The available tax for the associated employee tax. This should come from the backend api.
     * @param employeeTaxLocation The employee.
     */
    TaxBehaviorService.prototype.tryGetEmployeeTaxBehavior = function (tax, availableTax, employeeTaxLocation) {
        var behavior = this.getBaseBehavior(availableTax);
        // This is the behavior buildup phase
        behavior = this.applyEmployeeRules(behavior, tax, availableTax, employeeTaxLocation);
        behavior = this.applyExceptions(tax, availableTax, behavior, false, true);
        if (behavior == null) {
            return null;
        }
        // If the tax can be hidden from the user in normal screens
        // Ex: federal MED tax
        behavior.shouldShow = this.shouldShowEmployeeTax(tax, behavior);
        // If the tax requires user input. In other words if the default is not enough
        // Ex: Rates or FilingStatus
        behavior.requireUserInput = this.doesEmployeeTaxRequireInput(tax, behavior);
        return Object(_tax_models__WEBPACK_IMPORTED_MODULE_1__["buildTaxBehavior"])(tax, behavior);
    };
    TaxBehaviorService.prototype.getBaseBehavior = function (availableTax) {
        return {
            shouldShow: false,
            requireUserInput: false,
            hasExemption: false,
            hasExemptionReason: false,
            hasEin: false,
            hasRate: false,
            hasFilingStatus: false,
            hasWithholding: false,
            hasLowIncomeExempt: false,
            hasUbi: false,
            hasBusinessStartDate: false,
            taxEinFormats: availableTax.taxFormats || [],
            filingStatuses: availableTax.filingStatuses || [],
            rate: null,
            useEINFromCode: availableTax.useEINFromCode,
            categoryCode: availableTax.categoryCode
        };
    };
    TaxBehaviorService.prototype.applyCompanyRules = function (currentBehavior, tax, availableTax, taxRate, availableTaxes) {
        // Taxes that are state or local level have no exempt option
        if (tax.taxTypeCode === _model__WEBPACK_IMPORTED_MODULE_0__["TaxTypeCode"].Federal) {
            currentBehavior.hasExemption = true;
        }
        else {
            currentBehavior.hasExemption = false;
        }
        // All company taxes have EIN. Its just that some of them dont show it.
        currentBehavior.hasEin =
            // Never ask for EINs on federal taxes
            tax.taxTypeCode !== _model__WEBPACK_IMPORTED_MODULE_0__["TaxTypeCode"].Federal &&
                // Do we have a reference useEINFromCode. If not we are root (take ein)
                (availableTax.useEINFromCode == null ||
                    // If the reference tax is available then we don't need to retrieve the ein
                    availableTaxes.every(function (t) { return t.code !== availableTax.useEINFromCode; }));
        // Is the isVariableRate = true. Then we need to ask for a rate.
        if (availableTax.isVariableRate != null && availableTax.isVariableRate === true) {
            currentBehavior.hasRate = true;
            currentBehavior.rate = taxRate;
        }
        // Taxes that have ein code have an exempt option
        if (currentBehavior.hasEin) {
            currentBehavior.hasExemption = true;
        }
        return currentBehavior;
    };
    TaxBehaviorService.prototype.applyEmployeeRules = function (currentBehavior, tax, availableTax, employeeTaxLocation) {
        // A employee can't be exempt from federal taxes
        currentBehavior.hasExemption = tax.taxTypeCode === _model__WEBPACK_IMPORTED_MODULE_0__["TaxTypeCode"].Federal ? false : true;
        // Does the tax category have at least one filingStatuses? If so filingStatuses is required.
        if (availableTax.filingStatuses != null && availableTax.filingStatuses.length > 0) {
            currentBehavior.hasFilingStatus = true;
        }
        // If the employee is a 1099 Contractor he can't chose to be exempt but automatically is
        if (employeeTaxLocation.isTaxesExcluded) {
            tax.isExempt = true;
            currentBehavior.hasExemption = false;
        }
        return currentBehavior;
    };
    TaxBehaviorService.prototype.applyExceptions = function (tax, availableTax, currentBehavior, isCompanyTax, isEmployeeTax) {
        var canCollect = true;
        var applyException = function (theTax, theBehavior, theException) {
            if (theException.dontCollect != null && theException.dontCollect === true) {
                return false;
            }
            if (theException.overwriteBehavior != null) {
                Object.assign(theBehavior, theException.overwriteBehavior);
            }
            if (theException.overwriteTax != null) {
                Object.assign(theTax, theException.overwriteTax);
            }
            return true;
        };
        exceptions.forEach(function (exception) {
            var isEmployeeTaxException = isEmployeeTax && exception.isForEmployee;
            var isCompanyTaxException = isCompanyTax && exception.isForCompany;
            if (isEmployeeTaxException === false && isCompanyTaxException === false) {
                return;
            }
            if (exception.selectorType === TaxSelectorType.Code &&
                tax.mtsTaxCode.includes(exception.selectorValue)) {
                canCollect = applyException(tax, currentBehavior, exception);
            }
            if (exception.selectorType === TaxSelectorType.Description &&
                availableTax.description.toLowerCase().includes(exception.selectorValue.toLowerCase())) {
                canCollect = applyException(tax, currentBehavior, exception);
            }
            if (exception.selectorType === TaxSelectorType.CategoryDescription &&
                availableTax.categoryDescription.toLowerCase().includes(exception.selectorValue.toLowerCase())) {
                canCollect = applyException(tax, currentBehavior, exception);
            }
        });
        if (canCollect === false) {
            return null;
        }
        return currentBehavior;
    };
    TaxBehaviorService.prototype.shouldShowCompanyTax = function (tax, taxBehavior) {
        return true;
    };
    TaxBehaviorService.prototype.shouldShowEmployeeTax = function (tax, taxBehavior) {
        return taxBehavior.shouldShow || tax.taxTypeCode !== _model__WEBPACK_IMPORTED_MODULE_0__["TaxTypeCode"].Federal;
    };
    TaxBehaviorService.prototype.doesCompanyTaxRequireInput = function (tax, taxBehavior) {
        // We by default show the taxes if:
        // 1) There is a EIN to be filled in
        // 2) There is a variable rate to collect
        // 3) Has UBI, a WA taxes thing
        // 4) Has business start date, a WA taxes thing
        return taxBehavior.requireUserInput || taxBehavior.hasEin || taxBehavior.hasRate ||
            taxBehavior.hasUbi || taxBehavior.hasBusinessStartDate;
    };
    TaxBehaviorService.prototype.doesEmployeeTaxRequireInput = function (tax, taxBehavior) {
        // We default to show the taxes if:
        // 1) There is a filling status to collect
        // 2) There is withholding
        // 3) There is low income exemption
        return taxBehavior.requireUserInput || taxBehavior.hasFilingStatus || taxBehavior.hasWithholding ||
            taxBehavior.hasLowIncomeExempt;
    };
    TaxBehaviorService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function TaxBehaviorService_Factory() { return new TaxBehaviorService(); }, token: TaxBehaviorService, providedIn: "root" });
    return TaxBehaviorService;
}());



/***/ }),

/***/ "./src/app/core/services/tax-services/tax-collector.service.ts":
/*!*********************************************************************!*\
  !*** ./src/app/core/services/tax-services/tax-collector.service.ts ***!
  \*********************************************************************/
/*! exports provided: TaxCollectorService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxCollectorService", function() { return TaxCollectorService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs-spy/operators/tag */ "./node_modules/rxjs-spy/operators/tag.js");
/* harmony import */ var rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _entity_entity_services_company_tax_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @entity/entity-services/company-tax.service */ "./src/app/store/entity/entity-services/company-tax.service.ts");
/* harmony import */ var _entity_entity_services_tax_location_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @entity/entity-services/tax-location.service */ "./src/app/store/entity/entity-services/tax-location.service.ts");
/* harmony import */ var _entity_entity_services_employee_tax_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @entity/entity-services/employee-tax.service */ "./src/app/store/entity/entity-services/employee-tax.service.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _tax_models__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tax-models */ "./src/app/core/services/tax-services/tax-models.ts");
/* harmony import */ var _tax_behavior_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tax-behavior.service */ "./src/app/core/services/tax-services/tax-behavior.service.ts");
/* harmony import */ var _tax_rates_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./tax-rates.service */ "./src/app/core/services/tax-services/tax-rates.service.ts");
/* harmony import */ var _tax_save_helper_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tax-save-helper.service */ "./src/app/core/services/tax-services/tax-save-helper.service.ts");
/* harmony import */ var _tax_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./tax.service */ "./src/app/core/services/tax-services/tax.service.ts");
/* harmony import */ var _app_store_validation__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @app/store/validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../store/session/session.service */ "./src/app/store/session/session.service.ts");
/* harmony import */ var _store_validation_validation_trigger_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../store/validation/validation-trigger.service */ "./src/app/store/validation/validation-trigger.service.ts");




// Explicit file imports to avoid circular references




















var TaxCollectorService = /** @class */ (function () {
    function TaxCollectorService(companyTaxService, employeeTaxService, sessionService, taxBehaviorService, taxLocationService, taxProviderService, taxRateProviderService, taxSaveHelperService, validationTriggerService) {
        this.companyTaxService = companyTaxService;
        this.employeeTaxService = employeeTaxService;
        this.sessionService = sessionService;
        this.taxBehaviorService = taxBehaviorService;
        this.taxLocationService = taxLocationService;
        this.taxProviderService = taxProviderService;
        this.taxRateProviderService = taxRateProviderService;
        this.taxSaveHelperService = taxSaveHelperService;
        this.validationTriggerService = validationTriggerService;
        /** Subject thats part of the tax recalculation trigger */
        this.recomputeTaxesSubject = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
        this.buildObservable();
    }
    /**
     * Recompute all the taxes that need to be collected based on the current employee addresses.
     * The method will also save new and removed Company and Employee taxes to keep everything in sync.
     */
    TaxCollectorService.prototype.computeTaxes = function () {
        var _this = this;
        var triggered = false;
        return this.taxes$.pipe(
        // Close over triggered otherwise we will recompute twice
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["tap"])(function () {
            if (triggered === false) {
                triggered = true;
                _this.recomputeTaxesSubject.next();
            }
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["skip"])(1), // We need to skip the current result. taxes$ is hot
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function (taxes) { return _this.taxSaveHelperService.getAllTaxesSavePack(taxes); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function (taxPacks) { return _this.taxSaveHelperService.saveTaxPacks(taxPacks); }), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_2__["tag"])('computeTaxes'));
    };
    /** Save employee taxes */
    TaxCollectorService.prototype.saveEmployeeTaxes = function (employeesTaxes) {
        var _this = this;
        return this.taxSaveHelperService
            .getEmployeeSavePack(employeesTaxes)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function (taxPack) { return _this.taxSaveHelperService.saveTaxPacks([taxPack]); }));
    };
    /** Save company federal taxes */
    TaxCollectorService.prototype.saveCompanyFederalTaxes = function (companyFederalTaxes) {
        var _this = this;
        return this.taxes$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function (taxes) {
            return _this.taxSaveHelperService.getCompanyFederalSavePack(companyFederalTaxes, taxes);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function (taxPack) { return _this.taxSaveHelperService.saveTaxPacks([taxPack]); }));
    };
    /** Save company state taxes */
    TaxCollectorService.prototype.saveCompanyStateTaxes = function (companyStateTaxes) {
        var _this = this;
        return this.taxes$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function (taxes) {
            return _this.taxSaveHelperService.getCompanyStateSavePack(companyStateTaxes, taxes);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function (taxPack) { return _this.taxSaveHelperService.saveTaxPacks([taxPack]); }));
    };
    TaxCollectorService.prototype.buildObservable = function () {
        var _this = this;
        var taxesDataSources$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["combineLatest"])(this.sessionService.currentCompanyId$, this.taxLocationService.employeeTaxLocations$, this.taxLocationService.companyLocations$);
        var allTaxes$ = taxesDataSources$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function (result) {
            var companyId = result[0], employeeWithLocations = result[1], companyLocations = result[2];
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["forkJoin"])(_this.retrieveAllAvailableTaxes(companyId, employeeWithLocations, companyLocations), 
            // We must not allow this api to fail and taxes can work with an empty rates array
            _this.taxRateProviderService.getTaxRates().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["catchError"])(function (error) { return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])([]); })));
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["observeOn"])(rxjs__WEBPACK_IMPORTED_MODULE_0__["asapScheduler"]), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["withLatestFrom"])(this.companyTaxService.entities$, // CompanyTax[]
        this.employeeTaxService.entities$, // EmployeeTAx[]
        this.taxLocationService.companyTaxStates$ // UT, NY, ET
        ), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (_a) {
            var apiData = _a[0], cachedCompanyTaxes = _a[1], cachedEmployeesTaxes = _a[2], companyTaxStates = _a[3];
            var taxesToCollect = apiData[0], taxRates = apiData[1];
            var employeeTaxes = taxesToCollect.employeesTaxes.length === 0
                ? []
                : _this.buildEmployeesTaxes(taxesToCollect.companyId, taxesToCollect.employeesTaxes, cachedEmployeesTaxes);
            var companyFederalTaxes = _this.buildCompanyFederalTaxes(taxesToCollect.companyId, taxesToCollect.companyTaxes, taxesToCollect.unverifiedCompanyStateAddresses, cachedCompanyTaxes, taxRates);
            var companyStatesTaxes = companyTaxStates.length === 0
                ? []
                : _this.buildCompanyStateTaxes(taxesToCollect, companyTaxStates, cachedCompanyTaxes, taxRates);
            return {
                employeeTaxes: employeeTaxes,
                companyFederalTaxes: companyFederalTaxes,
                companyStateTaxes: companyStatesTaxes
            };
        }));
        this.taxes$ = this.recomputeTaxesSubject.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function () { return _this.sessionService.companyPackageLoaded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])()); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["switchMap"])(function (isCompanyPackageLoaded) {
            return isCompanyPackageLoaded === true ? allTaxes$ : Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(_tax_models__WEBPACK_IMPORTED_MODULE_8__["EMPTY_TAXES"]);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["shareReplay"])(1));
        this.sessionService.companyPackageLoaded$
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["skip"])(1) // When first starting dont issue an event until we are ready to go
        )
            .subscribe(function (e) {
            return _this.recomputeTaxesSubject.next();
        });
        this.taxes$.subscribe(function () {
            _this.validationTriggerService.validate();
        });
    };
    TaxCollectorService.prototype.retrieveAllAvailableTaxes = function (companyId, employeesWithLocations, companyLocations) {
        var _this = this;
        var addressPairs = this.getAllAddressPairs(employeesWithLocations, companyLocations);
        return this.taxProviderService.getAvailableTaxPairs(addressPairs).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (taxesAddressPairs) {
            // We filter out the unverified results from the tax pair api (duplicate ids)
            var verifiedCompanyTaxes = _this.verifiedCompanyAddressTaxes(companyLocations, taxesAddressPairs);
            var verifiedEmployeeTaxes = _this.verifiedEmployeeAddressTaxes(employeesWithLocations, taxesAddressPairs);
            // All states that have company unverified addresses
            var unverifiedCompanyAddressStates = companyLocations.reduce(function (acc, add) {
                if (add.isVerified === false ||
                    verifiedCompanyTaxes.unverifiedAddressIds.includes(add.id)) {
                    if (acc.includes(add.state) === false) {
                        acc.push(add.state);
                    }
                }
                return acc;
            }, []);
            return {
                unverifiedCompanyStateAddresses: unverifiedCompanyAddressStates,
                companyAvailableTaxPairs: verifiedCompanyTaxes.verifiedTaxAddressPairs,
                employeeAvailableTaxPairs: verifiedEmployeeTaxes.verifiedTaxAddressPairs
            };
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (context) {
            // Build the employees. IEmployeeAvailableTaxes[]
            var empDefaultTaxes = _this.taxBehaviorService.getEmployeeAlwaysAvailableTaxes();
            var employeeTaxes = employeesWithLocations.reduce(function (acc, emp) {
                var empAvailableTaxes = _this.buildEmployeeAvailableTaxes(emp, context.employeeAvailableTaxPairs, empDefaultTaxes);
                acc.push(empAvailableTaxes);
                return acc;
            }, []);
            // Build the company taxes. IAvailableTax[]
            var companyDefaultTaxes = _this.taxBehaviorService.getCompanyAlwaysAvailableTaxes();
            var companyTaxes = _this.buildCompanyAvailableTaxes(context.employeeAvailableTaxPairs, context.companyAvailableTaxPairs, companyDefaultTaxes);
            return {
                companyId: companyId,
                unverifiedCompanyStateAddresses: context.unverifiedCompanyStateAddresses,
                employeesTaxes: employeeTaxes,
                companyTaxes: companyTaxes
            };
        }));
    };
    TaxCollectorService.prototype.buildCompanyAvailableTaxes = function (employeeAvailableTaxPairs, companyAvailableTaxPairs, companyDefaultTaxes) {
        var companyTaxes = employeeAvailableTaxPairs.reduce(function (acc, taxPair) {
            taxPair.taxes.forEach(function (tax) {
                if (acc.every(function (e) { return e.code !== tax.code; })) {
                    acc.push(tax);
                }
            });
            return acc;
        }, []);
        companyAvailableTaxPairs.forEach(function (companyAddressPair) {
            companyAddressPair.taxes.forEach(function (tax) {
                if (companyTaxes.every(function (e) { return e.code !== tax.code; })) {
                    companyTaxes.push(tax);
                }
            });
        });
        companyDefaultTaxes.forEach(function (defaultTax) {
            if (companyTaxes.every(function (t) { return t.code !== defaultTax.code; })) {
                companyTaxes.push(defaultTax);
            }
        });
        return companyTaxes;
    };
    TaxCollectorService.prototype.getAllAddressPairs = function (employeesWithLocations, companyLocations) {
        // Employee addresses
        var addressPairRequest = employeesWithLocations.reduce(function (acc, emp) {
            if (emp.isVerified && emp.isTaxesExcluded === false) {
                acc.push({
                    // Were going to use the employee home Id to prevent guid collision with the address ids
                    id: emp.homeAddressId,
                    homeGeoCode: emp.homeGeoCode,
                    homePsdCode: emp.homePsdCode,
                    homeSchoolDistrictCode: emp.homeSchoolDistrictCode,
                    workGeoCode: emp.workGeoCode,
                    workPsdCode: emp.workPsdCode,
                    workSchoolDistrictCode: emp.workSchoolDistrictCode
                });
            }
            return acc;
        }, []);
        companyLocations.forEach(function (companyAddress) {
            if (companyAddress.isVerified) {
                addressPairRequest.push({
                    id: companyAddress.id,
                    homeGeoCode: companyAddress.geoCode,
                    homePsdCode: companyAddress.psdCode,
                    homeSchoolDistrictCode: companyAddress.schoolDistrictCode,
                    workGeoCode: companyAddress.geoCode,
                    workPsdCode: companyAddress.psdCode,
                    workSchoolDistrictCode: companyAddress.schoolDistrictCode
                });
            }
        });
        return addressPairRequest;
    };
    TaxCollectorService.prototype.verifiedCompanyAddressTaxes = function (companyLocations, availableTaxPairs) {
        var companyAddressesPairs = availableTaxPairs.filter(function (e) {
            return companyLocations.some(function (cl) { return cl.id === e.id; });
        });
        var unverifiedAddressIds = this.getUnverifiableTaxPairIds(companyAddressesPairs);
        return {
            unverifiedAddressIds: unverifiedAddressIds,
            verifiedTaxAddressPairs: companyAddressesPairs.filter(function (e) { return unverifiedAddressIds.includes(e.id) === false; })
        };
    };
    TaxCollectorService.prototype.verifiedEmployeeAddressTaxes = function (employeeLocations, availableTaxPairs) {
        var employeeAddressesPairs = availableTaxPairs.filter(function (e) {
            return employeeLocations.some(function (cl) { return cl.homeAddressId === e.id; });
        });
        var unverifiedAddressIds = this.getUnverifiableTaxPairIds(employeeAddressesPairs);
        return {
            unverifiedAddressIds: unverifiedAddressIds,
            verifiedTaxAddressPairs: employeeAddressesPairs.filter(function (e) { return unverifiedAddressIds.includes(e.id) === false; })
        };
    };
    TaxCollectorService.prototype.buildEmployeeAvailableTaxes = function (employeeWithLocation, employeesAvailableTaxPairs, defaultTaxes) {
        if (employeeWithLocation.isTaxesExcluded) {
            return {
                isVerified: employeeWithLocation.isVerified,
                employeeLocation: employeeWithLocation,
                taxes: []
            };
        }
        var employeeAvailableTaxPairs = employeesAvailableTaxPairs.find(function (e) { return e.id === employeeWithLocation.homeAddressId; });
        // Did we find taxes for this employee?
        if (employeeAvailableTaxPairs == null) {
            return { isVerified: false, employeeLocation: employeeWithLocation, taxes: [] };
        }
        else {
            var employeeAvailableTaxes_1 = employeeAvailableTaxPairs.taxes;
            defaultTaxes.forEach(function (defaultTax) {
                if (employeeAvailableTaxes_1.every(function (t) { return t.code !== defaultTax.code; })) {
                    employeeAvailableTaxes_1.push(defaultTax);
                }
            });
            return {
                isVerified: true,
                employeeLocation: employeeWithLocation,
                taxes: employeeAvailableTaxes_1
            };
        }
    };
    // --------------------
    // These methods create the final view model for employee taxes
    // --------------------
    TaxCollectorService.prototype.buildEmployeesTaxes = function (companyId, employeesAvailableTaxes, cachedEmployeesTaxes) {
        var _this = this;
        var employeesTaxes = employeesAvailableTaxes.map(function (employeeAvailableTaxes) {
            var eeId = employeeAvailableTaxes.employeeLocation.id;
            var cachedEmployeeTaxes = cachedEmployeesTaxes.filter(function (t) { return t.employeeId === eeId && t.companyId === companyId; });
            var taxesWithBehaviors = employeeAvailableTaxes.taxes.sort(_this.orderTaxesFunc).reduce(function (behaviors, toCollectTax) {
                var cachedTax = cachedEmployeeTaxes.find(function (t) { return t.mtsTaxCode === toCollectTax.code; });
                if (cachedTax == null) {
                    cachedTax = _model__WEBPACK_IMPORTED_MODULE_3__["EmployeeTax"].create({
                        id: _this.sessionService.generateId(),
                        companyId: companyId,
                        employeeId: eeId,
                        name: toCollectTax.description,
                        mtsTaxCode: toCollectTax.code,
                        stateCode: toCollectTax.stateCode,
                        taxTypeCode: toCollectTax.taxTypeCode,
                        isExempt: false
                    });
                }
                var taxBehavior = _this.taxBehaviorService.tryGetEmployeeTaxBehavior(cachedTax, toCollectTax, employeeAvailableTaxes.employeeLocation);
                if (taxBehavior != null) {
                    behaviors.push(taxBehavior);
                }
                return behaviors;
            }, []);
            var employeeTaxes = {
                employeeLocation: employeeAvailableTaxes.employeeLocation,
                addressVerified: employeeAvailableTaxes.isVerified,
                taxes: taxesWithBehaviors
            };
            return employeeTaxes;
        });
        return employeesTaxes;
    };
    TaxCollectorService.prototype.buildCompanyFederalTaxes = function (companyId, availableCompanyTaxes, unverifiedCompanyAddressStates, cachedCompanyTaxes, taxRates) {
        var _this = this;
        var cachedFederalCompanyTaxes = cachedCompanyTaxes.filter(function (e) { return (e.stateCode == null || e.stateCode === '') && e.taxTypeCode === _model__WEBPACK_IMPORTED_MODULE_3__["TaxTypeCode"].Federal; });
        var companyFederalTaxes = this.getCompanyFederalTaxes(availableCompanyTaxes)
            .sort(this.orderTaxesFunc)
            .reduce(function (acc, toCollectTax) {
            var cachedTax = cachedFederalCompanyTaxes.find(function (t) { return t.mtsTaxCode === toCollectTax.code; });
            if (cachedTax == null) {
                cachedTax = _this.createCompanyTax(companyId, '', toCollectTax);
            }
            var taxRate = taxRates.find(function (r) { return r.code === toCollectTax.code; });
            var taxBehavior = _this.taxBehaviorService.tryGetCompanyTaxBehavior(cachedTax, toCollectTax, taxRate, availableCompanyTaxes);
            if (taxBehavior != null) {
                acc.push(taxBehavior);
            }
            return acc;
        }, []);
        return {
            allCompanyAddressesVerified: unverifiedCompanyAddressStates.length !== 0,
            taxes: companyFederalTaxes
        };
    };
    TaxCollectorService.prototype.buildCompanyStateTaxes = function (availableTaxes, companyTaxStates, cachedCompanyTaxes, taxRates) {
        var _this = this;
        var companyId = availableTaxes.companyId;
        var availableCompanyTaxes = availableTaxes.companyTaxes;
        var employeeAvailableTaxes = availableTaxes.employeesTaxes;
        var unverifiedCompanyStateAddresses = availableTaxes.unverifiedCompanyStateAddresses;
        var companyStatesTaxes = companyTaxStates.map(function (stateCode) {
            var stateTaxesToCollect = _this.getCompanyStateTaxes(stateCode, availableCompanyTaxes);
            var cachedStateCompanyTaxes = cachedCompanyTaxes.filter(function (e) { return e.stateCode === stateCode; });
            var taxesWithBehaviors = stateTaxesToCollect.sort(_this.orderTaxesFunc).reduce(function (acc, toCollectTax) {
                var cachedTax = cachedStateCompanyTaxes.find(function (t) { return t.mtsTaxCode === toCollectTax.code; });
                if (cachedTax == null) {
                    cachedTax = _this.createCompanyTax(companyId, stateCode, toCollectTax);
                }
                var taxRate = taxRates.find(function (r) { return r.code === toCollectTax.code; });
                var taxBehavior = _this.taxBehaviorService.tryGetCompanyTaxBehavior(cachedTax, toCollectTax, taxRate, availableCompanyTaxes);
                if (taxBehavior != null) {
                    acc.push(taxBehavior);
                }
                return acc;
            }, []);
            var employeeLocationsInState = employeeAvailableTaxes.reduce(function (acc, empAvailableTaxes) {
                if (empAvailableTaxes.employeeLocation.homeState === stateCode ||
                    empAvailableTaxes.employeeLocation.workState === stateCode) {
                    acc.push({
                        isVerified: empAvailableTaxes.isVerified,
                        employeeLocation: empAvailableTaxes.employeeLocation
                    });
                }
                return acc;
            }, []);
            var allEmployeeAddressesVerified = employeeLocationsInState.every(function (e) { return e.isVerified; });
            var employeeLocations = employeeLocationsInState.map(function (e) { return e.employeeLocation; });
            var unverifiedStateCompanyAddress = unverifiedCompanyStateAddresses.includes(stateCode);
            var companyStateTaxes = {
                state: stateCode,
                employeesLocations: employeeLocations,
                allCompanyStateAddressesVerified: unverifiedStateCompanyAddress,
                allEmployeeStateAddressesVerified: allEmployeeAddressesVerified,
                taxes: taxesWithBehaviors
            };
            return companyStateTaxes;
        });
        return companyStatesTaxes;
    };
    // --------------------
    // Helper methods
    // --------------------
    TaxCollectorService.prototype.getUnverifiableTaxPairIds = function (availableTaxes) {
        var addressPairsGroup = availableTaxes.reduce(function (a, t) {
            if (a.hasOwnProperty(t.id) === false) {
                a[t.id] = 1;
            }
            else {
                a[t.id] = a[t.id] + 1;
            }
            return a;
        }, {});
        var uncertainAddressIds = Object.keys(addressPairsGroup).reduce(function (a, k) {
            if (addressPairsGroup[k] > 1) {
                a.push(k);
            }
            return a;
        }, []);
        return uncertainAddressIds;
    };
    TaxCollectorService.prototype.orderTaxesFunc = function (a, b) {
        var priority = TaxCollectorService.taxTypeCodesPriority;
        if (priority[a.taxTypeCode] < priority[b.taxTypeCode]) {
            return -1;
        }
        else if (priority[a.taxTypeCode] > priority[b.taxTypeCode]) {
            return 1;
        }
        if (a.displayOrder < b.displayOrder) {
            return -1;
        }
        else if (a.displayOrder > b.displayOrder) {
            return 1;
        }
        return 0;
    };
    TaxCollectorService.prototype.getCompanyFederalTaxes = function (availableTaxes) {
        return availableTaxes.filter(function (e) { return (e.stateCode == null || e.stateCode === '') && e.taxTypeCode === 'FD'; });
    };
    TaxCollectorService.prototype.getCompanyStateTaxes = function (state, availableTaxes) {
        return availableTaxes.filter(function (e) { return e.stateCode === state && e.taxTypeCode !== 'FD'; });
    };
    TaxCollectorService.prototype.createCompanyTax = function (companyId, stateCode, availableTax) {
        var rateType = availableTax.isVariableRate == null || availableTax.isVariableRate === false
            ? _model__WEBPACK_IMPORTED_MODULE_3__["TaxRateType"].Fixed
            : _model__WEBPACK_IMPORTED_MODULE_3__["TaxRateType"].Variable;
        return _model__WEBPACK_IMPORTED_MODULE_3__["CompanyTax"].create({
            id: this.sessionService.generateId(),
            companyId: companyId,
            name: availableTax.description,
            mtsTaxCode: availableTax.code,
            stateCode: stateCode,
            rateType: rateType,
            taxTypeCode: availableTax.taxTypeCode,
            isExempt: false
        });
    };
    TaxCollectorService.taxTypeCodesPriority = {
        FD: 1,
        ST: 2,
        CN: 3,
        CT: 4,
        SD: 5
    };
    TaxCollectorService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_14__["defineInjectable"]({ factory: function TaxCollectorService_Factory() { return new TaxCollectorService(_angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_entity_entity_services_company_tax_service__WEBPACK_IMPORTED_MODULE_4__["CompanyTaxService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_entity_entity_services_employee_tax_service__WEBPACK_IMPORTED_MODULE_6__["EmployeeTaxService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_store_session_session_service__WEBPACK_IMPORTED_MODULE_15__["SessionService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_tax_behavior_service__WEBPACK_IMPORTED_MODULE_9__["TaxBehaviorService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_entity_entity_services_tax_location_service__WEBPACK_IMPORTED_MODULE_5__["TaxLocationService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_tax_service__WEBPACK_IMPORTED_MODULE_12__["TaxService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_tax_rates_service__WEBPACK_IMPORTED_MODULE_10__["TaxRatesService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_tax_save_helper_service__WEBPACK_IMPORTED_MODULE_11__["TaxSaveHelperService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_store_validation_validation_trigger_service__WEBPACK_IMPORTED_MODULE_16__["ValidationTriggerService"])); }, token: TaxCollectorService, providedIn: "root" });
    return TaxCollectorService;
}());



/***/ }),

/***/ "./src/app/core/services/tax-services/tax-models.ts":
/*!**********************************************************!*\
  !*** ./src/app/core/services/tax-services/tax-models.ts ***!
  \**********************************************************/
/*! exports provided: TaxRate, buildTaxBehavior, EMPTY_TAXES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxRate", function() { return TaxRate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildTaxBehavior", function() { return buildTaxBehavior; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EMPTY_TAXES", function() { return EMPTY_TAXES; });
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var TaxRate = /** @class */ (function () {
    function TaxRate() {
    }
    return TaxRate;
}());

function buildTaxBehavior(tax, taxBehavior) {
    return __assign({}, tax, { behavior: taxBehavior, getTax: function () {
            var _a = this, behavior = _a.behavior, getTax = _a.getTax, t = __rest(_a, ["behavior", "getTax"]);
            return t;
        } });
}
var EMPTY_TAXES = {
    employeeTaxes: [],
    companyFederalTaxes: null,
    companyStateTaxes: []
};


/***/ }),

/***/ "./src/app/core/services/tax-services/tax-rates.service.ts":
/*!*****************************************************************!*\
  !*** ./src/app/core/services/tax-services/tax-rates.service.ts ***!
  \*****************************************************************/
/*! exports provided: TaxRatesService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxRatesService", function() { return TaxRatesService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");






/**
 * Gets tax rate data
 */
var TaxRatesService = /** @class */ (function () {
    function TaxRatesService(http) {
        this.http = http;
        this.cachedTaxRates = null;
    }
    TaxRatesService.prototype.getTaxRates = function () {
        var _this = this;
        if (this.cachedTaxRates != null) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(this.cachedTaxRates);
        }
        var url = _environment__WEBPACK_IMPORTED_MODULE_3__["environment"].spApiRoot + '/taxapi/taxes/suirates';
        return this.http.get(url).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (e) {
            _this.cachedTaxRates = e;
            return e;
        }));
    };
    TaxRatesService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function TaxRatesService_Factory() { return new TaxRatesService(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"])); }, token: TaxRatesService, providedIn: "root" });
    return TaxRatesService;
}());



/***/ }),

/***/ "./src/app/core/services/tax-services/tax-save-helper.service.ts":
/*!***********************************************************************!*\
  !*** ./src/app/core/services/tax-services/tax-save-helper.service.ts ***!
  \***********************************************************************/
/*! exports provided: TaxSaveHelperService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxSaveHelperService", function() { return TaxSaveHelperService; });
/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @core/utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs-spy/operators/tag */ "./node_modules/rxjs-spy/operators/tag.js");
/* harmony import */ var rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _entity_entity_services_company_tax_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @entity/entity-services/company-tax.service */ "./src/app/store/entity/entity-services/company-tax.service.ts");
/* harmony import */ var _entity_entity_services_employee_tax_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @entity/entity-services/employee-tax.service */ "./src/app/store/entity/entity-services/employee-tax.service.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _tax_models__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tax-models */ "./src/app/core/services/tax-services/tax-models.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../store/session/session.service */ "./src/app/store/session/session.service.ts");

















var TaxSaveHelperService = /** @class */ (function () {
    function TaxSaveHelperService(companyTaxService, employeeTaxService, entityCacheDispatcher, sessionService) {
        this.companyTaxService = companyTaxService;
        this.employeeTaxService = employeeTaxService;
        this.entityCacheDispatcher = entityCacheDispatcher;
        this.sessionService = sessionService;
        this.saveTaxUrl = _environment__WEBPACK_IMPORTED_MODULE_8__["environment"].apiRoot + '/save/taxes';
    }
    /**
     * Merges Employee Taxes.
     * It looks at cached taxes and adds missing taxes, updates changed taxes and removes taxes that are no longer present.
     * The result is a package with the 3 CUD operations.
     *
     * @param {IEmployeeTaxes} employeesTaxes the collection of taxes with there associated employees.
     */
    TaxSaveHelperService.prototype.getEmployeeSavePack = function (employeesTaxes) {
        var _this = this;
        return this.employeeTaxService.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (allCachedEmployeeTaxes) {
            // Get all the current employee taxes
            var employeeTaxes = employeesTaxes.taxes;
            var employeeCachedTaxes = allCachedEmployeeTaxes.filter(function (e) { return e.employeeId === employeesTaxes.employeeLocation.id; });
            var empSavePack = _this.buildEmployeeSavePack(employeeTaxes, employeeCachedTaxes);
            return empSavePack;
        }), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_4__["tag"])('getEmployeeSavePack'));
    };
    /**
     * Merges Company Federal Taxes.
     * It looks at cached taxes and adds missing taxes, updates changed taxes and removes taxes that are no longer present.
     * The result is a package with the 3 CUD operations.
     *
     * @param {ICompanyFederalTaxes} companyFederalTaxes the company federal taxes view model
     * @param {ITaxes} taxes all the taxes
     */
    TaxSaveHelperService.prototype.getCompanyFederalSavePack = function (companyFederalTaxes, taxes) {
        var _this = this;
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["combineLatest"])(this.sessionService.currentCompany$, this.companyTaxService.entities$, this.employeeTaxService.entities$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (_a) {
            var company = _a[0], allCachedCompanyTaxes = _a[1];
            var companyTaxes = companyFederalTaxes.taxes;
            var cachedCompanyFederalTaxes = allCachedCompanyTaxes.filter(function (e) { return e.taxTypeCode === _model__WEBPACK_IMPORTED_MODULE_5__["TaxTypeCode"].Federal; });
            // Get all available company taxes with updated ones taking priority then build the EIN map
            var allCompanyTaxes = _this.mergeAndFlattenAllCompanyTaxes(companyTaxes, taxes);
            var einMap = _this.buildTaxesEinMap(company.fein, allCompanyTaxes);
            // Set the EINs of the taxes
            _this.setEinValues(companyTaxes, einMap);
            var companySavePack = _this.buildCompanySavePack(companyTaxes, cachedCompanyFederalTaxes);
            return companySavePack;
        }), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_4__["tag"])('getCompanyFederalSavePack'));
    };
    /**
     * Merges Company State Taxes.
     * It looks at cached taxes and adds missing taxes, updates changed taxes and removes taxes that are no longer present.
     * The result is a package with the 3 CUD operations.
     *
     * @param {ICompanyStateTaxes} companyStateTaxes the company federal taxes view model
     * @param {ITaxes} taxes all the taxes
     */
    TaxSaveHelperService.prototype.getCompanyStateSavePack = function (companyStateTaxes, taxes) {
        var _this = this;
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["combineLatest"])(this.sessionService.currentCompany$, this.companyTaxService.entities$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (_a) {
            var company = _a[0], allCachedCompanyTaxes = _a[1];
            var companyTaxes = companyStateTaxes.taxes;
            var cachedCompanyStateTaxes = allCachedCompanyTaxes.filter(function (e) {
                return e.taxTypeCode !== _model__WEBPACK_IMPORTED_MODULE_5__["TaxTypeCode"].Federal && e.stateCode === companyStateTaxes.state;
            });
            // Get all available company taxes with updated ones taking priority then build the EIN map
            var allCompanyTaxes = _this.mergeAndFlattenAllCompanyTaxes(companyTaxes, taxes);
            var einMap = _this.buildTaxesEinMap(company.fein, allCompanyTaxes);
            // Set the EINs of the taxes
            _this.setEinValues(companyTaxes, einMap);
            var companySavePack = _this.buildCompanySavePack(companyTaxes, cachedCompanyStateTaxes);
            return companySavePack;
        }), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_4__["tag"])('getCompanyStateSavePack'));
    };
    /**
     * Merges the Taxes ViewModel.
     * It looks at cached taxes and adds missing taxes, updates changed taxes and removes taxes that are no longer present.
     * The result is a package containing 2 packages (EE and Company taxes), each with the 3 CUD operations.
     *
     * @param {ITaxes} taxes all the taxes
     */
    TaxSaveHelperService.prototype.getAllTaxesSavePack = function (taxes) {
        var _this = this;
        if (taxes == null || taxes === _tax_models__WEBPACK_IMPORTED_MODULE_9__["EMPTY_TAXES"]) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])([]);
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["combineLatest"])(this.sessionService.currentCompany$, this.companyTaxService.entities$, this.employeeTaxService.entities$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (_a) {
            var company = _a[0], allCachedCompanyTaxes = _a[1], allCachedEmployeeTaxes = _a[2];
            // Get all the company and employee taxes
            var allCompanyTaxes = taxes.
                companyFederalTaxes.taxes.concat(taxes.companyStateTaxes.reduce(function (acc, stateTaxes) {
                stateTaxes.taxes.forEach(function (t) {
                    acc.push(t);
                });
                return acc;
            }, []));
            var allEmployeeTaxes = taxes.employeeTaxes.reduce(function (acc, empTaxes) {
                empTaxes.taxes.forEach(function (t) {
                    acc.push(t);
                });
                return acc;
            }, []);
            // Ein map
            var einMap = _this.buildTaxesEinMap(company.fein, allCompanyTaxes);
            // Set the EINs of the taxes
            _this.setEinValues(allCompanyTaxes, einMap);
            var empSavePack = _this.buildEmployeeSavePack(allEmployeeTaxes, allCachedEmployeeTaxes);
            var companySavePack = _this.buildCompanySavePack(allCompanyTaxes, allCachedCompanyTaxes);
            return [companySavePack, empSavePack];
        }), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_4__["tag"])('getAllTaxesSavePack'));
    };
    /**
     * Saves a collection of TaxSavePackage[] unless account is readOnly
     * @param packs An array of TaxSavePackages
     */
    TaxSaveHelperService.prototype.saveTaxPacks = function (packs) {
        var _this = this;
        return this.sessionService.readOnly$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (readOnly) { return readOnly ? Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(true) : _this.saveTaxPacks_(packs); }));
    };
    TaxSaveHelperService.prototype.saveTaxPacks_ = function (packs) {
        var changes = [];
        packs.forEach(function (pack) {
            if (!!pack.newTaxes && pack.newTaxes.length > 0) {
                changes.push(_core_utils__WEBPACK_IMPORTED_MODULE_0__["changeItemFactory"].add(pack.modelType, pack.newTaxes));
            }
            if (!!pack.updatedTaxes && pack.updatedTaxes.length > 0) {
                changes.push(_core_utils__WEBPACK_IMPORTED_MODULE_0__["changeItemFactory"].update(pack.modelType, pack.updatedTaxes));
            }
            if (!!pack.removedTaxes && pack.removedTaxes.length > 0) {
                // isRemoved is a special remove
                var actuallyRemoved = pack.removedTaxes.reduce(function (acc, element) {
                    if (element.isRemoved === false) {
                        element.isRemoved = true;
                        acc.push(element);
                    }
                    return acc;
                }, []);
                if (actuallyRemoved.length > 0) {
                    changes.push(_core_utils__WEBPACK_IMPORTED_MODULE_0__["changeItemFactory"].update(pack.modelType, actuallyRemoved));
                }
            }
        });
        return changes.length === 0
            ? Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(true)
            : this.entityCacheDispatcher.saveEntities({ changes: changes }, this.saveTaxUrl).pipe(Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_4__["tag"])('saveTaxPacks'), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function () { return true; }));
    };
    TaxSaveHelperService.prototype.buildCompanySavePack = function (companyTaxes, cachedCompanyTaxes) {
        var _this = this;
        var newTaxes = [];
        var updatedTaxes = [];
        var removeTaxes = [];
        // Company taxes
        // Merge the taxes with there cached counterpart or create new cached taxes
        companyTaxes.forEach(function (companyTax) {
            var modifiedTax = companyTax.getTax();
            var cachedCompanyStateTax = cachedCompanyTaxes.find(function (t) { return t.id === modifiedTax.id; });
            // General company tax rules
            _this.interceptCompanyTaxEdit(modifiedTax, cachedCompanyStateTax);
            if (cachedCompanyStateTax) {
                // Update tax
                var uTax = Object.assign({}, cachedCompanyStateTax, modifiedTax, {
                    id: cachedCompanyStateTax.id,
                    companyId: cachedCompanyStateTax.companyId,
                    mtsTaxCode: cachedCompanyStateTax.mtsTaxCode
                });
                if (Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__["areDifferent"])(uTax, cachedCompanyStateTax, 'Company Tax')) {
                    updatedTaxes.push(uTax);
                }
            }
            else {
                // Add new tax
                newTaxes.push(modifiedTax);
            }
        });
        // Taxes that are no longer needed, removed them
        cachedCompanyTaxes
            .filter(function (t) { return companyTaxes.every(function (upt) { return upt.id !== t.id; }); })
            .forEach(function (t) { return removeTaxes.push(t); });
        return {
            modelType: 'CompanyTax',
            newTaxes: newTaxes,
            updatedTaxes: updatedTaxes,
            removedTaxes: removeTaxes
        };
    };
    TaxSaveHelperService.prototype.buildEmployeeSavePack = function (employeeTaxes, cachedEmployeeTaxes) {
        var _this = this;
        var newTaxes = [];
        var updatedTaxes = [];
        var removeTaxes = [];
        employeeTaxes.forEach(function (employeeTax) {
            var modifiedTax = employeeTax.getTax();
            var cachedEmployeeTax = cachedEmployeeTaxes.find(function (t) { return t.id === modifiedTax.id; });
            // General company tax rules
            _this.interceptEmployeeTaxEdit(modifiedTax, cachedEmployeeTax);
            if (cachedEmployeeTax) {
                // Update tax
                var uTax = Object.assign({}, cachedEmployeeTax, modifiedTax, {
                    id: cachedEmployeeTax.id,
                    employeeId: cachedEmployeeTax.employeeId,
                    companyId: cachedEmployeeTax.companyId,
                    mtsTaxCode: cachedEmployeeTax.mtsTaxCode
                });
                if (Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__["areDifferent"])(uTax, cachedEmployeeTax)) {
                    updatedTaxes.push(uTax);
                }
            }
            else {
                // Add new tax
                newTaxes.push(modifiedTax);
            }
        });
        // Taxes that are no longer needed, removed them
        cachedEmployeeTaxes
            .filter(function (t) { return employeeTaxes.every(function (upt) { return upt.id !== t.id; }); })
            .forEach(function (t) { return removeTaxes.push(t); });
        return {
            modelType: 'EmployeeTax',
            newTaxes: newTaxes,
            updatedTaxes: updatedTaxes,
            removedTaxes: removeTaxes
        };
    };
    TaxSaveHelperService.prototype.interceptCompanyTaxEdit = function (newVal, oldVal) {
        if (newVal.appliedForEin) {
            newVal.ein = '';
        }
        newVal.isRemoved = false;
    };
    TaxSaveHelperService.prototype.interceptEmployeeTaxEdit = function (newVal, oldVal) {
        newVal.isRemoved = false;
    };
    TaxSaveHelperService.prototype.mergeAndFlattenAllCompanyTaxes = function (otherTaxes, taxes) {
        var allTaxesWithBehaviors = taxes.companyFederalTaxes.taxes.concat(taxes.companyStateTaxes.reduce(function (acc, stateTaxes) {
            stateTaxes.taxes.forEach(function (t) {
                acc.push(t);
            });
            return acc;
        }, []));
        return allTaxesWithBehaviors.reduce(function (acc, tax) {
            if (acc.every(function (t) { return t.id !== tax.id; })) {
                acc.push(tax);
            }
            return acc;
        }, otherTaxes.slice());
    };
    TaxSaveHelperService.prototype.setEinValues = function (taxes, einMap) {
        taxes.forEach(function (t) {
            var einVal = einMap[t.mtsTaxCode];
            if (einVal != null) {
                t.ein = einVal.ein;
                t.appliedForEin = einVal.appliedForEin;
            }
        });
    };
    TaxSaveHelperService.prototype.buildTaxesEinMap = function (fein, allCompanyTaxes) {
        var dependentTaxes = [];
        // These taxes are the correct ein codes based on the useEINFromCode property
        var mainTaxEinMap = {};
        // Seed root EINs, either we know them or they do not depend on any other tax (root)
        allCompanyTaxes.forEach(function (companyTax) {
            if (companyTax.taxTypeCode === _model__WEBPACK_IMPORTED_MODULE_5__["TaxTypeCode"].Federal) {
                mainTaxEinMap[companyTax.mtsTaxCode] = { ein: fein, appliedForEin: false };
                return;
            }
            if (companyTax.behavior.useEINFromCode == null) {
                mainTaxEinMap[companyTax.mtsTaxCode] = { ein: companyTax.ein, appliedForEin: companyTax.appliedForEin };
                return;
            }
            dependentTaxes.push(companyTax);
        });
        // Now for dependent taxes, other taxes that are non root
        var dependentTaxEinMap = {};
        dependentTaxes.forEach(function (dependentTax) {
            var mainTax = mainTaxEinMap[dependentTax.behavior.useEINFromCode] || dependentTax;
            dependentTaxEinMap[dependentTax.mtsTaxCode] = { ein: mainTax.ein, appliedForEin: mainTax.appliedForEin };
        });
        return Object.assign(mainTaxEinMap, dependentTaxEinMap);
    };
    TaxSaveHelperService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_11__["defineInjectable"]({ factory: function TaxSaveHelperService_Factory() { return new TaxSaveHelperService(_angular_core__WEBPACK_IMPORTED_MODULE_11__["inject"](_entity_entity_services_company_tax_service__WEBPACK_IMPORTED_MODULE_6__["CompanyTaxService"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["inject"](_entity_entity_services_employee_tax_service__WEBPACK_IMPORTED_MODULE_7__["EmployeeTaxService"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["inject"](ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityCacheDispatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["inject"](_store_session_session_service__WEBPACK_IMPORTED_MODULE_12__["SessionService"])); }, token: TaxSaveHelperService, providedIn: "root" });
    return TaxSaveHelperService;
}());



/***/ }),

/***/ "./src/app/core/services/tax-services/tax-selector.service.ts":
/*!********************************************************************!*\
  !*** ./src/app/core/services/tax-services/tax-selector.service.ts ***!
  \********************************************************************/
/*! exports provided: TaxCatalogKey, TaxSelectorService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxCatalogKey", function() { return TaxCatalogKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxSelectorService", function() { return TaxSelectorService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

var TaxCatalogKey;
(function (TaxCatalogKey) {
    /**
     * Note that FWhTax is the only tax that you will NOT find in the CompanyTaxes
     * Its done by design as that tax is the on the Company object itself.
     * However FWhTax IS available in EmployeeTaxes */
    TaxCatalogKey["FWhTax"] = "Fwh";
    TaxCatalogKey["Futa"] = "Futa";
    TaxCatalogKey["AnySWhTax"] = "ASwh";
    TaxCatalogKey["AnySuta"] = "ASuta";
})(TaxCatalogKey || (TaxCatalogKey = {}));
var TaxSelectorService = /** @class */ (function () {
    function TaxSelectorService() {
        this.selectorCatalog = {};
        this.selectorCatalog[TaxCatalogKey.FWhTax] = {
            select: function (taxes) { return taxes.find(function (t) { return t.mtsTaxCode === 'FE0000-001'; }); }
        };
        this.selectorCatalog[TaxCatalogKey.Futa] = {
            select: function (taxes) { return taxes.find(function (t) { return t.mtsTaxCode === 'FE0000-010'; }); }
        };
        this.selectorCatalog[TaxCatalogKey.AnySWhTax] = {
            select: function (taxes) { return taxes.find(function (t) { return t.mtsTaxCode.endsWith('0000-001'); }); }
        };
        this.selectorCatalog[TaxCatalogKey.AnySuta] = {
            select: function (taxes) { return taxes.find(function (t) { return t.mtsTaxCode.endsWith('0000-010'); }); }
        };
    }
    TaxSelectorService.prototype.select = function (taxCatalogKey, taxes) {
        var selector = this.selectorCatalog[taxCatalogKey];
        if (selector == null) {
            return null;
        }
        return selector.select(taxes);
    };
    TaxSelectorService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"]({ factory: function TaxSelectorService_Factory() { return new TaxSelectorService(); }, token: TaxSelectorService, providedIn: "root" });
    return TaxSelectorService;
}());



/***/ }),

/***/ "./src/app/core/services/tax-services/tax-utils.ts":
/*!*********************************************************!*\
  !*** ./src/app/core/services/tax-services/tax-utils.ts ***!
  \*********************************************************/
/*! exports provided: isCompanyTaxValid, isEmployeeTaxValid, isCompanyTaxModified, isEmployeeTaxModified, isValidEin, isValidRate, isValidFilingStatus, isValidExemptReason, isValidWithholdAllowance, isValidExtraWithhold */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCompanyTaxValid", function() { return isCompanyTaxValid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEmployeeTaxValid", function() { return isEmployeeTaxValid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCompanyTaxModified", function() { return isCompanyTaxModified; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEmployeeTaxModified", function() { return isEmployeeTaxModified; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidEin", function() { return isValidEin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidRate", function() { return isValidRate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidFilingStatus", function() { return isValidFilingStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidExemptReason", function() { return isValidExemptReason; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidWithholdAllowance", function() { return isValidWithholdAllowance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidExtraWithhold", function() { return isValidExtraWithhold; });
/* harmony import */ var _app_shared_input_multi_mask_helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @app/shared/input/multi-mask-helper */ "./src/app/shared/input/multi-mask-helper.ts");

function isCompanyTaxValid(taxWithBehavior) {
    if (!taxWithBehavior.behavior.shouldShow) {
        // If the tax should not be shown and if the user has not touched it. Implicitly valid.
        if (!isCompanyTaxModified(taxWithBehavior)) {
            return true;
        }
    }
    if (taxWithBehavior.behavior.hasEin && taxWithBehavior.appliedForEin === false) {
        if (!isValidEin(taxWithBehavior)) {
            return false;
        }
    }
    if (taxWithBehavior.behavior.hasRate) {
        // If no rate is present and rate is require there is nothing we can check
        if (!isValidRate(taxWithBehavior)) {
            return false;
        }
    }
    return true;
}
function isEmployeeTaxValid(taxWithBehavior) {
    if (!taxWithBehavior.behavior.shouldShow) {
        // If the tax should not be shown and if the user has not touched it. Implicitly valid.
        if (!isEmployeeTaxModified(taxWithBehavior)) {
            return true;
        }
    }
    if (taxWithBehavior.behavior.hasFilingStatus) {
        if (!isValidFilingStatus(taxWithBehavior)) {
            return false;
        }
    }
    if (taxWithBehavior.behavior.hasExemptionReason) {
        if (!isValidExemptReason(taxWithBehavior)) {
            return false;
        }
    }
    if (taxWithBehavior.behavior.hasWithholding) {
        if (!isValidWithholdAllowance(taxWithBehavior) || !isValidExtraWithhold(taxWithBehavior)) {
            return false;
        }
    }
    return true;
}
function isCompanyTaxModified(tax) {
    return (tax.mtsTaxCode != null && tax.mtsTaxCode !== '') ||
        (tax.appliedForEin != null && tax.appliedForEin === true) ||
        (tax.rate != null) ||
        (tax.ubi != null && tax.ubi !== '') ||
        (tax.businessStartDate != null && tax.businessStartDate !== '');
}
function isEmployeeTaxModified(tax) {
    return (tax.filingStatus != null && tax.filingStatus !== '') ||
        (tax.extraWithholding != null && tax.extraWithholding !== 0) ||
        (tax.withholdingAllowance != null && tax.withholdingAllowance !== 0) ||
        (tax.exemptReasonCode != null && tax.exemptReasonCode !== '');
}
function isValidEin(taxWithBehavior) {
    if (taxWithBehavior.behavior.hasEin === false || taxWithBehavior.appliedForEin === true) {
        return true;
    }
    if (taxWithBehavior.behavior.taxEinFormats.length === 0) {
        // Unknown ein format but if we do not apply for it is still required
        return taxWithBehavior.ein != null && taxWithBehavior.ein.length > 0;
    }
    var maskHelper = new _app_shared_input_multi_mask_helper__WEBPACK_IMPORTED_MODULE_0__["MaskHelper"]();
    var formats = taxWithBehavior.behavior.taxEinFormats.map(function (e) { return e.format; });
    var validationResult = maskHelper.getClosestMask(taxWithBehavior.ein, formats, null);
    return validationResult.isExactMatch;
}
function isValidRate(taxWithBehavior) {
    // see also src\app\model\validation-metadata\sp-taxes-validation-metadata.ts
    // TODO why aren't we using the rules engine here?
    if (taxWithBehavior.rate === null || taxWithBehavior.rate === undefined) {
        return false;
    }
    // We have a value but we can't validate the range. We consider it as valid
    if (taxWithBehavior.behavior.rate == null) {
        return true;
    }
    // tslint:disable:triple-equals
    if (taxWithBehavior.rate == 0 && taxWithBehavior.behavior.rate.allowSubjectRateZero) {
        return true;
    }
    if (taxWithBehavior.rate < taxWithBehavior.behavior.rate.minAllowedRate) {
        return false;
    }
    if (taxWithBehavior.rate > taxWithBehavior.behavior.rate.maxAllowedRate) {
        return false;
    }
    return true;
}
function isValidFilingStatus(taxWithBehavior) {
    if (taxWithBehavior.behavior.filingStatuses == null || taxWithBehavior.behavior.filingStatuses.length === 0) {
        return true;
    }
    if (taxWithBehavior.filingStatus == null) {
        return false;
    }
    var filingStatusVal = taxWithBehavior.filingStatus.toLowerCase();
    if (taxWithBehavior.behavior.filingStatuses.every(function (e) { return e.code.toLowerCase() !== filingStatusVal; })) {
        return false;
    }
    return true;
}
function isValidExemptReason(taxWithBehavior) {
    if (taxWithBehavior.isExempt === false) {
        return true;
    }
    if (taxWithBehavior.exemptReasonCode == null || taxWithBehavior.exemptReasonCode === '') {
        return false;
    }
    return true;
}
function isValidWithholdAllowance(taxWithBehavior) {
    if (taxWithBehavior.withholdingAllowance == null || Number.isNaN(taxWithBehavior.withholdingAllowance)) {
        return false;
    }
    if (taxWithBehavior.withholdingAllowance < 0) {
        return false;
    }
    if (taxWithBehavior.withholdingAllowance > 25) {
        return false;
    }
    return true;
}
function isValidExtraWithhold(taxWithBehavior) {
    if (taxWithBehavior.extraWithholding == null || Number.isNaN(taxWithBehavior.extraWithholding)) {
        return false;
    }
    if (taxWithBehavior.extraWithholding < 0) {
        return false;
    }
    return true;
}


/***/ }),

/***/ "./src/app/core/services/tax-services/tax.service.ts":
/*!***********************************************************!*\
  !*** ./src/app/core/services/tax-services/tax.service.ts ***!
  \***********************************************************/
/*! exports provided: TaxService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxService", function() { return TaxService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs-spy/operators/tag */ "./node_modules/rxjs-spy/operators/tag.js");
/* harmony import */ var rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _core_services_busy_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core/services/busy.service */ "./src/app/core/services/busy.service.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _logger_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");











var taxApiUrl = _environment__WEBPACK_IMPORTED_MODULE_5__["environment"].spApiRoot + '/taxapi/taxes';
/**
 * Gets the raw data from the SurePayroll Tax service.
 */
var TaxService = /** @class */ (function () {
    function TaxService(http, busyService, logger) {
        this.http = http;
        this.busyService = busyService;
        this.logger = logger;
    }
    TaxService.prototype.validateAddresses = function (employeeId, homeAddress, workAddress) {
        var _this = this;
        if (homeAddress == null || workAddress == null) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])({
                id: employeeId,
                isValid: false,
                addressPairs: []
            });
        }
        var pairs = [
            {
                id: employeeId,
                workAddress: {
                    city: workAddress.city,
                    county: null,
                    state: workAddress.state,
                    zip: workAddress.zip,
                    addressLine1: workAddress.street1,
                    addressLine2: workAddress.street2
                },
                liveAddress: {
                    city: homeAddress.city,
                    county: null,
                    state: homeAddress.state,
                    zip: homeAddress.zip,
                    addressLine1: homeAddress.street1,
                    addressLine2: homeAddress.street2
                }
            }
        ];
        var loadData$ = this.http.post(taxApiUrl, pairs).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err) {
            _this.logger.error('Error retrieving taxes', err, pairs);
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])([]);
        }), 
        // If we get multiple sets back, the address pair is invalid
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            var isValid = res.length === 1;
            var suggestedAddresses = res.map(function (e) { return ({
                home: e.liveAddress,
                work: e.workAddress
            }); });
            return {
                id: employeeId,
                isValid: isValid,
                homeGeoCode: isValid ? suggestedAddresses[0].home.geoCode : '',
                homeDsCode: isValid ? suggestedAddresses[0].home.schoolDistrict : null,
                workGeoCode: isValid ? suggestedAddresses[0].work.geoCode : '',
                workDsCode: isValid ? suggestedAddresses[0].work.schoolDistrict : null,
                addressPairs: suggestedAddresses
            };
        }), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__["tag"])('TaxProviderService.validateAddresses'));
        return this.busyService.busy$('Loading tax data ...', loadData$);
    };
    TaxService.prototype.getAvailableTaxPairs = function (addressPairs) {
        var _this = this;
        var pairs = addressPairs
            .filter(function (pair) { return pair.homeGeoCode && pair.workGeoCode; })
            .map(function (pair) {
            var req = {
                id: pair.id,
                workAddress: {
                    geoCode: pair.workGeoCode
                },
                liveAddress: {
                    geoCode: pair.homeGeoCode
                }
            };
            // Do not send schoolDistrict or psdCode to taxes api if there not available as the api will crash
            if (pair.workSchoolDistrictCode != null) {
                req.workAddress.schoolDistrict = pair.workSchoolDistrictCode;
            }
            if (pair.workPsdCode != null) {
                req.workAddress.psdCode = pair.workPsdCode;
            }
            if (pair.homeSchoolDistrictCode != null) {
                req.liveAddress.schoolDistrict = pair.homeSchoolDistrictCode;
            }
            if (pair.homePsdCode != null) {
                req.liveAddress.psdCode = pair.homePsdCode;
            }
            return req;
        });
        if (pairs.length === 0) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])([]);
        }
        var loadData$ = this.http.post(taxApiUrl, pairs)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err) {
            _this.logger.error('Error retrieving taxes', err, pairs);
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])([]);
        }), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__["tag"])('TaxProviderService.getAvailableTaxPairs'));
        return this.busyService.busy$('Loading tax data ...', loadData$);
    };
    TaxService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_7__["defineInjectable"]({ factory: function TaxService_Factory() { return new TaxService(_angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_core_services_busy_service__WEBPACK_IMPORTED_MODULE_4__["BusyService"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_logger_service__WEBPACK_IMPORTED_MODULE_6__["LoggerService"])); }, token: TaxService, providedIn: "root" });
    return TaxService;
}());



/***/ }),

/***/ "./src/app/core/services/tin-check.service.ts":
/*!****************************************************!*\
  !*** ./src/app/core/services/tin-check.service.ts ***!
  \****************************************************/
/*! exports provided: TinCheckService, einLookupInterceptor, isBadFeinNumber, isGoodFeinNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TinCheckService", function() { return TinCheckService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "einLookupInterceptor", function() { return einLookupInterceptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBadFeinNumber", function() { return isBadFeinNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isGoodFeinNumber", function() { return isGoodFeinNumber; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @core/utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../store/session/session.service */ "./src/app/store/session/session.service.ts");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};











var tinCheckUrl = _environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiRoot + '/ein/lookup';
var TinCheckService = /** @class */ (function () {
    function TinCheckService(http, logger, sessionService) {
        this.http = http;
        this.logger = logger;
        // Cache of TinCheck Responses accumulated in this user session.
        this.responses = {};
        this._tinCheckCount = 0;
        this.readOnly$ = sessionService.readOnly$;
    }
    /**
     * Check with the TinCheck service if an FEIN/Legal Name combination is valid
     * @returns Terminating observable of the TinCheck service response.
     * Must subscribe but need not unsubscribe.
     */
    TinCheckService.prototype.check = function (fein, legalNameRaw) {
        var _this = this;
        var legalName = Object(_core_utils__WEBPACK_IMPORTED_MODULE_5__["sanitizeLegalName"])(legalNameRaw);
        if (isBadFeinNumber(fein) || !legalName) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(new Error("Bad FEIN \"" + fein + "\" or empty legal name"));
        }
        // Check the cached responses first.
        var key = fein + '|' + legalName;
        var cachedResponse = this.responses[key];
        if (cachedResponse) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(__assign({}, cachedResponse, { cached: true }));
        }
        var mockEinResponse = einLookupInterceptor(fein, legalName);
        if (mockEinResponse) {
            mockEinResponse.name = sanitizeXmlEntities(mockEinResponse.name);
            var tinCheckResponse = this.toTinCheckResponse(fein, legalName, mockEinResponse);
            this.cacheTinCheckResponse(tinCheckResponse);
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(tinCheckResponse);
        }
        return this.readOnly$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (readOnly) {
            if (readOnly) {
                throw new Error('Cannot verify FEIN in read-only mode');
            }
            return _this.callTinCheckService(fein, legalName, key);
        }));
    };
    TinCheckService.prototype.callTinCheckService = function (fein, legalName, cacheKey) {
        var _this = this;
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('ein', fein)
            .set('name', legalName);
        return this.http
            .get(tinCheckUrl, { params: params })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (r) { return _this.toTinCheckResponse(fein, legalName, r); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function (r) {
            _this.cacheTinCheckResponse(r);
            if (r.serviceUnavailable) {
                return; // do not count attempt
            }
            _this._tinCheckCount++; // bump count of successful TinCheck service calls
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (error) {
            _this.logger.error(error);
            var res = {
                fein: fein,
                originalNameProvided: legalName,
                matchedName: null,
                verified: false,
                invalid: false,
                error: true,
                serviceUnavailable: false,
                serviceResponse: error
            };
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(res);
        }));
    };
    TinCheckService.prototype.cacheTinCheckResponse = function (r) {
        if (r.serviceUnavailable) {
            return; // Do not cache "service unavailable" responses. Want to retry them.
        }
        // cache the converted response.
        var cacheKey = r.fein + '|' + r.originalNameProvided;
        r.matchedName = sanitizeXmlEntities(r.matchedName);
        this.responses[cacheKey] = r;
        if (!r.verified && r.matchedName) {
            //  also cache what the service says is the proper matching legal name
            var key2 = r.fein + '|' + r.matchedName;
            this.responses[key2] = {
                fein: r.fein,
                originalNameProvided: r.originalNameProvided,
                matchedName: r.matchedName,
                verified: true,
                invalid: false,
                error: false,
                serviceUnavailable: false,
                serviceResponse: r.serviceResponse
            };
        }
    };
    // Just in case and for testing
    TinCheckService.prototype.clearCachedResponses = function () {
        this.responses = {};
    };
    Object.defineProperty(TinCheckService.prototype, "tinCheckCount", {
        get: function () {
            return this._tinCheckCount;
        },
        enumerable: true,
        configurable: true
    });
    TinCheckService.prototype.toTinCheckResponse = function (fein, originalNameProvided, r) {
        var verified = r.matchStatus === 'Exact';
        var invalid = r.matchStatus === 'Disallowed';
        var serviceUnavailable = r.matchStatus === 'ServiceUnavailable';
        var possibleMatch = (r.matchStatus === 'Partial' || r.matchStatus === 'Exact' || r.matchStatus === 'Error') ? r.name : '';
        var res = {
            fein: fein,
            originalNameProvided: originalNameProvided,
            matchedName: possibleMatch,
            verified: verified,
            invalid: invalid,
            error: false,
            serviceUnavailable: serviceUnavailable,
            serviceResponse: r
        };
        return res;
    };
    TinCheckService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_7__["defineInjectable"]({ factory: function TinCheckService_Factory() { return new TinCheckService(_angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_4__["LoggerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_store_session_session_service__WEBPACK_IMPORTED_MODULE_8__["SessionService"])); }, token: TinCheckService, providedIn: "root" });
    return TinCheckService;
}());

function sanitizeXmlEntities(text) {
    if (!text) {
        return null;
    }
    return text.replace('&amp;', '&')
        .replace('&amp;', '&') // Repeated for double encoding in TIN CHECK responses
        .replace('&apos;', '\'')
        .replace('&quote;', '"')
        .replace('&lt;', '<')
        .replace('&gt;', '>');
}
/**
 * Intercept well-known test FEINs and emulate the appropriate TinCheck server response data
 * @param ein: The FEIN
 * @param name: The candidate legal name
 * @returns Simulated TinCheck Service response data if intercepted, else null
 * Intercepted eins:
 *   11-1111111: 'partial' match,
 *   12-3456789: 'error' match,
 *   22-2222222: 'exact' match,
 *   33-3333333: 'disallowed' match,
 *   44-4444444: 'serviceUnavailable' match,
 *   55-5555555: 'none' match
 */
function einLookupInterceptor(ein, name) {
    if (!ein || !name) {
        return null;
    }
    switch (ein) {
        // Dev, Test, and Stage environments use these mocks
        case '11-1111111':
            return {
                ein: ein,
                name: name.substr(0, 25) + ' TEST',
                matchStatus: 'Partial'
            };
        // Known to return matchStatus:'Error'
        case '12-3456789':
            return {
                ein: ein,
                name: 'NOT A REAL COMPANY',
                matchStatus: 'Error'
            };
        case '22-2222222':
            return {
                ein: ein,
                name: name,
                matchStatus: 'Exact'
            };
        case '33-3333333':
            return {
                ein: ein,
                name: '',
                matchStatus: 'Disallowed'
            };
        case '44-4444444':
            return {
                ein: ein,
                name: '',
                matchStatus: 'ServiceUnavailable'
            };
        case '55-5555555':
            return {
                ein: ein,
                name: '',
                matchStatus: 'None'
            };
        default:
            return null;
    }
}
/**
 * Return true if the fein value is a badly-formed FEIN number.
 */
function isBadFeinNumber(fein) {
    if (fein === void 0) { fein = ''; }
    return !isGoodFeinNumber(fein);
}
/**
 * Return true if the fein value is a well-formed FEIN number although it might not be a real FEIN.
 */
function isGoodFeinNumber(fein) {
    if (fein === void 0) { fein = ''; }
    return fein && /\d{2}-\d{7}/.test(fein);
}


/***/ }),

/***/ "./src/app/core/services/title.service.ts":
/*!************************************************!*\
  !*** ./src/app/core/services/title.service.ts ***!
  \************************************************/
/*! exports provided: TitleService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TitleService", function() { return TitleService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");








var TitleService = /** @class */ (function () {
    function TitleService(router, ngTitle) {
        var _this = this;
        this.router = router;
        this.ngTitle = ngTitle;
        this.routerEventsSubscription = router.events
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (event) { return event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_1__["NavigationEnd"]; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (event) { return _this.router.routerState.root; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (route) {
            while (route.firstChild) {
                route = route.firstChild;
            }
            return route;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (route) { return route.outlet === 'primary'; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function (route) { return route.data; }))
            .subscribe(function (data) { return _this.ngTitle.setTitle("SP " + (data['title'] || '')); });
    }
    TitleService.prototype.ngOnDestroy = function () {
        this.routerEventsSubscription.unsubscribe();
    };
    TitleService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"]({ factory: function TitleService_Factory() { return new TitleService(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["Title"])); }, token: TitleService, providedIn: "root" });
    return TitleService;
}());



/***/ }),

/***/ "./src/app/core/services/toast.service.ts":
/*!************************************************!*\
  !*** ./src/app/core/services/toast.service.ts ***!
  \************************************************/
/*! exports provided: ToastService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToastService", function() { return ToastService; });
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _core_e2e_check__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @core/e2e-check */ "./src/app/core/e2e-check.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");






var ToastService = /** @class */ (function () {
    function ToastService(logger, toastr) {
        this.logger = logger;
        this.toastr = toastr;
    }
    ToastService.prototype.openSnackBar = function (message, action) {
        this.show(message, action, 'success');
    };
    ToastService.prototype.show = function (message, title, type) {
        var _this = this;
        this.logger.log(message + " - " + title);
        if (_core_e2e_check__WEBPACK_IMPORTED_MODULE_1__["isE2E"]) {
            return; // no toast during E2E tests
        }
        // setTimeout guards against `ExpressionChangedAfterItHasBeenCheckedError`
        setTimeout(function () {
            _this.toastr.show(message, title, {
                timeOut: 2000
            }, type);
        }, 0);
    };
    ToastService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_3__["defineInjectable"]({ factory: function ToastService_Factory() { return new ToastService(_angular_core__WEBPACK_IMPORTED_MODULE_3__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_2__["LoggerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["inject"](ngx_toastr__WEBPACK_IMPORTED_MODULE_0__["ToastrService"])); }, token: ToastService, providedIn: "root" });
    return ToastService;
}());



/***/ }),

/***/ "./src/app/core/sp-route-reuse-strategy.ts":
/*!*************************************************!*\
  !*** ./src/app/core/sp-route-reuse-strategy.ts ***!
  \*************************************************/
/*! exports provided: SpRouteReuseStrategy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpRouteReuseStrategy", function() { return SpRouteReuseStrategy; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/**
 * Router route re-use strategy that NEVER reuses a component instance.
 */
var SpRouteReuseStrategy = /** @class */ (function (_super) {
    __extends(SpRouteReuseStrategy, _super);
    function SpRouteReuseStrategy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SpRouteReuseStrategy.prototype.shouldDetach = function (route) {
        return false;
    };
    SpRouteReuseStrategy.prototype.store = function (route, handle) {
    };
    SpRouteReuseStrategy.prototype.shouldAttach = function (route) {
        return false;
    };
    SpRouteReuseStrategy.prototype.retrieve = function (route) {
        return null;
    };
    SpRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {
        return false;
    };
    return SpRouteReuseStrategy;
}(_angular_router__WEBPACK_IMPORTED_MODULE_0__["RouteReuseStrategy"]));



/***/ }),

/***/ "./src/app/core/utils/address-utils.ts":
/*!*********************************************!*\
  !*** ./src/app/core/utils/address-utils.ts ***!
  \*********************************************/
/*! exports provided: addressToString, isComplete, formatZip, zipFirstDigits */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addressToString", function() { return addressToString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isComplete", function() { return isComplete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatZip", function() { return formatZip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zipFirstDigits", function() { return zipFirstDigits; });
function addressToString(address) {
    var _a = address.street1, street1 = _a === void 0 ? '' : _a, _b = address.street2, street2 = _b === void 0 ? '' : _b, _c = address.city, city = _c === void 0 ? '' : _c, _d = address.state, state = _d === void 0 ? '' : _d, _e = address.zip, zip = _e === void 0 ? '' : _e;
    var result = (street2
        ? street1 + ", " + street2 + ", " + city + ", " + state + " " + zip
        : street1 + ", " + city + ", " + state + " " + zip).replace(/\s\s+/g, ' ');
    return result === ', , ' ? '' : result;
}
/**
 * If the address has Street, City, State and Zip
 * are set and syntactically valid
 */
function isComplete(address) {
    return address.street1 != null && address.street1 !== '' &&
        address.city != null && address.city !== '' &&
        address.state != null && address.state.length === 2 &&
        address.zip != null && address.zip.length > 4;
}
function formatZip(address) {
    var zip = address.zip;
    if (zip.length === 9) {
        var separatorOffset = 5;
        return zip.substring(0, separatorOffset) + '-' + zip.substring(separatorOffset);
    }
    return zip;
}
function zipFirstDigits(address) {
    var separatorOffset = 5;
    return address.zip.substring(0, separatorOffset);
}


/***/ }),

/***/ "./src/app/core/utils/async-await.ts":
/*!*******************************************!*\
  !*** ./src/app/core/utils/async-await.ts ***!
  \*******************************************/
/*! exports provided: getFirst, getAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFirst", function() { return getFirst; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAll", function() { return getAll; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* Utilities for async await syntax */


/**
 * Return a promise for the first item emitted from an Observable.
 *
 * @param obs An observable to watch
 * @returns Promise of emitted value
 *
 * Helpful when using async await style
 *
 * @example
 *
 * async someFn() {
 *   try {
 *     const data = await getFirst(this.data$);
 *     // do something with the data
 *   } catch (error) {
 *     // handle error
 *   }
 * }
 *
 * Primarily for use in unit tests of a service's observable properties
 *
 * // jasmine test with async await
 *
 * // Mock a service dependency
 * class testDependency {
 *   testSource = new Subject();
 *   source$ = testSource.asObservable() // service requires this observable
 * }
 *
 * let dependency: TestDependency;
 * let service: ServiceToTest;
 *
 * beforeEach(() => {
 *   dependency = new TestDependency();
 *
 *   // create service with test dependency that you control
 *   service = new service(dependency as Dependency)
 * })
 *
 * it('should ...', async () => {
 *   const testData = ... // source initial state
 *   const expected = ... // service's emitted state
 *
 *   // emit test value
 *   dependency.testSource.next(testData);
 *
 *   const actual = await getFirst(service.someProp$);
 *   expect(actual).toEqual(expected);
 * });
 */
function getFirst(obs) {
    return obs.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])()).toPromise();
}
/**
 * Return a promise of array holding all items emitted by a terminating Observable.
 * Completes when the observable terminates.
 *
 *
 * @param obs An observable to watch
 * @param [act] optional function for executing a sequence of test actions.
 * If defined, getAll() calls this function with a notifier subject before returning the promise.
 *
 * @returns Promise array of emitted values
 *
 * Helpful for gathering emitted observable values using async await style
 *
 * @example
 *
 * async someFn() {
 *   try {
 *     // assuming this.data$ completes on its own
 *     const data = await getAll(this.data$);
 *     // do something with the data
 *   } catch (error) {
 *     // handle error
 *   }
 * }
 *
 * Primarily for use in unit tests of a service's observable properties
 * when you want to verify a sequence of observable values from a property
 *
 * // jasmine test with async await
 *
 * // Mock a service dependency
 * class testDependency {
 *   testSource = new Subject();
 *   source$ = testSource.asObservable() // service requires this observable
 * }
 *
 * let dependency: TestDependency;
 * let service: ServiceToTest;
 *
 * beforeEach(() => {
 *   dependency = new TestDependency();
 *
 *   // create service with test dependency that you control
 *   service = new service(dependency as Dependency)
 * })
 *
 * it('should ...', async () => {
 *
 *   // expected values emitted by service property observable
 *   const expected: any[] = [...];
 *
 *   // Test actions as a function with notifier
 *   function act(stop: Subject<any>) {
 *     dependency.testSource.next(...);
 *     dependency.testSource.next(null); // service property won't emit
 *     dependency.testSource.next(...);
 *     stop.next();
 *   }
 *
 *   const actual = await getAll(service.someObservableProperty$, act);
 *   expect(actual.length).toBe(2);
 *   expect(actual[0]).toEqual(expected[0]);
 *   expect(actual[1]).toEqual(expected[1]);
 * );
 *
 * If you need a delay between action steps, consider the following example
 *
 *   const wait = (delayMs = 1) => timer(delayMs).toPromise();
 *
 *   // Test actions with delays between steps
 *   async function act(stop: Subject<any>) {
 *     dependency.testSource.next(...);
 *     await wait();
 *     dependency.testSource.next(null); // service property won't emit
 *     await wait();
 *     dependency.testSource.next(...);
 *     await wait();
 *     stop.next();
 *   }
 */
function getAll(obs, act) {
    // notifier observable that can complete the `obs` observable
    var stop = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
    var promise = obs.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["takeUntil"])(stop), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["reduce"])(function (acc, current) { return acc.concat(current); }, [])).toPromise();
    if (act) {
        act(stop);
    }
    return promise;
}


/***/ }),

/***/ "./src/app/core/utils/change-item-factory.ts":
/*!***************************************************!*\
  !*** ./src/app/core/utils/change-item-factory.ts ***!
  \***************************************************/
/*! exports provided: ChangeItemFactory, changeItemFactory, toUpdate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChangeItemFactory", function() { return ChangeItemFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "changeItemFactory", function() { return changeItemFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toUpdate", function() { return toUpdate; });
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./src/app/core/utils/utils.ts");


/**
 * Create a ChangeItem for a multi-entity save
 * Similar to the one in ngrx-data.
 * Extended with ability to take entity args
 * and to clone and strip the prototype from the entities in the ChangeItem.
 */
var ChangeItemFactory = /** @class */ (function () {
    function ChangeItemFactory() {
    }
    ChangeItemFactory.prototype.add = function (entityName, entities) {
        entities = Array.isArray(entities) ? entities : entities ? [entities] : [];
        entities = entities.map(function (e) { return Object(_utils__WEBPACK_IMPORTED_MODULE_1__["raw"])(e); });
        return { entityName: entityName, op: ngrx_data__WEBPACK_IMPORTED_MODULE_0__["ChangeSetOperation"].Add, entities: entities };
    };
    ChangeItemFactory.prototype.delete = function (entityName, entitiesOrIds) {
        var data = Array.isArray(entitiesOrIds) ? entitiesOrIds : entitiesOrIds ? [entitiesOrIds] : [];
        var ids = data.map(function (e) { return typeof e === 'string' ? e : e.id; });
        return { entityName: entityName, op: ngrx_data__WEBPACK_IMPORTED_MODULE_0__["ChangeSetOperation"].Delete, entities: ids };
    };
    ChangeItemFactory.prototype.update = function (entityName, entities) {
        var updates = entities
            ? (Array.isArray(entities) ? entities : [entities]).map(function (e) { return toUpdate(Object(_utils__WEBPACK_IMPORTED_MODULE_1__["raw"])(e)); })
            : [];
        return { entityName: entityName, op: ngrx_data__WEBPACK_IMPORTED_MODULE_0__["ChangeSetOperation"].Update, entities: updates };
    };
    ChangeItemFactory.prototype.upsert = function (entityName, entities) {
        entities = Array.isArray(entities) ? entities : entities ? [entities] : [];
        entities = entities.map(function (e) { return Object(_utils__WEBPACK_IMPORTED_MODULE_1__["raw"])(e); });
        return { entityName: entityName, op: ngrx_data__WEBPACK_IMPORTED_MODULE_0__["ChangeSetOperation"].Upsert, entities: entities };
    };
    return ChangeItemFactory;
}());

var changeItemFactory = new ChangeItemFactory();
/**
 * Convert an SP entity (or part of one) into an ngrx-data Update<T> object
 */
function toUpdate(entity) {
    return { id: entity.id, changes: entity };
}


/***/ }),

/***/ "./src/app/core/utils/checkdate-utils.ts":
/*!***********************************************!*\
  !*** ./src/app/core/utils/checkdate-utils.ts ***!
  \***********************************************/
/*! exports provided: getFirstAllowedCheckDate, currentCentralOffset, getNgbDate, isValidDate, getFirstDayOfMonth, getDaysInMonth, getDateFromNgb, getMoment, ngbDateToString, formatDate, getNgbDateFromString, getDateWithOffset, determineEndOfMonthStatus, determineEndOfQuarterStatus */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFirstAllowedCheckDate", function() { return getFirstAllowedCheckDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "currentCentralOffset", function() { return currentCentralOffset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNgbDate", function() { return getNgbDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidDate", function() { return isValidDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFirstDayOfMonth", function() { return getFirstDayOfMonth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDaysInMonth", function() { return getDaysInMonth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDateFromNgb", function() { return getDateFromNgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMoment", function() { return getMoment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ngbDateToString", function() { return ngbDateToString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDate", function() { return formatDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNgbDateFromString", function() { return getNgbDateFromString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDateWithOffset", function() { return getDateWithOffset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "determineEndOfMonthStatus", function() { return determineEndOfMonthStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "determineEndOfQuarterStatus", function() { return determineEndOfQuarterStatus; });
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moment-timezone */ "./node_modules/moment-timezone/index.js");
/* harmony import */ var moment_timezone__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moment_timezone__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _app_shared_input_date_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/shared/input/date-util */ "./src/app/shared/input/date-util.ts");
/* harmony import */ var _datenum_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./datenum-enum */ "./src/app/core/utils/datenum-enum.ts");




/**
 * Get the first allowed check date from today or the given date (if current date is given)
 * @param holidaysDateTime Set of holidays as an array of milliseconds
 * @param currentDate Optional parameter for passing in the current date
 */
function getFirstAllowedCheckDate(holidaysDateTime, currentDate) {
    var tempDate;
    if (currentDate) {
        tempDate = currentDate;
    }
    else {
        tempDate = new Date();
    }
    var utcDate = new Date(tempDate.getTime() + (tempDate.getTimezoneOffset() * 60000));
    var centralTimeDate = new Date(utcDate.getTime() - (currentCentralOffset() * 60000));
    var standardizedDate = new Date(centralTimeDate.getFullYear(), centralTimeDate.getMonth(), centralTimeDate.getDate());
    var businessDays;
    if (standardizedDate.getDay() === 6 || standardizedDate.getDay() === 0) {
        businessDays = 3; // Since its a weekend
    }
    else {
        businessDays = centralTimeDate.getHours() > 15 ? 3 : 2;
    }
    while (businessDays > 0) {
        standardizedDate.setDate(standardizedDate.getDate() + 1);
        if (standardizedDate.getDay() !== 0 && standardizedDate.getDay() !== 6) {
            businessDays--;
            if (holidaysDateTime !== undefined
                && holidaysDateTime.includes(standardizedDate.getTime())) {
                businessDays++;
            }
        }
    }
    return standardizedDate;
}
/*
 *  Get the Current Central time offset for Daylight savings based on isDST()
 *  Returning 5 hours or 6 hours based on that
 */
function currentCentralOffset() {
    return moment_timezone__WEBPACK_IMPORTED_MODULE_0__().tz('America/Chicago').isDST() ? 300 : 360;
}
/**
 * Get the NgbDate object for the given date
 * @param date The date to convert to NgbDate
 */
function getNgbDate(date) {
    if (isValidDate(date)) {
        return new _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbDate"](date.getFullYear(), date.getMonth() + 1, date.getDate());
    }
    else {
        return null;
    }
}
/**
 * Gets the validity of the date
 * Returns true if the given date is valid, otherwise false
 * @param date The date to check
 */
function isValidDate(date) {
    return date instanceof Date && !isNaN(date.getTime());
}
/**
 * Get the first day Date object of the month
 * @param year year the month is in
 * @param month the month that we want to get the first day for
 */
function getFirstDayOfMonth(year, month) {
    return new Date(year, month, 1);
}
/**
 * Get the number of days in the given month
 * @param year year the month is in
 * @param month the month in question
 */
function getDaysInMonth(year, month) {
    return new Date(year, month + 1, 0).getDate();
}
/**
 * Get the Date for the given NgbDate object
 * @param date The NgbDate to convert to Date
 */
function getDateFromNgb(date) {
    if (date && date.day && date.month && date.year
        && !isNaN(date.day) && !isNaN(date.month) && !isNaN(date.year)) {
        return new Date(date.year, date.month - 1, date.day);
    }
    else {
        return null;
    }
}
/**
 * Return the moment object for the given NgbDate
 * @param date The given NgbDate
 */
function getMoment(date) {
    // NgbDates use 1 for Jan, Moment uses 0, must subtract 1 month for proper date conversion
    // (doing this through moment itself doesn't work properly)
    var ngbObj = JSON.parse(JSON.stringify(date));
    var newMoment = moment_timezone__WEBPACK_IMPORTED_MODULE_0__();
    if (ngbObj) {
        ngbObj.month--;
        newMoment.month(ngbObj.month);
        newMoment.date(ngbObj.day);
        newMoment.year(ngbObj.year);
    }
    return newMoment;
}
/**
 * Convert the given NgbDate to a string in ISO Chicago
 * @param date The date to convert
 */
function ngbDateToString(date) {
    if (date) {
        var newMoment = getMoment(date);
        // Convert date to "Mon Feb 01" format
        if (newMoment.isValid()) {
            return _app_shared_input_date_util__WEBPACK_IMPORTED_MODULE_2__["DateUtil"].toISOChicago(newMoment.format('L'));
        }
    }
    return '';
}
/**
 * Convert date to 'ddd MMM DD' string format
 * Ex: "Mon Feb 01"
 * @param date The NgbDate to convert
 */
function formatDate(date) {
    if (date) {
        var newMoment = getMoment(date);
        // Convert date to "Mon Feb 01" format
        if (newMoment.isValid()) {
            return newMoment.format('ddd MMM DD');
        }
        else {
            return '';
        }
    }
}
/**
 * Get the NgbDate from the date in string format.
 * Return null if date is invalid
 */
function getNgbDateFromString(date) {
    var ngbDate = null;
    var tempDate = new Date(date);
    if (tempDate && !isNaN(tempDate.getTime()) && date != null) {
        ngbDate = getNgbDate(tempDate);
    }
    return ngbDate;
}
/**
 * Parse a string and return a date object adjusted with the offset
 * @param dateString The date in string format to parse
 */
function getDateWithOffset(dateString) {
    if (dateString) {
        var date = new Date(dateString);
        var userTimezoneOffset = date.getTimezoneOffset() * 60000;
        return new Date(date.getTime() + userTimezoneOffset);
    }
    else {
        return null;
    }
}
/**
 * Determine End of Month Status of a date
 * If date is last day of month and 31st, then return true
 * Else if date is last day of month and 30th, or 28th(feb), then return null
 * Else return false since day selected cannot be a valid EOM
 * Used to Show question if null is returned
 * @param date the date to check
 */
function determineEndOfMonthStatus(date) {
    if (date) {
        var lastDayOfCurrentMonth = getDaysInMonth(date.getFullYear(), date.getMonth());
        if (date.getDate() === 31) {
            return true;
        }
        else if (lastDayOfCurrentMonth === date.getDate()) {
            return null;
        }
        else {
            return false;
        }
    }
    else {
        return false;
    }
}
/**
 * Determine End of Quarter status of a date
 * If date is last day of quarter and 31st for March and December, return true
 * Else if date is last day of month for June and September, return null to ask question
 * Else return false since the day cannot be a valid End of Quarter day
 * @param date The date to determine if it falls on End of Quarter
 */
function determineEndOfQuarterStatus(date) {
    if (date) {
        var month = date.getMonth();
        var dayOfMonth = date.getDate();
        if ((month === _datenum_enum__WEBPACK_IMPORTED_MODULE_3__["MonthNumEnum"].March && dayOfMonth === 31)
            || (month === _datenum_enum__WEBPACK_IMPORTED_MODULE_3__["MonthNumEnum"].December && dayOfMonth === 31)) {
            return true;
        }
        else if ((month === _datenum_enum__WEBPACK_IMPORTED_MODULE_3__["MonthNumEnum"].June && dayOfMonth === 30)
            || (month === _datenum_enum__WEBPACK_IMPORTED_MODULE_3__["MonthNumEnum"].September && dayOfMonth === 30)) {
            return null;
        }
        else {
            return false;
        }
    }
    else {
        return false;
    }
}


/***/ }),

/***/ "./src/app/core/utils/date-utils.ts":
/*!******************************************!*\
  !*** ./src/app/core/utils/date-utils.ts ***!
  \******************************************/
/*! exports provided: NgbDatepickerConfig, dateToString, dateToDateStruct, dateStructToDate, dateToday, safeToDate, toMMDDYY, vmDateToEntityDate, entityDateToVmDate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dateToString", function() { return dateToString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dateToDateStruct", function() { return dateToDateStruct; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dateStructToDate", function() { return dateStructToDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dateToday", function() { return dateToday; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "safeToDate", function() { return safeToDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toMMDDYY", function() { return toMMDDYY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vmDateToEntityDate", function() { return vmDateToEntityDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "entityDateToVmDate", function() { return entityDateToVmDate; });
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NgbDatepickerConfig", function() { return _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_0__["NgbDatepickerConfig"]; });

// TODO: These may be available from ngBootstrap
// See around https://ng-bootstrap.github.io/#/components/datepicker/api#NgbDateParserFormatter

/** Convert a date to an SP canonical date string. Leaves a string value untouched */
function dateToString(dateValue) {
    return dateValue instanceof Date ? dateValue.toISOString() : dateValue;
}
/** Convert a date value (string or Date) to the ngbDatepicker date structure */
function dateToDateStruct(dateValue) {
    var inputDate = dateValue instanceof Date ? dateValue : dateValue ? new Date(dateValue) : undefined;
    return inputDate
        ? {
            year: inputDate.getFullYear(),
            month: inputDate.getMonth() + 1,
            day: inputDate.getDate()
        }
        : undefined;
}
/** Convert an ngbDatepicker date structure to a JavaScript Date */
function dateStructToDate(model) {
    var _a = model || {}, _b = _a.year, year = _b === void 0 ? null : _b, _c = _a.month, month = _c === void 0 ? null : _c, _d = _a.day, day = _d === void 0 ? null : _d;
    return year != null && month != null && day != null
        ? // hours = 17 ensures midday in Chicago per requirements.
            new Date(Date.UTC(year, month - 1, day, 17))
        : null;
}
/*
 * Today's JavaScript Date as ISO string when time doesn't matter.
 * Returns midday today in Chicago, per SP requirements
 */
function dateToday() {
    var today = new Date();
    var date = new Date(Date.UTC(today.getFullYear(), today.getMonth(), today.getDate(), 17));
    return date.toISOString();
}
/**
 * Convert the presumptive date string into a date.
 * Returns bad dates as "1/1/1970" in Chicago timezone
 * @param date Date string
 */
function safeToDate(date) {
    var d = new Date(date);
    // return guard date (1/1/1970) if bad date. At least we'll see it.
    return isNaN(d.valueOf()) ? new Date(1970, 0, 1, 17) : d;
}
/**
 * Format a date (or date string) as "mm/dd/yy"
 * @param date A date or date as an ISO date string
 */
function toMMDDYY(date) {
    if (date == null) {
        return date;
    }
    try {
        date = typeof date === 'string' ? new Date(date) : date;
        var year = date.getFullYear();
        var month = date.getMonth() + 1;
        var day = date.getDate();
        return "" + (month < 10 ? '0' : '') + month + "/" + (day < 10 ? '0' : '') + day + "/" + year;
    }
    catch (e) {
        return '';
    }
}
/**
 * Convert a ViewModel date to an entity-ready form, typically before save
 * @param vmDt ViewModel date in "yyyy-mm-dd" form
 * @param allowNull True (default) if date is allowed to be changed to falsy.
 */
function vmDateToEntityDate(vmDt, allowNull) {
    if (allowNull === void 0) { allowNull = true; }
    if (vmDt) {
        try {
            // Set timezone for midday Chicago per SP requirement
            vmDt = new Date(vmDt + 'T17:00:00.000Z').toISOString();
        }
        catch (e) {
            vmDt = null;
        }
    }
    if (!vmDt && !allowNull) {
        throw new Error('Null dates are not allowed');
    }
    return vmDt;
}
/**
 * Convert an entity date string (with a time part) to ViewModel date (no time part).
 * Required for browser `<input type="date">` to work (sigh)
 * @param entityDt Date string in ISO date format
 * @return the 'yyyy-mm-dd' part of the date.
 */
function entityDateToVmDate(entityDt) {
    if (typeof entityDt !== 'string' && entityDt) {
        entityDt = entityDt.toISOString();
    }
    return entityDt ? entityDt.substr(0, 10) : null;
}


/***/ }),

/***/ "./src/app/core/utils/datenum-enum.ts":
/*!********************************************!*\
  !*** ./src/app/core/utils/datenum-enum.ts ***!
  \********************************************/
/*! exports provided: DayNumEnum, MonthNumEnum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DayNumEnum", function() { return DayNumEnum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonthNumEnum", function() { return MonthNumEnum; });
/**
 * Enum for the Javascript Day of week
 */
var DayNumEnum;
(function (DayNumEnum) {
    DayNumEnum[DayNumEnum["Sunday"] = 0] = "Sunday";
    DayNumEnum[DayNumEnum["Monday"] = 1] = "Monday";
    DayNumEnum[DayNumEnum["Tuesday"] = 2] = "Tuesday";
    DayNumEnum[DayNumEnum["Wednesday"] = 3] = "Wednesday";
    DayNumEnum[DayNumEnum["Thursday"] = 4] = "Thursday";
    DayNumEnum[DayNumEnum["Friday"] = 5] = "Friday";
    DayNumEnum[DayNumEnum["Saturday"] = 6] = "Saturday";
})(DayNumEnum || (DayNumEnum = {}));
/**
 * Enum for the Javascript Date object month numbers
 */
var MonthNumEnum;
(function (MonthNumEnum) {
    MonthNumEnum[MonthNumEnum["January"] = 0] = "January";
    MonthNumEnum[MonthNumEnum["February"] = 1] = "February";
    MonthNumEnum[MonthNumEnum["March"] = 2] = "March";
    MonthNumEnum[MonthNumEnum["April"] = 3] = "April";
    MonthNumEnum[MonthNumEnum["May"] = 4] = "May";
    MonthNumEnum[MonthNumEnum["June"] = 5] = "June";
    MonthNumEnum[MonthNumEnum["July"] = 6] = "July";
    MonthNumEnum[MonthNumEnum["August"] = 7] = "August";
    MonthNumEnum[MonthNumEnum["September"] = 8] = "September";
    MonthNumEnum[MonthNumEnum["October"] = 9] = "October";
    MonthNumEnum[MonthNumEnum["November"] = 10] = "November";
    MonthNumEnum[MonthNumEnum["December"] = 11] = "December";
})(MonthNumEnum || (MonthNumEnum = {}));


/***/ }),

/***/ "./src/app/core/utils/ee-utils.ts":
/*!****************************************!*\
  !*** ./src/app/core/utils/ee-utils.ts ***!
  \****************************************/
/*! exports provided: employeeStatus, getTrimmedNameParts, getFullName, hasName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "employeeStatus", function() { return employeeStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTrimmedNameParts", function() { return getTrimmedNameParts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFullName", function() { return getFullName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasName", function() { return hasName; });
/** Get Employee status from the Employee */
function employeeStatus(ee) {
    return ee.isTerminated ? 'terminated' : ee.isNewHire ? 'newHire' : 'active';
}
/** Get the {firstName, lastName}, trimmed of extra spaces */
function getTrimmedNameParts(ee) {
    return ee ? {
        firstName: (ee.firstName || '').trim(),
        lastName: (ee.lastName || '').trim()
    } : {
        firstName: '',
        lastName: ''
    };
}
/** Return full name as (first + ' ' + last) */
function getFullName(person) {
    var _a = getTrimmedNameParts(person), firstName = _a.firstName, lastName = _a.lastName;
    return (firstName + ' ' + lastName).trim();
}
/** Return true if this employee view model has both first and last name */
function hasName(ee) {
    var _a = getTrimmedNameParts(ee), firstName = _a.firstName, lastName = _a.lastName;
    return '' !== firstName && '' !== lastName;
}


/***/ }),

/***/ "./src/app/core/utils/gen-password.ts":
/*!********************************************!*\
  !*** ./src/app/core/utils/gen-password.ts ***!
  \********************************************/
/*! exports provided: genPassword */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "genPassword", function() { return genPassword; });
/**
 * Generate a mostly-random 6 character password.
 * Has at least one digit and uppercase letter
 * No "oO0" or "l1" because these all look alike to a user.
 */
function genPassword() {
    var upper = 'ABCDEFGHIJKLMNPQRSTUVWXYZ';
    var digit = '23456789';
    var all = 'abcdefghijkmnpqrstuvwxyz' + digit + upper;
    var u = upper[Math.floor(Math.random() * upper.length)];
    var d = digit[Math.floor(Math.random() * digit.length)];
    var charIx = Array.from({ length: 4 }, function () { return Math.floor(Math.random() * all.length); });
    var pwd = shuffle(charIx.map(function (ix) { return all[ix]; }).concat(u, d)).join('');
    return pwd;
}
/**
 * Shuffles array in place. ES6 version
 * @param {Array} a items An array containing the items.
 */
function shuffle(a) {
    for (var i = a.length - 1; i > 0; i--) {
        var j = Math.floor(Math.random() * (i + 1));
        _a = [a[j], a[i]], a[i] = _a[0], a[j] = _a[1];
    }
    return a;
    var _a;
}


/***/ }),

/***/ "./src/app/core/utils/household-filer-utils.ts":
/*!*****************************************************!*\
  !*** ./src/app/core/utils/household-filer-utils.ts ***!
  \*****************************************************/
/*! exports provided: getFilerName, getHouseholdFilerDisplayVm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFilerName", function() { return getFilerName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHouseholdFilerDisplayVm", function() { return getHouseholdFilerDisplayVm; });
function getFilerName(hhf, primary) {
    if (primary === void 0) { primary = true; }
    var name = primary
        ? (hhf.primaryFirstName || '') + ' ' + (hhf.primaryLastName || '')
        : (hhf.spouseFirstName || '') + ' ' + (hhf.spouseLastName || '');
    return (name.trim()) || 'missing';
}
function getHouseholdFilerDisplayVm(hhf) {
    return (hhf ?
        {
            filingStatus: hhf.filingStatus,
            primaryName: getFilerName(hhf),
            primarySsn: hhf.primarySsn,
            spouseName: getFilerName(hhf, false),
            spouseSsn: hhf.spouseSsn,
        } :
        {
            filingStatus: null,
            primaryName: 'missing',
            primarySsn: null,
            spouseName: 'missing',
            spouseSsn: null
        });
}


/***/ }),

/***/ "./src/app/core/utils/index.ts":
/*!*************************************!*\
  !*** ./src/app/core/utils/index.ts ***!
  \*************************************/
/*! exports provided: addressToString, isComplete, formatZip, zipFirstDigits, getFirstAllowedCheckDate, currentCentralOffset, getNgbDate, isValidDate, getFirstDayOfMonth, getDaysInMonth, getDateFromNgb, getMoment, ngbDateToString, formatDate, getNgbDateFromString, getDateWithOffset, determineEndOfMonthStatus, determineEndOfQuarterStatus, getFirst, getAll, ChangeItemFactory, changeItemFactory, toUpdate, NgbDatepickerConfig, dateToString, dateToDateStruct, dateStructToDate, dateToday, safeToDate, toMMDDYY, vmDateToEntityDate, entityDateToVmDate, employeeStatus, getTrimmedNameParts, getFullName, hasName, genPassword, getFilerName, getHouseholdFilerDisplayVm, isPromise, SubSink, ɵ0, areDifferent, dictionaryToArray, extractEntityFromVm, filterRemoved, firstDiffBetweenStrings, lowerCamelCase, upperCamelCase, titleCase, raw, toDollars, toInteger, stringify, sanitizeLegalName, parseUrlParams, getCookies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _address_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address-utils */ "./src/app/core/utils/address-utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addressToString", function() { return _address_utils__WEBPACK_IMPORTED_MODULE_0__["addressToString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isComplete", function() { return _address_utils__WEBPACK_IMPORTED_MODULE_0__["isComplete"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatZip", function() { return _address_utils__WEBPACK_IMPORTED_MODULE_0__["formatZip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zipFirstDigits", function() { return _address_utils__WEBPACK_IMPORTED_MODULE_0__["zipFirstDigits"]; });

/* harmony import */ var _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./checkdate-utils */ "./src/app/core/utils/checkdate-utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFirstAllowedCheckDate", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["getFirstAllowedCheckDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "currentCentralOffset", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["currentCentralOffset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getNgbDate", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["getNgbDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isValidDate", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["isValidDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFirstDayOfMonth", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["getFirstDayOfMonth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDaysInMonth", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["getDaysInMonth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDateFromNgb", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["getDateFromNgb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMoment", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["getMoment"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ngbDateToString", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["ngbDateToString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDate", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["formatDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getNgbDateFromString", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["getNgbDateFromString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDateWithOffset", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["getDateWithOffset"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "determineEndOfMonthStatus", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["determineEndOfMonthStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "determineEndOfQuarterStatus", function() { return _checkdate_utils__WEBPACK_IMPORTED_MODULE_1__["determineEndOfQuarterStatus"]; });

/* harmony import */ var _async_await__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./async-await */ "./src/app/core/utils/async-await.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFirst", function() { return _async_await__WEBPACK_IMPORTED_MODULE_2__["getFirst"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getAll", function() { return _async_await__WEBPACK_IMPORTED_MODULE_2__["getAll"]; });

/* harmony import */ var _change_item_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./change-item-factory */ "./src/app/core/utils/change-item-factory.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChangeItemFactory", function() { return _change_item_factory__WEBPACK_IMPORTED_MODULE_3__["ChangeItemFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "changeItemFactory", function() { return _change_item_factory__WEBPACK_IMPORTED_MODULE_3__["changeItemFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toUpdate", function() { return _change_item_factory__WEBPACK_IMPORTED_MODULE_3__["toUpdate"]; });

/* harmony import */ var _date_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./date-utils */ "./src/app/core/utils/date-utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NgbDatepickerConfig", function() { return _date_utils__WEBPACK_IMPORTED_MODULE_4__["NgbDatepickerConfig"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dateToString", function() { return _date_utils__WEBPACK_IMPORTED_MODULE_4__["dateToString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dateToDateStruct", function() { return _date_utils__WEBPACK_IMPORTED_MODULE_4__["dateToDateStruct"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dateStructToDate", function() { return _date_utils__WEBPACK_IMPORTED_MODULE_4__["dateStructToDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dateToday", function() { return _date_utils__WEBPACK_IMPORTED_MODULE_4__["dateToday"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "safeToDate", function() { return _date_utils__WEBPACK_IMPORTED_MODULE_4__["safeToDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toMMDDYY", function() { return _date_utils__WEBPACK_IMPORTED_MODULE_4__["toMMDDYY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vmDateToEntityDate", function() { return _date_utils__WEBPACK_IMPORTED_MODULE_4__["vmDateToEntityDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "entityDateToVmDate", function() { return _date_utils__WEBPACK_IMPORTED_MODULE_4__["entityDateToVmDate"]; });

/* harmony import */ var _ee_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ee-utils */ "./src/app/core/utils/ee-utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "employeeStatus", function() { return _ee_utils__WEBPACK_IMPORTED_MODULE_5__["employeeStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTrimmedNameParts", function() { return _ee_utils__WEBPACK_IMPORTED_MODULE_5__["getTrimmedNameParts"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFullName", function() { return _ee_utils__WEBPACK_IMPORTED_MODULE_5__["getFullName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hasName", function() { return _ee_utils__WEBPACK_IMPORTED_MODULE_5__["hasName"]; });

/* harmony import */ var _gen_password__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./gen-password */ "./src/app/core/utils/gen-password.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "genPassword", function() { return _gen_password__WEBPACK_IMPORTED_MODULE_6__["genPassword"]; });

/* harmony import */ var _household_filer_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./household-filer-utils */ "./src/app/core/utils/household-filer-utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFilerName", function() { return _household_filer_utils__WEBPACK_IMPORTED_MODULE_7__["getFilerName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getHouseholdFilerDisplayVm", function() { return _household_filer_utils__WEBPACK_IMPORTED_MODULE_7__["getHouseholdFilerDisplayVm"]; });

/* harmony import */ var _is_promise__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./is-promise */ "./src/app/core/utils/is-promise.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPromise", function() { return _is_promise__WEBPACK_IMPORTED_MODULE_8__["isPromise"]; });

/* harmony import */ var _subsink__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./subsink */ "./src/app/core/utils/subsink.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SubSink", function() { return _subsink__WEBPACK_IMPORTED_MODULE_9__["SubSink"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵ0", function() { return _subsink__WEBPACK_IMPORTED_MODULE_9__["ɵ0"]; });

/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils */ "./src/app/core/utils/utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "areDifferent", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["areDifferent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dictionaryToArray", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["dictionaryToArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extractEntityFromVm", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["extractEntityFromVm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterRemoved", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["filterRemoved"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "firstDiffBetweenStrings", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["firstDiffBetweenStrings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lowerCamelCase", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["lowerCamelCase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "upperCamelCase", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["upperCamelCase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "titleCase", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["titleCase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "raw", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["raw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toDollars", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["toDollars"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toInteger", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["toInteger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringify", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["stringify"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sanitizeLegalName", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["sanitizeLegalName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseUrlParams", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["parseUrlParams"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCookies", function() { return _utils__WEBPACK_IMPORTED_MODULE_10__["getCookies"]; });














/***/ }),

/***/ "./src/app/core/utils/is-promise.ts":
/*!******************************************!*\
  !*** ./src/app/core/utils/is-promise.ts ***!
  \******************************************/
/*! exports provided: isPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPromise", function() { return isPromise; });
/**
 * Tests to see if the object is an ES2015 (ES6) Promise
 * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}
 * @param value the object to test
 */
function isPromise(value) {
    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}


/***/ }),

/***/ "./src/app/core/utils/subsink.ts":
/*!***************************************!*\
  !*** ./src/app/core/utils/subsink.ts ***!
  \***************************************/
/*! exports provided: SubSink, ɵ0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubSink", function() { return SubSink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ0", function() { return ɵ0; });
var isFunction = function (fn) { return typeof fn === 'function'; };
var ɵ0 = isFunction;
/**
 * Subscription sink that holds Observable subscriptions
 * until you call unsubscribe on it in ngOnDestroy.
 * Copied from https://github.com/wardbell/subsink to avoid dependency on WB's github repo
 * Also available as `npm install subsink`
 */
var SubSink = /** @class */ (function () {
    /**
     * Subscription sink that holds Observable subscriptions
     * until you call unsubscribe on it in ngOnDestroy.
     *
     * @example
     * In Angular:
     * ```
     *   private subs = new SubSink();
     *   ...
     *   this.subs.sink = observable$.subscribe(
     *   this.subs.add(observable$.subscribe(...));
     *   ...
     *   ngOnDestroy() {
     *     this.subs.unsubscribe();
     *   }
     * ```
     */
    function SubSink() {
        this._subs = [];
    }
    /**
     * Add subscriptions to the tracked subscriptions
     * @example
     *  this.subs.add(observable$.subscribe(...));
     */
    SubSink.prototype.add = function () {
        var subscriptions = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            subscriptions[_i] = arguments[_i];
        }
        this._subs = this._subs.concat(subscriptions);
    };
    Object.defineProperty(SubSink.prototype, "sink", {
        /**
         * Assign subscription to this sink to add it to the tracked subscriptions
         * @example
         *  this.subs.sink = observable$.subscribe(...);
         */
        set: function (subscription) {
            this._subs.push(subscription);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Unsubscribe to all subscriptions in ngOnDestroy()
     * @example
     *   ngOnDestroy() {
     *     this.subs.unsubscribe();
     *   }
     */
    SubSink.prototype.unsubscribe = function () {
        this._subs.forEach(function (sub) { return sub && isFunction(sub.unsubscribe) && sub.unsubscribe(); });
        this._subs = [];
    };
    return SubSink;
}());




/***/ }),

/***/ "./src/app/core/utils/utils.ts":
/*!*************************************!*\
  !*** ./src/app/core/utils/utils.ts ***!
  \*************************************/
/*! exports provided: areDifferent, dictionaryToArray, extractEntityFromVm, filterRemoved, firstDiffBetweenStrings, lowerCamelCase, upperCamelCase, titleCase, raw, toDollars, toInteger, stringify, sanitizeLegalName, parseUrlParams, getCookies */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "areDifferent", function() { return areDifferent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dictionaryToArray", function() { return dictionaryToArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extractEntityFromVm", function() { return extractEntityFromVm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterRemoved", function() { return filterRemoved; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "firstDiffBetweenStrings", function() { return firstDiffBetweenStrings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lowerCamelCase", function() { return lowerCamelCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "upperCamelCase", function() { return upperCamelCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "titleCase", function() { return titleCase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "raw", function() { return raw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toDollars", function() { return toDollars; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toInteger", function() { return toInteger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringify", function() { return stringify; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sanitizeLegalName", function() { return sanitizeLegalName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseUrlParams", function() { return parseUrlParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCookies", function() { return getCookies; });
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
/** Return true if the newObject differs from the oldObject or its ID is null/undefined */
function areDifferent(newObject, oldObject, tag) {
    if (!newObject.id) {
        return true; // always "different" (meaning should save) if id is missing | 0 | ''.
    }
    // The following technique would be slow if the objects were large and/or there are a lot of them.
    // Strip off the prototype before comparing
    var old = JSON.stringify(Object.assign({}, oldObject));
    var nuw = JSON.stringify(Object.assign({}, newObject));
    var isDiff = old !== nuw;
    // Debugging: uncomment to see what changed
    // if (isDiff) {
    //   const pos = firstDiffBetweenStrings(old, nuw);
    //   console.log(`"${tag}" diff at ${pos}`);
    //   console.log('old: ' + old.substr(pos, 60));
    //   console.log('new: ' + nuw.substr(pos, 60));
    // }
    return isDiff;
}
/**
 * Return an array of an object's own property values.
 * @param dict A "dictionary" object that is the source of values
 * @returns Array of object's own property values in arbitrary order. Values should be self-identifying!
*/
function dictionaryToArray(dict) {
    return Object.keys(dict).map(function (p) { return dict[p]; });
}
/**
 * Extract the entity from the ViewModel wrapper.
 * Assumes this VM is an application-standard wrapper consisting of entity properties
 * and ONE additional property,
 * 'x', which holds all view model properties and methods.
 * Use this fn to remove the 'x' view model material before saving.
 */
function extractEntityFromVm(vm) {
    var _a = vm, x = _a.x, entity = __rest(_a, ["x"]);
    return entity;
}
/** Filter out removed items */
function filterRemoved(items) {
    return items ? items.filter(function (item) { return !item.isRemoved; }) : [];
}
/** return index of first difference between two strings */
function firstDiffBetweenStrings(a, b) {
    var shorterLength = Math.min(a.length, b.length);
    for (var i = 0; i < shorterLength; i++) {
        if (a[i] !== b[i]) {
            return i;
        }
    }
    if (a.length !== b.length) {
        return shorterLength;
    }
    return -1;
}
/**
 * Convert to "lowerCamelCase" in which the first letter of the name is lower case.
 * @param name Name to convert, without spaces or punctuation
 */
function lowerCamelCase(name) {
    return name && name.charAt(0).toLowerCase() + name.substring(1);
}
/**
 * Convert to "UpperCamelCase" in which the first letter of the name is upper case.
 * @param name Name to convert, without spaces or punctuation
 */
function upperCamelCase(name) {
    return name && name.charAt(0).toUpperCase() + name.substring(1);
}
/**
 * Convert a string to title case ('tHe caT IN The hat' => 'The Cat IN The Hat')
 */
function titleCase(source) {
    return source.replace(/\b([a-z])(\w+)/g, function ($0, $1, $2) { return $1.toUpperCase() + $2.toLowerCase(); });
}
/** strip the prototype and methods from the object */
function raw(objWithProtoType) {
    return Object.assign({}, objWithProtoType);
}
/**
 * Coerce the number to be a dollar in range with proper decimals
 * @param value Raw amount
 * @param [centsOk] True if cents are allowed; default false
 * @param [max] Maximum dollar value. Default max of $300,000
 * @param [min] Minimum dollar value. Default min of $0
 */
function toDollars(value, centsOk, max, min) {
    if (centsOk === void 0) { centsOk = false; }
    var dollars = Math.min((max || 300000), Math.max(value || 0, min || 0));
    return centsOk ? (Math.round(dollars * 100)) / 100 : Math.round(dollars);
}
/**
 * Coerce the number to be an integer within a range
 * @param value Ram number
 * @param [max] Maximum integer value. Default max of 1000.
 * @param [min] Minimum integer value. Default min of 0.
 */
function toInteger(value, max, min) {
    return Math.round(Math.min((max || 1000), Math.max(value || 0, min || 0)));
}
/**
 * Return the arguments as strings, using JSON.stringify iff necessary
 * @param args
 */
function stringify(args) {
    var strings = args.map(function (a) {
        var s = a ? a.toString() : a;
        if (s && s.startsWith('[object')) {
            s = JSON.stringify(a);
        }
        return s;
    });
    return strings;
}
// Accordingly with https://www.irs.gov/businesses/small-businesses-self-employed/online-ein-frequently-asked-questions
var validLegalNameCharSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ 0123456789-&';
/** Sanitize legal name */
function sanitizeLegalName(legalName) {
    if (!legalName) {
        return '';
    }
    var res = '';
    for (var i = 0; i < legalName.length; i++) {
        var ch = legalName.toUpperCase().charAt(i);
        if (validLegalNameCharSet.includes(ch, 0)) {
            res += ch;
        }
        else if (ch === '\'') {
            // skip apostrophe
        }
        else if (ch === '+' || ch === '@' || ch === '.') {
            res += ' ';
        }
        else if (ch === '\\' || ch === '/') {
            res += '-';
        }
        else {
            // skip
        }
    }
    return res;
}
/** Convert URL search string into key:value object.  Converts keys to all lowercase. */
function parseUrlParams(search) {
    var params = {};
    if (!search) {
        return params;
    }
    if (search.startsWith('?')) {
        search = search.substring(1);
    }
    search.split('&').forEach(function (p) {
        var kv = p.split('=');
        if (kv.length > 1) {
            params[kv[0].toLowerCase()] = kv[1];
        }
    });
    return params;
}
/** Get the cookies that start with the given name, and don't contain the exclude string */
function getCookies(name, exclude) {
    var cookies = document.cookie.split(';').filter(function (c) {
        c = c.trim();
        return c.indexOf(name) === 0 && (!exclude || c.indexOf(exclude) < 0);
    }).map(function (c) {
        return c.trim().split('=')[1];
    });
    return cookies;
}


/***/ }),

/***/ "./src/app/core/well-known-routes.ts":
/*!*******************************************!*\
  !*** ./src/app/core/well-known-routes.ts ***!
  \*******************************************/
/*! exports provided: WellKnownRoutes, WellKnownRoutes_entries, isWellKnownRoute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WellKnownRoutes", function() { return WellKnownRoutes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WellKnownRoutes_entries", function() { return WellKnownRoutes_entries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWellKnownRoute", function() { return isWellKnownRoute; });
var WellKnownRoutes;
(function (WellKnownRoutes) {
    WellKnownRoutes["Abandoned"] = "/abandoned";
    WellKnownRoutes["AboutYou"] = "/about-you";
    WellKnownRoutes["AccountView"] = "/account-view";
    WellKnownRoutes["Admin"] = "/admin";
    WellKnownRoutes["AdminAccountView"] = "/admin/account-view";
    WellKnownRoutes["AuthFailed"] = "/error";
    WellKnownRoutes["BankAccount"] = "/company-bank-account";
    WellKnownRoutes["CompanyDeductions"] = "/employees/company-deductions";
    WellKnownRoutes["CompanyInfo"] = "/company-info";
    WellKnownRoutes["CompanyTaxInfo"] = "/tax-info";
    WellKnownRoutes["ConcurrencyFailure"] = "/concurrency-failure";
    WellKnownRoutes["Dashboard"] = "/dashboard";
    WellKnownRoutes["Documents"] = "/documents";
    WellKnownRoutes["Earnings"] = "/employees/earnings";
    WellKnownRoutes["Employees"] = "/employees";
    WellKnownRoutes["Enrolled"] = "/enrolled";
    WellKnownRoutes["Failed"] = "/failed";
    WellKnownRoutes["Processing"] = "/processing";
    WellKnownRoutes["Review"] = "/review";
    WellKnownRoutes["SignedOut"] = "/signed-out";
    WellKnownRoutes["Signup"] = "/signup";
    WellKnownRoutes["SignupSuccess"] = "/signup/success";
    WellKnownRoutes["Unauthorized"] = "/unauthorized";
})(WellKnownRoutes || (WellKnownRoutes = {}));
var WellKnownRoutes_entries = Object.keys(WellKnownRoutes).map(function (k) { return WellKnownRoutes[k]; });
function isWellKnownRoute(path) {
    return WellKnownRoutes_entries.some(function (entry) { return path.startsWith(entry); });
}


/***/ }),

/***/ "./src/app/core/window.ts":
/*!********************************!*\
  !*** ./src/app/core/window.ts ***!
  \********************************/
/*! exports provided: WindowToken, windowProviderFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WindowToken", function() { return WindowToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowProviderFactory", function() { return windowProviderFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

/** Token for registering the Window object in DI  */
var WindowToken = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('Window', { providedIn: 'root',
    factory: windowProviderFactory });
/** Factory to provide the Window object */
function windowProviderFactory() {
    return window;
}


/***/ }),

/***/ "./src/app/dashboard/dashboard-view.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/dashboard/dashboard-view.service.ts ***!
  \*****************************************************/
/*! exports provided: DashboardViewService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardViewService", function() { return DashboardViewService; });
/* harmony import */ var _entity_entity_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @entity/entity-services */ "./src/app/store/entity/entity-services/index.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @entity */ "./src/app/store/entity/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _store_entity_entity_services_review_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../store/entity/entity-services/review.service */ "./src/app/store/entity/entity-services/review.service.ts");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../store/session/session.service */ "./src/app/store/session/session.service.ts");
/* harmony import */ var _store_entity_entity_services_stats_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../store/entity/entity-services/stats.service */ "./src/app/store/entity/entity-services/stats.service.ts");










var DashboardViewService = /** @class */ (function () {
    function DashboardViewService(reviewService, sessionService, statsService) {
        // show the intro text if the stats record is new (no id)
        var showIntro$ = statsService.stats$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (stats) { return !stats.aboutYouStatus; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])());
        // Watch out! CombineLatest only supports a limited number of args before it loses types.
        var statuses$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(reviewService.aboutYouStatus$, reviewService.bankInfoStatus$, reviewService.companyInfoStatus$, reviewService.companyTaxStatus$, reviewService.employeesStatus$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var aboutYou = _a[0], bankInfo = _a[1], companyInfo = _a[2], companyTax = _a[3], employees = _a[4];
            return ({
                aboutYou: aboutYou,
                bankInfo: bankInfo,
                companyInfo: companyInfo,
                companyTax: companyTax,
                employees: employees
            });
        }));
        // Watch out! CombineLatest only supports a limited number of args before it loses types.
        this.vm$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(sessionService.currentCompany$, sessionService.currentUser$, sessionService.isAdmin$, reviewService.isValid$, showIntro$, statuses$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (_a) {
            var company = _a[0], user = _a[1];
            return !!company && !!user;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var company = _a[0], user = _a[1], isAdmin = _a[2], isValid = _a[3], showIntro = _a[4], statuses = _a[5];
            var result = {
                company: company,
                user: user,
                isAdmin: isAdmin,
                isValid: canSignDocuments(isValid, statuses),
                showIntro: showIntro,
                aboutYouAction: getStatusAction(statuses.aboutYou),
                aboutYouClass: getStatusCss(statuses.aboutYou),
                aboutYouIcon: getStatusIcon(statuses.aboutYou),
                bankInfoAction: getStatusAction(statuses.bankInfo),
                bankInfoClass: getStatusCss(statuses.bankInfo),
                bankInfoIcon: getStatusIcon(statuses.bankInfo),
                companyInfoAction: getStatusAction(statuses.companyInfo),
                companyInfoClass: getStatusCss(statuses.companyInfo),
                companyInfoIcon: getStatusIcon(statuses.companyInfo),
                companyTaxAction: getStatusAction(statuses.companyTax),
                companyTaxClass: getStatusCss(statuses.companyTax),
                companyTaxIcon: getStatusIcon(statuses.companyTax),
                employeesAction: getStatusAction(statuses.employees),
                employeesClass: getStatusCss(statuses.employees),
                employeesIcon: getStatusIcon(statuses.employees)
            };
            return result;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
    }
    DashboardViewService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_6__["defineInjectable"]({ factory: function DashboardViewService_Factory() { return new DashboardViewService(_angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_store_entity_entity_services_review_service__WEBPACK_IMPORTED_MODULE_7__["ReviewService"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_store_session_session_service__WEBPACK_IMPORTED_MODULE_8__["SessionService"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_store_entity_entity_services_stats_service__WEBPACK_IMPORTED_MODULE_9__["StatsService"])); }, token: DashboardViewService, providedIn: "root" });
    return DashboardViewService;
}());

function canSignDocuments(isValid, statuses) {
    return (isValid &&
        statuses.aboutYou === _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].Valid &&
        statuses.bankInfo === _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].Valid &&
        statuses.companyInfo === _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].Valid &&
        statuses.companyTax === _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].Valid &&
        statuses.employees === _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].Valid);
}
function getStatusCss(status) {
    return {
        'status-action': status === _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].NotStarted,
        'status-inprogress': status === _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].Invalid,
        'status-complete': status === _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].Valid
    };
}
function getStatusAction(status) {
    if (status === _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].NotStarted) {
        return 'Start';
    }
    else if (status === _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].Invalid) {
        return 'Update';
    }
    else {
        return 'Edit';
    }
}
function getStatusIcon(status) {
    if (status === _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].NotStarted) {
        return 'adjust';
    }
    else if (status === _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].Invalid) {
        return 'error_outline';
    }
    else {
        return 'check';
    }
}


/***/ }),

/***/ "./src/app/failed/failed.component.ngfactory.js":
/*!******************************************************!*\
  !*** ./src/app/failed/failed.component.ngfactory.js ***!
  \******************************************************/
/*! exports provided: RenderType_FailedComponent, View_FailedComponent_0, View_FailedComponent_Host_0, FailedComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_FailedComponent", function() { return RenderType_FailedComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_FailedComponent_0", function() { return View_FailedComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_FailedComponent_Host_0", function() { return View_FailedComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FailedComponentNgFactory", function() { return FailedComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_contact_cust_support_component_ngfactory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/contact-cust-support.component.ngfactory */ "./src/app/shared/contact-cust-support.component.ngfactory.js");
/* harmony import */ var _shared_contact_cust_support_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/contact-cust-support.component */ "./src/app/shared/contact-cust-support.component.ts");
/* harmony import */ var _failed_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./failed.component */ "./src/app/failed/failed.component.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 





var styles_FailedComponent = [];
var RenderType_FailedComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_FailedComponent, data: {} });

function View_FailedComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 14, "div", [["class", "d-flex flex-column"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 3, "header", [["class", "header-bold"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](2, 0, null, null, 2, "div", [["class", "standard"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 1, "h1", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["We're Sorry"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](5, 0, null, null, 9, "div", [["class", "standard"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](6, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" There was an unrecoverable error and the application is no longer working. It's our fault. You did nothing wrong. "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](8, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" You might check that your network connection is good and try refreshing the browser. The application might recover on its own. "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](10, 0, null, null, 4, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" If that doesn't work, "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](12, 0, null, null, 1, "sp-contact-support", [["linkText", "contact"]], null, null, null, _shared_contact_cust_support_component_ngfactory__WEBPACK_IMPORTED_MODULE_1__["View_ContactCustomerSupportComponent_0"], _shared_contact_cust_support_component_ngfactory__WEBPACK_IMPORTED_MODULE_1__["RenderType_ContactCustomerSupportComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](13, 49152, null, 0, _shared_contact_cust_support_component__WEBPACK_IMPORTED_MODULE_2__["ContactCustomerSupportComponent"], [], { linkText: [0, "linkText"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" . "]))], function (_ck, _v) { var currVal_0 = "contact"; _ck(_v, 13, 0, currVal_0); }, null); }
function View_FailedComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-failed", [], null, null, null, View_FailedComponent_0, RenderType_FailedComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 114688, null, 0, _failed_component__WEBPACK_IMPORTED_MODULE_3__["FailedComponent"], [_angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var FailedComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-failed", _failed_component__WEBPACK_IMPORTED_MODULE_3__["FailedComponent"], View_FailedComponent_Host_0, {}, {}, []);



/***/ }),

/***/ "./src/app/failed/failed.component.ts":
/*!********************************************!*\
  !*** ./src/app/failed/failed.component.ts ***!
  \********************************************/
/*! exports provided: FailedComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FailedComponent", function() { return FailedComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");



var FailedComponent = /** @class */ (function () {
    function FailedComponent(router) {
        this.router = router;
    }
    FailedComponent.prototype.ngOnInit = function () {
        // Never let it fail on application launch
        // or user won't have a chance to recover with a browser refresh.
        if (this.router.navigationId === 1) {
            this.router.navigate([_core__WEBPACK_IMPORTED_MODULE_2__["WellKnownRoutes"].Dashboard], { replaceUrl: true });
        }
    };
    return FailedComponent;
}());



/***/ }),

/***/ "./src/app/mock-auth/jwt.service.ts":
/*!******************************************!*\
  !*** ./src/app/mock-auth/jwt.service.ts ***!
  \******************************************/
/*! exports provided: parseJwt, JwtService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseJwt", function() { return parseJwt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JwtService", function() { return JwtService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

/** Parse a JWT token */
function parseJwt(token) {
    var base64Url = token.split('.')[1];
    var base64 = base64Url.replace('-', '+').replace('_', '/');
    return JSON.parse(window.atob(base64));
}
/** The signing secret HA HA */
var secret = 'My very confidential secret!!!';
var JwtService = /** @class */ (function () {
    function JwtService() {
        /** The only header we support in this library */
        this.header = { 'alg': 'HS256', 'typ': 'JWT' };
    }
    /**
     * Make adjusted base64 encoding so can pass in a URL.
     * Two differences from native base64:
     *   No = padding at the end,
     *   + and / characters are replaced by - and _ respectively.
     */
    JwtService.prototype.base64url = function (source) {
        // Encode in classical base64
        var encodedSource = CryptoJS.enc.Base64.stringify(source);
        // Remove padding equal characters
        encodedSource = encodedSource.replace(/=+$/, '');
        // Replace characters according to base64url specifications
        encodedSource = encodedSource.replace(/\+/g, '-');
        encodedSource = encodedSource.replace(/\//g, '_');
        return encodedSource;
    };
    JwtService.prototype.createJwt = function (data) {
        var encodedData = this.encode(data || {});
        var encodedHeader = this.encode(this.header);
        var signature = encodedHeader + '.' + encodedData;
        signature = CryptoJS.HmacSHA256(signature, secret);
        signature = this.base64url(signature);
        return encodedHeader + '.' + encodedData + '.' + signature;
    };
    /** Convert object source to base64url encoded, Utf8'd string */
    JwtService.prototype.encode = function (source) {
        return this.base64url(this.toUtf8(source));
    };
    /** Create JWT from data object with canned header and self-signing with HmacSHA256 */
    JwtService.prototype.toUtf8 = function (source) {
        var data = typeof source === 'string' ? source : JSON.stringify(source);
        return CryptoJS.enc.Utf8.parse(data);
    };
    JwtService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"]({ factory: function JwtService_Factory() { return new JwtService(); }, token: JwtService, providedIn: "root" });
    return JwtService;
}());



/***/ }),

/***/ "./src/app/mock-auth/mock-auth.module.ts":
/*!***********************************************!*\
  !*** ./src/app/mock-auth/mock-auth.module.ts ***!
  \***********************************************/
/*! exports provided: MockAuthModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MockAuthModule", function() { return MockAuthModule; });
var MockAuthModule = /** @class */ (function () {
    function MockAuthModule() {
        console.log('MockAuthModule created');
    }
    return MockAuthModule;
}());



/***/ }),

/***/ "./src/app/mock-auth/mock-oidc-manager-factory.ts":
/*!********************************************************!*\
  !*** ./src/app/mock-auth/mock-oidc-manager-factory.ts ***!
  \********************************************************/
/*! exports provided: MockOidcManagerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MockOidcManagerFactory", function() { return MockOidcManagerFactory; });
/* harmony import */ var oidc_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! oidc-client */ "./node_modules/oidc-client/lib/oidc-client.js");
/* harmony import */ var oidc_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(oidc_client__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mock_oidc_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mock-oidc-manager */ "./src/app/mock-auth/mock-oidc-manager.ts");
/* harmony import */ var _core_services_auth_services_oidc_manager_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/services/auth-services/oidc-manager-config */ "./src/app/core/services/auth-services/oidc-manager-config.ts");
/* harmony import */ var _mock_oidc_manager_proxy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mock-oidc-manager-proxy */ "./src/app/mock-auth/mock-oidc-manager-proxy.ts");




var MockOidcManagerFactory = /** @class */ (function () {
    // N.B.: Cannot inject AuthService because AuthServices injects this class (indirectly).
    /** Inject mock version of the oidc-client manager */
    function MockOidcManagerFactory(mockOidcManager) {
        this.mockOidcManager = mockOidcManager;
    }
    /** Create a proxy oidc-client UserManager that can switch between real and mock version */
    MockOidcManagerFactory.prototype.create = function () {
        var realOidcManager = new oidc_client__WEBPACK_IMPORTED_MODULE_0__["UserManager"](_core_services_auth_services_oidc_manager_config__WEBPACK_IMPORTED_MODULE_2__["oidcManagerConfig"]);
        this.proxy = new _mock_oidc_manager_proxy__WEBPACK_IMPORTED_MODULE_3__["OidcManagerProxy"](this.mockOidcManager, realOidcManager);
        return this.proxy;
    };
    /** Switch to the mock oidc-client UserManager */
    MockOidcManagerFactory.prototype.useMock = function () {
        this.proxy.useMock();
    };
    /** Switch to the real oidc-client UserManager */
    MockOidcManagerFactory.prototype.useReal = function () {
        this.proxy.useReal();
    };
    return MockOidcManagerFactory;
}());



/***/ }),

/***/ "./src/app/mock-auth/mock-oidc-manager-proxy.ts":
/*!******************************************************!*\
  !*** ./src/app/mock-auth/mock-oidc-manager-proxy.ts ***!
  \******************************************************/
/*! exports provided: OidcManagerProxy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OidcManagerProxy", function() { return OidcManagerProxy; });
/**
 * Proxy for the active oidc-client "UserManager"
 * containing both a real and mock version.
 * Can switch between them.
 */
var OidcManagerProxy = /** @class */ (function () {
    function OidcManagerProxy(mockOidcManager, realOidcManager) {
        this.mockOidcManager = mockOidcManager;
        this.realOidcManager = realOidcManager;
        this.proxy = mockOidcManager;
    }
    OidcManagerProxy.prototype.clearStaleState = function () {
        return this.proxy.clearStaleState();
    };
    OidcManagerProxy.prototype.getUser = function () {
        return this.proxy.getUser();
    };
    OidcManagerProxy.prototype.signinRedirect = function () {
        return this.proxy.signinRedirect();
    };
    OidcManagerProxy.prototype.signoutRedirect = function () {
        return this.proxy.signoutRedirect();
    };
    OidcManagerProxy.prototype.signinRedirectCallback = function (data) {
        return this.proxy.signinRedirectCallback(data);
    };
    Object.defineProperty(OidcManagerProxy.prototype, "isMock", {
        get: function () {
            return this.proxy === this.mockOidcManager;
        },
        enumerable: true,
        configurable: true
    });
    /** Switch to the mock oidc-client UserManager */
    OidcManagerProxy.prototype.useMock = function () {
        return this.proxy = this.mockOidcManager;
    };
    /** Switch to the real oidc-client UserManager */
    OidcManagerProxy.prototype.useReal = function () {
        return this.proxy = this.realOidcManager;
    };
    return OidcManagerProxy;
}());



/***/ }),

/***/ "./src/app/mock-auth/mock-oidc-manager.ts":
/*!************************************************!*\
  !*** ./src/app/mock-auth/mock-oidc-manager.ts ***!
  \************************************************/
/*! exports provided: MockOidcManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MockOidcManager", function() { return MockOidcManager; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var oidc_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! oidc-client */ "./node_modules/oidc-client/lib/oidc-client.js");
/* harmony import */ var oidc_client__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(oidc_client__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _jwt_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./jwt.service */ "./src/app/mock-auth/jwt.service.ts");
/* harmony import */ var _mock_oidc_user__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mock-oidc-user */ "./src/app/mock-auth/mock-oidc-user.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
// ONLY because this is a mock signin that will never be in production












var oidcStorageKey = _mock_oidc_user__WEBPACK_IMPORTED_MODULE_6__["MockOidcUser"].oidcStorageKey;
var MockOidcManager = /** @class */ (function () {
    function MockOidcManager(http, injector, jwtService, router) {
        this.http = http;
        this.injector = injector;
        this.jwtService = jwtService;
        this.router = router;
        this.oidcUser = null;
    }
    /** Clear any stale oidc auth state in local storage */
    MockOidcManager.prototype.clearStaleState = function () {
        // Our mock storage is never stale.
        return Promise.resolve();
    };
    Object.defineProperty(MockOidcManager.prototype, "authService", {
        // Cannot inject AuthService in ctor because MockOidcFactory injects this class
        // and AuthServices injects the MockOidcFactory.
        // But can inject AuthService later (here), using the app injector, once everything is built and running.
        get: function () {
            return this._authService || (this._authService = this.injector.get(_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_4__["AuthService"]));
        },
        enumerable: true,
        configurable: true
    });
    /** Log a mock OIDC Manager event with AuthService event$ */
    MockOidcManager.prototype.logEvent = function (event) {
        this.authService.logEvent('MockOidcManager ' + event);
    };
    /**
     * Get the local instance of the current OIDC User.
     * Could be expired.
     */
    MockOidcManager.prototype.getUser = function () {
        if (!this.oidcUser) {
            this.oidcUser = this.getMockOidcUserFromStorage();
        }
        this.logEvent("getUser() " + (this.oidcUser ? 'got OIDC user from storage' : 'returned a null OIDC user') + ".");
        return Promise.resolve(this.oidcUser);
    };
    /**
     * Pretend to leave the app and go to IdentityServer.
     * Use the mock OIDC User in browser storage if there is one,
     * else navigate to the mock sign-in page that emulates
     * the one on IdentityServer.
     */
    MockOidcManager.prototype.signinRedirect = function () {
        this.oidcUser = null; // clear local service copy
        var reroutePath = sessionStorage.getItem(this.authService.reroutePathKey);
        if (reroutePath && -1 < reroutePath.indexOf('mock-signin')) {
            // Don't accidentally re-route back to sign-in during mocking
            sessionStorage.removeItem(this.authService.reroutePathKey);
        }
        var oidcUser = this.getMockOidcUserFromStorage();
        if (oidcUser) {
            if (!!oidcUser.access_token && !oidcUser.expired) {
                this.oidcUser = oidcUser; // it's good!
                // skip ahead to the AuthService's signinRedirect (not the OIDC manager version of that method!)
                this.logEvent("signinRedirect() got valid OIDC user from storage; skipping ahead to AuthService.signinRedirectCallback");
                this.authService.signinRedirectCallback(this.oidcUser);
            }
            else {
                this.logEvent("signinRedirect() got EXPIRED or invalid OIDC user from storage; removing it.");
                sessionStorage.removeItem(oidcStorageKey);
            }
        }
        if (!this.oidcUser) {
            this.logEvent("signinRedirect() did not find OIDC user in storage; re-routing to '/mock-signin'");
            this.router.navigateByUrl('/mock-signin');
        }
        return Promise.resolve();
    };
    /**
     * Update the OIDC UserManager when called back after successful signin.
     * Real version is called by OidcCallbackComponent after IdentityServer puts user auth package in the URL.
     * This mock version is called by MockSigninComponent and expects a UserData object from that component.
     * @param data - In real version, it is undocumented and undefined in every example on the web.
     * When mocked, it is either a mock OIDC user or mock data for constructing a mock OIDC user.
     */
    MockOidcManager.prototype.signinRedirectCallback = function (data) {
        if (!data || typeof data === 'string') {
            this.logEvent("signinRedirectCallback() called unexpectedly with null or a string");
            return Promise.reject("Program error. Called with null or a string. \"" + data + "\"");
        }
        if (data instanceof _mock_oidc_user__WEBPACK_IMPORTED_MODULE_6__["MockOidcUser"] && data.access_token && !data.expired) {
            this.logEvent("signinRedirectCallback() called with valid MockOidcUser");
            this.oidcUser = data;
        }
        else {
            this.oidcUser = new _mock_oidc_user__WEBPACK_IMPORTED_MODULE_6__["MockOidcUser"](this.jwtService, data);
            this.logEvent("signinRedirectCallback(userData) created new MockOidcUser from userData");
        }
        this.logEvent("signinRedirectCallback() set MockOidcUser in browser storage");
        sessionStorage.setItem(oidcStorageKey, JSON.stringify(this.oidcUser));
        return Promise.resolve(this.oidcUser);
    };
    MockOidcManager.prototype.signoutRedirect = function () {
        this.logEvent('signoutRedirect() removing OIDC user from storage.');
        sessionStorage.removeItem(oidcStorageKey);
        this.logEvent('signoutRedirect() navigating to signout page');
        this.router.navigateByUrl(_core__WEBPACK_IMPORTED_MODULE_7__["WellKnownRoutes"].SignedOut);
        return Promise.resolve();
    };
    MockOidcManager.prototype.getMockOidcUserFromStorage = function () {
        try {
            var oidcUserData = JSON.parse(sessionStorage.getItem(oidcStorageKey));
            var oidcUser = new _mock_oidc_user__WEBPACK_IMPORTED_MODULE_6__["MockOidcUser"](this.jwtService, oidcUserData);
            this.logEvent("getMockOidcUserFromStorage() got and parsed MockOidcUser from browser storage");
            return oidcUser;
        }
        catch (e) {
            return null;
        }
    };
    MockOidcManager.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"]({ factory: function MockOidcManager_Factory() { return new MockOidcManager(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["INJECTOR"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](_jwt_service__WEBPACK_IMPORTED_MODULE_5__["JwtService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"])); }, token: MockOidcManager, providedIn: "root" });
    return MockOidcManager;
}());



/***/ }),

/***/ "./src/app/mock-auth/mock-oidc-user-data.ts":
/*!**************************************************!*\
  !*** ./src/app/mock-auth/mock-oidc-user-data.ts ***!
  \**************************************************/
/*! exports provided: mockOidcUserData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mockOidcUserData", function() { return mockOidcUserData; });
/**
 * Well known mock oidc-users
 */
// tslint:disable:quotemark
var mockOidcUserData = [
    {
        "sub": "SurePayroll:smartypants",
        "email": "m.smart@maxsmart.com",
        "role": "Approver",
        "username": "smartypants"
    },
    {
        "sub": "SurePayroll:550738",
        "email": "d.asher@maxsmart.com",
        "role": "Approver",
        "username": "davidasher"
    },
    {
        "sub": "SurePayrollNewCust:926717",
        "email": "m.moose@bullmoose.com",
        "role": "Approver",
        "username": "zombie088",
    },
    {
        "sub": "SurePayroll:2955390",
        "email": "s.fixit@surepayroll.com",
        "username": "2am73p",
        "role": "Administrator",
    },
    // Ima is deliberately NOT a user in the data
    // Use her to validate the authenticated-user-not-in-ecommerce scenario.
    {
        "sub": "SurePayroll:00000",
        "email": "ima.lost@surepayroll.com",
        "username": "imalost",
        "role": "Approver",
    }
];


/***/ }),

/***/ "./src/app/mock-auth/mock-oidc-user.ts":
/*!*********************************************!*\
  !*** ./src/app/mock-auth/mock-oidc-user.ts ***!
  \*********************************************/
/*! exports provided: MockOidcUser, createMockIdToken, createMockAccessToken, createMockSub, createProfile, generateSubKey, jwtDate, jwtExpire */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MockOidcUser", function() { return MockOidcUser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMockIdToken", function() { return createMockIdToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMockAccessToken", function() { return createMockAccessToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMockSub", function() { return createMockSub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createProfile", function() { return createProfile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateSubKey", function() { return generateSubKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "jwtDate", function() { return jwtDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "jwtExpire", function() { return jwtExpire; });
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _mock_oidc_user_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mock-oidc-user-data */ "./src/app/mock-auth/mock-oidc-user-data.ts");
/* harmony import */ var _signup_signup_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../signup/signup.service */ "./src/app/signup/signup.service.ts");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};



var default_scope = 'document enrollment enrollment_api openid profile role permission';
var fixed_session_state = 'lo70JbROwyGbU35ndfehFr2bfHLoy2t1PwHhU1FGaPo.8553c24b2a45ea16d18ea2dde0691e56';
var MockOidcUser = /** @class */ (function () {
    function MockOidcUser(jwtService, userData) {
        this.isMockOidcUser = true;
        this.session_state = fixed_session_state;
        this.token_type = 'Bearer';
        this.scope = _environment__WEBPACK_IMPORTED_MODULE_0__["environment"].oidcScope;
        if (userData.isMockOidcUser) {
            this.createFromOidcUser(userData);
        }
        else {
            this.createFromUserData(jwtService, userData);
        }
    }
    MockOidcUser.prototype.createFromOidcUser = function (user) {
        var profile = user.profile;
        if (!profile || !profile.sub) {
            throw new Error('Tried to create OidcUser from bad MockOidcUser source');
        }
        this.id_token = user.id_token;
        this.session_state = user.session_state;
        this.access_token = user.access_token;
        this.token_type = user.token_type;
        this.scope = user.scope;
        this.profile = profile;
        this.expires_at = user.expires_at;
        this.state = user.state;
        this.username = user.username;
    };
    MockOidcUser.prototype.createFromUserData = function (jwtService, data) {
        var username = data.username, role = data.role, email = data.email;
        var sub = createMockSub(username);
        // Use user data from well know source if found
        var known = _mock_oidc_user_data__WEBPACK_IMPORTED_MODULE_1__["mockOidcUserData"].find(function (d) { return d.sub === sub || d.username === username; });
        if (known) {
            (sub = known.sub, username = known.username, role = known.role, email = known.email);
        }
        this.id_token = createMockIdToken(jwtService, sub);
        this.access_token = createMockAccessToken(jwtService, sub, username, role, email);
        this.expires_at = jwtExpire();
        this.profile = createProfile(sub, username, role);
    };
    Object.defineProperty(MockOidcUser.prototype, "expires_in", {
        get: function () {
            return Math.max(0, this.expires_at - Math.floor(Date.now() / 1000));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MockOidcUser.prototype, "expired", {
        get: function () {
            return this.expires_in <= 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MockOidcUser.prototype, "scopes", {
        get: function () {
            return this.scope.split(' ');
        },
        enumerable: true,
        configurable: true
    });
    MockOidcUser.prototype.toStorageString = function () {
        return MockOidcUser.oidcStorageKey;
    };
    // Where we stash the current OIDC user in browser storage
    MockOidcUser.oidcStorageKey = 'oidc.user:mock-oidc-user';
    return MockOidcUser;
}());

// #region prototype data
// tslint:disable:quotemark
// tslint:disable:max-line-length
// "access_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IkU0QUQxN0I0N0MxOUY3NTlDN0JBQTgwREEzMEQxN0M1QjlDMjI3NTUiLCJ0eXAiOiJKV1QiLCJ4NXQiOiI1SzBYdEh3Wjkxbkh1cWdOb3cwWHhibkNKMVUifQ.eyJuYmYiOjE1MzIxMjkwMjYsImV4cCI6MTUzMjEzMjYyNiwiaXNzIjoiaHR0cHM6Ly9kZXZpZGVudGl0eS5zdXJlcGF5cm9sbC5jb20iLCJhdWQiOlsiaHR0cHM6Ly9kZXZpZGVudGl0eS5zdXJlcGF5cm9sbC5jb20vcmVzb3VyY2VzIiwidHJ5b3V0IiwidHJ5b3V0X2FwaSJdLCJjbGllbnRfaWQiOiJqc190cnlvdXRfYXBpIiwic3ViIjoiU3VyZVBheXJvbGw6NTUwNzM4IiwiYXV0aF90aW1lIjoxNTMyMTE1MzM4LCJpZHAiOiJsb2NhbCIsImVtYWlsIjoiVGVzdEBEZXZNYWlsLnN1cmVwYXlyb2xsLmxvY2FsIiwicm9sZSI6WyJBZG1pbmlzdHJhdG9yIiwiRW1wbG95ZWUiLCJBcHByb3ZlciIsIkFwcHJvdmVyIiwiRW1wbG95ZWUiLCJFeGVjdXRpdmUiXSwicGVybWlzc2lvbiI6InVua25vd24iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIiwicm9sZSIsInBlcm1pc3Npb24iLCJ0cnlvdXQiLCJ0cnlvdXRfYXBpIl0sImFtciI6WyJwd2QiXX0.NhPs1daqPmvHAOHoTmKLI8PMEnK42o-L6bs1QBiIQROLVfFHby_Oot8YIllAdBI8hN0x9K3o9F4tFYjJXMdsAbpJdnVVqGQfT9cELhnoi6g2PmhZOJMZvSo0tWm7_y_6Klu-p8XQjLTNIGU277Y8pnw6cerwO6FieZW5uMo_1kPclcKvOyBGJQXiRGBT5aRA2OhvygA6b8dfc1lx_iZZy_32j3V4Dla_Xs55lmmBqUSghaxxL12sd9AbOIMD-bKvfEUX6OQ-Q8en17saO4_gkF-mdsUPwNXdg67smuSUMqfAJ7fsPhcmWEd20ni3feG1ndaEHIen5ARFqi9nDaPMPObyK5ywKfm00UGsVWd2YtW0f0RBA-e53br9W0V4yGegEUw4Z97sVEk4bOGwKTHLHoLDN3lUjD5hap804N3zdJGPoSXpyHbQ7CPH76qPNfDMM2Ib_o3LrMxmXcqAC3PffUMd3iX3qb6d6835IqV10prOKuHuo_QiZPAd-rHXYamiLRR-sV5H3m2wbx6CWbJoVUjoZoOoxJJ15QHQCZEgcGhKN9TfiqCFbo-kFRtmh3xFAeVX8rTjPKwrF0W3B05piNbD8fDGZMiUkvSLEFL86dH1zEGAZctsTsobPhRtMoprZKzfBRmkhH0mIguo7hlaCGlUtkkFtxbJ-7T1aNoDJuE"
/** Example AccessToken from the web */
var accessTokenPrototype = {
    "nbf": 1532115339,
    "exp": 1532118939,
    "iss": "https://devidentity.surepayroll.com",
    "aud": [
        "https://devidentity.surepayroll.com/resources",
        "ecommerce"
    ],
    "client_id": "ecommerce",
    "sub": "SurePayroll:550738",
    "auth_time": 1532115338,
    "idp": "local",
    "email": "Test@DevMail.surepayroll.local",
    "role": [
        "Approver",
        "Executive"
    ],
    "permission": "unknown",
    "scope": [
        "document",
        "enrollment",
        "enrollment_api",
        "openid",
        "profile",
        "role",
        "permission"
    ],
    "amr": [
        "pwd"
    ]
};
// "id_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IkU0QUQxN0I0N0MxOUY3NTlDN0JBQTgwREEzMEQxN0M1QjlDMjI3NTUiLCJ0eXAiOiJKV1QiLCJ4NXQiOiI1SzBYdEh3Wjkxbkh1cWdOb3cwWHhibkNKMVUifQ.eyJuYmYiOjE1MzIxMjkwMjYsImV4cCI6MTUzMjEyOTMyNiwiaXNzIjoiaHR0cHM6Ly9kZXZpZGVudGl0eS5zdXJlcGF5cm9sbC5jb20iLCJhdWQiOiJqc190cnlvdXRfYXBpIiwibm9uY2UiOiJjYTRiOTM1Y2JkNDE0ZmRmYjAyMTVjYzQ0ZTU3YTRhYyIsImlhdCI6MTUzMjEyOTAyNiwiYXRfaGFzaCI6InY2MG9zY2RUT2hxZHBRMjdEajVxT2ciLCJzaWQiOiI4YzY3ZGRkOWI3NTg4ZmM5YTM3Y2IzZmUxNDQ3ZjljZCIsInN1YiI6IlN1cmVQYXlyb2xsOjU1MDczOCIsImF1dGhfdGltZSI6MTUzMjExNTMzOCwiaWRwIjoibG9jYWwiLCJhbXIiOlsicHdkIl19.nTiCcfd0-gyHP4_xZNtA21orsir2Sgb5AcHPK2nrlA-SINQum72SMonCPTM75F65BWo0dgCA1sSZivPD-1iOGe_qEmwBVyXp9DP1LURJxBaYOWK5arICE52_cpRm9rd3wn9toGq7ynAustBVGK_DACRtjMDFhcIYShPOywiCTBOU43vXc-nBoriSs-dkpqVpsRI-1GDy-3oU1QGVgF-sdE7oFJX9P_niLfrBkt0BHLWUIu0P4jma5rudTySWSwJUycrecfueDOUx0wvmnmFTCdIlTeiajKLt8kWB81kVVNVqx_OxkFMK5AM03NUFU09dg1Vf0A5_9YtKkkmTRXldoCkirzG8MX_6MvIvv-WUJHrLqvKGO6HP16hSzfGCOWJDfycGuoqYIpsWTvt7_IiEEf8YqAb3lpsutmmQa_yeIl_aXaXN0mcBep5v7vOc43dSEwUUZvjfddK2yVN-YMWnyHCfOO5xCz0195UGUCRBfYIRgxnPrT_pq9FIn4eLvvu1FGEZzfi5toiss0XAK1z7oxHiyYbs-zi0PiCCmL9a1bRaGGJ--4e0nOArcZW1V-T1Gc7Pckm-A2dn8_miWl7hALrfeIQyvaGIJEBC5375LM9e-yqe5uE12LasvgqRDRcZrXGKy8bKKDfwB8zwJKnGCP2SPR_OlZlHOyaSA2GcaHs",
/** Example IdentityToken data from the web */
var identityTokenPrototype = {
    "nbf": 1532129026,
    "exp": 1532129326,
    "iss": "https://devidentity.surepayroll.com",
    "aud": "js_tryout_api",
    "nonce": "ca4b935cbd414fdfb0215cc44e57a4ac",
    "iat": 1532129026,
    // "at_hash": "v60oscdTOhqdpQ27Dj5qOg", // Bet this is AccessToken hash. Don't do try it.
    "sid": "8c67ddd9b7588fc9a37cb3fe1447f9cd",
    "sub": "SurePayroll:550738",
    "auth_time": 1532115338,
    "idp": "local",
    "amr": [
        "pwd"
    ]
};
var profilePrototype = {
    "sid": "8c67ddd9b7588fc9a37cb3fe1447f9cd",
    "sub": "SurePayroll:550738",
    "auth_time": 1532115338,
    "idp": "local",
    "amr": [
        "pwd"
    ],
    "preferred_username": "davidasher",
    "family_name": "",
    "given_name": "",
    "role": [
        "Executive",
        "Approver"
    ],
    "permission": "unknown"
};
// tslint:enable:quotemark
// tslint:enable:max-line-length
// #endregion prototype data
// #region helper fns
/**
 * Create JWT Identity Token.
 * This mock creates one from a username by our mocking convention.
 */
function createMockIdToken(jwtService, sub) {
    var data = __assign({}, identityTokenPrototype, { sub: sub, nbf: jwtDate() - 60, exp: jwtExpire() });
    return jwtService.createJwt(data);
}
/**
 * Create JWT Access Token.
 * This mock creates one from a username using our mocking convention.
 * @param username
 * @param [role] a string of one or more, space-separated, roles.
 * @param [email] user's email address
 */
function createMockAccessToken(jwtService, sub, username, role, email) {
    var roleArray = role ? role.trim().split(' ') : accessTokenPrototype.role;
    var data = __assign({}, accessTokenPrototype, { sub: sub, nbf: jwtDate() - 60, exp: jwtExpire(), iat: jwtDate(), email: email || accessTokenPrototype.email, role: roleArray });
    return jwtService.createJwt(data);
}
/**
 * Create the (sub)ject, which is the permanent, cross-SP app identifier.
 * This mock creates one from a username by our mocking convention.
 */
function createMockSub(username) {
    return _signup_signup_service__WEBPACK_IMPORTED_MODULE_2__["subPrefix"] + ((username || '').trim() || generateSubKey());
}
/**
 * Create an SP profile with a sub, username and role
 * @param [sub] The "Subject" id; if missing, will create one
 * @param [username] with which the user signed in, used to create the sub if necessary.
 * @param [role] a string of one or more, space-separated, roles.
 */
function createProfile(sub, username, role) {
    var roleArray = role ? role.trim().split(' ') : profilePrototype.role;
    return __assign({}, profilePrototype, { sub: sub || createMockSub(username), preferred_username: username, role: roleArray });
}
/** Generate a pseudo-random SP sub key for mocking purposes */
function generateSubKey() {
    return (Math.floor(Math.random() * 100000) + '01234').substr(0, 5);
}
/** return the date/time value in a JWT (it's in seconds)  */
function jwtDate(date) {
    var value = date ? date.valueOf() : Date.now();
    return Math.floor(value / 1000);
}
function jwtExpire(date, addHours) {
    return jwtDate(date) + (addHours || 3) * 60 * 60;
}
// #endregion helper fns


/***/ }),

/***/ "./src/app/mock-services/db.ts":
/*!*************************************!*\
  !*** ./src/app/mock-services/db.ts ***!
  \*************************************/
/*! exports provided: Db */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Db", function() { return Db; });
var Db = /** @class */ (function () {
    function Db() {
        this.Address = [];
        this.Ancillary = [];
        this.Company = [];
        this.CompanyDeduction = [];
        this.CompanyEarning = [];
        this.CompanyTax = [];
        this.Document = [];
        this.Envelope = [];
        this.EnvelopeSigner = [];
        this.Employee = [];
        this.EmployeeDeduction = [];
        this.EmployeePaymentMethod = [];
        this.EmployeeTax = [];
        this.HouseholdFilers = [];
        this.Stats = [];
        this.User = [];
        this.CompanyVersion = {};
    }
    return Db;
}());



/***/ }),

/***/ "./src/app/mock-services/http-client-backend-service-sp.ts":
/*!*****************************************************************!*\
  !*** ./src/app/mock-services/http-client-backend-service-sp.ts ***!
  \*****************************************************************/
/*! exports provided: mockDbKey, HttpClientBackendServiceSp, httpClientInMemBackendServiceFactory, httpClientBackendServiceProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mockDbKey", function() { return mockDbKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpClientBackendServiceSp", function() { return HttpClientBackendServiceSp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "httpClientInMemBackendServiceFactory", function() { return httpClientInMemBackendServiceFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "httpClientBackendServiceProvider", function() { return httpClientBackendServiceProvider; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var angular_in_memory_web_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! angular-in-memory-web-api */ "./node_modules/angular-in-memory-web-api/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _http_server_concurrency_interceptor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./http-server-concurrency-interceptor */ "./src/app/mock-services/http-server-concurrency-interceptor.ts");
/* harmony import */ var _in_memory_data_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./in-memory-data.service */ "./src/app/mock-services/in-memory-data.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/** True if should NOT get and save mock db from local storage, e.g. start up URL `?noSavedMockDb`) */
var noSavedMockDb = window.location.search.includes('noSavedMockDb');
/** True if should clear saved mock db from local storage, e.g. start up URL `?clearSavedMockDb`) */
var clearSavedMockDb = window.location.search.includes('clearSavedMockDb');
/** Key of mockDb in local storage */
var mockDbKey = 'sp-mock-db';
/**
 * Override HttpServerConcurrencyInterceptor which subclasses InMemoryWebApi HttpClientBackendService
 * - save and restore in-mem DB from browser local storage before/after every request
 * - add '?noSavedMockDb' to initial page URL to only use temporary, initial in-mem JSON
 * - add '?clearSavedMockDb` to clear the saved version and start with in-mem JSON
 * - can combine these flags
 */
var HttpClientBackendServiceSp = /** @class */ (function (_super) {
    __extends(HttpClientBackendServiceSp, _super);
    function HttpClientBackendServiceSp(inMemDataService, config, xhrFactory) {
        var _this = _super.call(this, inMemDataService, config, xhrFactory) || this;
        // `req` passed for debugging
        _this.getDbFromLocalStorage = function (req) { };
        _this.saveDbToLocalStorage = function (req) { };
        /** Clear the DB in local storage when app starts with URL search item 'clearSavedMockDb' */
        if (clearSavedMockDb && window.localStorage) {
            window.localStorage.removeItem(mockDbKey);
            console.log("MOCKING: Cleared mock DB in local storage at \"" + mockDbKey + "\".");
        }
        /**
         * Get and save DB to local storage before and after each request
         * unless app starts with URL search item 'noSavedMockDb'
         */
        if (!noSavedMockDb && window.localStorage) {
            console.log("MOCKING: Saving mock DB to local storage in \"" + mockDbKey + "\".");
            _this.getDbFromLocalStorage = function (req) {
                var db = window.localStorage.getItem(mockDbKey);
                if (db) {
                    _this.db = inMemDataService.db = JSON.parse(db);
                }
            };
            _this.saveDbToLocalStorage = function (req) {
                window.localStorage.setItem(mockDbKey, JSON.stringify(inMemDataService.db));
            };
        }
        else {
            console.log("MOCKING: Not saving to local storage; initialized with JSON file.");
        }
        return _this;
    }
    /** Process Request and return an Observable of Http Response object */
    HttpClientBackendServiceSp.prototype.handleRequest_ = function (req) {
        var _this = this;
        this.getDbFromLocalStorage(req);
        return _super.prototype.handleRequest_.call(this, req).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function () { return _this.saveDbToLocalStorage(req); }, function () { return _this.saveDbToLocalStorage(req); })
        // Do NOT use finalize() because it is called a tick after next/error,
        // leading to request/response race conditions.
        // Ex: SessionService.setAccountStatus(), which sets status, then reloads CompanyPackage
        // finalize(() => this.saveDbToLocalStorage(req))
        );
    };
    return HttpClientBackendServiceSp;
}(_http_server_concurrency_interceptor__WEBPACK_IMPORTED_MODULE_3__["HttpServerConcurrencyInterceptor"]));

// #region provider logic
function httpClientInMemBackendServiceFactory(dbService, options, xhrFactory) {
    var backend = new HttpClientBackendServiceSp(dbService, options, xhrFactory);
    return backend;
}
var httpClientBackendServiceProvider = {
    provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpBackend"],
    useFactory: httpClientInMemBackendServiceFactory,
    deps: [angular_in_memory_web_api__WEBPACK_IMPORTED_MODULE_1__["InMemoryDbService"], angular_in_memory_web_api__WEBPACK_IMPORTED_MODULE_1__["InMemoryBackendConfig"], _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["XhrFactory"]]
};
// #endregion provider logic


/***/ }),

/***/ "./src/app/mock-services/http-server-concurrency-interceptor.ts":
/*!**********************************************************************!*\
  !*** ./src/app/mock-services/http-server-concurrency-interceptor.ts ***!
  \**********************************************************************/
/*! exports provided: HttpServerConcurrencyInterceptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpServerConcurrencyInterceptor", function() { return HttpServerConcurrencyInterceptor; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var angular_in_memory_web_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! angular-in-memory-web-api */ "./node_modules/angular-in-memory-web-api/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _in_memory_data_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./in-memory-data.service */ "./src/app/mock-services/in-memory-data.service.ts");
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _core_http_interceptors_concurrency_http_interceptor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @core/http-interceptors/concurrency-http-interceptor */ "./src/app/core/http-interceptors/concurrency-http-interceptor.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();








/**
 * Override InMemoryWebApi HttpClientBackendService
 * Mimics server-side etag/precondition header concurrency behavior documented in
 * https://docs.google.com/document/d/1WzMeGVaVcxp3q0QNV0dC0ZLaUAZal39DnErQ0hbdwjM/edit#
 * Companion to client app's ConcurrencyHttpInterceptor
 */
var HttpServerConcurrencyInterceptor = /** @class */ (function (_super) {
    __extends(HttpServerConcurrencyInterceptor, _super);
    function HttpServerConcurrencyInterceptor(inMemDataService, config, xhrFactory) {
        var _this = _super.call(this, inMemDataService, config, xhrFactory) || this;
        _this.inMemDataService = inMemDataService;
        return _this;
    }
    /** Process request and return an Observable of Http Response object */
    HttpServerConcurrencyInterceptor.prototype.handleRequest_ = function (reqCore) {
        var req = reqCore;
        return Object(_core_http_interceptors_concurrency_http_interceptor__WEBPACK_IMPORTED_MODULE_6__["requiresConcurrencyControl"])(req)
            ? this.handleConcurrencyRequest(req)
            : _super.prototype.handleRequest_.call(this, reqCore);
    };
    /** Process request that requires concurrency control */
    HttpServerConcurrencyInterceptor.prototype.handleConcurrencyRequest = function (req) {
        var _this = this;
        var revertCompanyVersion = function () { };
        var precondition = req.headers.get('If-Match');
        if (!precondition) {
            return createErrorResponse$(428, 'Precondition Required', req.url);
        }
        var match = precondition.match(/"(.*)"/);
        var etag = match ? match[1] : '';
        var _a = Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_5__["parseCompanyEtag"])(etag), companyId = _a.companyId, requestVersion = _a.version;
        if (!companyId || isNaN(requestVersion)) {
            return createErrorResponse$(400, 'Bad Request', req.url, "Badly formed \"If-Match\" header or etag: " + precondition + ".");
        }
        var currentVersion = this.inMemDataService.db.CompanyVersion[companyId];
        if (currentVersion == null) {
            return createErrorResponse$(404, 'Not Found', req.url, "Company for Etag:" + etag + " not found.");
        }
        if (currentVersion !== requestVersion) {
            return createErrorResponse$(412, 'Precondition Failed', req.url, "Company version does not match Etag:" + etag + ".");
        }
        // Conditionally update company version. Ready to revert if server responds with an error.
        var newVersion = requestVersion + 1;
        this.inMemDataService.db.CompanyVersion[companyId] = newVersion;
        var newEtag = Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_5__["createCompanyEtag"])(companyId, newVersion);
        /** Revert the version change in the DB */
        revertCompanyVersion = function () {
            _this.inMemDataService.db.CompanyVersion[companyId] = currentVersion;
        };
        return _super.prototype.handleRequest_.call(this, req).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            var reqDebug = req; // capture request for debugging
            var status = res.status;
            // replay with the new etag if recognized response status
            if (status === 200 || status === 201 || status === 204) {
                // set the header with the "weak" indicator
                // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag#Directives
                var headers = res.headers.set('Etag', "W/\"" + newEtag + "\"");
                res = res.clone({ headers: headers });
            }
            return res;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (error) {
            var reqDebug = req; // capture request for debugging
            revertCompanyVersion();
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["throwError"])(error);
        }));
    };
    return HttpServerConcurrencyInterceptor;
}(angular_in_memory_web_api__WEBPACK_IMPORTED_MODULE_1__["HttpClientBackendService"]));

function createErrorResponse$(status, statusText, url, error) {
    var err = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpErrorResponse"]({ status: status, statusText: statusText, url: url, error: error });
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["throwError"])(err).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["observeOn"])(rxjs__WEBPACK_IMPORTED_MODULE_2__["asapScheduler"]));
}


/***/ }),

/***/ "./src/app/mock-services/in-mem-account-state-transitions.ts":
/*!*******************************************************************!*\
  !*** ./src/app/mock-services/in-mem-account-state-transitions.ts ***!
  \*******************************************************************/
/*! exports provided: accountStateTransitions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accountStateTransitions", function() { return accountStateTransitions; });
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");

/**
 * AccountStatus transitions
 * Align with SurePayroll server transitions
 * See SurePayroll.Enrollment.Services/AccountStateTransition/DefaultTransitionStateMachine.cs
 */
var accountStateTransitions = [
    // #region Open ->
    // // (from, to, allowAdminOverride, allowWithErrors, hideInUi )
    // AddTransition(CompanyStatuses.Open, CompanyStatuses.ReadyForDocs);
    // AddTransition(CompanyStatuses.Open, CompanyStatuses.Test, false, true, true);
    // AddTransition(CompanyStatuses.Open, CompanyStatuses.Abandoned, false, true, true);
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Open,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Docs,
        'automaticTransition': false,
        'allowAdminOverride': false,
        'allowWithErrors': false,
        'hideInUi': false
    },
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Open,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Test,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': true,
        'hideInUi': false
    },
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Open,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Abandoned,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': true,
        'hideInUi': false
    },
    // #endregion Docs ->
    // #region Open ->
    // // (from, to, allowAdminOverride, allowWithErrors, hideInUi )
    // AddTransition(CompanyStatuses.ReadyForDocs, CompanyStatuses.AutoMigrate);
    // AddTransition(CompanyStatuses.ReadyForDocs, CompanyStatuses.WaitingForOps);
    // AddTransition(CompanyStatuses.ReadyForDocs, CompanyStatuses.Test, false, true, true);
    // AddTransition(CompanyStatuses.ReadyForDocs, CompanyStatuses.Abandoned, false, true, true);
    // AddTransition(CompanyStatuses.ReadyForDocs, CompanyStatuses.Open, false, true, true);
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Docs,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].AutoMigrate,
        'automaticTransition': false,
        'allowAdminOverride': false,
        'allowWithErrors': false,
        'hideInUi': true
    },
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Docs,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Operations,
        'automaticTransition': false,
        'allowAdminOverride': false,
        'allowWithErrors': false,
        'hideInUi': false
    },
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Docs,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Test,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': true,
        'hideInUi': false
    },
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Docs,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Abandoned,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': true,
        'hideInUi': false
    },
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Docs,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Open,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': true,
        'hideInUi': false
    },
    // #endregion Docs ->
    // #region AutoMigrate ->
    // // (from, to, allowAdminOverride, allowWithErrors, hideInUi )
    // AddTransition(CompanyStatuses.AutoMigrate, CompanyStatuses.MigratingToSp, true, true, false, true);
    // AddTransition(CompanyStatuses.AutoMigrate, CompanyStatuses.WaitingForOps, false, true, true, true);
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].AutoMigrate,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Migrating,
        'automaticTransition': true,
        'allowAdminOverride': true,
        'allowWithErrors': false,
        'hideInUi': true
    },
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].AutoMigrate,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Operations,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': true,
        'hideInUi': true
    },
    // #endregion AutoMigrate ->
    // #region Operations ->
    // // (from, to, allowAdminOverride, allowWithErrors, hideInUi )
    // AddTransition(CompanyStatuses.WaitingForOps, CompanyStatuses.MigratingToSp, false, true, false, true);
    // AddTransition(CompanyStatuses.WaitingForOps, CompanyStatuses.Test, false, true, true);
    // AddTransition(CompanyStatuses.WaitingForOps, CompanyStatuses.Open, false, true, true);
    // AddTransition(CompanyStatuses.WaitingForOps, CompanyStatuses.Enrolled, false, true, true);
    // MISSING: AddTransition(CompanyStatuses.WaitingForOps, CompanyStatuses.Abandoned, false, true, true);
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Operations,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Migrating,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': false,
        'hideInUi': true
    },
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Operations,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Test,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': true,
        'hideInUi': false
    },
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Operations,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Open,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': true,
        'hideInUi': false
    },
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Operations,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Enrolled,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': true,
        'hideInUi': false
    },
    // TODO: Add to server!
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Operations,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Abandoned,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': true,
        'hideInUi': false
    },
    // #endregion Operations ->
    // #region Migrating ->
    // // (from, to, allowAdminOverride, allowWithErrors, hideInUi )
    // AddTransition(CompanyStatuses.MigratingToSp, CompanyStatuses.Enrolled, hideInUi: true);
    // AddTransition(CompanyStatuses.MigratingToSp, CompanyStatuses.WaitingForOps);
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Migrating,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Enrolled,
        'automaticTransition': false,
        'allowAdminOverride': false,
        'allowWithErrors': false,
        'hideInUi': true
    },
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Migrating,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Operations,
        'automaticTransition': false,
        'allowAdminOverride': false,
        'allowWithErrors': false,
        'hideInUi': false
    },
    // #endregion Migrating ->
    // TODO: Add to the server!
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Abandoned,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Operations,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': true,
        'hideInUi': false
    },
    // TODO: Add to the server!
    {
        'current': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Test,
        'next': _model__WEBPACK_IMPORTED_MODULE_0__["AccountStatus"].Operations,
        'automaticTransition': false,
        'allowAdminOverride': true,
        'allowWithErrors': true,
        'hideInUi': false
    },
];


/***/ }),

/***/ "./src/app/mock-services/in-mem-account.service.ts":
/*!*********************************************************!*\
  !*** ./src/app/mock-services/in-mem-account.service.ts ***!
  \*********************************************************/
/*! exports provided: InMemAccountService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemAccountService", function() { return InMemAccountService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _in_mem_account_state_transitions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./in-mem-account-state-transitions */ "./src/app/mock-services/in-mem-account-state-transitions.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};




var InMemAccountService = /** @class */ (function () {
    function InMemAccountService() {
    }
    InMemAccountService.prototype.getRequest = function (req, db) {
        if (req.url && req.url.includes('/account/user')) {
            return this.getUser(req, db);
        }
        // Account status transitions: GET `${environment.spApiRoot}/account/accountStateTransitions`
        if (req.url && req.url.endsWith('/account/accountStateTransitions')) {
            return this.accountStateTransitions(req);
        }
    };
    InMemAccountService.prototype.postRequest = function (req, db) {
        if (req.url && req.url.includes('/account/new')) {
            return this.createNewAccount(req, db);
        }
        if (req.url && req.url.includes('/account/user')) {
            return this.getUser(req, db);
        }
        return this.ifSetAccountStatusReq(req, db);
    };
    // simulate creating User and Company
    InMemAccountService.prototype.createNewAccount = function (reqInfo, db) {
        var originalRequest = reqInfo.req;
        var _a = originalRequest.body, company = _a.company, user = _a.user, householdFilers = _a.householdFilers, stats = _a.stats;
        db.CompanyVersion[company.id] = 0; // force version of new company to be 0.
        db.Company.push(company);
        db.HouseholdFilers.push(householdFilers);
        db.Stats.push(stats);
        db.User.push(user);
        var headers = Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["addCompanyEtagResponseHeader"])(db, company.id);
        // return createOkResponse$(reqInfo, originalRequest.body); // alpha.2 - must return a ChangeSet in the body
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createNoContentResponse$"])(reqInfo, headers); // alpha.3 - not necessary if no changes to request ChangeSet.
    };
    InMemAccountService.prototype.getUser = function (req, db) {
        var oidcSub = Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["getSubFromRequest"])(req);
        var user = oidcSub && db.User.find(function (u) { return u.oidcSub === oidcSub; });
        if (!user && oidcSub) {
            // Hey, we're mocking here!  Maybe it's a made-up new account. Look for a user name match.
            var username_1 = oidcSub.substring(oidcSub.indexOf(':') + 1).toLowerCase(); // everything after the colon.
            user = db.User.find(function (u) { return u.username.toLowerCase() === username_1; });
            if (!user && /@surepayroll.com$/i.test(username_1)) {
                // A SurePayroll admin who isn't in the db.
                // Do as the server does and fake a user for this
                user = {
                    // Data from 'ward.bell@surepayroll.com'
                    id: 'eb82bed78eca487198e82bba9c8ec6e6',
                    oidcSub: 'Ldap:bDzBC0nYjbGdgbmDRTYG',
                    userRole: 'Administrator',
                    username: username_1
                };
            }
        }
        if (user) {
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, user);
        }
        else {
            var errOptions_1 = {
                url: req.url,
                status: _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].NOT_FOUND,
                statusText: 'Not Found',
                body: {}
            };
            return req.utils.createResponse$(function () { return errOptions_1; });
        }
    };
    InMemAccountService.prototype.ifSetAccountStatusReq = function (req, db) {
        var setStatusReq = req.url.match(/\/account\/(.*)\/status$/);
        if (setStatusReq) {
            var companyId_1 = setStatusReq[1];
            var companyIx = db.Company.findIndex(function (c) { return c.id === companyId_1; });
            var status_1 = (req.req.body || {}).status;
            var replyOptions_1;
            if (-1 === companyIx) {
                replyOptions_1 = { status: _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].NOT_FOUND, statusText: 'Not Found', body: { companyId: companyId_1 } };
            }
            else if (!status_1) {
                replyOptions_1 = {
                    status: _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].BAD_REQUEST,
                    statusText: 'Bad Request',
                    body: 'no status specified'
                };
            }
            else if (!_model__WEBPACK_IMPORTED_MODULE_1__["AccountStatusCodes"].getByValue(status_1)) {
                replyOptions_1 = {
                    status: _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].BAD_REQUEST,
                    statusText: 'Bad Request',
                    body: "invalid status, \"" + status_1 + "\""
                };
            }
            else {
                replyOptions_1 = this.setAccountStatus(companyIx, db, status_1);
            }
            replyOptions_1.url = req.url;
            return req.utils.createResponse$(function () { return replyOptions_1; });
        }
        return null; // not a setStatus request
    };
    InMemAccountService.prototype.setAccountStatus = function (companyIx, db, status) {
        // Will likely get more complicated. Return w/o errors
        db.Company[companyIx] = __assign({}, db.Company[companyIx], { status: status });
        return { status: _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].OK, statusText: 'OK', body: [] };
    };
    InMemAccountService.prototype.accountStateTransitions = function (reqInfo) {
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(reqInfo, _in_mem_account_state_transitions__WEBPACK_IMPORTED_MODULE_2__["accountStateTransitions"]);
    };
    InMemAccountService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_3__["defineInjectable"]({ factory: function InMemAccountService_Factory() { return new InMemAccountService(); }, token: InMemAccountService, providedIn: "root" });
    return InMemAccountService;
}());



/***/ }),

/***/ "./src/app/mock-services/in-mem-address-validator.service.ts":
/*!*******************************************************************!*\
  !*** ./src/app/mock-services/in-mem-address-validator.service.ts ***!
  \*******************************************************************/
/*! exports provided: InMemAddressValidatorService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemAddressValidatorService", function() { return InMemAddressValidatorService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var InMemAddressValidatorService = /** @class */ (function () {
    function InMemAddressValidatorService() {
    }
    InMemAddressValidatorService.prototype.getRequest = function (req, db) {
        if (req.url && req.url.includes('taxapi/address')) {
            var body = req.req.body;
            var zip = body.zip;
            var state = body.state;
            return this.getAddressesList(req, db, state, zip);
        }
    };
    InMemAddressValidatorService.prototype.getAddressesList = function (req, db, state, zip) {
        var body = [
            {
                city: 'New York',
                state: 'NY',
                zip: '10012',
                county: '',
                addressLine1: '77 E Houston St',
                addressLine2: '',
                geoCode: 'NY0000001',
                schoolDistrict: 0,
                schoolDistrictName: null,
                psdCode: 0
            },
            {
                city: 'New York',
                state: 'NY',
                zip: '10012',
                county: '',
                addressLine1: '77 W Houston St',
                addressLine2: '',
                geoCode: 'NY0000002',
                schoolDistrict: 0,
                schoolDistrictName: null,
                psdCode: 0
            },
            // Demonstrate a difference only in county
            {
                city: 'Philadelphia',
                state: 'PA',
                zip: '19132-1813',
                county: 'County A',
                addressLine1: '3111 West Lehigh Avenue',
                addressLine2: '',
                geoCode: 'PA0000001',
                schoolDistrict: 0,
                schoolDistrictName: null,
                psdCode: 0
            },
            {
                city: 'Philadelphia',
                state: 'PA',
                zip: '19132-1813',
                county: 'County B',
                addressLine1: '3111 West Lehigh Avenue',
                addressLine2: '',
                geoCode: 'PA0000002',
                schoolDistrict: 0,
                schoolDistrictName: null,
                psdCode: 0
            },
            {
                city: 'Collegeville',
                state: 'PA',
                zip: '19426',
                county: '',
                addressLine1: '595 Gravel Pike',
                addressLine2: '',
                geoCode: 'PA0000003',
                schoolDistrict: 67900,
                schoolDistrictName: 'SD Collegeville',
                psdCode: 671401
            },
            {
                city: 'Whittier',
                state: 'CA',
                zip: '90601',
                county: '',
                addressLine1: 'Turnbull Canyon Rd',
                addressLine2: '',
                geoCode: 'CA0000001',
                schoolDistrict: 0,
                schoolDistrictName: null,
                psdCode: 0
            },
            {
                city: 'Fullerton',
                state: 'CA',
                zip: '92832',
                county: '',
                addressLine1: '321 E Chapman Ave',
                addressLine2: '',
                geoCode: 'CA0000002',
                schoolDistrict: 67900,
                schoolDistrictName: 'Fullerton SD',
                psdCode: 671401
            },
            {
                city: 'Berkeley',
                state: 'CA',
                zip: '94706',
                county: '',
                addressLine1: '2020 Channing Way',
                addressLine2: '',
                geoCode: 'CA0000003',
                schoolDistrict: 0,
                schoolDistrictName: null,
                psdCode: 0
            },
            {
                city: 'Las Vegas',
                state: 'NV',
                zip: '89109',
                county: '',
                addressLine1: '115 E Tropicana Ave',
                addressLine2: '',
                geoCode: 'NV0000001',
                schoolDistrict: 0,
                schoolDistrictName: null,
                psdCode: 0
            },
            {
                city: 'Las Vegas',
                state: 'NV',
                zip: '89108',
                county: '',
                addressLine1: '1951 N Jones Blvd',
                addressLine2: '',
                geoCode: 'NV0000002',
                schoolDistrict: 0,
                schoolDistrictName: null,
                psdCode: 0
            }
        ].filter(function (e) { return e.zip === zip && e.state === state; });
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, body);
    };
    InMemAddressValidatorService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_1__["defineInjectable"]({ factory: function InMemAddressValidatorService_Factory() { return new InMemAddressValidatorService(); }, token: InMemAddressValidatorService, providedIn: "root" });
    return InMemAddressValidatorService;
}());



/***/ }),

/***/ "./src/app/mock-services/in-mem-admin.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/mock-services/in-mem-admin.service.ts ***!
  \*******************************************************/
/*! exports provided: InMemAdminService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemAdminService", function() { return InMemAdminService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var InMemAdminService = /** @class */ (function () {
    function InMemAdminService() {
    }
    InMemAdminService.prototype.getRequest = function (req, db) {
        if (req.url && req.url.includes('/admin/accountquery')) {
            return this.getAccountList(req, db);
        }
    };
    InMemAdminService.prototype.getAccountList = function (req, db) {
        var rows = db.User.map(function (u) {
            var c = db.Company.find(function (co) { return co.id === u.companyId; });
            return {
                bcl: c.bcl,
                companyId: c.id,
                dbaName: c.name,
                email: u.email,
                firstName: u.firstName,
                lastName: u.lastName,
                legalName: c.legalName,
                phone: u.phone,
                startDate: c.enrollmentStartDate,
                status: c.status,
                userId: u.id,
                username: u.username
            };
        });
        // filter rows based on query params
        if (req.query.has('status')) {
            var status_1 = req.query.get('status')[0];
            rows = rows.filter(function (r) { return status_1.includes(r.status); });
        }
        if (req.query.has('text')) {
            var text_1 = req.query.get('text')[0].toLowerCase();
            rows = rows.filter(function (r) { return r.legalName && r.legalName.toLowerCase().includes(text_1) ||
                r.dbaName && r.dbaName.toLowerCase().includes(text_1) ||
                r.bcl && r.bcl.toLowerCase().includes(text_1) ||
                r.firstName && r.firstName.toLowerCase().includes(text_1) ||
                r.lastName && r.lastName.toLowerCase().includes(text_1) ||
                r.username && r.username.toLowerCase().includes(text_1); });
        }
        // sort rows based on query params
        if (req.query.has('orderBy')) {
            var orderBy_1 = req.query.get('orderBy')[0];
            var orderDir = (req.query.get('orderDir') || ['asc'])[0];
            var x_1 = (orderDir === 'desc') ? -1 : 1;
            if (orderBy_1 === 'displayName') {
                rows.sort(function (a, b) { return (a.legalName || a.dbaName) > (b.legalName || b.dbaName) ? x_1 : -x_1; });
            }
            else if (orderBy_1 === 'startDate') {
                rows.sort(function (a, b) { return (new Date(a.startDate).valueOf() > new Date(b.startDate).valueOf()) ? x_1 : -x_1; });
            }
            else if (orderBy_1 === 'userFullName') {
                rows.sort(function (a, b) { return (a.firstName + ' ' + a.lastName) > (b.firstName + ' ' + b.lastName) ? x_1 : -x_1; });
            }
            else {
                rows.sort(function (a, b) { return a[orderBy_1] > b[orderBy_1] ? x_1 : -x_1; });
            }
        }
        var count = rows.length; // count of filtered rows
        if (req.query.has('pageNumber')) {
            // return a page of the filtered rows
            var pageNumber = +req.query.get('pageNumber')[0];
            var pageSize = +(req.query.get('pageSize') || ['20'])[0];
            var start = Math.max(0, pageNumber * pageSize);
            rows = rows.slice(start, start + pageSize);
        }
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, { count: count, rows: rows });
    };
    InMemAdminService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_1__["defineInjectable"]({ factory: function InMemAdminService_Factory() { return new InMemAdminService(); }, token: InMemAdminService, providedIn: "root" });
    return InMemAdminService;
}());



/***/ }),

/***/ "./src/app/mock-services/in-mem-company-package.service.ts":
/*!*****************************************************************!*\
  !*** ./src/app/mock-services/in-mem-company-package.service.ts ***!
  \*****************************************************************/
/*! exports provided: InMemCompanyPackageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemCompanyPackageService", function() { return InMemCompanyPackageService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _app_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/model */ "./src/app/model/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");



var InMemCompanyPackageService = /** @class */ (function () {
    function InMemCompanyPackageService() {
    }
    /** Return a package of company entity collections for a given Company id.*/
    InMemCompanyPackageService.prototype.getCompanyPackage = function (req, db) {
        var companyId = req.id;
        if (!companyId) {
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createBadRequestResponse$"])(req, { message: 'Missing companyId' });
        }
        var userId = Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["getCurrentUserIdFromRequest"])(req, db);
        if (!userId) {
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createBadRequestResponse$"])(req, { message: 'Missing userId' });
        }
        var company = db.Company.find(function (c) { return c.id === companyId; });
        if (!company) {
            var errOptions_1 = {
                url: req.url,
                status: _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].NOT_FOUND,
                statusText: 'Not Found',
                body: "Company with id='" + companyId + "' was not found"
            };
            return req.utils.createResponse$(function () { return errOptions_1; });
        }
        var body = {
            // NB: the package property names are lower camel case, as the server will send them
            address: from(db.Address),
            company: [company],
            companyDeduction: from(db.CompanyDeduction),
            companyEarning: from(db.CompanyEarning),
            companyTax: from(db.CompanyTax),
            employee: from(db.Employee),
            employeePaymentMethod: from(db.EmployeePaymentMethod),
            employeeTax: from(db.EmployeeTax),
            householdFilers: from(db.HouseholdFilers),
            stats: from(db.Stats),
            user: from(db.User)
        };
        var user = body.user.find(function (u) { return u.id === userId; });
        if (!user) {
            var errOptions_2 = {
                url: req.url,
                status: _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].BAD_REQUEST,
                statusText: 'Bad Request',
                body: "User:" + userId + " is not a user of the company:" + companyId
            };
            return req.utils.createResponse$(function () { return errOptions_2; });
        }
        var headers = Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["addCompanyEtagResponseHeader"])(db, company.id);
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, body, headers);
        function from(collection) {
            return collection ? collection.filter(function (c) { return c.companyId === companyId; }) : [];
        }
    };
    /** Return a package of document collections for a given Company id.*/
    InMemCompanyPackageService.prototype.getDocumentPackage = function (req, db) {
        var id = req.id;
        var company = db.Company.find(function (c) { return c.id === id; });
        if (!company) {
            var errOptions_3 = {
                url: req.url,
                status: _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].NOT_FOUND,
                statusText: 'Not Found',
                body: "Company with id='" + id + "' was not found"
            };
            return req.utils.createResponse$(function () { return errOptions_3; });
        }
        var body = {
            // NB: the package property names are lower camel case, as the server will send them
            document: from(db.Document),
            envelope: from(db.Envelope),
            envelopeSigner: from(db.EnvelopeSigner),
        };
        var signed = window.iframeEvent === 'signing_complete';
        if (signed) {
            body.envelope.forEach(function (e) { return e.status = _app_model__WEBPACK_IMPORTED_MODULE_1__["EnvelopeStatus"].completed; });
            company.status = _app_model__WEBPACK_IMPORTED_MODULE_1__["AccountStatus"].Operations;
        }
        var headers = Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["addCompanyEtagResponseHeader"])(db, company.id);
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, body, headers);
        function from(collection) {
            return collection ? collection.filter(function (c) { return c.companyId === id && !c.isRemoved; }) : [];
        }
    };
    InMemCompanyPackageService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function InMemCompanyPackageService_Factory() { return new InMemCompanyPackageService(); }, token: InMemCompanyPackageService, providedIn: "root" });
    return InMemCompanyPackageService;
}());



/***/ }),

/***/ "./src/app/mock-services/in-mem-deduction.service.ts":
/*!***********************************************************!*\
  !*** ./src/app/mock-services/in-mem-deduction.service.ts ***!
  \***********************************************************/
/*! exports provided: InMemDeductionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemDeductionService", function() { return InMemDeductionService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _master_data_deductions_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./master-data-deductions-loader */ "./src/app/mock-services/master-data-deductions-loader.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");



var InMemDeductionService = /** @class */ (function () {
    function InMemDeductionService() {
        /** In-mem version of all deductions metadata */
        this.deductionMetadata = this.getDeductionTypeList();
    }
    InMemDeductionService.prototype.getRequest = function (req, db) {
        if (req.url && req.url.endsWith('/deductions')) {
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, this.deductionMetadata);
        }
    };
    // Post requests handled in InMemSaveEntitiesService (in-mem-save-entities.service.ts)
    InMemDeductionService.prototype.getDeductionTypeList = function () {
        return Object(_master_data_deductions_loader__WEBPACK_IMPORTED_MODULE_1__["loadMockDeductions"])();
    };
    InMemDeductionService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function InMemDeductionService_Factory() { return new InMemDeductionService(); }, token: InMemDeductionService, providedIn: "root" });
    return InMemDeductionService;
}());



/***/ }),

/***/ "./src/app/mock-services/in-mem-earning.service.ts":
/*!*********************************************************!*\
  !*** ./src/app/mock-services/in-mem-earning.service.ts ***!
  \*********************************************************/
/*! exports provided: InMemEarningService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemEarningService", function() { return InMemEarningService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _master_data_earnings_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./master-data-earnings-loader */ "./src/app/mock-services/master-data-earnings-loader.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");



var InMemEarningService = /** @class */ (function () {
    function InMemEarningService() {
        /** In-mem version of all deductions metadata */
        this.earningMetadata = this.getAdditionalEarnings();
    }
    InMemEarningService.prototype.getRequest = function (req, db) {
        if (req.url && req.url.endsWith('/earnings')) {
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, this.earningMetadata);
        }
    };
    // Post requests handled in InMemSaveEntitiesService (in-mem-save-entities.service.ts)
    InMemEarningService.prototype.getAdditionalEarnings = function () {
        return Object(_master_data_earnings_loader__WEBPACK_IMPORTED_MODULE_1__["loadMockEarnings"])();
    };
    InMemEarningService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function InMemEarningService_Factory() { return new InMemEarningService(); }, token: InMemEarningService, providedIn: "root" });
    return InMemEarningService;
}());



/***/ }),

/***/ "./src/app/mock-services/in-mem-ein.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/mock-services/in-mem-ein.service.ts ***!
  \*****************************************************/
/*! exports provided: InMemEinService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemEinService", function() { return InMemEinService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _core_services_tin_check_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @core/services/tin-check.service */ "./src/app/core/services/tin-check.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");



/**
 * TinCheck service, proxied by ECommerce API
 */
var InMemEinService = /** @class */ (function () {
    function InMemEinService() {
    }
    InMemEinService.prototype.getRequest = function (req, db) {
        if (req.url && /\/ein\/lookup\?/.test(req.url)) {
            return this.tinCheck$(req, db);
        }
        // all other GET `ein` requests that make it here are bad
        return undefined;
    };
    // #region TinCheck
    InMemEinService.prototype.tinCheck$ = function (reqInfo, db) {
        var originalRequest = reqInfo.req;
        var ein = originalRequest.params.get('ein');
        var name = originalRequest.params.get('name');
        return tinCheckValidate();
        function tinCheckValidate() {
            if (!ein) {
                return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createResponse$"])(reqInfo, _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].BAD_REQUEST, 'Bad Request', ['FEIN not provided.']);
            }
            if (!name) {
                return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createResponse$"])(reqInfo, _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].BAD_REQUEST, 'Bad Request', ['Legal Name not provided.']);
            }
            var mockEinResponse = Object(_core_services_tin_check_service__WEBPACK_IMPORTED_MODULE_1__["einLookupInterceptor"])(ein, name);
            // When local mocking enabled, act as if fein were the partial-match interceptor FEINs
            // In other environments, request would go through to real service
            if (!mockEinResponse) {
                mockEinResponse = Object(_core_services_tin_check_service__WEBPACK_IMPORTED_MODULE_1__["einLookupInterceptor"])('11-1111111', name);
            }
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(reqInfo, mockEinResponse);
        }
    };
    InMemEinService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function InMemEinService_Factory() { return new InMemEinService(); }, token: InMemEinService, providedIn: "root" });
    return InMemEinService;
}());



/***/ }),

/***/ "./src/app/mock-services/in-mem-enrollment.service.ts":
/*!************************************************************!*\
  !*** ./src/app/mock-services/in-mem-enrollment.service.ts ***!
  \************************************************************/
/*! exports provided: InMemEnrollmentService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemEnrollmentService", function() { return InMemEnrollmentService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var InMemEnrollmentService = /** @class */ (function () {
    function InMemEnrollmentService() {
    }
    InMemEnrollmentService.prototype.postRequest = function (req, db) {
        // Does nothing in mock world
        if (req.url && req.url.includes('/enrollment/finalize')) {
            console.log("In-mem-enrollment-service saw request '/enrollment/finalize'");
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createResponse$"])(req, _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].OK, '', {
                sucess: false,
                validationErrors: ['In memory migration service does not send migration requests ...']
            });
        }
    };
    InMemEnrollmentService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_1__["defineInjectable"]({ factory: function InMemEnrollmentService_Factory() { return new InMemEnrollmentService(); }, token: InMemEnrollmentService, providedIn: "root" });
    return InMemEnrollmentService;
}());



/***/ }),

/***/ "./src/app/mock-services/in-mem-esign.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/mock-services/in-mem-esign.service.ts ***!
  \*******************************************************/
/*! exports provided: InMemEsignService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemEsignService", function() { return InMemEsignService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _core_guid_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @core/guid-fns */ "./src/app/core/guid-fns.ts");
/* harmony import */ var _app_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/model */ "./src/app/model/index.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");





var InMemEsignService = /** @class */ (function () {
    function InMemEsignService() {
    }
    InMemEsignService.prototype.getEsignUrl = function (req, db) {
        var body = {
            // links expire after 5 minutes, so this will redirect right away.
            // url:
            //   'https://demo.docusign.net/Signing/StartInSession.aspx?t=f9e7440a-c66e-42e9-bd12-8a5199cb37c1'
            url: '/assets/documock.html'
        };
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, body).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["delay"])(1000));
    };
    InMemEsignService.prototype.postEsignSend = function (req, db) {
        var companyId = req.url.split('/').pop();
        var envelope = from(db.Envelope).find(function (e) { return true; });
        if (!envelope) {
            envelope = {
                id: Object(_core_guid_fns__WEBPACK_IMPORTED_MODULE_1__["getGuidComb"])(),
                companyId: companyId,
                eSignEnvelopeId: Object(_core_guid_fns__WEBPACK_IMPORTED_MODULE_1__["getGuidComb"])(),
                status: _app_model__WEBPACK_IMPORTED_MODULE_2__["EnvelopeStatus"].sent,
                createdDate: new Date(),
                statusDate: new Date(),
                isWetSign: false,
                isRemoved: false
            };
            db.Envelope.push(envelope);
        }
        envelope.status = _app_model__WEBPACK_IMPORTED_MODULE_2__["EnvelopeStatus"].sent;
        envelope.statusDate = new Date();
        envelope.eSignEnvelopeId = Object(_core_guid_fns__WEBPACK_IMPORTED_MODULE_1__["getGuidComb"])();
        // envelopeSigner objects created on the server
        // let signer1 = <EnvelopeSigner> from(db.EnvelopeSigner).find(e => true);
        // { signerEmail, signerFirstName, signerLastName, signerTitle, spouseEmail, spouseFirstName, spouseLastName }
        var signers = req.req.body.signers;
        if (signers && signers.length) {
            signers.forEach(function (sig) {
                var old = db.EnvelopeSigner.find(function (e) { return e.id === sig.id; });
                if (old) {
                    Object.assign(old, sig);
                }
                else {
                    db.EnvelopeSigner.push(sig);
                }
            });
        }
        var body = {
            status: envelope.status,
            envelope: envelope
        };
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, body).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["delay"])(3000));
        function from(collection) {
            return collection ? collection.filter(function (c) { return c.companyId === companyId; }) : [];
        }
    };
    /**
     * Mark completable envelopes as completed.
     * See esign.service.markEnvelopesSigned
     */
    InMemEsignService.prototype.postMarkEnvelopesCompleted = function (req, db) {
        var originalRequest = req.req;
        var companyId = (originalRequest.body || {}).companyId;
        var changed = false;
        if (companyId) {
            db['Envelope'] = db['Envelope']
                .map(function (e) { return canComplete(e) ? complete(e) : e; });
            var body = changed ? { companyId: companyId, id: 'complete' } : undefined;
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, body);
        }
        else {
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createBadRequestResponse$"])(req);
        }
        // NB: Guessing at this logic
        function canComplete(e) {
            return e.companyId === companyId && !e.isRemoved && (e.status === _app_model__WEBPACK_IMPORTED_MODULE_2__["EnvelopeStatus"].delivered ||
                e.status === _app_model__WEBPACK_IMPORTED_MODULE_2__["EnvelopeStatus"].draft ||
                e.status === _app_model__WEBPACK_IMPORTED_MODULE_2__["EnvelopeStatus"].local ||
                e.status === _app_model__WEBPACK_IMPORTED_MODULE_2__["EnvelopeStatus"].sent);
        }
        // NB: Guessing at this logic
        function complete(e) {
            changed = true;
            e.status = _app_model__WEBPACK_IMPORTED_MODULE_2__["EnvelopeStatus"].completed;
            e.statusDate = new Date();
            return e;
        }
    };
    InMemEsignService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function InMemEsignService_Factory() { return new InMemEsignService(); }, token: InMemEsignService, providedIn: "root" });
    return InMemEsignService;
}());



/***/ }),

/***/ "./src/app/mock-services/in-mem-gen-extra-accounts.ts":
/*!************************************************************!*\
  !*** ./src/app/mock-services/in-mem-gen-extra-accounts.ts ***!
  \************************************************************/
/*! exports provided: genExtraAccounts */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "genExtraAccounts", function() { return genExtraAccounts; });
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
// #region Created Account Entity Templates
// tslint:disable:quotemark
var companyTemplate = {
    "bankName": "",
    "bcl": "EX001",
    "companyType": null,
    "doneAddingEmployees": false,
    "enrollmentStartDate": "2018-01-01T17:00:00.000Z",
    "feinValidationCount": 0,
    "id": "b1f001b18ee54333aef601683b89a011",
    "isAgricultural": false,
    "isHousehold": false,
    "legalName": "",
    "name": "TestCo 001",
    "payrollFrequency": "Bi-Weekly",
    "status": "Open"
};
var householdFilersTemplate = {
    "companyId": "b1fba3b18ee54333aef601683b89a001",
    "id": "8b132db2fa574036903401683b89a001"
};
var statsTemplate = {
    "aboutYouStartDate": "2019-01-01T06:11:45.537Z",
    "companyId": "b1fba3b18ee54333aef601683b89a001",
    "id": "6884fa7cc43f4665bab501683b89a001"
};
var userTemplate = {
    "companyId": "b1fba3b18ee54333aef601683b89a001",
    "email": "test.user001@testco001.com",
    "firstName": "Test",
    "id": "92e0012b7e6e423b96b101683b89a011",
    "lastName": "User001",
    "oidcSub": "NewCustUser:8372001",
    "phone": "9809809001",
    "userRole": "Approver",
    "username": "testuser001"
};
// #endregion Created Account Entity Templates
/**
 * Generate extra accounts to expand the account list for filtering and paging
 */
function genExtraAccounts(db) {
    var dayInMs = 1000 * 60 * 60 * 24;
    for (var i = 1; i <= 60; i++) {
        var counter = ('00' + i).substr(-3);
        var companyId = "1fb" + counter + "ee54333aef601683b89a011";
        var startDt = (new Date(new Date('2017-12-31T17:00:00.000Z').valueOf() + (dayInMs * i))).toUTCString();
        var co = __assign({}, companyTemplate, { id: companyId, bcl: 'EX' + counter, enrollmentStartDate: startDt, name: 'TestCo ' + counter });
        var hf = __assign({}, householdFilersTemplate, { id: '8b132db2fa574036903401683b89a' + counter, companyId: companyId });
        var stats = __assign({}, statsTemplate, { id: '6884fa7cc43f4665bab501683b89a' + counter, companyId: companyId, aboutYouStartDate: startDt });
        var user = __assign({}, userTemplate, { id: "92e" + counter + "2b7e6e423b96b101683b89a011", companyId: companyId, email: "test.user" + counter + "@testco" + counter + ".com", lastName: 'User' + counter, oidcSub: 'NewCustUser:8372' + counter, phone: '9809809' + counter, username: 'testuser' + counter });
        db.Company.push(co);
        db.HouseholdFilers.push(hf);
        db.Stats.push(stats);
        db.User.push(user);
    }
    return db;
}


/***/ }),

/***/ "./src/app/mock-services/in-mem-identity.service.ts":
/*!**********************************************************!*\
  !*** ./src/app/mock-services/in-mem-identity.service.ts ***!
  \**********************************************************/
/*! exports provided: InMemIdentityService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemIdentityService", function() { return InMemIdentityService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _mock_auth_jwt_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mock-auth/jwt.service */ "./src/app/mock-auth/jwt.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};





var tokenPrototype = {
    'nbf': 1535425661,
    'exp': 1535429261,
    'iss': 'https://devidentity.surepayroll.com',
    'aud': [
        'https://devidentity.surepayroll.com/resources',
        'document',
        'enrollment',
        'enrollment_api'
    ],
    'client_id': 'ecommerce',
    'sub': '',
    'auth_time': 1535425661,
    'idp': 'local',
    'email': '',
    'role': 'Approver',
    'permission': 'unknown',
    'scope': _environment__WEBPACK_IMPORTED_MODULE_1__["environment"].oidcScope.split(' '),
    'amr': [
        'password'
    ]
};
var InMemIdentityService = /** @class */ (function () {
    function InMemIdentityService(jwtService) {
        this.jwtService = jwtService;
    }
    /**
     * POST requests to Identity Server
     */
    InMemIdentityService.prototype.postRequest = function (req, db) {
        if (req.url.endsWith('connect/token')) {
            var reqBody = decodeFormUrlBody(req.req.body);
            var resBody = this.getMockToken(reqBody);
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, resBody);
        }
        // all other POST SurePayroll requests that make it here are bad
        return undefined;
    };
    InMemIdentityService.prototype.getMockToken = function (_a) {
        var email = _a.email, sub = _a.sub;
        var data = __assign({}, tokenPrototype, { email: email, sub: sub });
        var token = this.jwtService.createJwt(data);
        return {
            // Example. Not valid for communicating with real server
            'access_token': token,
            'expires_in': 3600,
            'token_type': 'Bearer'
        };
    };
    InMemIdentityService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_3__["defineInjectable"]({ factory: function InMemIdentityService_Factory() { return new InMemIdentityService(_angular_core__WEBPACK_IMPORTED_MODULE_3__["inject"](_mock_auth_jwt_service__WEBPACK_IMPORTED_MODULE_2__["JwtService"])); }, token: InMemIdentityService, providedIn: "root" });
    return InMemIdentityService;
}());

function decodeFormUrlBody(body) {
    var keyValuePairs = body.split('&');
    var json = {};
    for (var i = 0, len = keyValuePairs.length, tmp = void 0, key = void 0, value = void 0; i < len; i++) {
        tmp = keyValuePairs[i].split('=');
        key = decodeURIComponent(tmp[0]);
        value = decodeURIComponent(tmp[1]);
        if (key.search(/\[\]$/) !== -1) {
            tmp = key.replace(/\[\]$/, '');
            json[tmp] = json[tmp] || [];
            json[tmp].push(value);
        }
        else {
            json[key] = value;
        }
    }
    return json;
}


/***/ }),

/***/ "./src/app/mock-services/in-mem-save-entities-utils.ts":
/*!*************************************************************!*\
  !*** ./src/app/mock-services/in-mem-save-entities-utils.ts ***!
  \*************************************************************/
/*! exports provided: saveCompanyChangeSet, saveCompanyEarningChangeSet, saveCompanyDeductionChangeSet, saveEmployeeDeductionChangeSet, saveEmployeeChangeSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saveCompanyChangeSet", function() { return saveCompanyChangeSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saveCompanyEarningChangeSet", function() { return saveCompanyEarningChangeSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saveCompanyDeductionChangeSet", function() { return saveCompanyDeductionChangeSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saveEmployeeDeductionChangeSet", function() { return saveEmployeeDeductionChangeSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saveEmployeeChangeSet", function() { return saveEmployeeChangeSet; });
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};


/**
 * Apply an SP Company changeSet to the in-mem db as if saving it transactionally to a real DB
 * Ensures preconditions for saving company entity changes before forwarding to saveEntities()
 * @returns A terminating cold response Observable of ChangeSet HTTP response
 */
function saveCompanyChangeSet(actionName, crudCounts, reqInfo, db) {
    var changeSet = reqInfo.req.body;
    try {
        validateCrudCounts(changeSet, crudCounts);
        saveCompanyEntities(changeSet, db);
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__["createOkResponse$"])(reqInfo, changeSet);
    }
    catch (error) {
        var emsg = error.message + " when saving " + actionName;
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__["createBadRequestResponse$"])(reqInfo, emsg);
    }
}
function saveCompanyEarningChangeSet(actionName, crudCounts, reqInfo, db) {
    var changeSet = reqInfo.req.body;
    try {
        validateCrudCounts(changeSet, crudCounts);
        saveEntities(changeSet, db);
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__["createOkResponse$"])(reqInfo, changeSet);
    }
    catch (error) {
        var emsg = error.message + " when saving " + actionName;
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__["createBadRequestResponse$"])(reqInfo, emsg);
    }
}
function saveCompanyDeductionChangeSet(actionName, crudCounts, reqInfo, db) {
    var changeSet = reqInfo.req.body;
    try {
        validateCrudCounts(changeSet, crudCounts);
        saveEntities(changeSet, db);
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__["createOkResponse$"])(reqInfo, changeSet);
    }
    catch (error) {
        var emsg = error.message + " when saving " + actionName;
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__["createBadRequestResponse$"])(reqInfo, emsg);
    }
}
function saveEmployeeDeductionChangeSet(actionName, crudCounts, reqInfo, db) {
    var changeSet = reqInfo.req.body;
    try {
        validateCrudCounts(changeSet, crudCounts);
        saveEntities(changeSet, db);
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__["createOkResponse$"])(reqInfo, changeSet);
    }
    catch (error) {
        var emsg = error.message + " when saving " + actionName;
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__["createBadRequestResponse$"])(reqInfo, emsg);
    }
}
/**
 * Apply an SP Company changeSet to the in-mem db as if saving it transactionally to a real DB
 * Ensures preconditions for saving company entity changes before forwarding to saveEntities()
 */
function saveCompanyEntities(changeSet, db) {
    var errors = saveCompanyEntitiesGuard(changeSet, db);
    if (errors.length) {
        throw new Error("saveCompanyEntities error: -" + errors.join('\n- '));
    }
    saveEntities(changeSet, db);
}
/**
 * When saving company entities ensure that
 * - there are no Delete changeSetItems
 * - all entities in the ChangeSet belong to the same company
 */
function saveCompanyEntitiesGuard(changeSet, sourceDb) {
    var changes = changeSet.changes;
    var companyId;
    return changes.reduce(function (errors, change) {
        if (change.op === ngrx_data__WEBPACK_IMPORTED_MODULE_0__["ChangeSetOperation"].Delete) {
            errors.push("Delete of '" + change.entityName + "' is not allowed");
        }
        if (change.entities.length === 0) {
            return errors; // nothing to save, nothing more to check.
        }
        // Company entity save
        if (change.entityName === 'Company') {
            if (change.entities.length !== 1) {
                errors.push("Only one company allowed in a Company changeSetItem");
            }
            var co = change.entities[0];
            var coId_1 = co.id;
            if (!co.id) {
                errors.push("No companyId in Company changeSetItem");
                return errors;
            }
            if (companyId && companyId !== coId_1) {
                errors.push("Multiple company ids in changeSet: " + companyId + " and " + coId_1);
            }
            else {
                companyId = coId_1;
            }
            var existingCo = sourceDb.Company.find(function (c) { return c.id === coId_1; });
            var status_1 = co.status;
            if (status_1) {
                if (existingCo && existingCo.status !== status_1) {
                    errors.push("Cannot change Company status from " + existingCo.status + " to " + status_1);
                }
            }
            else {
                errors.push('Cannot save a company with a null/empty status');
            }
        }
        else {
            // Non-company entity save
            change.entities.forEach(function (entity) {
                var coId = entity.companyId;
                if (coId) {
                    if (companyId) {
                        if (companyId !== coId) {
                            errors.push("Multiple company ids in changeSet: " + companyId + " and " + change.entityName + " item with " + coId);
                        }
                    }
                    else {
                        companyId = coId;
                    }
                }
                else {
                    errors.push(change.entityName + ":" + entity.id + " does not have a companyId");
                }
            });
        }
        return errors;
    }, []);
}
/**
 * Apply an SP company's Employee changeSet to the in-mem db as if saving it transactionally to a real DB
 * Ensures preconditions for saving a company's employee entity changes before forwarding to saveEntities()
 * @returns A terminating cold response Observable of ChangeSet HTTP response
 */
function saveEmployeeChangeSet(actionName, crudCounts, reqInfo, db) {
    var changeSet = reqInfo.req.body;
    try {
        validateCrudCounts(changeSet, crudCounts);
        saveEmployeeEntities(changeSet, db);
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__["createOkResponse$"])(reqInfo, changeSet);
    }
    catch (error) {
        var emsg = error.message + " when saving " + actionName;
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__["createBadRequestResponse$"])(reqInfo, emsg);
    }
}
/**
 * Apply an SP company's Employee changeSet to the in-mem db as if saving it transactionally to a real DB
 * Ensures preconditions for saving a company's employee entity changes before forwarding to saveEntities()
 */
function saveEmployeeEntities(changeSet, db) {
    var errors = saveEmployeeEntitiesGuard(changeSet, db);
    if (errors.length) {
        throw new Error("saveEmployeeEntities error: -" + errors.join('\n- '));
    }
    saveEntities(changeSet, db);
}
/**
 * When saving employee entities ensure that
 * - there are no Delete changeSetItems
 * - all entities in the ChangeSet belong to the same employee
 */
function saveEmployeeEntitiesGuard(changeSet, sourceDb) {
    var changes = changeSet.changes;
    var employeeId;
    var employee;
    var employeePay;
    var home;
    var errors = changes.reduce(function (errs, change) {
        if (change.op === ngrx_data__WEBPACK_IMPORTED_MODULE_0__["ChangeSetOperation"].Delete) {
            errs.push("Delete of '" + change.entityName + "' is not allowed");
        }
        if (change.entities.length === 0) {
            return errs; // nothing to save, nothing more to check.
        }
        // Employee entity save
        if (change.entityName === 'Employee') {
            if (change.entities.length !== 1 || employee != null) {
                errs.push("Only one employee allowed in an Employee save changeSetItem");
            }
            employee = change.entities[0];
            var eeId = employee.id;
            if (!employee.id) {
                errs.push("No employeeId in Employee save changeSetItem");
                return errs;
            }
            if (employeeId && employeeId !== eeId) {
                errs.push("Multiple employee ids in changeSet: " + employeeId + " and " + eeId);
            }
            else {
                employeeId = eeId;
            }
        }
        else if (change.entityName === 'EmployeePaymentMethod') {
            if (change.entities.length !== 1 || employeePay != null) {
                errs.push("Only one employeePaymentMethod allowed in an Employee save changeSetItem");
            }
            employeePay = change.entities[0];
            if (!employeePay.id || !employeePay.employeeId || !employeePay.companyId) {
                errs.push("No employeePayment.id in Employee save changeSetItem");
                return errs;
            }
        }
        else if (change.entityName === 'Address') {
            // Employee Address entity add/update
            if (change.entities.length !== 1 || home != null) {
                errs.push("Only one employee address allowed in an Employee save changeSetItem");
            }
            home = change.entities[0];
            if (!home.isHome || home.isMain) {
                errs.push('Address must be a home address and cannot be a company main address');
            }
        }
        else {
            // Non-employee entity save
            change.entities.forEach(function (entity) {
                var eeId = entity.employeeId;
                if (eeId) {
                    if (employeeId) {
                        if (employeeId !== eeId) {
                            errs.push("Multiple employee ids in changeSet: " + employeeId + " and " + change.entityName + " item with " + eeId);
                        }
                    }
                    else {
                        employeeId = eeId;
                    }
                }
                else {
                    errs.push(change.entityName + ":" + entity.id + " does not have an employeeId");
                }
            });
        }
        return errs;
    }, []);
    if (employee && home) {
        if (employee.homeAddressId !== home.id) {
            errors.push("Address does not belong to EE " + employee.id);
        }
    }
    else {
        errors.push('Missing the Employee or the Home address in the Employee save changeSet');
    }
    return errors;
}
/**
 * Apply a changeSet to the in-mem db as if saving it transactionally to a real DB
 */
function saveEntities(changeSet, sourceDb) {
    var changes = changeSet.changes;
    var changedDb = changes.reduce(function (db, change) {
        var entityName = change.entityName;
        var collection = db[entityName] || sourceDb[entityName];
        if (collection) {
            db[entityName] = mutate(collection, change);
            return db;
        }
        throw new Error("Collection \"" + entityName + "\" is not a database collection");
    }, {});
    // All changes succeeded.
    // Commit the "transaction" by merging the changed collections into the sourceDb;
    Object.keys(changedDb).forEach(function (entityName) { return sourceDb[entityName] = changedDb[entityName]; });
    // Mutate the entity collection with a change in the ChangeSet
    function mutate(collection, change) {
        switch (change.op) {
            case ngrx_data__WEBPACK_IMPORTED_MODULE_0__["ChangeSetOperation"].Add:
                var adds = change.entities
                    .filter(function (a) { return !collection.some(function (c) { return c.id === a.id; }); })
                    .map(function (a) { return Object.assign({}, a); });
                if (adds.length) {
                    return collection.concat(adds);
                }
                return collection;
            case ngrx_data__WEBPACK_IMPORTED_MODULE_0__["ChangeSetOperation"].Delete:
                var ids_1 = change.entities;
                return collection.filter(function (d) { return ids_1.includes(d.id); });
            case ngrx_data__WEBPACK_IMPORTED_MODULE_0__["ChangeSetOperation"].Update:
                var updates_1 = change.entities;
                return collection.map(function (c) {
                    var up = updates_1.find(function (u) { return u.id === c.id; });
                    return up ? __assign({}, c, Object.assign({}, up)) : c;
                });
            case ngrx_data__WEBPACK_IMPORTED_MODULE_0__["ChangeSetOperation"].Upsert:
                var upserts_1 = change.entities;
                var found_1 = [];
                var updated = collection.map(function (c) {
                    var up = upserts_1.find(function (u) { return u.id === c.id; });
                    if (up) {
                        up = Object.assign({}, up);
                        found_1.push(up);
                        return up;
                    }
                    else {
                        return c;
                    }
                });
                var added = upserts_1.filter(function (u) { return !found_1.includes(u); });
                return updated.concat(added);
        }
    }
}
/**
 * Ensure that each ChangeSetItem is allowed and that the number of its changed entities
 * is within the allowed range defined in the crudCounts
 * @param changeSet the saveEntities() changeSet.
 * @parm crudCounts which entity types to save and the min/max count of entities of each type that can be saved
 */
function validateCrudCounts(changeSet, crudCounts) {
    var entityNames = crudCounts.map(function (cc) { return cc.entityName; });
    changeSet.changes.forEach(function (change) {
        if (!entityNames.includes(change.entityName)) {
            throw new Error(change.entityName + " entity cannot be saved in this saveEntities() request");
        }
    });
    crudCounts.forEach(function (crudCount) {
        var cs = changeSet.changes.find(function (csi) { return csi.entityName === crudCount.entityName; });
        if (crudCount.min && (!cs || !cs.entities || cs.entities.length < crudCount.min)) {
            throw new Error("Must save at least " + crudCount.min + " of " + crudCount.entityName);
        }
        if (crudCount.max && (cs && cs.entities && cs.entities.length > crudCount.max)) {
            throw new Error("Must save at most " + crudCount.max + " of " + crudCount.entityName);
        }
    });
}


/***/ }),

/***/ "./src/app/mock-services/in-mem-save-entities.service.ts":
/*!***************************************************************!*\
  !*** ./src/app/mock-services/in-mem-save-entities.service.ts ***!
  \***************************************************************/
/*! exports provided: InMemSaveEntitiesService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemSaveEntitiesService", function() { return InMemSaveEntitiesService; });
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _in_mem_save_entities_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./in-mem-save-entities-utils */ "./src/app/mock-services/in-mem-save-entities-utils.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");




var InMemSaveEntitiesService = /** @class */ (function () {
    function InMemSaveEntitiesService() {
        /** Actions that save an ngrx-data ChangeSet for request URLs */
        this.saveActions = [
            { endsWith: 'save/company', actionName: 'a company+address pair', action: _in_mem_save_entities_utils__WEBPACK_IMPORTED_MODULE_2__["saveCompanyChangeSet"], crudCounts: [
                    { entityName: 'Company', min: 0, max: 1 },
                    { entityName: 'Address', min: 0, max: 1 }
                ]
            },
            { endsWith: 'save/companyuser', actionName: 'a company+user pair', action: _in_mem_save_entities_utils__WEBPACK_IMPORTED_MODULE_2__["saveCompanyChangeSet"], crudCounts: [
                    { entityName: 'Company', min: 0, max: 1 },
                    { entityName: 'User', min: 0, max: 1 }
                ]
            },
            { endsWith: 'companyearning', actionName: 'company earnings', action: _in_mem_save_entities_utils__WEBPACK_IMPORTED_MODULE_2__["saveCompanyEarningChangeSet"], crudCounts: [
                    { entityName: 'CompanyEarning', min: 0, max: 50 }
                ]
            },
            { endsWith: 'save/company-deduction', actionName: 'company deductions', action: _in_mem_save_entities_utils__WEBPACK_IMPORTED_MODULE_2__["saveCompanyDeductionChangeSet"], crudCounts: [
                    { entityName: 'CompanyDeduction', min: 0, max: 50 }
                ]
            },
            { endsWith: 'save/employee-deduction', actionName: 'employee deductions', action: _in_mem_save_entities_utils__WEBPACK_IMPORTED_MODULE_2__["saveEmployeeDeductionChangeSet"], crudCounts: [
                    { entityName: 'EmployeeDeduction', min: 0, max: 5000 }
                ]
            },
            { endsWith: 'save/employee', actionName: 'an employee graph', action: _in_mem_save_entities_utils__WEBPACK_IMPORTED_MODULE_2__["saveEmployeeChangeSet"], crudCounts: [
                    { entityName: 'Employee', min: 1, max: 1 },
                    { entityName: 'Address', min: 1, max: 1 },
                    { entityName: 'EmployeePaymentMethod', min: 0, max: 1 }
                ]
            },
            { endsWith: 'save/employee/removed', actionName: 'the isRemoved flag of an employee graph', action: saveEmployeeRemoved, crudCounts: [
                    { entityName: 'Employee', min: 1, max: 1 },
                    { entityName: 'Address', min: 1, max: 1 },
                    { entityName: 'EmployeePaymentMethod', min: 0, max: 1 }
                ]
            },
            { endsWith: 'save/taxes', actionName: 'company and/or EE taxes', action: _in_mem_save_entities_utils__WEBPACK_IMPORTED_MODULE_2__["saveCompanyChangeSet"], crudCounts: [
                    { entityName: 'CompanyTax', min: 0, max: 50 },
                    { entityName: 'EmployeeTax', min: 0, max: 5000 }
                ]
            }
        ];
    }
    InMemSaveEntitiesService.prototype.postRequest = function (reqInfo, db) {
        var url = reqInfo.url;
        var saveAction = this.saveActions.find(function (action) { return url.endsWith(action.endsWith); });
        if (saveAction) {
            var action = saveAction.action, actionName = saveAction.actionName, crudCounts = saveAction.crudCounts;
            return action(actionName, crudCounts, reqInfo, db);
        }
        else {
            return null; // Unknown request. Let regular request processing handle it.
        }
    };
    InMemSaveEntitiesService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_3__["defineInjectable"]({ factory: function InMemSaveEntitiesService_Factory() { return new InMemSaveEntitiesService(); }, token: InMemSaveEntitiesService, providedIn: "root" });
    return InMemSaveEntitiesService;
}());

/** Restricts SaveEntities request to Update operation that sets the isRemoved flag. Delegates to saveEmployeeChangeSet() */
function saveEmployeeRemoved(actionName, crudCounts, reqInfo, db) {
    var changeSet = reqInfo.req.body;
    changeSet.changes.forEach(function (element) {
        if (element.op !== ngrx_data__WEBPACK_IMPORTED_MODULE_0__["ChangeSetOperation"].Update) {
            var emsg = "Can only update " + element.entityName + " when saving " + actionName;
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_1__["createBadRequestResponse$"])(reqInfo, emsg);
        }
    });
    return Object(_in_mem_save_entities_utils__WEBPACK_IMPORTED_MODULE_2__["saveEmployeeChangeSet"])(actionName, crudCounts, reqInfo, db);
}


/***/ }),

/***/ "./src/app/mock-services/in-mem-service-utils.ts":
/*!*******************************************************!*\
  !*** ./src/app/mock-services/in-mem-service-utils.ts ***!
  \*******************************************************/
/*! exports provided: STATUS, Db, createOkResponse$, createNoContentResponse$, createBadRequestResponse$, createResponse$, addCompanyEtagResponseHeader, createCompanyEtag, getCurrentUserIdFromRequest, getSubFromRequest, guardCompanyChange, parseCompanyEtag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createOkResponse$", function() { return createOkResponse$; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNoContentResponse$", function() { return createNoContentResponse$; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBadRequestResponse$", function() { return createBadRequestResponse$; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createResponse$", function() { return createResponse$; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addCompanyEtagResponseHeader", function() { return addCompanyEtagResponseHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCompanyEtag", function() { return createCompanyEtag; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCurrentUserIdFromRequest", function() { return getCurrentUserIdFromRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSubFromRequest", function() { return getSubFromRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guardCompanyChange", function() { return guardCompanyChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseCompanyEtag", function() { return parseCompanyEtag; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var angular_in_memory_web_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! angular-in-memory-web-api */ "./node_modules/angular-in-memory-web-api/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "STATUS", function() { return angular_in_memory_web_api__WEBPACK_IMPORTED_MODULE_1__["STATUS"]; });

/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./db */ "./src/app/mock-services/db.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Db", function() { return _db__WEBPACK_IMPORTED_MODULE_2__["Db"]; });

/* harmony import */ var _mock_auth_jwt_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mock-auth/jwt.service */ "./src/app/mock-auth/jwt.service.ts");






function createOkResponse$(req, body, headers) {
    return createResponse$(req, angular_in_memory_web_api__WEBPACK_IMPORTED_MODULE_1__["STATUS"].OK, 'OK', body, headers);
}
function createNoContentResponse$(req, headers) {
    return createResponse$(req, angular_in_memory_web_api__WEBPACK_IMPORTED_MODULE_1__["STATUS"].NO_CONTENT, 'NO CONTENT', null, headers);
}
/** Generic bad request response */
function createBadRequestResponse$(req, body, headers) {
    return createResponse$(req, angular_in_memory_web_api__WEBPACK_IMPORTED_MODULE_1__["STATUS"].BAD_REQUEST, 'Bad Request', body, headers);
}
/**
 * Custom response of any kind
 * @param requestInfo
 * @param status Http status code. See STATUS.
 * @param statusText Http status text for that code.
 * @param [body] The body, if any
 * @param [headers] Headers, if any. Creates empty headers object if none supplied.
 * @returns A cold response Observable from a factory for ResponseOptions
 */
function createResponse$(requestInfo, status, statusText, body, headers) {
    var options = {
        url: requestInfo.url,
        status: status,
        statusText: statusText,
        body: body,
        headers: headers || new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]()
    };
    return requestInfo.utils.createResponse$(function () { return options; });
}
/** Add an Etag response header from the company's id and a version number */
function addCompanyEtagResponseHeader(db, companyId, headers) {
    var version = db.CompanyVersion[companyId];
    var etag = createCompanyEtag(companyId, version);
    if (etag) {
        var weakEtag = "W/\"" + etag + "\"";
        return headers ? headers.set('Etag', weakEtag) : new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]({ 'Etag': weakEtag });
    }
    else {
        return headers || new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]();
    }
}
/** Create a company Etag from the company's id and a version number */
function createCompanyEtag(companyId, version) {
    return companyId && !isNaN(version) ? companyId + '/' + version : null;
}
/** Mimic server-side API logic for deriving current user id from the request */
function getCurrentUserIdFromRequest(req, db) {
    // try to get userId from request via the AccessToken
    var userId;
    var sub = getSubFromRequest(req);
    var subEnding = sub.split(':').pop(); // get the part after the colon
    var authUser = db.User.find(
    // match exactly, match the digits, match the username ... because mock-world is weird.
    function (u) {
        return u.oidcSub === sub ||
            u.oidcSub.split(':').pop() === subEnding ||
            u.username === subEnding;
    });
    if (authUser && authUser.companyId) {
        userId = authUser.id;
    }
    else {
        // Admin? Look for current user id in header
        userId = req.req.headers.get('X-Sp-Current-User-Id');
    }
    return userId;
}
/** Extract the oidcSub from the request. Ex: 'NewCustUser:1234' */
function getSubFromRequest(req) {
    try {
        var authHeader = req.headers.get('authorization');
        if (!authHeader) {
            // bug in AngularInMemoryWebApi v6.0.1 wipes out the original header.
            // but it's still there in the original req, located at `req.req.headers`.
            authHeader = req.req.headers.get('authorization');
        }
        var token = authHeader.split(' ')[1]; // strip off the leading "Bearer "
        var parsedToken = Object(_mock_auth_jwt_service__WEBPACK_IMPORTED_MODULE_3__["parseJwt"])(token);
        return parsedToken.sub || parsedToken.profile.sub;
    }
    catch (error) {
        // Check out both req.headers.normalizedNames and req.req.headers.normalizedNames
        console.error('Failed to find sub in profile of token of request', req);
        return '';
    }
}
/**
 * Ensure that a change to a Company satisfies constraints.
 * Call it in one of the intercepted  HTTP methods.
 * @returns null if no problems detected and normal in-memory processing should handle it.
 * Returns error response if it caught something.
 */
function guardCompanyChange(req, db) {
    var company = req.req.body;
    if (company) {
        var existingCompany = db.Company.find(function (c) { return c.id === company.id; });
        var status_1 = company.status;
        if (status_1) {
            if (existingCompany && existingCompany.status !== status_1) {
                var body = "Cannot change Company status from " + existingCompany.status + " to " + status_1;
                return createBadRequestResponse$(req, body);
            }
        }
        else {
            var body = 'Cannot save a company with a null/empty status';
            return createBadRequestResponse$(req, body);
        }
    }
}
/** Parse a company Etag into the companyId and the version */
function parseCompanyEtag(etag) {
    var match = (etag || '').match(/(W\/"|")?(.*)\/(\d*)["]?$/);
    if (match) {
        var companyId = match[2];
        var version = Number.parseInt(match[3], 10);
        return { companyId: companyId, version: version };
    }
    else {
        return { companyId: null, version: NaN };
    }
}


/***/ }),

/***/ "./src/app/mock-services/in-mem-surepayroll.service.ts":
/*!*************************************************************!*\
  !*** ./src/app/mock-services/in-mem-surepayroll.service.ts ***!
  \*************************************************************/
/*! exports provided: InMemSurepayrollService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemSurepayrollService", function() { return InMemSurepayrollService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var InMemSurepayrollService = /** @class */ (function () {
    function InMemSurepayrollService() {
    }
    InMemSurepayrollService.prototype.getRequest = function (req, db) {
        if (req.url && req.url.includes('/authentication/username/valid/')) {
            return this.validateUsername$(req, db);
        }
        // Password Policy API: GET `${environment.spApiRoot}/authentication/password/rules/standard`
        if (req.url && req.url.endsWith('/password/rules/standard/')) {
            return this.passwordPolicy(req);
        }
        // all other GET SurePayroll requests that make it here are bad
        return undefined;
    };
    InMemSurepayrollService.prototype.postRequest = function (req, db) {
        if (req.url.endsWith('company/new')) {
            return this.createNewCompany(req, db);
        }
        // all other POST SurePayroll requests that make it here are bad
        return undefined;
    };
    // Swagger Def: https://devcoreapi.surepayroll.com/company/swagger/index.html
    // ex: POST https://devcoreapi.surepayroll.com/company/new
    // Success: 200 - OK with JSON body
    // {
    //   "bclCode": "ABCD",
    //   "userKey": 123456
    // }
    // Errors: 400, 500
    /**
     * Simulate creating User and Company on the SP system
     * BE NICE and provide a username and password
     */
    InMemSurepayrollService.prototype.createNewCompany = function (reqInfo, db) {
        var originalRequest = reqInfo.req;
        var body = originalRequest.body;
        console.log('In-mem SurepayrollService.createNewCompany POST request body', body);
        var error$ = validateUsername(body && body.username, db, reqInfo);
        if (error$) {
            return error$; // Naughty user!
        }
        body = {
            bclCode: genBcl(),
            userKey: genOidcSubKey()
        };
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(reqInfo, body);
    };
    // Swagger Def: https://devcoreapi.surepayroll.com/authentication/swagger/index.html
    // ex: GET https://devcoreapi.surepayroll.com/authentication/username/valid/davidasher
    // Success: 204 - No Content
    // Fail: "404 - Not Found" if you send without any user name at all
    // Fail: "409 - Conflict" with the explanation as a string inside an array
    /** Simulate username validation */
    InMemSurepayrollService.prototype.validateUsername$ = function (reqInfo, db) {
        var matched = reqInfo.url.match(/\/username\/valid\/(.*)$/);
        var username = matched[1];
        if (!username) {
            // 404 - the request itself would be unrecognized without the username
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createResponse$"])(reqInfo, _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].NOT_FOUND, 'Not Found');
        }
        else {
            var error$ = validateUsername(username, db, reqInfo);
            return error$ ? error$ : Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createResponse$"])(reqInfo, _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].NO_CONTENT, 'No Content');
        }
    };
    InMemSurepayrollService.prototype.passwordPolicy = function (reqInfo) {
        var policy = [
            {
                name: 'LowercaseCharacter',
                value: 'REQUIRED'
            },
            {
                name: 'UppercaseCharacter',
                value: 'REQUIRED'
            },
            {
                name: 'NumericCharacter',
                value: 'REQUIRED'
            },
            {
                name: 'SpecialCharacter',
                value: 'ALLOWED'
            },
            {
                name: 'MinimumLength',
                value: '10'
            },
            {
                name: 'MaximumRepeatedCharacters',
                value: '0'
            }
        ];
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createResponse$"])(reqInfo, _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].OK, 'Ok', policy);
    };
    InMemSurepayrollService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_1__["defineInjectable"]({ factory: function InMemSurepayrollService_Factory() { return new InMemSurepayrollService(); }, token: InMemSurepayrollService, providedIn: "root" });
    return InMemSurepayrollService;
}());

/**
 * Generate a mock Surepayroll "BCL" code.
 * Generates a pseudo-random 5-character BCL ... with '~' prefix indicating a mock
 */
function genBcl() {
    var charIx = Array.from({ length: 5 }, function () { return Math.floor(Math.random() * 36); });
    return '~' + charIx.map(function (ix) { return 'abcdefghijklmnopqrstuvwxyz0123456789'[ix]; }).join('');
}
/**
 * Generate a mock of the integer part of a Surepayroll IdentityServer oidcSub.
 * Generate a pseudo-random integer up to 7 digits
 */
function genOidcSubKey() {
    return Math.floor(Math.random() * 10000000);
}
// Swagger Def: https://devcoreapi.surepayroll.com/authentication/swagger/index.html
// ex: GET https://devcoreapi.surepayroll.com/authentication/username/valid/davidasher
/**
 * Validate the username per rules, returning error response observable if something is wrong.
 */
function validateUsername(username, db, reqInfo) {
    var url = reqInfo.url;
    var error;
    if (!username || username.length < 8) {
        error = 'Username must have at least 8 characters';
    }
    else if (username.length > 18) {
        error = 'Username cannot have more than 18 characters';
    }
    else if (!/^[a-zA-Z0-9\_\-\.]*$/.test(username)) {
        error = 'Username contains invalid characters';
    }
    else if (db.User.find(function (u) { return u.username === username; })) {
        error = 'The username already exists in SurePayroll database';
    }
    if (error) {
        // 409 - What the server SHOULD return. How it actually errors is anyone's guess.
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createResponse$"])(reqInfo, _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["STATUS"].CONFLICT, 'Conflict', [error]);
    }
}


/***/ }),

/***/ "./src/app/mock-services/in-mem-tax-rate.service.ts":
/*!**********************************************************!*\
  !*** ./src/app/mock-services/in-mem-tax-rate.service.ts ***!
  \**********************************************************/
/*! exports provided: InMemTaxRateService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemTaxRateService", function() { return InMemTaxRateService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var InMemTaxRateService = /** @class */ (function () {
    function InMemTaxRateService() {
    }
    InMemTaxRateService.prototype.getRequest = function (req, db) {
        // tslint:disable:no-use-before-declare
        if (req.url && req.url.includes('/taxes/suirates')) {
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, suiRates);
        }
        if (req.url && req.url.includes('/taxes/holidays')) {
            return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, holidays);
        }
    };
    InMemTaxRateService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_1__["defineInjectable"]({ factory: function InMemTaxRateService_Factory() { return new InMemTaxRateService(); }, token: InMemTaxRateService, providedIn: "root" });
    return InMemTaxRateService;
}());

/* tslint:disable:quotemark */
var holidays = [
    "2019-02-18T00:00:00-06:00",
    "2019-05-27T00:00:00-05:00",
    "2019-07-04T00:00:00-05:00",
    "2019-09-02T00:00:00-05:00",
    "2019-10-14T00:00:00-05:00",
    "2019-11-11T00:00:00-06:00",
    "2019-11-28T00:00:00-06:00",
    "2019-12-25T00:00:00-06:00",
    "2020-12-25T00:00:00-06:00",
    "2020-11-26T00:00:00-06:00",
    "2020-11-11T00:00:00-06:00",
    "2020-10-12T00:00:00-05:00",
    "2020-09-07T00:00:00-05:00",
    "2020-07-03T00:00:00-05:00",
    "2020-05-25T00:00:00-05:00",
    "2020-02-17T00:00:00-06:00",
    "2020-01-20T00:00:00-06:00",
    "2020-01-01T00:00:00-06:00",
    "2021-01-18T00:00:00-06:00",
    "2021-01-01T00:00:00-06:00"
];
var suiRates = [
    {
        "code": "OK0000-010",
        "stateCode": "OK",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.10000,
        "maxAllowedRate": 5.50000,
        "newEmployerMin": 1.50000,
        "newEmployerMax": 1.50000,
        "detailsLink": "https://www.surepayroll.com/resources/states/oklahoma"
    },
    {
        "code": "CA0000-010",
        "stateCode": "CA",
        "allowSubjectRateZero": false,
        "minAllowedRate": 1.50000,
        "maxAllowedRate": 6.20000,
        "newEmployerMin": 3.40000,
        "newEmployerMax": 3.40000,
        "detailsLink": "https://www.surepayroll.com/resources/states/california"
    },
    {
        "code": "NV0000-010",
        "stateCode": "NV",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.25000,
        "maxAllowedRate": 5.40000,
        "newEmployerMin": 2.95000,
        "newEmployerMax": 2.95000,
        "detailsLink": "https://www.surepayroll.com/resources/states/nevada"
    },
    {
        "code": "DE0000-010",
        "stateCode": "DE",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.30000,
        "maxAllowedRate": 8.20000,
        "newEmployerMin": 1.90000,
        "newEmployerMax": 1.90000,
        "detailsLink": "https://www.surepayroll.com/resources/states/delaware"
    },
    {
        "code": "ME0000-010",
        "stateCode": "ME",
        "allowSubjectRateZero": true,
        "minAllowedRate": 0.06000,
        "maxAllowedRate": 5.46000,
        "newEmployerMin": 1.77000,
        "newEmployerMax": 1.77000,
        "detailsLink": "https://www.surepayroll.com/resources/states/maine"
    },
    {
        "code": "OH0000-010",
        "stateCode": "OH",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.30000,
        "maxAllowedRate": 9.00000,
        "newEmployerMin": 2.70000,
        "newEmployerMax": 2.70000,
        "detailsLink": "https://www.surepayroll.com/resources/states/ohio"
    },
    {
        "code": "MS0000-010",
        "stateCode": "MS",
        "allowSubjectRateZero": true,
        "minAllowedRate": 0.20000,
        "maxAllowedRate": 5.60000,
        "newEmployerMin": 1.16000,
        "newEmployerMax": 1.16000,
        "detailsLink": "https://www.surepayroll.com/resources/states/mississippi"
    },
    {
        "code": "MT0000-010",
        "stateCode": "MT",
        "allowSubjectRateZero": true,
        "minAllowedRate": 0.13000,
        "maxAllowedRate": 6.30000,
        "newEmployerMin": 1.00000,
        "newEmployerMax": 2.60000,
        "detailsLink": "https://www.surepayroll.com/resources/states/montana"
    },
    {
        "code": "PA0000-010",
        "stateCode": "PA",
        "allowSubjectRateZero": false,
        "minAllowedRate": 2.39050,
        "maxAllowedRate": 11.03330,
        "newEmployerMin": 3.68900,
        "newEmployerMax": 3.68900,
        "detailsLink": "https://www.surepayroll.com/resources/states/pennsylvania"
    },
    {
        "code": "IA0000-010",
        "stateCode": "IA",
        "allowSubjectRateZero": true,
        "minAllowedRate": 0.00000,
        "maxAllowedRate": 7.50000,
        "newEmployerMin": 1.00000,
        "newEmployerMax": 1.00000,
        "detailsLink": "https://www.surepayroll.com/resources/states/iowa"
    },
    {
        "code": "TN0000-010",
        "stateCode": "TN",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.01000,
        "maxAllowedRate": 10.00000,
        "newEmployerMin": 2.70000,
        "newEmployerMax": 7.00000,
        "detailsLink": "https://www.surepayroll.com/resources/states/tennessee"
    },
    {
        "code": "MA0000-010",
        "stateCode": "MA",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.83000,
        "maxAllowedRate": 12.65000,
        "newEmployerMin": 1.87000,
        "newEmployerMax": 1.87000,
        "detailsLink": "https://www.surepayroll.com/resources/states/massachusetts"
    },
    {
        "code": "NE0000-010",
        "stateCode": "NE",
        "allowSubjectRateZero": true,
        "minAllowedRate": 0.00000,
        "maxAllowedRate": 5.40000,
        "newEmployerMin": 1.25000,
        "newEmployerMax": 1.25000,
        "detailsLink": "https://www.surepayroll.com/resources/states/nebraska"
    },
    {
        "code": "WI0000-010",
        "stateCode": "WI",
        "allowSubjectRateZero": true,
        "minAllowedRate": 0.00000,
        "maxAllowedRate": 12.00000,
        "newEmployerMin": 3.05000,
        "newEmployerMax": 3.25000,
        "detailsLink": "https://www.surepayroll.com/resources/states/wisconsin"
    },
    {
        "code": "NC0000-010",
        "stateCode": "NC",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.06000,
        "maxAllowedRate": 5.76000,
        "newEmployerMin": 1.00000,
        "newEmployerMax": 1.00000,
        "detailsLink": "https://www.surepayroll.com/resources/states/north-carolina"
    },
    {
        "code": "WA0000-010",
        "stateCode": "WA",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.13000,
        "maxAllowedRate": 7.73000,
        "newEmployerMin": 1.00000,
        "newEmployerMax": 6.95700,
        "detailsLink": "https://www.surepayroll.com/resources/states/washington"
    },
    {
        "code": "KS0000-010",
        "stateCode": "KS",
        "allowSubjectRateZero": true,
        "minAllowedRate": 0.20000,
        "maxAllowedRate": 7.60000,
        "newEmployerMin": 2.70000,
        "newEmployerMax": 2.70000,
        "detailsLink": "https://www.surepayroll.com/resources/states/kansas"
    },
    {
        "code": "AL0000-010",
        "stateCode": "AL",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.65000,
        "maxAllowedRate": 6.80000,
        "newEmployerMin": 2.70000,
        "newEmployerMax": 2.70000,
        "detailsLink": "https://www.surepayroll.com/resources/states/alabama"
    },
    {
        "code": "SC0000-010",
        "stateCode": "SC",
        "allowSubjectRateZero": true,
        "minAllowedRate": 0.06000,
        "maxAllowedRate": 5.46000,
        "newEmployerMin": 1.03000,
        "newEmployerMax": 1.03000,
        "detailsLink": "https://www.surepayroll.com/resources/states/south-carolina"
    },
    {
        "code": "CT0000-010",
        "stateCode": "CT",
        "allowSubjectRateZero": false,
        "minAllowedRate": 1.90000,
        "maxAllowedRate": 6.80000,
        "newEmployerMin": 3.90000,
        "newEmployerMax": 3.90000,
        "detailsLink": "https://www.surepayroll.com/resources/states/connecticut"
    },
    {
        "code": "ID0000-010",
        "stateCode": "ID",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.39300,
        "maxAllowedRate": 5.40000,
        "newEmployerMin": 1.39500,
        "newEmployerMax": 1.39500,
        "detailsLink": "https://www.surepayroll.com/resources/states/idaho"
    },
    {
        "code": "GA0000-010",
        "stateCode": "GA",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.04000,
        "maxAllowedRate": 5.40000,
        "newEmployerMin": 2.62000,
        "newEmployerMax": 2.62000,
        "detailsLink": "https://www.surepayroll.com/resources/states/georgia"
    },
    {
        "code": "IL0000-010",
        "stateCode": "IL",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.52500,
        "maxAllowedRate": 6.92500,
        "newEmployerMin": 3.45000,
        "newEmployerMax": 3.45000,
        "detailsLink": "https://www.surepayroll.com/resources/states/illinois"
    },
    {
        "code": "SD0000-010",
        "stateCode": "SD",
        "allowSubjectRateZero": true,
        "minAllowedRate": 0.00000,
        "maxAllowedRate": 9.35000,
        "newEmployerMin": 1.00000,
        "newEmployerMax": 1.20000,
        "detailsLink": "https://www.surepayroll.com/resources/states/south-dakota"
    },
    {
        "code": "WV0000-010",
        "stateCode": "WV",
        "allowSubjectRateZero": false,
        "minAllowedRate": 1.50000,
        "maxAllowedRate": 8.50000,
        "newEmployerMin": 2.70000,
        "newEmployerMax": 2.70000,
        "detailsLink": "https://www.surepayroll.com/resources/states/west-virginia"
    },
    {
        "code": "WY0000-010",
        "stateCode": "WY",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.28700,
        "maxAllowedRate": 8.78000,
        "newEmployerMin": 1.34000,
        "newEmployerMax": 4.18000,
        "detailsLink": "https://www.surepayroll.com/resources/states/wyoming"
    },
    {
        "code": "NM0000-010",
        "stateCode": "NM",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.33000,
        "maxAllowedRate": 5.40000,
        "newEmployerMin": 1.20000,
        "newEmployerMax": 3.24000,
        "detailsLink": "https://www.surepayroll.com/resources/states/new-mexico"
    },
    {
        "code": "OR0000-010",
        "stateCode": "OR",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.90000,
        "maxAllowedRate": 5.40000,
        "newEmployerMin": 2.60000,
        "newEmployerMax": 2.60000,
        "detailsLink": "https://www.surepayroll.com/resources/states/oregon"
    },
    {
        "code": "AK0000-010",
        "stateCode": "AK",
        "allowSubjectRateZero": false,
        "minAllowedRate": 1.00000,
        "maxAllowedRate": 5.40000,
        "newEmployerMin": 1.50000,
        "newEmployerMax": 2.23000,
        "detailsLink": "https://www.surepayroll.com/resources/states/alaska"
    },
    {
        "code": "KY0000-010",
        "stateCode": "KY",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.40000,
        "maxAllowedRate": 9.25000,
        "newEmployerMin": 2.70000,
        "newEmployerMax": 2.70000,
        "detailsLink": "https://www.surepayroll.com/resources/states/kentucky"
    },
    {
        "code": "VA0000-010",
        "allowSubjectRateZero": false,
        "stateCode": "VA",
        "minAllowedRate": 0.11000,
        "maxAllowedRate": 6.21000,
        "newEmployerMin": 2.57000,
        "newEmployerMax": 2.57000,
        "detailsLink": "https://www.surepayroll.com/resources/states/virginia"
    },
    {
        "code": "NY0000-010",
        "stateCode": "NY",
        "allowSubjectRateZero": false,
        "minAllowedRate": 1.30000,
        "maxAllowedRate": 9.10000,
        "newEmployerMin": 4.10000,
        "newEmployerMax": 4.10000,
        "detailsLink": "https://www.surepayroll.com/resources/states/new-york"
    },
    {
        "code": "TX0000-010",
        "stateCode": "TX",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.46000,
        "maxAllowedRate": 6.46000,
        "newEmployerMin": 2.70000,
        "newEmployerMax": 2.70000,
        "detailsLink": "https://www.surepayroll.com/resources/states/texas"
    },
    {
        "code": "NH0000-010",
        "stateCode": "NH",
        "allowSubjectRateZero": true,
        "minAllowedRate": 0.10000,
        "maxAllowedRate": 7.50000,
        "newEmployerMin": 1.70000,
        "newEmployerMax": 1.70000,
        "detailsLink": "https://www.surepayroll.com/resources/states/new-hampshire"
    },
    {
        "code": "VT0000-010",
        "stateCode": "VT",
        "allowSubjectRateZero": false,
        "minAllowedRate": 1.10000,
        "maxAllowedRate": 7.70000,
        "newEmployerMin": 1.00000,
        "newEmployerMax": 6.40000,
        "detailsLink": "https://www.surepayroll.com/resources/states/vermont"
    },
    {
        "code": "ND0000-010",
        "stateCode": "ND",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.30000,
        "maxAllowedRate": 10.74000,
        "newEmployerMin": 1.62000,
        "newEmployerMax": 1.62000,
        "detailsLink": "https://www.surepayroll.com/resources/states/north-dakota"
    },
    {
        "code": "DC0000-010",
        "stateCode": "DC",
        "allowSubjectRateZero": false,
        "minAllowedRate": 1.60000,
        "maxAllowedRate": 7.00000,
        "newEmployerMin": 2.70000,
        "newEmployerMax": 2.70000,
        "detailsLink": "https://www.surepayroll.com/resources/states/washington-dc"
    },
    {
        "code": "RI0000-010",
        "stateCode": "RI",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.89000,
        "maxAllowedRate": 9.49000,
        "newEmployerMin": 2.04000,
        "newEmployerMax": 2.04000,
        "detailsLink": "https://www.surepayroll.com/resources/states/rhode-island"
    },
    {
        "code": "NJ0000-010",
        "stateCode": "NJ",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.50000,
        "maxAllowedRate": 5.80000,
        "newEmployerMin": 3.28250,
        "newEmployerMax": 3.28250,
        "detailsLink": "https://www.surepayroll.com/resources/states/new-jersey"
    },
    {
        "code": "PR0000-010",
        "stateCode": "PR",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.0,
        "maxAllowedRate": 0.0,
        "newEmployerMin": 0.0,
        "newEmployerMax": 0.0,
        "detailsLink": null
    },
    {
        "code": "AR0000-010",
        "stateCode": "AR",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.40000,
        "maxAllowedRate": 14.30000,
        "newEmployerMin": 3.20000,
        "newEmployerMax": 3.20000,
        "detailsLink": "https://www.surepayroll.com/resources/states/arkansas"
    },
    {
        "code": "HI0000-010",
        "stateCode": "HI",
        "allowSubjectRateZero": true,
        "minAllowedRate": 0.00000,
        "maxAllowedRate": 5.60000,
        "newEmployerMin": 2.40000,
        "newEmployerMax": 2.40000,
        "detailsLink": "https://www.surepayroll.com/resources/states/hawaii"
    },
    {
        "code": "LA0000-010",
        "stateCode": "LA",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.10000,
        "maxAllowedRate": 6.20000,
        "newEmployerMin": 1.21000,
        "newEmployerMax": 3.02000,
        "detailsLink": "https://www.surepayroll.com/resources/states/louisiana"
    },
    {
        "code": "UT0000-010",
        "stateCode": "UT",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.10000,
        "maxAllowedRate": 7.10000,
        "newEmployerMin": 1.10000,
        "newEmployerMax": 7.20000,
        "detailsLink": "https://www.surepayroll.com/resources/states/utah"
    },
    {
        "code": "MD0000-010",
        "stateCode": "MD",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.30000,
        "maxAllowedRate": 7.50000,
        "newEmployerMin": 2.60000,
        "newEmployerMax": 2.60000,
        "detailsLink": "https://www.surepayroll.com/resources/states/maryland"
    },
    {
        "code": "MO0000-010",
        "stateCode": "MO",
        "allowSubjectRateZero": true,
        "minAllowedRate": 0.00000,
        "maxAllowedRate": 8.37000,
        "newEmployerMin": 3.51000,
        "newEmployerMax": 3.51000,
        "detailsLink": "https://www.surepayroll.com/resources/states/missouri"
    },
    {
        "code": "FL0000-010",
        "stateCode": "FL",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.10000,
        "maxAllowedRate": 5.40000,
        "newEmployerMin": 2.70000,
        "newEmployerMax": 2.70000,
        "detailsLink": "https://www.surepayroll.com/resources/states/florida"
    },
    {
        "code": "VI0000-010",
        "stateCode": "VI",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.0,
        "maxAllowedRate": 0.0,
        "newEmployerMin": 0.0,
        "newEmployerMax": 0.0,
        "detailsLink": null
    },
    {
        "code": "AZ0000-010",
        "stateCode": "AZ",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.05000,
        "maxAllowedRate": 12.76000,
        "newEmployerMin": 2.00000,
        "newEmployerMax": 2.00000,
        "detailsLink": "https://www.surepayroll.com/resources/states/arizona"
    },
    {
        "code": "CO0000-010",
        "stateCode": "CO",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.62000,
        "maxAllowedRate": 8.15000,
        "newEmployerMin": 1.70000,
        "newEmployerMax": 1.70000,
        "detailsLink": "https://www.surepayroll.com/resources/states/colorado"
    },
    {
        "code": "MI0000-010",
        "stateCode": "MI",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.06000,
        "maxAllowedRate": 10.30000,
        "newEmployerMin": 2.70000,
        "newEmployerMax": 2.70000,
        "detailsLink": "https://www.surepayroll.com/resources/states/michigan"
    },
    {
        "code": "MN0000-010",
        "stateCode": "MN",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.20000,
        "maxAllowedRate": 9.10000,
        "newEmployerMin": 1.54000,
        "newEmployerMax": 1.54000,
        "detailsLink": "https://www.surepayroll.com/resources/states/minnesota"
    },
    {
        "code": "IN0000-010",
        "stateCode": "IN",
        "allowSubjectRateZero": false,
        "minAllowedRate": 0.50000,
        "maxAllowedRate": 7.40000,
        "newEmployerMin": 2.50000,
        "newEmployerMax": 2.50000,
        "detailsLink": "https://www.surepayroll.com/resources/states/indiana"
    }
];


/***/ }),

/***/ "./src/app/mock-services/in-mem-tax.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/mock-services/in-mem-tax.service.ts ***!
  \*****************************************************/
/*! exports provided: InMemTaxService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemTaxService", function() { return InMemTaxService; });
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var InMemTaxService = /** @class */ (function () {
    function InMemTaxService() {
    }
    InMemTaxService.prototype.getRequest = function (req, db) {
        if (req.url && req.url.includes('taxapi/taxes')) {
            var body = req.req.body;
            var workGeoCodes = body.map(function (e) { return ({
                id: e.id,
                geoCode: e.workAddress.geoCode
            }); });
            return this.getTaxList(req, db, workGeoCodes);
        }
    };
    /* tslint:disable:quotemark */
    InMemTaxService.prototype.getTaxList = function (req, db, addSet) {
        var data = [
            {
                "state": "NY",
                "taxes": [
                    {
                        "code": "NY0061-001",
                        "description": "NEW YORK",
                        "isEmployee": true,
                        "categoryDescription": "City W/H",
                        "displayOrder": 5,
                        "stateCode": "NY",
                        "taxTypeCode": "CT",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": "NY0000-001",
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "CITYWT",
                        "canBeExempt": false
                    },
                    {
                        "code": "NY0000-001",
                        "description": "NEW YORK WITHHOLDING",
                        "isEmployee": true,
                        "categoryDescription": "State W/H",
                        "displayOrder": 4,
                        "stateCode": "NY",
                        "taxTypeCode": "ST",
                        "isVariableRate": false,
                        "taxFormats": [{
                                "stateCode": "NY",
                                "format": "#########",
                                "regEx": "\\d{9}"
                            }],
                        "filingStatuses": [{
                                "code": "H",
                                "description": "Head of Household"
                            },
                            {
                                "code": "M",
                                "description": "Married"
                            },
                            {
                                "code": "S",
                                "description": "Single"
                            }],
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "STATEWT",
                        "canBeExempt": true
                    },
                    {
                        "code": "NY0000-145",
                        "description": "NEW YORK MCTMT EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "County Employer Tax",
                        "displayOrder": 502,
                        "stateCode": "NY",
                        "taxTypeCode": "CN",
                        "isVariableRate": false,
                        "taxFormats": [{
                                "stateCode": "\\d{9}",
                                "format": "#########",
                                "regEx": "\\d{9}"
                            }],
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "CNTYER",
                        "canBeExempt": false
                    },
                    {
                        "code": "NY0000-128",
                        "description": "NEW YORK REEMPLOYMENT SERVICE EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "State Unemployment 1 Employer",
                        "displayOrder": 461,
                        "stateCode": "NY",
                        "taxTypeCode": "ST",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SUI1ER",
                        "canBeExempt": false
                    },
                    {
                        "code": "NY0000-010",
                        "description": "NEW YORK STATE UNEMPLOYMENT EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "State Unemployment Insurance Employer",
                        "displayOrder": 15,
                        "stateCode": "NY",
                        "taxTypeCode": "ST",
                        "isVariableRate": true,
                        "taxFormats": [{
                                "stateCode": "NY",
                                "format": "##-#####",
                                "regEx": "\\d{2}\\-\\d{5}"
                            }],
                        "filingStatuses": [],
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SUIER",
                        "canBeExempt": true
                    },
                    {
                        "code": "FE0000-006",
                        "description": "MED EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "Medicare Employer",
                        "displayOrder": 13,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "MEDER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-005",
                        "description": "MED EMPLOYEE",
                        "isEmployee": true,
                        "categoryDescription": "Medicare",
                        "displayOrder": 2,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "MEDEE",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-004",
                        "description": "SOC SEC EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "Social Security Employer",
                        "displayOrder": 12,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SOCSECER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-003",
                        "description": "SOC SEC EMPLOYEE",
                        "isEmployee": true,
                        "categoryDescription": "Social Security",
                        "displayOrder": 1,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SOCSECEE",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-010",
                        "description": "FEDERAL UNEMPLOYMENT EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "FUTA Employer",
                        "displayOrder": 14,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "FUTAER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-001",
                        "description": "FEDERAL WITHHOLDING",
                        "isEmployee": true,
                        "categoryDescription": "Federal W/H",
                        "displayOrder": 3,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": [{
                                "stateCode": "US",
                                "format": "##-#######",
                                "regEx": "\\d{2}\\-\\d{7}"
                            }],
                        "filingStatuses": [{
                                "code": "H",
                                "description": "Head of Household"
                            },
                            {
                                "code": "M",
                                "description": "Married"
                            },
                            {
                                "code": "S",
                                "description": "Single"
                            }],
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "FEDWT",
                        "canBeExempt": false
                    }
                ]
            },
            {
                "state": "PA",
                "taxes": [
                    {
                        "code": "PA2049-001",
                        "description": "PHILADELPHIA",
                        "isEmployee": true,
                        "categoryDescription": "City W/H",
                        "displayOrder": 5,
                        "stateCode": "PA",
                        "taxTypeCode": "CT",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "CITYWT",
                        "canBeExempt": false
                    },
                    {
                        "code": "PA0000-010",
                        "description": "PENNSYLVANIA STATE UNEMPLOYMENT EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "State Unemployment Insurance Employer",
                        "displayOrder": 15,
                        "stateCode": "PA",
                        "taxTypeCode": "ST",
                        "isVariableRate": true,
                        "taxFormats": [{
                                "stateCode": "PA",
                                "format": "##-#####Æ",
                                "regEx": "\\d{2}\\-\\d{5}[A-Z]"
                            },
                            {
                                "stateCode": "PA",
                                "format": "##-#####",
                                "regEx": "\\d{2}\\-\\d{5}"
                            }],
                        "filingStatuses": [],
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SUIER",
                        "canBeExempt": true
                    },
                    {
                        "code": "PA0000-020",
                        "description": "PENNSYLVANIA SUI EMPLOYEE",
                        "isEmployee": true,
                        "categoryDescription": "SUI EE",
                        "displayOrder": 8,
                        "stateCode": "PA",
                        "taxTypeCode": "ST",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SUIEE",
                        "canBeExempt": false
                    },
                    {
                        "code": "PA0000-001",
                        "description": "PENNSYLVANIA WITHHOLDING",
                        "isEmployee": true,
                        "categoryDescription": "State W/H",
                        "displayOrder": 4,
                        "stateCode": "PA",
                        "taxTypeCode": "ST",
                        "isVariableRate": false,
                        "taxFormats": [{
                                "stateCode": "PA",
                                "format": "########",
                                "regEx": "\\d{8}"
                            }],
                        "filingStatuses": [{
                                "code": "H",
                                "description": "Head of Household"
                            },
                            {
                                "code": "M",
                                "description": "Married"
                            },
                            {
                                "code": "S",
                                "description": "Single"
                            }],
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "STATEWT",
                        "canBeExempt": true
                    },
                    {
                        "code": "FE0000-006",
                        "description": "MED EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "Medicare Employer",
                        "displayOrder": 13,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "MEDER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-005",
                        "description": "MED EMPLOYEE",
                        "isEmployee": true,
                        "categoryDescription": "Medicare",
                        "displayOrder": 2,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "MEDEE",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-004",
                        "description": "SOC SEC EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "Social Security Employer",
                        "displayOrder": 12,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SOCSECER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-003",
                        "description": "SOC SEC EMPLOYEE",
                        "isEmployee": true,
                        "categoryDescription": "Social Security",
                        "displayOrder": 1,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SOCSECEE",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-010",
                        "description": "FEDERAL UNEMPLOYMENT EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "FUTA Employer",
                        "displayOrder": 14,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "FUTAER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-001",
                        "description": "FEDERAL WITHHOLDING",
                        "isEmployee": true,
                        "categoryDescription": "Federal W/H",
                        "displayOrder": 3,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": [{
                                "stateCode": "US",
                                "format": "##-#######",
                                "regEx": "\\d{2}\\-\\d{7}"
                            }],
                        "filingStatuses": [{
                                "code": "H",
                                "description": "Head of Household"
                            },
                            {
                                "code": "M",
                                "description": "Married"
                            },
                            {
                                "code": "S",
                                "description": "Single"
                            }],
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "FEDWT",
                        "canBeExempt": false
                    }
                ]
            },
            {
                "state": "NV",
                "taxes": [
                    {
                        "code": "NV0000-131",
                        "description": "NEVADA CAREER ENHANCEMENT EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "State Unemployment 1 Employer",
                        "displayOrder": 461,
                        "stateCode": "NV",
                        "taxTypeCode": "ST",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SUI1ER",
                        "canBeExempt": false
                    },
                    {
                        "code": "NV0000-010",
                        "description": "NEVADA STATE UNEMPLOYMENT EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "State Unemployment Insurance Employer",
                        "displayOrder": 15,
                        "stateCode": "NV",
                        "taxTypeCode": "ST",
                        "isVariableRate": true,
                        "taxFormats": [{
                                "stateCode": "NV",
                                "format": "0########",
                                "regEx": "0\\d{8}"
                            }],
                        "filingStatuses": [],
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SUIER",
                        "canBeExempt": true
                    },
                    {
                        "code": "NV0000-134",
                        "description": "NEVADA MODIFIED BUSINESS TAX EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "State Miscellaneous 2 Employer",
                        "displayOrder": 457,
                        "stateCode": "NV",
                        "taxTypeCode": "ST",
                        "isVariableRate": false,
                        "taxFormats": [{
                                "stateCode": "\\d{10}",
                                "format": "##########",
                                "regEx": "\\d{10}"
                            }],
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "STMISC2ER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-006",
                        "description": "MED EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "Medicare Employer",
                        "displayOrder": 13,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "MEDER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-005",
                        "description": "MED EMPLOYEE",
                        "isEmployee": true,
                        "categoryDescription": "Medicare",
                        "displayOrder": 2,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "MEDEE",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-004",
                        "description": "SOC SEC EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "Social Security Employer",
                        "displayOrder": 12,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SOCSECER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-003",
                        "description": "SOC SEC EMPLOYEE",
                        "isEmployee": true,
                        "categoryDescription": "Social Security",
                        "displayOrder": 1,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SOCSECEE",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-010",
                        "description": "FEDERAL UNEMPLOYMENT EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "FUTA Employer",
                        "displayOrder": 14,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "FUTAER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-001",
                        "description": "FEDERAL WITHHOLDING",
                        "isEmployee": true,
                        "categoryDescription": "Federal W/H",
                        "displayOrder": 3,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": [{
                                "stateCode": "US",
                                "format": "##-#######",
                                "regEx": "\\d{2}\\-\\d{7}"
                            }],
                        "filingStatuses": [{
                                "code": "H",
                                "description": "Head of Household"
                            },
                            {
                                "code": "M",
                                "description": "Married"
                            },
                            {
                                "code": "S",
                                "description": "Single"
                            }],
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "FEDWT",
                        "canBeExempt": false
                    }
                ]
            },
            {
                "state": "CA",
                "taxes": [
                    {
                        "code": "CA0000-001",
                        "description": "CALIFORNIA WITHHOLDING",
                        "isEmployee": true,
                        "categoryDescription": "State W/H",
                        "displayOrder": 4,
                        "stateCode": "CA",
                        "taxTypeCode": "ST",
                        "isVariableRate": false,
                        "taxFormats": [{
                                "stateCode": "CA",
                                "format": "###-####-#",
                                "regEx": "\\d{3}\\-\\d{4}\\-\\d"
                            }],
                        "filingStatuses": [{
                                "code": "H",
                                "description": "Head of Household"
                            },
                            {
                                "code": "M",
                                "description": "Married with one income"
                            },
                            {
                                "code": "S",
                                "description": "Single"
                            }],
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "STATEWT",
                        "canBeExempt": true
                    },
                    {
                        "code": "CA0000-041",
                        "description": "CALIFORNIA STATE DISABILITY EMPLOYEE",
                        "isEmployee": true,
                        "categoryDescription": "SDI EE",
                        "displayOrder": 7,
                        "stateCode": "CA",
                        "taxTypeCode": "ST",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": "CA0000-001",
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SDIEE",
                        "canBeExempt": false
                    },
                    {
                        "code": "CA0000-128",
                        "description": "CA EMPLOYMENT TRAINING TAX EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "State Unemployment 1 Employer",
                        "displayOrder": 461,
                        "stateCode": "CA",
                        "taxTypeCode": "ST",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": "CA0000-001",
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SUI1ER",
                        "canBeExempt": false
                    },
                    {
                        "code": "CA0000-010",
                        "description": "CALIFORNIA STATE UNEMPLOYMENT EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "State Unemployment Insurance Employer",
                        "displayOrder": 15,
                        "stateCode": "CA",
                        "taxTypeCode": "ST",
                        "isVariableRate": true,
                        "taxFormats": [{
                                "stateCode": "CA",
                                "format": "###-####-#",
                                "regEx": "\\d{3}\\-\\d{4}\\-\\d"
                            }],
                        "filingStatuses": [],
                        "useEINFromCode": "CA0000-001",
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SUIER",
                        "canBeExempt": true
                    },
                    {
                        "code": "FE0000-006",
                        "description": "MED EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "Medicare Employer",
                        "displayOrder": 13,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "MEDER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-005",
                        "description": "MED EMPLOYEE",
                        "isEmployee": true,
                        "categoryDescription": "Medicare",
                        "displayOrder": 2,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "MEDEE",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-004",
                        "description": "SOC SEC EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "Social Security Employer",
                        "displayOrder": 12,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SOCSECER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-003",
                        "description": "SOC SEC EMPLOYEE",
                        "isEmployee": true,
                        "categoryDescription": "Social Security",
                        "displayOrder": 1,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "SOCSECEE",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-010",
                        "description": "FEDERAL UNEMPLOYMENT EMPLOYER",
                        "isEmployee": false,
                        "categoryDescription": "FUTA Employer",
                        "displayOrder": 14,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": null,
                        "filingStatuses": null,
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "FUTAER",
                        "canBeExempt": false
                    },
                    {
                        "code": "FE0000-001",
                        "description": "FEDERAL WITHHOLDING",
                        "isEmployee": true,
                        "categoryDescription": "Federal W/H",
                        "displayOrder": 3,
                        "stateCode": null,
                        "taxTypeCode": "FD",
                        "isVariableRate": false,
                        "taxFormats": [{
                                "stateCode": "US",
                                "format": "##-#######",
                                "regEx": "\\d{2}\\-\\d{7}"
                            }],
                        "filingStatuses": [{
                                "code": "H",
                                "description": "Head of Household"
                            },
                            {
                                "code": "M",
                                "description": "Married"
                            },
                            {
                                "code": "S",
                                "description": "Single"
                            }],
                        "useEINFromCode": null,
                        "useUBIFromCodeAsEIN": null,
                        "categoryCode": "FEDWT",
                        "canBeExempt": false
                    }
                ]
            }
        ];
        var body = addSet.map(function (set) {
            var taxData = data.find(function (c) { return c.state.toLowerCase() === set.geoCode.substring(0, 2).toLowerCase(); });
            return {
                id: set.id,
                workAddress: {},
                liveAddress: {},
                taxes: taxData == null ? [] : taxData.taxes
            };
        }, []);
        return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_0__["createOkResponse$"])(req, body);
    };
    InMemTaxService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_1__["defineInjectable"]({ factory: function InMemTaxService_Factory() { return new InMemTaxService(); }, token: InMemTaxService, providedIn: "root" });
    return InMemTaxService;
}());



/***/ }),

/***/ "./src/app/mock-services/in-memory-data.service.ts":
/*!*********************************************************!*\
  !*** ./src/app/mock-services/in-memory-data.service.ts ***!
  \*********************************************************/
/*! exports provided: InMemoryDataService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InMemoryDataService", function() { return InMemoryDataService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_ajax__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/ajax */ "./node_modules/rxjs/_esm5/ajax/index.js");
/* harmony import */ var angular_in_memory_web_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! angular-in-memory-web-api */ "./node_modules/angular-in-memory-web-api/index.js");
/* harmony import */ var _in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./in-mem-service-utils */ "./src/app/mock-services/in-mem-service-utils.ts");
/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./db */ "./src/app/mock-services/db.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _in_mem_gen_extra_accounts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./in-mem-gen-extra-accounts */ "./src/app/mock-services/in-mem-gen-extra-accounts.ts");
/* harmony import */ var _in_mem_account_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./in-mem-account.service */ "./src/app/mock-services/in-mem-account.service.ts");
/* harmony import */ var _app_mock_services_in_mem_address_validator_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @app/mock-services/in-mem-address-validator.service */ "./src/app/mock-services/in-mem-address-validator.service.ts");
/* harmony import */ var _in_mem_admin_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./in-mem-admin.service */ "./src/app/mock-services/in-mem-admin.service.ts");
/* harmony import */ var _in_mem_company_package_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./in-mem-company-package.service */ "./src/app/mock-services/in-mem-company-package.service.ts");
/* harmony import */ var _in_mem_deduction_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./in-mem-deduction.service */ "./src/app/mock-services/in-mem-deduction.service.ts");
/* harmony import */ var _in_mem_earning_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./in-mem-earning.service */ "./src/app/mock-services/in-mem-earning.service.ts");
/* harmony import */ var _in_mem_ein_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./in-mem-ein.service */ "./src/app/mock-services/in-mem-ein.service.ts");
/* harmony import */ var _in_mem_esign_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./in-mem-esign.service */ "./src/app/mock-services/in-mem-esign.service.ts");
/* harmony import */ var _in_mem_enrollment_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./in-mem-enrollment.service */ "./src/app/mock-services/in-mem-enrollment.service.ts");
/* harmony import */ var _in_mem_identity_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./in-mem-identity.service */ "./src/app/mock-services/in-mem-identity.service.ts");
/* harmony import */ var _in_mem_save_entities_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./in-mem-save-entities.service */ "./src/app/mock-services/in-mem-save-entities.service.ts");
/* harmony import */ var _in_mem_surepayroll_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./in-mem-surepayroll.service */ "./src/app/mock-services/in-mem-surepayroll.service.ts");
/* harmony import */ var _app_mock_services_in_mem_tax_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @app/mock-services/in-mem-tax.service */ "./src/app/mock-services/in-mem-tax.service.ts");
/* harmony import */ var _app_mock_services_in_mem_tax_rate_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @app/mock-services/in-mem-tax-rate.service */ "./src/app/mock-services/in-mem-tax-rate.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};





































var InMemoryDataService = /** @class */ (function () {
    function InMemoryDataService(inMemAccountService, inMemAddressValidatorService, inMemAdminService, inMemCompanyPackageService, inMemDeductionService, inMemEarningService, inMemEinService, inMemEsignService, inMemEnrollmentService, inMemIdentityService, inMemSaveEntitiesService, inMemTaxService, inMemTaxRateService, inMemSurepayrollService) {
        this.inMemAccountService = inMemAccountService;
        this.inMemAddressValidatorService = inMemAddressValidatorService;
        this.inMemAdminService = inMemAdminService;
        this.inMemCompanyPackageService = inMemCompanyPackageService;
        this.inMemDeductionService = inMemDeductionService;
        this.inMemEarningService = inMemEarningService;
        this.inMemEinService = inMemEinService;
        this.inMemEsignService = inMemEsignService;
        this.inMemEnrollmentService = inMemEnrollmentService;
        this.inMemIdentityService = inMemIdentityService;
        this.inMemSaveEntitiesService = inMemSaveEntitiesService;
        this.inMemTaxService = inMemTaxService;
        this.inMemTaxRateService = inMemTaxRateService;
        this.inMemSurepayrollService = inMemSurepayrollService;
        /** True if in-mem service is intercepting (default); all requests pass thru when false. */
        this.active = true;
        this.maxId = 0;
        this.createInitialEmptyDb();
        this.createResourceNameMap();
    }
    /** Create the in-memory database on start or by command */
    InMemoryDataService.prototype.createDb = function (reqInfo) {
        if (reqInfo) {
            var body = reqInfo.utils.getJsonBody(reqInfo.req) || {};
            this.active = !!body.active;
            if (body.clear === true) {
                this.createInitialEmptyDb();
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(this.db);
            }
        }
        return this.createInitialMockDb();
    };
    /**
     * Create/reset the in-mem database from mock data in JSON file,
     * extended with calculated accounts and account etags.
     * @returns Terminating observable. You must subscribe to execute but no need to unsubscribe.
     */
    InMemoryDataService.prototype.createInitialMockDb = function () {
        var _this = this;
        this.createInitialEmptyDb();
        return getDbData().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (rawDb) { return Object(_in_mem_gen_extra_accounts__WEBPACK_IMPORTED_MODULE_7__["genExtraAccounts"])(__assign({}, _this.db, rawDb)); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["tap"])(function (db) {
            // Ensure every initial mock company has an etag version.
            db.Company.forEach(function (c) {
                if (db.CompanyVersion[c.id] == null) {
                    db.CompanyVersion[c.id] = 0;
                }
            });
            _this.db = db;
        }));
    };
    /**
     * Create initial database with empty collections
     */
    InMemoryDataService.prototype.createInitialEmptyDb = function () {
        this.db = new _db__WEBPACK_IMPORTED_MODULE_5__["Db"]();
    };
    InMemoryDataService.prototype.createResourceNameMap = function () {
        var db = new _db__WEBPACK_IMPORTED_MODULE_5__["Db"]();
        this.resourceNameMap = Object.keys(db).reduce(function (acc, collectionName) {
            var key = collectionName.toLowerCase();
            acc[key] = collectionName;
            // Generate plural resource name mapping
            if (key.endsWith('y')) {
                acc[key.substr(0, key.length - 1) + 'ies'] = collectionName;
            }
            else if (key.endsWith('x')) {
                acc[key + 'es'] = collectionName;
            }
            else {
                acc[key + 's'] = collectionName;
            }
            return acc;
        }, {});
    };
    /**
     * Simulate generating new Id on the server
     */
    InMemoryDataService.prototype.genId = function (collection, collectionName) {
        throw new Error("Cannot generate server-side id for '" + collectionName + "'.");
    };
    /**
     * Remap a known singular collection name ("customer")
     * to the plural collection name ("customers"); else return the name
     * @param name - collection name from the parsed URL
     */
    InMemoryDataService.prototype.mapCollectionName = function (name) {
        return this.resourceNameMap[(name || '').toLowerCase()] || name;
    };
    /**
     * Override `parseRequestUrl`
     * Manipulates the request URL or the parsed result.
     * If in-mem is inactive, clear collectionName so that service passes request thru.
     * If in-mem is active, after parsing with the default parser,
     * @param url from request URL
     * @param utils for manipulating parsed URL
     */
    InMemoryDataService.prototype.parseRequestUrl = function (url, utils) {
        url = mapSpApiUrl(url);
        url = tweakUrl(url);
        var parsed = utils.parseRequestUrl(url);
        parsed.collectionName = this.active ? this.mapCollectionName(parsed.collectionName) : undefined;
        if (_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].mockSpApiOnly) {
            // When only mocking SP APIs, disable mocking based on collection name.
            // Now requests go first to method interceptors (GET/PUT) and,
            // if not intercepted, pass through to HTTP, without matching an in-mem DB collection.
            parsed.collectionName = '';
        }
        return parsed;
    };
    // #region GET cases
    /**
     * Special-cases for GET methods
     */
    InMemoryDataService.prototype.get = function (req) {
        if (_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].mockSpApiOnly) {
            return this.getMockSpApiOnly(req);
        }
        else {
            return this.getMocked(req);
        }
    };
    /**
     * Special-cases for GET methods to all ECommerce & SP APIs
     */
    InMemoryDataService.prototype.getMocked = function (req) {
        switch (req.collectionName) {
            case 'account':
                return this.inMemAccountService.getRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req);
            case 'admin':
                return this.inMemAdminService.getRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req);
            case 'companypackage':
                return (this.inMemCompanyPackageService.getCompanyPackage(req, this.db) ||
                    Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req));
            case 'earnings':
                return (this.inMemEarningService.getRequest(req, this.db) ||
                    Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req));
            case 'deductions':
                return (this.inMemDeductionService.getRequest(req, this.db) ||
                    Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req));
            case 'documentpackage':
                return (this.inMemCompanyPackageService.getDocumentPackage(req, this.db) ||
                    Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req));
            case 'ein':
                return this.inMemEinService.getRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req);
            case 'signing':
                if (req.url && req.url.includes('/signing/esigngeturl/')) {
                    return this.inMemEsignService.getEsignUrl(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req);
                }
                break;
            case 'surepayroll':
                return (this.inMemSurepayrollService.getRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req));
            case 'taxes':
                if (req.url && req.url.includes('/taxapi/taxes')) {
                    return this.inMemTaxRateService.getRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req);
                }
                break;
            // Disallow attempt to get more than one of these collection items
            case 'User':
            case 'Company':
                if (!req.id) {
                    return errorOnGetCollection(req);
                }
                break;
        }
        // Let all other GET requests through
        return null;
    };
    /**
     * Special-cases for GET methods to SP APIs
     */
    InMemoryDataService.prototype.getMockSpApiOnly = function (req) {
        if (req.url.indexOf(_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].spApiRoot) > -1) {
            return (this.inMemSurepayrollService.getRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req));
        }
        // Let all other GET requests through
        return null;
    };
    // #endregion GET cases
    // #region POST cases
    /**
     * Special-cases for POST methods
     */
    InMemoryDataService.prototype.post = function (req) {
        if (_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].mockSpApiOnly) {
            return this.postMockSpApiOnly(req);
        }
        else {
            return this.postMocked(req);
        }
    };
    /**
     * Special-cases for POST methods to ECommerce & SP APIs
     */
    InMemoryDataService.prototype.postMocked = function (req) {
        switch (req.collectionName) {
            case 'account':
                return this.inMemAccountService.postRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req);
            case 'Company':
                if (req.url.endsWith('company/event')) {
                    return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createOkResponse$"])(req);
                }
                else {
                    return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["guardCompanyChange"])(req, this.db);
                }
            case 'enrollment':
                return (this.inMemEnrollmentService.postRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req));
            case 'Envelope':
                if (req.url && req.url.includes('/envelope/complete')) {
                    return this.inMemEsignService.postMarkEnvelopesCompleted(req, this.db);
                }
                break; // let the other envelope requests through
            // TODO: POST URLs beginning `/deductions/` should be `/save/deductions/company` and `/save/deductions/employee`
            // and InMemDeductionService should be folded under inMemSaveEntitiesService.
            // Then delete this case.
            case 'earnings': // fall through to InMemSaveEntitiesService which handles them.
            case 'deductions': // fall through to InMemSaveEntitiesService which handles them.
            case 'CompanyEarning': // fall through to InMemSaveEntitiesService which handles them.
            case 'company-deduction': // fall through to InMemSaveEntitiesService which handles them.
            case 'employee-deduction': // fall through to InMemSaveEntitiesService which handles them.
            case 'save':
                return (this.inMemSaveEntitiesService.postRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req));
            case 'surepayroll':
                return (this.inMemSurepayrollService.postRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req));
            case 'signing':
                if (req.url && req.url.includes('/signing/esignsend/')) {
                    return (this.inMemEsignService.postEsignSend(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req));
                }
                break;
            case 'taxes':
                if (req.url && req.url.includes('/taxapi/taxes')) {
                    return this.inMemTaxService.getRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req);
                }
                break;
            case 'Address':// NOT the Address entity collection but rather the taxapi/address
                if (req.url && req.url.includes('/taxapi/address')) {
                    return (this.inMemAddressValidatorService.getRequest(req, this.db) ||
                        Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req));
                }
                break;
        }
        if (req.url.startsWith(_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].oidcAuthRealm)) {
            return this.inMemIdentityService.postRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req);
        }
        // Let all other POST requests through
        return null;
    };
    /**
     * Special-cases for POST methods to SP Only
     */
    InMemoryDataService.prototype.postMockSpApiOnly = function (req) {
        if (req.url.indexOf(_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].spApiRoot) > -1) {
            return (this.inMemSurepayrollService.postRequest(req, this.db) || Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["createBadRequestResponse$"])(req));
        }
        // Let all other POST requests through
        return null;
    };
    // #endregion POST cases
    // #region PUT cases
    /**
     * Special-cases for PUT methods
     */
    InMemoryDataService.prototype.put = function (req) {
        if (_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].mockSpApiOnly) {
            return null; //
        }
        switch (req.collectionName) {
            case 'Company':
                return Object(_in_mem_service_utils__WEBPACK_IMPORTED_MODULE_4__["guardCompanyChange"])(req, this.db);
        }
    };
    InMemoryDataService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_22__["defineInjectable"]({ factory: function InMemoryDataService_Factory() { return new InMemoryDataService(_angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_in_mem_account_service__WEBPACK_IMPORTED_MODULE_8__["InMemAccountService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_app_mock_services_in_mem_address_validator_service__WEBPACK_IMPORTED_MODULE_9__["InMemAddressValidatorService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_in_mem_admin_service__WEBPACK_IMPORTED_MODULE_10__["InMemAdminService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_in_mem_company_package_service__WEBPACK_IMPORTED_MODULE_11__["InMemCompanyPackageService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_in_mem_deduction_service__WEBPACK_IMPORTED_MODULE_12__["InMemDeductionService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_in_mem_earning_service__WEBPACK_IMPORTED_MODULE_13__["InMemEarningService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_in_mem_ein_service__WEBPACK_IMPORTED_MODULE_14__["InMemEinService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_in_mem_esign_service__WEBPACK_IMPORTED_MODULE_15__["InMemEsignService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_in_mem_enrollment_service__WEBPACK_IMPORTED_MODULE_16__["InMemEnrollmentService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_in_mem_identity_service__WEBPACK_IMPORTED_MODULE_17__["InMemIdentityService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_in_mem_save_entities_service__WEBPACK_IMPORTED_MODULE_18__["InMemSaveEntitiesService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_app_mock_services_in_mem_tax_service__WEBPACK_IMPORTED_MODULE_20__["InMemTaxService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_app_mock_services_in_mem_tax_rate_service__WEBPACK_IMPORTED_MODULE_21__["InMemTaxRateService"]), _angular_core__WEBPACK_IMPORTED_MODULE_22__["inject"](_in_mem_surepayroll_service__WEBPACK_IMPORTED_MODULE_19__["InMemSurepayrollService"])); }, token: InMemoryDataService, providedIn: "root" });
    return InMemoryDataService;
}());

// #region Helper Fns
function errorOnGetCollection(req) {
    var errOptions = {
        url: req.url,
        status: angular_in_memory_web_api__WEBPACK_IMPORTED_MODULE_3__["STATUS"].FORBIDDEN,
        statusText: 'Forbidden',
        body: "Requests for multiple '" + req.collectionName + "' records are forbidden"
    };
    return req.utils.createResponse$(function () { return errOptions; });
}
/**
 * Get development data from json file
 */
function getDbData() {
    // TODO: enable alternative sources
    var url = '/assets/in-memory-data.json';
    return rxjs_ajax__WEBPACK_IMPORTED_MODULE_2__["ajax"].get(url).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (data) {
        // console.log('in-memory-data', data.response);
        return data.response;
    }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["catchError"])(function (error) {
        console.error('in-memory-data', error);
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])({});
    }));
}
/**
 * Map certain SurePayroll API request URLs to in-memory mock services.
 * @param url Original request URL
 */
function mapSpApiUrl(url) {
    var matched;
    if (url.startsWith(_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].spApiRoot)) {
        if (/\/company\/new$/.test(url)) {
            url = "api/surepayroll/company/new";
        }
        else if ((matched = url.match(/authentication\/username\/valid\/(.*)$/))) {
            url = 'api/surepayroll/' + matched[0];
        }
        else if (/authentication\/password\/rules\/standard$/.test(url)) {
            url = 'api/surepayroll/authentication/password/rules/standard';
        }
        // let through, "as is", all other requests that begin with the spApiRoot
    }
    return url;
}
/**
 * Tweak the URL to make the parsing work for ECommerce requests whose root paths
 * don't end in "api" because that's what *this particular* in-memory web api demands.
 * @param url Original request URL
 */
function tweakUrl(url) {
    var apiRoot = _environment__WEBPACK_IMPORTED_MODULE_6__["environment"].apiRoot;
    // HACK: If URL matches the environment ECommerce API root but that root doesn't end in 'api', insert '/api'.
    if (!apiRoot.endsWith('api') && url.startsWith(apiRoot)) {
        var ix = apiRoot.length;
        url = url.substring(0, ix) + '/api' + url.substring(ix);
    }
    return url;
}


/***/ }),

/***/ "./src/app/mock-services/master-data-deductions-loader.ts":
/*!****************************************************************!*\
  !*** ./src/app/mock-services/master-data-deductions-loader.ts ***!
  \****************************************************************/
/*! exports provided: loadMockDeductions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMockDeductions", function() { return loadMockDeductions; });
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _raw_deductions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./raw-deductions */ "./src/app/mock-services/raw-deductions.ts");
/* harmony import */ var _raw_deductions_categories__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./raw-deductions-categories */ "./src/app/mock-services/raw-deductions-categories.ts");



function loadMockDeductions() {
    var res = [];
    var raw = _raw_deductions__WEBPACK_IMPORTED_MODULE_1__["deductionModel"];
    var distinctCodeTypes = Array.from(new Set(raw.map(function (i) { return i.codeTypeId; })));
    distinctCodeTypes.map(function (dCodeId) {
        res.push(fixData(buildDeduction(dCodeId, _raw_deductions__WEBPACK_IMPORTED_MODULE_1__["deductionModel"])));
    });
    return res;
}
function fixData(d) {
    if ((50 <= d.codeTypeId && d.codeTypeId <= 59) || // Fix all Posttax deductions to be post-tax
        (30 <= d.codeTypeId && d.codeTypeId <= 34) // Fix. Medical, Vision, Dental, LifeInsurance (33), Misc (34=) post-tax
    ) {
        d.deductionPlanTaxOptionCode = _model__WEBPACK_IMPORTED_MODULE_0__["DeductionPlanType"].POSTTAX;
    }
    if (d.codeTypeId === 23) {
        d.codeType = 'Miscellaneous Pre-Tax'; // add Pre-Tax to name
    }
    if (d.codeTypeId === 34) {
        d.codeType = 'Miscellaneous Post-Tax'; // add Post-Tax to name
    }
    return d;
}
function buildDeduction(codeTypeId, raw) {
    var paramRows = raw.filter(function (d) { return d.codeTypeId === codeTypeId; });
    var f = paramRows[0];
    var htmlDefinition = _raw_deductions_categories__WEBPACK_IMPORTED_MODULE_2__["deductionGroups"].find(function (it) { return it.codeTypeId === codeTypeId; }).htmlDescription;
    // Retrieve dfault description / abbreviation
    var description = raw.find(function (it) { return it.codeTypeId === codeTypeId; }).planDescription;
    var abbreviation = raw.find(function (it) { return it.codeTypeId === codeTypeId; }).planName;
    var ded = {
        codeGroupId: f.codeGroupId,
        codeGroup: f.codeGroup,
        codeTypeId: f.codeTypeId,
        codeType: f.codeType,
        definition: (htmlDefinition || '').trim(),
        defaultAbbreviation: (abbreviation || '').trim(),
        defaultDescription: (description || '').trim(),
        canChangeAbbreviation: canChangeAbbreviation(f),
        canChangeDescription: true,
        hasPercent: f.hasPercent,
        retireAddon: f.retireAddon,
        hasGoal: f.hasGoal,
        employerOnly: f.employerOnly,
        isSure401K: f.isSure401K,
        isCatchUp: f.isCatchUp,
        planCode: f.deductionPlanCode,
        deductionPlanTaxOptionCode: toDeductionPlanType(f.deductionPlanTaxOptionCode),
        deductionPlanMatchOptionCode: toDeductionPlanMatchOptionType(f.deductionPlanMatchOptionCode),
        parameters: paramRows.map(buildDeductionParameter)
    };
    return ded;
}
function canChangeAbbreviation(f) {
    // Can change all abbreviations except:
    //   All retirement plan deductions, HSA, 401k Loan Repayment.
    if (f.codeGroupId === 1 || // retirement plans
        f.codeGroupId === 6 || // retirement plans catch-ups
        f.codeGroupId === 7 || // HSA
        f.codeTypeId === 52 // 401k Loan Repayment.
    ) {
        return false;
    }
    return true;
}
function buildDeductionParameter(p) {
    var res = {
        cpdCode: p.cpdCode,
        baseAccm: p.baseAccm,
        codeTextDescription: p.codeTypeDesc,
        taxDeduction: p.taxDed,
        name: p.name,
        description: p.description,
        howType: p.howType,
        dedRptSw: p.dedRptSw,
        inNet: p.inNet,
        checkPrnSw: p.checkPrnSw,
        isDisplayed: p.isDisplayed,
        isActive: p.isActive,
        oneTimeDeduction: p.oneTimeDeduction,
        isEmployerDisplayed: p.isEmployerDisplayed,
        deductionPlanGroupCode: p.deductionPlanGroupCode,
        deductionPlanGroup: p.deductionPlanGroup,
        parameterName: p.parameterName,
        displayName: p.displayName,
        defaultDeductionRate: p.defaultDedRate
    };
    return res;
}
function toDeductionPlanType(val) {
    switch (val) {
        case 'PRETAX': return _model__WEBPACK_IMPORTED_MODULE_0__["DeductionPlanType"].PRETAX;
        case 'POSTTAX': return _model__WEBPACK_IMPORTED_MODULE_0__["DeductionPlanType"].POSTTAX;
        case 'NOEEDEDUCT': return _model__WEBPACK_IMPORTED_MODULE_0__["DeductionPlanType"].NOEEDEDUCT;
        default: return null;
    }
}
function toDeductionPlanMatchOptionType(val) {
    switch (val) {
        case 'TWOTIER': return _model__WEBPACK_IMPORTED_MODULE_0__["DeductionPlanMatchOptionType"].TWOTIER;
        case 'NONELECTIV': return _model__WEBPACK_IMPORTED_MODULE_0__["DeductionPlanMatchOptionType"].NONELECTIV;
        case 'NOORSINGLE': return _model__WEBPACK_IMPORTED_MODULE_0__["DeductionPlanMatchOptionType"].NOORSINGLE;
        case 'SNGLORTWO': return _model__WEBPACK_IMPORTED_MODULE_0__["DeductionPlanMatchOptionType"].SNGLORTWO;
        case 'NOMATCH': return _model__WEBPACK_IMPORTED_MODULE_0__["DeductionPlanMatchOptionType"].NOMATCH;
        default: return null;
    }
}
function toBool(val) {
    return val === 'Y' ? true : val === 'N' ? false : null;
}


/***/ }),

/***/ "./src/app/mock-services/master-data-earnings-loader.ts":
/*!**************************************************************!*\
  !*** ./src/app/mock-services/master-data-earnings-loader.ts ***!
  \**************************************************************/
/*! exports provided: loadMockEarnings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMockEarnings", function() { return loadMockEarnings; });
/* harmony import */ var _raw_earnings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./raw-earnings */ "./src/app/mock-services/raw-earnings.ts");

function loadMockEarnings() {
    var res = _raw_earnings__WEBPACK_IMPORTED_MODULE_0__["earningModel"];
    return res;
}


/***/ }),

/***/ "./src/app/mock-services/mock-services.module.ts":
/*!*******************************************************!*\
  !*** ./src/app/mock-services/mock-services.module.ts ***!
  \*******************************************************/
/*! exports provided: MockServicesModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MockServicesModule", function() { return MockServicesModule; });
var MockServicesModule = /** @class */ (function () {
    function MockServicesModule() {
        console.log('MockServicesModule created');
    }
    return MockServicesModule;
}());



/***/ }),

/***/ "./src/app/mock-services/raw-deductions-categories.ts":
/*!************************************************************!*\
  !*** ./src/app/mock-services/raw-deductions-categories.ts ***!
  \************************************************************/
/*! exports provided: deductionGroups */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deductionGroups", function() { return deductionGroups; });
var deductionGroups = [
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 7,
        'codeType': 'Safe Harbor Roth 401k Match',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'This is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \r\nestablished by the employer for eligible employees.<summary/>  Employee deductions can be a fixed dollar amount \r\nor a percentage.  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \r\nsavings plan.  Employers are required to contribute when using this plan. There are two contribution \r\noptions for employers using this plan.  The contribution option selected must be applied to all eligible \r\nemployees.  <p>The first contribution option is a two-tiered rate based on an employee\'s contribution. The first tier \r\nis based on a 100% match of up to 3% of an employee\'s gross earnings.  The second tier is an additional \r\n50% match of up to 5% of an employee\'s gross earnings.  The second contribution option is a flat rate \r\nbased on an employee\'s gross earnings.  The employer\'s contribution is a flat rate of 3% of an employee\'s \r\ngross earnings.  When the second option is selected, the employer will contribute for the eligible employee \r\nregardless as to whether or not the employee contributes.</p><p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plan).',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match',
        'isConverted': true
    },
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 8,
        'codeType': 'Safe Harbor Roth 401k NE',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'This is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \r\nestablished by the employer for eligible employees.<summary/>  Employee deductions can be a fixed dollar amount \r\nor a percentage.  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \r\nsavings plan.  Employers are required to contribute when using this plan. There are two contribution \r\noptions for employers using this plan.  The contribution option selected must be applied to all eligible \r\nemployees.  <p>The first contribution option is a two-tiered rate based on an employee\'s contribution. The first tier \r\nis based on a 100% match of up to 3% of an employee\'s gross earnings.  The second tier is an additional \r\n50% match of up to 5% of an employee\'s gross earnings.  The second contribution option is a flat rate \r\nbased on an employee\'s gross earnings.  The employer\'s contribution is a flat rate of 3% of an employee\'s \r\ngross earnings.  When the second option is selected, the employer will contribute for the eligible employee \r\nregardless as to whether or not the employee contributes.</p><p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plan).',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective',
        'isConverted': true
    },
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 9,
        'codeType': 'Roth 401K Tiered',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThis is a post-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \r\n\t\t\testablished by the employer for eligible employees.<summary/>  Only the employee is allowed to contribute to this retirement \r\n\t\t\tplan.  If an employer elects to match an employee\'s contribution to their Roth 401(k) plan, the employer must \r\n\t\t\tcontribute these funds to a non Roth 401(k) account.  Employee deductions can be a fixed dollar amount or a \r\n\t\t\tpercentage.</p>\r\n\t\t\t\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 1, 3, 5, 12 (Code AA) and 13 (Retirement Plans).</p>\r\n\t\t\t\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'codeTypeDesc': 'Roth 401k Tiered',
        'isConverted': true
    },
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 10,
        'codeType': '401K',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThis is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan established \r\n\t\t\tby the employer for eligible employees.<summary/>  Employee deductions can be a fixed dollar amount or a percentage.  \r\n\t\t\tEmployers may match employee\'s contributions by entering the company match information during deductions \r\n\t\t\tset-up.  This retirement savings plan can be used in conjunction with the Roth 401(k) savings retirement plan.  If the \r\n\t\t\temployer matches employee\'s contributions using a two-tiered rate, they must use the 401(k) Tiered \r\n\t\t\toption.</p>\r\n\t\t\t\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\r\n\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'codeTypeDesc': '401k',
        'isConverted': true
    },
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 11,
        'codeType': '401K Tiered',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThis is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan established \r\n\t\t\tby the employer for eligible employees.<summary/>  Employee deductions can be a fixed dollar amount or a percentage.  \r\n\t\t\tEmployers may match employee\'s contributions on a two-tiered rate by entering the company match information \r\n\t\t\tduring deductions set-up.  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \r\n\t\t\tsavings plan.  If the employer matches employee\'s contributions using a single rate, they must use the 401(k) \r\n\t\t\toption.</p>\r\n\t\t\t\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'codeTypeDesc': '401k Tiered',
        'isConverted': true
    },
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 12,
        'codeType': '403B',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\t403(b) retirement savings plans are available to non-profit organizations only.  This is a pre-tax employee \r\n\t\t\tdeduction for contribution to a qualified 403(b) retirement savings plan established by the employer for \r\n\t\t\teligible employees.<summary/>  Employee deductions can be a fixed dollar amount or a percentage.  Employers may \r\n\t\t\tmatch employee\'s contributions by entering the company match information during deductions set-up.  \r\n\t\t\t</p>\r\n\t\t\t\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code E) and 13 (Retirement Plans).</p>\r\n\t\t\t\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'codeTypeDesc': '403b',
        'isConverted': true
    },
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 13,
        'codeType': 'Simple IRA',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThis is a pre-tax employee deduction for contribution to a qualified IRA retirement savings plan established \r\n\t\t\tby the employer for eligible employees.  Employee deductions can be a fixed dollar amount or a percentage.<summary/>  \r\n\t\t\t\r\n\t\t\t<p>Employers are required to contribute when using this plan.  The contribution rate for employers \r\n\t\t\tusing this retirement savings plan is an employee contribution match based on 100% of up to 3% of the \r\n\t\t\temployee\'s compensation.  The contribution must be applied to all eligible employees.  The match rate for \r\n\t\t\tthis retirement savings plan can be reduced to 1% in 2 of any 5 years.</p>\r\n\t\t\t\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code S) and 13 (Retirement Plans).</p>\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'codeTypeDesc': 'Simple IRA',
        'isConverted': true
    },
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 14,
        'codeType': 'Roth 401K',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThis is a post-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \r\n\t\t\testablished by the employer for eligible employees.  Only the employee is allowed to contribute to this retirement \r\n\t\t\tplan.<summary/>  If an employer elects to match an employee\'s contribution to their Roth 401(k) plan, the employer must \r\n\t\t\tcontribute these funds to a non Roth 401(k) account.  Employee deductions can be a fixed dollar amount or a \r\n\t\t\tpercentage.</p>\r\n\t\t\t\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 1, 3, 5, 12 (Code AA) and 13 (Retirement Plans).</p>\r\n\t\t\t\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'codeTypeDesc': 'Roth 401k',
        'isConverted': true
    },
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 15,
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'This is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \r\nestablished by the employer for eligible employees.  Employee deductions can be a fixed dollar amount \r\nor a percentage.<summary/>  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \r\nsavings plan.  Employers are required to contribute when using this plan. There are two contribution \r\noptions for employers using this plan.  The contribution option selected must be applied to all eligible \r\nemployees.  <p>The first contribution option is a two-tiered rate based on an employee\'s contribution. The first tier \r\nis based on a 100% match of up to 3% of an employee\'s gross earnings.  The second tier is an additional \r\n50% match of up to 5% of an employee\'s gross earnings.  The second contribution option is a flat rate \r\nbased on an employee\'s gross earnings.  The employer\'s contribution is a flat rate of 3% of an employee\'s \r\ngross earnings.  When the second option is selected, the employer will contribute for the eligible employee \r\nregardless as to whether or not the employee contributes.</p><p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plan).',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'codeTypeDesc': 'Safe Harbor 401k',
        'isConverted': true
    },
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 16,
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\t\tThis is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \r\n\t\t\testablished by the employer for eligible employees.  Employee deductions can be a fixed dollar amount \r\n\t\t\tor a percentage.<summary/>  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \r\n\t\t\tsavings plan.  Employers are required to contribute when using this plan. There are two contribution \r\n\t\t\toptions for employers using this plan.  The contribution option selected must be applied to all eligible \r\n\t\t\temployees.  \r\n\t\t\t\r\n\t\t\t<p>The first contribution option is a two-tiered rate based on an employee\'s contribution. The first tier \r\n\t\t\tis based on a 100% match of up to 3% of an employee\'s gross earnings.  The second tier is an additional \r\n\t\t\t50% match of up to 5% of an employee\'s gross earnings.  The second contribution option is a flat rate \r\n\t\t\tbased on an employee\'s gross earnings.  The employer\'s contribution is a flat rate of 3% of an employee\'s \r\n\t\t\tgross earnings.  When the second option is selected, the employer will contribute for the eligible employee \r\n\t\t\tregardless as to whether or not the employee contributes.</p>\r\n\t\t\t\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plan). \r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SINGLE',
        'codeTypeDesc': 'Simple 401k',
        'isConverted': true
    },
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 17,
        'codeType': 'SEP IRA',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThis is a pre-tax employer deduction for contribution to a qualified IRA retirement savings plan established \r\n\t\t\tby the employer for eligible employees.  Only employer\'s can contribute to this retirement savings plan.<summary/>If an employer \r\n\t\t\t\t\tcontributes to one eligible employee, the employer must contribute to all eligible employees.The percentage of \r\n\t\t\t\t\temployee\'s compensation contributed must be the same for all eligible employees.  The maximum contribution allowed by \r\n\t\t\t\t\tan employer is 25% of the employee\'s compensation, however if the contribution is for a self-employed employee the \r\n\t\t\t\t\tmaximum contribution is 20% of the employee\'s compensation before the self employment tax credits are included.  There \r\n\t\t\t\t\tis no catch-up provision for the SEP (Simplified Employee Pension) IRA since it is an employer only contribution \r\n\t\t\t\t\tretirement account.</p>  \r\n',
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'NOEEDEDUCT',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'codeTypeDesc': 'SEP IRA',
        'isConverted': true
    },
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 18,
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'This is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \r\nestablished by the employer for eligible employees.  Employee deductions can be a fixed dollar amount \r\nor a percentage.<summary/>  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \r\nsavings plan.  Employers are required to contribute when using this plan. There are two contribution \r\noptions for employers using this plan.  The contribution option selected must be applied to all eligible \r\nemployees.  <p>The first contribution option is a two-tiered rate based on an employee\'s contribution. The first tier \r\nis based on a 100% match of up to 3% of an employee\'s gross earnings.  The second tier is an additional \r\n50% match of up to 5% of an employee\'s gross earnings.  The second contribution option is a flat rate \r\nbased on an employee\'s gross earnings.  The employer\'s contribution is a flat rate of 3% of an employee\'s \r\ngross earnings.  When the second option is selected, the employer will contribute for the eligible employee \r\nregardless as to whether or not the employee contributes.</p><p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plan).',
        'employerOnly': false,
        'primaryType': '15    ',
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'codeTypeDesc': 'Safe Harbor 401k Non-Elective',
        'isConverted': true
    },
    {
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeTypeId': 19,
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\t\tThis is a pre-tax employee deduction for contribution to a qualified 401(k) retirement savings plan \r\n\t\t\testablished by the employer for eligible employees.  Employee deductions can be a fixed dollar amount \r\n\t\t\tor a percentage.<summary/>  This retirement savings plan can be used in conjunction with the Roth 401(k) retirement \r\n\t\t\tsavings plan.  Employers are required to contribute when using this plan. There are two contribution \r\n\t\t\toptions for employers using this plan.  The contribution option selected must be applied to all eligible \r\n\t\t\temployees.  \r\n\t\t\t\r\n\t\t\t<p>The first contribution option is a two-tiered rate based on an employee\'s contribution. The first tier \r\n\t\t\tis based on a 100% match of up to 3% of an employee\'s gross earnings.  The second tier is an additional \r\n\t\t\t50% match of up to 5% of an employee\'s gross earnings.  The second contribution option is a flat rate \r\n\t\t\tbased on an employee\'s gross earnings.  The employer\'s contribution is a flat rate of 3% of an employee\'s \r\n\t\t\tgross earnings.  When the second option is selected, the employer will contribute for the eligible employee \r\n\t\t\tregardless as to whether or not the employee contributes.</p>\r\n\t\t\t\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plan). \r\n',
        'employerOnly': false,
        'primaryType': '16    ',
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'codeTypeDesc': 'Simple 401k Non-Elective',
        'isConverted': true
    },
    {
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeTypeId': 20,
        'codeType': 'Medical',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'This is a Pre-Tax employee deduction toward an employer maintained Cafeteria or Section 125 medical insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \r\n<p>\r\nTaxable wages for all taxes, with the exception of some state unemployment wages (contact your state for details), are reduced by the deduction amount based on the employee income tax and unemployment states.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Medical',
        'isConverted': false
    },
    {
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeTypeId': 21,
        'codeType': 'Dental',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'This is a Pre-Tax employee deduction toward an employer maintained Cafeteria or Section 125 dental insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \r\n<p>\r\nTaxable wages for all taxes, with the exception of some state unemployment wages (contact your state for details), are reduced by the deduction amount based on the employee income tax and unemployment states.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Dental',
        'isConverted': false
    },
    {
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeTypeId': 22,
        'codeType': 'Vision',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'This is a Pre-Tax employee deduction toward an employer maintained Cafeteria or Section 125 vision insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \r\n<p>\r\nTaxable wages for all taxes, with the exception of some state unemployment wages (contact your state for details), are reduced by the deduction amount based on the employee income tax and unemployment states.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Vision',
        'isConverted': false
    },
    {
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeTypeId': 23,
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'This is a Pre-Tax employee deduction toward an employer maintained Cafeteria or Section 125 insurance plan.<summary/> \r\n<p>\r\nUp to five (5) \'Miscellaneous\' Pre-tax Insurance Premium deductions can be set-up in addition to the pre-labeled medical, dental and vision deductions.  Employee deductions can be fixed dollar or percentage amounts.  \r\n<p>\r\nTaxable wages for all taxes, with the exception of some state unemployment wages (contact your state for details), are reduced by the deduction amount based on the employee income tax and unemployment states.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Miscellaneous',
        'isConverted': false
    },
    {
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeTypeId': 24,
        'codeType': 'CAFE 2 deduction',
        'hasPercent': false,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'This is a Pre-Tax employee deduction toward an employer maintained Cafeteria or Section 125 insurance plan.<summary/> \r\n<p>\r\nUp to five (5) \'Miscellaneous\' Pre-tax Insurance Premium deductions can be set-up in addition to the pre-labeled medical, dental and vision deductions.  Employee deductions can be fixed dollar or percentage amounts.  \r\n<p>\r\nTaxable wages for all taxes, with the exception of some state unemployment wages (contact your state for details), are reduced by the deduction amount based on the employee income tax and unemployment states.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'CAFE 2 deduction',
        'isConverted': false
    },
    {
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeTypeId': 30,
        'codeType': 'Medical',
        'hasPercent': false,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward an employer maintained medical insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \r\n<p>\r\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Medical',
        'isConverted': false
    },
    {
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeTypeId': 31,
        'codeType': 'Dental',
        'hasPercent': false,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward an employer maintained dental insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \r\n<p>\r\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Dental',
        'isConverted': false
    },
    {
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeTypeId': 32,
        'codeType': 'Vision',
        'hasPercent': false,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward an employer maintained vision insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \r\n<p>\r\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Vision',
        'isConverted': false
    },
    {
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeTypeId': 33,
        'codeType': 'Life Insurance',
        'hasPercent': false,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward an employer maintained life insurance plan. Employee deductions can be fixed dollar or percentage amounts.<summary/>  \r\n<p>\r\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Life Insurance',
        'isConverted': false
    },
    {
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeTypeId': 34,
        'codeType': 'Miscellaneous',
        'hasPercent': false,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward an employer maintained insurance plan.<summary/>  \r\n<p>\r\nUp to five (5) \'Miscellaneous\' Post-tax Insurance Premium deductions can be set-up in addition to the pre-labeled medical, dental, vision and life deductions.   Employee deductions can be fixed dollar or percentage amounts.  \r\n<p>\r\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Miscellaneous',
        'isConverted': false
    },
    {
        'codeGroupId': 4,
        'codeGroup': 'Flexible Spending Accounts (FSA)',
        'codeTypeId': 40,
        'codeType': 'Dependent Care',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Employees can use this pre-tax employee deduction toward their employer-maintained/provided Dependent Care FSA (Flexible Spending Account).<summary/> Assistance payments may include preschool, summer day camp, before/after school programs, and child/adult daycare. These amounts will get reported on W2 Box 10.',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Dependent Care',
        'isConverted': false
    },
    {
        'codeGroupId': 4,
        'codeGroup': 'Flexible Spending Accounts (FSA)',
        'codeTypeId': 41,
        'codeType': 'Transportation',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Pre-tax employee deduction toward an employer maintained Transportation Flexible Spending Account.<summary/>  This is deducted from the first check of the month only.',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Transportation',
        'isConverted': true
    },
    {
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeTypeId': 43,
        'codeType': 'Post-Tax HSA Contribution 1',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '<span>This is a contribution made through an elected employee deduction toward an employee maintained Health Savings Account (HSA) plan. Only employees with a high deductible health plan (HDHP) offered through their employer as a Section 125 (or Cafeteria Plan) are eligible for this contribution.</span><summary/><br><br><span>This account can be used to pay IRS-defined medical expenses. Contributions can be made by an employee, and employer, or both. Employee contributions can be made to HSAs on either a post or pre tax basis.</span>',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'codeTypeDesc': 'HSA',
        'isConverted': true
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 50,
        'codeType': 'Child Support',
        'hasPercent': true,
        'hasGoal': true,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward a mandated child support payment program managed through the employer payroll.<summary/>  The deduction can be set-up with an employee deduction goal or total deductions limit.  \r\n<p>\r\nUp to five (5) \'Child Support\' Other Post-tax Deductions can be set-up in addition to the pre-labeled \'Other Post-Tax Deductions\'.  Employee deductions can be fixed dollar or percentage amounts.  \r\n<p>\r\nThe deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Child Support',
        'isConverted': false
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 51,
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'hasGoal': true,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward a mandated garnishment program managed through the employer payroll.<summary/>  The deduction can be set-up with an employee deduction goal or total deductions limit.  \r\n<p>\r\nUp to eight (8) \'Garnishment with Goal\' Other Post-tax Deductions can be set-up in addition to the pre-labeled \'Other Post-Tax Deductions\'.  Employee deductions can be fixed dollar or percentage amounts.  \r\n<p>\r\nThe deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Garnishment with Goal',
        'isConverted': false
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 52,
        'codeType': '401k Loan Repayment',
        'hasPercent': true,
        'hasGoal': true,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward a 401(k) loan repayment program managed through the employer payroll.<summary/> The deduction can be set-up with an employee deduction goal or total deductions limit.  Employee deductions can be fixed dollar or percentage amounts.  \r\n<p>\r\nThe deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': '401k Loan Repayment',
        'isConverted': true
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 53,
        'codeType': 'Union Dues',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward an employer maintained union dues program.<summary/>  Employee deductions can be fixed dollar or percentage amounts.<summary/>  \r\n<p>\r\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.  This is deducted from the first check of the month only.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Union Dues',
        'isConverted': false
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 54,
        'codeType': 'Repay Cash Advance',
        'hasPercent': true,
        'hasGoal': true,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward an employer maintained cash advance repayment program.<summary/>  Employee deductions can be fixed dollar or percentage amounts.  \r\n<p>\r\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Repay Cash Advance',
        'isConverted': false
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 55,
        'codeType': 'Repay Loan',
        'hasPercent': true,
        'hasGoal': true,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward an employer maintained loan repayment program.<summary/>  Employee deductions can be fixed dollar or percentage amounts.  \r\n<p>\r\nThis is a post-tax deduction.  The deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Repay Loan',
        'isConverted': false
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 56,
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'hasGoal': true,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward an employer maintained program with an employee deduction goal or total deductions limit.<summary/>  \r\n<p>\r\nUp to five (5) \'Miscellaneous with Goal\' Other Post-tax Deductions can be set-up in addition to the pre-labeled \'Other Post-Tax Deductions\'.  Employee deductions can be fixed dollar or percentage amounts.  \r\n<p>\r\nThe deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'isConverted': false
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 57,
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward an employer maintained program.<summary/>  \r\n<p>\r\nUp to five (5) \'Miscellaneous No Goal\' Other Post-tax Deductions can be set-up in addition to the pre-labeled \'Other Post-Tax Deductions\'.  Employee deductions can be fixed dollar or percentage amounts.  \r\n<p>\r\nThe deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Miscellaneous No Goal',
        'isConverted': false
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 58,
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': false,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward an employer maintained program.<summary/>  \r\n<p>\r\nUp to five (5) \'Miscellaneous No Goal\' Other Post-tax Deductions can be set-up in addition to the pre-labeled \'Other Post-Tax Deductions\'.  Employee deductions can be fixed dollar or percentage amounts.  \r\n<p>\r\nThe deduction amount will not reduce employee taxable wages.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Miscellaneous No Goal',
        'isConverted': false
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 59,
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward a mandated garnishment program managed through the employer payroll.<summary/>  The deduction is set-up with NO employee deduction goal or limit\r\n<p>\r\nUp to eight (8) \'Garnishment No Goal\' Other Post-tax Deductions can be set-up in addition to the pre-labeled \'Other Post-Tax Deductions\'.  Employee deductions can be fixed dollar or percentage amounts.  \r\n<p>\r\nThe deduction amount will not reduce employee taxable wages.  If the deduction requires a goal or limit for the employee, use the \'Garnishment with Goal\' deduction category.\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Garnishment No Goal',
        'isConverted': false
    },
    {
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeTypeId': 60,
        'codeType': '401K Catch Up',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 10,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \r\n\t\t\tmake \'401(k) Catch-Up\' contributions to a qualified 401(k) retirement savings plan established by their employer.<summary/>  \r\n\t\t\tThis is a pre-tax employee deduction in addition to the \'401(k)\' contributions.  Employee deductions can \r\n\t\t\tbe a fixed dollar amount or a percentage.</p>  \r\n\t\t\t\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\r\n\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'codeTypeDesc': '401k Catch Up',
        'isConverted': true
    },
    {
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeTypeId': 61,
        'codeType': '401K Tiered Catch Up',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 11,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \r\n\t\t\tmake \'401(k) Tiered Catch-Up\' contributions to a qualified 401(k) retirement savings plan established by their \r\n\t\t\temployer.<summary/>  This is a pre-tax employee deduction in addition to the \'401(k) Tiered\' contributions.  \r\n\t\t\tEmployee deductions can be a fixed dollar amount or a percentage.</p>\r\n\t\t\t\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'codeTypeDesc': '401k Tiered Catch Up',
        'isConverted': true
    },
    {
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeTypeId': 62,
        'codeType': '403B Catch Up',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 12,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \r\n\t\t\tmake \'403(b) Catch-Up\' contributions to a qualified 403(b) retirement savings plan established by their employer.<summary/>  \r\n\t\t\tThis is a pre-tax employee deduction in addition to the \'403(b)\' contributions.  Employee deductions can \r\n\t\t\tbe a fixed dollar amount or a percentage.</p>\r\n\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code E) and 13 (Retirement Plans).</p>\r\n\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'codeTypeDesc': '403b Catch Up',
        'isConverted': true
    },
    {
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeTypeId': 63,
        'codeType': 'Simple IRA Catch Up',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 13,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to make \r\n\t\t\t\'Simple IRA Catch-Up\' contributions to a qualified IRA retirement savings plan established by their employer.<summary/>  \r\n\t\t\tThis is a pre-tax employee deduction in addition to the \'Simple IRA\' contributions.  Employee deductions can \r\n\t\t\tbe a fixed dollar amount or a percentage.\r\n\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code S) and 13 (Retirement Plans).</p>\r\n\t\t\t\r\n\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'codeTypeDesc': 'Simple IRA Catch Up',
        'isConverted': true
    },
    {
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeTypeId': 64,
        'codeType': 'Roth 401K Catch Up',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 14,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to make \r\n\t\t\t\'Roth 401(k) Catch-Up\' contributions to a qualified 401(k) retirement savings plan established by their employer.<summary/>  \r\n\t\t\tThis is a post-tax employee deduction in addition to the \'Roth 401(k)\' contibution.  Employee deductions \r\n\t\t\tcan be a fixed dollar amount or a percentage.</p>\r\n\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 1, 3, 5, 12 (Code AA) and 13 (Retirement Plans).</p>\r\n\t\t\r\n\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'codeTypeDesc': 'Roth 401k Catch Up',
        'isConverted': true
    },
    {
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeTypeId': 65,
        'codeType': 'Safe H 401K Catch Up',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 18,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \r\n\t\t\tmake \'Safe Harbor 401(k) Catch-Up\' contributions to a qualified 401(k) retirement savings plan established \r\n\t\t\tby their employer.<summary/>  This is a pre-tax employee deduction in addition to the \'Safe Harbor 401(k)\' \r\n\t\t\tcontributions.  Employee deductions can be a fixed dollar amount or a percentage.</p>    \r\n\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\r\n\t\t\t\t\t\r\n\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'codeTypeDesc': 'Safe Harbor 401k Non-Elective Catch Up',
        'isConverted': true
    },
    {
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeTypeId': 66,
        'codeType': 'Simple 401K Catch Up',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 16,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to make \r\n\t\t\t\'Simple 401(k) Catch-Up\' contributions to a qualified 401(k) retirement savings plan established by their \r\n\t\t\temployer.<summary/>  This is a pre-tax employee deduction in addition to the \'Simple 401(k)\' contributions.  Employee deductions \r\n\t\t\tcan be a fixed dollar amount or a percentage.</p>\r\n\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\r\n\t\t\t\r\n\t\t\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SINGLE',
        'codeTypeDesc': 'Simple 401k Match Catch Up',
        'isConverted': true
    },
    {
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeTypeId': 67,
        'codeType': 'Roth 401K Tiered Catch Up',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 9,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to make \r\n\t\t\t\'Roth 401(k) Catch-Up\' contributions to a qualified 401(k) retirement savings plan established by their employer.  \r\n\t\t\tThis is a post-tax employee deduction in addition to the \'Roth 401(k)\' contibution.  Employee deductions \r\n\t\t\tcan be a fixed dollar amount or a percentage.</p>\r\n\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 1, 3, 5, 12 (Code AA) and 13 (Retirement Plans).</p>\r\n\t\t\r\n\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'codeTypeDesc': 'Roth 401k Tiered Catch Up',
        'isConverted': true
    },
    {
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeTypeId': 68,
        'codeType': 'Safe H Roth 401K NE Catchup',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 8,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \r\n\t\t\tmake \'Safe Harbor 401(k) Catch-Up\' contributions to a qualified 401(k) retirement savings plan established \r\n\t\t\tby their employer.<summary/>  This is a pre-tax employee deduction in addition to the \'Safe Harbor 401(k)\' \r\n\t\t\tcontributions.  Employee deductions can be a fixed dollar amount or a percentage.</p>    \r\n\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\r\n\t\t\t\t\t\r\n\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective Catch Up',
        'isConverted': true
    },
    {
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeTypeId': 69,
        'codeType': 'Safe H 401K Match Catch Up',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 15,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \r\n\t\t\tmake \'Safe Harbor 401(k) Catch-Up\' contributions to a qualified 401(k) retirement savings plan established \r\n\t\t\tby their employer.<summary/>  This is a pre-tax employee deduction in addition to the \'Safe Harbor 401(k)\' \r\n\t\t\tcontributions.  Employee deductions can be a fixed dollar amount or a percentage.</p>    \r\n\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\r\n\t\t\t\t\t\r\n\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',
        'isConverted': true
    },
    {
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeTypeId': 70,
        'codeType': 'Safe H Roth 401K Match Catchup',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 7,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to \r\n\t\t\tmake \'Safe Harbor 401(k) Catch-Up\' contributions to a qualified 401(k) retirement savings plan established \r\n\t\t\tby their employer.<summary/>  This is a pre-tax employee deduction in addition to the \'Safe Harbor 401(k)\' \r\n\t\t\tcontributions.  Employee deductions can be a fixed dollar amount or a percentage.</p>    \r\n\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\r\n\t\t\t\t\t\r\n\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',
        'isConverted': true
    },
    {
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeTypeId': 71,
        'codeType': 'Simple 401K Catch Up',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 19,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '\t\t\tThe EGTRRA Act of 2001 is a provision that allows employees age 50 and older to make \r\n\t\t\t\'Simple 401(k) Catch-Up\' contributions to a qualified 401(k) retirement savings plan established by their \r\n\t\t\temployer.<summary/>  This is a pre-tax employee deduction in addition to the \'Simple 401(k)\' contributions.  Employee deductions \r\n\t\t\tcan be a fixed dollar amount or a percentage.</p>\r\n\r\n\t\t\t<p>Employee deduction amounts display in W2 boxes 3, 5, 12 (Code D) and 13 (Retirement Plans).</p>\r\n\t\t\t\r\n\t\t\r\n',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'codeTypeDesc': 'Simple 401k Non-Elective Catch Up',
        'isConverted': true
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 72,
        'codeType': '401k Loan Repayment',
        'hasPercent': true,
        'hasGoal': true,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward a 401(k) loan repayment program managed through the employer payroll.<summary/>  The deduction can be set-up with an employee deduction goal or total deductions limit.<summary/>  Employee deductions can be fixed dollar or percentage amounts.<p>The deduction amount will not reduce employee taxable wages.',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': '401k Loan Repayment',
        'isConverted': true
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 73,
        'codeType': '401k Loan Repayment',
        'hasPercent': true,
        'hasGoal': true,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Deduction from employee net pay toward a 401(k) loan repayment program managed through the employer payroll.<summary/>  The deduction can be set-up with an employee deduction goal or total deductions limit.<summary/>  Employee deductions can be fixed dollar or percentage amounts.<p>The deduction amount will not reduce employee taxable wages.',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': '401k Loan Repayment',
        'isConverted': true
    },
    {
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeTypeId': 74,
        'codeType': 'Pre-Tax HSA Contribution 1',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '<span>This is a contribution made through an elected employee deduction toward an employee maintained Health Savings Account (HSA) plan. Only employees with a high deductible health plan (HDHP) offered through their employer as a Section 125 (or Cafeteria Plan) are eligible for this contribution.</span><summary/><br><br><span>This account can be used to pay IRS-defined medical expenses. Contributions can be made by an employee, and employer, or both. Employee contributions can be made to HSAs on either a post or pre tax basis.</span>',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'codeTypeDesc': 'HSA',
        'isConverted': true
    },
    {
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeTypeId': 75,
        'codeType': 'Post-Tax HSA Contribution 2',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '<span>This is a contribution made through an elected employee deduction toward an employee maintained Health Savings Account (HSA) plan. Only employees with a high deductible health plan (HDHP) offered through their employer as a Section 125 (or Cafeteria Plan) are eligible for this contribution.</span><summary/><br><br><span>This account can be used to pay IRS-defined medical expenses. Contributions can be made by an employee, and employer, or both. Employee contributions can be made to HSAs on either a post or pre tax basis.</span>',
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'codeTypeDesc': 'HSA',
        'isConverted': true
    },
    {
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeTypeId': 76,
        'codeType': 'Pre-Tax HSA Contribution 2',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': '<span>This is a contribution made through an elected employee deduction toward an employee maintained Health Savings Account (HSA) plan. Only employees with a high deductible health plan (HDHP) offered through their employer as a Section 125 (or Cafeteria Plan) are eligible for this contribution.</span><summary/><br><br><span>This account can be used to pay IRS-defined medical expenses. Contributions can be made by an employee, and employer, or both. Employee contributions can be made to HSAs on either a post or pre tax basis.</span>',
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'codeTypeDesc': 'HSA',
        'isConverted': true
    },
    {
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeTypeId': 89,
        'codeType': 'Meals',
        'hasPercent': false,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Meals - Employers allow employees to purchase meals at a fair or reasonable cost.<summary/> The meal may be consumed on or off the premises. The meal is taxable and does not count towards the employee\'s minimum wage.',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Meals',
        'isConverted': false
    },
    {
        'codeGroupId': 4,
        'codeGroup': 'Flexible Spending Accounts (FSA)',
        'codeTypeId': 90,
        'codeType': 'Parking',
        'hasPercent': true,
        'hasGoal': false,
        'retireAddon': 0,
        // tslint:disable-next-line:max-line-length
        'htmlDescription': 'Pre-tax employee deduction toward an employer maintained Parking Flexible Spending Account.<summary/>  This is deducted from the first check of the month only.',
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'codeTypeDesc': 'Parking',
        'isConverted': true
    }
];


/***/ }),

/***/ "./src/app/mock-services/raw-deductions.ts":
/*!*************************************************!*\
  !*** ./src/app/mock-services/raw-deductions.ts ***!
  \*************************************************/
/*! exports provided: deductionModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deductionModel", function() { return deductionModel; });
var deductionModel = [
    {
        'codeTypeId': 7,
        'cpdCode': '4B',
        'baseAccm': '401K$ ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k Match',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match',
        'taxDed': 'D',
        'name': 'ELIGBL4',
        'description': 'ELIGIBLE WAGES SH 4',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 7,
        'cpdCode': '4D',
        'baseAccm': 'PTXRTH',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k Match',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match',
        'taxDed': 'D',
        'name': 'SH401R$',
        'description': 'Safe Harbor Roth 401K $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 7,
        'cpdCode': '4E',
        'baseAccm': 'PTXRTH',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k Match',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match',
        'taxDed': 'D',
        'name': 'SH401R%',
        'description': 'Safe Harbor Roth 401K %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 7,
        'cpdCode': '4F',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k Match',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match',
        'taxDed': 'D',
        'name': 'TOT 4K7',
        'description': 'TOTAL 401K DEDUCTION 7',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERTotalDed',
        'displayName': 'TOTAL 401K DEDUCTION',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 7,
        'cpdCode': '4G',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k Match',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match',
        'taxDed': 'D',
        'name': 'TIERBL7',
        'description': 'COMPANY BOT TIER LIMIT 7',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERBotMatchLimit',
        'displayName': 'Employer Bottom Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 7,
        'cpdCode': '4H',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k Match',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match',
        'taxDed': 'D',
        'name': 'TIERTL7',
        'description': 'COMPANY TOP TIER LIMIT 7',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERTopMatchLimit',
        'displayName': 'Employer Top Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 7,
        'cpdCode': '4I',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k Match',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match',
        'taxDed': 'D',
        'name': 'TIERCM7',
        'description': 'COMPANY COMPARE 7 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERcalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 7,
        'cpdCode': '4J',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k Match',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match',
        'taxDed': 'D',
        'name': 'TIERBM7',
        'description': 'COMPANY MATCH MAX BOT 7',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERBotMatchRate',
        'displayName': 'Employer Bottom Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 7,
        'cpdCode': '4K',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k Match',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match',
        'taxDed': 'D',
        'name': 'TIERTM7',
        'description': 'COMPANY MATCH MAX TOP 7',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERTopMatchRate',
        'displayName': 'Employer Top Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 7,
        'cpdCode': '4S',
        'baseAccm': 'CORTHK',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k Match',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match',
        'taxDed': 'D',
        'name': 'COSHRTH',
        'description': 'Company Match SH RTH 401K',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 8,
        'cpdCode': 'KT',
        'baseAccm': '401K$$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k NE',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective',
        'taxDed': 'D',
        'name': 'ELIGBLA',
        'description': 'ELIGIBLE WAGES SFE FALT A',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 8,
        'cpdCode': 'KU',
        'baseAccm': 'PTXRTH',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k NE',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective',
        'taxDed': 'D',
        'name': 'SHRNE$ ',
        'description': 'SH RTH 401K Non Elective$',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 8,
        'cpdCode': 'KV',
        'baseAccm': 'PTXRTH',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k NE',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective',
        'taxDed': 'D',
        'name': 'SHRNE% ',
        'description': 'SH RTH 401K Non Elective%',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 8,
        'cpdCode': 'KW',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k NE',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective',
        'taxDed': 'D',
        'name': 'SAFEER1',
        'description': 'Safe Harbor Employer Flt1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERMatchLimit',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 8,
        'cpdCode': 'KZ',
        'baseAccm': 'CORTHK',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor Roth 401k NE',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective',
        'taxDed': 'D',
        'name': 'COSHRNE',
        'description': 'Co Contrib SH RTH 401K NE',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERMatchRate',
        'displayName': 'Employer Flat Rate Wage',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 9,
        'cpdCode': '3B',
        'baseAccm': '401K$$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered',
        'taxDed': 'D',
        'name': 'ELIGBL2',
        'description': 'ELIGIBLE WAGES TIER 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 9,
        'cpdCode': '3C',
        'baseAccm': 'PTXRTH',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered',
        'taxDed': 'D',
        'name': '401KR1$',
        'description': 'Roth 401K 1 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 9,
        'cpdCode': '3F',
        'baseAccm': 'PTXRTH',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered',
        'taxDed': 'D',
        'name': '401KR1%',
        'description': 'Roth 401K 1 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 9,
        'cpdCode': '3K',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered',
        'taxDed': 'D',
        'name': 'TOT 4K5',
        'description': 'TOTAL 401K DEDUCTION 5',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERTotalDed',
        'displayName': 'TOTAL 401K DEDUCTION',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 9,
        'cpdCode': '3M',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered',
        'taxDed': 'D',
        'name': 'TIERBL5',
        'description': 'COMPANY BOT TIER LIMIT 5',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERBotMatchLimit',
        'displayName': 'Employer Bottom Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 9,
        'cpdCode': '3T',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered',
        'taxDed': 'D',
        'name': 'TIERTL5',
        'description': 'COMPANY TOP TIER LIMIT 5',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERTopMatchLimit',
        'displayName': 'Employer Top Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 9,
        'cpdCode': '3U',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered',
        'taxDed': 'D',
        'name': 'TIERCM5',
        'description': 'COMPANY COMPARE 5 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERcalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 9,
        'cpdCode': '3V',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered',
        'taxDed': 'D',
        'name': 'TIERBM5',
        'description': 'COMPANY MATCH MAX BOT 5',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERBotMatchRate',
        'displayName': 'Employer Bottom Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 9,
        'cpdCode': '3W',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered',
        'taxDed': 'D',
        'name': 'TIERTM5',
        'description': 'COMPANY MATCH MAX TOP 5',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERTopMatchRate',
        'displayName': 'Employer Top Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 9,
        'cpdCode': '3X',
        'baseAccm': 'CORTHK',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered',
        'taxDed': 'D',
        'name': 'CO4KRT1',
        'description': 'Company Match RTH 401K 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 10,
        'cpdCode': '31',
        'baseAccm': '401K  ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': '401K 1$',
        'description': '401K 1 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 10,
        'cpdCode': '33',
        'baseAccm': '401K  ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': '401K 1%',
        'description': '401K 1 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 10,
        'cpdCode': '34',
        'baseAccm': 'CO401K',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'CO401K1',
        'description': 'Company Match 401K 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 10,
        'cpdCode': '35',
        'baseAccm': '401K$$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'ELIGBL1',
        'description': 'ELIGIBLE WAGES 1   ',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 10,
        'cpdCode': '37',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'COCALC1',
        'description': 'CALCULATE COMPANY MATCH 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERCalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 10,
        'cpdCode': '38',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'TIER2 L',
        'description': 'COMPANY TOP TIER LIMIT',
        'howType': '$',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 10,
        'cpdCode': '39',
        'baseAccm': 'SARSEP',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'SARSEPP',
        'description': 'DISCONTINUED JAN 1, 1997',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 10,
        'cpdCode': '3A',
        'baseAccm': 'SIMP$$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'SIMPL$$',
        'description': 'SIMPLE PLAN ELIG. WAGES  ',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 10,
        'cpdCode': '3D',
        'baseAccm': 'COSIMP',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'CO SIMP',
        'description': 'SIMPLE PLAN COMPANY MATCH',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 10,
        'cpdCode': '3I',
        'baseAccm': 'SMPIRA',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'SIMP<3%',
        'description': 'SIMPLE PLAN UP TO 3%     ',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 10,
        'cpdCode': '3J',
        'baseAccm': 'SMPIRA',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'SIMP>3%',
        'description': 'SIMPLE PLAN ABOVE 3%     ',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 10,
        'cpdCode': '4A',
        'baseAccm': 'COSRSP',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'COSRSEP',
        'description': 'COMPANY MATCH SARSEPP',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 10,
        'cpdCode': '51',
        'baseAccm': '457   ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'SEC457 ',
        'description': 'SECTION 457 DEDUCTIONS',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 10,
        'cpdCode': '91',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'MATCH%2',
        'description': 'COMPANY MATCH MAX  % 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERmatchLimit',
        'displayName': 'Employer Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 10,
        'cpdCode': '93',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'COMPAR3',
        'description': 'COMPANY MATCH COMPARE 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERmatchRate',
        'displayName': 'Employer Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 10,
        'cpdCode': '96',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'TIER2 %',
        'description': 'COMPANY TOP TIER MATCH %',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 10,
        'cpdCode': '97',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'COMPAR4',
        'description': 'COMPANY MATCH COMPARE 4',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 10,
        'cpdCode': 'EQ',
        'baseAccm': 'SMPCU$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'SIMCU$$',
        'description': 'SIMPLE CATCH UP WAGES',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 11,
        'cpdCode': '36',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered',
        'taxDed': 'D',
        'name': 'TIERTL1',
        'description': 'COMPANY TOP TIER LIMIT 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERTopMatchLimit',
        'displayName': 'Employer Top Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 11,
        'cpdCode': '3G',
        'baseAccm': '401K  ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered',
        'taxDed': 'D',
        'name': '401K 2$',
        'description': '401K 2 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 11,
        'cpdCode': '3H',
        'baseAccm': '401K  ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered',
        'taxDed': 'D',
        'name': '401K 2%',
        'description': '401K 2 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 11,
        'cpdCode': '3L',
        'baseAccm': 'CO401K',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered',
        'taxDed': 'D',
        'name': 'CO401K2',
        'description': 'Company Match 401K 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 11,
        'cpdCode': '3S',
        'baseAccm': '401K$$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered',
        'taxDed': 'D',
        'name': 'ELIGBL3',
        'description': 'ELIGIBLE WAGES TIER 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 11,
        'cpdCode': '3Y',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered',
        'taxDed': 'D',
        'name': 'TOT 4K1',
        'description': 'TOTAL 401K DEDUCTION 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERTotalDed',
        'displayName': 'TOTAL 401K DEDUCTION',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 11,
        'cpdCode': '94',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered',
        'taxDed': 'D',
        'name': 'TIERCM1',
        'description': 'COMPANY COMPARE 1 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERcalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 11,
        'cpdCode': '9A',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered',
        'taxDed': 'D',
        'name': 'TIERBM1',
        'description': 'COMPANY MATCH MAX BOT 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERBotMatchRate',
        'displayName': 'Employer Bottom Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 11,
        'cpdCode': '9B',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered',
        'taxDed': 'D',
        'name': 'TIERBL1',
        'description': 'COMPANY BOT TIER LIMIT 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERBotMatchLimit',
        'displayName': 'Employer Bottom Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 11,
        'cpdCode': '9C',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K Tiered',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered',
        'taxDed': 'D',
        'name': 'TIERTM1',
        'description': 'COMPANY MATCH MAX TOP 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERTopMatchRate',
        'displayName': 'Employer Top Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 12,
        'cpdCode': '31',
        'baseAccm': '403B  ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '403B',
        'planName': '403B',
        'planDescription': '403B',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': '401K 1$',
        'description': '401K 1 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 12,
        'cpdCode': '33',
        'baseAccm': '403B  ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '403B',
        'planName': '403B',
        'planDescription': '403B',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': '401K 1%',
        'description': '401K 1 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 12,
        'cpdCode': '34',
        'baseAccm': 'CO403B',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '403B',
        'planName': '403B',
        'planDescription': '403B',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'CO401K1',
        'description': 'Company Match 401K 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 12,
        'cpdCode': '35',
        'baseAccm': '403B$$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '403B',
        'planName': '403B',
        'planDescription': '403B',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'ELIGBL1',
        'description': 'ELIGIBLE WAGES 1   ',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 12,
        'cpdCode': '37',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '403B',
        'planName': '403B',
        'planDescription': '403B',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'COCALC1',
        'description': 'CALCULATE COMPANY MATCH 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERCalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 12,
        'cpdCode': '91',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '403B',
        'planName': '403B',
        'planDescription': '403B',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'MATCH%2',
        'description': 'COMPANY MATCH MAX  % 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERmatchLimit',
        'displayName': 'Employer Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 12,
        'cpdCode': '93',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '403B',
        'planName': '403B',
        'planDescription': '403B',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'COMPAR3',
        'description': 'COMPANY MATCH COMPARE 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERmatchRate',
        'displayName': 'Employer Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 13,
        'cpdCode': '31',
        'baseAccm': 'SMPIRA',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'SMPLIRA',
        'planName': 'SMPLIRA',
        'planDescription': 'Simple IRA',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': '401K 1$',
        'description': '401K 1 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 13,
        'cpdCode': '33',
        'baseAccm': 'SMPIRA',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'SMPLIRA',
        'planName': 'SMPLIRA',
        'planDescription': 'Simple IRA',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': '401K 1%',
        'description': '401K 1 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 13,
        'cpdCode': '34',
        'baseAccm': 'COSIMP',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'SMPLIRA',
        'planName': 'SMPLIRA',
        'planDescription': 'Simple IRA',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'CO401K1',
        'description': 'Company Match 401K 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 13,
        'cpdCode': '35',
        'baseAccm': 'SIMP$$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'SMPLIRA',
        'planName': 'SMPLIRA',
        'planDescription': 'Simple IRA',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'ELIGBL1',
        'description': 'ELIGIBLE WAGES 1   ',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 13,
        'cpdCode': '37',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'SMPLIRA',
        'planName': 'SMPLIRA',
        'planDescription': 'Simple IRA',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'COCALC1',
        'description': 'CALCULATE COMPANY MATCH 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERCalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 13,
        'cpdCode': '91',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'SMPLIRA',
        'planName': 'SMPLIRA',
        'planDescription': 'Simple IRA',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'MATCH%2',
        'description': 'COMPANY MATCH MAX  % 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERmatchLimit',
        'displayName': 'Employer Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 13,
        'cpdCode': '93',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': '401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'SMPLIRA',
        'planName': 'SMPLIRA',
        'planDescription': 'Simple IRA',
        'codeTypeDesc': '401k',
        'taxDed': 'D',
        'name': 'COMPAR3',
        'description': 'COMPANY MATCH COMPARE 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERmatchRate',
        'displayName': 'Employer Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 14,
        'cpdCode': '3E',
        'baseAccm': '401K$$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k',
        'taxDed': 'D',
        'name': 'RTHWAGE',
        'description': 'ELIGIBLE ROTH 401K WAGES',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 14,
        'cpdCode': '4T',
        'baseAccm': 'CORTHK',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k',
        'taxDed': 'D',
        'name': 'CO4KRT2',
        'description': 'Company Match RTH 401K 2',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 14,
        'cpdCode': '4U',
        'baseAccm': 'PTXRTH',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k',
        'taxDed': 'D',
        'name': '401KR2$',
        'description': 'Roth 401K 2 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 14,
        'cpdCode': '4V',
        'baseAccm': 'PTXRTH',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k',
        'taxDed': 'D',
        'name': '401KR2%',
        'description': 'Roth 401K 2 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 14,
        'cpdCode': '95',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k',
        'taxDed': 'D',
        'name': 'RTHMTH2',
        'description': '% CO MATCH ROTH 401K 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERmatchLimit',
        'displayName': 'Employer Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 14,
        'cpdCode': '9D',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k',
        'taxDed': 'D',
        'name': 'COCALC4',
        'description': 'CALCULATE COMPANY MATCH 4',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERCalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 14,
        'cpdCode': '9E',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Roth 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k',
        'taxDed': 'D',
        'name': 'COMPAR5',
        'description': 'COMPANY MATCH COMPARE 5',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERmatchRate',
        'displayName': 'Employer Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 15,
        'cpdCode': 'KA',
        'baseAccm': '401K$$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k',
        'taxDed': 'D',
        'name': 'ELIGBL8',
        'description': 'ELIGIBLE WAGES SH 8',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 15,
        'cpdCode': 'KB',
        'baseAccm': '401K  ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k',
        'taxDed': 'D',
        'name': 'SH401K$',
        'description': 'SAFE HARBOR 401K $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 15,
        'cpdCode': 'KC',
        'baseAccm': '401K  ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k',
        'taxDed': 'D',
        'name': 'SH401K%',
        'description': 'SAFE HARBOR 401K %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 15,
        'cpdCode': 'KD',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k',
        'taxDed': 'D',
        'name': 'TOT 4K3',
        'description': 'TOTAL 401K DEDUCTION 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERTotalDed',
        'displayName': 'TOTAL 401K DEDUCTION',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 15,
        'cpdCode': 'KE',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k',
        'taxDed': 'D',
        'name': 'TIERBL3',
        'description': 'COMPANY BOT TIER LIMIT 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERBotMatchLimit',
        'displayName': 'Employer Bottom Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 15,
        'cpdCode': 'KF',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k',
        'taxDed': 'D',
        'name': 'TIERTL3',
        'description': 'COMPANY TOP TIER LIMIT 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERTopMatchLimit',
        'displayName': 'Employer Top Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 15,
        'cpdCode': 'KG',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k',
        'taxDed': 'D',
        'name': 'TIERCM3',
        'description': 'COMPANY COMPARE 3 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERcalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 15,
        'cpdCode': 'KH',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k',
        'taxDed': 'D',
        'name': 'TIERBM3',
        'description': 'COMPANY MATCH MAX BOT 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERBotMatchRate',
        'displayName': 'Employer Bottom Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 15,
        'cpdCode': 'KI',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k',
        'taxDed': 'D',
        'name': 'TIERTM3',
        'description': 'COMPANY MATCH MAX TOP 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERTopMatchRate',
        'displayName': 'Employer Top Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 15,
        'cpdCode': 'KJ',
        'baseAccm': 'CO401K',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k',
        'taxDed': 'D',
        'name': 'COSH401',
        'description': 'COMPANY MATCH SAFE401K',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 16,
        'cpdCode': 'KL',
        'baseAccm': 'SIMP$$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SINGLE',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k',
        'taxDed': 'D',
        'name': 'ELIGBL9',
        'description': 'ELIGIBLE WAGES 9',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 16,
        'cpdCode': 'KM',
        'baseAccm': 'SIMPLE',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SINGLE',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k',
        'taxDed': 'D',
        'name': 'S401K $',
        'description': 'Simple 401K $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 16,
        'cpdCode': 'KN',
        'baseAccm': 'SIMPLE',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SINGLE',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k',
        'taxDed': 'D',
        'name': 'S401K %',
        'description': 'Simple 401K %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 16,
        'cpdCode': 'KO',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SINGLE',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k',
        'taxDed': 'D',
        'name': 'MATCH%3',
        'description': 'COMPANY MATCH MAX  % 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERMatchLimit',
        'displayName': 'Employer Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 16,
        'cpdCode': 'KP',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SINGLE',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k',
        'taxDed': 'D',
        'name': 'COMPAR6',
        'description': 'COMPANY MATCH COMPARE 6',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERMatchRate',
        'displayName': 'Employer Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 16,
        'cpdCode': 'KQ',
        'baseAccm': 'COSIMK',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SINGLE',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k',
        'taxDed': 'D',
        'name': 'COBENEF',
        'description': 'COMPANY Simp401K BENEFIT',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 16,
        'cpdCode': 'LP',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SINGLE',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k',
        'taxDed': 'D',
        'name': 'CO CALC',
        'description': 'CALCULATE COMPANY MATCH',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERCalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 17,
        'cpdCode': 'KR',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'SEP IRA',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'NOEEDEDUCT',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SEPIRA',
        'planName': 'SEP IRA',
        'planDescription': 'SEP IRA',
        'codeTypeDesc': 'SEP IRA',
        'taxDed': 'D',
        'name': 'SEPIRCU',
        'description': 'SEP IRA 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERMatchLimit',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 17,
        'cpdCode': 'KS',
        'baseAccm': 'SEPIRA',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'SEP IRA',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'NOEEDEDUCT',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SEPIRA',
        'planName': 'SEP IRA',
        'planDescription': 'SEP IRA',
        'codeTypeDesc': 'SEP IRA',
        'taxDed': 'D',
        'name': 'SEP IRA',
        'description': 'SEP IRA 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERMatchRate',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 18,
        'cpdCode': 'N1',
        'baseAccm': '401K$$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': '15    ',
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Non-Elective',
        'taxDed': 'D',
        'name': 'ELIGBLB',
        'description': 'ELIGIBLE WAGES SFE FLAT B',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 18,
        'cpdCode': 'N2',
        'baseAccm': '401K  ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': '15    ',
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Non-Elective',
        'taxDed': 'D',
        'name': 'SH401E$',
        'description': 'SAFE HARBOR EMPLOYEE $ ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 18,
        'cpdCode': 'N3',
        'baseAccm': '401K  ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': '15    ',
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Non-Elective',
        'taxDed': 'D',
        'name': 'SH401E%',
        'description': 'SAFE HARBOR EMPLOYEE %   ',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 18,
        'cpdCode': 'N4',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': '15    ',
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Non-Elective',
        'taxDed': 'D',
        'name': 'SAFEER2',
        'description': 'Safe Harbor Employer Flt2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERMatchLimit',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 18,
        'cpdCode': 'N5',
        'baseAccm': 'CO401K',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Safe Harbor 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': '15    ',
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Non-Elective',
        'taxDed': 'D',
        'name': 'COSHNE ',
        'description': 'Safe Harb Flat Rate Bnft',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERMatchRate',
        'displayName': 'Employer Flat Rate Wage',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 19,
        'cpdCode': 'N6',
        'baseAccm': 'SIMP$$',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': '16    ',
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k Non-Elective',
        'taxDed': 'D',
        'name': 'ELIGBLC',
        'description': 'ELIGI WAGES SIMP401 FLAT ',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 19,
        'cpdCode': 'N7',
        'baseAccm': 'SIMPLE',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': '16    ',
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k Non-Elective',
        'taxDed': 'D',
        'name': 'S4OPT2$',
        'description': 'SIMPLE 401k EMPLOYEE $  ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 19,
        'cpdCode': 'N8',
        'baseAccm': 'SIMPLE',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': '16    ',
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k Non-Elective',
        'taxDed': 'D',
        'name': 'S4OPT2%',
        'description': 'SIMPLE 401K EMPLOYEE %   ',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 19,
        'cpdCode': 'N9',
        'baseAccm': '      ',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': '16    ',
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k Non-Elective',
        'taxDed': 'D',
        'name': 'S4 ER  ',
        'description': 'Simple 401K Employer Flat',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERMatchLimit',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 19,
        'cpdCode': 'NA',
        'baseAccm': 'COSIMK',
        'codeGroupId': 1,
        'codeGroup': 'Retirement Plans',
        'codeType': 'Simple 401K',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': '16    ',
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k Non-Elective',
        'taxDed': 'D',
        'name': 'CO SMP4',
        'description': 'Simple Flat Rate Bnft',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'RETIREMENT',
        'deductionPlanGroup': 'Retirement Plans',
        'parameterName': 'dERMatchRate',
        'displayName': 'Employer Flat Rate Wage',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 20,
        'cpdCode': '40',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Medical',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MEDICAL',
        'planName': 'Medical',
        'planDescription': 'Medical',
        'codeTypeDesc': 'Medical',
        'taxDed': 'D',
        'name': 'CAFE 1 ',
        'description': 'CAFETERIA PLAN DEDUCT 1',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 20,
        'cpdCode': '4R',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Medical',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MEDICAL',
        'planName': 'Medical',
        'planDescription': 'Medical',
        'codeTypeDesc': 'Medical',
        'taxDed': 'D',
        'name': 'CAFE 1A',
        'description': 'CAFETERIA PLAN DEDUCT 1A',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 21,
        'cpdCode': '42',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Dental',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'DENTAL',
        'planName': 'Dental',
        'planDescription': 'Dental',
        'codeTypeDesc': 'Dental',
        'taxDed': 'D',
        'name': 'DENTAL%',
        'description': 'PRE-TAX DENTAL PLAN % ',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 21,
        'cpdCode': '48',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Dental',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'DENTAL',
        'planName': 'Dental',
        'planDescription': 'Dental',
        'codeTypeDesc': 'Dental',
        'taxDed': 'D',
        'name': 'DENTAL$',
        'description': 'PRE-TAX DENTAL PLAN $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 22,
        'cpdCode': '43',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Vision',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'VISION',
        'planName': 'Vision',
        'planDescription': 'Vision',
        'codeTypeDesc': 'Vision',
        'taxDed': 'D',
        'name': 'VISION$',
        'description': 'PRE-TAX VISION $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 22,
        'cpdCode': '44',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Vision',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'VISION',
        'planName': 'Vision',
        'planDescription': 'Vision',
        'codeTypeDesc': 'Vision',
        'taxDed': 'D',
        'name': 'VISION%',
        'description': 'PRE-TAX VISION %',
        'howType': '%',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': '3N',
        'baseAccm': 'COMSA ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'MSA  ER',
        'description': 'MEDICAL SAVINGS ACCT. ER',
        'howType': '$',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': '45',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'PRETX1$',
        'description': 'PRE-TAX MISC 1 $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': '47',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'PRETX1%',
        'description': 'PRE-TAX MISC 1 % ',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': '57',
        'baseAccm': 'HOUSNG',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'HOUSING',
        'description': 'CLERGY HOUSING ALLOWANCE',
        'howType': '$',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': '59',
        'baseAccm': 'MEALNT',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'MEALSNT',
        'description': 'MEALS DEDUCT NON-TAXABLE',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': 'GH',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'PRETX2$',
        'description': 'PRE-TAX MISC 2 $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': 'GI',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'PRETX2%',
        'description': 'PRE-TAX MISC 2 %',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': 'GJ',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'PRETX3$',
        'description': 'PRE-TAX MISC 3 $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': 'GK',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'PRETX3%',
        'description': 'PRE-TAX MISC 3 %',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': 'GL',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'PRETX4$',
        'description': 'PRE-TAX MISC 4 $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': 'GM',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'PRETX4%',
        'description': 'PRE-TAX MISC 4 %',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': 'GN',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'PRETX5$',
        'description': 'PRE-TAX MISC 5 $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 23,
        'cpdCode': 'GO',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'PRETX5%',
        'description': 'PRE-TAX MISC 5 %',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 24,
        'cpdCode': '41',
        'baseAccm': 'CAFE2 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'CAFE 2 deduction',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'CAFE',
        'planName': 'Cafe',
        'planDescription': 'CAFE 2 deduction',
        'codeTypeDesc': 'CAFE 2 deduction',
        'taxDed': 'D',
        'name': 'CAFE 2 ',
        'description': 'CAFETERIA PLAN',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 24,
        'cpdCode': '46',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 2,
        'codeGroup': 'Pre-Tax Insurance Premiums',
        'codeType': 'CAFE 2 deduction',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'CAFE',
        'planName': 'Cafe',
        'planDescription': 'CAFE 2 deduction',
        'codeTypeDesc': 'CAFE 2 deduction',
        'taxDed': 'D',
        'name': 'MED 125',
        'description': 'MED 125 MEDICAL PLAN     ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'PRETAXINS',
        'deductionPlanGroup': 'Pre-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 30,
        'cpdCode': '15',
        'baseAccm': 'HEALTH',
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeType': 'Medical',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MEDICAL',
        'planName': 'Medical',
        'planDescription': 'Medical',
        'codeTypeDesc': 'Medical',
        'taxDed': 'D',
        'name': 'MEDCAL1',
        'description': 'MEDICAL INSURANCE 1',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'POSTTAXINS',
        'deductionPlanGroup': 'Post-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 30,
        'cpdCode': '16',
        'baseAccm': 'HEALTH',
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeType': 'Medical',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MEDICAL',
        'planName': 'Medical',
        'planDescription': 'Medical',
        'codeTypeDesc': 'Medical',
        'taxDed': 'D',
        'name': 'MEDCAL2',
        'description': 'MEDICAL INSURANCE 2',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'POSTTAXINS',
        'deductionPlanGroup': 'Post-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 31,
        'cpdCode': '19',
        'baseAccm': 'HEALTH',
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeType': 'Dental',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'DENTAL',
        'planName': 'Dental',
        'planDescription': 'Dental',
        'codeTypeDesc': 'Dental',
        'taxDed': 'D',
        'name': 'DENTAL ',
        'description': 'DENTAL INSURANCE  ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'POSTTAXINS',
        'deductionPlanGroup': 'Post-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 32,
        'cpdCode': 'B0',
        'baseAccm': '      ',
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeType': 'Vision',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'VISION',
        'planName': 'Vision',
        'planDescription': 'Vision',
        'codeTypeDesc': 'Vision',
        'taxDed': 'D',
        'name': 'VISION ',
        'description': 'VISION DEDUCTION',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'POSTTAXINS',
        'deductionPlanGroup': 'Post-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 33,
        'cpdCode': '17',
        'baseAccm': 'LIFEIN',
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeType': 'Life Insurance',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'LIFEINS',
        'planName': 'LifeIns',
        'planDescription': 'Life Insurance',
        'codeTypeDesc': 'Life Insurance',
        'taxDed': 'D',
        'name': 'LIFEINS',
        'description': 'LIFE INSURANCE ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'POSTTAXINS',
        'deductionPlanGroup': 'Post-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 34,
        'cpdCode': 'H0',
        'baseAccm': '      ',
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'INSURN1',
        'description': 'MISC INSURANCE 1',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'POSTTAXINS',
        'deductionPlanGroup': 'Post-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 34,
        'cpdCode': 'H1',
        'baseAccm': '      ',
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'INSURN2',
        'description': 'MISC INSURANCE 2  ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'POSTTAXINS',
        'deductionPlanGroup': 'Post-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 34,
        'cpdCode': 'H2',
        'baseAccm': '      ',
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'INSURN3',
        'description': 'MISC INSURANCE 3    ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'POSTTAXINS',
        'deductionPlanGroup': 'Post-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 34,
        'cpdCode': 'H3',
        'baseAccm': '      ',
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'INSURN4',
        'description': 'MISC INSURANCE 4   ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'POSTTAXINS',
        'deductionPlanGroup': 'Post-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 34,
        'cpdCode': 'H4',
        'baseAccm': '      ',
        'codeGroupId': 3,
        'codeGroup': 'Post-Tax Insurance Premiums',
        'codeType': 'Miscellaneous',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISC',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous',
        'codeTypeDesc': 'Miscellaneous',
        'taxDed': 'D',
        'name': 'INSURN5',
        'description': 'MISC INSURANCE 5    ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'POSTTAXINS',
        'deductionPlanGroup': 'Post-Tax Insurance Premiums',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 40,
        'cpdCode': '4L',
        'baseAccm': 'CAFE7 ',
        'codeGroupId': 4,
        'codeGroup': 'Flexible Spending Accounts (FSA)',
        'codeType': 'Dependent Care',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'DEPENDENT',
        'planName': 'FlexDP',
        'planDescription': 'Dependent Care',
        'codeTypeDesc': 'Dependent Care',
        'taxDed': 'D',
        'name': 'FLXDP$ ',
        'description': 'FLEX DEPENDANT CARE $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'FSA',
        'deductionPlanGroup': 'Flexible Spending Accounts (FSA)',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 40,
        'cpdCode': '4M',
        'baseAccm': 'CAFE7 ',
        'codeGroupId': 4,
        'codeGroup': 'Flexible Spending Accounts (FSA)',
        'codeType': 'Dependent Care',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'DEPENDENT',
        'planName': 'FlexDP',
        'planDescription': 'Dependent Care',
        'codeTypeDesc': 'Dependent Care',
        'taxDed': 'D',
        'name': 'FLXDP% ',
        'description': 'FLEX DEPENDANT CARE %',
        'howType': '%',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'FSA',
        'deductionPlanGroup': 'Flexible Spending Accounts (FSA)',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 41,
        'cpdCode': '4O',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 4,
        'codeGroup': 'Flexible Spending Accounts (FSA)',
        'codeType': 'Transportation',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'TRANSPO',
        'planName': 'Trans',
        'planDescription': 'Transportation',
        'codeTypeDesc': 'Transportation',
        'taxDed': 'D',
        'name': 'FLXTR$ ',
        'description': 'FLEX TRANSPORTATION $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'FSA',
        'deductionPlanGroup': 'Flexible Spending Accounts (FSA)',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 41,
        'cpdCode': '4Q',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 4,
        'codeGroup': 'Flexible Spending Accounts (FSA)',
        'codeType': 'Transportation',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'TRANSPO',
        'planName': 'Trans',
        'planDescription': 'Transportation',
        'codeTypeDesc': 'Transportation',
        'taxDed': 'D',
        'name': 'FLXTR% ',
        'description': 'FLEX TRANSPORTATION %',
        'howType': '%',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'FSA',
        'deductionPlanGroup': 'Flexible Spending Accounts (FSA)',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 43,
        'cpdCode': '28',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAMAT5',
        'description': 'HSA COMPANY MATCH 5',
        'howType': '$',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERmatchLimit',
        'displayName': 'HSA COMPANY MATCH 5',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 43,
        'cpdCode': '32',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAMAT6',
        'description': 'HSA COMPANY MATCH 6',
        'howType': '$',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERMatch6',
        'displayName': 'HSA COMPANY MATCH 6',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 43,
        'cpdCode': '3O',
        'baseAccm': 'COHSA ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'COHSA1 ',
        'description': 'CO HSA CONTRIB 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dBenefit',
        'displayName': 'CO HSA CONTRIB 2',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 43,
        'cpdCode': '3P',
        'baseAccm': 'HSA   ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAPS1$',
        'description': 'POSTTAX HSA EE CONTRIB 1$',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dDeduction$',
        'displayName': 'POSTTAX HSA EE CONTRIB 1',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 43,
        'cpdCode': '3Q',
        'baseAccm': 'HSA   ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAPS1%',
        'description': 'POSTTAX HSA EE CONTRIB 1%',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dDeduction',
        'displayName': 'POSTTAX HSA EE CONTRIB 1',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 43,
        'cpdCode': '3R',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAWAG2',
        'description': 'HSA EE WAGES 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dEligible',
        'displayName': 'HSA EMPLOYEE WAGES 2',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 43,
        'cpdCode': '3Z',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSACOM2',
        'description': 'HSA COMPANY COMPARE 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERComp2',
        'displayName': 'HSA COMPANY COMPARE 2',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 43,
        'cpdCode': '87',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAMAT4',
        'description': 'HSA COMPANY MATCH 4',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERmatchRate',
        'displayName': 'HSA COMPANY MATCH 4',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 43,
        'cpdCode': '88',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSACON2',
        'description': 'HSA COMPANY CONTRIB 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERcalcMatchRate',
        'displayName': 'HSA COMPANY CONTRIB 2',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 50,
        'cpdCode': 'C0',
        'baseAccm': 'CHSUPP',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Child Support',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'CHLDSUP',
        'planName': 'ChldSup',
        'planDescription': 'Child Support',
        'codeTypeDesc': 'Child Support',
        'taxDed': 'D',
        'name': 'CHDSUP1',
        'description': 'CHILD SUPPORT W/ GOAL',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 50,
        'cpdCode': 'C1',
        'baseAccm': 'CHSUPP',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Child Support',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'CHLDSUP',
        'planName': 'ChldSup',
        'planDescription': 'Child Support',
        'codeTypeDesc': 'Child Support',
        'taxDed': 'D',
        'name': 'CHDSUP2',
        'description': 'CHILD SUPPORT W/ GOAL 2 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 50,
        'cpdCode': 'C2',
        'baseAccm': 'CHSUPP',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Child Support',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'CHLDSUP',
        'planName': 'ChldSup',
        'planDescription': 'Child Support',
        'codeTypeDesc': 'Child Support',
        'taxDed': 'D',
        'name': 'CHDSUP3',
        'description': 'CHILD SUPPORT W/ GOAL 3 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 50,
        'cpdCode': 'C3',
        'baseAccm': 'CHSUPP',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Child Support',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'CHLDSUP',
        'planName': 'ChldSup',
        'planDescription': 'Child Support',
        'codeTypeDesc': 'Child Support',
        'taxDed': 'D',
        'name': 'CHDSUP4',
        'description': 'CHILD SUPPORT W/ GOAL 4 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 50,
        'cpdCode': 'C4',
        'baseAccm': 'CHSUPP',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Child Support',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'CHLDSUP',
        'planName': 'ChldSup',
        'planDescription': 'Child Support',
        'codeTypeDesc': 'Child Support',
        'taxDed': 'D',
        'name': 'CHDSUP5',
        'description': 'CHILD SUPPORT W/ GOAL 5 $',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 50,
        'cpdCode': 'C5',
        'baseAccm': 'CHSUPP',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Child Support',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'CHLDSUP',
        'planName': 'ChldSup',
        'planDescription': 'Child Support',
        'codeTypeDesc': 'Child Support',
        'taxDed': 'D',
        'name': 'CHDSUP6',
        'description': 'CHILD SUPPORT W/ GOAL 6 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 50,
        'cpdCode': 'C6',
        'baseAccm': 'CHSUPP',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Child Support',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'CHLDSUP',
        'planName': 'ChldSup',
        'planDescription': 'Child Support',
        'codeTypeDesc': 'Child Support',
        'taxDed': 'D',
        'name': 'CHDSUP7',
        'description': 'CHILD SUPPORT W/ GOAL 7 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 50,
        'cpdCode': 'C7',
        'baseAccm': 'CHSUPP',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Child Support',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'CHLDSUP',
        'planName': 'ChldSup',
        'planDescription': 'Child Support',
        'codeTypeDesc': 'Child Support',
        'taxDed': 'D',
        'name': 'CHDSUP8',
        'description': 'CHILD SUPPORT W/ GOAL 8 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 50,
        'cpdCode': 'C8',
        'baseAccm': 'CHSUPP',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Child Support',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'CHLDSUP',
        'planName': 'ChldSup',
        'planDescription': 'Child Support',
        'codeTypeDesc': 'Child Support',
        'taxDed': 'D',
        'name': 'CHDSUP9',
        'description': 'CHILD SUPPORT W/ GOAL 9 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 50,
        'cpdCode': 'C9',
        'baseAccm': 'CHSUPP',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Child Support',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'CHLDSUP',
        'planName': 'ChldSup',
        'planDescription': 'Child Support',
        'codeTypeDesc': 'Child Support',
        'taxDed': 'D',
        'name': 'CHDSUPA',
        'description': 'CHILD SUPPORT W/ GOAL A $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': '05',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN G1',
        'description': 'GARNISH GOAL 1 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'G1',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN G2',
        'description': 'GARNISH GOAL 2 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'G2',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN G3',
        'description': 'GARNISH GOAL 3 $     ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'G3',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN G4',
        'description': 'GARNISH GOAL 4 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'G4',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN G5',
        'description': 'GARNISH GOAL 5 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'G5',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN G6',
        'description': 'GARNISH GOAL 6 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'G6',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN G7',
        'description': 'GARNISH GOAL 7 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'G7',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN G8',
        'description': 'GARNISH GOAL 8 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'G8',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN G9',
        'description': 'GARNISH GOAL 9 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'G9',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN GA',
        'description': 'GARNISH GOAL A $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'GB',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN GB',
        'description': 'GARNISH GOAL B $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'GC',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN GC',
        'description': 'GARNISH GOAL C $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'GD',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN GD',
        'description': 'GARNISH GOAL D $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'GE',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN GE',
        'description': 'GARNISH GOAL E $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'GF',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN GF',
        'description': 'GARNISH GOAL F$',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 51,
        'cpdCode': 'GG',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNWGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment with Goal',
        'codeTypeDesc': 'Garnishment with Goal',
        'taxDed': 'D',
        'name': 'GARN GG',
        'description': 'GARNISH GOAL  G$',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 52,
        'cpdCode': '90',
        'baseAccm': '401KLN',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': '401k Loan Repayment',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': '401KLOAN',
        'planName': '401KL',
        'planDescription': '401K Loan Repayment',
        'codeTypeDesc': '401k Loan Repayment',
        'taxDed': 'D',
        'name': '401KL1$',
        'description': '401K LOAN 1 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': 'dDeduction$',
        'displayName': '401K Loan Repayment',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 52,
        'cpdCode': 'B1',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': '401k Loan Repayment',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': '401KLOAN',
        'planName': '401KL',
        'planDescription': '401K Loan Repayment',
        'codeTypeDesc': '401k Loan Repayment',
        'taxDed': 'D',
        'name': '401KL1%',
        'description': '401K LOAN 1 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': 'dDeduction',
        'displayName': '401K Loan Repayment',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 52,
        'cpdCode': 'B2',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': '401k Loan Repayment',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': '401KLOAN',
        'planName': '401KL',
        'planDescription': '401K Loan Repayment',
        'codeTypeDesc': '401k Loan Repayment',
        'taxDed': 'D',
        'name': '401KLN%',
        'description': '401K LOAN REPAYMENT %',
        'howType': '%',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 53,
        'cpdCode': '01',
        'baseAccm': 'UNION ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Union Dues',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'UNION',
        'planName': 'Union',
        'planDescription': 'Union Dues',
        'codeTypeDesc': 'Union Dues',
        'taxDed': 'D',
        'name': 'UNION 1',
        'description': 'UNION $ DEDUCTION        ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 53,
        'cpdCode': '02',
        'baseAccm': 'UNION ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Union Dues',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'UNION',
        'planName': 'Union',
        'planDescription': 'Union Dues',
        'codeTypeDesc': 'Union Dues',
        'taxDed': 'D',
        'name': 'UNION 2',
        'description': 'UNION % DEDUCTION',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 53,
        'cpdCode': '03',
        'baseAccm': 'UNION ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Union Dues',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'UNION',
        'planName': 'Union',
        'planDescription': 'Union Dues',
        'codeTypeDesc': 'Union Dues',
        'taxDed': 'D',
        'name': 'UNION 3',
        'description': 'UNION C DEDUCTION',
        'howType': 'C',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 54,
        'cpdCode': '08',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Repay Cash Advance',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'ADVANCE',
        'planName': 'Advance',
        'planDescription': 'Repay Cash Advance',
        'codeTypeDesc': 'Repay Cash Advance',
        'taxDed': 'D',
        'name': 'ADVANC1',
        'description': 'ADVANCE DEDUCTION 1      ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 54,
        'cpdCode': '92',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Repay Cash Advance',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'ADVANCE',
        'planName': 'Advance',
        'planDescription': 'Repay Cash Advance',
        'codeTypeDesc': 'Repay Cash Advance',
        'taxDed': 'D',
        'name': 'ADVANC2',
        'description': 'ADVANCE DEDUCTION 2',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 54,
        'cpdCode': 'HB',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Repay Cash Advance',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'ADVANCE',
        'planName': 'Advance',
        'planDescription': 'Repay Cash Advance',
        'codeTypeDesc': 'Repay Cash Advance',
        'taxDed': 'D',
        'name': 'ADVANC3',
        'description': 'ADVANCE DEDUCTION 3',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 55,
        'cpdCode': 'HA',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Repay Loan',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'LOAN',
        'planName': 'Loan',
        'planDescription': 'Repay Loan',
        'codeTypeDesc': 'Repay Loan',
        'taxDed': 'D',
        'name': 'LOANREP',
        'description': 'LOAN REPAYMENT',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 55,
        'cpdCode': 'LN',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Repay Loan',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'LOAN',
        'planName': 'Loan',
        'planDescription': 'Repay Loan',
        'codeTypeDesc': 'Repay Loan',
        'taxDed': 'D',
        'name': 'LOANDED',
        'description': 'LOAN DEDUCTION           ',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': '13',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'XMASCLB',
        'description': 'CHRISTMAS CLUB DEDUCTION',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': '14',
        'baseAccm': 'HEALTH',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'HOSP   ',
        'description': 'HOSPITAL DEDUCTION',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': '18',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'L T D  ',
        'description': 'LONG TERM DISAB DEDUCTION',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': '27',
        'baseAccm': 'IRADED',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'IRA DED',
        'description': 'IRA DEDUCTION',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': '30',
        'baseAccm': 'PTXIRA',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'I R A  ',
        'description': 'I R A SALARY REDUCTION',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': '4C',
        'baseAccm': 'CO457 ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'CO457  ',
        'description': 'EMPLOYER PAID 457 PLAN',
        'howType': '$',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': '89',
        'baseAccm': 'COHLTH',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'CO-MED ',
        'description': 'EMPLOYER PAID HEALTH INS',
        'howType': '$',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': '98',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'MISC-1 ',
        'description': 'MISC. 1 DEDUCTION',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': false,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': 'B3',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'MISCWG1',
        'description': 'MISCELLANEOUS W GOAL 1',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': 'B4',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'MISCWG2',
        'description': 'MISCELLANEOUS W GOAL 2',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': 'B5',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'MISCWG3',
        'description': 'MISCELLANEOUS W GOAL 3',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': 'B6',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'MISCWG4',
        'description': 'MISCELLANEOUS W GOAL 4',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': 'B7',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'MISCWG5',
        'description': 'MISCELLANEOUS W GOAL 5',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': 'B8',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'MISCWG6',
        'description': 'MISCELLANEOUS W GOAL 6',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': 'R1',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'MISCWG7',
        'description': 'MISCELLANEOUS W GOAL 7',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': 'R2',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'MISCWG8',
        'description': 'MISCELLANEOUS W GOAL 8',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': 'R3',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'MISCWG9',
        'description': 'MISCELLANEOUS W GOAL 9',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 56,
        'cpdCode': 'R4',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous with Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCWGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous With Goal',
        'codeTypeDesc': 'Miscellaneous with Goal',
        'taxDed': 'D',
        'name': 'MISCWGA',
        'description': 'MISCELLANEOUS W GOAL 10',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 57,
        'cpdCode': 'GP',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCNOGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous No Goal',
        'codeTypeDesc': 'Miscellaneous No Goal',
        'taxDed': 'D',
        'name': 'MISCNG3',
        'description': 'MISCELLANEOUS NO GOAL 3',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 57,
        'cpdCode': 'GQ',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCNOGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous No Goal',
        'codeTypeDesc': 'Miscellaneous No Goal',
        'taxDed': 'D',
        'name': 'MISCNG4',
        'description': 'MISCELLANEOUS NO GOAL 4',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 57,
        'cpdCode': 'GR',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCNOGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous No Goal',
        'codeTypeDesc': 'Miscellaneous No Goal',
        'taxDed': 'D',
        'name': 'MISCNG5',
        'description': 'MISCELLANEOUS NO GOAL 5',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 57,
        'cpdCode': 'GS',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCNOGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous No Goal',
        'codeTypeDesc': 'Miscellaneous No Goal',
        'taxDed': 'D',
        'name': 'MISCNG6',
        'description': 'MISCELLANEOUS NO GOAL 6',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 57,
        'cpdCode': 'GT',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCNOGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous No Goal',
        'codeTypeDesc': 'Miscellaneous No Goal',
        'taxDed': 'D',
        'name': 'MISCNG7',
        'description': 'MISCELLANEOUS NO GOAL 7',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 57,
        'cpdCode': 'GU',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCNOGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous No Goal',
        'codeTypeDesc': 'Miscellaneous No Goal',
        'taxDed': 'D',
        'name': 'MISCNG8',
        'description': 'MISCELLANEOUS NO GOAL 8',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 57,
        'cpdCode': 'GV',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCNOGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous No Goal',
        'codeTypeDesc': 'Miscellaneous No Goal',
        'taxDed': 'D',
        'name': 'MISCNG9',
        'description': 'MISCELLANEOUS NO GOAL 9',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 57,
        'cpdCode': 'GW',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCNOGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous No Goal',
        'codeTypeDesc': 'Miscellaneous No Goal',
        'taxDed': 'D',
        'name': 'MISCNGA',
        'description': 'MISCELLANEOUS NO GOAL 10',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 57,
        'cpdCode': 'R8',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCNOGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous No Goal',
        'codeTypeDesc': 'Miscellaneous No Goal',
        'taxDed': 'D',
        'name': 'MISCNG1',
        'description': 'MISCELLANEOUS NO GOAL 1',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 57,
        'cpdCode': 'R9',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MISCNOGOAL',
        'planName': 'Misc',
        'planDescription': 'Miscellaneous No Goal',
        'codeTypeDesc': 'Miscellaneous No Goal',
        'taxDed': 'D',
        'name': 'MISCNG2',
        'description': 'MISCELLANEOUS NO GOAL 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 58,
        'cpdCode': '99',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': null,
        'planName': null,
        'planDescription': null,
        'codeTypeDesc': 'Miscellaneous No Goal',
        'taxDed': 'D',
        'name': 'MISC   ',
        'description': 'MISCELLANEOUS DEDUCTION 1',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 58,
        'cpdCode': 'B9',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Miscellaneous No Goal',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': null,
        'planName': null,
        'planDescription': null,
        'codeTypeDesc': 'Miscellaneous No Goal',
        'taxDed': 'D',
        'name': 'MISC 1T',
        'description': 'MISCELLANEOUS DEDUCTION 2',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': true,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'H9',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNG1',
        'description': 'GARNISH NO GOAL 1',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HE',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNG2',
        'description': 'GARNISH NO GOAL 2',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HF',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNG3',
        'description': 'GARNISH NO GOAL 3',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HG',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNG4',
        'description': 'GARNISH NO GOAL 4',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HH',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNG5',
        'description': 'GARNISH NO GOAL 5',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HJ',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNG6',
        'description': 'GARNISH NO GOAL 6',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HK',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNG7',
        'description': 'GARNISH NO GOAL 7',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HL',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNG8',
        'description': 'GARNISH NO GOAL 8',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HM',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNG9',
        'description': 'GARNISH NO GOAL 9',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HN',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNGA',
        'description': 'GARNISH NO GOAL A',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HO',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNGB',
        'description': 'GARNISH NO GOAL B',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HP',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNGC',
        'description': 'GARNISH NO GOAL C',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HQ',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNGD',
        'description': 'GARNISH NO GOAL D',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HR',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNGE',
        'description': 'GARNISH NO GOAL E',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HT',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNGF',
        'description': 'GARNISH NO GOAL F',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 59,
        'cpdCode': 'HU',
        'baseAccm': '      ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Garnishment No Goal',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'GARNNOGOAL',
        'planName': 'Garn',
        'planDescription': 'Garnishment No Goal',
        'codeTypeDesc': 'Garnishment No Goal',
        'taxDed': 'D',
        'name': 'GARNNGG',
        'description': 'GARNISH NO GOAL G',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 60,
        'cpdCode': '80',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Catch Up',
        'hasPercent': true,
        'retireAddon': 10,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Catch Up',
        'taxDed': 'D',
        'name': 'MATCH%1',
        'description': 'COMPANY MATCH MAX  % 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERMatchLimit',
        'displayName': 'COMPANY MATCH MAX %',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 60,
        'cpdCode': '81',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Catch Up',
        'hasPercent': true,
        'retireAddon': 10,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Catch Up',
        'taxDed': 'D',
        'name': 'COMPAR1',
        'description': 'COMPANY MATCH COMPARE 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERMatchRate',
        'displayName': 'COMPANY COMPARE',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 60,
        'cpdCode': '86',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Catch Up',
        'hasPercent': true,
        'retireAddon': 10,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Catch Up',
        'taxDed': 'D',
        'name': 'COCALC3',
        'description': 'CALCULATE COMPANY MATCH 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERCalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 60,
        'cpdCode': 'D1',
        'baseAccm': 'CO401K',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Catch Up',
        'hasPercent': true,
        'retireAddon': 10,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Catch Up',
        'taxDed': 'D',
        'name': 'CO4KCU1',
        'description': 'Company Match 401K CU 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dBenefit',
        'displayName': 'Company Match 401K CU',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 60,
        'cpdCode': 'EA',
        'baseAccm': '401KC ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Catch Up',
        'hasPercent': true,
        'retireAddon': 10,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Catch Up',
        'taxDed': 'D',
        'name': '401KCU1',
        'description': '401K Catchup 1 ',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 60,
        'cpdCode': 'ES',
        'baseAccm': '401KC ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Catch Up',
        'hasPercent': true,
        'retireAddon': 10,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Catch Up',
        'taxDed': 'D',
        'name': '401KCU3',
        'description': '401K Catchup 3',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 60,
        'cpdCode': 'H5',
        'baseAccm': '401KC$',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Catch Up',
        'hasPercent': true,
        'retireAddon': 10,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Catch Up',
        'taxDed': 'D',
        'name': '401KC$$',
        'description': '401K CATCHUP WAGES',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 61,
        'cpdCode': 'DP',
        'baseAccm': 'CO401K',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 11,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'CO4KCU2',
        'description': 'Company Match 401K CU 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dBenefit',
        'displayName': 'Company Match 401K CU',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 61,
        'cpdCode': 'EB',
        'baseAccm': '401KC ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 11,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered Catch Up',
        'taxDed': 'D',
        'name': '401KCU2',
        'description': '401K Catchup 2',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 61,
        'cpdCode': 'ET',
        'baseAccm': '401KC ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 11,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered Catch Up',
        'taxDed': 'D',
        'name': '401KCU4',
        'description': '401K Catchup 4',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 61,
        'cpdCode': 'H6',
        'baseAccm': '401KC$',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 11,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered Catch Up',
        'taxDed': 'D',
        'name': '401KCT$',
        'description': '401K TIER CATCHUP WAGES',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 61,
        'cpdCode': 'SF',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 11,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'TOT 4K4',
        'description': 'TOTAL 401K DEDUCTION 4',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERTotalDed',
        'displayName': 'TOTAL 401K DEDUCTION',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 61,
        'cpdCode': 'SJ',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 11,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'TIERBL4',
        'description': 'COMPANY BOT TIER LIMIT 4',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERBotMatchLimit',
        'displayName': 'Employer Bottom Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 61,
        'cpdCode': 'SL',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 11,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'TIERTL4',
        'description': 'COMPANY TOP TIER LIMIT 4',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERTopMatchLimit',
        'displayName': 'Employer Top Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 61,
        'cpdCode': 'SN',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 11,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'TIERCM4',
        'description': 'COMPANY COMPARE 4 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERCalcMatchRate',
        'displayName': 'COMPANY COMPARE %',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 61,
        'cpdCode': 'SQ',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 11,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'TIERBM4',
        'description': 'COMPANY MATCH MAX BOT 4',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERBotMatchRate',
        'displayName': 'Employer Bottom Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 61,
        'cpdCode': 'SW',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 11,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': '401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'TIERTM4',
        'description': 'COMPANY MATCH MAX TOP 4',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERTopMatchRate',
        'displayName': 'Employer Top Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 62,
        'cpdCode': 'EF',
        'baseAccm': '403BCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '403B Catch Up',
        'hasPercent': true,
        'retireAddon': 12,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '403B',
        'planName': '403B',
        'planDescription': '403B',
        'codeTypeDesc': '403b Catch Up',
        'taxDed': 'D',
        'name': '403BCU$',
        'description': '403B CATCH UP CONTRIB $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 62,
        'cpdCode': 'EU',
        'baseAccm': '403BCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '403B Catch Up',
        'hasPercent': true,
        'retireAddon': 12,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '403B',
        'planName': '403B',
        'planDescription': '403B',
        'codeTypeDesc': '403b Catch Up',
        'taxDed': 'D',
        'name': '403BCU%',
        'description': '403B CATCH UP CONTRIB %',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 62,
        'cpdCode': 'H7',
        'baseAccm': '403BC$',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': '403B Catch Up',
        'hasPercent': true,
        'retireAddon': 12,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '403B',
        'planName': '403B',
        'planDescription': '403B',
        'codeTypeDesc': '403b Catch Up',
        'taxDed': 'D',
        'name': '403BC$$',
        'description': '403b CATCHUP WAGES',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 63,
        'cpdCode': 'EN',
        'baseAccm': 'SMPICU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Simple IRA Catch Up',
        'hasPercent': true,
        'retireAddon': 13,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'SMPLIRA',
        'planName': 'SMPLIRA',
        'planDescription': 'Simple IRA',
        'codeTypeDesc': 'Simple IRA Catch Up',
        'taxDed': 'D',
        'name': 'SMPIRC$',
        'description': 'SIMPLE IRA CATCH UP CONT$',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 63,
        'cpdCode': 'EV',
        'baseAccm': 'SMPICU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Simple IRA Catch Up',
        'hasPercent': true,
        'retireAddon': 13,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'SMPLIRA',
        'planName': 'SMPLIRA',
        'planDescription': 'Simple IRA',
        'codeTypeDesc': 'Simple IRA Catch Up',
        'taxDed': 'D',
        'name': 'SMPIRCP',
        'description': 'SIMPLE IRA CATCH UP CONT%',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 63,
        'cpdCode': 'H8',
        'baseAccm': 'SMPCU$',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Simple IRA Catch Up',
        'hasPercent': true,
        'retireAddon': 13,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'SMPLIRA',
        'planName': 'SMPLIRA',
        'planDescription': 'Simple IRA',
        'codeTypeDesc': 'Simple IRA Catch Up',
        'taxDed': 'D',
        'name': 'SMPCU$2',
        'description': 'SIMPLE CATCHUP WAGES',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 64,
        'cpdCode': '61',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 14,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Catch Up',
        'taxDed': 'D',
        'name': 'COCALC2',
        'description': 'CALCULATE COMPANY MATCH 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERCalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 64,
        'cpdCode': '82',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 14,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Catch Up',
        'taxDed': 'D',
        'name': 'RTHMTH1',
        'description': '% CO MATCH ROTH 401K 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERMatchLimit',
        'displayName': '% CMOMPANY MATCH ROTH 401K',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 64,
        'cpdCode': '83',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 14,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Catch Up',
        'taxDed': 'D',
        'name': 'COMPAR2',
        'description': 'COMPANY MATCH COMPARE 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERMatchRate',
        'displayName': 'COMPARE COMPANY MATCH',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 64,
        'cpdCode': 'D3',
        'baseAccm': 'CORTHK',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 14,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Catch Up',
        'taxDed': 'D',
        'name': 'CO4KRC1',
        'description': 'CO Match RTH 401K CU 1',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dBenefit',
        'displayName': 'Company Match RTH 401K CU',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 64,
        'cpdCode': 'ER',
        'baseAccm': 'RTHKCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 14,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Catch Up',
        'taxDed': 'D',
        'name': '4KRCU2$',
        'description': 'Roth 401K Catchup 2 $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 64,
        'cpdCode': 'EY',
        'baseAccm': 'RTHKCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 14,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Catch Up',
        'taxDed': 'D',
        'name': '4KRCU2%',
        'description': 'Roth 401K Catchup 2 %',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 64,
        'cpdCode': 'HX',
        'baseAccm': '401KC$',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 14,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Catch Up',
        'taxDed': 'D',
        'name': 'RTH$$  ',
        'description': 'ROTH 401K CATCH UP WAGES',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 65,
        'cpdCode': 'EP',
        'baseAccm': '401KC ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 18,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Non-Elective Catch Up',
        'taxDed': 'D',
        'name': 'SHNECU$',
        'description': 'SH 401K Non Elective CU $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 65,
        'cpdCode': 'EX',
        'baseAccm': '401KC ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 18,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Non-Elective Catch Up',
        'taxDed': 'D',
        'name': 'SHNECU%',
        'description': 'SH 401K Non Elective CU %',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 65,
        'cpdCode': 'HW',
        'baseAccm': '401KC$',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 18,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Non-Elective Catch Up',
        'taxDed': 'D',
        'name': 'SFC$$1 ',
        'description': 'SAFE 401K CATCHUP WAGES 1',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 66,
        'cpdCode': 'EO',
        'baseAccm': 'SMPKCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Simple 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 16,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SINGLE',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'SMPKCU$',
        'description': 'SIMP 401K CATCH UP CONTR$',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 66,
        'cpdCode': 'EW',
        'baseAccm': 'SMPKCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Simple 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 16,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SINGLE',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'SMPKCU%',
        'description': 'SIMP 401K CATCH UP CONTR%',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 66,
        'cpdCode': 'HV',
        'baseAccm': 'SMPCU$',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Simple 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 16,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SINGLE',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'SMPCU$1',
        'description': 'SIMP 401K CATCH UP WAGES',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 67,
        'cpdCode': 'E4',
        'baseAccm': 'CORTHK',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 9,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'CO4KRC2',
        'description': 'CO Match RTH 401K CU 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 67,
        'cpdCode': 'EH',
        'baseAccm': 'RTHKCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 9,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered Catch Up',
        'taxDed': 'D',
        'name': '4KRCU1$',
        'description': 'Roth 401K Catchup 1 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 67,
        'cpdCode': 'EJ',
        'baseAccm': 'RTHKCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 9,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered Catch Up',
        'taxDed': 'D',
        'name': '4KRCU1%',
        'description': 'Roth 401K Catchup 1 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 67,
        'cpdCode': 'HZ',
        'baseAccm': '401K$$',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 9,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'ELIGBL7',
        'description': 'ELIGIBLE WAGES TIER 7',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 67,
        'cpdCode': 'X1',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 9,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'TOT 4K6',
        'description': 'TOTAL 401K DEDUCTION 6',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERTotalDed',
        'displayName': 'TOTAL 401K DEDUCTION',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 67,
        'cpdCode': 'X2',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 9,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'TIERBL6',
        'description': 'COMPANY BOT TIER LIMIT 6',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERBotMatchLimit',
        'displayName': 'Employer Bottom Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 67,
        'cpdCode': 'X3',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 9,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'TIERTL6',
        'description': 'COMPANY TOP TIER LIMIT 6',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERTopMatchLimit',
        'displayName': 'Employer Top Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 67,
        'cpdCode': 'X4',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 9,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'TIERCM6',
        'description': 'COMPANY COMPARE 6 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERcalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 67,
        'cpdCode': 'X5',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 9,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'TIERBM6',
        'description': 'COMPANY MATCH MAX BOT 6',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERBotMatchRate',
        'displayName': 'Employer Bottom Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 67,
        'cpdCode': 'X6',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Roth 401K Tiered Catch Up',
        'hasPercent': true,
        'retireAddon': 9,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'TWOTIER',
        'deductionPlanCode': '401K',
        'planName': '401K',
        'planDescription': '401K',
        'codeTypeDesc': 'Roth 401k Tiered Catch Up',
        'taxDed': 'D',
        'name': 'TIERTM6',
        'description': 'COMPANY MATCH MAX TOP 6',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERTopMatchRate',
        'displayName': 'Employer Top Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 68,
        'cpdCode': 'EC',
        'baseAccm': 'RTHKCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K NE Catchup',
        'hasPercent': true,
        'retireAddon': 8,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective Catch Up',
        'taxDed': 'D',
        'name': 'SHRNEC$',
        'description': 'Co Contrib SH RTH NE CU$',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 68,
        'cpdCode': 'ED',
        'baseAccm': 'RTHKCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K NE Catchup',
        'hasPercent': true,
        'retireAddon': 8,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective Catch Up',
        'taxDed': 'D',
        'name': 'SHRNEC%',
        'description': 'Co Contrib SH RTH NE CU%',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 68,
        'cpdCode': 'HY',
        'baseAccm': '401KC$',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K NE Catchup',
        'hasPercent': true,
        'retireAddon': 8,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Non-Elective Catch Up',
        'taxDed': 'D',
        'name': 'SFC$$2 ',
        'description': 'SAFE 401K CATCHUP WAGES 2',
        'howType': 'P',
        'dedRptSw': true,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 69,
        'cpdCode': '5A',
        'baseAccm': '401KC$',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Match Catch Up',
        'hasPercent': true,
        'retireAddon': 15,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'ELIGBL5',
        'description': 'ELIGIBLE WAGES SH 5',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 69,
        'cpdCode': '5B',
        'baseAccm': '401KC ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Match Catch Up',
        'hasPercent': true,
        'retireAddon': 15,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'SH401C$',
        'description': 'Safe Harbor 401K Catchup$',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 69,
        'cpdCode': '5C',
        'baseAccm': '401KC ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Match Catch Up',
        'hasPercent': true,
        'retireAddon': 15,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'SH401C%',
        'description': 'Safe Harbor 401K Catchup%',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 69,
        'cpdCode': '5D',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Match Catch Up',
        'hasPercent': true,
        'retireAddon': 15,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'TOT 4K2',
        'description': 'TOTAL 401K DEDUCTION 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERTotalDed',
        'displayName': 'TOTAL 401K DEDUCTION',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 69,
        'cpdCode': '5E',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Match Catch Up',
        'hasPercent': true,
        'retireAddon': 15,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'TIERBL2',
        'description': 'COMPANY BOT TIER LIMIT 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERBotMatchLimit',
        'displayName': 'Employer Bottom Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 69,
        'cpdCode': '5F',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Match Catch Up',
        'hasPercent': true,
        'retireAddon': 15,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'TIERTL2',
        'description': 'COMPANY TOP TIER LIMIT 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERTopMatchLimit',
        'displayName': 'Employer Top Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 69,
        'cpdCode': '5G',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Match Catch Up',
        'hasPercent': true,
        'retireAddon': 15,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'TIERCM2',
        'description': 'COMPANY COMPARE 2 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERcalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 69,
        'cpdCode': '5H',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Match Catch Up',
        'hasPercent': true,
        'retireAddon': 15,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'TIERBM2',
        'description': 'COMPANY MATCH MAX BOT 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERBotMatchRate',
        'displayName': 'Employer Bottom Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 69,
        'cpdCode': '5I',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Match Catch Up',
        'hasPercent': true,
        'retireAddon': 15,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'TIERTM2',
        'description': 'COMPANY MATCH MAX TOP 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERTopMatchRate',
        'displayName': 'Employer Top Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 69,
        'cpdCode': '5J',
        'baseAccm': 'CO401K',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H 401K Match Catch Up',
        'hasPercent': true,
        'retireAddon': 15,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'COSHCU ',
        'description': 'Company Match SH 401K CU',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 70,
        'cpdCode': '5K',
        'baseAccm': '401KC$',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K Match Catchup',
        'hasPercent': true,
        'retireAddon': 7,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'ELIGBL6',
        'description': 'ELIGIBLE WAGES SH 6',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 70,
        'cpdCode': '5L',
        'baseAccm': 'RTHKCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K Match Catchup',
        'hasPercent': true,
        'retireAddon': 7,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'SH4RCU$',
        'description': 'Safe Harbor Roth 401K CU$',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 70,
        'cpdCode': '5M',
        'baseAccm': 'RTHKCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K Match Catchup',
        'hasPercent': true,
        'retireAddon': 7,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'SH4RCU%',
        'description': 'Safe Harbor Roth 401K CU%',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 70,
        'cpdCode': '5N',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K Match Catchup',
        'hasPercent': true,
        'retireAddon': 7,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'TOT 4K8',
        'description': 'TOTAL 401K DEDUCTION 8',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERTotalDed',
        'displayName': 'TOTAL 401K DEDUCTION',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 70,
        'cpdCode': '5P',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K Match Catchup',
        'hasPercent': true,
        'retireAddon': 7,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'TIERBL8',
        'description': 'COMPANY BOT TIER LIMIT 8',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERBotMatchLimit',
        'displayName': 'Employer Bottom Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 70,
        'cpdCode': '5R',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K Match Catchup',
        'hasPercent': true,
        'retireAddon': 7,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'TIERTL8',
        'description': 'COMPANY TOP TIER LIMIT 8',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERTopMatchLimit',
        'displayName': 'Employer Top Tier Match Limit',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 70,
        'cpdCode': '5S',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K Match Catchup',
        'hasPercent': true,
        'retireAddon': 7,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'TIERCM8',
        'description': 'COMPANY COMPARE 8 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERcalcMatchRate',
        'displayName': 'Calculated Match Rate',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 70,
        'cpdCode': '5T',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K Match Catchup',
        'hasPercent': true,
        'retireAddon': 7,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'TIERBM8',
        'description': 'COMPANY MATCH MAX BOT 8',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERBotMatchRate',
        'displayName': 'Employer Bottom Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 70,
        'cpdCode': '5V',
        'baseAccm': '      ',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K Match Catchup',
        'hasPercent': true,
        'retireAddon': 7,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'TIERTM8',
        'description': 'COMPANY MATCH MAX TOP 8',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dERTopMatchRate',
        'displayName': 'Employer Top Tier Match Rate',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 70,
        'cpdCode': '5X',
        'baseAccm': 'CORTHK',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Safe H Roth 401K Match Catchup',
        'hasPercent': true,
        'retireAddon': 7,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': true,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'SNGLORTWO',
        'deductionPlanCode': 'SH401K',
        'planName': 'SH 401K',
        'planDescription': 'Safe Harbor 401K',
        'codeTypeDesc': 'Safe Harbor Roth 401k Match Catch Up',
        'taxDed': 'D',
        'name': 'CORTHSC',
        'description': 'Co Match SH RTH 401K CU',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dBenefit',
        'displayName': 'Benefit',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 71,
        'cpdCode': 'EE',
        'baseAccm': 'SMPKCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Simple 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 19,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k Non-Elective Catch Up',
        'taxDed': 'D',
        'name': 'SMPNEC$',
        'description': 'SMP401K NE CATCHUP CONTR$',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 71,
        'cpdCode': 'EG',
        'baseAccm': 'SMPKCU',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Simple 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 19,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k Non-Elective Catch Up',
        'taxDed': 'D',
        'name': 'SMPNEC%',
        'description': 'SMP401K NE CATCHUP CONTR%',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 71,
        'cpdCode': 'GZ',
        'baseAccm': 'SMPCU$',
        'codeGroupId': 6,
        'codeGroup': 'Retirement Plans Catch Up',
        'codeType': 'Simple 401K Catch Up',
        'hasPercent': true,
        'retireAddon': 19,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': true,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NONELECTIV',
        'deductionPlanCode': 'SMPL401K',
        'planName': 'SMPL401',
        'planDescription': 'Simple 401K',
        'codeTypeDesc': 'Simple 401k Non-Elective Catch Up',
        'taxDed': 'D',
        'name': 'SMPNEWG',
        'description': 'SMP401K NE CU WAGES      ',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': null,
        'deductionPlanGroup': null,
        'parameterName': 'dEligible',
        'displayName': 'Eligible Wages',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 72,
        'cpdCode': '84',
        'baseAccm': '401KLN',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': '401k Loan Repayment',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': '401KLOAN',
        'planName': '401KL',
        'planDescription': '401K Loan Repayment',
        'codeTypeDesc': '401k Loan Repayment',
        'taxDed': 'D',
        'name': '401KL2$',
        'description': '401K LOAN 2 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': 'dDeduction$',
        'displayName': '401K Loan Repayment',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 72,
        'cpdCode': '85',
        'baseAccm': '401KLN',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': '401k Loan Repayment',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': '401KLOAN',
        'planName': '401KL',
        'planDescription': '401K Loan Repayment',
        'codeTypeDesc': '401k Loan Repayment',
        'taxDed': 'D',
        'name': '401KL2%',
        'description': '401K LOAN 2 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': 'dDeduction',
        'displayName': '401K Loan Repayment',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 73,
        'cpdCode': '2B',
        'baseAccm': '401KLN',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': '401k Loan Repayment',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': '401KLOAN',
        'planName': '401KL',
        'planDescription': '401K Loan Repayment',
        'codeTypeDesc': '401k Loan Repayment',
        'taxDed': 'D',
        'name': '401KL3$',
        'description': '401K LOAN 3 $',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': 'dDeduction$',
        'displayName': '401K Loan Repayment',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 73,
        'cpdCode': '2C',
        'baseAccm': '401KLN',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': '401k Loan Repayment',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': true,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': '401KLOAN',
        'planName': '401KL',
        'planDescription': '401K Loan Repayment',
        'codeTypeDesc': '401k Loan Repayment',
        'taxDed': 'D',
        'name': '401KL3%',
        'description': '401K LOAN 3 %',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': 'dDeduction',
        'displayName': '401K Loan Repayment',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 74,
        'cpdCode': '49',
        'baseAccm': 'HSACAF',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'CO HSA1',
        'description': 'CO HSA CONTRIBUTION 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dBenefit',
        'displayName': 'CO HSA CONTRIBUTION 1',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 74,
        'cpdCode': '4N',
        'baseAccm': 'HSACEE',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAPR1$',
        'description': 'PRETAX HSA EE CONTRIB 1$',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dDeduction$',
        'displayName': 'PRETAX HSA EE CONTRIB 1',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 74,
        'cpdCode': '4W',
        'baseAccm': 'HSACEE',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAPR1%',
        'description': 'PRETAX HSA EE CONTRIB 1%',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dDeduction',
        'displayName': 'PRETAX HSA EE CONTRIB 1',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 74,
        'cpdCode': '4X',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAMAT1',
        'description': 'HSA COMPANY MATCH 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERMatchRate',
        'displayName': 'HSA COMPANY MATCH 1',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 74,
        'cpdCode': '4Y',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAMAT2',
        'description': 'HSA COMPANY MATCH 2',
        'howType': '$',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERMatchLimit',
        'displayName': 'HSA COMPANY MATCH 2',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 74,
        'cpdCode': '4Z',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAWAG1',
        'description': 'HSA EMPLOYEE WAGES 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dEligible',
        'displayName': 'HSA EMPLOYEE WAGES 1',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 74,
        'cpdCode': '50',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAMAT3',
        'description': 'HSA COMPANY MATCH 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERMatch3',
        'displayName': 'HSA COMPANY MATCH 3',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 74,
        'cpdCode': '52',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSACOM1',
        'description': 'HSA COMPANY COMPARE 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERComp1',
        'displayName': 'HSA COMPANY COMPARE 1',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 74,
        'cpdCode': '53',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 1',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSACON1',
        'description': 'HSA COMPANY CONTRIB 1',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERcalcMatchRate',
        'displayName': 'HSA COMPANY CONTRIB 1',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 75,
        'cpdCode': 'SY',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAWAG4',
        'description': 'HSA EMPLOYEE WAGES 4',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dEligible',
        'displayName': 'HSA EMPLOYEE WAGES 4',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 75,
        'cpdCode': 'T2',
        'baseAccm': 'HSA   ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAPS2$',
        'description': 'POSTTAX HSA EE CONTRIB 2$',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dDeduction$',
        'displayName': 'POSTTAX HSA EE CONTRIB 2',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 75,
        'cpdCode': 'T4',
        'baseAccm': 'HSA   ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAPS2%',
        'description': 'POSTTAX HSA EE CONTRIB 2%',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dDeduction',
        'displayName': 'POSTTAX HSA EE CONTRIB 2',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 75,
        'cpdCode': 'T5',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSACON6',
        'description': 'HSA COMPANY CONTRIB 6',
        'howType': '$',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dHSAERDeduction$',
        'displayName': 'HSA COMPANY CONTRIB 6',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 75,
        'cpdCode': 'T6',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSACON7',
        'description': 'HSA COMPANY CONTRIB 7',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dHSAERDeduction',
        'displayName': 'HSA COMPANY CONTRIB 7',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 75,
        'cpdCode': 'T7',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSACON8',
        'description': 'HSA COMPANY CONTRIB 8',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERContrib6',
        'displayName': 'HSA COMPANY CONTRIB 6',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 75,
        'cpdCode': 'VX',
        'baseAccm': 'COHSA ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Post-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'COHSA2 ',
        'description': 'CO HSA CONTRIB 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERBenefit',
        'displayName': 'CO HSA CONTRIB 2',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 76,
        'cpdCode': 'W1',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAWAG3',
        'description': 'HSA EMPLOYEE WAGES 3',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dEligible',
        'displayName': 'HSA EMPLOYEE WAGES 3',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 76,
        'cpdCode': 'W2',
        'baseAccm': 'HSACEE',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAPR2$',
        'description': 'PRETAX HSA EE CONTRIB 2$',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dDeduction$',
        'displayName': 'PRETAX HSA EE CONTRIB 2',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 76,
        'cpdCode': 'W3',
        'baseAccm': 'HSACEE',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSAPR2%',
        'description': 'PRETAX HSA EE CONTRIB 2%',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dDeduction',
        'displayName': 'PRETAX HSA EE CONTRIB 2',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 76,
        'cpdCode': 'W4',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSACON3',
        'description': 'HSA COMPANY CONTRIB 3',
        'howType': '$',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dHSAERDeduction$',
        'displayName': 'HSA COMPANY CONTRIB 3',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 76,
        'cpdCode': 'W5',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSACON4',
        'description': 'HSA COMPANY CONTRIB 4',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': true,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dHSAERDeduction',
        'displayName': 'HSA COMPANY CONTRIB 4',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 76,
        'cpdCode': 'W6',
        'baseAccm': '      ',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'HSACON5',
        'description': 'HSA COMPANY CONTRIB 5',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': false,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERContrib5',
        'displayName': 'HSA COMPANY CONTRIB 5',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 76,
        'cpdCode': 'W7',
        'baseAccm': 'HSACAF',
        'codeGroupId': 7,
        'codeGroup': 'Health Savings Accounts (HSA)',
        'codeType': 'Pre-Tax HSA Contribution 2',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': true,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOORSINGLE',
        'deductionPlanCode': 'HSA',
        'planName': 'HSA',
        'planDescription': 'HSA',
        'codeTypeDesc': 'HSA',
        'taxDed': 'D',
        'name': 'CO HSA2',
        'description': 'CO HSA CONTRIBUTION 2',
        'howType': 'P',
        'dedRptSw': false,
        'inNet': false,
        'checkPrnSw': true,
        'isDisplayed': false,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'HSA',
        'deductionPlanGroup': 'Health Savings Accounts (HSA)',
        'parameterName': 'dERBenefit',
        'displayName': 'CO HSA CONTRIBUTION 2',
        'defaultDedRate': 100,
        'defaultHowType': 'P'
    },
    {
        'codeTypeId': 89,
        'cpdCode': 'M1',
        'baseAccm': 'MEALS ',
        'codeGroupId': 5,
        'codeGroup': 'Other Post-Tax Deductions',
        'codeType': 'Meals',
        'hasPercent': false,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'POSTTAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'MEALS',
        'planName': 'MEALS',
        'planDescription': 'Meals',
        'codeTypeDesc': 'Meals',
        'taxDed': 'D',
        'name': 'MEALS  ',
        'description': 'Meals',
        'howType': '$',
        'dedRptSw': false,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': true,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'OTHERPSTAX',
        'deductionPlanGroup': 'Other Post-Tax Deductions',
        'parameterName': null,
        'displayName': null,
        'defaultDedRate': null,
        'defaultHowType': null
    },
    {
        'codeTypeId': 90,
        'cpdCode': '7P',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 4,
        'codeGroup': 'Flexible Spending Accounts (FSA)',
        'codeType': 'Parking',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'FSAPARK',
        'planName': 'Parking',
        'planDescription': 'Parking',
        'codeTypeDesc': 'Parking',
        'taxDed': 'D',
        'name': 'FSAPRK$',
        'description': 'FLEX PARKING $',
        'howType': '$',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'FSA',
        'deductionPlanGroup': 'Flexible Spending Accounts (FSA)',
        'parameterName': 'dDeduction$',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': '$'
    },
    {
        'codeTypeId': 90,
        'cpdCode': '7U',
        'baseAccm': 'CAFE1 ',
        'codeGroupId': 4,
        'codeGroup': 'Flexible Spending Accounts (FSA)',
        'codeType': 'Parking',
        'hasPercent': true,
        'retireAddon': 0,
        'hasGoal': false,
        'employerOnly': false,
        'primaryType': null,
        'isSure401K': false,
        'isCatchUp': false,
        'deductionPlanTaxOptionCode': 'PRETAX',
        'deductionPlanMatchOptionCode': 'NOMATCH',
        'deductionPlanCode': 'FSAPARK',
        'planName': 'Parking',
        'planDescription': 'Parking',
        'codeTypeDesc': 'Parking',
        'taxDed': 'D',
        'name': 'FSAPRK%',
        'description': 'FLEX PARKING %',
        'howType': '%',
        'dedRptSw': true,
        'inNet': true,
        'checkPrnSw': true,
        'isDisplayed': true,
        'isActive': true,
        'oneTimeDeduction': false,
        'isEmployerDisplayed': false,
        'deductionPlanGroupCode': 'FSA',
        'deductionPlanGroup': 'Flexible Spending Accounts (FSA)',
        'parameterName': 'dDeduction',
        'displayName': 'Deduction',
        'defaultDedRate': 0,
        'defaultHowType': 'P'
    }
];


/***/ }),

/***/ "./src/app/mock-services/raw-earnings.ts":
/*!***********************************************!*\
  !*** ./src/app/mock-services/raw-earnings.ts ***!
  \***********************************************/
/*! exports provided: earningModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "earningModel", function() { return earningModel; });
var earningModel = [
    {
        'code': '01',
        'name': 'REGULAR',
        'description': 'Regular Hourly Earnings',
        'shortDescription': 'Regular Hourly Earnings',
        'earningsCategory': 'DefaultEarnings',
        'earningsGroupId': 1,
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '02',
        'name': 'O/TIME',
        'description': 'Overtime Earnings',
        'shortDescription': 'Overtime Earnings',
        'earningsCategory': 'DefaultEarnings',
        'earningsGroupId': 3,
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '07',
        'name': 'SALARY',
        'description': 'Regular Salary Earnings',
        'shortDescription': 'Regular Salary Earnings',
        'earningsCategory': 'DefaultEarnings',
        'earningsGroupId': 2,
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '08',
        'name': 'OTHER H',
        'description': 'Other Hours',
        'shortDescription': 'Other Hours',
        'earningsCategory': 'DefaultEarnings',
        'earningsGroupId': 3,
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '95',
        'name': '1099$$',
        'description': 'Regular 1099 Earnings',
        'shortDescription': 'Vacation',
        'earningsCategory': 'DefaultEarnings',
        'earningsGroupId': 4,
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '03',
        'name': 'VACTION',
        'description': 'Vacation',
        'shortDescription': 'Vacation',
        'earningsGroupId': 6,
        'earningsCategory': 'DefaultOtherCompensation',
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '04',
        'name': 'SICK',
        'description': 'Sick',
        'shortDescription': 'Sick',
        'earningsGroupId': 6,
        'earningsCategory': 'DefaultOtherCompensation',
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '05',
        'name': 'HOLIDAY',
        'description': 'Holiday',
        'shortDescription': 'Holiday',
        'earningsGroupId': 5,
        'earningsCategory': 'DefaultOtherCompensation',
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '06',
        'name': 'OTHER',
        'description': 'Other',
        'shortDescription': 'Other',
        'earningsGroupId': 6,
        'earningsCategory': 'DefaultOtherCompensation',
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '13',
        'name': 'BONUS$',
        'description': 'Bonus',
        'shortDescription': 'Bonus',
        'earningsGroupId': 5,
        'earningsCategory': 'DefaultOtherCompensation',
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '14',
        'name': 'COMM $',
        'description': 'Commission',
        'shortDescription': 'Commission',
        'earningsGroupId': 5,
        'earningsCategory': 'DefaultOtherCompensation',
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '19',
        'name': 'OTHER $',
        'description': 'Other (Taxable)',
        'shortDescription': 'Other (Taxable)',
        'earningsGroupId': 5,
        'earningsCategory': 'DefaultOtherCompensation',
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '45',
        'name': 'REIMB.',
        'description': 'Expense (No Tax)',
        'shortDescription': 'Expense (No Tax)',
        'earningsGroupId': 5,
        'earningsCategory': 'DefaultOtherCompensation',
        'earningTypeId': null,
        'earningTypeName': null,
        'earningTaxTypeId': null,
        'earningTaxType': null
    },
    {
        'code': '25',
        'name': 'TIPSCCP',
        'description': 'Tips (Credit Card Paid)',
        'shortDescription': 'Tips (Credit Card Paid)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 11,
        'earningTypeName': 'Tips',
        'earningTaxTypeId': 1,
        'earningTaxType': 'None'
    },
    {
        'code': '27',
        'name': 'TIP2MIN',
        'description': 'Tips To Minimum',
        'shortDescription': 'Tips To Minimum',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 11,
        'earningTypeName': 'Tips',
        'earningTaxTypeId': 1,
        'earningTaxType': 'None'
    },
    {
        'code': '28',
        'name': 'SVCCHG',
        'description': 'Service Charges',
        'shortDescription': 'Service Charges',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 9,
        'earningTypeName': 'Service Charges',
        'earningTaxTypeId': 1,
        'earningTaxType': 'None'
    },
    {
        'code': '30',
        'name': 'MEALTX',
        'description': 'Meals (Taxable)',
        'shortDescription': 'Meals (Taxable)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 8,
        'earningTypeName': 'Meals',
        'earningTaxTypeId': 2,
        'earningTaxType': 'Taxable'
    },
    {
        'code': '31',
        'name': 'MEALNTX',
        'description': 'Meals (No Tax)',
        'shortDescription': 'Meals (No Tax)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 8,
        'earningTypeName': 'Meals',
        'earningTaxTypeId': 3,
        'earningTaxType': 'Non-Taxable'
    },
    {
        'code': '36',
        'name': 'PERDIEM',
        'description': 'Per-Diem (No Tax)',
        'shortDescription': 'Per-Diem (No Tax)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 6,
        'earningTypeName': 'Per-Diem',
        'earningTaxTypeId': 1,
        'earningTaxType': 'None'
    },
    {
        'code': '38',
        'name': 'MSCTX01',
        'description': 'Miscellaneous (Taxable)',
        'shortDescription': 'Miscellaneous (Taxable)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 1,
        'earningTypeName': 'Custom',
        'earningTaxTypeId': 2,
        'earningTaxType': 'Taxable'
    },
    {
        'code': '40',
        'name': 'MSCTX02',
        'description': 'Miscellaneous 2 (Taxable)',
        'shortDescription': 'Miscellaneous 2 (Taxable)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 1,
        'earningTypeName': 'Custom',
        'earningTaxTypeId': 2,
        'earningTaxType': 'Taxable'
    },
    {
        'code': '42',
        'name': 'MSCTX03',
        'description': 'Miscellaneous 3 (Taxable)',
        'shortDescription': 'Miscellaneous 3 (Taxable)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 1,
        'earningTypeName': 'Custom',
        'earningTaxTypeId': 2,
        'earningTaxType': 'Taxable'
    },
    {
        'code': '43',
        'name': 'MSCTX04',
        'description': 'Miscellaneous 4 (Taxable)',
        'shortDescription': 'Miscellaneous 4 (Taxable)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 1,
        'earningTypeName': 'Custom',
        'earningTaxTypeId': 2,
        'earningTaxType': 'Taxable'
    },
    {
        'code': '44',
        'name': 'DRAW-NT',
        'description': 'Other (No Tax)',
        'shortDescription': 'Other (No Tax)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 4,
        'earningTypeName': 'Other',
        'earningTaxTypeId': 1,
        'earningTaxType': 'None'
    },
    {
        'code': '49',
        'name': 'MSCTX05',
        'description': 'Miscellaneous 5 (Taxable)',
        'shortDescription': 'Miscellaneous 5 (Taxable)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 1,
        'earningTypeName': 'Custom',
        'earningTaxTypeId': 2,
        'earningTaxType': 'Taxable'
    },
    {
        'code': '51',
        'name': 'FRNGBEN',
        'description': 'Fringe Benefit (Taxable)',
        'shortDescription': 'Fringe Benefit (Taxable)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 5,
        'earningTypeName': 'Fringe Benefit',
        'earningTaxTypeId': 2,
        'earningTaxType': 'Taxable'
    },
    {
        'code': '52',
        'name': 'FRINGE2',
        'description': 'Fringe Benefit2 (Taxable)',
        'shortDescription': 'Fringe Benefit2 (Taxable)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 5,
        'earningTypeName': 'Fringe Benefit',
        'earningTaxTypeId': 2,
        'earningTaxType': 'Taxable'
    },
    {
        'code': '53',
        'name': 'FRINGNT',
        'description': 'Fringe Benefit (No Tax)',
        'shortDescription': 'Fringe Benefit (No Tax)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 5,
        'earningTypeName': 'Fringe Benefit',
        'earningTaxTypeId': 3,
        'earningTaxType': 'Non-Taxable'
    },
    {
        'code': '54',
        'name': 'FRINGSS',
        'description': 'Fringe Benefit (SS/MEDI)',
        'shortDescription': 'Fringe Benefit (SS/MEDI)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 5,
        'earningTypeName': 'Fringe Benefit',
        'earningTaxTypeId': 4,
        'earningTaxType': 'SS/MEDI'
    },
    {
        'code': '55',
        'name': 'AUTO  1',
        'description': 'Auto Allowance (Taxable)',
        'shortDescription': 'Personal use of company vehicle. Does not add to net pay. W-2 Boxes: 1, 3, 5, 14. ',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 3,
        'earningTypeName': 'Auto Allowance',
        'earningTaxTypeId': 2,
        'earningTaxType': 'Taxable'
    },
    {
        'code': '56',
        'name': 'AUTO  2',
        'description': 'Auto Allowance (No Tax)',
        'shortDescription': 'Reimbursement for business related auto expenses. Does not add to net pay. <b>W-2 Boxes: none</b>.',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 3,
        'earningTypeName': 'Auto Allowance',
        'earningTaxTypeId': 3,
        'earningTaxType': 'Non-Taxable'
    },
    {
        'code': '57',
        'name': 'MOVING1',
        'description': 'Moving Expense (Taxable)',
        'shortDescription': 'Moving Expense (Taxable)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 10,
        'earningTypeName': 'Moving Expense',
        'earningTaxTypeId': 2,
        'earningTaxType': 'Taxable'
    },
    {
        'code': '59',
        'name': 'INSPRM1',
        'description': 'Group Term Life Insurance',
        'shortDescription': 'Group Term Life Insurance',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 7,
        'earningTypeName': 'Group Term Life Insurance',
        'earningTaxTypeId': 1,
        'earningTaxType': 'None'
    },
    {
        'code': '5B',
        'name': 'MOVE EX',
        'description': 'Moving Expense (No Tax)',
        'shortDescription': 'Moving Expense (No Tax)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 10,
        'earningTypeName': 'Moving Expense',
        'earningTaxTypeId': 3,
        'earningTaxType': 'Non-Taxable'
    },
    {
        'code': '63',
        'name': 'TIPCASH',
        'description': 'Tips (Cash)',
        'shortDescription': 'Tips (Cash)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 11,
        'earningTypeName': 'Tips',
        'earningTaxTypeId': 1,
        'earningTaxType': 'None'
    },
    {
        'code': '64',
        'name': 'MSCNT01',
        'description': 'Miscellaneous (No Tax)',
        'shortDescription': 'Miscellaneous (No Tax)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 1,
        'earningTypeName': 'Custom',
        'earningTaxTypeId': 3,
        'earningTaxType': 'Non-Taxable'
    },
    {
        'code': '65',
        'name': 'MSCNT02',
        'description': 'Miscellaneous 2 (No Tax)',
        'shortDescription': 'Miscellaneous 2 (No Tax)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 1,
        'earningTypeName': 'Custom',
        'earningTaxTypeId': 3,
        'earningTaxType': 'Non-Taxable'
    },
    {
        'code': '66',
        'name': 'TIPSCCO',
        'description': 'Tips (Credit Card Owed)',
        'shortDescription': 'Tips (Credit Card Owed)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 11,
        'earningTypeName': 'Tips',
        'earningTaxTypeId': 1,
        'earningTaxType': 'None'
    },
    {
        'code': '6C',
        'name': 'MSCNT03',
        'description': 'Miscellaneous 3 (No Tax)',
        'shortDescription': 'Miscellaneous 3 (No Tax)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 1,
        'earningTypeName': 'Custom',
        'earningTaxTypeId': 3,
        'earningTaxType': 'Non-Taxable'
    },
    {
        'code': '6I',
        'name': 'MSCNT04',
        'description': 'Miscellaneous 4 (No Tax)',
        'shortDescription': 'Miscellaneous 4 (No Tax)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 1,
        'earningTypeName': 'Custom',
        'earningTaxTypeId': 3,
        'earningTaxType': 'Non-Taxable'
    },
    {
        'code': '8A',
        'name': 'SCorp2%',
        'description': 'S-Corp 2% Owner',
        'shortDescription': 'S-Corp 2% Owner',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 2,
        'earningTypeName': 'SCorp',
        'earningTaxTypeId': 1,
        'earningTaxType': 'None'
    },
    {
        'code': '98',
        'name': 'MSCNT05',
        'description': 'Miscellaneous 5 (No Tax)',
        'shortDescription': 'Miscellaneous 5 (No Tax)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 1,
        'earningTypeName': 'Custom',
        'earningTaxTypeId': 3,
        'earningTaxType': 'Non-Taxable'
    },
    {
        'code': '9A',
        'name': 'ClerNTx',
        'description': 'Clergy (No Tax)',
        'shortDescription': 'Clergy (No Tax)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 12,
        'earningTypeName': 'Clergy',
        'earningTaxTypeId': 3,
        'earningTaxType': 'Non-Taxable'
    },
    {
        'code': '9B',
        'name': 'Housing',
        'description': 'Housing Allowance',
        'shortDescription': 'Housing Allowance',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 12,
        'earningTypeName': 'Clergy',
        'earningTaxTypeId': 1,
        'earningTaxType': 'None'
    },
    {
        'code': '9T',
        'name': 'ClergTx',
        'description': 'Clergy (Taxable)',
        'shortDescription': 'Clergy (Taxable)',
        'earningsGroupId': 5,
        'earningsCategory': 'AdditionalEarnings',
        'earningTypeId': 12,
        'earningTypeName': 'Clergy',
        'earningTaxTypeId': 2,
        'earningTaxType': 'Taxable'
    }
];


/***/ }),

/***/ "./src/app/mock-signin/mock-signin.component.ngfactory.js":
/*!****************************************************************!*\
  !*** ./src/app/mock-signin/mock-signin.component.ngfactory.js ***!
  \****************************************************************/
/*! exports provided: RenderType_MockSigninComponent, View_MockSigninComponent_0, View_MockSigninComponent_Host_0, MockSigninComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_MockSigninComponent", function() { return RenderType_MockSigninComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_MockSigninComponent_0", function() { return View_MockSigninComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_MockSigninComponent_Host_0", function() { return View_MockSigninComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MockSigninComponentNgFactory", function() { return MockSigninComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _shared_validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shared/validation/validate-property.directive */ "./src/app/shared/validation/validate-property.directive.ts");
/* harmony import */ var _shared_input_input_text_component_ngfactory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../shared/input/input-text.component.ngfactory */ "./src/app/shared/input/input-text.component.ngfactory.js");
/* harmony import */ var _shared_input_input_text_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shared/input/input-text.component */ "./src/app/shared/input/input-text.component.ts");
/* harmony import */ var _shared_input_input_mask_catalog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shared/input/input-mask-catalog */ "./src/app/shared/input/input-mask-catalog.ts");
/* harmony import */ var _shared_model_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shared/model.component */ "./src/app/shared/model.component.ts");
/* harmony import */ var _mock_signin_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./mock-signin.component */ "./src/app/mock-signin/mock-signin.component.ts");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _mock_services_in_memory_data_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../mock-services/in-memory-data.service */ "./src/app/mock-services/in-memory-data.service.ts");
/* harmony import */ var _core_services_auth_services_oidc_manager_factory__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../core/services/auth-services/oidc-manager-factory */ "./src/app/core/services/auth-services/oidc-manager-factory.ts");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../store/session/session.service */ "./src/app/store/session/session.service.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 














var styles_MockSigninComponent = [];
var RenderType_MockSigninComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_MockSigninComponent, data: { "animation": [{ type: 7, name: "ngIfAnim", definitions: [{ type: 0, name: "*", styles: { type: 6, styles: { height: "*", opacity: 1, "overflow-y": "hidden" }, offset: null }, options: undefined }, { type: 0, name: "void", styles: { type: 6, styles: { height: "0", opacity: 0, "overflow-y": "hidden" }, offset: null }, options: undefined }, { type: 1, expr: ":leave", animation: { type: 4, styles: null, timings: "250ms ease-out" }, options: null }, { type: 1, expr: ":enter", animation: { type: 4, styles: null, timings: "250ms ease-in" }, options: null }], options: {} }] } });

function View_MockSigninComponent_1(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](1, null, [" ", " "]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.success; _ck(_v, 1, 0, currVal_0); }); }
function View_MockSigninComponent_2(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 2, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 1, "span", [["class", "error"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](2, null, ["", ""]))], null, function (_ck, _v) { var currVal_0 = _v.context.ngIf; _ck(_v, 2, 0, currVal_0); }); }
function View_MockSigninComponent_3(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 48, "div", [], [[24, "@ngIfAnim", 0]], null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 1, "h3", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Test Sign-Ins"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 45, "table", [["class", "table interactive-table"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](4, 0, null, null, 44, "tbody", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](5, 0, null, null, 8, "tr", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](6, 0, null, null, 1, "th", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Role"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](8, 0, null, null, 1, "th", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["User"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](10, 0, null, null, 1, "th", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Username"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](12, 0, null, null, 1, "th", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Password"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](14, 0, null, null, 8, "tr", [], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.doSignin("sally.fixit@surepayroll.com") !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](15, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Administrator"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](17, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Sally Fixit"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](19, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["sally.fixit@surepayroll.com"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](21, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["higherGround2"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](23, 0, null, null, 8, "tr", [], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.doSignin("davidasher") !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](24, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Approver"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](26, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["David Asher"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](28, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["davidasher"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](30, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["cottonFields1"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](32, 0, null, null, 8, "tr", [], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.doSignin("zombie088") !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](33, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Approver"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](35, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Mark Moose"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](37, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["zombie088"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](39, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Password1"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](41, 0, null, null, 7, "tr", [], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.doSignin("imalost") !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](42, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Approver"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](44, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Doesn't exist"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](46, 0, null, null, 1, "td", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["imalost"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](48, 0, null, null, 0, "td", [], null, null, null, null, null))], null, function (_ck, _v) { var currVal_0 = undefined; _ck(_v, 0, 0, currVal_0); }); }
function View_MockSigninComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](402653184, 1, { form: 0 }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 51, "div", [["class", "d-flex flex-column"], ["id", "mock-signin-component"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](2, 0, null, null, 3, "header", [["class", "header-bold"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 2, "div", [["class", "card-center"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](4, 0, null, null, 1, "h1", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Mock Sign In"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](6, 0, null, null, 46, "div", [["class", "standard card-center"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](7, 0, null, null, 1, "h2", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["This is a demo!"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](9, 0, null, null, 5, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](10, 0, null, null, 4, "a", [["class", "sign-in"], ["routerLink", "/signup"]], [[1, "target", 0], [8, "href", 4]], [[null, "click"]], function (_v, en, $event) { var ad = true; if (("click" === en)) {
        var pd_0 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 11).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](11, 671744, null, 0, _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterLinkWithHref"], [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["LocationStrategy"]], { routerLink: [0, "routerLink"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](12, 0, null, null, 1, "b", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Sign up"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" if you don't already have an account"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](15, 0, null, null, 29, "form", [["novalidate", ""]], [[2, "ng-untouched", null], [2, "ng-touched", null], [2, "ng-pristine", null], [2, "ng-dirty", null], [2, "ng-valid", null], [2, "ng-invalid", null], [2, "ng-pending", null]], [[null, "ngSubmit"], [null, "submit"], [null, "reset"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("submit" === en)) {
        var pd_0 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 17).onSubmit($event) !== false);
        ad = (pd_0 && ad);
    } if (("reset" === en)) {
        var pd_1 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 17).onReset() !== false);
        ad = (pd_1 && ad);
    } if (("ngSubmit" === en)) {
        var pd_2 = (_co.signin() !== false);
        ad = (pd_2 && ad);
    } return ad; }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](16, 16384, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ɵangular_packages_forms_forms_bg"], [], null, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](17, 4210688, [[1, 4], ["form", 4]], 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgForm"], [[8, null], [8, null]], null, { ngSubmit: "ngSubmit" }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵprd"](2048, null, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ControlContainer"], null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgForm"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](19, 16384, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControlStatusGroup"], [[4, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ControlContainer"]]], null, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](20, 737280, null, 0, _shared_validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_4__["FormDirective"], [_angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"]], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](21, 0, null, null, 21, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](22, 0, null, null, 7, "sp-input", [["id", "Username"], ["label", "Username"], ["name", "username"], ["placeholder", "username"], ["required", ""]], [[1, "required", 0], [2, "ng-untouched", null], [2, "ng-touched", null], [2, "ng-pristine", null], [2, "ng-dirty", null], [2, "ng-valid", null], [2, "ng-invalid", null], [2, "ng-pending", null]], [[null, "ngModelChange"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("ngModelChange" === en)) {
        var pd_0 = ((_co.vm.username = $event) !== false);
        ad = (pd_0 && ad);
    } return ad; }, _shared_input_input_text_component_ngfactory__WEBPACK_IMPORTED_MODULE_5__["View_InputTextComponent_0"], _shared_input_input_text_component_ngfactory__WEBPACK_IMPORTED_MODULE_5__["RenderType_InputTextComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](23, 16384, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["RequiredValidator"], [], { required: [0, "required"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵprd"](1024, null, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NG_VALIDATORS"], function (p0_0) { return [p0_0]; }, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["RequiredValidator"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](25, 4440064, null, 0, _shared_input_input_text_component__WEBPACK_IMPORTED_MODULE_6__["InputTextComponent"], [_shared_input_input_mask_catalog__WEBPACK_IMPORTED_MODULE_7__["InputMaskCatalog"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"], [2, _shared_model_component__WEBPACK_IMPORTED_MODULE_8__["ModelComponent"]]], { label: [0, "label"], name: [1, "name"], placeholder: [2, "placeholder"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵprd"](1024, null, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NG_VALUE_ACCESSOR"], function (p0_0) { return [p0_0]; }, [_shared_input_input_text_component__WEBPACK_IMPORTED_MODULE_6__["InputTextComponent"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](27, 671744, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgModel"], [[2, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ControlContainer"]], [6, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NG_VALIDATORS"]], [8, null], [6, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NG_VALUE_ACCESSOR"]]], { name: [0, "name"], model: [1, "model"] }, { update: "ngModelChange" }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵprd"](2048, null, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControl"], null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgModel"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](29, 16384, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControlStatus"], [[4, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControl"]]], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](30, 0, null, null, 7, "sp-input", [["id", "Password"], ["label", "Password"], ["name", "password"], ["placeholder", "password"], ["required", ""], ["type", "password"]], [[1, "required", 0], [2, "ng-untouched", null], [2, "ng-touched", null], [2, "ng-pristine", null], [2, "ng-dirty", null], [2, "ng-valid", null], [2, "ng-invalid", null], [2, "ng-pending", null]], [[null, "ngModelChange"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("ngModelChange" === en)) {
        var pd_0 = ((_co.vm.password = $event) !== false);
        ad = (pd_0 && ad);
    } return ad; }, _shared_input_input_text_component_ngfactory__WEBPACK_IMPORTED_MODULE_5__["View_InputTextComponent_0"], _shared_input_input_text_component_ngfactory__WEBPACK_IMPORTED_MODULE_5__["RenderType_InputTextComponent"])), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](31, 16384, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["RequiredValidator"], [], { required: [0, "required"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵprd"](1024, null, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NG_VALIDATORS"], function (p0_0) { return [p0_0]; }, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["RequiredValidator"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](33, 4440064, null, 0, _shared_input_input_text_component__WEBPACK_IMPORTED_MODULE_6__["InputTextComponent"], [_shared_input_input_mask_catalog__WEBPACK_IMPORTED_MODULE_7__["InputMaskCatalog"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"], [2, _shared_model_component__WEBPACK_IMPORTED_MODULE_8__["ModelComponent"]]], { label: [0, "label"], name: [1, "name"], placeholder: [2, "placeholder"], type: [3, "type"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵprd"](1024, null, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NG_VALUE_ACCESSOR"], function (p0_0) { return [p0_0]; }, [_shared_input_input_text_component__WEBPACK_IMPORTED_MODULE_6__["InputTextComponent"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](35, 671744, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgModel"], [[2, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ControlContainer"]], [6, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NG_VALIDATORS"]], [8, null], [6, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NG_VALUE_ACCESSOR"]]], { name: [0, "name"], model: [1, "model"] }, { update: "ngModelChange" }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵprd"](2048, null, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControl"], null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgModel"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](37, 16384, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControlStatus"], [[4, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControl"]]], null, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_MockSigninComponent_1)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](39, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 2, null, View_MockSigninComponent_2)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](41, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpid"](131072, _angular_common__WEBPACK_IMPORTED_MODULE_2__["AsyncPipe"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]]), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](43, 0, null, null, 1, "button", [["class", "btn btn-cta btn-cta btn-large"], ["type", "submit"], ["value", "login"]], [[8, "disabled", 0]], null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Sign In"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](45, 0, null, null, 0, "hr", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](46, 0, null, null, 6, "div", [["class", "mt-4"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](47, 0, null, null, 1, "button", [["class", "btn btn-cta btn-cta btn-large"]], [[8, "disabled", 0]], [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.resetMockedData() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Reset Mocked Data"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](49, 0, null, null, 1, "button", [["class", "btn btn-primary btn-large mt-2 mb-3"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.toggleShowTestAccounts() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Show/Hide Test Accounts"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_MockSigninComponent_3)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](52, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = "/signup"; _ck(_v, 11, 0, currVal_2); _ck(_v, 20, 0); var currVal_18 = ""; _ck(_v, 23, 0, currVal_18); var currVal_19 = "Username"; var currVal_20 = "username"; var currVal_21 = "username"; _ck(_v, 25, 0, currVal_19, currVal_20, currVal_21); var currVal_22 = "username"; var currVal_23 = _co.vm.username; _ck(_v, 27, 0, currVal_22, currVal_23); var currVal_32 = ""; _ck(_v, 31, 0, currVal_32); var currVal_33 = "Password"; var currVal_34 = "password"; var currVal_35 = "password"; var currVal_36 = "password"; _ck(_v, 33, 0, currVal_33, currVal_34, currVal_35, currVal_36); var currVal_37 = "password"; var currVal_38 = _co.vm.password; _ck(_v, 35, 0, currVal_37, currVal_38); var currVal_39 = !!_co.success; _ck(_v, 39, 0, currVal_39); var currVal_40 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵunv"](_v, 41, 0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 42).transform(_co.errors$)); _ck(_v, 41, 0, currVal_40); var currVal_43 = _co.showTestAccounts; _ck(_v, 52, 0, currVal_43); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 11).target; var currVal_1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 11).href; _ck(_v, 10, 0, currVal_0, currVal_1); var currVal_3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 19).ngClassUntouched; var currVal_4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 19).ngClassTouched; var currVal_5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 19).ngClassPristine; var currVal_6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 19).ngClassDirty; var currVal_7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 19).ngClassValid; var currVal_8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 19).ngClassInvalid; var currVal_9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 19).ngClassPending; _ck(_v, 15, 0, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9); var currVal_10 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 23).required ? "" : null); var currVal_11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 29).ngClassUntouched; var currVal_12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 29).ngClassTouched; var currVal_13 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 29).ngClassPristine; var currVal_14 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 29).ngClassDirty; var currVal_15 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 29).ngClassValid; var currVal_16 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 29).ngClassInvalid; var currVal_17 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 29).ngClassPending; _ck(_v, 22, 0, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17); var currVal_24 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 31).required ? "" : null); var currVal_25 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 37).ngClassUntouched; var currVal_26 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 37).ngClassTouched; var currVal_27 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 37).ngClassPristine; var currVal_28 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 37).ngClassDirty; var currVal_29 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 37).ngClassValid; var currVal_30 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 37).ngClassInvalid; var currVal_31 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 37).ngClassPending; _ck(_v, 30, 0, currVal_24, currVal_25, currVal_26, currVal_27, currVal_28, currVal_29, currVal_30, currVal_31); var currVal_41 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 17).pristine || _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 17).invalid); _ck(_v, 43, 0, currVal_41); var currVal_42 = _co.disableClearMockDb; _ck(_v, 47, 0, currVal_42); }); }
function View_MockSigninComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-mock-signin", [], null, null, null, View_MockSigninComponent_0, RenderType_MockSigninComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 114688, null, 0, _mock_signin_component__WEBPACK_IMPORTED_MODULE_9__["MockSigninComponent"], [_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_10__["AuthService"], _mock_services_in_memory_data_service__WEBPACK_IMPORTED_MODULE_11__["InMemoryDataService"], _core_services_auth_services_oidc_manager_factory__WEBPACK_IMPORTED_MODULE_12__["OidcManagerFactory"], _store_session_session_service__WEBPACK_IMPORTED_MODULE_13__["SessionService"]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var MockSigninComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-mock-signin", _mock_signin_component__WEBPACK_IMPORTED_MODULE_9__["MockSigninComponent"], View_MockSigninComponent_Host_0, {}, {}, []);



/***/ }),

/***/ "./src/app/mock-signin/mock-signin.component.ts":
/*!******************************************************!*\
  !*** ./src/app/mock-signin/mock-signin.component.ts ***!
  \******************************************************/
/*! exports provided: MockSigninComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MockSigninComponent", function() { return MockSigninComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _mock_services_in_memory_data_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mock-services/in-memory-data.service */ "./src/app/mock-services/in-memory-data.service.ts");
/* harmony import */ var _mock_services_http_client_backend_service_sp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../mock-services/http-client-backend-service-sp */ "./src/app/mock-services/http-client-backend-service-sp.ts");
/* harmony import */ var _mock_auth_mock_oidc_manager_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../mock-auth/mock-oidc-manager-factory */ "./src/app/mock-auth/mock-oidc-manager-factory.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");







var MockSigninComponent = /** @class */ (function () {
    function MockSigninComponent(authService, inMemoryDataService, mgrfactory, sessionService) {
        this.authService = authService;
        this.inMemoryDataService = inMemoryDataService;
        this.sessionService = sessionService;
        this.disableClearMockDb = false;
        this.showTestAccounts = false;
        this.mockOidcManager = mgrfactory.proxy.useMock();
        this.vm = {
            username: null,
            password: null
        };
    }
    MockSigninComponent.prototype.ngOnInit = function () {
        this.errors$ = this.authService.errors$;
        this.sessionService.clearCurrentAccount();
        this.authService.logEvent('MockSiginComponent initialized; calling sessionService.clearCurrentAccount()');
    };
    MockSigninComponent.prototype.resetMockedData = function () {
        this.disableClearMockDb = true;
        if (window.localStorage) {
            window.localStorage.removeItem(_mock_services_http_client_backend_service_sp__WEBPACK_IMPORTED_MODULE_4__["mockDbKey"]);
        }
        this.inMemoryDataService.createInitialMockDb().subscribe();
    };
    MockSigninComponent.prototype.signin = function () {
        var _a = this.form, dirty = _a.dirty, valid = _a.valid, value = _a.value;
        var username = value.username;
        var password = value.password;
        this.doSignin(username); // password doesn't matter
    };
    MockSigninComponent.prototype.doSignin = function (username) {
        this.authService.logEvent("MockSiginComponent subscribing to authService.signinRedirectCallback({" + username + "})");
        this.authService.signinRedirectCallback({ username: username }).subscribe();
    };
    MockSigninComponent.prototype.toggleShowTestAccounts = function () {
        this.showTestAccounts = !this.showTestAccounts;
    };
    return MockSigninComponent;
}());



/***/ }),

/***/ "./src/app/mock-signin/mock-signin.module.ts":
/*!***************************************************!*\
  !*** ./src/app/mock-signin/mock-signin.module.ts ***!
  \***************************************************/
/*! exports provided: MockSigninModule, ɵ0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MockSigninModule", function() { return MockSigninModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ0", function() { return ɵ0; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _mock_signin_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mock-signin.component */ "./src/app/mock-signin/mock-signin.component.ts");


var ɵ0 = { title: 'Mock Signin' };
var routes = [
    {
        path: 'mock-signin',
        pathMatch: 'full',
        component: _mock_signin_component__WEBPACK_IMPORTED_MODULE_1__["MockSigninComponent"],
        data: ɵ0
    },
];
var MockSigninModule = /** @class */ (function () {
    function MockSigninModule() {
    }
    return MockSigninModule;
}());




/***/ }),

/***/ "./src/app/model/codes-enums/code.ts":
/*!*******************************************!*\
  !*** ./src/app/model/codes-enums/code.ts ***!
  \*******************************************/
/*! exports provided: Codes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Codes", function() { return Codes; });
var Codes = /** @class */ (function () {
    function Codes(codes) {
        this.codes = codes;
    }
    Object.defineProperty(Codes.prototype, "values", {
        /** All of the code values */
        get: function () {
            return this.codes.map(function (item) { return item.value; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Codes.prototype, "names", {
        /** All of the code display names */
        get: function () {
            return this.codes.map(function (item) { return item.displayName; });
        },
        enumerable: true,
        configurable: true
    });
    /** Get the code object by its display name */
    Codes.prototype.getByDisplayName = function (name) {
        return name == null ? null : this.codes.find(function (item) { return item.displayName === name; });
    };
    /** Get the code object by its value (the value of the property) */
    Codes.prototype.getByValue = function (value) {
        return value == null ? null : this.codes.find(function (item) { return item.value === value; });
    };
    /** Get the code's display name, given the code value (AKA its "code")*/
    Codes.prototype.getDisplayName = function (value) {
        var code = this.getByValue(value);
        return code ? code.displayName : '';
    };
    /** Get the code value, given the code's display name */
    Codes.prototype.getValue = function (displayName) {
        var code = this.getByDisplayName(displayName);
        return code ? code.displayName : '';
    };
    return Codes;
}());



/***/ }),

/***/ "./src/app/model/codes-enums/enums.ts":
/*!********************************************!*\
  !*** ./src/app/model/codes-enums/enums.ts ***!
  \********************************************/
/*! exports provided: AccountStatus, AccountStatusCodes, CompanyType, CompanyTypeCodes, CompanyTitles, EmployeeStatus, EmployeeType, EnvelopeStatus, FedFilingStatus, FeinStatus, HouseholdFilersStatus, PaymentAccountType, PaymentStrategy, PaymentMethod, PayrollFrequency, PayrollFrequencyCodes, SectionStatus, SeinStatus, Sex, SexCodes, StateFilingStatus, SuiStatus, TaxCategoryCode, TaxExemptionReason, TaxExemptionReasonsCodes, TaxRateType, TaxTypeCode, UserRole, CalendarState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountStatus", function() { return AccountStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountStatusCodes", function() { return AccountStatusCodes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyType", function() { return CompanyType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyTypeCodes", function() { return CompanyTypeCodes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyTitles", function() { return CompanyTitles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmployeeStatus", function() { return EmployeeStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmployeeType", function() { return EmployeeType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EnvelopeStatus", function() { return EnvelopeStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FedFilingStatus", function() { return FedFilingStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FeinStatus", function() { return FeinStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HouseholdFilersStatus", function() { return HouseholdFilersStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaymentAccountType", function() { return PaymentAccountType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaymentStrategy", function() { return PaymentStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaymentMethod", function() { return PaymentMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PayrollFrequency", function() { return PayrollFrequency; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PayrollFrequencyCodes", function() { return PayrollFrequencyCodes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SectionStatus", function() { return SectionStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SeinStatus", function() { return SeinStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sex", function() { return Sex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SexCodes", function() { return SexCodes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StateFilingStatus", function() { return StateFilingStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SuiStatus", function() { return SuiStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxCategoryCode", function() { return TaxCategoryCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxExemptionReason", function() { return TaxExemptionReason; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxExemptionReasonsCodes", function() { return TaxExemptionReasonsCodes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxRateType", function() { return TaxRateType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxTypeCode", function() { return TaxTypeCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserRole", function() { return UserRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalendarState", function() { return CalendarState; });
/* harmony import */ var _code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./code */ "./src/app/model/codes-enums/code.ts");

/** Account status (in the Company.status)*/
var AccountStatus;
(function (AccountStatus) {
    /** User is actively entering data. */
    AccountStatus["Open"] = "Open";
    /**
     * Awaiting signed docs after user reviewed, validated, and submitted for payroll.
     * User cannot make more changes.
     * Operations can.
     */
    AccountStatus["Docs"] = "Docs";
    /** Done with docs and attempting to auto-migrate.  Will end up in either Operations or Enrolled. */
    AccountStatus["AutoMigrate"] = "AutoMigrate";
    /**
     * Operations is working to get this account enrolled after user
     * completed his/her part and signed the docs.
     * Operations may make changes.
     */
    AccountStatus["Operations"] = "Operations";
    /** DO NOT TOUCH! The system is in the middle of automatically migrating this account to payroll. */
    AccountStatus["Migrating"] = "Migrating";
    /** CLOSED! Account is enrolled in the payroll system.*/
    AccountStatus["Enrolled"] = "Enrolled";
    /**
     * Test account, still active as determined by operations.
     * Can still edit and even sign docs but will never be migrated to payroll.
     */
    AccountStatus["Test"] = "Test";
    /**
     * Abandoned by the user, as determined by operations.
     * No more activity allowed.
     * All users locked out. Admin must re-open to change.
     * Will never be migrated to payroll in this state.
     */
    AccountStatus["Abandoned"] = "Abandoned";
})(AccountStatus || (AccountStatus = {}));
/** AccountStatus enum codes */
var AccountStatusCodes = new _code__WEBPACK_IMPORTED_MODULE_0__["Codes"]([
    // Order matters for select options.
    // Reflects the primary workflow.
    { displayName: 'Open', value: AccountStatus.Open },
    { displayName: 'Docs', value: AccountStatus.Docs },
    { displayName: 'AutoMigrate', value: AccountStatus.AutoMigrate },
    { displayName: 'Operations', value: AccountStatus.Operations },
    { displayName: 'Migrating', value: AccountStatus.Migrating },
    { displayName: 'Enrolled', value: AccountStatus.Enrolled },
    { displayName: 'Abandoned', value: AccountStatus.Abandoned },
    { displayName: 'Test', value: AccountStatus.Test },
]);
var CompanyType;
(function (CompanyType) {
    CompanyType["Corporation"] = "Corporation";
    CompanyType["GeneralPartnership"] = "General Partnership";
    CompanyType["LLC"] = "Limited Liability Company";
    CompanyType["LimitedPartnership"] = "Limited Partnership";
    CompanyType["SoleProprietorship"] = "Sole Proprietorship";
    CompanyType["Household"] = "Household";
    CompanyType["NonProfit"] = "Non-Profit";
})(CompanyType || (CompanyType = {}));
var CompanyTypeCodes = new _code__WEBPACK_IMPORTED_MODULE_0__["Codes"]([
    { displayName: 'Corporation', value: CompanyType.Corporation },
    { displayName: 'General Partnership', value: CompanyType.GeneralPartnership },
    { displayName: 'Limited Liability Company', value: CompanyType.LLC },
    { displayName: 'Limited Partnership', value: CompanyType.LimitedPartnership },
    { displayName: 'Sole Proprietorship', value: CompanyType.SoleProprietorship },
    { displayName: 'Household', value: CompanyType.Household },
    { displayName: 'Non-Profit', value: CompanyType.NonProfit },
]);
var CompanyTitles = (_a = {},
    _a[CompanyType.Corporation] = ['Officer', 'Owner', 'Principal', 'Accountant', 'Enrolled Agent'],
    _a[CompanyType.GeneralPartnership] = ['Partner', 'Owner', 'Principal', 'Accountant', 'Enrolled Agent'],
    _a[CompanyType.LLC] = ['Member', 'LLC Member', 'Principal', 'Accountant', 'Enrolled Agent'],
    _a[CompanyType.LimitedPartnership] = ['Partner', 'Limited Partner', 'Principal', 'Accountant', 'Enrolled Agent'],
    _a[CompanyType.SoleProprietorship] = ['Owner', 'Officer', 'Principal', 'Accountant', 'Enrolled Agent'],
    _a[CompanyType.Household] = ['Owner', 'Power of Attorney', 'Accountant', 'Enrolled Agent'],
    _a[CompanyType.NonProfit] = ['Partner', 'Owner', 'Officer', 'Executive Director', 'Principal', 'Accountant', 'Enrolled Agent'],
    _a);
var EmployeeStatus;
(function (EmployeeStatus) {
    EmployeeStatus["Active"] = "active";
    EmployeeStatus["NewHire"] = "newhire";
    EmployeeStatus["Terminated"] = "terminated";
})(EmployeeStatus || (EmployeeStatus = {}));
var EmployeeType;
(function (EmployeeType) {
    EmployeeType["Contractor"] = "contractor";
    EmployeeType["FullTime"] = "fulltime";
    EmployeeType["Officer"] = "officer";
    EmployeeType["PartTime"] = "parttime";
})(EmployeeType || (EmployeeType = {}));
/** From DocuSign */
var EnvelopeStatus;
(function (EnvelopeStatus) {
    /** Created locally, not pushed to DocuSign */
    EnvelopeStatus["local"] = "local";
    /** Pushed to DocuSign in "draft" status (docs and recipients can still be added) */
    EnvelopeStatus["draft"] = "draft";
    /** Pushed to DocuSign in "sent" status (sent by email OR available for in-app signing) */
    EnvelopeStatus["sent"] = "sent";
    /** Received? */
    EnvelopeStatus["delivered"] = "delivered";
    /** Signed */
    EnvelopeStatus["completed"] = "completed";
    /** Refused to sign */
    EnvelopeStatus["declined"] = "declined";
    /** Voided in DocuSign */
    EnvelopeStatus["voided"] = "voided";
})(EnvelopeStatus || (EnvelopeStatus = {}));
var FedFilingStatus;
(function (FedFilingStatus) {
    FedFilingStatus["Single"] = "single";
    FedFilingStatus["Married"] = "married";
    FedFilingStatus["MarriedFilinglySeparately"] = "married-filing-separately";
})(FedFilingStatus || (FedFilingStatus = {}));
var FeinStatus;
(function (FeinStatus) {
    /** The FEIN number is intrinsically invalid */
    FeinStatus["Invalid"] = "invalid";
    /** The entered FEIN has been verified and matches the Legal Name */
    FeinStatus["Verified"] = "verified";
    /**  Well-formed FEIN has been entered but is not verified */
    FeinStatus["Unverified"] = "unverified";
})(FeinStatus || (FeinStatus = {}));
var HouseholdFilersStatus;
(function (HouseholdFilersStatus) {
    HouseholdFilersStatus["Single"] = "single";
    HouseholdFilersStatus["Joint"] = "joint";
})(HouseholdFilersStatus || (HouseholdFilersStatus = {}));
/** EE Payment account type, e.g, "Checking" */
var PaymentAccountType;
(function (PaymentAccountType) {
    PaymentAccountType["Checking"] = "Checking";
    PaymentAccountType["Savings"] = "Savings";
    PaymentAccountType["PrintedCheck"] = "Printed Check";
})(PaymentAccountType || (PaymentAccountType = {}));
/** Whether EE is paid as a single amount, split by $, or split by % */
var PaymentStrategy;
(function (PaymentStrategy) {
    PaymentStrategy["SinglePayment"] = "single-payment";
    PaymentStrategy["SplitAmount"] = "split-amount";
    PaymentStrategy["SplitPercent"] = "split-percent";
})(PaymentStrategy || (PaymentStrategy = {}));
/** Whether EE is paid entirely by check or by deposit or both */
var PaymentMethod;
(function (PaymentMethod) {
    PaymentMethod["PrintedCheck"] = "paper-check";
    PaymentMethod["DepositOrPaycard"] = "deposit-or-paycard";
    PaymentMethod["Both"] = "both";
})(PaymentMethod || (PaymentMethod = {}));
var PayrollFrequency;
(function (PayrollFrequency) {
    PayrollFrequency["Weekly"] = "Weekly";
    PayrollFrequency["BiWeekly"] = "Bi-Weekly";
    PayrollFrequency["SemiMonthly"] = "Semi-Monthly";
    PayrollFrequency["Monthly"] = "Monthly";
    PayrollFrequency["Quarterly"] = "Quarterly";
    PayrollFrequency["Annual"] = "Annual";
})(PayrollFrequency || (PayrollFrequency = {}));
var PayrollFrequencyCodes = new _code__WEBPACK_IMPORTED_MODULE_0__["Codes"]([
    // Order matters for select options.
    { displayName: 'Weekly', value: 'Weekly' },
    { displayName: 'Bi-Weekly (Every Other Week)', value: 'Bi-Weekly' },
    { displayName: 'Semi-Monthly (Twice a Month)', value: 'Semi-Monthly' },
    { displayName: 'Monthly', value: 'Monthly' },
]);
var SectionStatus;
(function (SectionStatus) {
    SectionStatus["NotStarted"] = "NotStarted";
    SectionStatus["Invalid"] = "Invalid";
    SectionStatus["Valid"] = "Valid";
})(SectionStatus || (SectionStatus = {}));
var SeinStatus;
(function (SeinStatus) {
    SeinStatus["AppliedFor"] = "applied-for";
    SeinStatus["Unverified"] = "unverified";
    SeinStatus["Invalid"] = "invalid";
    SeinStatus["NA"] = "na";
    SeinStatus["Verified"] = "verified";
    SeinStatus["UseFein"] = "use-fein";
})(SeinStatus || (SeinStatus = {}));
var Sex;
(function (Sex) {
    Sex["Female"] = "F";
    Sex["Male"] = "M";
})(Sex || (Sex = {}));
var SexCodes = new _code__WEBPACK_IMPORTED_MODULE_0__["Codes"]([
    { displayName: 'Female', value: Sex.Female },
    { displayName: 'Male', value: Sex.Male },
]);
var StateFilingStatus;
(function (StateFilingStatus) {
    StateFilingStatus["Single"] = "single";
    StateFilingStatus["Married"] = "married";
    StateFilingStatus["MarriedFilingSeparately"] = "married-filing-separately";
})(StateFilingStatus || (StateFilingStatus = {}));
var SuiStatus;
(function (SuiStatus) {
    SuiStatus["AppliedFor"] = "applied-for";
    SuiStatus["Unverified"] = "unverified";
    SuiStatus["Invalid"] = "invalid";
    SuiStatus["Verified"] = "verified";
})(SuiStatus || (SuiStatus = {}));
var TaxCategoryCode;
(function (TaxCategoryCode) {
    TaxCategoryCode["FederalWH"] = "FEDWT";
    TaxCategoryCode["FutaER"] = "FUTAER";
})(TaxCategoryCode || (TaxCategoryCode = {}));
var TaxExemptionReason;
(function (TaxExemptionReason) {
    TaxExemptionReason["InsuranceAgentsOrSolicitors"] = "AGRIC";
    TaxExemptionReason["AgriculturalLabor"] = "AGRIC";
    TaxExemptionReason["DomesticServiceInCollegeClubs"] = "CLUB";
    TaxExemptionReason["DeceasedWorkersWages"] = "DECEAS";
    TaxExemptionReason["EmployersWhoseTaxabilityDependsUponNumberOfEmployees"] = "EMPNO";
    TaxExemptionReason["ForeignWorkersPerformingTemporaryAgriculturalLabor"] = "FAGRI";
    TaxExemptionReason["FamilyEmployees"] = "FAMILY";
    TaxExemptionReason["FederalEmployees"] = "FEDEMP";
    TaxExemptionReason["FishingAndRelatedActivities"] = "FISH";
    TaxExemptionReason["ForeignServiceByUSCitizens"] = "FORCIT";
    TaxExemptionReason["HouseholdWorkers"] = "HWORK";
    TaxExemptionReason["IndustrialHomeworkers"] = "INDUST";
    TaxExemptionReason["ForeignGovernmentAndInternationalOrganizations"] = "INTER";
    TaxExemptionReason["InternsWorkingInHospitals"] = "INTERN";
    TaxExemptionReason["Ministers"] = "MINIST";
    TaxExemptionReason["NewspaperCarriersUnder18"] = "NEW18";
    TaxExemptionReason["NewspaperAndMagazineVendors"] = "NEWSV";
    TaxExemptionReason["MembersOfReligiousOrdersWhoveNotTakenVowOfPoverty"] = "NPOV";
    TaxExemptionReason["NonProfitOrganizations"] = "NPROFIT";
    TaxExemptionReason["PatientsEmployedByHospitals"] = "PATIENT";
    TaxExemptionReason["Railroads"] = "RAIL";
    TaxExemptionReason["RealEstateAgentsAndDirectSellers"] = "REAL";
    TaxExemptionReason["ReligiousExemption"] = "RELIG";
    TaxExemptionReason["SicknessOrInjuryPayments"] = "SICKPAY";
    TaxExemptionReason["EmployeesOfStateGovernmentsAndPoliticalSubdivisions"] = "STATE";
    TaxExemptionReason["Students"] = "STUDENT";
    TaxExemptionReason["NonResidentAlienFJMVisa"] = "VISA";
    TaxExemptionReason["MembersOfReligiousOrdersWhoHaveTakenAVowOfPoverty"] = "VPOV";
})(TaxExemptionReason || (TaxExemptionReason = {}));
var TaxExemptionReasonsCodes = new _code__WEBPACK_IMPORTED_MODULE_0__["Codes"]([
    // Order matters for select options.
    { displayName: 'Insurance agents or solicitors', value: TaxExemptionReason.InsuranceAgentsOrSolicitors },
    { displayName: 'Agricultural labor', value: TaxExemptionReason.AgriculturalLabor },
    { displayName: 'Domestic service in college clubs', value: TaxExemptionReason.DomesticServiceInCollegeClubs },
    { displayName: 'Deceased worker\'s wages', value: TaxExemptionReason.DeceasedWorkersWages },
    {
        displayName: 'Employers whose taxability depends upon number of employees',
        value: TaxExemptionReason.EmployersWhoseTaxabilityDependsUponNumberOfEmployees
    },
    {
        displayName: 'Foreign workers performing temporary agricultural labor',
        value: TaxExemptionReason.ForeignWorkersPerformingTemporaryAgriculturalLabor
    },
    { displayName: 'Family employees', value: TaxExemptionReason.FamilyEmployees },
    { displayName: 'Federal employees', value: TaxExemptionReason.FederalEmployees },
    { displayName: 'Fishing and related activities', value: TaxExemptionReason.FishingAndRelatedActivities },
    { displayName: 'Foreign service by US citizens', value: TaxExemptionReason.ForeignServiceByUSCitizens },
    { displayName: 'Household workers', value: TaxExemptionReason.HouseholdWorkers },
    { displayName: 'Industrial homeworkers', value: TaxExemptionReason.IndustrialHomeworkers },
    {
        displayName: 'Foreign government and International organizations',
        value: TaxExemptionReason.ForeignGovernmentAndInternationalOrganizations
    },
    { displayName: 'Interns working in hospitals', value: TaxExemptionReason.InternsWorkingInHospitals },
    { displayName: 'Ministers', value: TaxExemptionReason.Ministers },
    { displayName: 'Newspaper carriers under 18', value: TaxExemptionReason.NewspaperCarriersUnder18 },
    { displayName: 'Newspaper and magazine vendors', value: TaxExemptionReason.NewspaperAndMagazineVendors },
    {
        displayName: 'Members of religious orders who\'ve not taken vow of poverty',
        value: TaxExemptionReason.MembersOfReligiousOrdersWhoveNotTakenVowOfPoverty
    },
    { displayName: 'Non-profit organizations', value: TaxExemptionReason.NonProfitOrganizations },
    { displayName: 'Patients employed by hospitals', value: TaxExemptionReason.PatientsEmployedByHospitals },
    { displayName: 'Railroads', value: TaxExemptionReason.Railroads },
    { displayName: 'Real estate agents and direct sellers', value: TaxExemptionReason.RealEstateAgentsAndDirectSellers },
    { displayName: 'Religious Exemption', value: TaxExemptionReason.ReligiousExemption },
    { displayName: 'Sickness or injury payments', value: TaxExemptionReason.SicknessOrInjuryPayments },
    {
        displayName: 'Employees of state governments and political subdivisions',
        value: TaxExemptionReason.EmployeesOfStateGovernmentsAndPoliticalSubdivisions
    },
    { displayName: 'Students', value: TaxExemptionReason.Students },
    { displayName: 'Non-Resident Alien F/J/M Visa', value: TaxExemptionReason.NonResidentAlienFJMVisa },
    {
        displayName: 'Members of religious orders who have taken a vow of poverty',
        value: TaxExemptionReason.MembersOfReligiousOrdersWhoHaveTakenAVowOfPoverty
    }
]);
var TaxRateType;
(function (TaxRateType) {
    TaxRateType["Fixed"] = "Default";
    TaxRateType["Variable"] = "Variable";
})(TaxRateType || (TaxRateType = {}));
var TaxTypeCode;
(function (TaxTypeCode) {
    TaxTypeCode["Federal"] = "FD";
    TaxTypeCode["State"] = "ST";
    TaxTypeCode["County"] = "CN";
    TaxTypeCode["City"] = "CT";
    TaxTypeCode["SchoolDistrict"] = "SD";
})(TaxTypeCode || (TaxTypeCode = {}));
var UserRole;
(function (UserRole) {
    /** SP ecommerce administrator with full access to all companies */
    UserRole["Administrator"] = "Administrator";
    /**
     * Agent empowered to enroll a company, such as a CPA.
     * An agent could access multiple companies.
     * Not implemented yet.
     */
    // Agent = 'Agent',
    /**
     * A user who can fully enroll a single company.
     * Not necessarily the principal/signer.
     */
    UserRole["Approver"] = "Approver";
    /**
     * An employee self-serve user, restricted to EE functions
     * Not implemented yet.
     */
    // Employee = 'Employee',
    /**
     * SP sales person with wide (but not unlimited) access to all companies.
     * Not implemented yet.
     */
    // Sales = 'Sales'
})(UserRole || (UserRole = {}));
var CalendarState;
(function (CalendarState) {
    CalendarState["Disabled"] = "";
    CalendarState["PeriodStart"] = "from";
    CalendarState["PeriodEnd"] = "to";
    CalendarState["Check"] = "check";
    CalendarState["SecondPeriodStart"] = "secondFrom";
    CalendarState["SecondPeriodEnd"] = "secondTo";
    CalendarState["SecondCheck"] = "secondCheck";
})(CalendarState || (CalendarState = {}));
var _a;


/***/ }),

/***/ "./src/app/model/codes-enums/index.ts":
/*!********************************************!*\
  !*** ./src/app/model/codes-enums/index.ts ***!
  \********************************************/
/*! exports provided: Codes, AccountStatus, AccountStatusCodes, CompanyType, CompanyTypeCodes, CompanyTitles, EmployeeStatus, EmployeeType, EnvelopeStatus, FedFilingStatus, FeinStatus, HouseholdFilersStatus, PaymentAccountType, PaymentStrategy, PaymentMethod, PayrollFrequency, PayrollFrequencyCodes, SectionStatus, SeinStatus, Sex, SexCodes, StateFilingStatus, SuiStatus, TaxCategoryCode, TaxExemptionReason, TaxExemptionReasonsCodes, TaxRateType, TaxTypeCode, UserRole, CalendarState, USStateCodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./code */ "./src/app/model/codes-enums/code.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Codes", function() { return _code__WEBPACK_IMPORTED_MODULE_0__["Codes"]; });

/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enums */ "./src/app/model/codes-enums/enums.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccountStatus", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["AccountStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccountStatusCodes", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["AccountStatusCodes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyType", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["CompanyType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyTypeCodes", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["CompanyTypeCodes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyTitles", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["CompanyTitles"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeStatus", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["EmployeeStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeType", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["EmployeeType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EnvelopeStatus", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["EnvelopeStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FedFilingStatus", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["FedFilingStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FeinStatus", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["FeinStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HouseholdFilersStatus", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["HouseholdFilersStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PaymentAccountType", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["PaymentAccountType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PaymentStrategy", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["PaymentStrategy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PaymentMethod", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["PaymentMethod"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayrollFrequency", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["PayrollFrequency"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayrollFrequencyCodes", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["PayrollFrequencyCodes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SectionStatus", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["SectionStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SeinStatus", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["SeinStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sex", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["Sex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SexCodes", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["SexCodes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StateFilingStatus", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["StateFilingStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SuiStatus", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["SuiStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxCategoryCode", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["TaxCategoryCode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxExemptionReason", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["TaxExemptionReason"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxExemptionReasonsCodes", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["TaxExemptionReasonsCodes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxRateType", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["TaxRateType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxTypeCode", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["TaxTypeCode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserRole", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["UserRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarState", function() { return _enums__WEBPACK_IMPORTED_MODULE_1__["CalendarState"]; });

/* harmony import */ var _us_state_codes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./us-state-codes */ "./src/app/model/codes-enums/us-state-codes.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "USStateCodes", function() { return _us_state_codes__WEBPACK_IMPORTED_MODULE_2__["USStateCodes"]; });






/***/ }),

/***/ "./src/app/model/codes-enums/us-state-codes.ts":
/*!*****************************************************!*\
  !*** ./src/app/model/codes-enums/us-state-codes.ts ***!
  \*****************************************************/
/*! exports provided: USStateCodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "USStateCodes", function() { return USStateCodes; });
/* harmony import */ var _code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./code */ "./src/app/model/codes-enums/code.ts");

var USStateCodes = new _code__WEBPACK_IMPORTED_MODULE_0__["Codes"]([
    { displayName: 'Alabama', value: 'AL' },
    { displayName: 'Alaska', value: 'AK' },
    { displayName: 'Arizona', value: 'AZ' },
    { displayName: 'Arkansas', value: 'AR' },
    { displayName: 'California', value: 'CA' },
    { displayName: 'Colorado', value: 'CO' },
    { displayName: 'Connecticut', value: 'CT' },
    { displayName: 'Delaware', value: 'DE' },
    { displayName: 'District of Columbia', value: 'DC' },
    { displayName: 'Florida', value: 'FL' },
    { displayName: 'Georgia', value: 'GA' },
    { displayName: 'Hawaii', value: 'HI' },
    { displayName: 'Idaho', value: 'ID' },
    { displayName: 'Illinois', value: 'IL' },
    { displayName: 'Indiana', value: 'IN' },
    { displayName: 'Iowa', value: 'IA' },
    { displayName: 'Kansas', value: 'KS' },
    { displayName: 'Kentucky', value: 'KY' },
    { displayName: 'Louisiana', value: 'LA' },
    { displayName: 'Maine', value: 'ME' },
    { displayName: 'Maryland', value: 'MD' },
    { displayName: 'Massachusetts', value: 'MA' },
    { displayName: 'Michigan', value: 'MI' },
    { displayName: 'Minnesota', value: 'MN' },
    { displayName: 'Mississippi', value: 'MS' },
    { displayName: 'Missouri', value: 'MO' },
    { displayName: 'Montana', value: 'MT' },
    { displayName: 'Nebraska', value: 'NE' },
    { displayName: 'Nevada', value: 'NV' },
    { displayName: 'New Hampshire', value: 'NH' },
    { displayName: 'New Jersey', value: 'NJ' },
    { displayName: 'New Mexico', value: 'NM' },
    { displayName: 'New York', value: 'NY' },
    { displayName: 'North Carolina', value: 'NC' },
    { displayName: 'North Dakota', value: 'ND' },
    { displayName: 'Ohio', value: 'OH' },
    { displayName: 'Oklahoma', value: 'OK' },
    { displayName: 'Oregon', value: 'OR' },
    { displayName: 'Pennsylvania', value: 'PA' },
    { displayName: 'Rhode Island', value: 'RI' },
    { displayName: 'South Carolina', value: 'SC' },
    { displayName: 'South Dakota', value: 'SD' },
    { displayName: 'Tennessee', value: 'TN' },
    { displayName: 'Texas', value: 'TX' },
    { displayName: 'Utah', value: 'UT' },
    { displayName: 'Vermont', value: 'VT' },
    { displayName: 'Virginia', value: 'VA' },
    { displayName: 'Washington', value: 'WA' },
    { displayName: 'West Virginia', value: 'WV' },
    { displayName: 'Wisconsin', value: 'WI' },
    { displayName: 'Wyoming', value: 'WY' },
]);


/***/ }),

/***/ "./src/app/model/entities/address.ts":
/*!*******************************************!*\
  !*** ./src/app/model/entities/address.ts ***!
  \*******************************************/
/*! exports provided: Address */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Address", function() { return Address; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
/* harmony import */ var _utils_address_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utils/address-utils */ "./src/app/core/utils/address-utils.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/** An address for Company work address or EE residence */
var Address = /** @class */ (function (_super) {
    __extends(Address, _super);
    function Address(id, companyId) {
        var _this = _super.call(this, id, companyId) || this;
        _this.street1 = '';
        _this.street2 = '';
        _this.city = ''; // locality
        _this.state = ''; // "administrative_area_level_1"
        _this.zip = ''; // postal_code (including possible suffix)
        _this.country = 'US';
        /** True if this is an Employee's home address. */
        _this.isHome = false;
        /** True if this is the company's main address. */
        _this.isMain = false;
        /** If the address is verified and taxes usable. */
        _this.isVerified = false;
        /** True when marked-for-delete. */
        _this.isRemoved = false;
        return _this;
    }
    /** Create clean clone of an Address */
    Address.create = function (address) {
        address = address || {};
        return Object.assign(new Address(address.id, address.companyId), {
            street1: (address.street1 || '').trim(),
            street2: (address.street2 || '').trim(),
            city: (address.city || '').trim(),
            state: (address.state || '').trim(),
            zip: (address.zip || '').trim(),
            // country: 'US', // Always the US
            isHome: address.isHome === true,
            isMain: address.isMain === true,
            geoCode: address.geoCode || null,
            schoolDistrictCode: address.schoolDistrictCode || null,
            psdCode: address.psdCode || null,
            isVerified: address.isVerified === true,
            isRemoved: !address.isMain && address.isRemoved === true
        });
    };
    /**
     * Create a new Address for a company.
     * This address belongs to the company but has no Address id.
     * @param company Company to which the address belongs
     * @param [isMain] True if this is the company's main location (default false)
     */
    Address.createNewCompanyAddress = function (company, isMain) {
        if (isMain === void 0) { isMain = false; }
        return Address.create({
            companyId: company.id,
            isHome: false,
            isMain: isMain === true
        });
    };
    /**
     * Create a new home Address for an Employee.
     * It belongs to the EE's company but has no Address id
     * and is not (yet) associated with that Employee.
     * @param company Company to which the address belongs
     */
    Address.createNewEmployeeAddress = function (employee) {
        return Address.create({
            companyId: employee.companyId,
            isHome: true,
            isMain: false
        });
    };
    Address.prototype.toString = function () {
        return Object(_utils_address_utils__WEBPACK_IMPORTED_MODULE_1__["addressToString"])(this);
    };
    return Address;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/ancillary.ts":
/*!*********************************************!*\
  !*** ./src/app/model/entities/ancillary.ts ***!
  \*********************************************/
/*! exports provided: Ancillary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ancillary", function() { return Ancillary; });
/** Ancillary */
var Ancillary = /** @class */ (function () {
    function Ancillary() {
    }
    return Ancillary;
}());



/***/ }),

/***/ "./src/app/model/entities/company-ancillary.ts":
/*!*****************************************************!*\
  !*** ./src/app/model/entities/company-ancillary.ts ***!
  \*****************************************************/
/*! exports provided: CompanyAncillary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyAncillary", function() { return CompanyAncillary; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var CompanyAncillary = /** @class */ (function (_super) {
    __extends(CompanyAncillary, _super);
    function CompanyAncillary() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CompanyAncillary;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/company-deduction.ts":
/*!*****************************************************!*\
  !*** ./src/app/model/entities/company-deduction.ts ***!
  \*****************************************************/
/*! exports provided: CompanyDeduction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyDeduction", function() { return CompanyDeduction; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/**
 * A deduction of a Company
 * Company has a list of CompanyDeductions with some parametrization
 * where deductions types are a subset of available deductions.
 */
var CompanyDeduction = /** @class */ (function (_super) {
    __extends(CompanyDeduction, _super);
    function CompanyDeduction(deduction) {
        var _this = _super.call(this) || this;
        _this.parameters = [];
        _this.isRemoved = false;
        _this.deductionCodeTypeId = deduction.codeTypeId;
        _this.abbreviation = deduction.defaultAbbreviation;
        _this.description = deduction.defaultDescription;
        _this.deductionPlanTaxOptionCode = deduction.deductionPlanTaxOptionCode;
        return _this;
    }
    return CompanyDeduction;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/company-earning.ts":
/*!***************************************************!*\
  !*** ./src/app/model/entities/company-earning.ts ***!
  \***************************************************/
/*! exports provided: CompanyEarning */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyEarning", function() { return CompanyEarning; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var CompanyEarning = /** @class */ (function (_super) {
    __extends(CompanyEarning, _super);
    function CompanyEarning(earning) {
        var _this = _super.call(this) || this;
        _this.isRemoved = false;
        _this.earningCode = earning.code;
        _this.description = earning.description;
        _this.name = earning.name;
        return _this;
    }
    return CompanyEarning;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/company-entity-base.ts":
/*!*******************************************************!*\
  !*** ./src/app/model/entities/company-entity-base.ts ***!
  \*******************************************************/
/*! exports provided: CompanyEntityBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyEntityBase", function() { return CompanyEntityBase; });
/**
 * Every entity class belonging to a specific Company implements or inherits from this class
 */
// Except Company itself, whose id is the companyId
var CompanyEntityBase = /** @class */ (function () {
    function CompanyEntityBase(id, companyId) {
        // allow null but not undefined;
        this.id = id || null;
        this.companyId = companyId || null;
    }
    return CompanyEntityBase;
}());



/***/ }),

/***/ "./src/app/model/entities/company-tax.ts":
/*!***********************************************!*\
  !*** ./src/app/model/entities/company-tax.ts ***!
  \***********************************************/
/*! exports provided: CompanyTax */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyTax", function() { return CompanyTax; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/** Company Tax code */
var CompanyTax = /** @class */ (function (_super) {
    __extends(CompanyTax, _super);
    function CompanyTax() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** Applied for a ein. If this is active the ein is not required. */
        _this.appliedForEin = false;
        /** If the company is exempt from paying this tax */
        _this.isExempt = false;
        /** When the code is active */
        _this.isActive = true;
        /** True when marked-for-delete */
        _this.isRemoved = false;
        return _this;
    }
    CompanyTax.create = function (companyTax) {
        if (companyTax == null || companyTax.id == null || companyTax.companyId == null) {
            throw Error('CompanyTax can\'t be created without specifying a id, company');
        }
        return Object.assign(new CompanyTax(companyTax.id, companyTax.companyId), companyTax);
    };
    return CompanyTax;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/company.ts":
/*!*******************************************!*\
  !*** ./src/app/model/entities/company.ts ***!
  \*******************************************/
/*! exports provided: Company, REASON_SERVICE_UNAVAILABLE, companyKind */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Company", function() { return Company; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REASON_SERVICE_UNAVAILABLE", function() { return REASON_SERVICE_UNAVAILABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "companyKind", function() { return companyKind; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
/* harmony import */ var _utils_date_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utils/date-utils */ "./src/app/core/utils/date-utils.ts");
/* harmony import */ var _model_codes_enums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @model/codes-enums */ "./src/app/model/codes-enums/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/** Customer company */
var Company = /** @class */ (function (_super) {
    __extends(Company, _super);
    function Company() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.status = _model_codes_enums__WEBPACK_IMPORTED_MODULE_2__["AccountStatus"].Open;
        /** Household or Company discriminator */
        _this.isHousehold = false;
        /** True if the user is finished adding Ees (or intends not to add any at all) */
        _this.doneAddingEmployees = false;
        /** Bank name that goes with the RN number. Set when have verified the RN */
        _this.bankName = '';
        /**
         * ISO date string when this customer's enrollment process began.
         * Time is deliberately pinned to midday in Chicago
         */
        _this.enrollmentStartDate = Object(_utils_date_utils__WEBPACK_IMPORTED_MODULE_1__["dateToday"])();
        /** Number of times validated. Will prevent further (expensive) validation after some number of tries */
        _this.feinValidationCount = 0;
        /** Is the Company an agricultural company */
        _this.isAgricultural = false;
        /** do we show earnings tab */
        _this.showEarningsTab = false;
        return _this;
    }
    return Company;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));

var REASON_SERVICE_UNAVAILABLE = 'ServiceUnavailable';
/** Returns the displayable "kind" of customer - 'Household' or 'Company' */
function companyKind(company) {
    return company ? company.isHousehold ? 'Household' : 'Company' : '-';
}


/***/ }),

/***/ "./src/app/model/entities/deduction.ts":
/*!*********************************************!*\
  !*** ./src/app/model/entities/deduction.ts ***!
  \*********************************************/
/*! exports provided: WellKnownDeductionsCodeTypeId, Deduction, deductionIsCustomType, DeductionKeyValue, DeductionPlanType, DeductionPlanMatchOptionType, RetirementPlans, RetirementPlanTypes, RetirementPlanApply, MatchTypes, EmployeeContributionModel, DeductionParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WellKnownDeductionsCodeTypeId", function() { return WellKnownDeductionsCodeTypeId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Deduction", function() { return Deduction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deductionIsCustomType", function() { return deductionIsCustomType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeductionKeyValue", function() { return DeductionKeyValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeductionPlanType", function() { return DeductionPlanType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeductionPlanMatchOptionType", function() { return DeductionPlanMatchOptionType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RetirementPlans", function() { return RetirementPlans; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RetirementPlanTypes", function() { return RetirementPlanTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RetirementPlanApply", function() { return RetirementPlanApply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatchTypes", function() { return MatchTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmployeeContributionModel", function() { return EmployeeContributionModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeductionParameter", function() { return DeductionParameter; });
/* Data modeling based on sample: https://docs.google.com/spreadsheets/d/1NNeU0hMa-7UJE7__PhnHD5uMhQrjbLxt43elLI2cqA0/edit#gid=922537075 */
var WellKnownDeductionsCodeTypeId;
(function (WellKnownDeductionsCodeTypeId) {
    WellKnownDeductionsCodeTypeId[WellKnownDeductionsCodeTypeId["MiscellaneousWithGoal"] = 56] = "MiscellaneousWithGoal";
    WellKnownDeductionsCodeTypeId[WellKnownDeductionsCodeTypeId["MiscellaneousNoGoal"] = 57] = "MiscellaneousNoGoal";
})(WellKnownDeductionsCodeTypeId || (WellKnownDeductionsCodeTypeId = {}));
/** Deduction metadata - general information about a deduction */
var Deduction = /** @class */ (function () {
    function Deduction() {
    }
    return Deduction;
}());

function deductionIsCustomType(deduction) {
    return deduction.codeTypeId === 56 || // Miscellaneous with Goal
        deduction.codeTypeId === 57; // Miscellaneous No Goal
}
/**
 * This class captures values for Deductions's paremeters when instanciated
 */
var DeductionKeyValue = /** @class */ (function () {
    /**
     * Constructor:
     * @param key Name/Key of the parameter
     * @param type Type of the value
     * @param value Actual value stored for the parameter (Amount)
     * @param goal Numeric goal or limit for the value (optional)
     */
    function DeductionKeyValue(key, type, value, goal) {
        this.key = key;
        this.type = type;
        this.value = value;
        this.goal = goal;
    }
    return DeductionKeyValue;
}());

var DeductionPlanType;
(function (DeductionPlanType) {
    DeductionPlanType["PRETAX"] = "PRETAX";
    DeductionPlanType["POSTTAX"] = "POSTTAX";
    DeductionPlanType["NOEEDEDUCT"] = "NOEEDEDUCT";
})(DeductionPlanType || (DeductionPlanType = {}));
var DeductionPlanMatchOptionType;
(function (DeductionPlanMatchOptionType) {
    DeductionPlanMatchOptionType["NOMATCH"] = "NOMATCH";
    DeductionPlanMatchOptionType["NONELECTIV"] = "NONELECTIV";
    DeductionPlanMatchOptionType["NOORSINGLE"] = "NOORSINGLE";
    DeductionPlanMatchOptionType["SNGLORTWO"] = "SNGLORTWO";
    DeductionPlanMatchOptionType["TWOTIER"] = "TWOTIER";
})(DeductionPlanMatchOptionType || (DeductionPlanMatchOptionType = {}));
var RetirementPlans;
(function (RetirementPlans) {
    RetirementPlans["IRA"] = "IRA";
    RetirementPlans["Plan401K"] = "401K";
    RetirementPlans["Plan403B"] = "403B";
})(RetirementPlans || (RetirementPlans = {}));
var RetirementPlanTypes;
(function (RetirementPlanTypes) {
    RetirementPlanTypes["P401KTraditional"] = "401KTraditional";
    RetirementPlanTypes["P401KSafeHarbor"] = "401KSafeHarbor";
    RetirementPlanTypes["P401KSimple"] = "401KSimple";
    RetirementPlanTypes["SimpleIRA"] = "SimpleIRA";
    RetirementPlanTypes["SepIRA"] = "SepIRA";
})(RetirementPlanTypes || (RetirementPlanTypes = {}));
var RetirementPlanApply;
(function (RetirementPlanApply) {
    RetirementPlanApply["PreTax"] = "PreTax";
    RetirementPlanApply["PostTax"] = "PostTax";
})(RetirementPlanApply || (RetirementPlanApply = {}));
var MatchTypes;
(function (MatchTypes) {
    MatchTypes["NoMatch"] = "NoMatch";
    MatchTypes["SingleTier"] = "SingleTier";
    MatchTypes["TwoTiers"] = "TwoTiers";
})(MatchTypes || (MatchTypes = {}));
var EmployeeContributionModel;
(function (EmployeeContributionModel) {
    EmployeeContributionModel["PreTax"] = "PRETAX";
    EmployeeContributionModel["PostTax"] = "POSTTAX";
    EmployeeContributionModel["Both"] = "PRE_AND_POSTTAX";
})(EmployeeContributionModel || (EmployeeContributionModel = {}));
var DeductionParameter = /** @class */ (function () {
    function DeductionParameter() {
    }
    return DeductionParameter;
}());



/***/ }),

/***/ "./src/app/model/entities/document.ts":
/*!********************************************!*\
  !*** ./src/app/model/entities/document.ts ***!
  \********************************************/
/*! exports provided: Document */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Document", function() { return Document; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/** Track status of documents requiring signature */
var Document = /** @class */ (function (_super) {
    __extends(Document, _super);
    function Document() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Document;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/earning.ts":
/*!*******************************************!*\
  !*** ./src/app/model/entities/earning.ts ***!
  \*******************************************/
/*! exports provided: Earning, EarningType, EarningsCategory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Earning", function() { return Earning; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EarningType", function() { return EarningType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EarningsCategory", function() { return EarningsCategory; });
/** Deduction metadata - general information about a deduction */
var Earning = /** @class */ (function () {
    function Earning() {
    }
    return Earning;
}());

var EarningType = /** @class */ (function () {
    function EarningType() {
        this.isActive = true;
    }
    return EarningType;
}());

var EarningsCategory;
(function (EarningsCategory) {
    EarningsCategory["DEFAULTEARNINGS"] = "DEFAULTEARNINGS";
    EarningsCategory["DEFAULTOTHERCOMPENSATION"] = "DEFAULTOTHERCOMPENSATION";
    EarningsCategory["ADDITIONALEARNINGS"] = "ADDITIONALEARNINGS";
})(EarningsCategory || (EarningsCategory = {}));


/***/ }),

/***/ "./src/app/model/entities/employee-deduction.ts":
/*!******************************************************!*\
  !*** ./src/app/model/entities/employee-deduction.ts ***!
  \******************************************************/
/*! exports provided: EmployeeDeduction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmployeeDeduction", function() { return EmployeeDeduction; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/**
 * Deduction of an employee
 *  Employee has a list of EmployeeDeductions with some parametrization
 *  where deductions types are a subset of company deductions.
 */
var EmployeeDeduction = /** @class */ (function (_super) {
    __extends(EmployeeDeduction, _super);
    function EmployeeDeduction(id, companyId, employeeId, deductionCodeTypeId, companyDeductionId) {
        var _this = _super.call(this, id, companyId) || this;
        _this.isRemoved = false;
        _this.employeeId = employeeId;
        _this.deductionCodeTypeId = deductionCodeTypeId;
        _this.companyDeductionId = companyDeductionId;
        return _this;
    }
    return EmployeeDeduction;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/employee-payment-method.ts":
/*!***********************************************************!*\
  !*** ./src/app/model/entities/employee-payment-method.ts ***!
  \***********************************************************/
/*! exports provided: EmployeePaymentMethod */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmployeePaymentMethod", function() { return EmployeePaymentMethod; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

// NB: Do not leave CLASS fields uninitialized (i.e, `undefined`)
//    The update/upsert operations will not clear previous fields that are undefined.
//    Set these fields to null, which will be propagated on save!
//    Example: split1AccountType: PaymentAccountType = null;
//    This advice applies to CLASSes not interfaces
/** How the Employee is paid */
var EmployeePaymentMethod = /** @class */ (function (_super) {
    __extends(EmployeePaymentMethod, _super);
    function EmployeePaymentMethod() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** Default account bank routing number */
        _this.defaultAccountRn = '';
        /** Default account bank name that goes with the RN number. Set when have verified the RN */
        _this.defaultAccountBankName = '';
        /** Default account bank account number */
        _this.defaultAccountNumber = '';
        /** Default account name or name on printed check */
        _this.defaultAccountName = '';
        /** First split account type */
        _this.split1AccountType = null;
        /** First split bank routing number */
        _this.split1AccountRn = '';
        /** First split account bank name that goes with the RN number. Set when have verified the RN */
        _this.split1AccountBankName = '';
        /** First split bank account number */
        _this.split1AccountNumber = '';
        /** First split account name or name on printed check */
        _this.split1AccountName = '';
        /** Share of payment to distribute to the first split account.*/
        _this.split1Value = 0;
        /** True if should include this first account in payment distribution */
        _this.split1IsActive = false;
        /** Second split account type */
        _this.split2AccountType = null;
        /** Second split bank routing number */
        _this.split2AccountRn = '';
        /** Second split account bank name that goes with the RN number. Set when have verified the RN */
        _this.split2AccountBankName = '';
        /** Second split bank account number */
        _this.split2AccountNumber = '';
        /** Second split account name or name on printed check */
        _this.split2AccountName = '';
        /** Share of payment to distribute to the second split account.*/
        _this.split2Value = 0;
        /** True if should include this second account in payment distribution */
        _this.split2IsActive = false;
        /** True if this payment method belongs to a removed Employee */
        _this.isRemoved = false;
        return _this;
    }
    return EmployeePaymentMethod;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/employee-tax.ts":
/*!************************************************!*\
  !*** ./src/app/model/entities/employee-tax.ts ***!
  \************************************************/
/*! exports provided: EmployeeTax */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmployeeTax", function() { return EmployeeTax; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/** Employee Tax code */
var EmployeeTax = /** @class */ (function (_super) {
    __extends(EmployeeTax, _super);
    function EmployeeTax() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** If the employee is exempt from paying this tax */
        _this.isExempt = false;
        /** When the code is active */
        _this.isActive = true;
        /** True when marked-for-delete */
        _this.isRemoved = false;
        return _this;
    }
    EmployeeTax.create = function (employeeTax) {
        if (employeeTax == null || employeeTax.id == null || employeeTax.companyId == null ||
            employeeTax.employeeId == null) {
            throw Error('EmployeeTax can\'t be created without specifying a id, employee, company');
        }
        return Object.assign(new EmployeeTax(employeeTax.id, employeeTax.companyId), {
            withholdingAllowance: 0,
            extraWithholding: 0
        }, employeeTax);
    };
    return EmployeeTax;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/employee.ts":
/*!********************************************!*\
  !*** ./src/app/model/entities/employee.ts ***!
  \********************************************/
/*! exports provided: Employee */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Employee", function() { return Employee; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
/* harmony import */ var _model_codes_enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @model/codes-enums */ "./src/app/model/codes-enums/index.ts");
/* harmony import */ var _utils_ee_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @utils/ee-utils */ "./src/app/core/utils/ee-utils.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



// NB: Do not leave CLASS fields uninitialized (i.e, `undefined`)
//    The update/upsert operations will not clear previous fields that are undefined.
//    Set these fields to null, which will be propagated on save!
//    Example: canContact?: boolean = null;
//    This advice applies to CLASSes not interfaces
/** Employee on the payroll */
var Employee = /** @class */ (function (_super) {
    __extends(Employee, _super);
    function Employee(id, companyId) {
        var _this = _super.call(this, id, companyId) || this;
        _this.firstName = '';
        _this.lastName = '';
        _this.employeeType = null;
        _this.homeAddressId = '';
        _this.workAddressId = '';
        /**
         * True if the system can contact or notify the employee
         * If false, email and phone can be (will be) empty
         */
        _this.canContact = null;
        _this.email = null;
        _this.phone = null;
        _this.isNewHire = false;
        _this.isTerminated = false;
        _this.hireDate = null;
        _this.birthDate = null;
        _this.sex = null;
        /** hourly, salary */
        _this.payType = null;
        /** Amount per payFrequency */
        _this.payRate = null;
        /** Overtime hourly rate */
        _this.overtimeRate = null;
        /** hourly, weekly, monthly, yearly */
        _this.payFrequency = null;
        /** Social Security Number */
        _this.ssn = '';
        /** True when marked-for-delete */
        _this.isRemoved = false;
        return _this;
    }
    /** Create Employee instance that is a clone of the source EE */
    Employee.create = function (ee) {
        ee = ee || {};
        // Must use `assign` to get the Employee prototype
        return Object.assign(new Employee(ee.id, ee.companyId), ee);
    };
    Object.defineProperty(Employee.prototype, "employeeStatus", {
        /** get and set EE status flags (synthetic property) */
        get: function () {
            return this.isTerminated ? _model_codes_enums__WEBPACK_IMPORTED_MODULE_1__["EmployeeStatus"].Terminated : this.isNewHire ? _model_codes_enums__WEBPACK_IMPORTED_MODULE_1__["EmployeeStatus"].NewHire : _model_codes_enums__WEBPACK_IMPORTED_MODULE_1__["EmployeeStatus"].Active;
        },
        set: function (status) {
            // set the corresponding Employee flags
            this.isTerminated = status === _model_codes_enums__WEBPACK_IMPORTED_MODULE_1__["EmployeeStatus"].Terminated;
            this.isNewHire = status === _model_codes_enums__WEBPACK_IMPORTED_MODULE_1__["EmployeeStatus"].NewHire;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Employee.prototype, "fullName", {
        get: function () {
            return Object(_utils_ee_utils__WEBPACK_IMPORTED_MODULE_2__["getFullName"])(this);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Employee.prototype, "hasName", {
        get: function () {
            return Object(_utils_ee_utils__WEBPACK_IMPORTED_MODULE_2__["hasName"])(this);
        },
        enumerable: true,
        configurable: true
    });
    return Employee;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/envelope-signer.ts":
/*!***************************************************!*\
  !*** ./src/app/model/entities/envelope-signer.ts ***!
  \***************************************************/
/*! exports provided: EnvelopeSigner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EnvelopeSigner", function() { return EnvelopeSigner; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/** Document Signer or reviewer in e-signing */
var EnvelopeSigner = /** @class */ (function (_super) {
    __extends(EnvelopeSigner, _super);
    function EnvelopeSigner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return EnvelopeSigner;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/envelope.ts":
/*!********************************************!*\
  !*** ./src/app/model/entities/envelope.ts ***!
  \********************************************/
/*! exports provided: Envelope */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Envelope", function() { return Envelope; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/** Represents a collection of documents for sending or signing, e.g. through DocuSign */
var Envelope = /** @class */ (function (_super) {
    __extends(Envelope, _super);
    function Envelope() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Envelope;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/household-filers.ts":
/*!****************************************************!*\
  !*** ./src/app/model/entities/household-filers.ts ***!
  \****************************************************/
/*! exports provided: HouseholdFilers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HouseholdFilers", function() { return HouseholdFilers; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
/* harmony import */ var _model_codes_enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @model/codes-enums */ "./src/app/model/codes-enums/index.ts");
/* harmony import */ var _utils_ee_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @utils/ee-utils */ "./src/app/core/utils/ee-utils.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



// NB: Do not leave CLASS fields uninitialized (i.e, `undefined`)
//    The update/upsert operations will not clear previous fields that are undefined.
//    Set these fields to null, which will be propagated on save!
//    Example: canContact?: boolean = null;
//    This advice applies to CLASSes not interfaces
/** Household filers */
var HouseholdFilers = /** @class */ (function (_super) {
    __extends(HouseholdFilers, _super);
    function HouseholdFilers(id, companyId) {
        var _this = _super.call(this, id, companyId) || this;
        _this.filingStatus = null;
        _this.primaryFirstName = null;
        _this.primaryLastName = null;
        _this.primarySsn = null;
        _this.spouseFirstName = null;
        _this.spouseLastName = null;
        _this.spouseSsn = null;
        return _this;
    }
    Object.defineProperty(HouseholdFilers.prototype, "primaryFullName", {
        get: function () {
            return Object(_utils_ee_utils__WEBPACK_IMPORTED_MODULE_2__["getFullName"])({
                firstName: this.primaryFirstName,
                lastName: this.primaryLastName,
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HouseholdFilers.prototype, "spouseFullName", {
        get: function () {
            return Object(_utils_ee_utils__WEBPACK_IMPORTED_MODULE_2__["getFullName"])({
                firstName: this.spouseFirstName,
                lastName: this.spouseLastName,
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HouseholdFilers.prototype, "hasNames", {
        get: function () {
            if (this.filingStatus === _model_codes_enums__WEBPACK_IMPORTED_MODULE_1__["HouseholdFilersStatus"].Single) {
                return this.primaryHasName;
            }
            if (this.filingStatus === _model_codes_enums__WEBPACK_IMPORTED_MODULE_1__["HouseholdFilersStatus"].Joint) {
                return this.primaryHasName && this.spouseHasName;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HouseholdFilers.prototype, "primaryHasName", {
        get: function () {
            return Object(_utils_ee_utils__WEBPACK_IMPORTED_MODULE_2__["hasName"])({
                firstName: this.primaryFirstName,
                lastName: this.primaryLastName,
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HouseholdFilers.prototype, "spouseHasName", {
        get: function () {
            return Object(_utils_ee_utils__WEBPACK_IMPORTED_MODULE_2__["hasName"])({
                firstName: this.spouseFirstName,
                lastName: this.spouseLastName,
            });
        },
        enumerable: true,
        configurable: true
    });
    return HouseholdFilers;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/index.ts":
/*!*****************************************!*\
  !*** ./src/app/model/entities/index.ts ***!
  \*****************************************/
/*! exports provided: CompanyEntityBase, Address, Ancillary, CompanyTax, CompanyAncillary, CompanyEarning, CompanyDeduction, Company, REASON_SERVICE_UNAVAILABLE, companyKind, WellKnownDeductionsCodeTypeId, Deduction, deductionIsCustomType, DeductionKeyValue, DeductionPlanType, DeductionPlanMatchOptionType, RetirementPlans, RetirementPlanTypes, RetirementPlanApply, MatchTypes, EmployeeContributionModel, DeductionParameter, Earning, EarningType, EarningsCategory, Document, EmployeeDeduction, EmployeePaymentMethod, EmployeeTax, Employee, EnvelopeSigner, Envelope, HouseholdFilers, Stats, User */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyEntityBase", function() { return _company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]; });

/* harmony import */ var _address__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./address */ "./src/app/model/entities/address.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Address", function() { return _address__WEBPACK_IMPORTED_MODULE_1__["Address"]; });

/* harmony import */ var _ancillary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ancillary */ "./src/app/model/entities/ancillary.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Ancillary", function() { return _ancillary__WEBPACK_IMPORTED_MODULE_2__["Ancillary"]; });

/* harmony import */ var _company_tax__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./company-tax */ "./src/app/model/entities/company-tax.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyTax", function() { return _company_tax__WEBPACK_IMPORTED_MODULE_3__["CompanyTax"]; });

/* harmony import */ var _company_ancillary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./company-ancillary */ "./src/app/model/entities/company-ancillary.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyAncillary", function() { return _company_ancillary__WEBPACK_IMPORTED_MODULE_4__["CompanyAncillary"]; });

/* harmony import */ var _company_earning__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./company-earning */ "./src/app/model/entities/company-earning.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyEarning", function() { return _company_earning__WEBPACK_IMPORTED_MODULE_5__["CompanyEarning"]; });

/* harmony import */ var _company_deduction__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./company-deduction */ "./src/app/model/entities/company-deduction.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyDeduction", function() { return _company_deduction__WEBPACK_IMPORTED_MODULE_6__["CompanyDeduction"]; });

/* harmony import */ var _company__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./company */ "./src/app/model/entities/company.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Company", function() { return _company__WEBPACK_IMPORTED_MODULE_7__["Company"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "REASON_SERVICE_UNAVAILABLE", function() { return _company__WEBPACK_IMPORTED_MODULE_7__["REASON_SERVICE_UNAVAILABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "companyKind", function() { return _company__WEBPACK_IMPORTED_MODULE_7__["companyKind"]; });

/* harmony import */ var _deduction__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./deduction */ "./src/app/model/entities/deduction.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WellKnownDeductionsCodeTypeId", function() { return _deduction__WEBPACK_IMPORTED_MODULE_8__["WellKnownDeductionsCodeTypeId"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Deduction", function() { return _deduction__WEBPACK_IMPORTED_MODULE_8__["Deduction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deductionIsCustomType", function() { return _deduction__WEBPACK_IMPORTED_MODULE_8__["deductionIsCustomType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeductionKeyValue", function() { return _deduction__WEBPACK_IMPORTED_MODULE_8__["DeductionKeyValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeductionPlanType", function() { return _deduction__WEBPACK_IMPORTED_MODULE_8__["DeductionPlanType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeductionPlanMatchOptionType", function() { return _deduction__WEBPACK_IMPORTED_MODULE_8__["DeductionPlanMatchOptionType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RetirementPlans", function() { return _deduction__WEBPACK_IMPORTED_MODULE_8__["RetirementPlans"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RetirementPlanTypes", function() { return _deduction__WEBPACK_IMPORTED_MODULE_8__["RetirementPlanTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RetirementPlanApply", function() { return _deduction__WEBPACK_IMPORTED_MODULE_8__["RetirementPlanApply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MatchTypes", function() { return _deduction__WEBPACK_IMPORTED_MODULE_8__["MatchTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeContributionModel", function() { return _deduction__WEBPACK_IMPORTED_MODULE_8__["EmployeeContributionModel"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeductionParameter", function() { return _deduction__WEBPACK_IMPORTED_MODULE_8__["DeductionParameter"]; });

/* harmony import */ var _earning__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./earning */ "./src/app/model/entities/earning.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Earning", function() { return _earning__WEBPACK_IMPORTED_MODULE_9__["Earning"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EarningType", function() { return _earning__WEBPACK_IMPORTED_MODULE_9__["EarningType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EarningsCategory", function() { return _earning__WEBPACK_IMPORTED_MODULE_9__["EarningsCategory"]; });

/* harmony import */ var _document__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./document */ "./src/app/model/entities/document.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Document", function() { return _document__WEBPACK_IMPORTED_MODULE_10__["Document"]; });

/* harmony import */ var _employee_deduction__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./employee-deduction */ "./src/app/model/entities/employee-deduction.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeDeduction", function() { return _employee_deduction__WEBPACK_IMPORTED_MODULE_11__["EmployeeDeduction"]; });

/* harmony import */ var _employee_payment_method__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./employee-payment-method */ "./src/app/model/entities/employee-payment-method.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeePaymentMethod", function() { return _employee_payment_method__WEBPACK_IMPORTED_MODULE_12__["EmployeePaymentMethod"]; });

/* harmony import */ var _employee_tax__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./employee-tax */ "./src/app/model/entities/employee-tax.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeTax", function() { return _employee_tax__WEBPACK_IMPORTED_MODULE_13__["EmployeeTax"]; });

/* harmony import */ var _employee__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./employee */ "./src/app/model/entities/employee.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Employee", function() { return _employee__WEBPACK_IMPORTED_MODULE_14__["Employee"]; });

/* harmony import */ var _envelope_signer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./envelope-signer */ "./src/app/model/entities/envelope-signer.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EnvelopeSigner", function() { return _envelope_signer__WEBPACK_IMPORTED_MODULE_15__["EnvelopeSigner"]; });

/* harmony import */ var _envelope__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./envelope */ "./src/app/model/entities/envelope.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Envelope", function() { return _envelope__WEBPACK_IMPORTED_MODULE_16__["Envelope"]; });

/* harmony import */ var _household_filers__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./household-filers */ "./src/app/model/entities/household-filers.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HouseholdFilers", function() { return _household_filers__WEBPACK_IMPORTED_MODULE_17__["HouseholdFilers"]; });

/* harmony import */ var _stats__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./stats */ "./src/app/model/entities/stats.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Stats", function() { return _stats__WEBPACK_IMPORTED_MODULE_18__["Stats"]; });

/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./user */ "./src/app/model/entities/user.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "User", function() { return _user__WEBPACK_IMPORTED_MODULE_19__["User"]; });























/***/ }),

/***/ "./src/app/model/entities/stats.ts":
/*!*****************************************!*\
  !*** ./src/app/model/entities/stats.ts ***!
  \*****************************************/
/*! exports provided: Stats */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Stats", function() { return Stats; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/** Track key account statistics in general and visit timing to dashboard sections in particular */
var Stats = /** @class */ (function (_super) {
    __extends(Stats, _super);
    function Stats() {
        var _this = _super.call(this) || this;
        var dt = new Date().toISOString();
        // AboutYou is always started as a result of sign up
        _this.aboutYouLastDate = _this.aboutYouStartDate = dt;
        return _this;
    }
    return Stats;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/entities/user.ts":
/*!****************************************!*\
  !*** ./src/app/model/entities/user.ts ***!
  \****************************************/
/*! exports provided: User */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "User", function() { return User; });
/* harmony import */ var _company_entity_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-base */ "./src/app/model/entities/company-entity-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/** User with access to the application. */
var User = /** @class */ (function (_super) {
    __extends(User, _super);
    function User() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Id of the only company this user can see.
         * Required unless userRole is Administrator | Agent | Sales,
         * which are users of multiple companies
         * Only the Administrator role is implemented now.
         */
        _this.companyId = null;
        return _this;
    }
    return User;
}(_company_entity_base__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]));



/***/ }),

/***/ "./src/app/model/index.ts":
/*!********************************!*\
  !*** ./src/app/model/index.ts ***!
  \********************************/
/*! exports provided: CompanyEntityBase, Address, Ancillary, CompanyTax, CompanyAncillary, CompanyEarning, CompanyDeduction, Company, REASON_SERVICE_UNAVAILABLE, companyKind, WellKnownDeductionsCodeTypeId, Deduction, deductionIsCustomType, DeductionKeyValue, DeductionPlanType, DeductionPlanMatchOptionType, RetirementPlans, RetirementPlanTypes, RetirementPlanApply, MatchTypes, EmployeeContributionModel, DeductionParameter, Earning, EarningType, EarningsCategory, Document, EmployeeDeduction, EmployeePaymentMethod, EmployeeTax, Employee, EnvelopeSigner, Envelope, HouseholdFilers, Stats, User, Codes, AccountStatus, AccountStatusCodes, CompanyType, CompanyTypeCodes, CompanyTitles, EmployeeStatus, EmployeeType, EnvelopeStatus, FedFilingStatus, FeinStatus, HouseholdFilersStatus, PaymentAccountType, PaymentStrategy, PaymentMethod, PayrollFrequency, PayrollFrequencyCodes, SectionStatus, SeinStatus, Sex, SexCodes, StateFilingStatus, SuiStatus, TaxCategoryCode, TaxExemptionReason, TaxExemptionReasonsCodes, TaxRateType, TaxTypeCode, UserRole, CalendarState, USStateCodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _entities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entities */ "./src/app/model/entities/index.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyEntityBase", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Address", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["Address"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Ancillary", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["Ancillary"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyTax", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["CompanyTax"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyAncillary", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["CompanyAncillary"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyEarning", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["CompanyEarning"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyDeduction", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["CompanyDeduction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Company", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["Company"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "REASON_SERVICE_UNAVAILABLE", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["REASON_SERVICE_UNAVAILABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "companyKind", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["companyKind"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WellKnownDeductionsCodeTypeId", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["WellKnownDeductionsCodeTypeId"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Deduction", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["Deduction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deductionIsCustomType", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["deductionIsCustomType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeductionKeyValue", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["DeductionKeyValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeductionPlanType", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["DeductionPlanType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeductionPlanMatchOptionType", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["DeductionPlanMatchOptionType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RetirementPlans", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["RetirementPlans"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RetirementPlanTypes", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["RetirementPlanTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RetirementPlanApply", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["RetirementPlanApply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MatchTypes", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["MatchTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeContributionModel", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["EmployeeContributionModel"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeductionParameter", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["DeductionParameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Earning", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["Earning"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EarningType", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["EarningType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EarningsCategory", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["EarningsCategory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Document", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["Document"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeDeduction", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["EmployeeDeduction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeePaymentMethod", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["EmployeePaymentMethod"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeTax", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["EmployeeTax"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Employee", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["Employee"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EnvelopeSigner", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["EnvelopeSigner"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Envelope", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["Envelope"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HouseholdFilers", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["HouseholdFilers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Stats", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["Stats"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "User", function() { return _entities__WEBPACK_IMPORTED_MODULE_0__["User"]; });

/* harmony import */ var _codes_enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./codes-enums */ "./src/app/model/codes-enums/index.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Codes", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["Codes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccountStatus", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["AccountStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccountStatusCodes", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["AccountStatusCodes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyType", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["CompanyType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyTypeCodes", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["CompanyTypeCodes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyTitles", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["CompanyTitles"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeStatus", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["EmployeeStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeType", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["EmployeeType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EnvelopeStatus", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["EnvelopeStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FedFilingStatus", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["FedFilingStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FeinStatus", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["FeinStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HouseholdFilersStatus", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["HouseholdFilersStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PaymentAccountType", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["PaymentAccountType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PaymentStrategy", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["PaymentStrategy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PaymentMethod", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["PaymentMethod"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayrollFrequency", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["PayrollFrequency"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PayrollFrequencyCodes", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["PayrollFrequencyCodes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SectionStatus", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["SectionStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SeinStatus", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["SeinStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sex", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["Sex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SexCodes", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["SexCodes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StateFilingStatus", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["StateFilingStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SuiStatus", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["SuiStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxCategoryCode", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["TaxCategoryCode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxExemptionReason", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["TaxExemptionReason"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxExemptionReasonsCodes", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["TaxExemptionReasonsCodes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxRateType", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["TaxRateType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxTypeCode", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["TaxTypeCode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserRole", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["UserRole"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarState", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["CalendarState"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "USStateCodes", function() { return _codes_enums__WEBPACK_IMPORTED_MODULE_1__["USStateCodes"]; });





/***/ }),

/***/ "./src/app/model/validators/address-criteria-validator.ts":
/*!****************************************************************!*\
  !*** ./src/app/model/validators/address-criteria-validator.ts ***!
  \****************************************************************/
/*! exports provided: AddressCriteriaValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddressCriteriaValidator", function() { return AddressCriteriaValidator; });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};


var AddressCriteriaValidator = /** @class */ (function (_super) {
    __extends(AddressCriteriaValidator, _super);
    function AddressCriteriaValidator(entitySelectors, group, validatorContext) {
        var _this = _super.call(this, 'addressCriteria', group, function (value, context) {
            return entitySelectors.entityInfos$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (entityInfos) {
                var addresses = entityInfos.filter(function (ei) { return ei.entityType === 'Address'; }).map(function (ei) { return ei.entity; });
                try {
                    /**
                     * SECURITY: Safe because text passed to `Function` comes from our server, not the user
                     */
                    if (!context.criteriaFn) {
                        var evalFunc = "function(context, model, isClient, isServer){ return " + context.criteria + " }";
                        context.criteriaFn = Function("\"use strict\";return (" + evalFunc + ")")();
                    }
                    return addresses.every(function (address) {
                        var ctx = __assign({}, context, { value: address });
                        return context.criteriaFn(ctx, ctx.model, ctx.isClient, ctx.isServer);
                    });
                }
                catch (e) {
                    var message = "Criteria '" + context.criteria + "' failed for validator '" + _this.name + "'" +
                        (" and model type '" + context.modelType + "' with error '" + e.message + "'");
                    return false;
                }
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])());
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || 'Addresses are invalid' })) || this;
        return _this;
    }
    AddressCriteriaValidator.factory = function (entitySelectors) {
        return {
            name: 'addressCriteria',
            fn: function (group, context) {
                return new AddressCriteriaValidator(entitySelectors, group, context);
            }
        };
    };
    return AddressCriteriaValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_0__["AsyncValidator"]));



/***/ }),

/***/ "./src/app/model/validators/checkdate-criteria-validator.ts":
/*!******************************************************************!*\
  !*** ./src/app/model/validators/checkdate-criteria-validator.ts ***!
  \******************************************************************/
/*! exports provided: CheckDateCriteriaValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckDateCriteriaValidator", function() { return CheckDateCriteriaValidator; });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @utils */ "./src/app/core/utils/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};



/*
 * Validator to ensure that the selected check date is at least two business days away
 * TODO: Describe it better.
 * */
var CheckDateCriteriaValidator = /** @class */ (function (_super) {
    __extends(CheckDateCriteriaValidator, _super);
    function CheckDateCriteriaValidator(holidaysService, group, validatorContext) {
        return _super.call(this, 'checkDateCriteria', group, function (value, context) {
            return holidaysService.getHolidays().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (holidays) {
                if (value) {
                    var holidayTimes = holidays.map(function (x) { return x.getTime(); });
                    var checkDate = value.year ? Object(_utils__WEBPACK_IMPORTED_MODULE_2__["getDateFromNgb"])(value) : new Date(value);
                    if (checkDate) {
                        checkDate = new Date(checkDate.getFullYear(), checkDate.getMonth(), checkDate.getDate());
                        if (checkDate && !isNaN(checkDate.getTime())) {
                            return checkDate >= Object(_utils__WEBPACK_IMPORTED_MODULE_2__["getFirstAllowedCheckDate"])(holidayTimes);
                        }
                    }
                }
                return true; // no error
            }));
        }, __assign({}, validatorContext, { messageTemplate: (validatorContext && validatorContext.messageTemplate) ||
                CheckDateCriteriaValidator.messageTemplate })) || this;
    }
    CheckDateCriteriaValidator.factory = function (holidaysService) {
        return {
            name: 'checkDateCriteria',
            fn: function (group, context) {
                return new CheckDateCriteriaValidator(holidaysService, group, context);
            }
        };
    };
    CheckDateCriteriaValidator.messageTemplate = "%displayName% needs to be at least two business days from today's date";
    return CheckDateCriteriaValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_0__["AsyncValidator"]));



/***/ }),

/***/ "./src/app/model/validators/document-signing-complete-validator.ts":
/*!*************************************************************************!*\
  !*** ./src/app/model/validators/document-signing-complete-validator.ts ***!
  \*************************************************************************/
/*! exports provided: DocumentSigningCompleteValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentSigningCompleteValidator", function() { return DocumentSigningCompleteValidator; });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _app_model_codes_enums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/model/codes-enums */ "./src/app/model/codes-enums/index.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};




var DocumentSigningCompleteValidator = /** @class */ (function (_super) {
    __extends(DocumentSigningCompleteValidator, _super);
    function DocumentSigningCompleteValidator(entitySelectors, group, validatorContext) {
        return _super.call(this, 'documentSigningComplete', group, function (value, context) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["combineLatest"])(entitySelectors.envelope.entities$, entitySelectors.envelopeSigner.entities$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (_a) {
                var envelopes = _a[0], signers = _a[1];
                return envelopes.some(function (env) { return env.status === _app_model_codes_enums__WEBPACK_IMPORTED_MODULE_2__["EnvelopeStatus"].completed && !env.isRemoved &&
                    signers.some(function (s) { return s.envelopeId === env.id && !s.isRemoved; }); }) &&
                    !envelopes.some(function (env) { return env.isWetSign && env.status === _app_model_codes_enums__WEBPACK_IMPORTED_MODULE_2__["EnvelopeStatus"].local && !env.isRemoved; });
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])());
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || DocumentSigningCompleteValidator.messageTemplate })) || this;
    }
    DocumentSigningCompleteValidator.factory = function (entitySelectors) {
        return {
            name: 'documentSigningComplete',
            fn: function (group, context) {
                return new DocumentSigningCompleteValidator(entitySelectors, group, context);
            }
        };
    };
    DocumentSigningCompleteValidator.messageTemplate = 'The document signing must be complete';
    return DocumentSigningCompleteValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_0__["AsyncValidator"]));



/***/ }),

/***/ "./src/app/model/validators/dynamic-range-validator.ts":
/*!*************************************************************!*\
  !*** ./src/app/model/validators/dynamic-range-validator.ts ***!
  \*************************************************************/
/*! exports provided: DynamicRangeValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DynamicRangeValidator", function() { return DynamicRangeValidator; });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};

var DynamicRangeValidator = /** @class */ (function (_super) {
    __extends(DynamicRangeValidator, _super);
    function DynamicRangeValidator(group, validatorContext) {
        var _this = _super.call(this, 'dynamicRange', group, function (value, context) {
            if (!value) {
                return true;
            }
            // Can't find a min/max range factories
            var minIsValid = true;
            var maxIsValid = true;
            if (context.allowZeroProvider != null) {
                var allowZero = _this.getVal(context, context.allowZeroProvider);
                context.allowZero = allowZero;
                if (context.allowZero === true && Number.parseFloat(value) === 0) {
                    return true;
                }
            }
            if (context.minProvider != null) {
                var minValue = _this.getVal(context, context.minProvider);
                context.minValue = minValue;
                if (minValue != null && !(value >= minValue)) {
                    minIsValid = false;
                }
            }
            if (context.maxProvider != null) {
                var maxValue = _this.getVal(context, context.maxProvider);
                context.maxValue = maxValue;
                if (maxValue != null && !(value <= maxValue)) {
                    maxIsValid = false;
                }
            }
            if (minIsValid === false && maxIsValid === false) {
                context.messageTemplate = DynamicRangeValidator.betweenMessageTemplate;
                return false;
            }
            if (minIsValid === false) {
                context.messageTemplate = DynamicRangeValidator.minMessageTemplate;
                return false;
            }
            if (maxIsValid === false) {
                context.messageTemplate = DynamicRangeValidator.maxMessageTemplate;
                return false;
            }
            return true;
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || DynamicRangeValidator.messageTemplate })) || this;
        return _this;
    }
    DynamicRangeValidator.create = function (group, context) {
        return new DynamicRangeValidator(group, context);
    };
    DynamicRangeValidator.prototype.getVal = function (project, myPath) {
        return myPath.split('.').reduce(function (res, prop) {
            if (res == null) {
                return null;
            }
            return res[prop];
        }, project);
    };
    DynamicRangeValidator.minMessageTemplate = '%displayName% must be greater than %minValue%';
    DynamicRangeValidator.maxMessageTemplate = '%displayName% must be less than %maxValue%';
    DynamicRangeValidator.betweenMessageTemplate = '%displayName% must be between the values of %minValue% and %maxValue%';
    DynamicRangeValidator.messageTemplate = '%displayName% does not conform to limit range.';
    return DynamicRangeValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_0__["Validator"]));



/***/ }),

/***/ "./src/app/model/validators/earnings-validator.ts":
/*!********************************************************!*\
  !*** ./src/app/model/validators/earnings-validator.ts ***!
  \********************************************************/
/*! exports provided: EarningsNameValidator, EarningsDescriptionValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EarningsNameValidator", function() { return EarningsNameValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EarningsDescriptionValidator", function() { return EarningsDescriptionValidator; });
/* harmony import */ var _app_store_validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @app/store/validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};




var EarningsNameValidator = /** @class */ (function (_super) {
    __extends(EarningsNameValidator, _super);
    function EarningsNameValidator(earnings$, group, validatorContext) {
        return _super.call(this, 'earningsValidator', group, function (value, context) {
            var name = context.model.name || value;
            return earnings$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (earnings) {
                return (null ==
                    earnings
                        .filter(function (ce) { return ce.code !== context.model.earningCode; })
                        .find(function (p) { return p.name.toUpperCase() === context.model.name.toUpperCase(); }));
            }));
        }, __assign({}, validatorContext, { messageTemplate: (validatorContext && validatorContext.messageTemplate) ||
                EarningsNameValidator.messageTemplate })) || this;
    }
    EarningsNameValidator.factory = function (entitySelectors, earningService) {
        var earnings$ = getValidatorEarnings$(entitySelectors, earningService);
        return {
            name: 'earningsNameValidator',
            fn: function (group, context) {
                return new EarningsNameValidator(earnings$, group, context);
            }
        };
    };
    EarningsNameValidator.messageTemplate = "Earnings Abbreviation cannot be the same as other earnings' name or reserved words\n  - %name%";
    return EarningsNameValidator;
}(_app_store_validation__WEBPACK_IMPORTED_MODULE_0__["AsyncValidator"]));

var EarningsDescriptionValidator = /** @class */ (function (_super) {
    __extends(EarningsDescriptionValidator, _super);
    function EarningsDescriptionValidator(earnings$, group, validatorContext) {
        return _super.call(this, 'earningsValidator', group, function (value, context) {
            var description = context.model.description || value;
            return earnings$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (earnings) {
                return (null ==
                    earnings
                        .filter(function (ce) { return ce.code !== context.model.earningCode; })
                        .find(function (p) { return p.description.toUpperCase() === context.model.description.toUpperCase(); }));
            }));
        }, __assign({}, validatorContext, { messageTemplate: (validatorContext && validatorContext.messageTemplate) ||
                EarningsDescriptionValidator.messageTemplate })) || this;
    }
    EarningsDescriptionValidator.factory = function (entitySelectors, earningService) {
        var earnings$ = getValidatorEarnings$(entitySelectors, earningService);
        return {
            name: 'earningsDescriptionValidator',
            fn: function (group, context) {
                return new EarningsDescriptionValidator(earnings$, group, context);
            }
        };
    };
    EarningsDescriptionValidator.messageTemplate = "Earnings Name cannot be the same as other earnings' name or reserved words\n  - %description%";
    return EarningsDescriptionValidator;
}(_app_store_validation__WEBPACK_IMPORTED_MODULE_0__["AsyncValidator"]));

function getValidatorEarnings$(entitySelectors, earningService) {
    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(entitySelectors.companyEarning.entities$, earningService.earnings$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
        var companyEarnings = _a[0], defaultEarnings = _a[1];
        return defaultEarnings.filter(function (e) {
            return e.earningsCategory.toUpperCase() === _model__WEBPACK_IMPORTED_MODULE_3__["EarningsCategory"].DEFAULTEARNINGS ||
                e.earningsCategory.toUpperCase() === _model__WEBPACK_IMPORTED_MODULE_3__["EarningsCategory"].DEFAULTOTHERCOMPENSATION;
        }).concat(companyEarnings
            .filter(function (e) { return !e.isRemoved; })
            .map(function (ce) {
            return {
                code: ce.earningCode,
                name: ce.name,
                description: ce.description
            };
        }));
    }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
}


/***/ }),

/***/ "./src/app/model/validators/ein-validator.ts":
/*!***************************************************!*\
  !*** ./src/app/model/validators/ein-validator.ts ***!
  \***************************************************/
/*! exports provided: EinMaskValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EinMaskValidator", function() { return EinMaskValidator; });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var _app_core_services_tax_services_tax_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/core/services/tax-services/tax-utils */ "./src/app/core/services/tax-services/tax-utils.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};


var EinMaskValidator = /** @class */ (function (_super) {
    __extends(EinMaskValidator, _super);
    function EinMaskValidator(group, validatorContext) {
        return _super.call(this, 'einValidator', group, function (value, context) {
            if (context.model == null) {
                return true;
            }
            var isValid = Object(_app_core_services_tax_services_tax_utils__WEBPACK_IMPORTED_MODULE_1__["isValidEin"])(context.model);
            var ein = context.model.ein;
            if (ein != null && ein.length > 0) {
                context.messageTemplate = EinMaskValidator.formatMessageTemplate;
            }
            return isValid;
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || EinMaskValidator.messageTemplate })) || this;
    }
    EinMaskValidator.create = function (group, context) {
        return new EinMaskValidator(group, context);
    };
    EinMaskValidator.messageTemplate = '%displayName% is required';
    EinMaskValidator.formatMessageTemplate = '%displayName% must be a valid format';
    return EinMaskValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_0__["Validator"]));



/***/ }),

/***/ "./src/app/model/validators/employee-taxes-validator.ts":
/*!**************************************************************!*\
  !*** ./src/app/model/validators/employee-taxes-validator.ts ***!
  \**************************************************************/
/*! exports provided: EmployeeTaxesValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmployeeTaxesValidator", function() { return EmployeeTaxesValidator; });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _app_core_services_tax_services_tax_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/core/services/tax-services/tax-utils */ "./src/app/core/services/tax-services/tax-utils.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};



var EmployeeTaxesValidator = /** @class */ (function (_super) {
    __extends(EmployeeTaxesValidator, _super);
    function EmployeeTaxesValidator(taxCollectorService, group, validatorContext) {
        return _super.call(this, 'employeeTaxesValidator', group, function (value, context) {
            return taxCollectorService.taxes$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (taxes) {
                if (taxes.employeeTaxes == null) {
                    return true;
                }
                var employeeId = value.id;
                var employeeTaxesVm = taxes.employeeTaxes.find(function (e) { return e.employeeLocation.id === employeeId; });
                if (employeeTaxesVm == null) {
                    return false;
                }
                var areTaxesValid = true;
                for (var i = 0; i < employeeTaxesVm.taxes.length; i++) {
                    var empTaxWithBehavior = employeeTaxesVm.taxes[i];
                    if (!Object(_app_core_services_tax_services_tax_utils__WEBPACK_IMPORTED_MODULE_2__["isEmployeeTaxValid"])(empTaxWithBehavior)) {
                        areTaxesValid = false;
                        break;
                    }
                }
                return areTaxesValid;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])());
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || EmployeeTaxesValidator.messageTemplate })) || this;
    }
    EmployeeTaxesValidator.factory = function (taxCollectorService) {
        return {
            name: 'employeeTaxesValidator',
            fn: function (group, context) {
                return new EmployeeTaxesValidator(taxCollectorService, group, context);
            }
        };
    };
    EmployeeTaxesValidator.messageTemplate = 'Employee taxes information must be provided';
    return EmployeeTaxesValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_0__["AsyncValidator"]));



/***/ }),

/***/ "./src/app/model/validators/federal-taxes-validator.ts":
/*!*************************************************************!*\
  !*** ./src/app/model/validators/federal-taxes-validator.ts ***!
  \*************************************************************/
/*! exports provided: FederalTaxesValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FederalTaxesValidator", function() { return FederalTaxesValidator; });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _app_core_services_tax_services_tax_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/core/services/tax-services/tax-utils */ "./src/app/core/services/tax-services/tax-utils.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};




var FederalTaxesValidator = /** @class */ (function (_super) {
    __extends(FederalTaxesValidator, _super);
    function FederalTaxesValidator(taxCollectorService, group, validatorContext) {
        return _super.call(this, 'federalTaxesValidator', group, function (value, context) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(taxCollectorService.taxes$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
                var taxes = _a[0];
                if (taxes.companyFederalTaxes == null) {
                    return true;
                }
                var areTaxesValid = true;
                for (var i = 0; i < taxes.companyFederalTaxes.taxes.length; i++) {
                    var fedTaxWithBehavior = taxes.companyFederalTaxes.taxes[i];
                    if (!Object(_app_core_services_tax_services_tax_utils__WEBPACK_IMPORTED_MODULE_3__["isCompanyTaxValid"])(fedTaxWithBehavior)) {
                        areTaxesValid = false;
                        break;
                    }
                }
                return areTaxesValid;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])());
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || FederalTaxesValidator.messageTemplate })) || this;
    }
    FederalTaxesValidator.factory = function (taxCollectorService) {
        return {
            name: 'federalTaxesValidator',
            fn: function (group, context) {
                return new FederalTaxesValidator(taxCollectorService, group, context);
            }
        };
    };
    FederalTaxesValidator.messageTemplate = 'Fed taxes information must be provided';
    return FederalTaxesValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_0__["AsyncValidator"]));



/***/ }),

/***/ "./src/app/model/validators/household-filer-must-exist-validator.ts":
/*!**************************************************************************!*\
  !*** ./src/app/model/validators/household-filer-must-exist-validator.ts ***!
  \**************************************************************************/
/*! exports provided: HouseholdFilerMustExistValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HouseholdFilerMustExistValidator", function() { return HouseholdFilerMustExistValidator; });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};


var HouseholdFilerMustExistValidator = /** @class */ (function (_super) {
    __extends(HouseholdFilerMustExistValidator, _super);
    function HouseholdFilerMustExistValidator(entitySelectors, group, validatorContext) {
        return _super.call(this, 'householdFilerMustExist', group, function (value, context) {
            return entitySelectors.householdFilers.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (householdFilers) { return householdFilers && householdFilers.length === 1; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])());
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || HouseholdFilerMustExistValidator.messageTemplate })) || this;
    }
    HouseholdFilerMustExistValidator.factory = function (entitySelectors) {
        return {
            name: 'householdFilerMustExist',
            fn: function (group, context) {
                return new HouseholdFilerMustExistValidator(entitySelectors, group, context);
            }
        };
    };
    HouseholdFilerMustExistValidator.messageTemplate = "Household Federal Tax Information must be provided";
    return HouseholdFilerMustExistValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_0__["AsyncValidator"]));



/***/ }),

/***/ "./src/app/model/validators/must-have-employees-validator.ts":
/*!*******************************************************************!*\
  !*** ./src/app/model/validators/must-have-employees-validator.ts ***!
  \*******************************************************************/
/*! exports provided: MustHaveEmployeesValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MustHaveEmployeesValidator", function() { return MustHaveEmployeesValidator; });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};


var MustHaveEmployeesValidator = /** @class */ (function (_super) {
    __extends(MustHaveEmployeesValidator, _super);
    function MustHaveEmployeesValidator(entitySelectors, group, validatorContext) {
        return _super.call(this, 'mustHaveEmployees', group, function (value, context) {
            return entitySelectors.employee.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (ees) {
                ees = ees.filter(function (ee) { return !ee.isRemoved; });
                // valid if has employees
                return ees.length > 0;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])());
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || MustHaveEmployeesValidator.messageTemplate })) || this;
    }
    MustHaveEmployeesValidator.factory = function (entitySelectors) {
        return {
            name: 'mustHaveEmployees',
            fn: function (group, context) {
                return new MustHaveEmployeesValidator(entitySelectors, group, context);
            }
        };
    };
    MustHaveEmployeesValidator.messageTemplate = "You have not entered employees. Confirm this is OK by answering \"No\" to the question %displayName%";
    return MustHaveEmployeesValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_0__["AsyncValidator"]));



/***/ }),

/***/ "./src/app/model/validators/must-not-be-exempt-validator.ts":
/*!******************************************************************!*\
  !*** ./src/app/model/validators/must-not-be-exempt-validator.ts ***!
  \******************************************************************/
/*! exports provided: MustNotBeExemptValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MustNotBeExemptValidator", function() { return MustNotBeExemptValidator; });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};



var MustNotBeExemptValidator = /** @class */ (function (_super) {
    __extends(MustNotBeExemptValidator, _super);
    function MustNotBeExemptValidator(entitySelectors, group, validatorContext) {
        return _super.call(this, 'mustNotBeExempt', group, function (value, context) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(entitySelectors.employeeTax.entities$, entitySelectors.companyTax.entities$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
                var employeeTaxes = _a[0], companyTaxes = _a[1];
                var FUTA_SUI_CODE = '0000-010';
                var exemptTaxes = employeeTaxes.concat(companyTaxes).filter(function (tax) { return !tax.isRemoved && tax.mtsTaxCode.endsWith(FUTA_SUI_CODE) && tax.isExempt; });
                return exemptTaxes.length === 0;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])());
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || MustNotBeExemptValidator.messageTemplate })) || this;
    }
    MustNotBeExemptValidator.factory = function (entitySelectors) {
        return {
            name: 'mustNotBeExempt',
            fn: function (group, context) {
                return new MustNotBeExemptValidator(entitySelectors, group, context);
            }
        };
    };
    MustNotBeExemptValidator.messageTemplate = 'Company is exempt from taxes';
    return MustNotBeExemptValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_0__["AsyncValidator"]));



/***/ }),

/***/ "./src/app/model/validators/password-validator.ts":
/*!********************************************************!*\
  !*** ./src/app/model/validators/password-validator.ts ***!
  \********************************************************/
/*! exports provided: PasswordPolicyValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PasswordPolicyValidator", function() { return PasswordPolicyValidator; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};



var PasswordPolicyValidator = /** @class */ (function (_super) {
    __extends(PasswordPolicyValidator, _super);
    function PasswordPolicyValidator(http, group, validatorContext) {
        var _this = _super.call(this, 'passwordPolicy', group, function (value, context) {
            // only checks that contains necessary chars; other validations check for length
            if (!value) {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(true);
            }
            return _this.fetchPolicies().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (policies) { return _this.validatePassword(value, policies, context); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])());
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate })) || this;
        _this.http = http;
        return _this;
    }
    PasswordPolicyValidator.factory = function (http) {
        return {
            name: 'passwordPolicy',
            fn: function (group, context) {
                return new PasswordPolicyValidator(http, group, context);
            }
        };
    };
    PasswordPolicyValidator.prototype.fetchPolicies = function () {
        /// TODO: Currently hardcoded. Change after OZ
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])([]);
        // if (PasswordPolicyValidator.policies) {
        //   return of(PasswordPolicyValidator.policies);
        // }
        // const uri = `${environment.spApiRoot}/authentication/password/rules/standard`;
        // return this.http.get(uri).pipe(
        //   map(body => {
        //     if (!Array.isArray(body)) {
        //       return [];
        //     }
        //     return body.map(policy => {
        //       return {
        //         name: policy['name'],
        //         value: policy['value']
        //       };
        //     });
        //   }));
    };
    PasswordPolicyValidator.prototype.validatePassword = function (password, policies, context) {
        // TODO: Currently hardcode standard policy
        var standardPolicy = '(?=.*[a-z])' + // at least 1 lower
            '(?=.*[A-Z])' + // at least 1 upper
            '(?=.*[0-9])' + // at least 1 digit
            '^\\S*$'; // no whitespace
        context.messageTemplate = 'Password must have at least 1 lowercase letter, 1 uppercase letter, 1 digit and no spaces';
        var regExp = new RegExp(standardPolicy);
        return regExp.test(password);
    };
    return PasswordPolicyValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_2__["AsyncValidator"]));



/***/ }),

/***/ "./src/app/model/validators/state-taxes-validator.ts":
/*!***********************************************************!*\
  !*** ./src/app/model/validators/state-taxes-validator.ts ***!
  \***********************************************************/
/*! exports provided: StateTaxesValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StateTaxesValidator", function() { return StateTaxesValidator; });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _app_core_services_tax_services_tax_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/core/services/tax-services/tax-utils */ "./src/app/core/services/tax-services/tax-utils.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};




var StateTaxesValidator = /** @class */ (function (_super) {
    __extends(StateTaxesValidator, _super);
    function StateTaxesValidator(taxCollectorService, group, validatorContext) {
        return _super.call(this, 'stateTaxesValidator', group, function (value, context) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(taxCollectorService.taxes$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
                var taxes = _a[0];
                if (taxes.companyStateTaxes == null) {
                    return true;
                }
                var invalidStates = taxes.companyStateTaxes.reduce(function (acc, stateTaxes) {
                    for (var i = 0; i < stateTaxes.taxes.length; i++) {
                        var stateTaxWithBehavior = stateTaxes.taxes[i];
                        if (!Object(_app_core_services_tax_services_tax_utils__WEBPACK_IMPORTED_MODULE_3__["isCompanyTaxValid"])(stateTaxWithBehavior)) {
                            acc.push(stateTaxes.state);
                            break;
                        }
                    }
                    return acc;
                }, []);
                if (invalidStates.length > 0) {
                    // console.error(`Missing Company Tax setup for these states: ${missingTaxStates.join()}`);
                    context.missingTaxStates = invalidStates;
                    return false; // failed validation
                }
                else {
                    return true; // every tax state is accounted for.
                }
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])());
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || StateTaxesValidator.messageTemplate })) || this;
    }
    StateTaxesValidator.factory = function (taxCollectorService) {
        return {
            name: 'stateTaxesValidator',
            fn: function (group, context) {
                return new StateTaxesValidator(taxCollectorService, group, context);
            }
        };
    };
    StateTaxesValidator.messageTemplate = 'State taxes information must be provided';
    return StateTaxesValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_0__["AsyncValidator"]));



/***/ }),

/***/ "./src/app/model/validators/username-validator.ts":
/*!********************************************************!*\
  !*** ./src/app/model/validators/username-validator.ts ***!
  \********************************************************/
/*! exports provided: makeUsernameInvalidCharacterValidator, UniqueUsernameValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeUsernameInvalidCharacterValidator", function() { return makeUsernameInvalidCharacterValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UniqueUsernameValidator", function() { return UniqueUsernameValidator; });
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};




function makeUsernameInvalidCharacterValidator(group, context) {
    context = __assign({}, context, { expression: /^[a-zA-Z0-9\_\-\.]*$/, messageTemplate: 'Make a %displayName% from letters, digits, and the special characters "._-"' });
    return _validation__WEBPACK_IMPORTED_MODULE_3__["RegExpValidator"].create('usernameInvalidCharacters', group, context);
}
var UniqueUsernameValidator = /** @class */ (function (_super) {
    __extends(UniqueUsernameValidator, _super);
    function UniqueUsernameValidator(http, group, validatorContext) {
        return _super.call(this, 'uniqueUsername', group, function (value, context) {
            // if (environment.mockServices) {
            //   return of(true);
            // }
            var uri = _environment__WEBPACK_IMPORTED_MODULE_0__["environment"].spApiRoot + "/authentication/username/valid/" + value;
            return http.get(uri).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function () { return true; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (error) {
                context.messageTemplate = 'Please try a different %displayName%.';
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(false);
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
        }, __assign({}, validatorContext, { messageTemplate: (validatorContext && validatorContext.messageTemplate) ||
                UniqueUsernameValidator.messageTemplate })) || this;
    }
    UniqueUsernameValidator.factory = function (http) {
        return {
            name: 'uniqueUsername',
            fn: function (group, context) {
                return new UniqueUsernameValidator(http, group, context);
            }
        };
    };
    UniqueUsernameValidator.messageTemplate = '%displayName% %errorMsg%';
    return UniqueUsernameValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_3__["AsyncValidator"]));



/***/ }),

/***/ "./src/app/model/validators/verified-address-validator.ts":
/*!****************************************************************!*\
  !*** ./src/app/model/validators/verified-address-validator.ts ***!
  \****************************************************************/
/*! exports provided: VerifiedAddressesValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VerifiedAddressesValidator", function() { return VerifiedAddressesValidator; });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};

var VerifiedAddressesValidator = /** @class */ (function (_super) {
    __extends(VerifiedAddressesValidator, _super);
    function VerifiedAddressesValidator(group, validatorContext) {
        return _super.call(this, 'addressMustBeVerified', group, function (value, context) {
            if (!value) {
                return true;
            }
            var isValid = value.isVerified && value.geoCode != null && value.geoCode !== '';
            if (value.isHome != null) {
                if (value.isHome === false) {
                    context.messageTemplate = VerifiedAddressesValidator.companyMessageTemplate;
                }
                if (value.isHome === true) {
                    context.messageTemplate = VerifiedAddressesValidator.employeeMessageTemplate;
                }
            }
            return isValid;
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || VerifiedAddressesValidator.messageTemplate })) || this;
    }
    VerifiedAddressesValidator.create = function (group, context) {
        return new VerifiedAddressesValidator(group, context);
    };
    VerifiedAddressesValidator.messageTemplate = 'The address must be verified';
    VerifiedAddressesValidator.employeeMessageTemplate = 'The home address must be verified.';
    VerifiedAddressesValidator.companyMessageTemplate = 'Not all company addresses are verified. Please validate or remove them.';
    return VerifiedAddressesValidator;
}(_validation__WEBPACK_IMPORTED_MODULE_0__["Validator"]));



/***/ }),

/***/ "./src/app/shared/accordion/accordion.component.ts":
/*!*********************************************************!*\
  !*** ./src/app/shared/accordion/accordion.component.ts ***!
  \*********************************************************/
/*! exports provided: AccordionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccordionComponent", function() { return AccordionComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

var AccordionComponent = /** @class */ (function () {
    function AccordionComponent() {
        this._expanded = false;
        this.expandedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    Object.defineProperty(AccordionComponent.prototype, "expanded", {
        get: function () {
            return this._expanded;
        },
        set: function (val) {
            this._expanded = val;
            this.expandedChange.emit(val);
        },
        enumerable: true,
        configurable: true
    });
    AccordionComponent.prototype.toggle = function () {
        this.expanded = !this.expanded;
    };
    return AccordionComponent;
}());



/***/ }),

/***/ "./src/app/shared/accordion/index.ts":
/*!*******************************************!*\
  !*** ./src/app/shared/accordion/index.ts ***!
  \*******************************************/
/*! exports provided: AccordionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _accordion_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accordion.component */ "./src/app/shared/accordion/accordion.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AccordionComponent", function() { return _accordion_component__WEBPACK_IMPORTED_MODULE_0__["AccordionComponent"]; });




/***/ }),

/***/ "./src/app/shared/address/address-form.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/shared/address/address-form.component.ts ***!
  \**********************************************************/
/*! exports provided: emptyAddress, AddressFormComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "emptyAddress", function() { return emptyAddress; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddressFormComponent", function() { return AddressFormComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _core_services_tax_services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @core/services/tax-services */ "./src/app/core/services/tax-services/index.ts");
/* harmony import */ var _shared_input__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/input */ "./src/app/shared/input/index.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};







 // full path to avoid circularity

var emptyAddress = {
    street1: '',
    street2: '',
    city: '',
    state: '',
    zip: '',
    country: 'US',
    geoCode: '',
    schoolDistrictCode: null,
    psdCode: null,
    isVerified: false
};
var AddressFormComponent = /** @class */ (function () {
    function AddressFormComponent(addressFinder, addressValidationService, changeDetector, geolocationService, sessionService) {
        this.addressFinder = addressFinder;
        this.addressValidationService = addressValidationService;
        this.changeDetector = changeDetector;
        this.geolocationService = geolocationService;
        this.failedValidation = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.confirmed = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.stateCodes = _model__WEBPACK_IMPORTED_MODULE_3__["USStateCodes"].codes;
        this.isLookingUpAddresses = false;
        this.hadAttemptedAddressLookup = false;
        this.optionalColumns = {
            county: false,
            jurisdiction: false,
            schoolDistrict: false
        };
        this.subs = new _utils__WEBPACK_IMPORTED_MODULE_5__["SubSink"]();
        this.validateAddressSubject = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        this.isAdmin$ = sessionService.isAdmin$;
    }
    AddressFormComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (this.address == null) {
            throw new Error('AddressForm requires an address object (even {}) will do');
        }
        // update the address object passed by the parent component
        // with missing fields from 'emptyAddress' but ...
        var cleanAddr = __assign({}, emptyAddress, this.address);
        cleanAddr.isVerified = cleanAddr.isVerified && !!cleanAddr.geoCode;
        // DO NOT change the address object reference. Use Object.assign() to modify.
        Object.assign(this.address, cleanAddr);
        this.geolocate();
        this.subscribeAutocomplete();
        this.cacheAddress(this.address);
        // Validate address when triggered via subject
        var validateAddress$ = this.validateAddressSubject.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["debounceTime"])(100), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["switchMap"])(function () {
            _this.isLookingUpAddresses = true;
            _this.resetGeoValidStatus();
            // Create address snapshot and validate it (if possible)
            var addr = Object.assign({}, _this.address);
            return Object(_utils__WEBPACK_IMPORTED_MODULE_5__["isComplete"])(addr)
                ? _this.addressValidationService.validateAddress(addr)
                : Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])({ isValid: false, suggestedAddresses: [] });
        }));
        this.subs.sink = validateAddress$.subscribe(function (validation) { return _this.handleAddressValidation(validation); });
        if (!this.inline && this.addressValidationService.hasSuggestion(this.address)) {
            this.validateAddress();
        }
        var inputEl = this.streetElement.child.nativeElement;
        this.addressFinder.disableBrowserAutocomplete(inputEl);
    };
    AddressFormComponent.prototype.ngOnDestroy = function () {
        this.subs.unsubscribe();
    };
    AddressFormComponent.prototype.subscribeAutocomplete = function () {
        var _this = this;
        if (this.addressChanges$) {
            return; // already subscribing to address changes
        }
        this.addressChanges$ = this.addressFinder.getAutocompleteAddress(this.streetElement.child.nativeElement);
        // Null if address finder wasn't ready. Try again on next focus.
        if (this.addressChanges$) {
            this.subs.sink = this.addressChanges$.subscribe(function (address) {
                // User picked an address when street1 is truthy; else user pressed Enter key.
                if (address.street1) {
                    _this.resetGeoValidStatus();
                    _this.addressPicked(address);
                }
            });
        }
    };
    AddressFormComponent.prototype.geolocate = function () {
        this.geolocationService.update();
    };
    AddressFormComponent.prototype.onFocus = function () {
        this.subscribeAutocomplete();
    };
    AddressFormComponent.prototype.onStreetOneBlur = function () {
        var _this = this;
        // Must distinguish between a user entering street value and a user picking a Google Places address
        // THIS IS A HACK. BEWARE OF CHANGES TO GOOGLE PLACES API BEHAVIOR
        // If the google places API changes, this detection strategy might change also.
        setTimeout(function () {
            // When user simply enters the street and leaves the input box without picking a google place,
            // the value in the input box and the value in address.street1 are the same.
            // When user picks a google place, after one tick,
            // google places fills the input box value with the picked address
            // That value differs from the user-entered value which is bound to street1.
            if (_this.address.street1 === _this.streetElement.child.nativeElement.value) {
                _this.validateIfChanged(); // user entered a value rather than picking an address.
            }
        }, 0);
    };
    AddressFormComponent.prototype.onStateChanged = function () {
        this.validateIfChanged();
    };
    AddressFormComponent.prototype.onBlur = function () {
        this.validateIfChanged();
    };
    AddressFormComponent.prototype.validateAddress = function () {
        this.validateAddressSubject.next();
    };
    AddressFormComponent.prototype.isCurrentAddressComplete = function () {
        return Object(_utils__WEBPACK_IMPORTED_MODULE_5__["isComplete"])(this.address);
    };
    AddressFormComponent.prototype.updateAddress = function (address) {
        Object.assign(this.address, address);
        this.cacheAddress(this.address);
    };
    AddressFormComponent.prototype.confirmAddress = function (pickedAddress) {
        Object.assign(this.address, {
            street1: pickedAddress.street1,
            city: pickedAddress.city,
            state: pickedAddress.state,
            zip: pickedAddress.zip,
            geoCode: pickedAddress.geoCode,
            schoolDistrictCode: pickedAddress.schoolDistrictCode,
            psdCode: pickedAddress.psdCode,
            isVerified: !!pickedAddress.geoCode
        });
        this.cacheAddress(this.address);
        if (!this.changeDetector.destroyed) {
            this.changeDetector.detectChanges();
        }
        this.confirmed.emit(this.address);
    };
    AddressFormComponent.prototype.geoCodeTouched = function () {
        if (!this.hasValidGeoCode) {
            this.address.isVerified = false;
        }
    };
    Object.defineProperty(AddressFormComponent.prototype, "hasValidGeoCode", {
        get: function () {
            return this.address != null && this.address.geoCode != null && this.address.geoCode.length === 9;
        },
        enumerable: true,
        configurable: true
    });
    AddressFormComponent.prototype.addressPicked = function (address) {
        // Need to clear the address and trigger a change detection before assigning the suggested address, otherwise a strange bug happens
        // where clicking multiple times through the Places dropdown with same Street address will leave full address inside the textbox
        // because address.street1 does not change yet the input text was forcibly changed, therefore Angular will not force an UI update.
        Object.assign(this.address, emptyAddress);
        this.changeDetector.detectChanges(); // because no ng event occurs when clicking Places dropdown
        // update the address object passed by the parent component
        Object.assign(this.address, emptyAddress, address);
        this.changeDetector.detectChanges();
        this.validateIfChanged();
    };
    AddressFormComponent.prototype.resetGeoValidStatus = function () {
        // Clear prev address results
        this.pickAddresses = [];
        // Clear the address
        this.address.isVerified = false;
        this.address.geoCode = '';
        this.address.schoolDistrictCode = null;
        this.address.psdCode = null;
        this.changeDetector.detectChanges();
    };
    AddressFormComponent.prototype.hasAddressChanged = function () {
        return this.cachedAddress == null ||
            Object(_utils__WEBPACK_IMPORTED_MODULE_5__["addressToString"])(this.address).localeCompare(Object(_utils__WEBPACK_IMPORTED_MODULE_5__["addressToString"])(this.cachedAddress)) !== 0;
    };
    AddressFormComponent.prototype.handleAddressValidation = function (addrValidation) {
        var pickAddresses = addrValidation.suggestedAddresses.map(function (e) {
            return {
                street1: e.addressLine1,
                street2: e.addressLine2,
                city: e.city,
                state: e.state,
                zip: e.zip,
                country: 'US',
                geoCode: e.geoCode,
                schoolDistrictCode: e.schoolDistrict,
                psdCode: e.psdCode,
                county: e.county,
                jurisdiction: e.jurisdiction,
                schoolDistrict: e.schoolDistrictName
            };
        });
        if (addrValidation.isValid) {
            this.confirmAddress(pickAddresses[0]);
        }
        else if (this.inline) {
            this.failedValidation.emit(true);
        }
        else {
            this.pickAddresses = pickAddresses;
            this.optionalColumns = {
                county: this.ifMultipleChoices('county'),
                jurisdiction: this.ifMultipleChoices('jurisdiction'),
                schoolDistrict: this.ifMultipleChoices('schoolDistrict')
            };
        }
        this.cacheAddress(this.address);
        this.isLookingUpAddresses = false;
        this.hadAttemptedAddressLookup = true;
        if (!this.changeDetector.destroyed) {
            this.changeDetector.detectChanges();
        }
    };
    /**
     * Return true if the pickAddresses have more than one value for the given property.
     * @param property The address property to examine, e.g., 'County'
     */
    AddressFormComponent.prototype.ifMultipleChoices = function (property) {
        var choices = this.pickAddresses.reduce(function (acc, addr) {
            var choice = addr[property];
            return choice && -1 === acc.indexOf(choice) ? acc.concat(choice) : acc;
        }, []);
        return choices.length > 1;
    };
    // Cache the address so we dont compare on each address change
    AddressFormComponent.prototype.cacheAddress = function (address) {
        this.cachedAddress = Object.assign({}, address);
    };
    AddressFormComponent.prototype.validateIfChanged = function () {
        if (this.hasAddressChanged()) {
            this.resetGeoValidStatus();
            if (this.isCurrentAddressComplete()) {
                this.validateAddress();
            }
        }
    };
    return AddressFormComponent;
}());



/***/ }),

/***/ "./src/app/shared/address/address-modal.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/shared/address/address-modal.component.ts ***!
  \***********************************************************/
/*! exports provided: AddressModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddressModalComponent", function() { return AddressModalComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @entity */ "./src/app/store/entity/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _app_core_services_tax_services_tax_collector_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/core/services/tax-services/tax-collector.service */ "./src/app/core/services/tax-services/tax-collector.service.ts");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};







var AddressModalComponent = /** @class */ (function () {
    function AddressModalComponent(addressService, taxCollectorService, modalService) {
        var _this = this;
        this.addressService = addressService;
        this.taxCollectorService = taxCollectorService;
        this.modalService = modalService;
        /** Modal title */
        this.modalTitle = 'Address';
        this.save = function (newAddr) {
            if (!newAddr) {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null); // nothing to save
            }
            return _this.addressService.entityMap$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (addrMap) {
                var existing = addrMap[newAddr.id];
                if (existing && !Object(_utils__WEBPACK_IMPORTED_MODULE_5__["areDifferent"])(newAddr, existing)) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null); // no change
                }
                var saveObservable = existing
                    ? _this.addressService.update(newAddr)
                    : _this.addressService.add(newAddr);
                return saveObservable.pipe(
                // After saving address, re-compute taxes and save them
                // then pass the saved address along
                Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (savedAddr) {
                    return _this.taxCollectorService.computeTaxes().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (_) { return savedAddr; }));
                }));
            }));
        };
    }
    Object.defineProperty(AddressModalComponent.prototype, "isDeleteConfirmed", {
        get: function () {
            return /delete/i.test(this.deleteConfirmation);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Open the location editor modal for an existing address and save the address if user changes it.
     * Does nothing if read-only.
     * @param existingAddress Address to edit
     * @param [title] Title to display in modal editor
     * @returns Cold, terminating observable of the saved, new-or-updated Address or null if no change.
     * Must subscribe but no need to unsubscribe.
     */
    AddressModalComponent.prototype.addOrEditAddress = function (existingAddress, title) {
        var _this = this;
        this.address = Object.assign({}, existingAddress); // remove prototype while cloning.
        var modalTitle = title || this.address.id == null ? 'Add Address' : 'Edit Address';
        return this.addressService.readOnly$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (isReadOnly) {
            return isReadOnly
                ? Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null)
                : _this.openAddressModal(modalTitle).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (newAddr) { return _this.save(newAddr); }));
        }));
    };
    /**
     * Open a delete confirmation dialog and
     * save a "removed" address if user confirms "delete".
     * Does nothing if read-only.
     * @param existingAddress Address to delete/remove
     * @returns Cold, terminating observable of the saved Address with isRemoved:true or null if no change.
     * Must subscribe but no need to unsubscribe.
     */
    AddressModalComponent.prototype.removeAddress = function (existingAddress) {
        var _this = this;
        this.deleteConfirmation = '';
        this.address = __assign({}, existingAddress);
        return this.addressService.readOnly$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (isReadOnly) {
            return isReadOnly
                ? Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null)
                : Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(_this.modalService.open(_this.removeAddressContent).result).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (result) { return /delete/i.test(result) ? __assign({}, existingAddress, { isRemoved: true }) : null; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (error) { return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null); }), // dismissed
                Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (newAddr) { return _this.save(newAddr); }));
        }));
    };
    /** Internal to component */
    AddressModalComponent.prototype.canSave = function () {
        var canSave = this.hasSomeValue(this.address.city) &&
            this.hasSomeValue(this.address.street1) &&
            this.hasSomeValue(this.address.zip) &&
            this.hasSomeValue(this.address.state);
        return canSave;
    };
    /**
     * Open the address modal to add or edit an address
     * @param [title] Title to display in modal editor
     * @returns Address if added/edited or null canceled dismissed.
     */
    AddressModalComponent.prototype.openAddressModal = function (title) {
        var _this = this;
        this.modalTitle = title || 'Address';
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(this.modalService.open(this.editAddressContent, { backdrop: 'static' }).result).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (result) { return result === 'save' ? _this.address : null; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (error) { return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(null); }) // dismissed
        );
    };
    AddressModalComponent.prototype.hasSomeValue = function (val) {
        return val != null && val.length > 0;
    };
    return AddressModalComponent;
}());



/***/ }),

/***/ "./src/app/shared/amount-or-percent-value/amount-or-percent-value.component.ts":
/*!*************************************************************************************!*\
  !*** ./src/app/shared/amount-or-percent-value/amount-or-percent-value.component.ts ***!
  \*************************************************************************************/
/*! exports provided: AmountOrPercentValueComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AmountOrPercentValueComponent", function() { return AmountOrPercentValueComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

var AmountOrPercentValueComponent = /** @class */ (function () {
    function AmountOrPercentValueComponent() {
        this.isAmountChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.valueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    AmountOrPercentValueComponent.prototype.ngOnInit = function () {
    };
    AmountOrPercentValueComponent.prototype.setIsAmount = function (value) {
        if (this.model && this.isAmountPropertyName) {
            this.model[this.isAmountPropertyName] = value;
            this.isAmountChange.emit();
        }
    };
    AmountOrPercentValueComponent.prototype.setValue = function (value) {
        var num = Number.parseFloat(value);
        if (this.model && this.propertyNameValue) {
            this.model[this.propertyNameValue] = num;
        }
        this.valueChange.emit();
    };
    return AmountOrPercentValueComponent;
}());



/***/ }),

/***/ "./src/app/shared/contact-cust-support.component.ngfactory.js":
/*!********************************************************************!*\
  !*** ./src/app/shared/contact-cust-support.component.ngfactory.js ***!
  \********************************************************************/
/*! exports provided: RenderType_ContactCustomerSupportComponent, View_ContactCustomerSupportComponent_0, View_ContactCustomerSupportComponent_Host_0, ContactCustomerSupportComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_ContactCustomerSupportComponent", function() { return RenderType_ContactCustomerSupportComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_ContactCustomerSupportComponent_0", function() { return View_ContactCustomerSupportComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_ContactCustomerSupportComponent_Host_0", function() { return View_ContactCustomerSupportComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContactCustomerSupportComponentNgFactory", function() { return ContactCustomerSupportComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _contact_cust_support_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contact-cust-support.component */ "./src/app/shared/contact-cust-support.component.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 


var styles_ContactCustomerSupportComponent = ["[_nghost-%COMP%]: { display: inline}"];
var RenderType_ContactCustomerSupportComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 0, styles: styles_ContactCustomerSupportComponent, data: {} });

function View_ContactCustomerSupportComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "a", [["href", "https://www.surepayroll.com/about/contact-us"], ["target", "_blank"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](1, null, ["", ""])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, [" our Customer Support team at "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 1, "a", [["href", "tel:18009148088"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["1-800-914-8088"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.linkText; _ck(_v, 1, 0, currVal_0); }); }
function View_ContactCustomerSupportComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-contact-support", [], null, null, null, View_ContactCustomerSupportComponent_0, RenderType_ContactCustomerSupportComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 49152, null, 0, _contact_cust_support_component__WEBPACK_IMPORTED_MODULE_1__["ContactCustomerSupportComponent"], [], null, null)], null, null); }
var ContactCustomerSupportComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-contact-support", _contact_cust_support_component__WEBPACK_IMPORTED_MODULE_1__["ContactCustomerSupportComponent"], View_ContactCustomerSupportComponent_Host_0, { linkText: "linkText" }, {}, []);



/***/ }),

/***/ "./src/app/shared/contact-cust-support.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/shared/contact-cust-support.component.ts ***!
  \**********************************************************/
/*! exports provided: ContactCustomerSupportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContactCustomerSupportComponent", function() { return ContactCustomerSupportComponent; });
var ContactCustomerSupportComponent = /** @class */ (function () {
    function ContactCustomerSupportComponent() {
        this.linkText = 'contact';
    }
    return ContactCustomerSupportComponent;
}());



/***/ }),

/***/ "./src/app/shared/date-range-pay-period/date-range-pay-period-vm.ts":
/*!**************************************************************************!*\
  !*** ./src/app/shared/date-range-pay-period/date-range-pay-period-vm.ts ***!
  \**************************************************************************/
/*! exports provided: DateRangePayPeriodvm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateRangePayPeriodvm", function() { return DateRangePayPeriodvm; });
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _app_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/model */ "./src/app/model/index.ts");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");



var DateRangePayPeriodvm = /** @class */ (function () {
    function DateRangePayPeriodvm() {
    }
    Object.defineProperty(DateRangePayPeriodvm.prototype, "selectedFrequency", {
        get: function () {
            return this._selectedFrequency;
        },
        set: function (frequency) {
            this._selectedFrequency = frequency;
            this._toDate = null;
            this._fromDate = null;
            this._checkDate = null;
            this._secondFromDate = null;
            this._secondToDate = null;
            this._secondCheckDate = null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodvm.prototype, "toDate", {
        get: function () {
            return this._toDate;
        },
        set: function (value) {
            if (this.isValidNgbDate(value)) {
                this._toDate = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodvm.prototype, "fromDate", {
        get: function () {
            return this._fromDate;
        },
        set: function (value) {
            if (this.isValidNgbDate(value)) {
                this._fromDate = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodvm.prototype, "checkDate", {
        get: function () {
            return this._checkDate;
        },
        set: function (value) {
            if (this.isValidNgbDate(value)) {
                this._checkDate = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodvm.prototype, "secondFromDate", {
        get: function () {
            return this._secondFromDate;
        },
        set: function (value) {
            if (this.isValidNgbDate(value)) {
                this._secondFromDate = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodvm.prototype, "secondToDate", {
        get: function () {
            return this._secondToDate;
        },
        set: function (value) {
            if (this.isValidNgbDate(value)) {
                this._secondToDate = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodvm.prototype, "secondCheckDate", {
        get: function () {
            return this._secondCheckDate;
        },
        set: function (value) {
            if (this.isValidNgbDate(value)) {
                this._secondCheckDate = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodvm.prototype, "frequencyPeriodOffset", {
        get: function () {
            var daysOffset = 0;
            if (this.selectedFrequency === _app_model__WEBPACK_IMPORTED_MODULE_1__["PayrollFrequency"].BiWeekly) {
                daysOffset = 13;
            }
            else if (this.selectedFrequency === _app_model__WEBPACK_IMPORTED_MODULE_1__["PayrollFrequency"].Weekly) {
                daysOffset = 6;
            }
            return daysOffset;
        },
        enumerable: true,
        configurable: true
    });
    DateRangePayPeriodvm.prototype.isValidNgbDate = function (value) {
        if (!value) {
            return true;
        }
        var tDate = new Date(value.year, value.month - 1, value.day);
        if (!isNaN(tDate.getTime())) {
            return true;
        }
        else {
            return false;
        }
    };
    DateRangePayPeriodvm.prototype.getQuarterlyStartDateFromEndDate = function (date) {
        var tempDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_2__["getDateFromNgb"])(date);
        if (tempDate) {
            var daysInMonth = Object(_app_core__WEBPACK_IMPORTED_MODULE_2__["getDaysInMonth"])(tempDate.getFullYear(), tempDate.getMonth() - 3);
            if (tempDate.getDate() > daysInMonth) {
                tempDate.setDate(daysInMonth);
            }
            tempDate.setMonth(tempDate.getMonth() - 3);
            tempDate.setDate(tempDate.getDate() + 1);
        }
        return Object(_app_core__WEBPACK_IMPORTED_MODULE_2__["getNgbDate"])(tempDate);
    };
    DateRangePayPeriodvm.prototype.getQuarterlyEndDateFromStartDate = function (date) {
        var tempDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_2__["getDateFromNgb"])(date);
        if (tempDate) {
            var daysInMonth = Object(_app_core__WEBPACK_IMPORTED_MODULE_2__["getDaysInMonth"])(tempDate.getFullYear(), tempDate.getMonth() + 3);
            if (tempDate.getDate() > daysInMonth) {
                tempDate.setDate(daysInMonth);
            }
            tempDate.setMonth(tempDate.getMonth() + 3);
            tempDate.setDate(tempDate.getDate() - 1);
        }
        return Object(_app_core__WEBPACK_IMPORTED_MODULE_2__["getNgbDate"])(tempDate);
    };
    DateRangePayPeriodvm.prototype.setFromDateWithSync = function (value) {
        if (this.isValidNgbDate(value)) {
            this._fromDate = value;
        }
        if (this._selectedFrequency === _app_model__WEBPACK_IMPORTED_MODULE_1__["PayrollFrequency"].SemiMonthly) {
            return;
        }
        var tempDate;
        if (this._selectedFrequency === _app_model__WEBPACK_IMPORTED_MODULE_1__["PayrollFrequency"].Monthly) {
            var day = void 0;
            // If the To date falls on a day that is not present on the next month
            // Set to the end of the month day
            if ((value.day - 1) > Object(_app_core__WEBPACK_IMPORTED_MODULE_2__["getDaysInMonth"])(value.year, value.month)) {
                day = Object(_app_core__WEBPACK_IMPORTED_MODULE_2__["getDaysInMonth"])(value.year, value.month);
            }
            else {
                day = value.day - 1;
            }
            tempDate = new Date(value.year, value.month, day);
        }
        else if (this._selectedFrequency === _app_model__WEBPACK_IMPORTED_MODULE_1__["PayrollFrequency"].Quarterly) {
            tempDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_2__["getDateFromNgb"])(this.getQuarterlyEndDateFromStartDate(value));
        }
        else {
            tempDate = new Date(value.year, value.month - 1, value.day + this.frequencyPeriodOffset);
        }
        this._toDate = new _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_0__["NgbDate"](tempDate.getFullYear(), tempDate.getMonth() + 1, tempDate.getDate());
    };
    DateRangePayPeriodvm.prototype.setToDateWithSync = function (value) {
        if (this.isValidNgbDate(value)) {
            this._toDate = value;
        }
        if (this._selectedFrequency === _app_model__WEBPACK_IMPORTED_MODULE_1__["PayrollFrequency"].SemiMonthly) {
            if (value === null) {
                this.secondFromDate = null;
            }
            else {
                var tDate = new Date(value.year, value.month - 1, value.day + 1);
                this.secondFromDate = new _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_0__["NgbDate"](tDate.getFullYear(), tDate.getMonth() + 1, tDate.getDate());
            }
            return;
        }
        var tempDate;
        if (this._selectedFrequency === _app_model__WEBPACK_IMPORTED_MODULE_1__["PayrollFrequency"].Monthly) {
            var day = void 0;
            var month = void 0;
            // If the From Date falls on a day that is not present in the previous month
            // Set it to first day of the current month.
            if ((value.day + 1) > Object(_app_core__WEBPACK_IMPORTED_MODULE_2__["getDaysInMonth"])(value.year, value.month - 2)) {
                month = value.month - 1;
                day = 1;
            }
            else {
                day = value.day + 1;
                month = value.month - 2;
            }
            tempDate = new Date(value.year, month, day);
        }
        else if (this._selectedFrequency === _app_model__WEBPACK_IMPORTED_MODULE_1__["PayrollFrequency"].Quarterly) {
            tempDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_2__["getDateFromNgb"])(this.getQuarterlyStartDateFromEndDate(value));
        }
        else {
            tempDate = new Date(value.year, value.month - 1, value.day - this.frequencyPeriodOffset);
        }
        this._fromDate = new _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_0__["NgbDate"](tempDate.getFullYear(), tempDate.getMonth() + 1, tempDate.getDate());
    };
    return DateRangePayPeriodvm;
}());



/***/ }),

/***/ "./src/app/shared/date-range-pay-period/date-range-pay-period.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/shared/date-range-pay-period/date-range-pay-period.component.ts ***!
  \*********************************************************************************/
/*! exports provided: DateRangePayPeriodComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateRangePayPeriodComponent", function() { return DateRangePayPeriodComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _schedule_dates__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schedule-dates */ "./src/app/shared/date-range-pay-period/schedule-dates.ts");
/* harmony import */ var _app_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/model */ "./src/app/model/index.ts");
/* harmony import */ var _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @model/codes-enums/enums */ "./src/app/model/codes-enums/enums.ts");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var _date_range_pay_period_vm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./date-range-pay-period-vm */ "./src/app/shared/date-range-pay-period/date-range-pay-period-vm.ts");








var DateRangePayPeriodComponent = /** @class */ (function () {
    function DateRangePayPeriodComponent(calendar) {
        var _this = this;
        this.formatDate = _app_core__WEBPACK_IMPORTED_MODULE_5__["formatDate"];
        this.CalendarState = _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"];
        /* Initial status set to from date */
        this._status = _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].PeriodStart;
        this._showFirstPeriodQuestion = false;
        this._showFirstCheckQuestion = false;
        this._showSecondPeriodQuestion = false;
        this._showSecondCheckQuestion = false;
        this.navigationType = 'arrows';
        this.currentDate = new Date();
        this.minimumStartDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getNgbDate"])(new Date(this.currentDate.getFullYear() - 1, this.currentDate.getMonth(), this.currentDate.getDate()));
        this.maximumEndDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getNgbDate"])(new Date(this.currentDate.getFullYear() + 1, this.currentDate.getMonth(), this.currentDate.getDate()));
        this.dateRangevm = new _date_range_pay_period_vm__WEBPACK_IMPORTED_MODULE_6__["DateRangePayPeriodvm"]();
        // Rule for disabling the check dates on the calendar
        this.disabledCheckDateRule = (function (date) {
            return (_this.selectedFrequency !== _app_model__WEBPACK_IMPORTED_MODULE_3__["PayrollFrequency"].SemiMonthly
                && _this.selectedFrequency !== _app_model__WEBPACK_IMPORTED_MODULE_3__["PayrollFrequency"].Monthly
                && _this.selectedFrequency !== _app_model__WEBPACK_IMPORTED_MODULE_3__["PayrollFrequency"].Quarterly
                && _this.calendar.getWeekday(date) >= 6)
                || date.before(_this.minimumCheckDate)
                || date.after(_this.maximumEndDate);
        });
        // Rule for disabling the period dates on the calendar
        this.disablePeriodDateRule = (function (date) {
            return date.before(_this.minimumStartDate)
                || date.after(_this.maximumEndDate);
        });
        this.scheduleDates = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.calendar = calendar;
    }
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "selectedFrequency", {
        get: function () {
            return this._selectedFrequency;
        },
        // #region Inputs & Outputs
        set: function (frequency) {
            this._selectedFrequency = frequency;
            this.dateRangevm.selectedFrequency = frequency;
            if (this.companyDates != null) {
                this._showFirstPeriodQuestion = false;
                this._showFirstCheckQuestion = false;
                this._showSecondPeriodQuestion = false;
                this._showSecondCheckQuestion = false;
                this.companyDates.firstPeriodEndOfMonth = null;
                this.companyDates.firstCheckEndOfMonth = null;
                this.companyDates.secondPeriodEndOfMonth = null;
                this.companyDates.secondCheckEndOfMonth = null;
                this.status = _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].PeriodStart;
                this.updateScheduleDates();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "holidayTimes", {
        get: function () {
            return this._holidaysTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "holidays", {
        set: function (dateArray) {
            if (dateArray) {
                this._holidaysTime = dateArray.map(function (x) { return x.getTime(); });
            }
            this.minimumCheckDate = this.findFirstAllowedCheckDate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "showFirstPeriodQuestion", {
        // #endregion Inputs & Outputs
        // #region Getters and Setters for EOM display flags
        get: function () {
            return this._showFirstPeriodQuestion;
        },
        set: function (val) {
            if (val !== this._showFirstPeriodQuestion && val) {
                this.companyDates.firstPeriodEndOfMonth = true;
            }
            this._showFirstPeriodQuestion = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "showFirstCheckQuestion", {
        get: function () {
            return this._showFirstCheckQuestion;
        },
        set: function (val) {
            if (val !== this._showFirstCheckQuestion && val) {
                this.companyDates.firstCheckEndOfMonth = true;
            }
            this._showFirstCheckQuestion = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "showSecondPeriodQuestion", {
        get: function () {
            return this._showSecondPeriodQuestion;
        },
        set: function (val) {
            if (val !== this._showSecondPeriodQuestion && val) {
                this.companyDates.secondPeriodEndOfMonth = true;
            }
            this._showSecondPeriodQuestion = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "showSecondCheckQuestion", {
        get: function () {
            return this._showSecondCheckQuestion;
        },
        set: function (val) {
            if (val !== this._showSecondCheckQuestion && val) {
                this.companyDates.secondCheckEndOfMonth = true;
            }
            this._showSecondCheckQuestion = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "status", {
        get: function () {
            return this._status;
        },
        // #endregion Getters and Setters for EOM display flags
        /* Detect status changes -- if check date is being selected, disable weekends */
        set: function (value) {
            this._status = value;
            if (value === _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].Check) {
                this.checkValidationRules();
            }
            else if (value === _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].Disabled) {
                this.disableAll();
            }
            else {
                this.periodValidationRules();
            }
        },
        enumerable: true,
        configurable: true
    });
    DateRangePayPeriodComponent.prototype.ngOnInit = function () {
        this.dateRangevm.fromDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getNgbDateFromString"])(this.companyDates.periodStartDate);
        this.dateRangevm.toDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getNgbDateFromString"])(this.companyDates.periodEndDate);
        this.dateRangevm.checkDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getNgbDateFromString"])(this.companyDates.checkDate);
        this.dateRangevm.secondFromDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getNgbDateFromString"])(this.companyDates.secondPeriodStartDate);
        this.dateRangevm.secondToDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getNgbDateFromString"])(this.companyDates.secondPeriodEndDate);
        this.dateRangevm.secondCheckDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getNgbDateFromString"])(this.companyDates.secondCheckDate);
        this._showFirstPeriodQuestion = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["determineEndOfMonthStatus"])(new Date(this.companyDates.periodEndDate)) === null;
        this._showFirstCheckQuestion = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["determineEndOfMonthStatus"])(new Date(this.companyDates.checkDate)) === null;
        this._showSecondPeriodQuestion = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["determineEndOfMonthStatus"])(new Date(this.companyDates.secondPeriodEndDate)) === null;
        this._showSecondCheckQuestion = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["determineEndOfMonthStatus"])(new Date(this.companyDates.secondCheckDate)) === null;
        this.minimumCheckDate = this.findFirstAllowedCheckDate();
        if (this.dateRangevm.fromDate && this.dateRangevm.toDate && this.dateRangevm.checkDate) {
            this.status = _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].Disabled;
        }
        else {
            this.status = _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].PeriodStart;
        }
    };
    DateRangePayPeriodComponent.prototype.ngAfterViewInit = function () {
        this.scheduleDates.emit(this.companyDates);
    };
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "IsFrequencySemiMonthly", {
        get: function () {
            return this.selectedFrequency === _app_model__WEBPACK_IMPORTED_MODULE_3__["PayrollFrequency"].SemiMonthly;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "IsFrequencyMonthly", {
        get: function () {
            return this.selectedFrequency === _app_model__WEBPACK_IMPORTED_MODULE_3__["PayrollFrequency"].Monthly;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "IsFrequencyQuarterly", {
        get: function () {
            return this.selectedFrequency === _app_model__WEBPACK_IMPORTED_MODULE_3__["PayrollFrequency"].Quarterly;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "IsFrequencyAnnual", {
        get: function () {
            return this.selectedFrequency === _app_model__WEBPACK_IMPORTED_MODULE_3__["PayrollFrequency"].Annual;
        },
        enumerable: true,
        configurable: true
    });
    DateRangePayPeriodComponent.prototype.checkValidationRules = function () {
        this.markDisabled = this.disabledCheckDateRule;
    };
    DateRangePayPeriodComponent.prototype.periodValidationRules = function () {
        this.markDisabled = this.disablePeriodDateRule;
    };
    DateRangePayPeriodComponent.prototype.disableAll = function () {
        this.markDisabled = function (date) { return true; };
    };
    // Get the first allowed check date
    DateRangePayPeriodComponent.prototype.findFirstAllowedCheckDate = function () {
        var standardizedDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getFirstAllowedCheckDate"])(this._holidaysTime);
        return Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getNgbDate"])(standardizedDate);
    };
    // Trigger validators of a specific control
    DateRangePayPeriodComponent.prototype.markControlAsTouched = function (controlName) {
        if (controlName.control.value) {
            controlName.control.markAsTouched();
            controlName.control.updateValueAndValidity();
        }
    };
    // Date Range picker control event handler
    DateRangePayPeriodComponent.prototype.onDateSelection = function (date) {
        if (this.status === _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].PeriodStart) {
            this.dateRangevm.setFromDateWithSync(date);
            if (this.IsFrequencyMonthly) {
                this.updatePeriodEOM(this.dateRangevm.toDate);
            }
            this.status = _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].Check;
        }
        else if (this.status === _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].PeriodEnd) {
            this.dateRangevm.setToDateWithSync(date);
            if (this.IsFrequencyMonthly) {
                this.updatePeriodEOM(date);
            }
            this.status = _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].Check;
        }
        else {
            this.dateRangevm.checkDate = date;
            if (this.IsFrequencyMonthly) {
                this.onCheckDateChange(date);
            }
        }
        if (this.dateRangevm.fromDate && this.dateRangevm.toDate && this.dateRangevm.checkDate) {
            this.status = _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].Disabled;
        }
        this.updateScheduleDates();
    };
    DateRangePayPeriodComponent.prototype.getEndOfMonthStatus = function (date) {
        return date === null ? false
            : this.IsFrequencyQuarterly ? Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["determineEndOfQuarterStatus"])(Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getDateFromNgb"])(date))
                : Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["determineEndOfMonthStatus"])(Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getDateFromNgb"])(date));
    };
    // #region Monthly handlers
    DateRangePayPeriodComponent.prototype.updatePeriodEOM = function (date) {
        var endOfMonthStatus = this.getEndOfMonthStatus(date);
        if (endOfMonthStatus !== null) {
            this.companyDates.firstPeriodEndOfMonth = endOfMonthStatus;
            this.showFirstPeriodQuestion = false;
        }
        else {
            this.showFirstPeriodQuestion = true;
        }
        this.updatePeriodDatesBasedOnEOM(this.companyDates.firstPeriodEndOfMonth, date);
    };
    DateRangePayPeriodComponent.prototype.getMonthOffsetByFrequency = function () {
        var monthOffset = 0;
        if (this.selectedFrequency) {
            switch (this.selectedFrequency) {
                case _app_model__WEBPACK_IMPORTED_MODULE_3__["PayrollFrequency"].Monthly:
                    monthOffset = 1;
                    break;
                case _app_model__WEBPACK_IMPORTED_MODULE_3__["PayrollFrequency"].Quarterly:
                    monthOffset = 3;
                    break;
                case _app_model__WEBPACK_IMPORTED_MODULE_3__["PayrollFrequency"].Annual:
                    monthOffset = 12;
                    break;
            }
        }
        return monthOffset;
    };
    // Update the from date and to date based on the end of month status question
    DateRangePayPeriodComponent.prototype.updatePeriodDatesBasedOnEOM = function (isEndOfMonth, date) {
        var endDate;
        if (date) {
            endDate = date;
        }
        else {
            endDate = this.dateRangevm.toDate;
        }
        if (isEndOfMonth) {
            var firstDayOfMonth = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getFirstDayOfMonth"])(endDate.year, endDate.month - this.getMonthOffsetByFrequency());
            this.dateRangevm.setFromDateWithSync(Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getNgbDate"])(firstDayOfMonth));
        }
        else {
            this.dateRangevm.setToDateWithSync(endDate);
        }
    };
    // #endregion Monthly handlers
    // #region date Event Handlers
    DateRangePayPeriodComponent.prototype.onPeriodStartChange = function (date) {
        if (this.IsFrequencyQuarterly) {
            this.dateRangevm.setFromDateWithSync(date);
            this.updatePeriodEOM(this.dateRangevm.toDate);
        }
        this.updateScheduleDates();
    };
    DateRangePayPeriodComponent.prototype.onPeriodEndChange = function (date) {
        this.dateRangevm.setToDateWithSync(date);
        var endOfMonthStatus = this.getEndOfMonthStatus(date);
        if (endOfMonthStatus !== null) {
            this.companyDates.firstPeriodEndOfMonth = endOfMonthStatus;
            this.showFirstPeriodQuestion = false;
        }
        else {
            this.showFirstPeriodQuestion = true;
        }
        if (this.IsFrequencyQuarterly) {
            this.updatePeriodEOM(this.dateRangevm.toDate);
        }
        this.updateScheduleDates();
    };
    DateRangePayPeriodComponent.prototype.onCheckDateChange = function (date) {
        var endOfMonthStatus = this.getEndOfMonthStatus(date);
        if (endOfMonthStatus !== null) {
            this.companyDates.firstCheckEndOfMonth = endOfMonthStatus;
            this.showFirstCheckQuestion = false;
        }
        else {
            this.showFirstCheckQuestion = true;
        }
        this.updateScheduleDates();
    };
    DateRangePayPeriodComponent.prototype.onSecondPeriodEndChange = function (date) {
        var endOfMonthStatus = this.getEndOfMonthStatus(date);
        if (endOfMonthStatus !== null) {
            this.companyDates.secondPeriodEndOfMonth = endOfMonthStatus;
            this.showSecondPeriodQuestion = false;
        }
        else {
            this.showSecondPeriodQuestion = true;
        }
        // Update the first Start Date from the second period end date
        this.dateRangevm.setFromDateWithSync(this.getFirstPeriodStartFromSecondEndDate(date));
        this.onSecondPeriodEndOfMonthChange(this.companyDates.secondPeriodEndOfMonth);
        this.updateScheduleDates();
    };
    DateRangePayPeriodComponent.prototype.getFirstPeriodStartFromSecondEndDate = function (date) {
        var tempDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getDateFromNgb"])(date);
        if (tempDate) {
            var daysInPrevMonth = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getDaysInMonth"])(tempDate.getFullYear(), tempDate.getMonth() - 1);
            if (tempDate.getDate() > daysInPrevMonth) {
                tempDate.setDate(daysInPrevMonth);
            }
            tempDate.setMonth(tempDate.getMonth() - 1);
            tempDate.setDate(tempDate.getDate() + 1);
        }
        return Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getNgbDate"])(tempDate);
    };
    DateRangePayPeriodComponent.prototype.onSecondCheckDateChange = function (date) {
        var endOfMonthStatus = this.getEndOfMonthStatus(date);
        if (endOfMonthStatus !== null) {
            this.companyDates.secondCheckEndOfMonth = endOfMonthStatus;
            this.showSecondCheckQuestion = false;
        }
        else {
            this.showSecondCheckQuestion = true;
        }
        this.updateScheduleDates();
    };
    DateRangePayPeriodComponent.prototype.onPeriodEndOfMonthChange = function (isEndOfMonth) {
        if ((this.IsFrequencyMonthly || this.IsFrequencyQuarterly) && typeof isEndOfMonth === 'boolean') {
            this.updatePeriodDatesBasedOnEOM(isEndOfMonth);
        }
        this.updateScheduleDates();
    };
    DateRangePayPeriodComponent.prototype.onSecondPeriodEndOfMonthChange = function (isEndOfMonth) {
        if (this.IsFrequencySemiMonthly && typeof isEndOfMonth === 'boolean') {
            var endDate = this.dateRangevm.secondToDate;
            if (isEndOfMonth) {
                var firstDayOfMonth = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getFirstDayOfMonth"])(endDate.year, endDate.month - 1);
                this.dateRangevm.setFromDateWithSync(Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["getNgbDate"])(firstDayOfMonth));
            }
            else {
                this.dateRangevm.setFromDateWithSync(this.getFirstPeriodStartFromSecondEndDate(endDate));
            }
        }
        this.updateScheduleDates();
    };
    DateRangePayPeriodComponent.prototype.onEndOfMonthChange = function (val) {
        this.scheduleDates.emit(this.companyDates);
    };
    // #endregion date event handlers
    // Update the company dates and emit
    DateRangePayPeriodComponent.prototype.updateScheduleDates = function () {
        this.companyDates.checkDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["ngbDateToString"])(this.dateRangevm.checkDate);
        this.companyDates.periodStartDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["ngbDateToString"])(this.dateRangevm.fromDate);
        this.companyDates.periodEndDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["ngbDateToString"])(this.dateRangevm.toDate);
        if (this.IsFrequencySemiMonthly) {
            this.companyDates.secondCheckDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["ngbDateToString"])(this.dateRangevm.secondCheckDate);
            this.companyDates.secondPeriodStartDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["ngbDateToString"])(this.dateRangevm.secondFromDate);
            this.companyDates.secondPeriodEndDate = Object(_app_core__WEBPACK_IMPORTED_MODULE_5__["ngbDateToString"])(this.dateRangevm.secondToDate);
        }
        this.scheduleDates.emit(this.companyDates);
    };
    // #region css styling helpers
    DateRangePayPeriodComponent.prototype.isCheckDate = function (date) {
        return date.equals(this.dateRangevm.checkDate);
    };
    DateRangePayPeriodComponent.prototype.isHovered = function (date) {
        return this.dateRangevm.fromDate && !this.dateRangevm.toDate
            && this.hoveredDate && date.after(this.dateRangevm.fromDate) && date.before(this.hoveredDate);
    };
    DateRangePayPeriodComponent.prototype.isInside = function (date) {
        return date.after(this.dateRangevm.fromDate) && date.before(this.dateRangevm.toDate);
    };
    DateRangePayPeriodComponent.prototype.isRange = function (date) {
        return date.equals(this.dateRangevm.fromDate) || date.equals(this.dateRangevm.toDate) || this.isInside(date) || this.isHovered(date);
    };
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "showCheckDateCssClass", {
        get: function () {
            return this.status === _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].Check;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateRangePayPeriodComponent.prototype, "showPeriodDateCssClass", {
        get: function () {
            return this.status === _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].PeriodStart || this.status === _model_codes_enums_enums__WEBPACK_IMPORTED_MODULE_4__["CalendarState"].PeriodEnd;
        },
        enumerable: true,
        configurable: true
    });
    return DateRangePayPeriodComponent;
}());



/***/ }),

/***/ "./src/app/shared/date-range-pay-period/schedule-dates.ts":
/*!****************************************************************!*\
  !*** ./src/app/shared/date-range-pay-period/schedule-dates.ts ***!
  \****************************************************************/
/*! exports provided: ScheduleDates */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScheduleDates", function() { return ScheduleDates; });
var ScheduleDates = /** @class */ (function () {
    function ScheduleDates() {
    }
    return ScheduleDates;
}());



/***/ }),

/***/ "./src/app/shared/datepicker/datepicker-popup.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/shared/datepicker/datepicker-popup.component.ts ***!
  \*****************************************************************/
/*! exports provided: DatePickerPopupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DatePickerPopupComponent", function() { return DatePickerPopupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _model_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../model.component */ "./src/app/shared/model.component.ts");




var DatePickerPopupComponent = /** @class */ (function () {
    function DatePickerPopupComponent(modelContext) {
        var _this = this;
        this.modelContext = modelContext;
        this.disabled = false;
        this.type = 'text';
        this.placeholder = '';
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onTouched = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.accessorOnChange = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
        };
        this.accessorOnTouched = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
        };
        this.onBlur = function (newValue) {
            _this.accessorOnTouched();
            _this.onTouched.emit();
        };
    }
    Object.defineProperty(DatePickerPopupComponent.prototype, "group", {
        /** Get the latest data-bound group. If not bound, get group from modelContext. */
        get: function () {
            return this._group || (this.modelContext && this.modelContext.group);
        },
        set: function (value) { this._group = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerPopupComponent.prototype, "model", {
        /** Get the latest data-bound model. If not bound, get model from modelContext. */
        get: function () {
            return this._model || (this.modelContext && this.modelContext.model);
        },
        set: function (value) { this._model = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerPopupComponent.prototype, "modelType", {
        /** Get the latest data-bound model type. If not bound, get model type from modelContext. */
        get: function () {
            return this._modelType || (this.modelContext && this.modelContext.modelType);
        },
        set: function (value) { this._modelType = value; },
        enumerable: true,
        configurable: true
    });
    DatePickerPopupComponent.prototype.ngOnInit = function () {
        this.name = (this.name || '') + '$' + DatePickerPopupComponent.nameCounter++;
    };
    DatePickerPopupComponent.prototype.writeValue = function (dateValue) {
        this.currentValue = dateValue;
        delete this.dateStruct;
    };
    DatePickerPopupComponent.prototype.registerOnChange = function (fn) {
        this.accessorOnChange = fn;
    };
    DatePickerPopupComponent.prototype.registerOnTouched = function (fn) {
        this.accessorOnTouched = fn;
    };
    DatePickerPopupComponent.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    DatePickerPopupComponent.prototype.onValueChanged = function () {
        var changedDate = Object(_core_utils__WEBPACK_IMPORTED_MODULE_2__["dateStructToDate"])(this.getValue());
        this.accessorOnChange(changedDate);
        this.onChange.emit(changedDate);
    };
    DatePickerPopupComponent.prototype.onFocus = function () {
        this.focus.emit();
    };
    DatePickerPopupComponent.prototype.getValue = function () {
        if (!this.dateStruct) {
            if (this.model && this.modelType && this.propertyName) {
                this.dateStruct = Object(_core_utils__WEBPACK_IMPORTED_MODULE_2__["dateToDateStruct"])(this.model[this.propertyName]);
            }
            else {
                this.dateStruct = Object(_core_utils__WEBPACK_IMPORTED_MODULE_2__["dateToDateStruct"])(this.currentValue);
            }
        }
        return this.dateStruct;
    };
    DatePickerPopupComponent.prototype.setValue = function (value) {
        this.dateStruct = value;
        var dateValue = Object(_core_utils__WEBPACK_IMPORTED_MODULE_2__["dateStructToDate"])(value);
        if (this.model && this.modelType && this.propertyName) {
            this.model[this.propertyName] = dateValue;
        }
        this.currentValue = dateValue;
        if (this.modelContext) {
            this.modelContext.notifyOfModelChange();
        }
    };
    DatePickerPopupComponent.nameCounter = 0;
    return DatePickerPopupComponent;
}());



/***/ }),

/***/ "./src/app/shared/docs/documents-list.component.ts":
/*!*********************************************************!*\
  !*** ./src/app/shared/docs/documents-list.component.ts ***!
  \*********************************************************/
/*! exports provided: DocumentsListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentsListComponent", function() { return DocumentsListComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _documents_view_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./documents-view.service */ "./src/app/shared/docs/documents-view.service.ts");


var DocumentsListComponent = /** @class */ (function () {
    function DocumentsListComponent(documentsViewService) {
        this.documentsViewService = documentsViewService;
    }
    DocumentsListComponent.prototype.download = function (doc) {
        var link = this.downloadLink.nativeElement;
        var filename = doc.title + '.pdf';
        this.documentsViewService.getDocPdf(doc).subscribe(function (file) {
            if (window.navigator.msSaveOrOpenBlob) {
                // IE 11
                var fn = function () {
                    window.navigator.msSaveOrOpenBlob(file, filename);
                };
                link.addEventListener('click', fn);
                link.click();
                link.removeEventListener('click', fn);
            }
            else {
                var blobUrl = window.URL.createObjectURL(file);
                link.href = blobUrl;
                link.download = filename;
                link.click();
                window.URL.revokeObjectURL(blobUrl);
            }
        });
    };
    return DocumentsListComponent;
}());



/***/ }),

/***/ "./src/app/shared/docs/documents-view.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/shared/docs/documents-view.service.ts ***!
  \*******************************************************/
/*! exports provided: DocumentsViewService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentsViewService", function() { return DocumentsViewService; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _app_core_services_esign_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/core/services/esign.service */ "./src/app/core/services/esign.service.ts");
/* harmony import */ var _entity_entity_services_document_package_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @entity/entity-services/document-package.service */ "./src/app/store/entity/entity-services/document-package.service.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @entity */ "./src/app/store/entity/index.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _store_entity_entity_services_document_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store/entity/entity-services/document.service */ "./src/app/store/entity/entity-services/document.service.ts");
/* harmony import */ var _store_entity_entity_services_envelope_user_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../store/entity/entity-services/envelope-user.service */ "./src/app/store/entity/entity-services/envelope-user.service.ts");
/* harmony import */ var _store_entity_entity_services_company_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../store/entity/entity-services/company.service */ "./src/app/store/entity/entity-services/company.service.ts");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../store/session/session.service */ "./src/app/store/session/session.service.ts");
/* harmony import */ var _store_entity_entity_services_household_filers_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../store/entity/entity-services/household-filers.service */ "./src/app/store/entity/entity-services/household-filers.service.ts");


















var DocumentsViewService = /** @class */ (function () {
    function DocumentsViewService(documentService, documentPackageService, envelopeSignerService, esignService, companyService, router, sessionService, hhFilersService) {
        this.documentService = documentService;
        this.documentPackageService = documentPackageService;
        this.envelopeSignerService = envelopeSignerService;
        this.esignService = esignService;
        this.companyService = companyService;
        this.router = router;
        this.sessionService = sessionService;
        this.hhFilersService = hhFilersService;
        this.isAdmin$ = sessionService.isAdmin$;
        this.hhFilers$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["combineLatest"])(sessionService.currentCompany$, hhFilersService.entities$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (_a) {
            var co = _a[0], hh = _a[1];
            return co.isHousehold ? hh.length && hh[0] : null;
        }));
        this.initializeVm$();
    }
    DocumentsViewService.prototype.initializeVm$ = function () {
        var _this = this;
        this.vms$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["combineLatest"])(this.documentPackageService.documentPackage$, this.sessionService.currentUser$, this.sessionService.currentCompany$, this.hhFilers$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (_a) {
            var docpackage = _a[0], user = _a[1], currentCompany = _a[2], hh = _a[3];
            var allDocs = docpackage.Document;
            var envelopes = docpackage.Envelope;
            var envUsers = docpackage.EnvelopeSigner;
            var activeEnvelopes = envelopes.filter(function (e) { return e && e.status !== _model__WEBPACK_IMPORTED_MODULE_5__["EnvelopeStatus"].voided; });
            var hasVoidedEnvelope = activeEnvelopes.length < envelopes.length;
            var vms = activeEnvelopes.map(function (e) {
                var docs = allDocs.filter(function (d) { return d.envelopeId === e.id; });
                var signers = envUsers.filter(function (eu) { return eu.envelopeId === e.id && !eu.isRemoved; });
                var userSigner = user && signers.find(function (eu) { return eu.userId === user.id; });
                var firstSigner = signers.find(function (s) { return true; });
                var hhPrimarySigner = hh ? signers.find(function (s) { return s.firstName === hh.primaryFirstName && s.lastName === hh.primaryLastName; }) :
                    firstSigner;
                var hhSpouseSigner = hh && signers.find(function (s) { return s.firstName === hh.spouseFirstName && s.lastName === hh.spouseLastName; });
                var isSigner = !userSigner ? '' :
                    userSigner.role === 'viewer' ? 'no' :
                        userSigner.role === 'signer' && userSigner.isEmbedded === true ? 'yes' :
                            '';
                if (isSigner === 'yes' && hh != null) {
                    isSigner = (userSigner.firstName === hh.spouseFirstName && userSigner.lastName === hh.spouseLastName) ? 'spouse' : 'primary';
                }
                var isSigningComplete = e.status === _model__WEBPACK_IMPORTED_MODULE_5__["EnvelopeStatus"].completed;
                var isSent = isSigningComplete || e.status === _model__WEBPACK_IMPORTED_MODULE_5__["EnvelopeStatus"].sent;
                var isResign = hasVoidedEnvelope && !isSigningComplete;
                var isSignedByUser = userSigner && userSigner.status === _model__WEBPACK_IMPORTED_MODULE_5__["EnvelopeStatus"].completed;
                return {
                    docs: docs,
                    envelope: e,
                    signers: signers,
                    user: user,
                    isSigner: isSigner,
                    isSigningComplete: isSigningComplete,
                    isSignedByUser: isSignedByUser,
                    isSent: isSent,
                    isResign: isResign,
                    signerEmail: hhPrimarySigner ? hhPrimarySigner.email : '',
                    signerFirstName: hhPrimarySigner ? hhPrimarySigner.firstName : '',
                    signerLastName: hhPrimarySigner ? hhPrimarySigner.lastName : '',
                    signerTitle: firstSigner ? firstSigner.title : '',
                    spouseEmail: hhSpouseSigner ? hhSpouseSigner.email : '',
                    spouseFirstName: hhSpouseSigner ? hhSpouseSigner.firstName : '',
                    spouseLastName: hhSpouseSigner ? hhSpouseSigner.lastName : '',
                    companyStatus: currentCompany ? currentCompany.status : ''
                };
            });
            vms.sort(function (a, b) { return a.envelope.isWetSign ? 1 : -1; });
            return vms;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["concatMap"])(function (vms) { return _this.navigateIfSigningComplete(vms); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["shareReplay"])(1));
    };
    /**
     * Get the PDF for a signable document by its id.
     * @param docId Id of the PDF to download
     * @returns The PDF as a Blob
     */
    DocumentsViewService.prototype.getDocPdf = function (doc) {
        return this.documentService.getDocPdf(doc.id);
    };
    /**
     * Get a temporary Esign URL which enables short-term access to an ESign envelope
     * @return Terminating observable emitting the URL
     */
    DocumentsViewService.prototype.getEsignEnvelopeUrl = function (eSignEnvelopeId) {
        return this.esignService.getEnvelopeUrl(eSignEnvelopeId);
    };
    DocumentsViewService.prototype.navigateIfSigningComplete = function (vms) {
        if (vms.length > 0 && vms.every(function (v) { return v.isSigningComplete || v.envelope.isWetSign; })) {
            // Have docs and all of them are signed.
            // Evidently the Company status is not up-to-date because we shouldn't be here.
            // When all documents are signed, the AccountStatus should be "Operations"
            // and the app should be showing the "Processing" page.
            // Reload the Company and navigate to "Processing" page
            var status_1 = vms[0].companyStatus;
            if (status_1 === _model__WEBPACK_IMPORTED_MODULE_5__["AccountStatus"].AutoMigrate || status_1 === _model__WEBPACK_IMPORTED_MODULE_5__["AccountStatus"].Operations || status_1 === _model__WEBPACK_IMPORTED_MODULE_5__["AccountStatus"].Migrating) {
                this.router.navigate([_core__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].Processing]);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["of"])(null); // don't return the Documents VM because shouldn't display anything.
            }
            if (status_1 !== _model__WEBPACK_IMPORTED_MODULE_5__["AccountStatus"].Docs) {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["of"])(null);
            }
            // reload to get the status
            var companyId = vms[0].envelope.companyId;
            this.companyService.getByKey(companyId);
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["of"])(vms);
    };
    /**
     * Reload the document package, refreshing DocumentPackageService.documentPackage$
     * @returns Terminating observablethat makes a single request and emits docs when the server replies.
     */
    DocumentsViewService.prototype.loadDocumentPackage = function () {
        return this.documentPackageService.loadDocumentPackage();
    };
    /**
     * Save EnvelopeSigner entity; no other saves needed because all other changes happen on the server via docusign
     * @returns Terminating observable emitting the EnvelopSigner after the save succeeds
     */
    DocumentsViewService.prototype.save = function (envelopeSigner) {
        return this.envelopeSignerService.upsert(envelopeSigner);
    };
    /**
     * Tell DocuSign to create an Envelope and optionally send an email to signer and spouse.
     * @returns Terminating observable with envelope and DocuSign's status (e.g., 'sent' if the email was sent).
     */
    DocumentsViewService.prototype.sendEnvelope = function (envelopeId, signers) {
        return this.esignService.postEnvelope(envelopeId, signers);
    };
    // sendEnvelope(vm: DocumentsVm): Observable<EsignEnvelopeResponse> {
    //   return this.esignService.getEnvelope(vm.envelope.id, vm.signerEmail, vm.signerFirstName, vm.signerLastName,
    //     vm.signerTitle, vm.spouseEmail, vm.spouseFirstName, vm.spouseLastName);
    // }
    DocumentsViewService.prototype.gotoDashboard = function () {
        var _this = this;
        this.sessionService.setAccountStatus(_model__WEBPACK_IMPORTED_MODULE_5__["AccountStatus"].Open).subscribe(function (_) { return _this.router.navigate([_core__WEBPACK_IMPORTED_MODULE_3__["WellKnownRoutes"].Dashboard]); }
        // TODO: Something with error
        );
    };
    DocumentsViewService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_9__["defineInjectable"]({ factory: function DocumentsViewService_Factory() { return new DocumentsViewService(_angular_core__WEBPACK_IMPORTED_MODULE_9__["inject"](_store_entity_entity_services_document_service__WEBPACK_IMPORTED_MODULE_10__["DocumentService"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["inject"](_entity_entity_services_document_package_service__WEBPACK_IMPORTED_MODULE_2__["DocumentPackageService"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["inject"](_store_entity_entity_services_envelope_user_service__WEBPACK_IMPORTED_MODULE_11__["EnvelopeSignerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["inject"](_app_core_services_esign_service__WEBPACK_IMPORTED_MODULE_1__["EsignService"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["inject"](_store_entity_entity_services_company_service__WEBPACK_IMPORTED_MODULE_12__["CompanyService"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["inject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["inject"](_store_session_session_service__WEBPACK_IMPORTED_MODULE_13__["SessionService"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["inject"](_store_entity_entity_services_household_filers_service__WEBPACK_IMPORTED_MODULE_14__["HouseholdFilersService"])); }, token: DocumentsViewService, providedIn: "root" });
    return DocumentsViewService;
}());



/***/ }),

/***/ "./src/app/shared/docs/view-docs.component.ts":
/*!****************************************************!*\
  !*** ./src/app/shared/docs/view-docs.component.ts ***!
  \****************************************************/
/*! exports provided: ViewDocsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewDocsComponent", function() { return ViewDocsComponent; });
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var _app_core_services_iframe_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/core/services/iframe.service */ "./src/app/core/services/iframe.service.ts");


var ViewDocsComponent = /** @class */ (function () {
    function ViewDocsComponent(esignService, iframeService, logger) {
        this.esignService = esignService;
        this.iframeService = iframeService;
        this.logger = logger;
        this.esignDone = this.esignDone.bind(this);
        this.esignError = this.esignError.bind(this);
    }
    ViewDocsComponent.prototype.viewDocs = function (envelopeId) {
        var _this = this;
        this.esignService.getEnvelopeUrl(envelopeId).subscribe(function (url) {
            if (url) {
                _this.iframeService.show(url, _this.esignDone);
            }
            else {
                _this.esignError('Document Signing service cannot find the documents', "viewDocs: No envelope URL for envelope id=" + envelopeId);
            }
        });
    };
    ViewDocsComponent.prototype.esignDone = function (status) {
        if (status !== 'viewing_complete') {
            this.esignError(null, "Unexpected document status " + status);
        }
    };
    ViewDocsComponent.prototype.esignError = function (message, applicationError) {
        if (applicationError) {
            // error info for a programmer
            this.logger.error("ViewDocsComponent: " + applicationError);
        }
    };
    return ViewDocsComponent;
}());



/***/ }),

/***/ "./src/app/shared/filter/filter-dateformat.ts":
/*!****************************************************!*\
  !*** ./src/app/shared/filter/filter-dateformat.ts ***!
  \****************************************************/
/*! exports provided: DateParserFormatter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateParserFormatter", function() { return DateParserFormatter; });
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

function padNumber(value) {
    if (isNumber(value)) {
        return ("0" + value).slice(-2);
    }
    else {
        return '';
    }
}
function isNumber(value) {
    return !isNaN(toInteger(value));
}
function toInteger(value) {
    return parseInt("" + value, 10);
}
var DateParserFormatter = /** @class */ (function (_super) {
    __extends(DateParserFormatter, _super);
    function DateParserFormatter() {
        var _this = _super.call(this) || this;
        _this.yearAddition = 0;
        _this.mask = 'MM/dd/yyyy';
        _this.separator = _this.mask.indexOf('-') >= 0 ? '-' : _this.mask.indexOf('.') >= 0 ? '.' : '/';
        var part = _this.mask.split(_this.separator);
        _this.dayIndex = part.indexOf('dd');
        _this.monthIndex = part.indexOf('MM');
        _this.yearIndex = part.indexOf('yyyy');
        if (_this.yearIndex < 0) {
            _this.yearIndex = part.indexOf('yy');
            _this.yearAddition = 2000;
        }
        return _this;
    }
    Object.defineProperty(DateParserFormatter.prototype, "Mask", {
        set: function (value) {
            this.mask = value;
        },
        enumerable: true,
        configurable: true
    });
    DateParserFormatter.prototype.parse = function (value) {
        if (value) {
            value = value.replace(/\.|\/|-/g, this.separator);
            var dateParts = value.trim().split(this.separator);
            if (dateParts.length !== 3) {
                return { year: 0, month: 0, day: 0 };
            }
            var parsedYear = 0;
            var parsedMonth = 0;
            var parsedDay = 0;
            var today = new Date();
            if (isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {
                parsedDay = this.dayIndex === 0 ? toInteger(dateParts[0])
                    : this.dayIndex === 1 ? toInteger(dateParts[1])
                        : this.dayIndex === 2 ? toInteger(dateParts[2]) : 0;
                parsedMonth = this.monthIndex === 0 ? toInteger(dateParts[0])
                    : this.monthIndex === 1 ? toInteger(dateParts[1])
                        : this.monthIndex === 2 ? toInteger(dateParts[2]) : 0;
                parsedYear = this.yearIndex === 0 ? (dateParts[0].length < 2) ? 0
                    : toInteger(dateParts[0]) + this.yearAddition
                    : this.yearIndex === 1 ? (dateParts[1].length < 2) ? 0
                        : toInteger(dateParts[1]) + this.yearAddition
                        : this.yearIndex === 2 ? (dateParts[2].length < 2) ? 0
                            : toInteger(dateParts[2]) + this.yearAddition : 0;
            }
            if (parsedDay === 0 || parsedMonth === 0 || parsedYear === 0) {
                return { year: 0, month: 0, day: 0 };
            }
            if (parsedYear < 100) {
                parsedYear = 2000 + parsedYear;
            }
            return { year: parsedYear, month: parsedMonth, day: parsedDay };
        }
        return { year: 0, month: 0, day: 0 };
    };
    DateParserFormatter.prototype.format = function (date) {
        var stringDate = '';
        if (date) {
            var stringDay = isNumber(date.day) ? padNumber(date.day) : '';
            var stringMonth = isNumber(date.month) ? padNumber(date.month) : '';
            var stringYear = isNumber(date.year) ? (date.year - this.yearAddition).toString() : '';
            stringDate = (stringDay) ? this.mask.replace('dd', stringDay)
                : this.dayIndex === 0 ? this.mask.replace('dd' + this.separator, '')
                    : this.mask.replace(this.separator + 'dd', '');
            stringDate = (stringMonth) ? stringDate.replace('MM', stringMonth)
                : this.monthIndex === 0 ? stringDate.replace('MM' + this.separator, '')
                    : stringDate.replace(this.separator + 'MM', '');
            if (this.yearAddition) {
                stringDate = (stringDay) ? stringDate.replace('yy', stringYear)
                    : this.yearIndex === 0 ? stringDate.replace('yy' + this.separator, '')
                        : stringDate.replace(this.separator + 'yy', '');
            }
            else {
                stringDate = (stringDay) ? stringDate.replace('yyyy', stringYear)
                    : this.yearIndex === 0 ? stringDate.replace('yyyy' + this.separator, '')
                        : stringDate.replace(this.separator + 'yyyy', '');
            }
        }
        return stringDate;
    };
    return DateParserFormatter;
}(_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_0__["NgbDateParserFormatter"]));



/***/ }),

/***/ "./src/app/shared/filter/filter.component.ts":
/*!***************************************************!*\
  !*** ./src/app/shared/filter/filter.component.ts ***!
  \***************************************************/
/*! exports provided: FilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterComponent", function() { return FilterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");



var FilterComponent = /** @class */ (function () {
    function FilterComponent() {
        this.filter = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
    }
    FilterComponent.prototype.clear = function () {
        this.filter.setValue('');
    };
    FilterComponent.prototype.ngOnInit = function () {
        var _this = this;
        // Set the filter to the current value from filterObserver or ''
        // IMPORTANT: filterObserver must emit at least once!
        this.filterObserver.filter$
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["take"])(1))
            .subscribe(function (value) { return _this.filter.setValue(value); });
        this.filter.valueChanges
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["debounceTime"])(300), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])())
            .subscribe(function (pattern) { return _this.filterObserver.setFilter(pattern); });
    };
    return FilterComponent;
}());



/***/ }),

/***/ "./src/app/shared/input/button-group.component.ts":
/*!********************************************************!*\
  !*** ./src/app/shared/input/button-group.component.ts ***!
  \********************************************************/
/*! exports provided: ButtonGroupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ButtonGroupComponent", function() { return ButtonGroupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");


var ButtonGroupComponent = /** @class */ (function () {
    function ButtonGroupComponent() {
    }
    ButtonGroupComponent.prototype.ngOnInit = function () {
        this.control = this.form.get(this.controlName);
        var opt = this.options;
        if (opt && opt.length) {
            if (typeof opt[0] === 'string') {
                var sopt = opt;
                this.values = sopt.map(function (s) { return ({ name: s, value: s }); });
            }
            else {
                this.values = opt;
            }
        }
    };
    ButtonGroupComponent.prototype.setValue = function (v) {
        // let val = this.values[i].value;
        this.control.setValue(v.value);
    };
    ButtonGroupComponent.prototype.isValue = function (v) {
        // let val = this.values[i].value;
        return this.control.value === v.value;
    };
    return ButtonGroupComponent;
}());



/***/ }),

/***/ "./src/app/shared/input/control-wrap.component.ts":
/*!********************************************************!*\
  !*** ./src/app/shared/input/control-wrap.component.ts ***!
  \********************************************************/
/*! exports provided: ControlWrapComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ControlWrapComponent", function() { return ControlWrapComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

/**
 * Wrap a control in a div with a label, using bootstrap styles.
 * Saves a few keystrokes and makes the html somewhat nicer.
 * Example usage:
      <sp-control label="First Name">
        <input type="text" #input name="firstName" [(ngModel)]="viewModel.firstName">
      </sp-control>
 * NOTE the #input hash is required on the inner <input> or <select> control.
 * Output:
      <sp-control label="First Name">
        <div class="form-group">
          <label for="firstName">First Name</label>
          <input name="firstName" type="text" id="firstName" class="form-control" [(ngModel)]="viewModel.firstName">
        </div>
      </sp-control>
 *
 */
var CLICK_THREHOLD = 150; // ms
var ControlWrapComponent = /** @class */ (function () {
    function ControlWrapComponent(renderer, elementRef, viewContainer) {
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.viewContainer = viewContainer;
        this.tooltip = false;
        this.open = false;
        this.tClose = 0;
    }
    ControlWrapComponent.prototype.ngAfterContentInit = function () {
        var el = this.input && this.input.nativeElement;
        if (!el) {
            return;
        }
        // Get the input's id. Assume we have name, since it's required by ngModel in a form
        var id = el.id || el.name;
        if (!el.id) {
            // Add id to the input element so that the label will be tied to it (for screenreaders)
            el.id = id;
        }
        this.id = id;
        // add class="form-control" if missing
        el.classList.add('form-control');
    };
    ControlWrapComponent.prototype.openTooltip = function () {
        var d = Date.now() - this.tClose;
        if (d < CLICK_THREHOLD) {
            return;
        }
        if (!this.open) {
            var myRoot_1 = this.root.nativeElement;
            // give some millisecs to open the tooltip-div
            this.open = true;
            setTimeout(function () {
                var tooltipDiv = myRoot_1.querySelector('#tooltipZone');
                if (tooltipDiv) {
                    tooltipDiv.focus();
                }
            });
        }
        else {
            this.open = false;
        }
    };
    ControlWrapComponent.prototype.openKeypress = function (event) {
        if (event.charCode === 13 || event.charCode === 32) {
            // intro or space
            this.openTooltip();
        }
    };
    ControlWrapComponent.prototype.closeTooltip = function (event) {
        if (event === void 0) { event = null; }
        if (isOpeningALink(event)) {
            // cancel closing to allow a.click() proceed
            event.preventDefault = false;
            return false;
        }
        this.tClose = Date.now();
        this.open = false;
        this.tooltipButton.nativeElement.focus();
    };
    ControlWrapComponent.prototype.closeKeypress = function (event) {
        if (event.charCode === 13 || event.charCode === 32) {
            // intro or escape or space
            this.closeTooltip();
        }
    };
    return ControlWrapComponent;
}());

function isOpeningALink(event) {
    return event &&
        event.type === 'blur' &&
        event.relatedTarget &&
        event.relatedTarget.localName === 'a';
}


/***/ }),

/***/ "./src/app/shared/input/date-util.ts":
/*!*******************************************!*\
  !*** ./src/app/shared/input/date-util.ts ***!
  \*******************************************/
/*! exports provided: DateUtil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateUtil", function() { return DateUtil; });
var maxValueMonth = [31, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // [ Dec Jan ... Dec ] /13
var DateUtil = /** @class */ (function () {
    function DateUtil() {
    }
    /** Recognizes ISO, and US-locale dates */
    DateUtil.isValidDate = function (text) {
        if (!text) {
            return false;
        }
        var parsed = DateUtil.parseDate(text);
        if (!parsed) {
            return false;
        }
        return isValidCalendarDate(parsed);
    };
    DateUtil.parseDate = function (o) {
        var match;
        var d = null;
        if (match = o.match(/^(\d{4}|\d{2})\s*-\s*(\d{2}|\d{1})\s*-\s*(\d{2}|\d{1})$/)) {
            d = { year: +match[1], month: +match[2], day: +match[3] };
            // tslint:disable-next-line:max-line-length
        }
        else if (match = o.match(/^(\d{4})\D?(0[1-9]|1[0-2])\D?([12]\d|0[1-9]|3[01])(\D?([01]\d|2[0-3])\D?([0-5]\d)\D?([0-5]\d)?\D?(\d{3})?([zZ]|([\+-])([01]\d|2[0-3])\D?([0-5]\d)?)?)?$/)) {
            d = { year: +match[1], month: +match[2], day: +match[3] };
        }
        else if (match = o.match(/^(\d{1,2})\s*[\/-]\s*(\d{1,2})\s*[\/-]\s*(\d{4}|\d{2})$/)) {
            // CASE 3: MM/dd/yyyy - US style dates
            d = { year: +match[3], month: +match[1], day: +match[2] };
        }
        else if (match = o.match(/^(\d{1,2})(\d{2})(\d{2,4})$/)) {
            // CASE 4: MMddyy[yy] - US style dates (8 digit strict), no separators
            d = { year: +match[3], month: +match[1], day: +match[2] };
        }
        else if (match = o.match(/^(\d{1,2})\s+(\d{1,2})\s+(\d{2,4})$/)) {
            // CASE 5: M d yy[yy] - US style dates, separator: space
            d = { year: +match[3], month: +match[1], day: +match[2] };
        }
        if (d) {
            d.year = completeYear(d.year);
        }
        return d;
    };
    DateUtil.renderAsUSLocale = function (d) {
        return pad(d.month) + '/' + pad(d.day) + '/' + d.year;
    };
    DateUtil.toISOChicago = function (usDateTxt) {
        if (DateUtil.isValidDate(usDateTxt)) {
            var d = DateUtil.parseDate(usDateTxt);
            return d.year + '-' +
                pad(d.month) + '-' +
                pad(d.day) +
                'T17:00:00.000Z'; // 12am at Chicago timezone
        }
        return null;
    };
    DateUtil.dateToUsLocale = function (dateVal) {
        if (!DateUtil.isValidDate(dateVal)) {
            return dateVal; // preserve incomplete value
        }
        var d = DateUtil.parseDate(dateVal);
        if (d) {
            return DateUtil.renderAsUSLocale(d);
        }
        return null;
    };
    return DateUtil;
}());

function pad(n) {
    var val = n.toString();
    if (val.length === 1) {
        return '0' + val;
    }
    return val;
}
function isValidCalendarDate(d) {
    if (!d.year || d.year < 0 || d.year > 2100) {
        return false;
    }
    if (!d.month || d.month < 1 || d.month > 12) {
        return false;
    }
    var validMaxDayInMonth = maxValueMonth[d.month];
    if (d.month === 2 && !isLeapYear(d.year)) {
        validMaxDayInMonth = 28;
    }
    if (!d.day || d.day < 1 || d.day > validMaxDayInMonth) {
        return false;
    }
    return true;
}
function isLeapYear(year) {
    return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);
}
function completeYear(year) {
    if (!year && year !== 0) {
        return year;
    }
    if (year < 30) {
        return (2000 + year); // assume XXI century
    }
    if (year < 100) {
        return (1900 + year); // assume XX century
    }
    return year; // unable to complete
}


/***/ }),

/***/ "./src/app/shared/input/index.ts":
/*!***************************************!*\
  !*** ./src/app/shared/input/index.ts ***!
  \***************************************/
/*! exports provided: ButtonGroupComponent, ControlWrapComponent, InputTextComponent, InputSelectComponent, MultiMaskDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _button_group_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./button-group.component */ "./src/app/shared/input/button-group.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ButtonGroupComponent", function() { return _button_group_component__WEBPACK_IMPORTED_MODULE_0__["ButtonGroupComponent"]; });

/* harmony import */ var _control_wrap_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./control-wrap.component */ "./src/app/shared/input/control-wrap.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ControlWrapComponent", function() { return _control_wrap_component__WEBPACK_IMPORTED_MODULE_1__["ControlWrapComponent"]; });

/* harmony import */ var _input_text_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./input-text.component */ "./src/app/shared/input/input-text.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InputTextComponent", function() { return _input_text_component__WEBPACK_IMPORTED_MODULE_2__["InputTextComponent"]; });

/* harmony import */ var _input_select_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./input-select.component */ "./src/app/shared/input/input-select.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InputSelectComponent", function() { return _input_select_component__WEBPACK_IMPORTED_MODULE_3__["InputSelectComponent"]; });

/* harmony import */ var _multi_mask_directive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./multi-mask.directive */ "./src/app/shared/input/multi-mask.directive.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MultiMaskDirective", function() { return _multi_mask_directive__WEBPACK_IMPORTED_MODULE_4__["MultiMaskDirective"]; });








/***/ }),

/***/ "./src/app/shared/input/input-date.component.ts":
/*!******************************************************!*\
  !*** ./src/app/shared/input/input-date.component.ts ***!
  \******************************************************/
/*! exports provided: InputDateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputDateComponent", function() { return InputDateComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _app_shared_model_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/shared/model.component */ "./src/app/shared/model.component.ts");
/* harmony import */ var _date_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./date-util */ "./src/app/shared/input/date-util.ts");
/* harmony import */ var flatpickr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! flatpickr */ "./node_modules/flatpickr/dist/flatpickr.js");
/* harmony import */ var flatpickr__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(flatpickr__WEBPACK_IMPORTED_MODULE_4__);





var InputDateComponent = /** @class */ (function () {
    function InputDateComponent(changeDetector, modelContext) {
        this.changeDetector = changeDetector;
        this.modelContext = modelContext;
        this.disabled = false;
        this.picker = true;
        this.placeholder = 'mm/dd/yyyy';
        this.tooltip = false;
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onExit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onTouched = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.open = false;
        this.accessorOnChange = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
        };
        this.accessorOnTouched = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
        };
        this.isDestroyed = false;
        this.allowedKeys = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
            '-', '/', '.', ' ', 'ArrowLeft', 'ArrowRight', 'Tab',
            'Enter', 'Return', 'Escape', 'Backspace', 'Delete'];
    }
    Object.defineProperty(InputDateComponent.prototype, "group", {
        /** Get the latest data-bound group. If not bound, get group from modelContext. */
        get: function () {
            return this._group || (this.modelContext && this.modelContext.group);
        },
        set: function (value) { this._group = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputDateComponent.prototype, "model", {
        /** Get the latest data-bound model. If not bound, get model from modelContext. */
        get: function () {
            return this._model || (this.modelContext && this.modelContext.model);
        },
        set: function (value) { this._model = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputDateComponent.prototype, "modelType", {
        /** Get the latest data-bound model type. If not bound, get model type from modelContext. */
        get: function () {
            return this._modelType || (this.modelContext && this.modelContext.modelType);
        },
        set: function (value) { this._modelType = value; },
        enumerable: true,
        configurable: true
    });
    InputDateComponent.prototype.ngOnInit = function () {
        this.name = (this.name || '') + '$' + InputDateComponent.nameCounter++;
        if (this.picker) {
            var datePickerOptions = {
                dateFormat: 'm/d/Y',
                defaultDate: toDateType(this.defaultDate),
                minDate: toDateType(this.minDate),
                maxDate: toDateType(this.maxDate),
                onChange: onChangePicker
            };
            this.refPicker = flatpickr__WEBPACK_IMPORTED_MODULE_4___default()(this.inputPicker.nativeElement, datePickerOptions);
            this.refPicker._angularComponent = this;
        }
    };
    InputDateComponent.prototype.openPicker = function () {
        if (this.refPicker) {
            this.refPicker.open();
        }
    };
    InputDateComponent.prototype.ngAfterViewInit = function () {
        this.inputEl = this.child.nativeElement;
        if (this.autofocus) {
            this.inputEl.focus();
        }
    };
    InputDateComponent.prototype.ngOnDestroy = function () {
        this.isDestroyed = true;
        this.exit('destroyed');
    };
    InputDateComponent.prototype.writeValue = function (obj) {
        this.currentValue = obj;
    };
    InputDateComponent.prototype.registerOnChange = function (fn) {
        this.accessorOnChange = fn;
    };
    InputDateComponent.prototype.registerOnTouched = function (fn) {
        this.accessorOnTouched = fn;
    };
    InputDateComponent.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    InputDateComponent.prototype.filterKeys = function (event) {
        if (!this.allowedKeys.find(function (it) { return it === event.key; })) {
            event.preventDefault(); // Cancel event. Not allowed key.
        }
    };
    /**
     * Emit onExit after user exits control
     * @param exitType {ExitType} How the user exited the control
     */
    InputDateComponent.prototype.exit = function (exitType) {
        // Auto-trim on exit; could add a NoTrim option if necessary.
        var currentValuePreTrim = this.getValue();
        var currentValue = typeof currentValuePreTrim === 'string'
            ? (currentValuePreTrim || '').trim()
            : currentValuePreTrim;
        if (currentValuePreTrim !== currentValue) {
            // update and announce the change;
            this.onInput(currentValue);
        }
        this.onExit.emit({ exitType: exitType, isChanged: this.originalValue !== currentValue });
        this.originalValue = currentValue;
        this.detectChanges();
    };
    /** User pressed escape. Restores original value and exits */
    InputDateComponent.prototype.escaped = function () {
        // undo change
        var currentValue = this.inputEl.value;
        if (currentValue !== this.originalValue) {
            this.onInput(this.originalValue);
        }
        this.exit('escapeKey');
    };
    InputDateComponent.prototype.onInput = function (value) {
        var modelValue = null;
        if (this.originalValue == null) {
            this.originalValue = this.getValue();
        }
        modelValue = _date_util__WEBPACK_IMPORTED_MODULE_3__["DateUtil"].toISOChicago(value);
        this.setValue(modelValue);
        this.accessorOnChange(modelValue);
        this.onChange.emit(modelValue);
        if (this.modelContext) {
            this.modelContext.notifyOfModelChange();
        }
        this.detectChanges();
    };
    InputDateComponent.prototype.onFocus = function () {
        // Prevent Angular for raising errors due to modified binding values between detection cycles
        // by performing manual change detection during edit operations
        this.changeDetector.detach();
        this.focus.emit();
    };
    InputDateComponent.prototype.onBlur = function () {
        this.changeDetector.reattach();
        var currentValue = this.inputEl.value;
        if (_date_util__WEBPACK_IMPORTED_MODULE_3__["DateUtil"].isValidDate(currentValue)) {
            this.onInput(currentValue);
        }
        else {
            this.cleanField();
        }
        this.accessorOnTouched();
        this.onTouched.emit();
        this.blur.emit();
        this.exit('blur');
        this.open = false;
        // update value in picker
        if (this.refPicker) {
            this.refPicker.setDate(this.getValue());
        }
    };
    InputDateComponent.prototype.cleanField = function () {
        this.inputEl.value = '';
        this.onInput('');
        this.setValue('');
    };
    /** Returns the render-representation to user (a projection of the model) */
    InputDateComponent.prototype.getRenderValue = function () {
        var model = this.getValue();
        var rendered = _date_util__WEBPACK_IMPORTED_MODULE_3__["DateUtil"].dateToUsLocale(model);
        return rendered;
    };
    /* Returns the model-represation value */
    InputDateComponent.prototype.getValue = function () {
        var val = this.getValueInternal();
        var val2 = (val != null) ? val.toString() : null;
        return val2;
    };
    InputDateComponent.prototype.getValueInternal = function () {
        if (this.model && this.modelType && this.propertyName) {
            this.currentValue = this.model[this.propertyName];
        }
        return this.currentValue;
    };
    InputDateComponent.prototype.setValue = function (modelValue) {
        if (this.model && this.modelType && this.propertyName) {
            this.model[this.propertyName] = modelValue;
        }
        this.currentValue = modelValue;
    };
    InputDateComponent.prototype.detectChanges = function () {
        if (!this.isDestroyed) {
            this.changeDetector.detectChanges();
        }
    };
    InputDateComponent.nameCounter = 0;
    return InputDateComponent;
}());

function onChangePicker(selectedDates, dateStr, instance) {
    var modelValue = _date_util__WEBPACK_IMPORTED_MODULE_3__["DateUtil"].toISOChicago(dateStr);
    instance._angularComponent.setValue(modelValue);
}
function toDateType(date) {
    var res;
    if (typeof date === 'string') {
        res = new Date(Date.parse(date));
    }
    else {
        res = date;
    }
    return res;
}


/***/ }),

/***/ "./src/app/shared/input/input-mask-catalog.ts":
/*!****************************************************!*\
  !*** ./src/app/shared/input/input-mask-catalog.ts ***!
  \****************************************************/
/*! exports provided: InputMaskCatalog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputMaskCatalog", function() { return InputMaskCatalog; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var text_mask_addons_dist_textMaskAddons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! text-mask-addons/dist/textMaskAddons */ "./node_modules/text-mask-addons/dist/textMaskAddons.js");
/* harmony import */ var text_mask_addons_dist_textMaskAddons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(text_mask_addons_dist_textMaskAddons__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _core_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/services */ "./src/app/core/services/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/services/logger.service */ "./src/app/core/services/logger.service.ts");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};






var InputMaskCatalog = /** @class */ (function () {
    function InputMaskCatalog(datePipe, decimalPipe, logger) {
        this.datePipe = datePipe;
        this.decimalPipe = decimalPipe;
        this.logger = logger;
        this.maskPresets = {};
        this.registerCurrencyMasks(decimalPipe);
        this.registerMaskType({
            maskType: 'digits',
            toView: defaultToView,
            toVm: integerToVm,
            type: 'text',
            mask: Object(text_mask_addons_dist_textMaskAddons__WEBPACK_IMPORTED_MODULE_1__["createNumberMask"])({
                prefix: '',
                suffix: '',
                allowDecimal: false,
                includeThousandsSeparator: false
            })
        });
        this.registerMaskType({
            maskType: 'integer',
            toView: defaultToView,
            toVm: integerToVm,
            type: 'text',
            mask: Object(text_mask_addons_dist_textMaskAddons__WEBPACK_IMPORTED_MODULE_1__["createNumberMask"])({
                prefix: '',
                suffix: '',
                allowDecimal: false
            })
        });
        // withholding allowance 0 - 25
        this.registerMaskType({
            maskType: 'whAllowance',
            toView: defaultToView,
            toVm: function (viewVal) { return viewVal == null ? null : parseInt(viewVal, 10); },
            type: 'text',
            placeholderChar: ' ',
            mask: withholdingAllowanceMask,
            showMask: false
        });
        this.registerMaskType({
            maskType: 'percent',
            toView: defaultToView,
            toVm: function (viewVal) { return viewVal == null ? null : parseFloat(viewVal.replace(/\,+/g, '')); },
            type: 'text',
            mask: Object(text_mask_addons_dist_textMaskAddons__WEBPACK_IMPORTED_MODULE_1__["createNumberMask"])({
                prefix: '',
                suffix: '',
                allowDecimal: true,
                decimalLimit: 2
            }),
            append: '%',
            prepend: ''
        });
        this.registerMaskType({
            maskType: 'date',
            toView: function (vmVal, editing, format) { return datePipe.transform(vmVal, format || 'MM-dd-yyyy'); },
            toVm: function (viewVal) { return viewVal == null ? null :
                datePipe.transform(new Date(viewVal), 'yyyy-MM-dd') + 'T17:00:00.000Z'; },
            type: 'date',
            mask: false
        });
        this.registerMaskType({
            maskType: 'phone',
            toView: defaultToView,
            toVm: function (viewVal) { return viewVal == null ? null : viewVal.replace(/[\(\)\-\s_]+/g, ''); },
            type: 'text',
            mask: ['(', /[1-9]/, /\d/, /\d/, ')', ' ', /\d/, /\d/, /\d/, '-', /\d/, /\d/, /\d/, /\d/],
            showMask: false,
            placeholder: '(xxx) xxx-xxxx'
        });
        this.registerMaskType({
            maskType: 'ssn',
            toView: defaultToView,
            toVm: dashedNumberToVm,
            type: 'text',
            mask: [/\d/, /\d/, /\d/, '-', /\d/, /\d/, '-', /\d/, /\d/, /\d/, /\d/],
            showMask: false,
            placeholder: 'xxx-xx-xxxx',
            keepCharPositions: false
        });
        this.registerMaskType({
            maskType: 'fein',
            toView: defaultToView,
            toVm: function (viewVal) { return viewVal == null ? null : viewVal.replace(/[\s_]+/g, ''); },
            type: 'text',
            mask: [/\d/, /\d/, '-', /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/],
            showMask: false,
            placeholder: 'xx-xxxxxxx',
            keepCharPositions: false
        });
        this.registerMaskType({
            maskType: 'legalname',
            toView: function (vmVal, editing, format) { return vmVal == null ? null : vmVal.toString().toUpperCase(); },
            toVm: function (viewVal) { return viewVal == null ? null : viewVal.toString().toUpperCase(); },
            type: 'text',
            mask: false,
            showMask: false,
            placeholder: '',
            keepCharPositions: false
        });
        this.registerMaskType({
            maskType: 'ubi',
            toView: function (vmVal, editing, format) { return vmVal ? vmVal.toString() : null; },
            toVm: function (viewVal) { return viewVal !== null ? viewVal.replace(/[\s_]+/g, '') : null; },
            type: 'text',
            mask: [/\d/, /\d/, /\d/, '-', /\d/, /\d/, /\d/, '-', /\d/, /\d/, /\d/],
            showMask: false,
            placeholder: 'xxx-xxx-xxx',
            keepCharPositions: false
        });
        this.registerMaskType({
            maskType: 'routingnumber',
            toView: defaultToView,
            toVm: dashedNumberToVm,
            type: 'text',
            //  \d{9}
            mask: [/\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/],
            showMask: true,
            placeholder: '_________',
            keepCharPositions: false
        });
        this.registerMaskType({
            maskType: 'accountnumber',
            toView: defaultToView,
            toVm: dashedNumberToVm,
            type: 'text',
            //  \d{7,11}
            mask: [/\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d/, /\d?/, /\d?/, /\d?/, /\d?/],
            showMask: true,
            placeholder: '___________',
            keepCharPositions: false
        });
    }
    InputMaskCatalog.prototype.registerCurrencyMasks = function (decimalPipe) {
        var _this = this;
        var toView = function (vmVal, editing) { return vmVal == null ? null :
            (vmVal % 1 === 0 || editing) ? vmVal.toString() : decimalPipe.transform(vmVal, '1.2-2'); };
        var toVm = function (viewVal) { return viewVal == null ? null : parseFloat(viewVal.replace(/\,+/g, '')); };
        var baseMask = {
            toView: toView,
            toVm: toVm,
            type: 'text',
            mask: Object(text_mask_addons_dist_textMaskAddons__WEBPACK_IMPORTED_MODULE_1__["createNumberMask"])({
                prefix: '',
                suffix: '',
                allowDecimal: true,
                decimalLimit: 2
            }),
            append: '',
            prepend: '$'
        };
        var regMask = function (maskType, append) {
            if (append === void 0) { append = ''; }
            return _this.registerMaskType(__assign({}, baseMask, { maskType: maskType, append: append }));
        };
        regMask('currency');
        regMask('currency_per_hour', '/hr');
        regMask('currency_per_mile', '/mile');
        regMask('currency_per_unit', '/unit');
        regMask('currency_per_year', '/yr');
    };
    InputMaskCatalog.prototype.registerMaskType = function (cv) {
        this.maskPresets[cv.maskType] = cv;
    };
    InputMaskCatalog.prototype.getMaskForType = function (maskType) {
        if (maskType == null) {
            return null;
        }
        if (!(maskType in this.maskPresets)) {
            this.logger.error("Input mask preset with name: [" + maskType + "] does not exist!");
            return null;
        }
        return this.maskPresets[maskType];
    };
    InputMaskCatalog.prototype.applyConfig = function (inputText, maskConfig) {
        inputText.type = maskConfig.type;
        inputText.mask = maskConfig.mask;
        inputText.append = maskConfig.append;
        inputText.prepend = maskConfig.prepend;
        inputText.guide = maskConfig.guide;
        inputText.placeholderChar = maskConfig.placeholderChar;
        inputText.keepCharPositions = maskConfig.keepCharPositions;
        inputText.showMask = maskConfig.showMask;
        if (maskConfig.placeholder) {
            inputText.placeholder = maskConfig.placeholder;
        }
        inputText.textMask = {
            mask: inputText.mask,
            guide: inputText.guide,
            placeholderChar: inputText.placeholderChar,
            keepCharPositions: inputText.keepCharPositions,
            showMask: inputText.showMask
        };
    };
    InputMaskCatalog.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_3__["defineInjectable"]({ factory: function InputMaskCatalog_Factory() { return new InputMaskCatalog(_angular_core__WEBPACK_IMPORTED_MODULE_3__["inject"](_angular_common__WEBPACK_IMPORTED_MODULE_0__["DatePipe"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["inject"](_angular_common__WEBPACK_IMPORTED_MODULE_0__["DecimalPipe"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_4__["LoggerService"])); }, token: InputMaskCatalog, providedIn: "root" });
    return InputMaskCatalog;
}());

// #region helper fns
/** Convert string view value to VM by removing dashes and underscores */
function dashedNumberToVm(viewVal) {
    return viewVal == null ? null : viewVal.replace(/[\s\-_]+/g, '');
}
/** Convert VM value to view with simple toString() */
function defaultToView(vmVal, editing, format) {
    return vmVal == null ? null : vmVal.toString();
}
/** Convert string view value to an integer VM  */
function integerToVm(viewVal) {
    return viewVal == null ? null : parseInt(viewVal.replace(/\,+/g, ''), 10);
}
/** Constrains withholding allowance input to integer 0-25 */
function withholdingAllowanceMask(rawValue) {
    if (rawValue.length === 0 || /^\d$/.test(rawValue)) {
        return [/\d/];
    }
    else if (/^1\d$/.test(rawValue)) {
        return [/1/, /\d/];
    }
    else {
        return [/2/, /[0-5]/];
    }
}


/***/ }),

/***/ "./src/app/shared/input/input-select.component.ts":
/*!********************************************************!*\
  !*** ./src/app/shared/input/input-select.component.ts ***!
  \********************************************************/
/*! exports provided: InputSelectComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputSelectComponent", function() { return InputSelectComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _model_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../model.component */ "./src/app/shared/model.component.ts");



var InputSelectComponent = /** @class */ (function () {
    function InputSelectComponent(modelContext) {
        this.modelContext = modelContext;
        this.disabled = false;
        this.changed = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    Object.defineProperty(InputSelectComponent.prototype, "group", {
        /** Get the latest data-bound group. If not bound, get group from modelContext. */
        get: function () {
            return this._group || (this.modelContext && this.modelContext.group);
        },
        set: function (value) { this._group = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputSelectComponent.prototype, "model", {
        /** Get the latest data-bound model. If not bound, get model from modelContext. */
        get: function () {
            return this._model || (this.modelContext && this.modelContext.model);
        },
        set: function (value) { this._model = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputSelectComponent.prototype, "modelType", {
        /** Get the latest data-bound model type. If not bound, get model type from modelContext. */
        get: function () {
            return this._modelType || (this.modelContext && this.modelContext.modelType);
        },
        set: function (value) { this._modelType = value; },
        enumerable: true,
        configurable: true
    });
    InputSelectComponent.prototype.ngOnInit = function () {
        this.name = (this.name || '') + '$' + InputSelectComponent.nameCounter++;
        this.classNames = 'form-control ' + (this.classNames || '');
    };
    InputSelectComponent.prototype.getValue = function () {
        if (this.model && this.modelType && this.propertyName) {
            return this.model[this.propertyName];
        }
        return this.currentValue;
    };
    InputSelectComponent.prototype.setValue = function (value) {
        if (this.model && this.modelType && this.propertyName) {
            this.model[this.propertyName] = value;
        }
        this.currentValue = value;
        if (this.modelContext) {
            this.modelContext.notifyOfModelChange();
        }
    };
    InputSelectComponent.prototype.onChanged = function (value) {
        this.ngModel.control.markAsTouched();
        this.changed.emit(value);
    };
    InputSelectComponent.nameCounter = 0;
    return InputSelectComponent;
}());



/***/ }),

/***/ "./src/app/shared/input/input-text.component.ngfactory.js":
/*!****************************************************************!*\
  !*** ./src/app/shared/input/input-text.component.ngfactory.js ***!
  \****************************************************************/
/*! exports provided: RenderType_InputTextComponent, View_InputTextComponent_0, View_InputTextComponent_Host_0, InputTextComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_InputTextComponent", function() { return RenderType_InputTextComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_InputTextComponent_0", function() { return View_InputTextComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_InputTextComponent_Host_0", function() { return View_InputTextComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputTextComponentNgFactory", function() { return InputTextComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../validation/validate-property.directive */ "./src/app/shared/validation/validate-property.directive.ts");
/* harmony import */ var _store_validation_validation_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../store/validation/validation.service */ "./src/app/store/validation/validation.service.ts");
/* harmony import */ var angular2_text_mask__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular2-text-mask */ "./node_modules/angular2-text-mask/dist/angular2TextMask.js");
/* harmony import */ var angular2_text_mask__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(angular2_text_mask__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _input_text_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./input-text.component */ "./src/app/shared/input/input-text.component.ts");
/* harmony import */ var _input_mask_catalog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./input-mask-catalog */ "./src/app/shared/input/input-mask-catalog.ts");
/* harmony import */ var _model_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../model.component */ "./src/app/shared/model.component.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 









var styles_InputTextComponent = [];
var RenderType_InputTextComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_InputTextComponent, data: {} });

function View_InputTextComponent_2(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "i", [["class", "material-icons tooltip-icon clickable"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = ((_co.open = !_co.open) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["info"]))], null, null); }
function View_InputTextComponent_3(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, null, null, null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵncd"](null, 0), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](0, null, null, 0))], null, null); }
function View_InputTextComponent_1(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 7, "label", [], [[8, "htmlFor", 0]], null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 1, "span", [["class", "label-text"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](2, null, ["", ""])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 4, "span", [["class", "tooltip-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_InputTextComponent_2)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](5, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_InputTextComponent_3)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](7, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.tooltip; _ck(_v, 5, 0, currVal_2); var currVal_3 = (_co.tooltip && _co.open); _ck(_v, 7, 0, currVal_3); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.name; _ck(_v, 0, 0, currVal_0); var currVal_1 = _co.label; _ck(_v, 2, 0, currVal_1); }); }
function View_InputTextComponent_4(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 2, "div", [["class", "input-group-prepend"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 1, "span", [["class", "input-group-text"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](2, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.prepend; _ck(_v, 2, 0, currVal_0); }); }
function View_InputTextComponent_5(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 2, "div", [["class", "input-group-append"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 1, "span", [["class", "input-group-text"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](2, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.append; _ck(_v, 2, 0, currVal_0); }); }
function View_InputTextComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵqud"](402653184, 1, { child: 0 }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 27, "div", [["class", "form-group"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_InputTextComponent_1)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](3, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵncd"](null, 1), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](5, 0, null, null, 22, "div", [["class", "input-group"]], [[2, "input-append", null], [2, "input-prepend", null]], null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_InputTextComponent_4)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](7, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](8, 0, [[1, 0], ["child", 1]], null, 13, "input", [["class", "form-control"], ["spAsyncValidateProperty", ""], ["spValidateProperty", ""]], [[8, "type", 0], [8, "id", 0], [8, "placeholder", 0], [2, "ng-untouched", null], [2, "ng-touched", null], [2, "ng-pristine", null], [2, "ng-dirty", null], [2, "ng-valid", null], [2, "ng-invalid", null], [2, "ng-pending", null]], [[null, "ngModelChange"], [null, "blur"], [null, "keyup.enter"], [null, "keyup.esc"], [null, "focus"], [null, "input"], [null, "compositionstart"], [null, "compositionend"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("input" === en)) {
        var pd_0 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 11)._handleInput($event.target.value) !== false);
        ad = (pd_0 && ad);
    } if (("blur" === en)) {
        var pd_1 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 11).onTouched() !== false);
        ad = (pd_1 && ad);
    } if (("compositionstart" === en)) {
        var pd_2 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 11)._compositionStart() !== false);
        ad = (pd_2 && ad);
    } if (("compositionend" === en)) {
        var pd_3 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 11)._compositionEnd($event.target.value) !== false);
        ad = (pd_3 && ad);
    } if (("input" === en)) {
        var pd_4 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 16)._handleInput($event.target.value) !== false);
        ad = (pd_4 && ad);
    } if (("blur" === en)) {
        var pd_5 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 16).onTouched() !== false);
        ad = (pd_5 && ad);
    } if (("compositionstart" === en)) {
        var pd_6 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 16)._compositionStart() !== false);
        ad = (pd_6 && ad);
    } if (("compositionend" === en)) {
        var pd_7 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 16)._compositionEnd($event.target.value) !== false);
        ad = (pd_7 && ad);
    } if (("blur" === en)) {
        var pd_8 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 21).blur() !== false);
        ad = (pd_8 && ad);
    } if (("ngModelChange" === en)) {
        var pd_9 = (_co.onInput($event) !== false);
        ad = (pd_9 && ad);
    } if (("blur" === en)) {
        var pd_10 = (_co.onBlur() !== false);
        ad = (pd_10 && ad);
    } if (("keyup.enter" === en)) {
        var pd_11 = (_co.exit("enterKey") !== false);
        ad = (pd_11 && ad);
    } if (("keyup.esc" === en)) {
        var pd_12 = (_co.escaped() !== false);
        ad = (pd_12 && ad);
    } if (("focus" === en)) {
        var pd_13 = (_co.onFocus() !== false);
        ad = (pd_13 && ad);
    } return ad; }, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](9, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgStyle"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]], { ngStyle: [0, "ngStyle"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵpod"](10, { "font-family": 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](11, 16384, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["DefaultValueAccessor"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], [2, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["COMPOSITION_BUFFER_MODE"]]], null, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](12, 147456, null, 0, _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_3__["ValidatePropertyDirective"], [_store_validation_validation_service__WEBPACK_IMPORTED_MODULE_4__["ValidationService"]], { model: [0, "model"], modelType: [1, "modelType"], propertyName: [2, "propertyName"], group: [3, "group"], modelContext: [4, "modelContext"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵprd"](1024, null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALIDATORS"], function (p0_0) { return [p0_0]; }, [_validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_3__["ValidatePropertyDirective"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](14, 147456, null, 0, _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_3__["AsyncValidatePropertyDirective"], [_store_validation_validation_service__WEBPACK_IMPORTED_MODULE_4__["ValidationService"]], { model: [0, "model"], modelType: [1, "modelType"], propertyName: [2, "propertyName"], group: [3, "group"], modelContext: [4, "modelContext"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵprd"](1024, null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_ASYNC_VALIDATORS"], function (p0_0) { return [p0_0]; }, [_validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_3__["AsyncValidatePropertyDirective"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](16, 540672, null, 0, angular2_text_mask__WEBPACK_IMPORTED_MODULE_5__["MaskedInputDirective"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], [2, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["COMPOSITION_BUFFER_MODE"]]], { textMaskConfig: [0, "textMaskConfig"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵprd"](1024, null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALUE_ACCESSOR"], function (p0_0, p1_0) { return [p0_0, p1_0]; }, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["DefaultValueAccessor"], angular2_text_mask__WEBPACK_IMPORTED_MODULE_5__["MaskedInputDirective"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](18, 671744, [["input", 4]], 0, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgModel"], [[8, null], [6, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALIDATORS"]], [6, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_ASYNC_VALIDATORS"]], [6, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALUE_ACCESSOR"]]], { name: [0, "name"], isDisabled: [1, "isDisabled"], model: [2, "model"] }, { update: "ngModelChange" }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵprd"](2048, null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControl"], null, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgModel"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](20, 16384, null, 0, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], [[4, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControl"]]], null, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](21, 737280, null, 0, _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_3__["ValidationStatusDirective"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], [2, _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_3__["FormDirective"]]], { spValidationStatus: [0, "spValidationStatus"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵand"](16777216, null, null, 1, null, View_InputTextComponent_5)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](23, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](24, 0, null, null, 1, null, null, null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵncd"](null, 2), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](26, 0, null, null, 1, "div", [["class", "validationError"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](27, 671744, null, 0, _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_3__["ValidationFeedbackDirective"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], [2, _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_3__["FormDirective"]]], { spValidationFeedback: [0, "spValidationFeedback"], displayName: [1, "displayName"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵncd"](null, 3)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.label; _ck(_v, 3, 0, currVal_0); var currVal_3 = !!_co.prepend; _ck(_v, 7, 0, currVal_3); var currVal_14 = _ck(_v, 10, 0, (!_co.maskConfig ? "" : "monospace, monospace")); _ck(_v, 9, 0, currVal_14); var currVal_15 = _co.model; var currVal_16 = _co.modelType; var currVal_17 = _co.propertyName; var currVal_18 = _co.group; var currVal_19 = _co.modelContext; _ck(_v, 12, 0, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19); var currVal_20 = _co.model; var currVal_21 = _co.modelType; var currVal_22 = _co.propertyName; var currVal_23 = _co.group; var currVal_24 = _co.modelContext; _ck(_v, 14, 0, currVal_20, currVal_21, currVal_22, currVal_23, currVal_24); var currVal_25 = _co.textMask; _ck(_v, 16, 0, currVal_25); var currVal_26 = _co.name; var currVal_27 = _co.disabled; var currVal_28 = _co.getValue(); _ck(_v, 18, 0, currVal_26, currVal_27, currVal_28); var currVal_29 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 18); _ck(_v, 21, 0, currVal_29); var currVal_30 = !!_co.append; _ck(_v, 23, 0, currVal_30); var currVal_31 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 18); var currVal_32 = _co.label; _ck(_v, 27, 0, currVal_31, currVal_32); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.append; var currVal_2 = _co.prepend; _ck(_v, 5, 0, currVal_1, currVal_2); var currVal_4 = _co.type; var currVal_5 = _co.name; var currVal_6 = _co.placeholder; var currVal_7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 20).ngClassUntouched; var currVal_8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 20).ngClassTouched; var currVal_9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 20).ngClassPristine; var currVal_10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 20).ngClassDirty; var currVal_11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 20).ngClassValid; var currVal_12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 20).ngClassInvalid; var currVal_13 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵnov"](_v, 20).ngClassPending; _ck(_v, 8, 0, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13); }); }
function View_InputTextComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 2, "sp-input", [], null, null, null, View_InputTextComponent_0, RenderType_InputTextComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵprd"](5120, null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NG_VALUE_ACCESSOR"], function (p0_0) { return [p0_0]; }, [_input_text_component__WEBPACK_IMPORTED_MODULE_6__["InputTextComponent"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](2, 4440064, null, 0, _input_text_component__WEBPACK_IMPORTED_MODULE_6__["InputTextComponent"], [_input_mask_catalog__WEBPACK_IMPORTED_MODULE_7__["InputMaskCatalog"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"], [2, _model_component__WEBPACK_IMPORTED_MODULE_8__["ModelComponent"]]], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, null); }
var InputTextComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-input", _input_text_component__WEBPACK_IMPORTED_MODULE_6__["InputTextComponent"], View_InputTextComponent_Host_0, { append: "append", autofocus: "autofocus", classNames: "classNames", disabled: "disabled", formatString: "formatString", group: "group", guide: "guide", keepCharPositions: "keepCharPositions", label: "label", mask: "mask", model: "model", modelType: "modelType", name: "name", placeholder: "placeholder", placeholderChar: "placeholderChar", prepend: "prepend", propertyName: "propertyName", showMask: "showMask", tooltip: "tooltip", type: "type", maskType: "maskType" }, { blur: "blur", focus: "focus", onChange: "onChange", onExit: "onExit", onTouched: "onTouched" }, ["*", "[helpTextAbove]", "[inputActionIcon]", "[helpText]"]);



/***/ }),

/***/ "./src/app/shared/input/input-text.component.ts":
/*!******************************************************!*\
  !*** ./src/app/shared/input/input-text.component.ts ***!
  \******************************************************/
/*! exports provided: InputTextComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputTextComponent", function() { return InputTextComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _shared_model_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/model.component */ "./src/app/shared/model.component.ts");
/* harmony import */ var _shared_input_input_mask_catalog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/input/input-mask-catalog */ "./src/app/shared/input/input-mask-catalog.ts");




var InputTextComponent = /** @class */ (function () {
    function InputTextComponent(inputMasks, changeDetector, modelContext) {
        this.inputMasks = inputMasks;
        this.changeDetector = changeDetector;
        this.modelContext = modelContext;
        this.disabled = false;
        this.formatString = 'yyyy-MM-dd';
        // Mask properties
        this.mask = false; // false => no mask
        this.placeholder = '';
        this.tooltip = false;
        this.type = 'text';
        this.blur = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.focus = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onExit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onTouched = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.accessorOnChange = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
        };
        this.accessorOnTouched = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
        };
        this.isDestroyed = false;
        this.open = false;
        this.previousValue = undefined;
        this.textMask = { mask: false };
    }
    Object.defineProperty(InputTextComponent.prototype, "group", {
        /** Get the latest data-bound group. If not bound, get group from modelContext. */
        get: function () {
            return this._group || (this.modelContext && this.modelContext.group);
        },
        set: function (value) { this._group = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputTextComponent.prototype, "model", {
        /** Get the latest data-bound model. If not bound, get model from modelContext. */
        get: function () {
            return this._model || (this.modelContext && this.modelContext.model);
        },
        set: function (value) { this._model = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputTextComponent.prototype, "modelType", {
        /** Get the latest data-bound model type. If not bound, get model type from modelContext. */
        get: function () {
            return this._modelType || (this.modelContext && this.modelContext.modelType);
        },
        set: function (value) { this._modelType = value; },
        enumerable: true,
        configurable: true
    });
    InputTextComponent.prototype.ngOnInit = function () {
        this.maskConfig = this.inputMasks.getMaskForType(this.maskType);
        if (this.maskConfig) {
            this.inputMasks.applyConfig(this, this.maskConfig);
        }
        this.name = (this.name || '') + '$' + InputTextComponent.nameCounter++;
        // this.classNames = 'form-control ' + (this.classNames || '');
    };
    InputTextComponent.prototype.ngAfterViewInit = function () {
        this.inputEl = this.child.nativeElement;
        if (this.autofocus) {
            this.inputEl.focus();
        }
    };
    Object.defineProperty(InputTextComponent.prototype, "maskType", {
        get: function () {
            return this._maskType;
        },
        set: function (value) {
            this._maskType = value;
            if (!value) {
                this.textMask = { mask: false };
                this.detectChanges();
                return;
            }
            this.maskConfig = this.inputMasks.getMaskForType(this.maskType);
            if (this.maskConfig) {
                this.inputMasks.applyConfig(this, this.maskConfig);
                this.detectChanges();
            }
        },
        enumerable: true,
        configurable: true
    });
    InputTextComponent.prototype.ngOnDestroy = function () {
        this.isDestroyed = true;
        this.exit('destroyed');
    };
    InputTextComponent.prototype.writeValue = function (obj) {
        this.currentValue = obj;
    };
    InputTextComponent.prototype.registerOnChange = function (fn) {
        this.accessorOnChange = fn;
    };
    InputTextComponent.prototype.registerOnTouched = function (fn) {
        this.accessorOnTouched = fn;
    };
    InputTextComponent.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    InputTextComponent.prototype.detectChanges = function () {
        if (!this.isDestroyed) {
            this.changeDetector.detectChanges();
        }
    };
    /**
     * Emit onExit after user exits control
     * @param exitType {ExitType} How the user exited the control
     */
    InputTextComponent.prototype.exit = function (exitType) {
        // Auto-trim on exit; could add a NoTrim option if necessary.
        var currentValuePreTrim = this.getValue();
        var currentValue = typeof currentValuePreTrim === 'string'
            ? (currentValuePreTrim || '').trim()
            : currentValuePreTrim;
        if (currentValuePreTrim !== currentValue) {
            // update and announce the change;
            this.onInput(currentValue);
        }
        this.onExit.emit({ exitType: exitType, isChanged: this.originalValue !== currentValue });
        this.originalValue = currentValue;
        this.detectChanges();
    };
    /** User pressed escape. Restores original value and exits */
    InputTextComponent.prototype.escaped = function () {
        // undo change
        var currentValue = this.inputEl.value;
        if (currentValue !== this.originalValue) {
            this.onInput(this.originalValue);
        }
        this.exit('escapeKey');
    };
    InputTextComponent.prototype.onInput = function (value) {
        if (this.originalValue == null) {
            this.originalValue = this.getValue();
        }
        if (this.maskConfig) {
            value = this.maskConfig.toVm(value, this.modelType);
        }
        this.setValue(value);
        this.accessorOnChange(this.getValue());
        this.onChange.emit(this.getValue());
        if (this.modelContext) {
            this.modelContext.notifyOfModelChange();
        }
        this.detectChanges();
    };
    InputTextComponent.prototype.onFocus = function () {
        // Prevent Angular for raising errors due to modified binding values between detection cycles
        // by performing manual change detection during edit operations
        this.changeDetector.detach();
        this.focus.emit();
        this.enteringEdit = true;
    };
    InputTextComponent.prototype.onBlur = function () {
        this.changeDetector.reattach();
        this.editing = false;
        this.enteringEdit = false;
        this.accessorOnTouched();
        this.onTouched.emit();
        this.blur.emit();
        this.exit('blur');
        this.open = false;
    };
    InputTextComponent.prototype.getValue = function () {
        if (this.maskConfig) {
            var formattedValue = this.maskConfig.toView(this.getValueInternal(), this.editing, this.formatString);
            if (this.enteringEdit) {
                this.editing = true; // Set editing after first value read
                this.enteringEdit = false;
            }
            return formattedValue;
        }
        var val = this.getValueInternal();
        return val != null ? val.toString() : null;
    };
    InputTextComponent.prototype.getValueInternal = function () {
        if (this.model && this.modelType && this.propertyName) {
            return this.model[this.propertyName];
        }
        return this.currentValue;
    };
    InputTextComponent.prototype.setValue = function (value) {
        if (this.model && this.modelType && this.propertyName) {
            this.model[this.propertyName] = value;
        }
        this.currentValue = value;
    };
    InputTextComponent.nameCounter = 0;
    return InputTextComponent;
}());



/***/ }),

/***/ "./src/app/shared/input/multi-mask-helper.ts":
/*!***************************************************!*\
  !*** ./src/app/shared/input/multi-mask-helper.ts ***!
  \***************************************************/
/*! exports provided: MASK_FLAGS, MaskHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MASK_FLAGS", function() { return MASK_FLAGS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaskHelper", function() { return MaskHelper; });
var MASK_FLAGS = ['Æ', '#', '@', '*'];
var MaskHelper = /** @class */ (function () {
    function MaskHelper() {
    }
    /**
     * Get the closest mask for a given input and if any mask matches the input.
     * There are 3 conditions for a valid mask:
     * 1) It must return a mask if only one mask is available
     * 2) It must return the next matching mask so the user can continue with input ex:
     *    if there are 2 masks: ### and #### if the input is 123 the returned mask should be #### not ###
     * 3) If there are no other masks return the most comprehensive one ex: if the status is like above
     *    and the input is 1234 it should return #### as that is the latest matchable mask
     */
    MaskHelper.prototype.getClosestMask = function (value, masks, curmask) {
        var _this = this;
        // Only one mask ...
        if (masks.length === 1) {
            var mask = masks[0];
            var matchResult = this.matchesMask(value, mask);
            if (matchResult.isMatch) {
                return { mask: mask, isExactMatch: matchResult.isExactMatch, parsedVal: matchResult.parsedValue };
            }
            return { mask: null, isExactMatch: false, parsedVal: matchResult.parsedValue };
        }
        // No input don't return anything
        if (value == null || value === '') {
            return { mask: null, isExactMatch: false, parsedVal: value };
        }
        // Return current mask if it works
        if (curmask) {
            var matchResult = this.matchesMask(value, curmask);
            if (matchResult.isMatch) {
                return { mask: curmask, isExactMatch: matchResult.isExactMatch, parsedVal: matchResult.parsedValue };
            }
        }
        // Get the closest next mask for the input
        // Ex: given masks: ddd and dddd.
        // If the input is 12 return ddd.
        // If the input is 123 return dddd.
        // If the input is 1234 return dddd as that is 'the last' available match.
        var sortedMasks = masks.sort(function (a, b) { return b.length - a.length; });
        var closestMask = sortedMasks.reduce(function (a, mask) {
            var valSize = value.length;
            // If the mask is less than the input we dont consider it
            if (mask.length < valSize) {
                return a;
            }
            var matchResult = _this.matchesMask(value, mask);
            if (matchResult.isMatch) {
                // This mask matches the result but there is another more encompassing mask
                if (matchResult.isExactMatch && a != null) {
                    return {
                        isExactMatch: true,
                        mask: a.mask,
                        parsedVal: matchResult.parsedValue
                    };
                }
                // Return this mask
                return {
                    mask: mask,
                    isExactMatch: matchResult.isExactMatch || (a != null && a.isExactMatch),
                    parsedVal: matchResult.parsedValue
                };
            }
            return a;
        }, null);
        if (!!closestMask) {
            return closestMask;
        }
        return { mask: null, isExactMatch: false, parsedVal: value };
    };
    MaskHelper.prototype.matchesMask = function (value, mask) {
        if (value == null) {
            return {
                isMatch: false,
                isExactMatch: false,
                parsedValue: value
            };
        }
        var isMaskApplicable = true;
        var parsedValue = [];
        for (var i = 0; i < value.length; i++) {
            var char = value.charAt(i);
            var isCharValid = this.validateCharOnPosition(char, i, mask);
            if (isCharValid.isValid === false) {
                isMaskApplicable = false;
                break;
            }
            parsedValue.push(isCharValid.parsedChar);
        }
        return {
            isMatch: isMaskApplicable,
            isExactMatch: isMaskApplicable && mask.length === value.length,
            parsedValue: isMaskApplicable ? parsedValue.join('') : value
        };
    };
    MaskHelper.prototype.validateCharOnPosition = function (inputChar, position, mask) {
        var regex;
        var isValid = false;
        var parsedChar = inputChar;
        var letterOrDigitRegEx = '[\\d\\u00C0-\\u1FFF\\u2C00-\\uD7FFa-zA-Z]';
        var letterRegEx = '[\\u00C0-\\u1FFF\\u2C00-\\uD7FFa-zA-Z]';
        var digitRegEx = '[\\d]';
        var letterOrDigitOrSpecialRegEx = '[\\d\\u00C0-\\u1FFF\\u2C00-\\uD7FFa-zA-Z\\&\\\']';
        var maskKey = mask.charAt(position);
        switch (maskKey) {
            case '@':
                regex = new RegExp(letterOrDigitRegEx);
                isValid = regex.test(inputChar);
                break;
            case 'Æ':
                regex = new RegExp(letterRegEx);
                isValid = regex.test(inputChar);
                break;
            case '#':
                regex = new RegExp(digitRegEx);
                isValid = regex.test(inputChar);
                break;
            case '*':
                regex = new RegExp(letterOrDigitOrSpecialRegEx);
                isValid = regex.test(inputChar);
                break;
            default:
                // Its probably just a literal
                if (maskKey === inputChar) {
                    isValid = true;
                }
                else if (maskKey.toLowerCase() === inputChar.toLowerCase()) {
                    isValid = true;
                    parsedChar = maskKey;
                }
                else {
                    isValid = false;
                }
        }
        return {
            isValid: isValid,
            parsedChar: parsedChar
        };
    };
    MaskHelper.prototype.isLiteral = function (ch) {
        if (!ch) {
            return false;
        }
        ch = ch.charAt(0);
        switch (ch) {
            case '@':
            case 'Æ':
            case '#':
            case '*':
                return false;
            default:
                return true;
        }
    };
    return MaskHelper;
}());



/***/ }),

/***/ "./src/app/shared/input/multi-mask.directive.ts":
/*!******************************************************!*\
  !*** ./src/app/shared/input/multi-mask.directive.ts ***!
  \******************************************************/
/*! exports provided: MultiMaskDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiMaskDirective", function() { return MultiMaskDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _multi_mask_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./multi-mask-helper */ "./src/app/shared/input/multi-mask-helper.ts");



// TODO:
// 1) hook the ngModel rather than a custom binned dataValue input?
var MultiMaskDirective = /** @class */ (function () {
    function MultiMaskDirective(elementRef) {
        this.elementRef = elementRef;
        this.onValueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.maskOptions = {
            format: '',
            guideChar: ''
        };
        this.onTouchedCallback = function () { };
        this.onChangeCallback = function () { };
        this.maskHelper = new _multi_mask_helper__WEBPACK_IMPORTED_MODULE_2__["MaskHelper"]();
    }
    Object.defineProperty(MultiMaskDirective.prototype, "value", {
        get: function () {
            return this.nativeElement.value;
        },
        set: function (val) {
            this.nativeElement.value = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MultiMaskDirective.prototype, "disabled", {
        get: function () {
            return this.nativeElement.hasAttribute('disabled');
        },
        set: function (value) {
            this.nativeElement.disabled = value;
            if (value && this.disabledText != null) {
                this.value = this.disabledText;
            }
            else {
                this.value = this.dataValue || '';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MultiMaskDirective.prototype, "nativeElement", {
        get: function () {
            return this.elementRef.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    MultiMaskDirective.prototype.ngOnInit = function () {
        if (this.masks != null) {
            this.currentMask = this.masks.length > 0 ? this.masks.sort(function (a, b) { return a.length - b.length; })[0] : '';
            // add element behind to show mask, (instead of placeholder which disappears)
            var cln = this.nativeElement.ownerDocument.createElement('input');
            cln.className = 'form-control maskview';
            cln.tabIndex = -1;
            this.nativeElement.parentElement.appendChild(cln);
            cln.value = this.currentMask;
            this.maskview = cln;
        }
        if (this.disabled === false) {
            this.nativeElement.value = this.dataValue || '';
        }
    };
    MultiMaskDirective.prototype.onInputChanged = function (event) {
        var val = this.value;
        // Only run the mask change logic if we have any masks
        if (this.disabled === false && this.masks != null && this.masks.length > 0) {
            // The value has been cleared so we reset everything
            if (val == null || val === '') {
                this.resetMaskState();
                this.setNewValue('');
                this.setMaskMatch({ mask: this.currentMask || this.masks[0], isExactMatch: false, parsedVal: '' });
                return;
            }
            // Validate the new value with given masks
            var maskMatch = this.maskHelper.getClosestMask(this.value, this.masks, this.currentMask);
            if (maskMatch.mask == null) {
                // We could not validate the value so keep the prev valid one or empty
                this.value = this.prevValue || '';
            }
            if (maskMatch.mask != null) {
                this.currentMask = maskMatch.mask;
                var cval_1 = maskMatch.parsedVal;
                var mask_1 = maskMatch.mask;
                // append the next mask char if it is a literal
                if (mask_1.length > cval_1.length && this.prevValue && this.prevValue.length <= cval_1.length) {
                    var ch_1 = mask_1.charAt(cval_1.length);
                    if (this.maskHelper.isLiteral(ch_1)) {
                        // if there are multiple masks, only append the literal if it appears
                        // at the same position in all the possible masks.
                        if (this.masks.every(function (m) { return m.length <= cval_1.length || mask_1.charAt(cval_1.length) === ch_1; })) {
                            cval_1 += ch_1;
                        }
                    }
                }
                this.value = cval_1;
            }
            this.setMaskMatch(maskMatch);
        }
        this.setNewValue(this.value);
    };
    MultiMaskDirective.prototype.writeValue = function (value) {
        if (value == null) {
            return;
        }
        if (value === '') {
            this.resetMaskState();
            this.setNewValue(value);
            return;
        }
        if (this.disabled === false && this.masks != null && this.masks.length > 0) {
            var maskMatch = this.maskHelper.getClosestMask(value, this.masks, this.currentMask);
            if (maskMatch.mask != null) {
                this.setNewValue(maskMatch.parsedVal);
                this.setMaskMatch(maskMatch);
            }
        }
    };
    MultiMaskDirective.prototype.registerOnChange = function (fn) { this.onChangeCallback = fn; };
    MultiMaskDirective.prototype.registerOnTouched = function (fn) { this.onTouchedCallback = fn; };
    MultiMaskDirective.prototype.resetMaskState = function () {
        this.maskOptions.format = '';
    };
    MultiMaskDirective.prototype.setNewValue = function (newVal) {
        this.prevValue = newVal;
        this.dataValue = newVal;
        this.onChangeCallback(this.dataValue);
        this.onValueChange.emit(this.value);
    };
    /** set the value of the maskview element to the mask, with the filled elements
     * replaced with spaces, so that only the unfilled portion of the mask is shown.
     * e.g. mask = '####', parsedVal = '12' => maskview.value = '  ##'
     */
    MultiMaskDirective.prototype.setMaskMatch = function (maskMatch) {
        if (maskMatch.mask === null) {
            return; // leave displayed mask as-is
        }
        var filledLength = maskMatch.parsedVal && maskMatch.parsedVal.length || 0;
        var mask = maskMatch.mask;
        mask = ' '.repeat(filledLength) + mask.substring(filledLength);
        this.maskview.value = mask;
    };
    return MultiMaskDirective;
}());



/***/ }),

/***/ "./src/app/shared/model.component.ts":
/*!*******************************************!*\
  !*** ./src/app/shared/model.component.ts ***!
  \*******************************************/
/*! exports provided: ModelComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelComponent", function() { return ModelComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

var ModelComponent = /** @class */ (function () {
    function ModelComponent() {
        this.modelChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    ModelComponent.prototype.ngOnChanges = function (changes) {
        this.modelChange.emit();
    };
    ModelComponent.prototype.notifyOfModelChange = function () {
        this.modelChange.emit();
    };
    return ModelComponent;
}());



/***/ }),

/***/ "./src/app/shared/nav-bottom.component.ts":
/*!************************************************!*\
  !*** ./src/app/shared/nav-bottom.component.ts ***!
  \************************************************/
/*! exports provided: NavBottomComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavBottomComponent", function() { return NavBottomComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_well_known_routes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @core/well-known-routes */ "./src/app/core/well-known-routes.ts");


var NavBottomComponent = /** @class */ (function () {
    function NavBottomComponent() {
        this.dashboardRoute = _core_well_known_routes__WEBPACK_IMPORTED_MODULE_1__["WellKnownRoutes"].Dashboard;
        this.defaultRoute = _core_well_known_routes__WEBPACK_IMPORTED_MODULE_1__["WellKnownRoutes"].Dashboard;
        /** Set true and ALL navigation buttons are disabled. */
        this.disabled = false;
        this.disableBack = false;
        this.disableNext = false;
        this.disableReturnTo = false;
        // Bind to any of the following route values to change them from dashboard
        // Probably don't change these two values
        /** Where "returnTo" button goes(bind to null to hide button) */
        this.returnTo = this.dashboardRoute;
        /** "returnTo" button label */
        this.returnToLabel = 'Return to Dashboard';
        /** Where back button goes (bind to null to hide button) */
        this.back = this.defaultRoute;
        /** "back" button label */
        this.backLabel = 'Back';
        /** Where next button goes (bind to null to hide button) */
        this.next = this.defaultRoute;
        /** "next" button label */
        this.nextLabel = 'Next Step';
    }
    NavBottomComponent.prototype.ngOnInit = function () {
        this.back = this.back == null ? null : this.back;
        this.next = this.next == null ? null : this.next;
        this.returnTo = this.returnTo == null ? null : this.returnTo;
    };
    return NavBottomComponent;
}());



/***/ }),

/***/ "./src/app/shared/pipes/address.pipe.ts":
/*!**********************************************!*\
  !*** ./src/app/shared/pipes/address.pipe.ts ***!
  \**********************************************/
/*! exports provided: AddressPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddressPipe", function() { return AddressPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _utils_address_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utils/address-utils */ "./src/app/core/utils/address-utils.ts");


// Transform an address object into a single line of text
var AddressPipe = /** @class */ (function () {
    function AddressPipe() {
    }
    AddressPipe.prototype.transform = function (address) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return Object(_utils_address_utils__WEBPACK_IMPORTED_MODULE_1__["addressToString"])(address);
    };
    return AddressPipe;
}());



/***/ }),

/***/ "./src/app/shared/pipes/company-kind.pipe.ts":
/*!***************************************************!*\
  !*** ./src/app/shared/pipes/company-kind.pipe.ts ***!
  \***************************************************/
/*! exports provided: CompanyKindPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyKindPipe", function() { return CompanyKindPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");


/** Returns the displayable "kind" of customer - 'Household' or 'Company' */
var CompanyKindPipe = /** @class */ (function () {
    function CompanyKindPipe() {
    }
    CompanyKindPipe.prototype.transform = function (company) {
        return Object(_model__WEBPACK_IMPORTED_MODULE_1__["companyKind"])(company);
    };
    return CompanyKindPipe;
}());



/***/ }),

/***/ "./src/app/shared/pipes/filter-removed.pipe.ts":
/*!*****************************************************!*\
  !*** ./src/app/shared/pipes/filter-removed.pipe.ts ***!
  \*****************************************************/
/*! exports provided: FilterRemovedPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterRemovedPipe", function() { return FilterRemovedPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

/** Hide an item with `isRemoved` == true unless showRemoved is true. */
var FilterRemovedPipe = /** @class */ (function () {
    function FilterRemovedPipe() {
    }
    FilterRemovedPipe.prototype.transform = function (items, showRemoved) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        return items
            ? showRemoved
                ? items
                : items.filter(function (item) { return !item.isRemoved; })
            : [];
    };
    return FilterRemovedPipe;
}());



/***/ }),

/***/ "./src/app/shared/pipes/fullname.pipe.ts":
/*!***********************************************!*\
  !*** ./src/app/shared/pipes/fullname.pipe.ts ***!
  \***********************************************/
/*! exports provided: FullNamePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FullNamePipe", function() { return FullNamePipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @core/utils */ "./src/app/core/utils/index.ts");


var FullNamePipe = /** @class */ (function () {
    function FullNamePipe() {
    }
    FullNamePipe.prototype.transform = function (person) {
        return Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__["getFullName"])(person);
    };
    return FullNamePipe;
}());



/***/ }),

/***/ "./src/app/shared/pipes/household-filer-status.pipe.ts":
/*!*************************************************************!*\
  !*** ./src/app/shared/pipes/household-filer-status.pipe.ts ***!
  \*************************************************************/
/*! exports provided: HouseholdFilerStatusPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HouseholdFilerStatusPipe", function() { return HouseholdFilerStatusPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _app_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/model */ "./src/app/model/index.ts");


var HouseholdFilerStatusPipe = /** @class */ (function () {
    function HouseholdFilerStatusPipe() {
    }
    HouseholdFilerStatusPipe.prototype.transform = function (value) {
        if (value === _app_model__WEBPACK_IMPORTED_MODULE_1__["HouseholdFilersStatus"].Single) {
            return 'Single';
        }
        else if (value === _app_model__WEBPACK_IMPORTED_MODULE_1__["HouseholdFilersStatus"].Joint) {
            return 'Joint';
        }
        return 'missing';
    };
    return HouseholdFilerStatusPipe;
}());



/***/ }),

/***/ "./src/app/shared/pipes/phone.pipe.ts":
/*!********************************************!*\
  !*** ./src/app/shared/pipes/phone.pipe.ts ***!
  \********************************************/
/*! exports provided: PhonePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhonePipe", function() { return PhonePipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

var PhonePipe = /** @class */ (function () {
    function PhonePipe() {
        this.missingValue = 'missing';
    }
    PhonePipe.prototype.transform = function (value) {
        if (!value) {
            return this.missingValue;
        }
        else {
            value = value.toString();
            var text = value.replace(/[^\d]+/g, '').padEnd(Math.max(0, 10 - value.length), ' ');
            return "(" + text.slice(0, 3) + ") " + text.slice(3, Math.min(6, value.length)) + "-" + text.slice(6);
        }
    };
    return PhonePipe;
}());



/***/ }),

/***/ "./src/app/shared/pipes/ssn.pipe.ts":
/*!******************************************!*\
  !*** ./src/app/shared/pipes/ssn.pipe.ts ***!
  \******************************************/
/*! exports provided: SsnPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SsnPipe", function() { return SsnPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

var SsnPipe = /** @class */ (function () {
    function SsnPipe() {
    }
    SsnPipe.prototype.transform = function (value) {
        if (!value) {
            return 'missing';
        }
        else {
            value = value.toString();
            var text = value.toString().replace(/[^\d]+/g, '').padStart(9, '0');
            return text.slice(0, 3) + "-" + text.slice(3, 5) + "-" + text.slice(5);
        }
    };
    return SsnPipe;
}());



/***/ }),

/***/ "./src/app/shared/pipes/state-name.pipe.ts":
/*!*************************************************!*\
  !*** ./src/app/shared/pipes/state-name.pipe.ts ***!
  \*************************************************/
/*! exports provided: StateNamePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StateNamePipe", function() { return StateNamePipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _model_codes_enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @model/codes-enums */ "./src/app/model/codes-enums/index.ts");


// Transform an address object into a single line of text
var StateNamePipe = /** @class */ (function () {
    function StateNamePipe() {
    }
    StateNamePipe.prototype.transform = function (stateCode) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return _model_codes_enums__WEBPACK_IMPORTED_MODULE_1__["USStateCodes"].getDisplayName((stateCode || '').toUpperCase()) || 'missing or invalid';
    };
    return StateNamePipe;
}());



/***/ }),

/***/ "./src/app/shared/pipes/subject-exempt.pipe.ts":
/*!*****************************************************!*\
  !*** ./src/app/shared/pipes/subject-exempt.pipe.ts ***!
  \*****************************************************/
/*! exports provided: SubjectExemptBooleanPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubjectExemptBooleanPipe", function() { return SubjectExemptBooleanPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

var SubjectExemptBooleanPipe = /** @class */ (function () {
    function SubjectExemptBooleanPipe() {
    }
    SubjectExemptBooleanPipe.prototype.transform = function (value) {
        return value == null ? 'Undecided' : value === true ? 'Exempt' : 'Subject';
    };
    return SubjectExemptBooleanPipe;
}());



/***/ }),

/***/ "./src/app/shared/pipes/yes-no.pipe.ts":
/*!*********************************************!*\
  !*** ./src/app/shared/pipes/yes-no.pipe.ts ***!
  \*********************************************/
/*! exports provided: YesNoBooleanPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YesNoBooleanPipe", function() { return YesNoBooleanPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

var YesNoBooleanPipe = /** @class */ (function () {
    function YesNoBooleanPipe() {
    }
    YesNoBooleanPipe.prototype.transform = function (value) {
        return value == null ? 'Unknown' : (value ? 'Yes' : 'No');
    };
    return YesNoBooleanPipe;
}());



/***/ }),

/***/ "./src/app/shared/placeholder.component.ts":
/*!*************************************************!*\
  !*** ./src/app/shared/placeholder.component.ts ***!
  \*************************************************/
/*! exports provided: PlaceholderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlaceholderComponent", function() { return PlaceholderComponent; });
/* harmony import */ var _core_well_known_routes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @core/well-known-routes */ "./src/app/core/well-known-routes.ts");

/** A placeholder until the view is developed. */
var PlaceholderComponent = /** @class */ (function () {
    function PlaceholderComponent() {
        this.showButtons = true;
        this.back = _core_well_known_routes__WEBPACK_IMPORTED_MODULE_0__["WellKnownRoutes"].Dashboard;
        this.next = _core_well_known_routes__WEBPACK_IMPORTED_MODULE_0__["WellKnownRoutes"].Dashboard;
    }
    return PlaceholderComponent;
}());



/***/ }),

/***/ "./src/app/shared/radio-group/index.ts":
/*!*********************************************!*\
  !*** ./src/app/shared/radio-group/index.ts ***!
  \*********************************************/
/*! exports provided: RadioButtonComponent, RadioGroupValueAccessorDirective, RadioGroupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _radio_button_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./radio-button.component */ "./src/app/shared/radio-group/radio-button.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadioButtonComponent", function() { return _radio_button_component__WEBPACK_IMPORTED_MODULE_0__["RadioButtonComponent"]; });

/* harmony import */ var _radio_group_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./radio-group.component */ "./src/app/shared/radio-group/radio-group.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadioGroupValueAccessorDirective", function() { return _radio_group_component__WEBPACK_IMPORTED_MODULE_1__["RadioGroupValueAccessorDirective"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadioGroupComponent", function() { return _radio_group_component__WEBPACK_IMPORTED_MODULE_1__["RadioGroupComponent"]; });





/***/ }),

/***/ "./src/app/shared/radio-group/radio-button.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/shared/radio-group/radio-button.component.ts ***!
  \**************************************************************/
/*! exports provided: RadioButtonComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadioButtonComponent", function() { return RadioButtonComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

var RadioButtonComponent = /** @class */ (function () {
    function RadioButtonComponent() {
        this.isSelected = false;
        this.hasFocus = false;
        this.currentValue = '';
        this.disabled = false;
        this.valueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    Object.defineProperty(RadioButtonComponent.prototype, "selectedValue", {
        get: function () {
            return this._selectedValue;
        },
        set: function (v) {
            this._selectedValue = v;
            this.calcIsSelected();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadioButtonComponent.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (v) {
            this._value = v;
            this.calcIsSelected();
            this.select();
        },
        enumerable: true,
        configurable: true
    });
    RadioButtonComponent.prototype.select = function () {
        this.valueChange.emit(this._value);
    };
    RadioButtonComponent.prototype.onFocus = function () {
        this.hasFocus = true;
    };
    RadioButtonComponent.prototype.onBlur = function () {
        this.hasFocus = false;
    };
    RadioButtonComponent.prototype.calcIsSelected = function () {
        this.isSelected = (this._selectedValue === this._value) ? true : false;
        // HACK: work-around to avoid an error in dirty checking inside
        // ngClass when reusing a component
        this.enforceStyle('active', this.isSelected);
    };
    RadioButtonComponent.prototype.enforceStyle = function (styleName, active) {
        var cl = this.label.nativeElement.classList;
        if (active) {
            cl.add(styleName);
        }
        else {
            cl.remove(styleName);
        }
    };
    return RadioButtonComponent;
}());



/***/ }),

/***/ "./src/app/shared/radio-group/radio-group.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/shared/radio-group/radio-group.component.ts ***!
  \*************************************************************/
/*! exports provided: RadioGroupValueAccessorDirective, RadioGroupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadioGroupValueAccessorDirective", function() { return RadioGroupValueAccessorDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadioGroupComponent", function() { return RadioGroupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _radio_button_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./radio-button.component */ "./src/app/shared/radio-group/radio-button.component.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _model_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../model.component */ "./src/app/shared/model.component.ts");




var RadioGroupValueAccessorDirective = /** @class */ (function () {
    function RadioGroupValueAccessorDirective() {
        this.subscriptions = [];
        this.disabled = false;
        this.accessorOnChange = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
        };
        this.accessorOnTouched = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
        };
        this.modelChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    RadioGroupValueAccessorDirective.prototype.writeValue = function (val) {
        this.currentValue = val;
        this.syncUiState(val);
        this.modelChange.emit(val);
    };
    RadioGroupValueAccessorDirective.prototype.registerOnChange = function (fn) {
        this.accessorOnChange = fn;
    };
    RadioGroupValueAccessorDirective.prototype.registerOnTouched = function (fn) {
        this.accessorOnTouched = fn;
    };
    RadioGroupValueAccessorDirective.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    RadioGroupValueAccessorDirective.prototype.blur = function () {
        this.accessorOnTouched();
    };
    RadioGroupValueAccessorDirective.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.cleanUp();
        // setTimeout: hack to avoid: ExpressionChangedAfterItHasBeenCheckedError
        // https://github.com/angular/angular/issues/17572#issuecomment-309229619
        setTimeout(function () {
            if (_this.radioButtons) {
                _this.radioButtons.forEach(function (rb) {
                    rb.name = _this.name; // propagate name
                    var sub1 = rb.valueChange.subscribe(function (v) { return _this.valueChanged(v); });
                    _this.subscriptions.push(sub1);
                });
            }
            _this.syncUiState(_this.currentValue);
        }, 0);
    };
    RadioGroupValueAccessorDirective.prototype.ngOnDestroy = function () {
        this.cleanUp();
    };
    RadioGroupValueAccessorDirective.prototype.valueChanged = function (v) {
        this.currentValue = v;
        this.accessorOnChange(this.currentValue);
        this.syncUiState(this.currentValue);
    };
    RadioGroupValueAccessorDirective.prototype.cleanUp = function () {
        this.subscriptions.forEach(function (s) { return s.unsubscribe(); });
        this.subscriptions.splice(0, this.subscriptions.length);
    };
    /** Sync UI with respect to model changes if needed: propagate state to children */
    RadioGroupValueAccessorDirective.prototype.syncUiState = function (val) {
        if (!this.radioButtons) {
            return;
        }
        this.radioButtons.forEach(function (rb) { return rb.selectedValue = val; });
    };
    return RadioGroupValueAccessorDirective;
}());

var CLICK_THRESHOLD = 150; // ms
var RadioGroupComponent = /** @class */ (function () {
    function RadioGroupComponent(renderer, elementRef, viewContainer, modelContext) {
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.viewContainer = viewContainer;
        this.modelContext = modelContext;
        this.tooltip = false;
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.open = false;
        this.tClose = 0;
    }
    Object.defineProperty(RadioGroupComponent.prototype, "group", {
        /** Get the latest data-bound group. If not bound, get group from modelContext. */
        get: function () {
            return this._group || (this.modelContext && this.modelContext.group);
        },
        set: function (value) { this._group = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadioGroupComponent.prototype, "model", {
        /** Get the latest data-bound model. If not bound, get model from modelContext. */
        get: function () {
            return this._model || (this.modelContext && this.modelContext.model);
        },
        set: function (value) { this._model = value; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadioGroupComponent.prototype, "modelType", {
        /** Get the latest data-bound model type. If not bound, get model type from modelContext. */
        get: function () {
            return this._modelType || (this.modelContext && this.modelContext.modelType);
        },
        set: function (value) { this._modelType = value; },
        enumerable: true,
        configurable: true
    });
    RadioGroupComponent.prototype.ngOnInit = function () {
        this.name = (this.name || '') + '$' + RadioGroupComponent.nameCounter++;
    };
    RadioGroupComponent.prototype.openTooltip = function () {
        var d = Date.now() - this.tClose;
        if (d < CLICK_THRESHOLD) {
            return;
        }
        if (!this.open) {
            var myRoot_1 = this.root.nativeElement;
            // give some millisecs to open the tooltip-div
            this.open = true;
            setTimeout(function () {
                var tooltipDiv = myRoot_1.querySelector('#tooltipZone');
                if (tooltipDiv) {
                    tooltipDiv.focus();
                }
            });
        }
        else {
            this.open = false;
        }
    };
    RadioGroupComponent.prototype.openKeypress = function (event) {
        if (event.charCode === 13 || event.charCode === 32) {
            // intro or space
            this.openTooltip();
        }
    };
    RadioGroupComponent.prototype.closeTooltip = function () {
        this.tClose = Date.now();
        this.open = false;
        this.tooltipButton.nativeElement.focus();
    };
    RadioGroupComponent.prototype.closeKeypress = function (event) {
        if (event.charCode === 13 || event.charCode === 32) {
            // intro or escape or space
            this.closeTooltip();
        }
    };
    RadioGroupComponent.prototype.getValue = function () {
        if (this.model && this.modelType && this.propertyName) {
            return this.model[this.propertyName];
        }
        return this.currentValue;
    };
    RadioGroupComponent.prototype.setValue = function (value) {
        if (this.model && this.modelType && this.propertyName) {
            this.model[this.propertyName] = value;
        }
        this.currentValue = value;
        if (this.modelContext) {
            this.modelContext.notifyOfModelChange();
        }
        this.change.emit(this.currentValue);
    };
    RadioGroupComponent.nameCounter = 0;
    return RadioGroupComponent;
}());



/***/ }),

/***/ "./src/app/shared/read-more/read-more.component.ts":
/*!*********************************************************!*\
  !*** ./src/app/shared/read-more/read-more.component.ts ***!
  \*********************************************************/
/*! exports provided: ReadMoreComponent, getSummary, removeSummary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReadMoreComponent", function() { return ReadMoreComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSummary", function() { return getSummary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeSummary", function() { return removeSummary; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");


var ReadMoreComponent = /** @class */ (function () {
    function ReadMoreComponent(sanitizer) {
        this.sanitizer = sanitizer;
        this.collapsed = true;
        this.separatorTag = '<summary/>';
        this.seeMoreLabel = 'See More';
        this.seeLessLabel = 'See Less';
        this.tooLarge = false;
        this.hideSeeLess = false;
    }
    Object.defineProperty(ReadMoreComponent.prototype, "description", {
        get: function () {
            return this._description;
        },
        set: function (val) {
            this._description = removeSummary(this.separatorTag, val);
            this._summary = getSummary(this.separatorTag, val);
            this.collapsed = (this._description.length > this._summary.length);
            this.tooLarge = (this._description.length > this._summary.length);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReadMoreComponent.prototype, "descriptionHtml", {
        get: function () {
            return this.getSafeHtml(this._description);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReadMoreComponent.prototype, "summaryHtml", {
        get: function () {
            return this.getSafeHtml(this._summary);
        },
        enumerable: true,
        configurable: true
    });
    ReadMoreComponent.prototype.ngOnInit = function () { };
    ReadMoreComponent.prototype.getSafeHtml = function (html) {
        // Security: `html` is always authored by the SP deduction's team and
        // is considered to be safe.
        return this.sanitizer.bypassSecurityTrustHtml(html);
    };
    Object.defineProperty(ReadMoreComponent.prototype, "showSummary", {
        get: function () {
            return this.tooLarge && this.collapsed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReadMoreComponent.prototype, "showAll", {
        get: function () {
            return (this.tooLarge && !this.collapsed) || !this.tooLarge;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReadMoreComponent.prototype, "showSeeMore", {
        get: function () {
            return this.tooLarge && !this.hideSeeLess;
        },
        enumerable: true,
        configurable: true
    });
    ReadMoreComponent.prototype.seeMore = function () {
        this.collapsed = false;
    };
    ReadMoreComponent.prototype.seeLess = function () {
        this.collapsed = true;
    };
    return ReadMoreComponent;
}());

/** find the summary part and return the header: */
function getSummary(separatorTag, input) {
    if (!input) {
        return '';
    }
    var pos = input.indexOf(separatorTag);
    if (pos < 0) {
        return input;
    }
    return input.substr(0, pos);
}
/** reomves summary header */
function removeSummary(separatorTag, input) {
    if (!input) {
        return '';
    }
    return input.replace(separatorTag, '');
}


/***/ }),

/***/ "./src/app/shared/shared.module.ts":
/*!*****************************************!*\
  !*** ./src/app/shared/shared.module.ts ***!
  \*****************************************/
/*! exports provided: sharedModules, declarables, SharedModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sharedModules", function() { return sharedModules; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "declarables", function() { return declarables; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharedModule", function() { return SharedModule; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _accordion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./accordion */ "./src/app/shared/accordion/index.ts");
/* harmony import */ var _address_address_form_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./address/address-form.component */ "./src/app/shared/address/address-form.component.ts");
/* harmony import */ var _address_address_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./address/address-modal.component */ "./src/app/shared/address/address-modal.component.ts");
/* harmony import */ var _amount_or_percent_value_amount_or_percent_value_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./amount-or-percent-value/amount-or-percent-value.component */ "./src/app/shared/amount-or-percent-value/amount-or-percent-value.component.ts");
/* harmony import */ var _contact_cust_support_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contact-cust-support.component */ "./src/app/shared/contact-cust-support.component.ts");
/* harmony import */ var _datepicker_datepicker_popup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./datepicker/datepicker-popup.component */ "./src/app/shared/datepicker/datepicker-popup.component.ts");
/* harmony import */ var _date_range_pay_period_date_range_pay_period_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./date-range-pay-period/date-range-pay-period.component */ "./src/app/shared/date-range-pay-period/date-range-pay-period.component.ts");
/* harmony import */ var _docs_documents_list_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./docs/documents-list.component */ "./src/app/shared/docs/documents-list.component.ts");
/* harmony import */ var _filter_filter_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./filter/filter.component */ "./src/app/shared/filter/filter.component.ts");
/* harmony import */ var _input_input_date_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./input/input-date.component */ "./src/app/shared/input/input-date.component.ts");
/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./input */ "./src/app/shared/input/index.ts");
/* harmony import */ var _input_input_text_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./input/input-text.component */ "./src/app/shared/input/input-text.component.ts");
/* harmony import */ var _placeholder_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./placeholder.component */ "./src/app/shared/placeholder.component.ts");
/* harmony import */ var _model_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./model.component */ "./src/app/shared/model.component.ts");
/* harmony import */ var _nav_bottom_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./nav-bottom.component */ "./src/app/shared/nav-bottom.component.ts");
/* harmony import */ var _radio_group__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./radio-group */ "./src/app/shared/radio-group/index.ts");
/* harmony import */ var _read_more_read_more_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./read-more/read-more.component */ "./src/app/shared/read-more/read-more.component.ts");
/* harmony import */ var _docs_view_docs_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./docs/view-docs.component */ "./src/app/shared/docs/view-docs.component.ts");
/* harmony import */ var angular2_text_mask__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! angular2-text-mask */ "./node_modules/angular2-text-mask/dist/angular2TextMask.js");
/* harmony import */ var angular2_text_mask__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(angular2_text_mask__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./validation/validate-property.directive */ "./src/app/shared/validation/validate-property.directive.ts");
/* harmony import */ var _pipes_address_pipe__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./pipes/address.pipe */ "./src/app/shared/pipes/address.pipe.ts");
/* harmony import */ var _pipes_company_kind_pipe__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./pipes/company-kind.pipe */ "./src/app/shared/pipes/company-kind.pipe.ts");
/* harmony import */ var _pipes_filter_removed_pipe__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./pipes/filter-removed.pipe */ "./src/app/shared/pipes/filter-removed.pipe.ts");
/* harmony import */ var _pipes_fullname_pipe__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./pipes/fullname.pipe */ "./src/app/shared/pipes/fullname.pipe.ts");
/* harmony import */ var _app_shared_pipes_household_filer_status_pipe__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @app/shared/pipes/household-filer-status.pipe */ "./src/app/shared/pipes/household-filer-status.pipe.ts");
/* harmony import */ var _pipes_phone_pipe__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./pipes/phone.pipe */ "./src/app/shared/pipes/phone.pipe.ts");
/* harmony import */ var _pipes_ssn_pipe__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./pipes/ssn.pipe */ "./src/app/shared/pipes/ssn.pipe.ts");
/* harmony import */ var _pipes_state_name_pipe__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./pipes/state-name.pipe */ "./src/app/shared/pipes/state-name.pipe.ts");
/* harmony import */ var _pipes_subject_exempt_pipe__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./pipes/subject-exempt.pipe */ "./src/app/shared/pipes/subject-exempt.pipe.ts");
/* harmony import */ var _pipes_yes_no_pipe__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./pipes/yes-no.pipe */ "./src/app/shared/pipes/yes-no.pipe.ts");




// Components & Directives




















// Pipes










var sharedModules = [
    _angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"],
    _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormsModule"],
    _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ReactiveFormsModule"],
    _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"],
    _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__["NgbModule"],
    angular2_text_mask__WEBPACK_IMPORTED_MODULE_22__["TextMaskModule"]
];
var declarables = [
    _accordion__WEBPACK_IMPORTED_MODULE_4__["AccordionComponent"],
    _address_address_form_component__WEBPACK_IMPORTED_MODULE_5__["AddressFormComponent"],
    _address_address_modal_component__WEBPACK_IMPORTED_MODULE_6__["AddressModalComponent"],
    _pipes_address_pipe__WEBPACK_IMPORTED_MODULE_24__["AddressPipe"],
    _amount_or_percent_value_amount_or_percent_value_component__WEBPACK_IMPORTED_MODULE_7__["AmountOrPercentValueComponent"],
    _input__WEBPACK_IMPORTED_MODULE_14__["ButtonGroupComponent"],
    _pipes_company_kind_pipe__WEBPACK_IMPORTED_MODULE_25__["CompanyKindPipe"],
    _contact_cust_support_component__WEBPACK_IMPORTED_MODULE_8__["ContactCustomerSupportComponent"],
    _input__WEBPACK_IMPORTED_MODULE_14__["ControlWrapComponent"],
    _datepicker_datepicker_popup_component__WEBPACK_IMPORTED_MODULE_9__["DatePickerPopupComponent"],
    _date_range_pay_period_date_range_pay_period_component__WEBPACK_IMPORTED_MODULE_10__["DateRangePayPeriodComponent"],
    _docs_documents_list_component__WEBPACK_IMPORTED_MODULE_11__["DocumentsListComponent"],
    _filter_filter_component__WEBPACK_IMPORTED_MODULE_12__["FilterComponent"],
    _pipes_filter_removed_pipe__WEBPACK_IMPORTED_MODULE_26__["FilterRemovedPipe"],
    _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_23__["FormDirective"],
    _pipes_fullname_pipe__WEBPACK_IMPORTED_MODULE_27__["FullNamePipe"],
    _app_shared_pipes_household_filer_status_pipe__WEBPACK_IMPORTED_MODULE_28__["HouseholdFilerStatusPipe"],
    _input_input_date_component__WEBPACK_IMPORTED_MODULE_13__["InputDateComponent"],
    _input__WEBPACK_IMPORTED_MODULE_14__["InputSelectComponent"],
    _input_input_text_component__WEBPACK_IMPORTED_MODULE_15__["InputTextComponent"],
    _input__WEBPACK_IMPORTED_MODULE_14__["MultiMaskDirective"],
    _model_component__WEBPACK_IMPORTED_MODULE_17__["ModelComponent"],
    _nav_bottom_component__WEBPACK_IMPORTED_MODULE_18__["NavBottomComponent"],
    _read_more_read_more_component__WEBPACK_IMPORTED_MODULE_20__["ReadMoreComponent"],
    _pipes_phone_pipe__WEBPACK_IMPORTED_MODULE_29__["PhonePipe"],
    _placeholder_component__WEBPACK_IMPORTED_MODULE_16__["PlaceholderComponent"],
    _radio_group__WEBPACK_IMPORTED_MODULE_19__["RadioButtonComponent"],
    _radio_group__WEBPACK_IMPORTED_MODULE_19__["RadioGroupComponent"],
    _radio_group__WEBPACK_IMPORTED_MODULE_19__["RadioGroupValueAccessorDirective"],
    _pipes_ssn_pipe__WEBPACK_IMPORTED_MODULE_30__["SsnPipe"],
    _pipes_state_name_pipe__WEBPACK_IMPORTED_MODULE_31__["StateNamePipe"],
    _pipes_subject_exempt_pipe__WEBPACK_IMPORTED_MODULE_32__["SubjectExemptBooleanPipe"],
    _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_23__["ValidatePropertyDirective"], _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_23__["AsyncValidatePropertyDirective"],
    _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_23__["ValidationStatusDirective"], _validation_validate_property_directive__WEBPACK_IMPORTED_MODULE_23__["ValidationFeedbackDirective"],
    _docs_view_docs_component__WEBPACK_IMPORTED_MODULE_21__["ViewDocsComponent"],
    _pipes_yes_no_pipe__WEBPACK_IMPORTED_MODULE_33__["YesNoBooleanPipe"]
];
/**
 * App modules and declarables (components, directives, pipes) consumed by other modules.
 * Other modules gain access to them by importing this.SharedModule.
 * It is eagerly loaded when the application starts.
 */
var SharedModule = /** @class */ (function () {
    function SharedModule() {
    }
    return SharedModule;
}());



/***/ }),

/***/ "./src/app/shared/validation/validate-property.directive.ts":
/*!******************************************************************!*\
  !*** ./src/app/shared/validation/validate-property.directive.ts ***!
  \******************************************************************/
/*! exports provided: FormDirective, ValidationStatusDirective, ValidationFeedbackDirective, ValidatePropertyDirective, AsyncValidatePropertyDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormDirective", function() { return FormDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidationStatusDirective", function() { return ValidationStatusDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidationFeedbackDirective", function() { return ValidationFeedbackDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidatePropertyDirective", function() { return ValidatePropertyDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncValidatePropertyDirective", function() { return AsyncValidatePropertyDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
/* harmony import */ var _model_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../model.component */ "./src/app/shared/model.component.ts");
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};








var FormDirective = /** @class */ (function () {
    function FormDirective(route) {
        var _this = this;
        this.route = route;
        this.changesSubject = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.controls = {};
        this.subs = new _core__WEBPACK_IMPORTED_MODULE_5__["SubSink"]();
        this.controls$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](this.controls);
        this.invalid$ = this.buildStatusObservable(function (controls) { return _this.isInvalid(controls); });
        this.valid$ = this.buildStatusObservable(function (controls) { return _this.isValid(controls); });
    }
    Object.defineProperty(FormDirective.prototype, "spForceFeedback", {
        get: function () {
            return this._spForceFeedback || this.forceValidationFeedback;
        },
        set: function (value) {
            this._spForceFeedback = true; // always set true, regardless of value (huh?)
        },
        enumerable: true,
        configurable: true
    });
    FormDirective.prototype.ngOnInit = function () {
        var _this = this;
        var changes$ = rxjs__WEBPACK_IMPORTED_MODULE_3__["combineLatest"].apply(void 0, [this.changesSubject.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["startWith"])({}))].concat(this.getParamsFromRoot()));
        this.change$ = changes$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function () { return _this.spForceFeedback; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["distinctUntilChanged"])());
        // although probably OK to skip unsubscribe, do so for safety
        this.subs.sink = changes$.subscribe(function (_a) {
            var changes = _a[0], params = _a.slice(1);
            var param = params.find(function (p) { return p.forceValidationFeedback !== undefined; });
            _this.forceValidationFeedback = param && param.forceValidationFeedback;
        });
    };
    FormDirective.prototype.ngOnChanges = function (changes) {
        this.changesSubject.next(changes);
    };
    FormDirective.prototype.ngOnDestroy = function () {
        this.subs.unsubscribe();
    };
    FormDirective.prototype.addControl = function (dir) {
        this.controls[dir.name] = dir.control;
        this.controls$.next(this.controls);
    };
    FormDirective.prototype.removeControl = function (dir) {
        if (dir && dir.name) {
            delete this.controls[dir.name];
        }
        this.controls$.next(this.controls);
    };
    Object.defineProperty(FormDirective.prototype, "valid", {
        get: function () {
            return this.isValid(this.controls);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormDirective.prototype, "invalid", {
        get: function () {
            return this.isInvalid(this.controls);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormDirective.prototype, "pending", {
        get: function () {
            var _this = this;
            return Object.keys(this.controls).some(function (name) { return _this.controls[name].pending; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormDirective.prototype, "errors", {
        get: function () {
            var _this = this;
            return Object.keys(this.controls)
                .map(function (name) { return _this.controls[name].errors || {}; })
                .reduce(function (prev, curr) {
                return __assign({}, prev, curr);
            }, {});
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormDirective.prototype, "pristine", {
        get: function () {
            var _this = this;
            return Object.keys(this.controls).every(function (name) { return _this.controls[name].pristine; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormDirective.prototype, "dirty", {
        get: function () {
            var _this = this;
            return Object.keys(this.controls).some(function (name) { return _this.controls[name].dirty; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormDirective.prototype, "touched", {
        get: function () {
            var _this = this;
            return Object.keys(this.controls).some(function (name) { return _this.controls[name].touched; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormDirective.prototype, "untouched", {
        get: function () {
            var _this = this;
            return Object.keys(this.controls).every(function (name) { return _this.controls[name].untouched; });
        },
        enumerable: true,
        configurable: true
    });
    FormDirective.prototype.getParamsFromRoot = function (route) {
        route = route || this.route;
        if (!route.parent) {
            return [route.params];
        }
        return [route.params].concat(this.getParamsFromRoot(route.parent));
    };
    FormDirective.prototype.isInvalid = function (controls) {
        return Object.keys(controls).some(function (name) { return controls[name].invalid && !controls[name].disabled; });
    };
    FormDirective.prototype.isValid = function (controls) {
        return Object.keys(controls).every(function (name) { return controls[name].valid || controls[name].disabled; });
    };
    FormDirective.prototype.buildStatusObservable = function (status) {
        return this.controls$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function (controls) {
            return rxjs__WEBPACK_IMPORTED_MODULE_3__["merge"].apply(void 0, Object.keys(controls).map(function (key) { return controls[key].statusChanges; })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function () { return status(controls); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["startWith"])(status(controls)));
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["observeOn"])(rxjs__WEBPACK_IMPORTED_MODULE_3__["asyncScheduler"]));
    };
    return FormDirective;
}());

var ValidationStatusDirective = /** @class */ (function () {
    function ValidationStatusDirective(el, renderer, form) {
        this.el = el;
        this.renderer = renderer;
        this.form = form;
        this.validClass = 'is-valid';
        this.invalidClass = 'is-invalid';
        this.subs = new _core__WEBPACK_IMPORTED_MODULE_5__["SubSink"]();
        this.touched$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
    }
    ValidationStatusDirective.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (changes['spValidationStatus']) {
            this.subs.unsubscribe();
            if (this.spValidationStatus) {
                var events = [
                    this.spValidationStatus.statusChanges
                ].concat((this.form ? [this.form.change$] : []), [
                    this.touched$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["distinctUntilChanged"])())
                ]);
                this.subs.sink = rxjs__WEBPACK_IMPORTED_MODULE_3__["merge"].apply(void 0, events).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["debounceTime"])(500)).subscribe(function () {
                    if (_this.showFeedback && (_this.spValidationStatus.valid || _this.spValidationStatus.pending)) {
                        _this.renderer.addClass(_this.el.nativeElement, _this.validClass);
                    }
                    else {
                        _this.renderer.removeClass(_this.el.nativeElement, _this.validClass);
                    }
                    if (_this.showFeedback && _this.spValidationStatus.invalid) {
                        _this.renderer.addClass(_this.el.nativeElement, _this.invalidClass);
                    }
                    else {
                        _this.renderer.removeClass(_this.el.nativeElement, _this.invalidClass);
                    }
                });
                // Monkey patch NgModel to communicate touched status to spValidationFeedback
                this.spValidationStatus._spTouched$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
            }
        }
    };
    ValidationStatusDirective.prototype.ngOnInit = function () {
        if (this.form) {
            this.form.addControl(this.spValidationStatus);
        }
    };
    ValidationStatusDirective.prototype.ngOnDestroy = function () {
        this.subs.unsubscribe();
        if (this.form && this.spValidationStatus) {
            this.form.removeControl(this.spValidationStatus);
        }
    };
    ValidationStatusDirective.prototype.blur = function () {
        this.touched$.next(true);
        if (this.spValidationStatus._spTouched$) {
            this.spValidationStatus._spTouched$.next(true);
        }
    };
    Object.defineProperty(ValidationStatusDirective.prototype, "showFeedback", {
        get: function () {
            return this.form && this.form.spForceFeedback || this.spValidationStatus.touched || this.spValidationStatus.dirty;
        },
        enumerable: true,
        configurable: true
    });
    return ValidationStatusDirective;
}());

var ValidationFeedbackDirective = /** @class */ (function () {
    function ValidationFeedbackDirective(el, renderer, form) {
        this.renderer = renderer;
        this.form = form;
        this.subs = new _core__WEBPACK_IMPORTED_MODULE_5__["SubSink"]();
        this.el = el.nativeElement;
    }
    ValidationFeedbackDirective.prototype.ngOnDestroy = function () {
        this.subs.unsubscribe();
    };
    ValidationFeedbackDirective.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (changes['spValidationFeedback']) {
            this.subs.unsubscribe();
            if (this.spValidationFeedback) {
                var events = [
                    this.spValidationFeedback.statusChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function (_) {
                        // Only emit PENDING (and display "Checking...) unless has been pending for more than 1/2 second
                        // The 1/2 second value was empirically determined. Don't know why less doesn't work.
                        return _this.spValidationFeedback.pending ? Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["timer"])(500).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function () { return _; })) : Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(_);
                    }))
                ].concat((this.form ? [this.form.change$] : []), (this.spValidationFeedback._spTouched$ ? [this.spValidationFeedback._spTouched$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["distinctUntilChanged"])())] : []));
                this.subs.sink = rxjs__WEBPACK_IMPORTED_MODULE_3__["merge"].apply(void 0, events).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["debounceTime"])(500)).subscribe(function () {
                    _this.renderer.removeClass(_this.el, 'feedback');
                    _this.renderer.removeClass(_this.el, 'valid-feedback');
                    _this.renderer.removeClass(_this.el, 'invalid-feedback');
                    _this.el.innerText = '';
                    if (!_this.showFeedback) {
                        return;
                    }
                    if (_this.spValidationFeedback.pending) {
                        _this.renderer.addClass(_this.el, 'valid-feedback');
                        _this.el.innerText = 'Checking...';
                    }
                    if (_this.spValidationFeedback.invalid) {
                        _this.renderer.addClass(_this.el, 'invalid-feedback');
                        _this.el.innerHTML = _this.getValidationFeedback().map(function (feedback) {
                            return "<div>" + feedback + "</div>";
                        }).join('\n');
                    }
                    if (_this.spValidationFeedback.pending || _this.spValidationFeedback.invalid) {
                        _this.renderer.addClass(_this.el, 'feedback');
                    }
                });
            }
        }
    };
    ValidationFeedbackDirective.prototype.getValidationFeedback = function () {
        var _this = this;
        if (!this.spValidationFeedback && !this.spValidationFeedback.invalid) {
            return [];
        }
        return Object.keys(this.spValidationFeedback.errors || {})
            .map(function (key) { return _this.spValidationFeedback.errors[key]; })
            .filter(function (error) { return error.getErrorMessage; })
            .map(function (error) { return error.getErrorMessage(_this.displayName); });
    };
    Object.defineProperty(ValidationFeedbackDirective.prototype, "showFeedback", {
        get: function () {
            return this.form && this.form.spForceFeedback || this.spValidationFeedback.touched || this.spValidationFeedback.dirty;
        },
        enumerable: true,
        configurable: true
    });
    return ValidationFeedbackDirective;
}());

var ValidatePropertyDirective = /** @class */ (function () {
    function ValidatePropertyDirective(validationService) {
        this.validationService = validationService;
        this.validationErrors = [];
        this.subs = new _core__WEBPACK_IMPORTED_MODULE_5__["SubSink"]();
    }
    ValidatePropertyDirective.prototype.ngOnDestroy = function () {
        this.subs.unsubscribe();
    };
    ValidatePropertyDirective.prototype.validate = function (control) {
        var _this = this;
        if (!this.model || !this.modelType || !this.propertyName) {
            return null;
        }
        var model = __assign({}, this.model);
        model[this.propertyName] = control.value;
        var modelAsString = JSON.stringify(model);
        if (this.lastModel !== modelAsString) {
            this.lastModel = modelAsString;
            var errors = this.validationService.validateModel(model, this.modelType, false, function (validator) {
                return !_this.group && !validator.group || _this.group && validator.group === _this.group;
            }) || [];
            this.validationErrors = errors.filter(function (error) { return error.context.propertyName === _this.propertyName; });
        }
        var validationErrors = this.validationErrors.reduce(function (prev, curr) {
            prev[curr.key] = curr;
            return prev;
        }, {});
        return !!this.validationErrors.length ? validationErrors : null;
    };
    ValidatePropertyDirective.prototype.registerOnValidatorChange = function (fn) {
        this.subs.unsubscribe();
        if (this.modelContext) {
            this.subs.sink = this.modelContext.modelChange.subscribe(fn);
        }
    };
    return ValidatePropertyDirective;
}());

var AsyncValidatePropertyDirective = /** @class */ (function () {
    function AsyncValidatePropertyDirective(validationService) {
        this.validationService = validationService;
        this.validationErrors = [];
        this.subs = new _core__WEBPACK_IMPORTED_MODULE_5__["SubSink"]();
    }
    AsyncValidatePropertyDirective.prototype.ngOnDestroy = function () {
        this.subs.unsubscribe();
    };
    AsyncValidatePropertyDirective.prototype.validate = function (control) {
        var _this = this;
        if (!this.model || !this.modelType || !this.propertyName) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(null);
        }
        var entityMetadata = this.validationService.validationMetadata.getModelConfig(this.modelType);
        if (!entityMetadata) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(null);
        }
        var hasAsyncValidators = entityMetadata.getAsyncProperties().some(function (property) {
            return property.propertyName === _this.propertyName &&
                property.validators.some(function (validator) { return !_this.group && !validator.group || _this.group && validator.group === _this.group; });
        });
        if (!hasAsyncValidators) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(null);
        }
        var toErrorMap = function () {
            return _this.validationErrors.reduce(function (prev, curr) {
                prev[curr.key] = curr;
                return prev;
            }, {});
        };
        if (this.lastPropertyValue !== control.value) {
            // debounce with timer
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["timer"])(500).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () {
                var model = __assign({}, _this.model);
                model[_this.propertyName] = control.value;
                var predicate = function (validator, property) {
                    return property && property.propertyName === _this.propertyName &&
                        (!_this.group && !validator.group || _this.group && validator.group === _this.group);
                };
                return _this.validationService.validateModel(model, _this.modelType, true, predicate).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (errors) {
                    _this.lastPropertyValue = control.value;
                    _this.validationErrors = (errors || []).filter(function (error) { return error && error.context.propertyName === _this.propertyName; });
                    return !!_this.validationErrors.length ? toErrorMap() : null;
                }));
            }));
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(!!this.validationErrors.length ? toErrorMap() : null);
    };
    AsyncValidatePropertyDirective.prototype.registerOnValidatorChange = function (fn) {
        this.subs.unsubscribe();
        if (this.modelContext) {
            this.subs.sink = this.modelContext.modelChange.subscribe(fn);
        }
    };
    return AsyncValidatePropertyDirective;
}());



/***/ }),

/***/ "./src/app/signup/signup.service.ts":
/*!******************************************!*\
  !*** ./src/app/signup/signup.service.ts ***!
  \******************************************/
/*! exports provided: newEcAccountUrl, newSpAccountUrl, subPrefix, SPAccountCreationError, ECAccountCreationError, SignupService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newEcAccountUrl", function() { return newEcAccountUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newSpAccountUrl", function() { return newSpAccountUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subPrefix", function() { return subPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SPAccountCreationError", function() { return SPAccountCreationError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ECAccountCreationError", function() { return ECAccountCreationError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SignupService", function() { return SignupService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core/utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @core/services/auth-services/auth.service */ "./src/app/core/services/auth-services/auth.service.ts");
/* harmony import */ var _core_services_busy_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @core/services/busy.service */ "./src/app/core/services/busy.service.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _core_services_auth_services_oidc_token_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @core/services/auth-services/oidc-token.service */ "./src/app/core/services/auth-services/oidc-token.service.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _core_well_known_routes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @core/well-known-routes */ "./src/app/core/well-known-routes.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _store_session_session_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../store/session/session.service */ "./src/app/store/session/session.service.ts");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};



















var newEcAccountUrl = _environment__WEBPACK_IMPORTED_MODULE_8__["environment"].apiRoot + '/account/user';
var newSpAccountUrl = _environment__WEBPACK_IMPORTED_MODULE_8__["environment"].spApiRoot + '/company/new';
var subPrefix = 'NewCustUser:';
var serviceName = 'SignupService';
var pardotVisitorHandler = _environment__WEBPACK_IMPORTED_MODULE_8__["environment"].pardotFormHandlerUri;
/**
 * SurePayroll Account creation error.
 * The user might be able to fix (e.g, username or password rejection)
 */
var SPAccountCreationError = /** @class */ (function () {
    function SPAccountCreationError(error, company, user, userMessage) {
        this.error = error;
        this.company = company;
        this.user = user;
        this.userMessage = userMessage;
    }
    return SPAccountCreationError;
}());

/**
 * ECommerce app Account creation error
 * User can't fix. Must fail.
 */
var ECAccountCreationError = /** @class */ (function () {
    function ECAccountCreationError(error, company, user, userMessage) {
        this.error = error;
        this.company = company;
        this.user = user;
        this.userMessage = userMessage;
    }
    return ECAccountCreationError;
}());

/*
 * Get unique BCL code (4 character customer identifier)
 */
var SignupService = /** @class */ (function () {
    function SignupService(authService, busyService, http, router, sessionService, tokenService) {
        this.authService = authService;
        this.busyService = busyService;
        this.http = http;
        this.router = router;
        this.sessionService = sessionService;
        this.tokenService = tokenService;
        authService.clearReroute('SignupService'); // no lingering routes
    }
    /** Clear the current user and current company data  */
    SignupService.prototype.clearCurrentAccount = function () {
        this.sessionService.clearCurrentAccount();
    };
    /** Is test account if email ends with '@test.com' or user's name like 'Test User' (e.g.'Test123 UserX') */
    SignupService.prototype.isTestAccount = function (vm) {
        return vm.email.endsWith('@test.com') || /^(e2e[-]?)?test.* user/i.test(vm.firstName + ' ' + vm.lastName);
    };
    SignupService.prototype.signin = function () {
        this.authService.logEvent('SignupService.signin() is calling AuthService.signin');
        this.authService.signin();
    };
    /** Signup */
    SignupService.prototype.signUp = function (vm) {
        var _this = this;
        this.tokenService.clearSignupToken(serviceName);
        var companyName = vm.isHousehold ? Object(_core_utils__WEBPACK_IMPORTED_MODULE_4__["getFullName"])(vm) : '';
        var company = __assign({}, new _model__WEBPACK_IMPORTED_MODULE_5__["Company"](), { id: this.sessionService.generateId(), bcl: null, isHousehold: vm.isHousehold, name: companyName, legalName: companyName, enrollmentStartDate: Object(_core_utils__WEBPACK_IMPORTED_MODULE_4__["dateToday"])(), status: this.isTestAccount(vm) ? _model__WEBPACK_IMPORTED_MODULE_5__["AccountStatus"].Test : _model__WEBPACK_IMPORTED_MODULE_5__["AccountStatus"].Open });
        var user = {
            id: this.sessionService.generateId(),
            companyId: company.id,
            oidcSub: null,
            firstName: vm.firstName,
            lastName: vm.lastName,
            email: vm.email,
            phone: vm.phone,
            username: vm.username,
            userRole: _model__WEBPACK_IMPORTED_MODULE_5__["UserRole"].Approver
        };
        var householdFilers = {
            id: this.sessionService.generateId(),
            companyId: company.id,
        };
        var stats = {
            id: this.sessionService.generateId(),
            companyId: company.id,
            aboutYouStartDate: new Date().toISOString()
        };
        var cmsInfo = {
            id: vm.id,
            pardotVisitorId: vm.pardotVisitorId,
            leadId: vm.leadId,
            partnerCode: vm.partnerCode,
            shortCode: vm.shortCode,
            promoCampaignId: vm.promoCampaignId,
            priceCampaignId: vm.priceCampaignId,
            parameters: vm.parameters
        };
        this.callFormHandler(vm);
        return this.busyService.busy$('Signing up', this.createEcAccount(company, user, vm.password, householdFilers, stats, cmsInfo, vm.partnerCode).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (cu) {
            return _this.tokenService.getAccessTokenFromIdentityServer(cu.user, vm.password, serviceName);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (tokenResponse) {
            if (tokenResponse) {
                // Can use the token response to sign-in.
                _this.signin();
                // Hack: give token processing some time before turning off spinner
                // TODO: explain why this hack is needed
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["timer"])(1000).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function () { return true; }));
            }
            else {
                // Tell the user to sign-in
                _this.router.navigate([_core_well_known_routes__WEBPACK_IMPORTED_MODULE_11__["WellKnownRoutes"].SignupSuccess]);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["of"])(true);
            }
        })));
    };
    SignupService.prototype.callFormHandler = function (vm) {
        var _this = this;
        if (pardotVisitorHandler) {
            var formData = new FormData();
            formData.append('pardot_visitor_id', vm.pardotVisitorId);
            formData.append('email', vm.email);
            formData.append('first_name', vm.firstName);
            formData.append('last_name', vm.lastName);
            formData.append('phone_number', vm.phone);
            formData.append('username', vm.username);
            formData.append('priceCampaignId', vm.priceCampaignId);
            formData.append('promoCampaignId', vm.promoCampaignId);
            formData.append('partner code', vm.partnerCode);
            formData.append('ShortCode', vm.shortCode);
            this.http.post(pardotVisitorHandler, formData)
                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (error) {
                _this.sessionService.logger.warn("Pardot formhandler error", error);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["empty"])();
            }));
        }
    };
    /** Create Company and User in ECommerce app, after creating them in SurePayroll. */
    SignupService.prototype.createEcAccount = function (company, user, password, householdFilers, stats, lead, partnerCode) {
        var _this = this;
        return this.createSpAccount(company, user, password, partnerCode).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (error) {
            var msg = _this.interpretSpNewAccountError(error);
            error = new SPAccountCreationError(error, company, user, msg);
            _this.sessionService.logger.error("createSpAccount error", error);
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["throwError"])(error);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (data) {
            company.bcl = data.bclCode;
            // Add label that Identity Server will prefix to the userKey
            user.oidcSub = subPrefix + data.userKey;
            company.companyType = company.isHousehold ? _model__WEBPACK_IMPORTED_MODULE_5__["CompanyType"].Household : null;
            return { company: company, user: user, householdFilers: householdFilers, stats: stats, lead: lead };
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["concatMap"])(function (payload) {
            return _this.http.post(newEcAccountUrl, payload).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function () { return payload; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (error) {
                // TODO: Analyze failure and try to recover?
                error = new ECAccountCreationError(error, company, user);
                _this.sessionService.logger.error("createEcAccount error", error);
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["throwError"])(error);
            }));
        }));
    };
    /** Creates the SurePayroll user and account */
    SignupService.prototype.createSpAccount = function (company, user, password, partnerCode) {
        var username = user.username, firstName = user.firstName, lastName = user.lastName, email = user.email, phone = user.phone;
        var cleanPhone = phone.replace(/[^0-9]/g, ''); // must strip all non-digits from phone
        var payload = {
            partnerCode: partnerCode || 'SURE',
            username: username,
            firstName: firstName,
            lastName: lastName,
            email: email,
            phone: cleanPhone,
            password: password
        };
        return this.http.post(newSpAccountUrl, payload);
    };
    /** Interpret the SP New Account error in a user friendly way. */
    SignupService.prototype.interpretSpNewAccountError = function (error) {
        this.sessionService.logger.error('SP New Account error', error);
        var status = error.status, body = error.body;
        var message;
        if (status && status > 400 && status < 500 && body && Array.isArray(body)) {
            // A known SP Account error. Prepare it for the user.
            message = body[0]; // error text is a string in the body array
            if (/already exists/.test(message)) {
                // rephrase this one
                message = 'Please try a different username';
            }
        }
        else {
            // Unrecognized message
            message = "Sorry but we had trouble creating your account.\n      Please try signing in again. If you are unable to sign in,\n       use the \"Chat\" bubble in the bottom right corner to contact support.";
        }
        return message;
    };
    SignupService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_12__["defineInjectable"]({ factory: function SignupService_Factory() { return new SignupService(_angular_core__WEBPACK_IMPORTED_MODULE_12__["inject"](_core_services_auth_services_auth_service__WEBPACK_IMPORTED_MODULE_6__["AuthService"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["inject"](_core_services_busy_service__WEBPACK_IMPORTED_MODULE_7__["BusyService"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["inject"](_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["inject"](_store_session_session_service__WEBPACK_IMPORTED_MODULE_13__["SessionService"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["inject"](_core_services_auth_services_oidc_token_service__WEBPACK_IMPORTED_MODULE_9__["OidcTokenService"])); }, token: SignupService, providedIn: "root" });
    return SignupService;
}());



/***/ }),

/***/ "./src/app/store/app-store.module.ts":
/*!*******************************************!*\
  !*** ./src/app/store/app-store.module.ts ***!
  \*******************************************/
/*! exports provided: metaReducers, AppStoreModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "metaReducers", function() { return metaReducers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppStoreModule", function() { return AppStoreModule; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");


var metaReducers = _environment__WEBPACK_IMPORTED_MODULE_1__["environment"].production ? [] : [];
var AppStoreModule = /** @class */ (function () {
    function AppStoreModule() {
    }
    return AppStoreModule;
}());



/***/ }),

/***/ "./src/app/store/entity/company-package.service.ts":
/*!*********************************************************!*\
  !*** ./src/app/store/entity/company-package.service.ts ***!
  \*********************************************************/
/*! exports provided: CompanyPackageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyPackageService", function() { return CompanyPackageService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_services_busy_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/services/busy.service */ "./src/app/core/services/busy.service.ts");
/* harmony import */ var _entity_dispatcher__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./entity-dispatcher */ "./src/app/store/entity/entity-dispatcher.ts");
/* harmony import */ var _entity_entity_metadata__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @entity/entity-metadata */ "./src/app/store/entity/entity-metadata.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _session_session_dispatcher__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @session/session-dispatcher */ "./src/app/store/session/session-dispatcher.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
















var CompanyPackageService = /** @class */ (function () {
    function CompanyPackageService(entityCacheDispatcher, busyService, http, logger, sessionDispatcher) {
        this.entityCacheDispatcher = entityCacheDispatcher;
        this.busyService = busyService;
        this.http = http;
        this.logger = logger;
        this.sessionDispatcher = sessionDispatcher;
    }
    /**
     * Loads the "CompanyPackage" data for the given company.
     * Toggles the companyPackageLoading$ flag.
     * @param companyId The id of the company whose data should be loaded.
     * @returns Terminating COLD observable of either the data collections if succeeded
     * or error observable if failed.
     * You must subscribe but you do not have to unsubscribe.
     */
    CompanyPackageService.prototype.loadCompanyPackageByCompanyId = function (companyId) {
        var _this = this;
        this.sessionDispatcher.setCompanyPackageLoading(true);
        this.sessionDispatcher.setCompanyPackageLoaded(false);
        var load$ = this.loadData(companyId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function () { return _this.sessionDispatcher.setCompanyPackageLoaded(true); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["finalize"])(function () {
            _this.sessionDispatcher.setCompanyPackageLoading(false);
        }));
        return this.busyService.busy$('Loading your account ...', load$);
    };
    CompanyPackageService.prototype.loadData = function (companyId) {
        var _this = this;
        var url = _environment__WEBPACK_IMPORTED_MODULE_6__["environment"].apiRoot + "/companypackage/" + companyId;
        return this.http.get(url).pipe(
        // Ensure this takes at least one tick so that company.loading$ goes true, then false.
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["observeOn"])(rxjs__WEBPACK_IMPORTED_MODULE_1__["asapScheduler"]), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (data) { return _this.scrubCompanyPackage(data); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (data) { return _this.entityCacheDispatcher.loadCompanyPackageSuccess(data); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (error) {
            _this.entityCacheDispatcher.loadCompanyPackageError(companyId, error);
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(error);
        }));
    };
    /**
     * Remove "bad" data from the Company Package
     * Ex: discard unrecognized entity types (shouldn't happen)
     * Ex: we have orphaned addresses, perhaps because during EE creation, the home addr made it but not the EE.
     * @param data Company Package data fresh from server
     */
    CompanyPackageService.prototype.scrubCompanyPackage = function (data) {
        var _this = this;
        // Discard unrecognized entity types.
        // Report them as an application error (must fix!) but allow app to continue.
        // This filter prevents ngrx-data from throwing a fatal error when asked to load an unrecognized entity type.
        data = Object.keys(data).reduce(function (acc, key) {
            if (!_entity_entity_metadata__WEBPACK_IMPORTED_MODULE_5__["entityMetadata"][Object(_utils__WEBPACK_IMPORTED_MODULE_9__["upperCamelCase"])(key)]) {
                _this.logger.error("Company Package error: ignoring unrecognized entity type \"" + key + "\"");
                delete data[key];
            }
            return data;
        }, data);
        // Hide orphaned addresses by locally setting isRemoved:false
        var ees = data['employee'] || [];
        (data['address'] || []).forEach(function (addr) {
            if (addr.isHome && null == ees.find(function (ee) { return ee.homeAddressId === addr.id; })) {
                // orphan: report and hide by setting isRemoved: true
                _this.logger.error("Orphaned home address: " + JSON.stringify(addr));
                addr.isRemoved = true;
            }
            return addr;
        });
        return data;
    };
    CompanyPackageService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_10__["defineInjectable"]({ factory: function CompanyPackageService_Factory() { return new CompanyPackageService(_angular_core__WEBPACK_IMPORTED_MODULE_10__["inject"](_entity_dispatcher__WEBPACK_IMPORTED_MODULE_4__["EntityDispatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["inject"](_core_services_busy_service__WEBPACK_IMPORTED_MODULE_3__["BusyService"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_7__["LoggerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["inject"](_session_session_dispatcher__WEBPACK_IMPORTED_MODULE_8__["SessionDispatcher"])); }, token: CompanyPackageService, providedIn: "root" });
    return CompanyPackageService;
}());



/***/ }),

/***/ "./src/app/store/entity/data-service-config.ts":
/*!*****************************************************!*\
  !*** ./src/app/store/entity/data-service-config.ts ***!
  \*****************************************************/
/*! exports provided: NoPluralizer, dataserviceConfigurationProviders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NoPluralizer", function() { return NoPluralizer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dataserviceConfigurationProviders", function() { return dataserviceConfigurationProviders; });
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/** Configure the ngrx-data DefaultDataService for the ECommerce app */
var dataServiceConfig = {
    root: _environment__WEBPACK_IMPORTED_MODULE_1__["environment"].apiRoot || 'api',
    timeout: 60000,
};
/** All save operations are optimistic by default */
var entityDispatcherDefaultOptions = {
    optimisticAdd: true,
    optimisticDelete: true,
    optimisticUpdate: true,
    optimisticUpsert: true,
    optimisticSaveEntities: true
};
/**
 * This app does not pluralize. The entity name is its own collection resource name.
 * Ex: the collection resource name for 'Company' is 'Company' (not 'Companies')
 */
var NoPluralizer = /** @class */ (function (_super) {
    __extends(NoPluralizer, _super);
    function NoPluralizer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NoPluralizer.prototype.pluralize = function (name) { return name; };
    return NoPluralizer;
}(ngrx_data__WEBPACK_IMPORTED_MODULE_0__["Pluralizer"]));

/** All ngModule data service configuration providers for this app */
var dataserviceConfigurationProviders = [
    {
        provide: ngrx_data__WEBPACK_IMPORTED_MODULE_0__["DefaultDataServiceConfig"],
        useValue: dataServiceConfig
    },
    {
        provide: ngrx_data__WEBPACK_IMPORTED_MODULE_0__["EntityDispatcherDefaultOptions"],
        useValue: entityDispatcherDefaultOptions
    },
    { provide: ngrx_data__WEBPACK_IMPORTED_MODULE_0__["Pluralizer"], useClass: NoPluralizer }
];


/***/ }),

/***/ "./src/app/store/entity/entity-dispatcher.ts":
/*!***************************************************!*\
  !*** ./src/app/store/entity/entity-dispatcher.ts ***!
  \***************************************************/
/*! exports provided: EntityDispatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EntityDispatcher", function() { return EntityDispatcher; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var _entity_entity_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @entity/entity-metadata */ "./src/app/store/entity/entity-metadata.ts");
/* harmony import */ var _session_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @session/actions */ "./src/app/store/session/actions.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");









/** Dispatch custom actions to the EntityCache and its collections */
var EntityDispatcher = /** @class */ (function () {
    function EntityDispatcher(entityActionFactory, logger, store) {
        this.entityActionFactory = entityActionFactory;
        this.logger = logger;
        this.store = store;
    }
    EntityDispatcher.prototype.addAccount = function (company, user) {
        var collections = { Company: [company], User: [user] };
        var action = new ngrx_data__WEBPACK_IMPORTED_MODULE_1__["LoadCollections"](collections, 'NewAccount');
        this.store.dispatch(action);
        return collections;
    };
    EntityDispatcher.prototype.clearCollections = function (collectionNames) {
        var action = new ngrx_data__WEBPACK_IMPORTED_MODULE_1__["ClearCollections"](collectionNames);
        this.store.dispatch(action);
    };
    EntityDispatcher.prototype.loadCompanyPackageSuccess = function (data) {
        data = Object(_entity_entity_metadata__WEBPACK_IMPORTED_MODULE_2__["companyCollectionDataMapper"])(data);
        var action = new ngrx_data__WEBPACK_IMPORTED_MODULE_1__["LoadCollections"](data, 'CompanyPackage');
        this.store.dispatch(action);
        return data;
    };
    EntityDispatcher.prototype.loadCompanyPackageError = function (currentCompanyId, error) {
        this.logger.error("Error loading the company package for " + currentCompanyId, error);
        var action = new _session_actions__WEBPACK_IMPORTED_MODULE_3__["LoadCompanyPackageError"]({ currentCompanyId: currentCompanyId, error: error, tag: 'CompanyPackage' });
        this.store.dispatch(action);
        return error;
    };
    EntityDispatcher.prototype.loadDocumentPackageSuccess = function (data) {
        data = Object(_entity_entity_metadata__WEBPACK_IMPORTED_MODULE_2__["companyCollectionDataMapper"])(data);
        var action = new ngrx_data__WEBPACK_IMPORTED_MODULE_1__["LoadCollections"](data, 'DocumentPackage');
        this.store.dispatch(action);
        return data;
    };
    EntityDispatcher.prototype.loadDocumentPackageError = function (currentCompanyId, error) {
        this.logger.error("Error loading the document package for " + currentCompanyId, error);
        var action = new _session_actions__WEBPACK_IMPORTED_MODULE_3__["LoadCompanyPackageError"]({ currentCompanyId: currentCompanyId, error: error, tag: 'DocumentPackage' });
        this.store.dispatch(action);
        return error;
    };
    /** Replace all users in cache with this one */
    EntityDispatcher.prototype.setUserInCache = function (user) {
        var action = this.entityActionFactory.create('User', ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityOp"].ADD_ALL, user ? [user] : []);
        this.store.dispatch(action);
    };
    EntityDispatcher.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_5__["defineInjectable"]({ factory: function EntityDispatcher_Factory() { return new EntityDispatcher(_angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityActionFactory"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_4__["LoggerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["Store"])); }, token: EntityDispatcher, providedIn: "root" });
    return EntityDispatcher;
}());



/***/ }),

/***/ "./src/app/store/entity/entity-metadata.ts":
/*!*************************************************!*\
  !*** ./src/app/store/entity/entity-metadata.ts ***!
  \*************************************************/
/*! exports provided: throwOnBadCollectionName, entityMetadata, entitiesWithoutCompanyId, nonCompanyEntity, isCompanyEntity, companyCollectionDataMapper, selectDeductionId, selectCode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwOnBadCollectionName", function() { return throwOnBadCollectionName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "entityMetadata", function() { return entityMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "entitiesWithoutCompanyId", function() { return entitiesWithoutCompanyId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nonCompanyEntity", function() { return nonCompanyEntity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCompanyEntity", function() { return isCompanyEntity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "companyCollectionDataMapper", function() { return companyCollectionDataMapper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectDeductionId", function() { return selectDeductionId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCode", function() { return selectCode; });
/* harmony import */ var _sort_comparers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sort-comparers */ "./src/app/store/entity/sort-comparers.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");



/** True if should throw when mapping collection whose name is bad. */
var throwOnBadCollectionName = !_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].production;
var entityMetadata = {
    Address: {},
    Ancillary: {},
    Company: { sortComparer: _sort_comparers__WEBPACK_IMPORTED_MODULE_0__["sortByName"] },
    CompanyDeduction: {},
    CompanyDeductionParameter: {},
    CompanyTax: {},
    CompanyAncillary: {},
    CompanyEarning: {},
    Deduction: { selectId: selectDeductionId },
    Document: {},
    Earning: { selectId: selectCode },
    Employee: { sortComparer: _sort_comparers__WEBPACK_IMPORTED_MODULE_0__["sortByFirstLast"] },
    EmployeeDeduction: {},
    EmployeeDeductionParameter: {},
    EmployeePaymentMethod: {},
    EmployeeTax: {},
    Envelope: {},
    EnvelopeSigner: {},
    HouseholdFilers: {},
    Stats: {},
    User: { sortComparer: _sort_comparers__WEBPACK_IMPORTED_MODULE_0__["sortByName"] },
    TaxRate: {},
};
/**
 * Entity types do NOT have a required companyId property.
 * All others are presumed to require a non-null companyId.
 */
var entitiesWithoutCompanyId = {
    Ancillary: true,
    Company: true,
    Deduction: true,
    Earning: true,
    TaxRate: true,
    User: true
};
/**
 * Entity types that do NOT belong to a specific company.
 * See CompanyEffects.
 */
var nonCompanyEntity = {
    Ancillary: true,
    Deduction: true,
    Earning: true,
    TaxRate: true
};
/** Does this entity type exist in metadata and belong to the set of Company-specific entity types */
function isCompanyEntity(entityName) {
    return entityMetadata[entityName] && !nonCompanyEntity[entityName];
}
/** This app does not pluralize. The entity name is the collection resource name */
/**
 * Translate table names to UpperCamelCase and keep only those that are company collections.
 * @param data Entity collection data from the server.
 * The server collection name may be lowerCamelCase.
 * This function accounts for that.
 */
function companyCollectionDataMapper(data, shouldThrow) {
    if (shouldThrow === void 0) { shouldThrow = throwOnBadCollectionName; }
    var keys = Object.keys(data);
    var result = keys.reduce(function (acc, key) {
        var entityName = Object(_utils__WEBPACK_IMPORTED_MODULE_1__["upperCamelCase"])(key);
        if (isCompanyEntity(entityName)) {
            acc[entityName] = data[key];
        }
        else {
            if (shouldThrow) {
                throw new Error("Unexpected data collection name \"" + key + "\"");
            }
        }
        return acc;
    }, {});
    return result;
}
/**
 * Return PK of Deduction metadata record
 */
function selectDeductionId(deduction) {
    return deduction.codeTypeId;
}
/**
 * Return PK of Entity metadata record
 */
function selectCode(earning) {
    return earning.code;
}


/***/ }),

/***/ "./src/app/store/entity/entity-selectors.ts":
/*!**************************************************!*\
  !*** ./src/app/store/entity/entity-selectors.ts ***!
  \**************************************************/
/*! exports provided: EntitySelectors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EntitySelectors", function() { return EntitySelectors; });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};




/**
 * Get base-line EntitySelectors$ for any SP Entity collection
 * A registry of Observable selectors$.
 */
var EntitySelectors = /** @class */ (function () {
    function EntitySelectors(entitySelectorsFactory, entitySelectors$Factory) {
        this.entitySelectorsFactory = entitySelectorsFactory;
        this.collectionSelectors = {};
        this.entityCache$ = entitySelectors$Factory.entityCache$;
        this.entityCacheActive$ = this.entityCache$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["map"])(toActiveCache), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["shareReplay"])(1));
        this.entityInfos$ = this.entityCache$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["map"])(toEntityInfos), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["shareReplay"])(1));
    }
    /**
     * Get the Observable selectors$ for the given collection.
     * If not found in the registry, create and register, before returning.
     */
    EntitySelectors.prototype.getSelectors$ = function (collectionName) {
        collectionName = (collectionName || '').trim();
        if (!collectionName) {
            throw new Error('Collection name is required');
        }
        var selectors$ = this.collectionSelectors[collectionName];
        if (!selectors$) {
            selectors$ = this.entitySelectorsFactory.create(collectionName).selectors$;
            this.collectionSelectors[collectionName] = selectors$;
        }
        return selectors$;
    };
    EntitySelectors.prototype.register = function (selectors$) {
        this.collectionSelectors[selectors$.entityName] = selectors$;
    };
    Object.defineProperty(EntitySelectors.prototype, "address", {
        // #region well-known selectors$
        /** Address EntitySelectors$ */
        get: function () {
            return this.getSelectors$('Address');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "company", {
        /** Company EntitySelectors$ */
        get: function () {
            return this.getSelectors$('Company');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "companyDeduction", {
        /** CompanyDeduction EntitySelectors$ */
        get: function () {
            return this.getSelectors$('CompanyDeduction');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "companyEarning", {
        /** CompanyEarning EntitySelectors$ */
        get: function () {
            return this.getSelectors$('CompanyEarning');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "deduction", {
        /** Deduction EntitySelectors$ */
        get: function () {
            return this.getSelectors$('Deduction');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "document", {
        /** Document EntitySelectors$ */
        get: function () {
            return this.getSelectors$('Document');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "earning", {
        /** Earning EntitySelectors$ */
        get: function () {
            return this.getSelectors$('Earning');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "employee", {
        /** Employee EntitySelectors$ */
        get: function () {
            return this.getSelectors$('Employee');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "employeeDeduction", {
        /** EmployeeDeduction EntitySelectors$ */
        get: function () {
            return this.getSelectors$('EmployeeDeduction');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "employeePaymentMethod", {
        /** EmployeePaymentMethod EntitySelectors$ */
        get: function () {
            return this.getSelectors$('EmployeePaymentMethod');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "envelope", {
        /** Envelope EntitySelectors$ */
        get: function () {
            return this.getSelectors$('Envelope');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "envelopeSigner", {
        /** EnvelopeSigner EntitySelectors$ */
        get: function () {
            return this.getSelectors$('EnvelopeSigner');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "householdFilers", {
        /** HouseholdFilers EntitySelectors$ */
        get: function () {
            return this.getSelectors$('HouseholdFilers');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "user", {
        /** User EntitySelectors$ */
        get: function () {
            return this.getSelectors$('User');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "companyTax", {
        /** CompanyTax EntitySelectors$ */
        get: function () {
            return this.getSelectors$('CompanyTax');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EntitySelectors.prototype, "employeeTax", {
        /** EmployeeTax EntitySelectors$ */
        get: function () {
            return this.getSelectors$('EmployeeTax');
        },
        enumerable: true,
        configurable: true
    });
    EntitySelectors.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function EntitySelectors_Factory() { return new EntitySelectors(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityCollectionServiceElementsFactory"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntitySelectors$Factory"])); }, token: EntitySelectors, providedIn: "root" });
    return EntitySelectors;
}());

// #region entity cache selector functions
// TODO: Only need these two helper variables until we do cascade delete
function employeeHelpers(entityCache) {
    var eeMap = entityCache['Employee'].entities;
    var removedEEs = {};
    var removedHomeAddrs = {};
    Object.keys(eeMap).forEach(function (eeId) {
        var ee = eeMap[eeId];
        if (ee.isRemoved) {
            removedEEs[eeId] = true;
            removedHomeAddrs[ee.homeAddressId] = true;
        }
    });
    return { removedEEs: removedEEs, removedHomeAddrs: removedHomeAddrs };
}
/** Re-create the EntityCache with just the active entities (none with isRemoved:true) */
function toActiveCache(entityCache) {
    var entityTypes = Object.keys(entityCache);
    if (entityTypes.length === 0) {
        return entityCache;
    }
    // TODO: Only need these two helper variables until we do cascade delete
    var _a = employeeHelpers(entityCache), removedEEs = _a.removedEEs, removedHomeAddrs = _a.removedHomeAddrs;
    var activeCache;
    entityTypes.forEach(function (entityType) {
        var entry = entityCache[entityType];
        var entities = entry.entities;
        var ids = entry.ids;
        var isMutated = false;
        Object.keys(entities).forEach(function (eid) {
            var entity = entities[eid];
            var removed = entity.isRemoved ? entity : null;
            // TODO: remove after cascade delete
            if (!removed) {
                if (entityType === 'EmployeePaymentMethod') {
                    removed = removedEEs[entity.employeeId] ? entity : null;
                }
                else if (entityType === 'Address') {
                    removed = removedHomeAddrs[eid] ? entity : null;
                }
            }
            if (removed) {
                if (!isMutated) {
                    isMutated = true;
                    ids = ids.slice();
                    entities = __assign({}, entities);
                }
                ids = ids.filter(function (id) { return id !== eid; });
                delete entities[eid];
            }
        });
        if (isMutated) {
            entry = __assign({}, entry, { ids: ids, entities: __assign({}, entities) });
            if (!activeCache) {
                activeCache = __assign({}, entityCache);
            }
            activeCache[entityType] = entry;
        }
    });
    return activeCache || entityCache;
}
// Note: `toEntityInfos` does not delegate to `toActiveCache` because this function is on a
// reasonably hot code path in validation and this different implementation
// should perform better as it has less to do than `toActiveCache`.
/** Flatten EntityCache to array of EntityInfos of active (non-removed) entities */
function toEntityInfos(entityCache) {
    var entityTypes = Object.keys(entityCache);
    if (entityTypes.length === 0) {
        return [];
    }
    // TODO: Only need these two helper variables until we do cascade delete
    var _a = employeeHelpers(entityCache), removedEEs = _a.removedEEs, removedHomeAddrs = _a.removedHomeAddrs;
    return entityTypes.reduce(function (acc, entityType) {
        var entityMap = entityCache[entityType].entities;
        var entityInfos = Object.keys(entityMap)
            .map(function (id) { return ({ entityType: entityType, entity: entityMap[id] }); })
            .filter(function (e) { return !e.entity.isRemoved; });
        // TODO: Remove these filters once we "cascade delete"
        if (entityType === 'Address') {
            entityInfos = entityInfos.filter(function (ei) { return !removedHomeAddrs[ei.entity.id]; });
        }
        else if (entityType === 'EmployeePaymentMethod') {
            entityInfos = entityInfos.filter(function (ei) { return !removedEEs[ei.entity.employeeId]; });
        }
        return acc.concat(entityInfos);
    }, []);
}


/***/ }),

/***/ "./src/app/store/entity/entity-services/address.service.ts":
/*!*****************************************************************!*\
  !*** ./src/app/store/entity/entity-services/address.service.ts ***!
  \*****************************************************************/
/*! exports provided: AddressService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddressService", function() { return AddressService; });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






/**
 * Aggregates services for dealing with addresses.
 * Available in and collaborates with AppEntityServices
 */
var AddressService = /** @class */ (function (_super) {
    __extends(AddressService, _super);
    function AddressService(helper) {
        var _this = _super.call(this, 'Address', helper) || this;
        _this.helper = helper;
        /**
         * Observable of the Company live work addresses (cloned as Address class instances and sorted)
         */
        _this.workAddresses$ = _this.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["map"])(function (addresses) {
            return addresses
                .filter(function (addr) { return !addr.isRemoved && !addr.isHome; })
                .map(function (addr) { return _model__WEBPACK_IMPORTED_MODULE_1__["Address"].create(addr); })
                .sort(function (l, r) { return l.toString().localeCompare(r.toString()); });
        }));
        return _this;
    }
    AddressService.prototype.add = function (address, options) {
        this.blockBadAddress(address);
        return _super.prototype.add.call(this, Object.assign({}, address), options);
    };
    AddressService.prototype.blockBadAddress = function (address) {
        if (address == null) {
            throw new Error('Address to save is undefined');
        }
        if (address.isRemoved && (address.isHome || address.isMain)) {
            throw new Error('Cannot remove (delete) the main Company address or a home address');
        }
    };
    AddressService.prototype.update = function (address, options) {
        this.blockBadAddress(address);
        return _super.prototype.update.call(this, Object.assign({}, address), options);
    };
    AddressService.prototype.upsert = function (address, options) {
        this.blockBadAddress(address);
        return _super.prototype.upsert.call(this, Object.assign({}, address), options);
    };
    AddressService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function AddressService_Factory() { return new AddressService(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__["CompanyEntityHelperService"])); }, token: AddressService, providedIn: "root" });
    return AddressService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_3__["CurrentCompanyEntityCollectionService"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/ancillary.service.ts":
/*!*******************************************************************!*\
  !*** ./src/app/store/entity/entity-services/ancillary.service.ts ***!
  \*******************************************************************/
/*! exports provided: AncillaryService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AncillaryService", function() { return AncillaryService; });
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var AncillaryService = /** @class */ (function (_super) {
    __extends(AncillaryService, _super);
    function AncillaryService(helper) {
        var _this = _super.call(this, 'Ancillary', helper.collectionServiceElementsFactory) || this;
        _this.helper = helper;
        return _this;
    }
    AncillaryService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function AncillaryService_Factory() { return new AncillaryService(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_1__["CompanyEntityHelperService"])); }, token: AncillaryService, providedIn: "root" });
    return AncillaryService;
}(ngrx_data__WEBPACK_IMPORTED_MODULE_0__["EntityCollectionServiceBase"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/company-ancillary.service.ts":
/*!***************************************************************************!*\
  !*** ./src/app/store/entity/entity-services/company-ancillary.service.ts ***!
  \***************************************************************************/
/*! exports provided: CompanyAncillaryService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyAncillaryService", function() { return CompanyAncillaryService; });
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var CompanyAncillaryService = /** @class */ (function (_super) {
    __extends(CompanyAncillaryService, _super);
    function CompanyAncillaryService(helper) {
        var _this = _super.call(this, 'CompanyAncillary', helper.collectionServiceElementsFactory) || this;
        _this.helper = helper;
        return _this;
    }
    /**
     * Dispatch action to save multiple entity changes to remote storage.
     * @param changes Either the entities to save, as an array of {ChangeSetItem}, or
     * a ChangeSet that holds such changes.
     * @param url The server url which receives the save request
     * @param [options] options such as tag, correlationId, isOptimistic, and mergeStrategy.
     * These values are defaulted if not supplied.
     * @returns A terminating Observable<ChangeSet> with data returned from the server
     * after server reports successful save OR the save error.
     */
    CompanyAncillaryService.prototype.saveEntities = function (changes, url, options) {
        return this.helper.entityCacheDispatcher.saveEntities(changes, url, options);
    };
    CompanyAncillaryService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function CompanyAncillaryService_Factory() { return new CompanyAncillaryService(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_1__["CompanyEntityHelperService"])); }, token: CompanyAncillaryService, providedIn: "root" });
    return CompanyAncillaryService;
}(ngrx_data__WEBPACK_IMPORTED_MODULE_0__["EntityCollectionServiceBase"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/company-deduction.service.ts":
/*!***************************************************************************!*\
  !*** ./src/app/store/entity/entity-services/company-deduction.service.ts ***!
  \***************************************************************************/
/*! exports provided: CompanyDeductionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyDeductionService", function() { return CompanyDeductionService; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var ENTITY_COMPANY_DEDUCTION = 'CompanyDeduction';
var CompanyDeductionService = /** @class */ (function (_super) {
    __extends(CompanyDeductionService, _super);
    function CompanyDeductionService(helper) {
        var _this = _super.call(this, ENTITY_COMPANY_DEDUCTION, helper) || this;
        _this.helper = helper;
        /**
         * Company Deductions
         */
        _this.companyDeductions$ = _this.entities$;
        return _this;
    }
    /**
     * Create new CompanyDeduction from a deduction master.
     * The id is empty because will save with upsert.
     */
    CompanyDeductionService.prototype.createFromDeduction = function (deduction) {
        if (!deduction) {
            throw new Error('deduction is null');
        }
        return this.create(new _model__WEBPACK_IMPORTED_MODULE_1__["CompanyDeduction"](deduction));
    };
    // TODO: Test with real services
    /**
     * Multi-entity save of CompanyDeduction with adds, updates and deletes
     * @param deductions Array of deductions to add, update, or delete.
     * Deletes have isRemoved: true
     * Updates are non-deletes with an id
     * Adds are non-deletes without an id; will generate that id here.
     * @returns Terminating observable of ChangeSet that emits when server responds
     */
    CompanyDeductionService.prototype.save = function (deductions) {
        var _this = this;
        var deletes = deductions.filter(function (d) { return d.isRemoved === true && d.id; });
        // Ignore deductions with isRemoved:true but no id because they don't exist on the server
        // Cannot use ChangeSetOp.Upsert because server does not support it.
        // Separate non-deletes into updates (have id) and adds (no id)
        var updates = deductions.filter(function (d) { return d.isRemoved !== true && d.id; });
        // Identity new deductions by missing id and generate their ids before adding
        var adds = deductions
            .filter(function (d) { return d.isRemoved !== true && !d.id; })
            .map(function (d) {
            d.id = _this.helper.generateId();
            return d;
        });
        var changes = [
            _utils__WEBPACK_IMPORTED_MODULE_0__["changeItemFactory"].add(ENTITY_COMPANY_DEDUCTION, adds),
            _utils__WEBPACK_IMPORTED_MODULE_0__["changeItemFactory"].update(ENTITY_COMPANY_DEDUCTION, updates),
            _utils__WEBPACK_IMPORTED_MODULE_0__["changeItemFactory"].delete(ENTITY_COMPANY_DEDUCTION, deletes)
        ];
        var changeSet = { changes: changes };
        return this.saveEntities(changeSet, '/save/company-deduction');
    };
    CompanyDeductionService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function CompanyDeductionService_Factory() { return new CompanyDeductionService(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__["CompanyEntityHelperService"])); }, token: CompanyDeductionService, providedIn: "root" });
    return CompanyDeductionService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_3__["CurrentCompanyEntityCollectionService"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/company-earning.service.ts":
/*!*************************************************************************!*\
  !*** ./src/app/store/entity/entity-services/company-earning.service.ts ***!
  \*************************************************************************/
/*! exports provided: CompanyEarningService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyEarningService", function() { return CompanyEarningService; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







var ENTITY_COMPANY_EARNING = 'CompanyEarning';
var CompanyEarningService = /** @class */ (function (_super) {
    __extends(CompanyEarningService, _super);
    function CompanyEarningService(helper) {
        var _this = _super.call(this, ENTITY_COMPANY_EARNING, helper) || this;
        _this.helper = helper;
        /**
         * Company Earnings
         */
        _this.companyEarnings$ = _this.entities$;
        return _this;
    }
    /**
     * Create a new CompanyEarning from a earning master.
     * The id is empty because will save with upsert.
     */
    CompanyEarningService.prototype.createFromEarning = function (earning) {
        if (!earning) {
            throw new Error('earning is null');
        }
        return this.create(new _model__WEBPACK_IMPORTED_MODULE_1__["CompanyEarning"](earning));
    };
    /**
     * Multi-entity save of CompanyEarning with adds, updates and deletes
     * @param companyEarning Array of earnings to add, update, or delete.
     * Updates are items with an id, to delete set isRemoved to true
     * Adds are items without an id; will generate that id here.
     * @returns Terminating observable of ChangeSet that emits when server responds
     */
    CompanyEarningService.prototype.save = function (earnings) {
        var _this = this;
        // Cannot use ChangeSetOp.Upsert because server does not support it.
        // Separate non-deletes into updates (have id) and adds (no id)
        var updates = earnings.filter(function (d) { return d.id; });
        // Identity new earnings by missing id and generate their ids before adding
        var adds = earnings
            .filter(function (d) { return d.isRemoved !== true && !d.id; })
            .map(function (d) {
            d.id = _this.helper.generateId();
            return d;
        });
        var changes = [
            _utils__WEBPACK_IMPORTED_MODULE_0__["changeItemFactory"].add(ENTITY_COMPANY_EARNING, adds),
            _utils__WEBPACK_IMPORTED_MODULE_0__["changeItemFactory"].update(ENTITY_COMPANY_EARNING, updates)
        ];
        var changeSet = { changes: changes };
        return this.saveEntities(changeSet, _environment__WEBPACK_IMPORTED_MODULE_4__["environment"].apiRoot + '/save/companyearning');
    };
    CompanyEarningService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_5__["defineInjectable"]({ factory: function CompanyEarningService_Factory() { return new CompanyEarningService(_angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__["CompanyEntityHelperService"])); }, token: CompanyEarningService, providedIn: "root" });
    return CompanyEarningService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_3__["CurrentCompanyEntityCollectionService"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/company-entity-helper.service.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/store/entity/entity-services/company-entity-helper.service.ts ***!
  \*******************************************************************************/
/*! exports provided: CompanyEntityHelperService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyEntityHelperService", function() { return CompanyEntityHelperService; });
/* harmony import */ var _entity_helper_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entity-helper.service */ "./src/app/store/entity/entity-services/entity-helper.service.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _session_session_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../session/session.service */ "./src/app/store/session/session.service.ts");





/**
 * Facade around methods and properties frequently needed when working with entities
 */
var CompanyEntityHelperService = /** @class */ (function () {
    function CompanyEntityHelperService(entityHelper, sessionService) {
        var _this = this;
        this.entityHelper = entityHelper;
        this.sessionService = sessionService;
        this.sessionService.currentCompanyId$.subscribe(function (id) { return _this.currentCompanyId = id; });
    }
    Object.defineProperty(CompanyEntityHelperService.prototype, "collectionServiceElementsFactory", {
        get: function () {
            return this.entityHelper.collectionServiceElementsFactory;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompanyEntityHelperService.prototype, "currentCompany$", {
        get: function () {
            return this.sessionService.currentCompany$;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompanyEntityHelperService.prototype, "currentCompanyId$", {
        get: function () {
            return this.sessionService.currentCompanyId$;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompanyEntityHelperService.prototype, "currentUserId$", {
        /**
         * Observable of the id of the current user for this account
         * Not necessarily the authenticated user who could be an admin acting on the current user's behalf.
         */
        get: function () {
            return this.sessionService.currentUserId$;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompanyEntityHelperService.prototype, "currentUser$", {
        /**
         * Observable of the current user for this account.
         * Not necessarily the authenticated user who could be an admin acting on the current user's behalf.
         */
        get: function () {
            return this.sessionService.currentUser$;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompanyEntityHelperService.prototype, "entityCacheDispatcher", {
        get: function () {
            return this.entityHelper.entityCacheDispatcher;
        },
        enumerable: true,
        configurable: true
    });
    CompanyEntityHelperService.prototype.generateId = function () {
        return this.entityHelper.generateId();
    };
    Object.defineProperty(CompanyEntityHelperService.prototype, "logger", {
        get: function () {
            return this.entityHelper.logger;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompanyEntityHelperService.prototype, "readOnly$", {
        /** emits true when the current company is "read-only" and saves are disallowed. */
        get: function () {
            return this.sessionService.readOnly$;
        },
        enumerable: true,
        configurable: true
    });
    CompanyEntityHelperService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function CompanyEntityHelperService_Factory() { return new CompanyEntityHelperService(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](_entity_helper_service__WEBPACK_IMPORTED_MODULE_0__["EntityHelperService"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](_session_session_service__WEBPACK_IMPORTED_MODULE_3__["SessionService"])); }, token: CompanyEntityHelperService, providedIn: "root" });
    return CompanyEntityHelperService;
}());



/***/ }),

/***/ "./src/app/store/entity/entity-services/company-tax.service.ts":
/*!*********************************************************************!*\
  !*** ./src/app/store/entity/entity-services/company-tax.service.ts ***!
  \*********************************************************************/
/*! exports provided: CompanyTaxService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyTaxService", function() { return CompanyTaxService; });
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var CompanyTaxService = /** @class */ (function (_super) {
    __extends(CompanyTaxService, _super);
    function CompanyTaxService(helper) {
        var _this = _super.call(this, 'CompanyTax', helper) || this;
        _this.helper = helper;
        _this.federalTaxes$ = _this.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (taxes) { return taxes.filter(function (e) { return e.taxTypeCode === _model__WEBPACK_IMPORTED_MODULE_0__["TaxTypeCode"].Federal; }); }));
        _this.stateTaxes$ = _this.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (taxes) { return taxes.filter(function (e) { return e.taxTypeCode === _model__WEBPACK_IMPORTED_MODULE_0__["TaxTypeCode"].State; }); }));
        _this.stateAndLocalTaxes$ = _this.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (taxes) { return taxes.filter(function (e) { return e.taxTypeCode !== _model__WEBPACK_IMPORTED_MODULE_0__["TaxTypeCode"].Federal; }); }));
        return _this;
    }
    CompanyTaxService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function CompanyTaxService_Factory() { return new CompanyTaxService(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_1__["CompanyEntityHelperService"])); }, token: CompanyTaxService, providedIn: "root" });
    return CompanyTaxService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_2__["CurrentCompanyEntityCollectionService"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/company.service.ts":
/*!*****************************************************************!*\
  !*** ./src/app/store/entity/entity-services/company.service.ts ***!
  \*****************************************************************/
/*! exports provided: CompanyService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompanyService", function() { return CompanyService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _session_session_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../session/session.service */ "./src/app/store/session/session.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();











/**
 * Service to manage the Company entity collection
 */
var CompanyService = /** @class */ (function (_super) {
    __extends(CompanyService, _super);
    function CompanyService(http, helper, sessionService) {
        var _this = _super.call(this, 'Company', helper.collectionServiceElementsFactory) || this;
        _this.http = http;
        _this.helper = helper;
        _this.sessionService = sessionService;
        /** emits true when the current company is "read-only" and saves are disallowed. */
        _this.readOnly$ = _this.helper.readOnly$;
        return _this;
    }
    Object.defineProperty(CompanyService.prototype, "currentCompany$", {
        get: function () {
            return this.sessionService.currentCompany$;
        },
        enumerable: true,
        configurable: true
    });
    CompanyService.prototype.add = function (newCompany) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["throwError"])('Do not call add. Create a company through sign up');
    };
    /**
     * Detect if the legal name changed after the FEIN and name were verified.
     * If it was, un-verify the FEIN.
     */
    CompanyService.prototype.detectLegalNameChangeAfterVerify = function (company) {
        // If the fedTaxVm thinks the FEIN is verified but ...
        if (company && company.feinStatus === _model__WEBPACK_IMPORTED_MODULE_4__["FeinStatus"].Verified &&
            // there is no verified legal name or the verified legal name is not the Company legal name
            (!company.legalNameVerified ||
                company.legalNameVerified !== company.legalName)) {
            // then the FEIN is no longer verified
            this.unverifyFein(company);
        }
    };
    /**
     * Dispatch action to save multiple entity changes to remote storage.
     * @param changes Either the entities to save, as an array of {ChangeSetItem}, or
     * a ChangeSet that holds such changes.
     * @param url The server url which receives the save request
     * @param [options] options such as tag, correlationId, isOptimistic, and mergeStrategy.
     * These values are defaulted if not supplied.
     * @returns A terminating Observable<ChangeSet> with data returned from the server
     * after server reports successful save OR the save error.
     */
    CompanyService.prototype.saveEntities = function (changes, url, options) {
        return this.helper.entityCacheDispatcher.saveEntities(changes, url, options);
    };
    /** Set id and companyId on the entity if missing */
    CompanyService.prototype.setIds = function (entity) {
        // if entity lacks an id, generate one.
        if (!entity.id) {
            entity.id = this.helper.generateId();
        }
        // if entity lacks companyId, use the most recent snapshot currentCompanyId value
        if (!entity.companyId) {
            entity.companyId = this.helper.currentCompanyId;
        }
    };
    /**
     * Set the FEIN information in the company to the unverified state
     */
    CompanyService.prototype.unverifyFein = function (company) {
        company.feinStatus = _model__WEBPACK_IMPORTED_MODULE_4__["FeinStatus"].Unverified;
        company.legalNameVerified = null;
        company.legalNameVerificationSkipReason = null;
    };
    CompanyService.prototype.createCompanyEvent = function (eventType) {
        var url = _environment__WEBPACK_IMPORTED_MODULE_5__["environment"].apiRoot + "/company/event";
        var body = { type: eventType };
        return this.http.post(url, body);
    };
    CompanyService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_7__["defineInjectable"]({ factory: function CompanyService_Factory() { return new CompanyService(_angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_3__["CompanyEntityHelperService"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"](_session_session_service__WEBPACK_IMPORTED_MODULE_8__["SessionService"])); }, token: CompanyService, providedIn: "root" });
    return CompanyService;
}(ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityCollectionServiceBase"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts":
/*!*******************************************************************************************!*\
  !*** ./src/app/store/entity/entity-services/current-company-entity-collection-service.ts ***!
  \*******************************************************************************************/
/*! exports provided: CurrentCompanyEntityCollectionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CurrentCompanyEntityCollectionService", function() { return CurrentCompanyEntityCollectionService; });
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _entity_metadata__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../entity-metadata */ "./src/app/store/entity/entity-metadata.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/**
 * A default EntityCollectionService whose entities$ are filtered to include only
 * those belonging to the current company
 */
var CurrentCompanyEntityCollectionService = /** @class */ (function (_super) {
    __extends(CurrentCompanyEntityCollectionService, _super);
    function CurrentCompanyEntityCollectionService(entityName, helper) {
        var _this = _super.call(this, entityName, helper.collectionServiceElementsFactory) || this;
        _this.entityName = entityName;
        _this.helper = helper;
        _this.subs = new _core__WEBPACK_IMPORTED_MODULE_4__["SubSink"]();
        _this.readOnly$ = _this.helper.readOnly$;
        if (_entity_metadata__WEBPACK_IMPORTED_MODULE_3__["entitiesWithoutCompanyId"][entityName]) {
            throw new Error("Bad collection: '" + entityName + "' is not a company-owned entity type");
        }
        _this.detectMixedCompany();
        return _this;
    }
    CurrentCompanyEntityCollectionService.prototype.ngOnDestroy = function () {
        this.subs.unsubscribe();
    };
    // Paranoia: trip wire to detect if any entity changes of THIS type belong to a different company
    CurrentCompanyEntityCollectionService.prototype.detectMixedCompany = function () {
        var _this = this;
        // Service never dies but, as long as we're paranoid, we handle unsubscribe if the service does die.
        this.subs.sink = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.helper.currentCompanyId$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (id) { return !!id; })), this.selectors$.entityMap$).subscribe(function (_a) {
            var companyId = _a[0], entityMap = _a[1];
            Object.keys(entityMap).forEach(function (key) {
                if (entityMap[key].companyId !== companyId) {
                    throw new Error("\"" + _this.entityName + "\" with id=" + key + " does not belong to the current company, " + companyId + ".");
                }
            });
        });
    };
    /**
     * Create a new entity as a clean clone of source entity data.
     * Set its `id` if missing and createId: true.
     * Set its `companyId` if missing.
     * @param source source entity data.
     * @param createId True if should generate id when missing.
     * False by default because might save with upsert which only recognizes new deductions when they lack an id.
     */
    CurrentCompanyEntityCollectionService.prototype.create = function (source, createId) {
        if (createId === void 0) { createId = false; }
        // strip the prototype off before saving
        source = Object.assign({}, source);
        // if entity lacks an id and should have one, generate it.
        if (!source.id && createId) {
            source.id = this.helper.generateId();
        }
        // if entity lacks companyId, use the most recent snapshot currentCompanyId value
        if (!source.companyId) {
            source.companyId = this.helper.currentCompanyId;
        }
        return source;
    };
    /** Create entity from entity data and save it. Generates id if missing. */
    CurrentCompanyEntityCollectionService.prototype.add = function (entity, options) {
        return _super.prototype.add.call(this, this.create(entity, true), options); // generates the id if missing
    };
    /**
     * Dispatch action to save multiple entity changes to remote storage.
     * @param changeSet Either the entities to save, as an array of {ChangeSetItem}, or
     * a ChangeSet that holds such changes.
     * @param url The server url which receives the save request
     * @param [options] options such as tag, correlationId, isOptimistic, and mergeStrategy.
     * These values are defaulted if not supplied.
     * @returns A terminating Observable<ChangeSet> with data returned from the server
     * after server reports successful save OR the save error.
     */
    CurrentCompanyEntityCollectionService.prototype.saveEntities = function (changeSet, url, options) {
        if (changeSet.changes.some(function (change) { return change.op === ngrx_data__WEBPACK_IMPORTED_MODULE_0__["ChangeSetOperation"].Upsert; })) {
            throw new Error('ECommerce cannot multi-save an upsert operation because client must create id');
        }
        return this.helper.entityCacheDispatcher.saveEntities(changeSet, url, options);
    };
    CurrentCompanyEntityCollectionService.prototype.update = function (entity, options) {
        if (!entity.id) {
            throw new Error("'" + this.entityName + "' is missing its id");
        }
        if (!entity.companyId || entity.companyId !== this.helper.currentCompanyId) {
            throw new Error("'" + this.entityName + "' is missing its companyId or does not belong to the current company");
        }
        // strip the prototype off before saving
        return _super.prototype.update.call(this, Object.assign({}, entity), options);
    };
    /**
     * Save new or updated entity to server.
     * @param entity entity of type T to save to the server, either with add or update.
     * @param [options] options that influence save and merge behavior
     * @returns Observables of the save operation for that entity.
     */
    CurrentCompanyEntityCollectionService.prototype.upsert = function (entity, options) {
        return entity.id ? this.update(entity, options) : this.add(entity, options);
    };
    return CurrentCompanyEntityCollectionService;
}(ngrx_data__WEBPACK_IMPORTED_MODULE_0__["EntityCollectionServiceBase"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/deduction.service.ts":
/*!*******************************************************************!*\
  !*** ./src/app/store/entity/entity-services/deduction.service.ts ***!
  \*******************************************************************/
/*! exports provided: DeductionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeductionService", function() { return DeductionService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _entity_helper_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./entity-helper.service */ "./src/app/store/entity/entity-services/entity-helper.service.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @core */ "./src/app/core/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/services/logger.service */ "./src/app/core/services/logger.service.ts");










var deductionsUrl = _environment__WEBPACK_IMPORTED_MODULE_4__["environment"].apiRoot + '/deductions';
var DeductionService = /** @class */ (function () {
    function DeductionService(entityHelper, http, logger) {
        var _this = this;
        this.http = http;
        this.logger = logger;
        var elements = entityHelper.collectionServiceElementsFactory.create('Deduction');
        this.dispatcher = elements.dispatcher;
        this.loaded$ = elements.selectors$.loaded$;
        this.deductions$ = elements.selectors$.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["withLatestFrom"])(this.loaded$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["switchMap"])(function (_a) {
            var deductions = _a[0], loaded = _a[1];
            return loaded
                ? Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(deductions)
                : _this.http.get(deductionsUrl).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (newDeductions) {
                    _this.dispatcher.addAllToCache(newDeductions);
                    return newDeductions;
                }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (error) {
                    // Swallow error and return previous deductions (if any)
                    _this.logger.error('Deductions service failed to return deductions', error);
                    _this.dispatcher.setLoaded(true); // pretend it loaded successfully
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(deductions);
                }));
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
    }
    /**
     * Clear the Deductions master metadata in cache. Next `getDeductions()` will refresh it.
     */
    DeductionService.prototype.clearCache = function () {
        this.dispatcher.clearCache(); // also clears loaded$ flag
    };
    DeductionService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_6__["defineInjectable"]({ factory: function DeductionService_Factory() { return new DeductionService(_angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_entity_helper_service__WEBPACK_IMPORTED_MODULE_3__["EntityHelperService"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_7__["LoggerService"])); }, token: DeductionService, providedIn: "root" });
    return DeductionService;
}());



/***/ }),

/***/ "./src/app/store/entity/entity-services/document-package.service.ts":
/*!**************************************************************************!*\
  !*** ./src/app/store/entity/entity-services/document-package.service.ts ***!
  \**************************************************************************/
/*! exports provided: DocumentPackageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentPackageService", function() { return DocumentPackageService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _entity_selectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../entity-selectors */ "./src/app/store/entity/entity-selectors.ts");
/* harmony import */ var _entity_dispatcher__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../entity-dispatcher */ "./src/app/store/entity/entity-dispatcher.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _session_session_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../session/session.service */ "./src/app/store/session/session.service.ts");













var DocumentPackageService = /** @class */ (function () {
    function DocumentPackageService(entityCacheDispatcher, entitySelectors, http, sessionService) {
        this.entityCacheDispatcher = entityCacheDispatcher;
        this.http = http;
        this.sessionService = sessionService;
        this.documentPackage$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(entitySelectors.document.entities$, entitySelectors.envelope.entities$, entitySelectors.envelopeSigner.entities$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["debounceTime"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var d = _a[0], e = _a[1], es = _a[2];
            return ({
                Document: d, Envelope: e, EnvelopeSigner: es
            });
        }));
    }
    /**
     * Loads the "DocumentPackage" data for the current company.
     * @returns Cold, terminating observable of the DocumentPackage.
     * You must subscribe but do not have to unsubscribe.
     */
    DocumentPackageService.prototype.loadDocumentPackage = function () {
        var _this = this;
        return this.sessionService.currentCompanyId$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (companyId) { return _this.loadData(companyId); }));
    };
    /**
     * Loads the DocumentPackage, then returns the id of the first completed, non-removed
     * envelope for which the current user is an embedded envelope signer (if exists);
     * else returns undefined.
     */
    DocumentPackageService.prototype.loadSignedEnvelopeId = function () {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.loadDocumentPackage(), this.sessionService.currentUserId$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var pack = _a[0], userId = _a[1];
            // first embedded envelope signer (if exists)
            var userSigner = pack.EnvelopeSigner.find(function (es) { return es.isEmbedded && es.userId === userId; });
            // first completed, non-removed envelope (if it exists)
            var envelope = pack.Envelope.find(function (e) { return e.status === _model__WEBPACK_IMPORTED_MODULE_3__["EnvelopeStatus"].completed && !e.isRemoved; });
            return userSigner && envelope && envelope.eSignEnvelopeId;
        }));
    };
    /**
     * Loads the "DocumentPackage" data for the given company.
     * @param companyId The id of the company whose data should be loaded.
     * @returns Terminating COLD observable of either the DocumentPackage if succeeded
     * or error observable if failed.
     * You must subscribe but do not have to unsubscribe.
     */
    DocumentPackageService.prototype.loadData = function (companyId) {
        var _this = this;
        var url = _environment__WEBPACK_IMPORTED_MODULE_6__["environment"].apiRoot + "/documentpackage/" + companyId;
        return this.http.get(url).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (data) { return _this.entityCacheDispatcher.loadDocumentPackageSuccess(data); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function () { return _this.documentPackage$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])()); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (error) {
            _this.entityCacheDispatcher.loadDocumentPackageError(companyId, error);
            return rxjs__WEBPACK_IMPORTED_MODULE_1__["EMPTY"];
        }));
    };
    DocumentPackageService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_8__["defineInjectable"]({ factory: function DocumentPackageService_Factory() { return new DocumentPackageService(_angular_core__WEBPACK_IMPORTED_MODULE_8__["inject"](_entity_dispatcher__WEBPACK_IMPORTED_MODULE_5__["EntityDispatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["inject"](_entity_selectors__WEBPACK_IMPORTED_MODULE_4__["EntitySelectors"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["inject"](_session_session_service__WEBPACK_IMPORTED_MODULE_9__["SessionService"])); }, token: DocumentPackageService, providedIn: "root" });
    return DocumentPackageService;
}());



/***/ }),

/***/ "./src/app/store/entity/entity-services/document.service.ts":
/*!******************************************************************!*\
  !*** ./src/app/store/entity/entity-services/document.service.ts ***!
  \******************************************************************/
/*! exports provided: DocumentService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentService", function() { return DocumentService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_services_busy_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../core/services/busy.service */ "./src/app/core/services/busy.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();









var DocumentService = /** @class */ (function (_super) {
    __extends(DocumentService, _super);
    function DocumentService(helper, http, busyService) {
        var _this = _super.call(this, 'Document', helper) || this;
        _this.helper = helper;
        _this.http = http;
        _this.busyService = busyService;
        return _this;
    }
    /**
     * Get the PDF for a signable document by its id.
     * @param docId Id of the PDF to download
     * @returns The PDF as a Blob
     */
    DocumentService.prototype.getDocPdf = function (docId) {
        // Use HttpClient to download (vs just a link) because requires Bearer token
        var url = _environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiRoot + ("/document/download/" + docId);
        return this.busyService.busy$('Building Document ...', this.http.get(url, { responseType: 'blob' }));
    };
    DocumentService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_5__["defineInjectable"]({ factory: function DocumentService_Factory() { return new DocumentService(_angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_1__["CompanyEntityHelperService"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"](_core_services_busy_service__WEBPACK_IMPORTED_MODULE_6__["BusyService"])); }, token: DocumentService, providedIn: "root" });
    return DocumentService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_2__["CurrentCompanyEntityCollectionService"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/earning.service.ts":
/*!*****************************************************************!*\
  !*** ./src/app/store/entity/entity-services/earning.service.ts ***!
  \*****************************************************************/
/*! exports provided: EarningService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EarningService", function() { return EarningService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _entity_helper_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./entity-helper.service */ "./src/app/store/entity/entity-services/entity-helper.service.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../core/services/logger.service */ "./src/app/core/services/logger.service.ts");










var earningsUrl = _environment__WEBPACK_IMPORTED_MODULE_4__["environment"].apiRoot + '/earnings';
var EarningService = /** @class */ (function () {
    function EarningService(entityHelper, http, logger) {
        var _this = this;
        this.http = http;
        this.logger = logger;
        var elements = entityHelper.collectionServiceElementsFactory.create('Earning');
        this.loaded$ = elements.selectors$.loaded$;
        this.earnings$ = elements.selectors$.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["withLatestFrom"])(this.loaded$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (_a) {
            var earnings = _a[0], loaded = _a[1];
            if (loaded) {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(earnings);
            }
            else {
                return _this.http.get(earningsUrl).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (newEarnings) {
                    _this.dispatcher.addAllToCache(newEarnings);
                    return newEarnings;
                }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (error) {
                    // Swallow error and return previous earnings (if any)
                    _this.logger.error('Earnings service failed to return earnings', error);
                    _this.dispatcher.setLoaded(true); // pretend it loaded successfully
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(earnings);
                }));
            }
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
        this.dispatcher = elements.dispatcher;
    }
    /**
     * Clear the Earnings master metadata in cache.
     */
    EarningService.prototype.clearCache = function () {
        this.dispatcher.clearCache(); // also clears loaded$ flag
    };
    EarningService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_6__["defineInjectable"]({ factory: function EarningService_Factory() { return new EarningService(_angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_entity_helper_service__WEBPACK_IMPORTED_MODULE_3__["EntityHelperService"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_7__["LoggerService"])); }, token: EarningService, providedIn: "root" });
    return EarningService;
}());



/***/ }),

/***/ "./src/app/store/entity/entity-services/employee-deduction.service.ts":
/*!****************************************************************************!*\
  !*** ./src/app/store/entity/entity-services/employee-deduction.service.ts ***!
  \****************************************************************************/
/*! exports provided: EmployeeDeductionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmployeeDeductionService", function() { return EmployeeDeductionService; });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var ENTITY_EMPLOYEE_DEDUCTION = 'EmployeeDeduction';
var EmployeeDeductionService = /** @class */ (function (_super) {
    __extends(EmployeeDeductionService, _super);
    function EmployeeDeductionService(helper) {
        var _this = _super.call(this, 'EmployeeDeduction', helper) || this;
        _this.helper = helper;
        /**
         * Employee Deductions
         */
        _this.employeeDeductions$ = _this.entities$;
        return _this;
    }
    EmployeeDeductionService.prototype.getEmployeeDeductions = function (empId) {
        return this.employeeDeductions$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["map"])(function (ds) {
            return ds.filter(function (d) { return d.employeeId === empId; });
        }));
    };
    EmployeeDeductionService.prototype.getDeductionsLinkedTo = function (companyDeductionId) {
        return this.employeeDeductions$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["map"])(function (ds) {
            return ds.filter(function (d) { return d.companyDeductionId === companyDeductionId; });
        }));
    };
    // TODO: Test with real services
    /**
     * Multi-entity save of EmployeeDeduction with adds, updates and deletes
     * @param deductions Array of deductions to add, update, or delete.
     * Deletes have isRemoved: true
     * Updates are non-deletes with an id
     * Adds are non-deletes without an id; will generate that id here.
     * @returns Terminating observable of ChangeSet that emits when server responds
     */
    EmployeeDeductionService.prototype.save = function (deductions) {
        var _this = this;
        var deletes = (deductions || []).filter(function (d) { return d.isRemoved === true && d.id; });
        // Ignore deductions with isRemoved:true but no id because they don't exist on the server
        // Cannot use ChangeSetOp.Upsert because server does not support it.
        // Separate non-deletes into updates (have id) and adds (no id)
        var updates = (deductions || []).filter(function (d) { return d.isRemoved !== true && d.id; });
        // Identity new deductions by missing id and generate their ids before adding
        var adds = (deductions || [])
            .filter(function (d) { return d.isRemoved !== true && !d.id; })
            .map(function (d) {
            d.id = _this.helper.generateId();
            return d;
        });
        var changes = [
            _utils__WEBPACK_IMPORTED_MODULE_1__["changeItemFactory"].add(ENTITY_EMPLOYEE_DEDUCTION, adds),
            _utils__WEBPACK_IMPORTED_MODULE_1__["changeItemFactory"].update(ENTITY_EMPLOYEE_DEDUCTION, updates),
            _utils__WEBPACK_IMPORTED_MODULE_1__["changeItemFactory"].delete(ENTITY_EMPLOYEE_DEDUCTION, deletes)
        ];
        var changeSet = { changes: changes };
        return this.saveEntities(changeSet, '/save/employee-deduction');
    };
    EmployeeDeductionService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function EmployeeDeductionService_Factory() { return new EmployeeDeductionService(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__["CompanyEntityHelperService"])); }, token: EmployeeDeductionService, providedIn: "root" });
    return EmployeeDeductionService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_3__["CurrentCompanyEntityCollectionService"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/employee-payment-method.service.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/store/entity/entity-services/employee-payment-method.service.ts ***!
  \*********************************************************************************/
/*! exports provided: EmployeePaymentMethodService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmployeePaymentMethodService", function() { return EmployeePaymentMethodService; });
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var EmployeePaymentMethodService = /** @class */ (function (_super) {
    __extends(EmployeePaymentMethodService, _super);
    function EmployeePaymentMethodService(helper) {
        var _this = _super.call(this, 'EmployeePaymentMethod', helper) || this;
        _this.helper = helper;
        return _this;
    }
    EmployeePaymentMethodService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function EmployeePaymentMethodService_Factory() { return new EmployeePaymentMethodService(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityHelperService"])); }, token: EmployeePaymentMethodService, providedIn: "root" });
    return EmployeePaymentMethodService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_1__["CurrentCompanyEntityCollectionService"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/employee-tax.service.ts":
/*!**********************************************************************!*\
  !*** ./src/app/store/entity/entity-services/employee-tax.service.ts ***!
  \**********************************************************************/
/*! exports provided: EmployeeTaxService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmployeeTaxService", function() { return EmployeeTaxService; });
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var EmployeeTaxService = /** @class */ (function (_super) {
    __extends(EmployeeTaxService, _super);
    function EmployeeTaxService(helper) {
        var _this = _super.call(this, 'EmployeeTax', helper) || this;
        _this.helper = helper;
        return _this;
    }
    EmployeeTaxService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function EmployeeTaxService_Factory() { return new EmployeeTaxService(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityHelperService"])); }, token: EmployeeTaxService, providedIn: "root" });
    return EmployeeTaxService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_1__["CurrentCompanyEntityCollectionService"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/employee.service.ts":
/*!******************************************************************!*\
  !*** ./src/app/store/entity/entity-services/employee.service.ts ***!
  \******************************************************************/
/*! exports provided: EmployeeService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmployeeService", function() { return EmployeeService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _entity_selectors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../entity-selectors */ "./src/app/store/entity/entity-selectors.ts");
/* harmony import */ var _core_services_tax_services_tax_collector_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @core/services/tax-services/tax-collector.service */ "./src/app/core/services/tax-services/tax-collector.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();












var EmployeeService = /** @class */ (function (_super) {
    __extends(EmployeeService, _super);
    function EmployeeService(entitySelectors, helper, taxCollectorService) {
        var _this = _super.call(this, 'Employee', helper) || this;
        _this.entitySelectors = entitySelectors;
        _this.helper = helper;
        _this.taxCollectorService = taxCollectorService;
        return _this;
    }
    EmployeeService.prototype.saveNewEmployee = function (ee, home, epay) {
        var changes = [
            _utils__WEBPACK_IMPORTED_MODULE_2__["changeItemFactory"].add('Address', home),
            _utils__WEBPACK_IMPORTED_MODULE_2__["changeItemFactory"].add('Employee', ee),
            _utils__WEBPACK_IMPORTED_MODULE_2__["changeItemFactory"].add('EmployeePaymentMethod', epay)
        ];
        return this.saveEntities({ changes: changes }, _environment__WEBPACK_IMPORTED_MODULE_5__["environment"].apiRoot + '/save/employee').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (_) { return ee; }));
    };
    EmployeeService.prototype.saveEmployeeUpdate = function (ee, home) {
        var changes = [
            _utils__WEBPACK_IMPORTED_MODULE_2__["changeItemFactory"].update('Address', home),
            _utils__WEBPACK_IMPORTED_MODULE_2__["changeItemFactory"].update('Employee', ee),
        ];
        return this.saveEntities({ changes: changes }, _environment__WEBPACK_IMPORTED_MODULE_5__["environment"].apiRoot + '/save/employee').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (_) { return ee; }));
    };
    /**
     * If Employee.isRemoved flag is changed, toggle and save isRemoved for the entire EE graph.
     * @param eeId Id of the Employee in question
     * @param isRemoved the proposed change to the "soft delete" flag
     */
    EmployeeService.prototype.saveEmployeeIsRemovedById = function (eeId, isRemoved) {
        var _this = this;
        return this.entityMap$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (eeMap) { return eeMap[eeId]; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function (ee) { return _this.saveEmployeeIsRemoved(ee, isRemoved); }));
    };
    // TODO: There might be much more work to toggling the isRemoved state.
    /**
     * If Employee.isRemoved flag is changed, toggle and save isRemoved for the entire EE graph.
     * @param ee Employee in question
     * @param isRemoved the proposed change to the "soft delete" flag
     */
    EmployeeService.prototype.saveEmployeeIsRemoved = function (ee, isRemoved) {
        var _this = this;
        if (ee == null || ee.isRemoved === isRemoved) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(null);
        }
        ee.isRemoved = isRemoved;
        var home$ = this.entitySelectors.address.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (addrs) { return addrs.find(function (a) { return a.id === ee.homeAddressId; }); }));
        var payment$ = this.entitySelectors.employeePaymentMethod.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (pms) { return pms.find(function (pm) { return pm.employeeId === ee.id; }); }));
        // TODO: Always use this multi-entity save
        var result$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["combineLatest"])(home$, payment$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function (_a) {
            var home = _a[0], payment = _a[1];
            home.isRemoved = ee.isRemoved;
            var changes = [
                _utils__WEBPACK_IMPORTED_MODULE_2__["changeItemFactory"].update('Employee', ee),
                _utils__WEBPACK_IMPORTED_MODULE_2__["changeItemFactory"].update('Address', home),
            ];
            if (payment) {
                payment.isRemoved = ee.isRemoved;
                changes.push(_utils__WEBPACK_IMPORTED_MODULE_2__["changeItemFactory"].update('EmployeePaymentMethod', payment));
            }
            return _this.saveEntities({ changes: changes }, _environment__WEBPACK_IMPORTED_MODULE_5__["environment"].apiRoot + '/save/employee/removed').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["concatMap"])(function () { return _this.taxCollectorService.computeTaxes().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function () { return ee; })); }));
        }));
        return result$;
    };
    EmployeeService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_8__["defineInjectable"]({ factory: function EmployeeService_Factory() { return new EmployeeService(_angular_core__WEBPACK_IMPORTED_MODULE_8__["inject"](_entity_selectors__WEBPACK_IMPORTED_MODULE_6__["EntitySelectors"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_3__["CompanyEntityHelperService"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["inject"](_core_services_tax_services_tax_collector_service__WEBPACK_IMPORTED_MODULE_7__["TaxCollectorService"])); }, token: EmployeeService, providedIn: "root" });
    return EmployeeService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_4__["CurrentCompanyEntityCollectionService"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/entity-helper.service.ts":
/*!***********************************************************************!*\
  !*** ./src/app/store/entity/entity-services/entity-helper.service.ts ***!
  \***********************************************************************/
/*! exports provided: EntityHelperService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EntityHelperService", function() { return EntityHelperService; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var _core_services_id_generator_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/services/id-generator.service */ "./src/app/core/services/id-generator.service.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");









var EntityHelperService = /** @class */ (function () {
    function EntityHelperService(collectionServiceElementsFactory, entityCacheDispatcher, idGenerator, logger, store) {
        this.collectionServiceElementsFactory = collectionServiceElementsFactory;
        this.entityCacheDispatcher = entityCacheDispatcher;
        this.idGenerator = idGenerator;
        this.logger = logger;
        this.store = store;
    }
    /** Dispatch any action to the store */
    EntityHelperService.prototype.dispatch = function (action) {
        this.store.dispatch(action);
    };
    EntityHelperService.prototype.generateId = function () {
        return this.idGenerator.generateId();
    };
    EntityHelperService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function EntityHelperService_Factory() { return new EntityHelperService(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityCollectionServiceElementsFactory"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityCacheDispatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_core_services_id_generator_service__WEBPACK_IMPORTED_MODULE_2__["IdGeneratorService"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_3__["LoggerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["Store"])); }, token: EntityHelperService, providedIn: "root" });
    return EntityHelperService;
}());



/***/ }),

/***/ "./src/app/store/entity/entity-services/entity-services.module.ts":
/*!************************************************************************!*\
  !*** ./src/app/store/entity/entity-services/entity-services.module.ts ***!
  \************************************************************************/
/*! exports provided: EntityServicesModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EntityServicesModule", function() { return EntityServicesModule; });
/* harmony import */ var _ngrx_data_toast_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ngrx-data-toast.service */ "./src/app/store/entity/entity-services/ngrx-data-toast.service.ts");

var EntityServicesModule = /** @class */ (function () {
    function EntityServicesModule(toastService // injecting starts it
    ) {
    }
    return EntityServicesModule;
}());



/***/ }),

/***/ "./src/app/store/entity/entity-services/envelope-user.service.ts":
/*!***********************************************************************!*\
  !*** ./src/app/store/entity/entity-services/envelope-user.service.ts ***!
  \***********************************************************************/
/*! exports provided: EnvelopeSignerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EnvelopeSignerService", function() { return EnvelopeSignerService; });
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var EnvelopeSignerService = /** @class */ (function (_super) {
    __extends(EnvelopeSignerService, _super);
    function EnvelopeSignerService(helper) {
        var _this = _super.call(this, 'EnvelopeSigner', helper) || this;
        _this.helper = helper;
        return _this;
    }
    EnvelopeSignerService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function EnvelopeSignerService_Factory() { return new EnvelopeSignerService(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityHelperService"])); }, token: EnvelopeSignerService, providedIn: "root" });
    return EnvelopeSignerService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_1__["CurrentCompanyEntityCollectionService"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/envelope.service.ts":
/*!******************************************************************!*\
  !*** ./src/app/store/entity/entity-services/envelope.service.ts ***!
  \******************************************************************/
/*! exports provided: EnvelopeService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EnvelopeService", function() { return EnvelopeService; });
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var EnvelopeService = /** @class */ (function (_super) {
    __extends(EnvelopeService, _super);
    function EnvelopeService(helper) {
        var _this = _super.call(this, 'Envelope', helper) || this;
        _this.helper = helper;
        return _this;
    }
    EnvelopeService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function EnvelopeService_Factory() { return new EnvelopeService(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_0__["CompanyEntityHelperService"])); }, token: EnvelopeService, providedIn: "root" });
    return EnvelopeService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_1__["CurrentCompanyEntityCollectionService"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/household-filers.service.ts":
/*!**************************************************************************!*\
  !*** ./src/app/store/entity/entity-services/household-filers.service.ts ***!
  \**************************************************************************/
/*! exports provided: HouseholdFilersService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HouseholdFilersService", function() { return HouseholdFilersService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _session_session_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../session/session.service */ "./src/app/store/session/session.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();









var HouseholdFilersService = /** @class */ (function (_super) {
    __extends(HouseholdFilersService, _super);
    function HouseholdFilersService(helper, sessionService) {
        var _this = _super.call(this, 'HouseholdFilers', helper) || this;
        _this.helper = helper;
        _this.sessionService = sessionService;
        return _this;
    }
    Object.defineProperty(HouseholdFilersService.prototype, "householdFilers$", {
        get: function () {
            var _this = this;
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["combineLatest"])(this.entities$, this.sessionService.currentCompanyId$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (_a) {
                var filersCollection = _a[0], companyId = _a[1];
                return filersCollection.find(function (f) { return f.companyId === companyId; }) ||
                    _this.createNewRecord(companyId); // not found, create one
            }));
        },
        enumerable: true,
        configurable: true
    });
    HouseholdFilersService.prototype.createNewRecord = function (companyId) {
        if (!companyId) {
            return null;
        }
        var res = new _model__WEBPACK_IMPORTED_MODULE_4__["HouseholdFilers"](null, companyId);
        return res;
    };
    HouseholdFilersService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_6__["defineInjectable"]({ factory: function HouseholdFilersService_Factory() { return new HouseholdFilersService(_angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__["CompanyEntityHelperService"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_session_session_service__WEBPACK_IMPORTED_MODULE_7__["SessionService"])); }, token: HouseholdFilersService, providedIn: "root" });
    return HouseholdFilersService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_3__["CurrentCompanyEntityCollectionService"]));



/***/ }),

/***/ "./src/app/store/entity/entity-services/index.ts":
/*!*******************************************************!*\
  !*** ./src/app/store/entity/entity-services/index.ts ***!
  \*******************************************************/
/*! exports provided: CompanyService, DocumentPackageService, EarningService, EmployeeService, HouseholdFilersService, getEmployeeId, ReviewService, AddressService, AncillaryService, CompanyAncillaryService, CompanyEarningService, CompanyTaxService, CurrentCompanyEntityCollectionService, CompanyDeductionService, DeductionService, DocumentService, EmployeePaymentMethodService, EmployeeDeductionService, EmployeeTaxService, EnvelopeService, EnvelopeSignerService, StatsService, EmployeeTaxLocation, TaxLocationService, UserService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _address_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./address.service */ "./src/app/store/entity/entity-services/address.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AddressService", function() { return _address_service__WEBPACK_IMPORTED_MODULE_0__["AddressService"]; });

/* harmony import */ var _ancillary_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ancillary.service */ "./src/app/store/entity/entity-services/ancillary.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AncillaryService", function() { return _ancillary_service__WEBPACK_IMPORTED_MODULE_1__["AncillaryService"]; });

/* harmony import */ var _company_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./company.service */ "./src/app/store/entity/entity-services/company.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyService", function() { return _company_service__WEBPACK_IMPORTED_MODULE_2__["CompanyService"]; });

/* harmony import */ var _company_ancillary_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./company-ancillary.service */ "./src/app/store/entity/entity-services/company-ancillary.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyAncillaryService", function() { return _company_ancillary_service__WEBPACK_IMPORTED_MODULE_3__["CompanyAncillaryService"]; });

/* harmony import */ var _company_earning_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./company-earning.service */ "./src/app/store/entity/entity-services/company-earning.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyEarningService", function() { return _company_earning_service__WEBPACK_IMPORTED_MODULE_4__["CompanyEarningService"]; });

/* harmony import */ var _company_tax_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./company-tax.service */ "./src/app/store/entity/entity-services/company-tax.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyTaxService", function() { return _company_tax_service__WEBPACK_IMPORTED_MODULE_5__["CompanyTaxService"]; });

/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CurrentCompanyEntityCollectionService", function() { return _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_6__["CurrentCompanyEntityCollectionService"]; });

/* harmony import */ var _company_deduction_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./company-deduction.service */ "./src/app/store/entity/entity-services/company-deduction.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyDeductionService", function() { return _company_deduction_service__WEBPACK_IMPORTED_MODULE_7__["CompanyDeductionService"]; });

/* harmony import */ var _deduction_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./deduction.service */ "./src/app/store/entity/entity-services/deduction.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeductionService", function() { return _deduction_service__WEBPACK_IMPORTED_MODULE_8__["DeductionService"]; });

/* harmony import */ var _document_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./document.service */ "./src/app/store/entity/entity-services/document.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DocumentService", function() { return _document_service__WEBPACK_IMPORTED_MODULE_9__["DocumentService"]; });

/* harmony import */ var _document_package_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./document-package.service */ "./src/app/store/entity/entity-services/document-package.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DocumentPackageService", function() { return _document_package_service__WEBPACK_IMPORTED_MODULE_10__["DocumentPackageService"]; });

/* harmony import */ var _earning_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./earning.service */ "./src/app/store/entity/entity-services/earning.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EarningService", function() { return _earning_service__WEBPACK_IMPORTED_MODULE_11__["EarningService"]; });

/* harmony import */ var _employee_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./employee.service */ "./src/app/store/entity/entity-services/employee.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeService", function() { return _employee_service__WEBPACK_IMPORTED_MODULE_12__["EmployeeService"]; });

/* harmony import */ var _employee_payment_method_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./employee-payment-method.service */ "./src/app/store/entity/entity-services/employee-payment-method.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeePaymentMethodService", function() { return _employee_payment_method_service__WEBPACK_IMPORTED_MODULE_13__["EmployeePaymentMethodService"]; });

/* harmony import */ var _employee_deduction_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./employee-deduction.service */ "./src/app/store/entity/entity-services/employee-deduction.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeDeductionService", function() { return _employee_deduction_service__WEBPACK_IMPORTED_MODULE_14__["EmployeeDeductionService"]; });

/* harmony import */ var _employee_tax_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./employee-tax.service */ "./src/app/store/entity/entity-services/employee-tax.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeTaxService", function() { return _employee_tax_service__WEBPACK_IMPORTED_MODULE_15__["EmployeeTaxService"]; });

/* harmony import */ var _envelope_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./envelope.service */ "./src/app/store/entity/entity-services/envelope.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EnvelopeService", function() { return _envelope_service__WEBPACK_IMPORTED_MODULE_16__["EnvelopeService"]; });

/* harmony import */ var _envelope_user_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./envelope-user.service */ "./src/app/store/entity/entity-services/envelope-user.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EnvelopeSignerService", function() { return _envelope_user_service__WEBPACK_IMPORTED_MODULE_17__["EnvelopeSignerService"]; });

/* harmony import */ var _household_filers_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./household-filers.service */ "./src/app/store/entity/entity-services/household-filers.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HouseholdFilersService", function() { return _household_filers_service__WEBPACK_IMPORTED_MODULE_18__["HouseholdFilersService"]; });

/* harmony import */ var _review_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./review.service */ "./src/app/store/entity/entity-services/review.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getEmployeeId", function() { return _review_service__WEBPACK_IMPORTED_MODULE_19__["getEmployeeId"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReviewService", function() { return _review_service__WEBPACK_IMPORTED_MODULE_19__["ReviewService"]; });

/* harmony import */ var _stats_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./stats.service */ "./src/app/store/entity/entity-services/stats.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StatsService", function() { return _stats_service__WEBPACK_IMPORTED_MODULE_20__["StatsService"]; });

/* harmony import */ var _tax_location_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./tax-location.service */ "./src/app/store/entity/entity-services/tax-location.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeTaxLocation", function() { return _tax_location_service__WEBPACK_IMPORTED_MODULE_21__["EmployeeTaxLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxLocationService", function() { return _tax_location_service__WEBPACK_IMPORTED_MODULE_21__["TaxLocationService"]; });

/* harmony import */ var _user_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./user.service */ "./src/app/store/entity/entity-services/user.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserService", function() { return _user_service__WEBPACK_IMPORTED_MODULE_22__["UserService"]; });

// All entity-specific collection services

























/***/ }),

/***/ "./src/app/store/entity/entity-services/ngrx-data-toast.service.ts":
/*!*************************************************************************!*\
  !*** ./src/app/store/entity/entity-services/ngrx-data-toast.service.ts ***!
  \*************************************************************************/
/*! exports provided: NgrxDataToastService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgrxDataToastService", function() { return NgrxDataToastService; });
/* harmony import */ var _ngrx_effects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/effects */ "./node_modules/@ngrx/effects/fesm5/effects.js");
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _core_services_toast_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @core/services/toast.service */ "./src/app/core/services/toast.service.ts");






var showToast = window.location.search.includes('toast');
/** Report ngrx-data success/error actions as toast messages **/
var NgrxDataToastService = /** @class */ (function () {
    function NgrxDataToastService(actions$, logger, toast) {
        // this service never dies so no need to unsubscribe
        actions$
            .pipe(Object(ngrx_data__WEBPACK_IMPORTED_MODULE_1__["ofEntityOp"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (ea) { return ea.payload.entityOp.endsWith(ngrx_data__WEBPACK_IMPORTED_MODULE_1__["OP_SUCCESS"]) || ea.payload.entityOp.endsWith(ngrx_data__WEBPACK_IMPORTED_MODULE_1__["OP_ERROR"]); }))
            .subscribe(function (action) {
            var message = action.payload.entityName + " action";
            if (showToast) {
                toast.openSnackBar(message, action.payload.entityOp);
            }
            if (!_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
                logger.log(message, action);
            }
        });
    }
    return NgrxDataToastService;
}());



/***/ }),

/***/ "./src/app/store/entity/entity-services/review.service.ts":
/*!****************************************************************!*\
  !*** ./src/app/store/entity/entity-services/review.service.ts ***!
  \****************************************************************/
/*! exports provided: getEmployeeId, ReviewService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEmployeeId", function() { return getEmployeeId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReviewService", function() { return ReviewService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _stats_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stats.service */ "./src/app/store/entity/entity-services/stats.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");




function getEmployeeId(context, employees) {
    var employeeId = context.model.employeeId || (context.modelType === 'Employee' && context.model.id);
    if (employeeId) {
        return employeeId;
    }
    var employee = employees.find(function (e) { return e.homeAddressId === context.model.id; });
    // If no employee, the address is orphaned. This is a known temporary state ... or it should be temporary.
    // TODO: we can avoid this with transactional save of EE and its Address during editing.
    // Will also orphan an address or payment method if the EE is removed because
    // not yet removing the EE's address and payment method at the same time.
    // TODO: remove addr and payment method when an EE is removed; restore them when the EE is restored.
    // WORKAROUND: Return null for now and make sure consumers ignore errors when there is no matching EE
    return employee ? employee.id : null;
}
var ReviewService = /** @class */ (function () {
    function ReviewService(statsService) {
        this.isValid$ = statsService.isValid$;
        this.aboutYouStatus$ = statsService.aboutYouStatus$;
        this.companyTaxStatus$ = statsService.companyTaxStatus$;
        this.companyInfoStatus$ = statsService.companyInfoStatus$;
        this.employeesStatus$ = statsService.employeesStatus$;
        this.bankInfoStatus$ = statsService.bankInfoStatus$;
        this.aboutYouErrors$ = statsService.aboutYouErrors$;
        this.bankInfoErrors$ = statsService.bankInfoErrors$;
        this.companyInfoErrors$ = statsService.companyInfoErrors$;
        this.companyTaxErrors$ = statsService.companyTaxErrors$;
        this.employeeSetupErrors$ = statsService.employeeSetupErrors$;
        this.employeesErrors$ = statsService.employeesErrors$;
    }
    ReviewService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_2__["defineInjectable"]({ factory: function ReviewService_Factory() { return new ReviewService(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"](_stats_service__WEBPACK_IMPORTED_MODULE_1__["StatsService"])); }, token: ReviewService, providedIn: "root" });
    return ReviewService;
}());



/***/ }),

/***/ "./src/app/store/entity/entity-services/sp-entity-collection-dataservice.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/store/entity/entity-services/sp-entity-collection-dataservice.ts ***!
  \**********************************************************************************/
/*! exports provided: SpEntityCollectionDataService, SpEntityCollectionDataServiceFactory, defaultDataServiceProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpEntityCollectionDataService", function() { return SpEntityCollectionDataService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpEntityCollectionDataServiceFactory", function() { return SpEntityCollectionDataServiceFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultDataServiceProvider", function() { return defaultDataServiceProvider; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




/**
 * A basic, generic entity data service suitable for persistence of most entities.
 * Overrides selected features of ngrx-data/DefaultDataService
 */
var SpEntityCollectionDataService = /** @class */ (function (_super) {
    __extends(SpEntityCollectionDataService, _super);
    function SpEntityCollectionDataService(entityName, http, httpUrlGenerator, config) {
        var _this = _super.call(this, entityName, http, httpUrlGenerator, config) || this;
        _this.http = http;
        _this.httpUrlGenerator = httpUrlGenerator;
        return _this;
    }
    // TODO: Remove once the server APIs are fixed.
    SpEntityCollectionDataService.prototype.getById = function (key) {
        var _this = this;
        return _super.prototype.getById.call(this, key).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (data) {
            if (Array.isArray(data)) {
                // Server returned array, which it shouldn't.
                if (data.length === 1) {
                    return data[0];
                }
                else if (data.length === 0) {
                    throw new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpErrorResponse"]({
                        status: 404,
                        statusText: 'Not Found',
                    });
                }
                else {
                    throw new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpErrorResponse"]({
                        status: 500,
                        statusText: 'Internal Server Error',
                        error: "Returned " + data.length + " " + _this.entityName + " items"
                    });
                }
            }
            else {
                return data;
            }
        }));
    };
    return SpEntityCollectionDataService;
}(ngrx_data__WEBPACK_IMPORTED_MODULE_3__["DefaultDataService"]));

/**
 * Create a generic entity data service for SP.
 * Suitable for persistence of most entities.
 * Replaces ngrx-data/DefaultDataServiceFactory
 */
var SpEntityCollectionDataServiceFactory = /** @class */ (function () {
    function SpEntityCollectionDataServiceFactory(http, httpUrlGenerator, config) {
        this.http = http;
        this.httpUrlGenerator = httpUrlGenerator;
        this.config = config;
        config = config || {};
        httpUrlGenerator.registerHttpResourceUrls(config.entityHttpResourceUrls);
    }
    /**
     * Create a default {EntityCollectionDataService} for the given entity type
     * @param entityName {string} Name of the entity type for this data service
     */
    SpEntityCollectionDataServiceFactory.prototype.create = function (entityName) {
        return new SpEntityCollectionDataService(entityName, this.http, this.httpUrlGenerator, this.config);
    };
    return SpEntityCollectionDataServiceFactory;
}());

var defaultDataServiceProvider = {
    provide: ngrx_data__WEBPACK_IMPORTED_MODULE_3__["DefaultDataService"], useClass: SpEntityCollectionDataServiceFactory
};


/***/ }),

/***/ "./src/app/store/entity/entity-services/stats.service.ts":
/*!***************************************************************!*\
  !*** ./src/app/store/entity/entity-services/stats.service.ts ***!
  \***************************************************************/
/*! exports provided: StatsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StatsService", function() { return StatsService; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./current-company-entity-collection-service */ "./src/app/store/entity/entity-services/current-company-entity-collection-service.ts");
/* harmony import */ var _core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @core/well-known-routes */ "./src/app/core/well-known-routes.ts");
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @validation */ "./src/app/store/validation/index.ts");
/* harmony import */ var _entity_selectors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../entity-selectors */ "./src/app/store/entity/entity-selectors.ts");
/* harmony import */ var _session__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @session */ "./src/app/store/session/index.ts");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _validation_validation_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../validation/validation.service */ "./src/app/store/validation/validation.service.ts");
/* harmony import */ var _session_session_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../session/session.service */ "./src/app/store/session/session.service.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../core/services/logger.service */ "./src/app/core/services/logger.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






 // '@core' introduces circular dependency











var StatsService = /** @class */ (function (_super) {
    __extends(StatsService, _super);
    function StatsService(helper, validationService, entitySelectors, sessionService, logger, router) {
        var _this = _super.call(this, 'Stats', helper) || this;
        _this.helper = helper;
        _this.validationService = validationService;
        _this.entitySelectors = entitySelectors;
        _this.sessionService = sessionService;
        _this.logger = logger;
        _this.router = router;
        _this.trackedRoutes = [
            _core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].AboutYou,
            _core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].CompanyInfo,
            _core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Employees,
            _core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].CompanyTaxInfo,
            _core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].BankAccount,
            _core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Review
        ];
        _this.stats$ = _this.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (statsCollection) {
            // "Cheating" by assuming that collection only holds the current company stats
            // new Stats should not be created here, only in SignupService, but this is a fallback for existing companies
            return statsCollection[0] || new _model__WEBPACK_IMPORTED_MODULE_3__["Stats"]();
        }));
        _this.getValidationErrors();
        _this.aboutYou();
        _this.bankInfo();
        _this.companyInfo();
        _this.companyTax();
        _this.employees();
        _this.statuses$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(_this.aboutYouStatus$, _this.bankInfoStatus$, _this.companyInfoStatus$, _this.companyTaxStatus$, _this.employeesStatus$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var aboutYou = _a[0], bankInfo = _a[1], companyInfo = _a[2], companyTax = _a[3], employees = _a[4];
            return ({
                aboutYou: aboutYou,
                bankInfo: bankInfo,
                companyInfo: companyInfo,
                companyTax: companyTax,
                employees: employees
            });
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
        /**
         * Listen for navigation to a tracked route (section).
         * Store the time for that section in Stats and save it
         */
        _this.router.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(isNavigationEnd), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (event) { return _this.trackedRoutes.some(function (route) { return event.url.startsWith(route); }); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["withLatestFrom"])(sessionService.readOnly$, _this.stats$, _this.statuses$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (_a) {
            var event = _a[0], readOnly = _a[1], stats = _a[2], statuses = _a[3];
            var dt = new Date().toISOString();
            var url = event.url;
            if (url.startsWith(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].AboutYou)) {
                stats.aboutYouLastDate = dt;
                stats.aboutYouStartDate = stats.aboutYouStartDate || dt;
            }
            else if (url.startsWith(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].CompanyInfo)) {
                stats.companyInfoLastDate = dt;
                stats.companyInfoStartDate = stats.companyInfoStartDate || dt;
            }
            else if (url.startsWith(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Employees)) {
                stats.employeesLastDate = dt;
                stats.employeesStartDate = stats.employeesStartDate || dt;
            }
            else if (url.startsWith(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].CompanyTaxInfo)) {
                stats.companyTaxInfoLastDate = dt;
                stats.companyTaxInfoStartDate = stats.companyTaxInfoStartDate || dt;
            }
            else if (url.startsWith(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].BankAccount)) {
                stats.companyBankAccountLastDate = dt;
                stats.companyBankAccountStartDate = stats.companyBankAccountStartDate || dt;
            }
            else if (url.startsWith(_core_well_known_routes__WEBPACK_IMPORTED_MODULE_6__["WellKnownRoutes"].Review)) {
                stats.reviewLastDate = dt;
                stats.reviewStartDate = stats.reviewStartDate || dt;
            }
            // Get sections statuses
            stats.aboutYouStatus = statuses.aboutYou;
            stats.companyInfoStatus = statuses.companyInfo;
            stats.employeesStatus = statuses.employees;
            stats.companyTaxInfoStatus = statuses.companyTax;
            stats.companyBankAccountStatus = statuses.bankInfo;
            // Always save stats (unless ReadOnly) because always update a `LastDate`
            return readOnly ? Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(stats) : _this.upsert(stats).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err) {
                // should do something
                // must catch here for error isolation else outer subscribe fails
                logger.warn('Error saving stats', err, stats);
                // Pretend everything was OK
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(stats);
            }));
        })).subscribe();
        function isNavigationEnd(event) {
            return event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_0__["NavigationEnd"];
        }
        return _this;
    }
    StatsService.prototype.getValidationErrors = function () {
        // Validate entire cache, excluding account status transition rules
        this.validationErrors$ = this.validationService.validateEntityCache(function (v) { return !(v.group && v.group.startsWith('transition-')); })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (result) { return result.validationErrors; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
        this.isValid$ = this.validationErrors$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (errors) { return errors.length === 0; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
    };
    StatsService.prototype.aboutYou = function () {
        this.aboutYouErrors$ = this.validationErrors$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (ves) {
            return ves.filter(function (ve) { return ve.context.modelType === 'User'; });
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
        this.aboutYouStatus$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.stats$, this.aboutYouErrors$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var stats = _a[0], aboutYouErrors = _a[1];
            return calcSectionStatus(stats.aboutYouStartDate, aboutYouErrors);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
    };
    StatsService.prototype.bankInfo = function () {
        this.bankInfoErrors$ = this.validationErrors$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (ves) {
            return ves.filter(function (ve) {
                return ve.validator.group === 'bank';
            });
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
        this.bankInfoStatus$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.stats$, this.bankInfoErrors$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var stats = _a[0], bankInfoErrors = _a[1];
            return calcSectionStatus(stats.companyBankAccountStartDate, bankInfoErrors);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
    };
    StatsService.prototype.companyInfo = function () {
        this.companyInfoErrors$ = this.validationErrors$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (ves) {
            return ves.filter(function (ve) {
                return !ve.validator.group &&
                    (ve.context.modelType === 'Company' || ve.context.modelType === 'Address' && !ve.context.model.isHome);
            });
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
        this.companyInfoStatus$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.stats$, this.companyInfoErrors$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var stats = _a[0], companyInfoErrors = _a[1];
            return calcSectionStatus(stats.companyInfoStartDate, companyInfoErrors);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
    };
    StatsService.prototype.companyTax = function () {
        this.companyTaxErrors$ = this.validationErrors$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (ves) { return ves.filter(function (ve) {
            return ve.validator.group === 'fedTax' || ve.validator.group === 'stateTax';
        }); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
        this.companyTaxStatus$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.stats$, this.companyTaxErrors$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var stats = _a[0], companyTaxErrors = _a[1];
            return calcSectionStatus(stats.companyTaxInfoStartDate, companyTaxErrors);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
    };
    StatsService.prototype.employees = function () {
        var _this = this;
        this.employeesErrors$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.entitySelectors.employee.entities$, this.validationErrors$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var ees = _a[0], ves = _a[1];
            return ves.filter(function (ve) {
                var modelType = ve.context.modelType;
                return (ve.validator.group === 'employeeSetup' ||
                    (!ve.validator.group && (modelType === 'Employee' ||
                        modelType === 'EmployeePaymentMethod' ||
                        _this.isActiveEEHomeAddressError(ees, ve))));
            });
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
        this.employeesStatus$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.stats$, this.employeesErrors$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var stats = _a[0], employeesErrors = _a[1];
            return calcSectionStatus(stats.employeesStartDate, employeesErrors);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
    };
    StatsService.prototype.isActiveEEHomeAddressError = function (ees, ve) {
        var addr = ve.context.model;
        if (ve.context.modelType === 'Address' && addr.isHome && !addr.isRemoved) {
            var addrId_1 = addr.id;
            var ee = ees.find(function (e) { return e.homeAddressId === addrId_1; });
            if (ee == null) {
                // This should never happen after we have transactional saves!
                // this.sessionService.logger.error(`Home address ${addrId} does not belong to any company EE`);
                return false;
            }
            // Only report Address errors for active EEs.
            return !ee.isRemoved;
        }
        return false;
    };
    StatsService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_11__["defineInjectable"]({ factory: function StatsService_Factory() { return new StatsService(_angular_core__WEBPACK_IMPORTED_MODULE_11__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_4__["CompanyEntityHelperService"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["inject"](_validation_validation_service__WEBPACK_IMPORTED_MODULE_12__["ValidationService"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["inject"](_entity_selectors__WEBPACK_IMPORTED_MODULE_8__["EntitySelectors"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["inject"](_session_session_service__WEBPACK_IMPORTED_MODULE_13__["SessionService"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_14__["LoggerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["inject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"])); }, token: StatsService, providedIn: "root" });
    return StatsService;
}(_current_company_entity_collection_service__WEBPACK_IMPORTED_MODULE_5__["CurrentCompanyEntityCollectionService"]));

function calcSectionStatus(startDate, errors) {
    return startDate ? errors.length > 0 ? _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].Invalid : _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].Valid : _model__WEBPACK_IMPORTED_MODULE_3__["SectionStatus"].NotStarted;
}


/***/ }),

/***/ "./src/app/store/entity/entity-services/tax-location.service.ts":
/*!**********************************************************************!*\
  !*** ./src/app/store/entity/entity-services/tax-location.service.ts ***!
  \**********************************************************************/
/*! exports provided: EmployeeTaxLocation, TaxLocationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmployeeTaxLocation", function() { return EmployeeTaxLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxLocationService", function() { return TaxLocationService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _entity_selectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../entity-selectors */ "./src/app/store/entity/entity-selectors.ts");
/* harmony import */ var _core_well_known_routes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @core/well-known-routes */ "./src/app/core/well-known-routes.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @utils */ "./src/app/core/utils/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");








/** A ViewModel of the Employee's work and home addresses for tax purposes */
var EmployeeTaxLocation = /** @class */ (function () {
    function EmployeeTaxLocation() {
    }
    EmployeeTaxLocation.create = function (ee, addresses) {
        var homeId = ee.homeAddressId;
        var home = _model__WEBPACK_IMPORTED_MODULE_2__["Address"].create(homeId ? addresses.find(function (addr) { return addr.id === ee.homeAddressId; }) : undefined);
        var workId = ee.workAddressId;
        var work = _model__WEBPACK_IMPORTED_MODULE_2__["Address"].create(workId ? addresses.find(function (addr) { return addr.id === ee.workAddressId; }) : undefined);
        var eeLink = _core_well_known_routes__WEBPACK_IMPORTED_MODULE_4__["WellKnownRoutes"].Employees + "/" + ee.id;
        var isExcludedFromTaxes = this.isEmployeeTaxExcluded(ee);
        // Don't exclusively trust the isVerified property as that can potentially be set erroneously
        var isHomeAddressVerified = home.isVerified && home.geoCode != null && home.geoCode.length !== 0;
        var isWorkAddressVerified = work.isVerified && work.geoCode != null && work.geoCode.length !== 0;
        return {
            /** id is Employee's id */
            id: ee.id,
            link: eeLink,
            name: Object(_utils__WEBPACK_IMPORTED_MODULE_5__["getFullName"])(ee),
            isVerified: isWorkAddressVerified && isHomeAddressVerified,
            isTaxesExcluded: isExcludedFromTaxes,
            // homeAddress: home,
            homeAddressId: home.id,
            isHomeAddressVerified: isHomeAddressVerified,
            homeAddressName: home.toString(),
            homeLink: eeLink + '/personal',
            homeState: home.state,
            homeGeoCode: home.geoCode,
            homeSchoolDistrictCode: home.schoolDistrictCode,
            homePsdCode: home.psdCode,
            // workAddress: work,
            workAddressId: workId,
            isWorkAddressVerified: isWorkAddressVerified,
            workAddressName: work.toString(),
            workLink: eeLink + '/employment',
            workState: work.state,
            workGeoCode: work.geoCode,
            workSchoolDistrictCode: work.schoolDistrictCode,
            workPsdCode: work.psdCode
        };
    };
    EmployeeTaxLocation.isEmployeeTaxExcluded = function (ee) {
        return ee.employeeType === _model__WEBPACK_IMPORTED_MODULE_2__["EmployeeType"].Contractor;
    };
    return EmployeeTaxLocation;
}());

/**
 * Creates observables Address, Employee, and Company information that
 * drives how we calculate U.S. State taxes for the EEs who live and work in those states.
 * These observables also help determine the State-specific documents that must be signed.
 * And they reveal which addresses are associated with an EE and, therefore, cannot be removed.
 */
var TaxLocationService = /** @class */ (function () {
    function TaxLocationService(entitySelectors) {
        this.entitySelectors = entitySelectors;
        this.initializeObservables();
    }
    TaxLocationService.prototype.initializeObservables = function () {
        // Addresses that are active and have a U.S. state
        var addresses$ = this.entitySelectors.address.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (addrs) { return addrs.filter(function (a) { return !a.isRemoved && a.state; }); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["shareReplay"])(1));
        // Employees that are "live" (not removed)
        var employees$ = this.entitySelectors.employee.entities$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (ees) { return ees.filter(function (ee) { return !ee.isRemoved; }); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["shareReplay"])(1));
        // Work & home addresses for all live EEs
        this.employeeTaxLocations$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["combineLatest"])(addresses$, employees$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (_a) {
            var addrs = _a[0], ees = _a[1];
            return addrs == null || addrs.length === 0 ||
                ees == null || ees.length === 0
                ? [] : ees.map(function (ee) { return EmployeeTaxLocation.create(ee, addrs); });
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["shareReplay"])(1));
        // Hash of states with arrays of EE work/home address in that state
        this.employeeTaxLocationsByState$ = this.employeeTaxLocations$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (eeInputs) {
            return eeInputs.reduce(function (acc, input) {
                updateAcc(input.homeState);
                updateAcc(input.workState);
                return acc;
                function updateAcc(stateName) {
                    if (!stateName) {
                        return; // ignore a no-state address
                    }
                    var stateArray = acc[stateName];
                    if (stateArray) {
                        if (-1 === stateArray.indexOf(input)) {
                            stateArray.push(input);
                        }
                    }
                    else {
                        acc[stateName] = [input];
                    }
                    return acc;
                }
            }, {});
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["shareReplay"])(1));
        // The states where an EE is taxed, sorted alphabetically
        this.employeeTaxStates$ = this.employeeTaxLocationsByState$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (locs) { return Object.keys(locs).sort(); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["shareReplay"])(1));
        // The company's work locations
        this.companyLocations$ = addresses$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (addrs) { return addrs.filter(function (a) { return !a.isHome; }); }));
        // The list of states in which the Company has an address or an EE has a home address.
        this.companyTaxStates$ = addresses$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (addresses) { return addresses.reduce(function (acc, address) {
            if (!acc.includes(address.state)) {
                acc.push(address.state);
            }
            return acc;
        }, []).sort(); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["shareReplay"])(1));
    };
    TaxLocationService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_6__["defineInjectable"]({ factory: function TaxLocationService_Factory() { return new TaxLocationService(_angular_core__WEBPACK_IMPORTED_MODULE_6__["inject"](_entity_selectors__WEBPACK_IMPORTED_MODULE_3__["EntitySelectors"])); }, token: TaxLocationService, providedIn: "root" });
    return TaxLocationService;
}());



/***/ }),

/***/ "./src/app/store/entity/entity-services/user.service.ts":
/*!**************************************************************!*\
  !*** ./src/app/store/entity/entity-services/user.service.ts ***!
  \**************************************************************/
/*! exports provided: UserService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserService", function() { return UserService; });
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./company-entity-helper.service */ "./src/app/store/entity/entity-services/company-entity-helper.service.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var UserService = /** @class */ (function (_super) {
    __extends(UserService, _super);
    function UserService(helper) {
        var _this = _super.call(this, 'User', helper.collectionServiceElementsFactory) || this;
        _this.helper = helper;
        /**
         * Observable of the id of the current user for this account
         * Not necessarily the authenticated user who could be an admin acting on the current user's behalf.
         */
        _this.currentUserId$ = _this.helper.currentUserId$;
        /**
         * Observable of the current user for this account
         * Not necessarily the authenticated user who could be an admin acting on the current user's behalf.
         */
        _this.currentUser$ = _this.helper.currentUser$;
        /** emits true when the current company is "read-only" and saves are disallowed. */
        _this.readOnly$ = _this.helper.readOnly$;
        return _this;
    }
    /**
     * Add a new user.
     * NB: this user is not made the current user
     * @param newUser Data for a new user
     */
    UserService.prototype.addUser = function (newUser) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])('Do not call add. Create a User through sign-up');
    };
    UserService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function UserService_Factory() { return new UserService(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_company_entity_helper_service__WEBPACK_IMPORTED_MODULE_2__["CompanyEntityHelperService"])); }, token: UserService, providedIn: "root" });
    return UserService;
}(ngrx_data__WEBPACK_IMPORTED_MODULE_0__["EntityCollectionServiceBase"]));



/***/ }),

/***/ "./src/app/store/entity/entity-store.module.ts":
/*!*****************************************************!*\
  !*** ./src/app/store/entity/entity-store.module.ts ***!
  \*****************************************************/
/*! exports provided: EntityStoreModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EntityStoreModule", function() { return EntityStoreModule; });
var EntityStoreModule = /** @class */ (function () {
    function EntityStoreModule() {
    }
    return EntityStoreModule;
}());



/***/ }),

/***/ "./src/app/store/entity/index.ts":
/*!***************************************!*\
  !*** ./src/app/store/entity/index.ts ***!
  \***************************************/
/*! exports provided: EntitySelectors, EntityDispatcher, CompanyService, DocumentPackageService, EarningService, EmployeeService, HouseholdFilersService, getEmployeeId, ReviewService, AddressService, AncillaryService, CompanyAncillaryService, CompanyEarningService, CompanyTaxService, CurrentCompanyEntityCollectionService, CompanyDeductionService, DeductionService, DocumentService, EmployeePaymentMethodService, EmployeeDeductionService, EmployeeTaxService, EnvelopeService, EnvelopeSignerService, StatsService, EmployeeTaxLocation, TaxLocationService, UserService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _entity_dispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entity-dispatcher */ "./src/app/store/entity/entity-dispatcher.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EntityDispatcher", function() { return _entity_dispatcher__WEBPACK_IMPORTED_MODULE_0__["EntityDispatcher"]; });

/* harmony import */ var _entity_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./entity-selectors */ "./src/app/store/entity/entity-selectors.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EntitySelectors", function() { return _entity_selectors__WEBPACK_IMPORTED_MODULE_1__["EntitySelectors"]; });

/* harmony import */ var _entity_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./entity-services */ "./src/app/store/entity/entity-services/index.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["CompanyService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DocumentPackageService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["DocumentPackageService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EarningService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["EarningService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["EmployeeService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HouseholdFilersService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["HouseholdFilersService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getEmployeeId", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["getEmployeeId"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReviewService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["ReviewService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AddressService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["AddressService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AncillaryService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["AncillaryService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyAncillaryService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["CompanyAncillaryService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyEarningService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["CompanyEarningService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyTaxService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["CompanyTaxService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CurrentCompanyEntityCollectionService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["CurrentCompanyEntityCollectionService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompanyDeductionService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["CompanyDeductionService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DeductionService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["DeductionService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DocumentService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["DocumentService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeePaymentMethodService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["EmployeePaymentMethodService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeDeductionService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["EmployeeDeductionService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeTaxService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["EmployeeTaxService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EnvelopeService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["EnvelopeService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EnvelopeSignerService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["EnvelopeSignerService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StatsService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["StatsService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmployeeTaxLocation", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["EmployeeTaxLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxLocationService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["TaxLocationService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserService", function() { return _entity_services__WEBPACK_IMPORTED_MODULE_2__["UserService"]; });






/***/ }),

/***/ "./src/app/store/entity/sort-comparers.ts":
/*!************************************************!*\
  !*** ./src/app/store/entity/sort-comparers.ts ***!
  \************************************************/
/*! exports provided: sortByName, sortByFirstLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortByName", function() { return sortByName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortByFirstLast", function() { return sortByFirstLast; });
/** Sort Comparer to sort the entity collection by its name property */
function sortByName(a, b) {
    try {
        return a.name.localeCompare(b.name);
    }
    catch (error) {
        return 0;
    }
}
/** Sort Comparer to sort the entity collection by its name property */
function sortByFirstLast(a, b) {
    try {
        var first = a.firstName.localeCompare(b.firstName);
        return first === 0 ? a.lastName.localeCompare(b.lastName) : first;
    }
    catch (error) {
        return 0;
    }
}


/***/ }),

/***/ "./src/app/store/entity/sp-entity-action-factory.ts":
/*!**********************************************************!*\
  !*** ./src/app/store/entity/sp-entity-action-factory.ts ***!
  \**********************************************************/
/*! exports provided: SpEntityActionFactory, entityActionFactoryProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpEntityActionFactory", function() { return SpEntityActionFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "entityActionFactoryProvider", function() { return entityActionFactoryProvider; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var ngrx_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngrx-data */ "./node_modules/ngrx-data/fesm5/ngrx-data.js");
/* harmony import */ var _entity_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./entity-metadata */ "./src/app/store/entity/entity-metadata.ts");
/* harmony import */ var _core_services_id_generator_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @core/services/id-generator.service */ "./src/app/core/services/id-generator.service.ts");
/* harmony import */ var _session_session_selectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @session/session-selectors */ "./src/app/store/session/session-selectors.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};








var ADD_ONE_OPS = [
    ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityOp"].ADD_ONE,
    ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityOp"].SAVE_ADD_ONE,
    ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityOp"].UPSERT_ONE
];
var SpEntityActionFactory = /** @class */ (function (_super) {
    __extends(SpEntityActionFactory, _super);
    function SpEntityActionFactory(idGenerator, sessionSelectors) {
        var _this = _super.call(this) || this;
        _this.idGenerator = idGenerator;
        _this.sessionSelectors = sessionSelectors;
        // Can change as administrator moves from company to company
        _this.sessionSelectors.currentCompanyId$.subscribe(function (id) { return _this.currentCompanyId = id; });
        return _this;
    }
    /**
     * Create an EntityAction to perform an operation (op) for a particular entity type
     * (entityName) with optional data and other optional flags
     * @param payload Defines the EntityAction and its options
     */
    SpEntityActionFactory.prototype.createCore = function (payload) {
        var data = payload.data;
        // if payload has data, inspect and possibly correct it
        if (data != null) {
            var entityName = payload.entityName, entityOp_1 = payload.entityOp;
            // deletes are disallowed
            if (entityOp_1 === ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityOp"].SAVE_DELETE_ONE) {
                payload.error = new Error("This app does not support deletion of " + entityName);
            }
            else if (ADD_ONE_OPS.find(function (aop) { return aop === entityOp_1; })) {
                // This is an add operation for a single entity
                // Try to preserve data's object identity but
                // clone it if changes are necessary.
                var entity = data; // entity is potential clone
                if (!entity.id) {
                    // generate missing entity.id
                    entity = Object.assign({}, entity); // clone entity, stripping off any prototype
                    entity.id = this.idGenerator.generateId();
                }
                if (!entity.companyId && !_entity_metadata__WEBPACK_IMPORTED_MODULE_2__["entitiesWithoutCompanyId"][entityName]) {
                    // This entity lacks its required companyId. Assign it to current company id
                    if (!this.currentCompanyId) {
                        payload.error = new Error(entityName + " is missing \"companyId\" and there is no current Company");
                    }
                    else {
                        if (entity === data) {
                            // clone if not already cloned, stripping off any prototype
                            entity = Object.assign({}, entity);
                        }
                        entity.companyId = this.currentCompanyId;
                    }
                }
                if (entity !== data) {
                    payload = __assign({}, payload, { data: entity });
                }
            }
        }
        return _super.prototype.createCore.call(this, payload);
    };
    SpEntityActionFactory.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"]({ factory: function SpEntityActionFactory_Factory() { return new SpEntityActionFactory(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](_core_services_id_generator_service__WEBPACK_IMPORTED_MODULE_3__["IdGeneratorService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](_session_session_selectors__WEBPACK_IMPORTED_MODULE_4__["SessionSelectors"])); }, token: SpEntityActionFactory, providedIn: "root" });
    return SpEntityActionFactory;
}(ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityActionFactory"]));

var entityActionFactoryProvider = {
    provide: ngrx_data__WEBPACK_IMPORTED_MODULE_1__["EntityActionFactory"],
    useClass: SpEntityActionFactory
};


/***/ }),

/***/ "./src/app/store/session/actions.ts":
/*!******************************************!*\
  !*** ./src/app/store/session/actions.ts ***!
  \******************************************/
/*! exports provided: LOAD_COMPANY_PACKAGE_ERROR, SET_AUTH_USER, SET_CURRENT_ACCOUNT, SET_CURRENT_COMPANY_ETAG, SET_CURRENT_EMPLOYEE_ID, SET_COMPANY_PACKAGE_LOADED, SET_COMPANY_PACKAGE_LOADING, SET_READ_ONLY, LoadCompanyPackageError, SetAuthUser, SetCompanyEtag, SetCompanyPackageLoaded, SetCompanyPackageLoading, SetCurrentAccount, SetCurrentEmployeeId, SetReadOnly */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOAD_COMPANY_PACKAGE_ERROR", function() { return LOAD_COMPANY_PACKAGE_ERROR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_AUTH_USER", function() { return SET_AUTH_USER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_CURRENT_ACCOUNT", function() { return SET_CURRENT_ACCOUNT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_CURRENT_COMPANY_ETAG", function() { return SET_CURRENT_COMPANY_ETAG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_CURRENT_EMPLOYEE_ID", function() { return SET_CURRENT_EMPLOYEE_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_COMPANY_PACKAGE_LOADED", function() { return SET_COMPANY_PACKAGE_LOADED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_COMPANY_PACKAGE_LOADING", function() { return SET_COMPANY_PACKAGE_LOADING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_READ_ONLY", function() { return SET_READ_ONLY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadCompanyPackageError", function() { return LoadCompanyPackageError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SetAuthUser", function() { return SetAuthUser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SetCompanyEtag", function() { return SetCompanyEtag; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SetCompanyPackageLoaded", function() { return SetCompanyPackageLoaded; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SetCompanyPackageLoading", function() { return SetCompanyPackageLoading; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SetCurrentAccount", function() { return SetCurrentAccount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SetCurrentEmployeeId", function() { return SetCurrentEmployeeId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SetReadOnly", function() { return SetReadOnly; });
var LOAD_COMPANY_PACKAGE_ERROR = 'sp/company-package-load/error';
var SET_AUTH_USER = 'sp/auth-user/set';
var SET_CURRENT_ACCOUNT = 'sp/current/account/set';
var SET_CURRENT_COMPANY_ETAG = 'sp/current/company/etag/set';
var SET_CURRENT_EMPLOYEE_ID = 'sp/current/employee/employee-id/set';
var SET_COMPANY_PACKAGE_LOADED = 'sp/company-package-loaded/set';
var SET_COMPANY_PACKAGE_LOADING = 'sp/company-package-loading/set';
var SET_READ_ONLY = 'sp/read-only/set';
/** Create action containing the error when fail to load data */
var LoadCompanyPackageError = /** @class */ (function () {
    function LoadCompanyPackageError(payload) {
        this.payload = payload;
        this.type = LOAD_COMPANY_PACKAGE_ERROR;
    }
    return LoadCompanyPackageError;
}());

var SetAuthUser = /** @class */ (function () {
    function SetAuthUser(payload) {
        this.payload = payload;
        this.type = SET_AUTH_USER;
    }
    return SetAuthUser;
}());

var SetCompanyEtag = /** @class */ (function () {
    function SetCompanyEtag(payload) {
        this.payload = payload;
        this.type = SET_CURRENT_COMPANY_ETAG;
    }
    return SetCompanyEtag;
}());

var SetCompanyPackageLoaded = /** @class */ (function () {
    function SetCompanyPackageLoaded(payload) {
        this.payload = payload;
        this.type = SET_COMPANY_PACKAGE_LOADED;
    }
    return SetCompanyPackageLoaded;
}());

var SetCompanyPackageLoading = /** @class */ (function () {
    function SetCompanyPackageLoading(payload) {
        this.payload = payload;
        this.type = SET_COMPANY_PACKAGE_LOADING;
    }
    return SetCompanyPackageLoading;
}());

var SetCurrentAccount = /** @class */ (function () {
    function SetCurrentAccount(currentCompanyId, currentUserId) {
        this.type = SET_CURRENT_ACCOUNT;
        this.payload = { currentCompanyId: currentCompanyId, currentUserId: currentUserId };
    }
    return SetCurrentAccount;
}());

var SetCurrentEmployeeId = /** @class */ (function () {
    function SetCurrentEmployeeId(payload) {
        this.payload = payload;
        this.type = SET_CURRENT_EMPLOYEE_ID;
    }
    return SetCurrentEmployeeId;
}());

var SetReadOnly = /** @class */ (function () {
    function SetReadOnly(payload) {
        this.payload = payload;
        this.type = SET_READ_ONLY;
    }
    return SetReadOnly;
}());



/***/ }),

/***/ "./src/app/store/session/index.ts":
/*!****************************************!*\
  !*** ./src/app/store/session/index.ts ***!
  \****************************************/
/*! exports provided: SessionService, SessionDispatcher, selectSessionState, SessionSelectors, ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _session_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./session.service */ "./src/app/store/session/session.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionService", function() { return _session_service__WEBPACK_IMPORTED_MODULE_0__["SessionService"]; });

/* harmony import */ var _session_dispatcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./session-dispatcher */ "./src/app/store/session/session-dispatcher.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionDispatcher", function() { return _session_dispatcher__WEBPACK_IMPORTED_MODULE_1__["SessionDispatcher"]; });

/* harmony import */ var _session_selectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./session-selectors */ "./src/app/store/session/session-selectors.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectSessionState", function() { return _session_selectors__WEBPACK_IMPORTED_MODULE_2__["selectSessionState"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SessionSelectors", function() { return _session_selectors__WEBPACK_IMPORTED_MODULE_2__["SessionSelectors"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵ0", function() { return _session_selectors__WEBPACK_IMPORTED_MODULE_2__["ɵ0"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵ1", function() { return _session_selectors__WEBPACK_IMPORTED_MODULE_2__["ɵ1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵ2", function() { return _session_selectors__WEBPACK_IMPORTED_MODULE_2__["ɵ2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵ3", function() { return _session_selectors__WEBPACK_IMPORTED_MODULE_2__["ɵ3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵ4", function() { return _session_selectors__WEBPACK_IMPORTED_MODULE_2__["ɵ4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵ5", function() { return _session_selectors__WEBPACK_IMPORTED_MODULE_2__["ɵ5"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵ6", function() { return _session_selectors__WEBPACK_IMPORTED_MODULE_2__["ɵ6"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵ7", function() { return _session_selectors__WEBPACK_IMPORTED_MODULE_2__["ɵ7"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵ8", function() { return _session_selectors__WEBPACK_IMPORTED_MODULE_2__["ɵ8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ɵ9", function() { return _session_selectors__WEBPACK_IMPORTED_MODULE_2__["ɵ9"]; });






/***/ }),

/***/ "./src/app/store/session/reducer.ts":
/*!******************************************!*\
  !*** ./src/app/store/session/reducer.ts ***!
  \******************************************/
/*! exports provided: SESSION_STATE, initialState, sessionReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SESSION_STATE", function() { return SESSION_STATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sessionReducer", function() { return sessionReducer; });
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions */ "./src/app/store/session/actions.ts");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};

var SESSION_STATE = 'session';
var initialState = {
    authUser: null,
    companyPackageLoaded: false,
    companyPackageLoading: false,
    currentCompanyId: null,
    currentCompanyEtag: '',
    currentEmployeeId: null,
    currentUserId: null,
    readOnly: false
};
function sessionReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        // Keep cases in frequency of call order
        // Set ETAG is called a ton
        case _actions__WEBPACK_IMPORTED_MODULE_0__["SET_CURRENT_COMPANY_ETAG"]: {
            var currentCompanyEtag = (action.payload || '').trim();
            var currentCompanyId = state.currentCompanyId;
            // Set it the etag if empty string OR
            // if etag changed AND the current companyId is the same as the etag's companyId
            var setIt = currentCompanyEtag === '' ||
                (
                // etag changed and ...
                state.currentCompanyEtag !== currentCompanyEtag &&
                    // new etag is for the current company
                    // etag format is `{companyId}/{some-string}`
                    currentCompanyId && currentCompanyId === currentCompanyEtag.split('/')[0]);
            return setIt ? __assign({}, state, { currentCompanyEtag: currentCompanyEtag }) : state;
        }
        case _actions__WEBPACK_IMPORTED_MODULE_0__["SET_CURRENT_EMPLOYEE_ID"]: {
            var currentEmployeeId = normalizeId(action.payload);
            // Remove extra spaces and normalize empty to null
            return currentEmployeeId === state.currentEmployeeId ? state : __assign({}, state, { currentEmployeeId: currentEmployeeId });
        }
        case _actions__WEBPACK_IMPORTED_MODULE_0__["SET_COMPANY_PACKAGE_LOADED"]: {
            var companyPackageLoaded = !!action.payload;
            return companyPackageLoaded === state.companyPackageLoaded ? state : __assign({}, state, { companyPackageLoaded: companyPackageLoaded });
        }
        case _actions__WEBPACK_IMPORTED_MODULE_0__["SET_COMPANY_PACKAGE_LOADING"]: {
            var companyPackageLoading = !!action.payload;
            return companyPackageLoading === state.companyPackageLoading ? state : __assign({}, state, { companyPackageLoading: companyPackageLoading });
        }
        case _actions__WEBPACK_IMPORTED_MODULE_0__["SET_CURRENT_ACCOUNT"]: {
            var currentCompanyId = normalizeId(action.payload.currentCompanyId);
            var currentUserId = normalizeId(action.payload.currentUserId);
            // If no change in company and user ids, the account hasn't changed => same state
            if (currentCompanyId === state.currentCompanyId &&
                currentUserId === state.currentUserId) {
                return state;
            }
            // Changing (or clearing) the current account
            var currentEmployeeId = null;
            // Assume change ids before loading new account
            // Therefore the new account means cannot be loaded.
            var companyPackageLoaded = false;
            // Clear the etag if the proposed current companyId is null or not same as the etag's companyId
            var currentCompanyEtag = state.currentCompanyEtag || '';
            if (!currentCompanyId || currentCompanyEtag.split('/')[0] !== currentCompanyId) {
                currentCompanyEtag = '';
            }
            return __assign({}, state, { currentCompanyEtag: currentCompanyEtag,
                currentCompanyId: currentCompanyId,
                currentEmployeeId: currentEmployeeId,
                currentUserId: currentUserId,
                companyPackageLoaded: companyPackageLoaded });
        }
        case _actions__WEBPACK_IMPORTED_MODULE_0__["SET_READ_ONLY"]: {
            var readOnly = !!action.payload;
            return readOnly === state.readOnly ? state : __assign({}, state, { readOnly: readOnly });
        }
        case _actions__WEBPACK_IMPORTED_MODULE_0__["SET_AUTH_USER"]: {
            var authUser = action.payload;
            return authUser === state.authUser ? state : __assign({}, state, { authUser: authUser });
        }
    }
    return state;
}
/** Return trimmed string id or return null if is falsy (null, undefined, empty string). */
function normalizeId(id) {
    return id ? id.toString().trim() || null : null;
}


/***/ }),

/***/ "./src/app/store/session/session-dispatcher.ts":
/*!*****************************************************!*\
  !*** ./src/app/store/session/session-dispatcher.ts ***!
  \*****************************************************/
/*! exports provided: SessionDispatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionDispatcher", function() { return SessionDispatcher; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./actions */ "./src/app/store/session/actions.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");







var SessionDispatcher = /** @class */ (function () {
    function SessionDispatcher(store, logger) {
        this.store = store;
        this.logger = logger;
    }
    SessionDispatcher.prototype.setAuthUser = function (authUser) {
        this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_1__["SetAuthUser"](authUser));
    };
    SessionDispatcher.prototype.setCompanyPackageLoaded = function (isLoaded) {
        this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_1__["SetCompanyPackageLoaded"](isLoaded));
    };
    SessionDispatcher.prototype.setCompanyPackageLoading = function (isLoading) {
        this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_1__["SetCompanyPackageLoading"](isLoading));
    };
    SessionDispatcher.prototype.setCurrentAccount = function (companyId, userId) {
        this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_1__["SetCurrentAccount"](companyId, userId));
    };
    SessionDispatcher.prototype.setCurrentCompanyEtag = function (etag) {
        this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_1__["SetCompanyEtag"](etag));
    };
    SessionDispatcher.prototype.setCurrentEmployeeId = function (employeeId) {
        this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_1__["SetCurrentEmployeeId"](employeeId));
    };
    SessionDispatcher.prototype.setReadOnly = function (readOnly) {
        this.store.dispatch(new _actions__WEBPACK_IMPORTED_MODULE_1__["SetReadOnly"](readOnly));
    };
    SessionDispatcher.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_4__["defineInjectable"]({ factory: function SessionDispatcher_Factory() { return new SessionDispatcher(_angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["Store"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_2__["LoggerService"])); }, token: SessionDispatcher, providedIn: "root" });
    return SessionDispatcher;
}());



/***/ }),

/***/ "./src/app/store/session/session-selectors.ts":
/*!****************************************************!*\
  !*** ./src/app/store/session/session-selectors.ts ***!
  \****************************************************/
/*! exports provided: selectSessionState, SessionSelectors, ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectSessionState", function() { return selectSessionState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionSelectors", function() { return SessionSelectors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ0", function() { return ɵ0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ1", function() { return ɵ1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ2", function() { return ɵ2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ3", function() { return ɵ3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ4", function() { return ɵ4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ5", function() { return ɵ5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ6", function() { return ɵ6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ7", function() { return ɵ7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ8", function() { return ɵ8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ9", function() { return ɵ9; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _reducer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reducer */ "./src/app/store/session/reducer.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");





// #region selectors
var selectSessionState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createFeatureSelector"])(_reducer__WEBPACK_IMPORTED_MODULE_2__["SESSION_STATE"]);
var ɵ0 = function (state) { return state.authUser; };
var selectAuthUser = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSessionState, ɵ0);
var ɵ1 = function (state) { return state.companyPackageLoaded; };
var selectCompanyPackageLoaded = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSessionState, ɵ1);
var ɵ2 = function (state) { return state.companyPackageLoading; };
var selectCompanyPackageLoading = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSessionState, ɵ2);
var ɵ3 = function (state) { return state.currentCompanyEtag; };
var selectCurrentCompanyEtag = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSessionState, ɵ3);
var ɵ4 = function (state) { return state.currentCompanyId; };
var selectCurrentCompanyId = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSessionState, ɵ4);
var ɵ5 = function (state) { return state.currentEmployeeId; };
var selectCurrentEmployeeId = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSessionState, ɵ5);
var ɵ6 = function (state) { return state.currentUserId; };
var selectCurrentUserId = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSessionState, ɵ6);
var ɵ7 = function (state) { return state.authUser && state.authUser.userRole === _model__WEBPACK_IMPORTED_MODULE_1__["UserRole"].Administrator; };
var selectIsAdmin = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSessionState, ɵ7);
var ɵ8 = function (state) { return state.authUser != null; };
var selectIsSignedIn = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSessionState, ɵ8);
var ɵ9 = function (state) { return state.readOnly; };
var selectReadOnly = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSessionState, ɵ9);
// #endregion selectors
var SessionSelectors = /** @class */ (function () {
    function SessionSelectors(store) {
        this.store = store;
        this.session$ = store.select(selectSessionState);
        this.authUser$ = store.select(selectAuthUser);
        this.companyPackageLoaded$ = store.select(selectCompanyPackageLoaded);
        this.companyPackageLoading$ = store.select(selectCompanyPackageLoading);
        this.currentCompanyEtag$ = store.select(selectCurrentCompanyEtag);
        this.currentCompanyId$ = store.select(selectCurrentCompanyId);
        this.currentEmployeeId$ = store.select(selectCurrentEmployeeId);
        this.currentUserId$ = store.select(selectCurrentUserId);
        this.isAdmin$ = store.select(selectIsAdmin);
        this.isSignedIn$ = store.select(selectIsSignedIn);
        this.readOnly$ = store.select(selectReadOnly);
    }
    SessionSelectors.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_3__["defineInjectable"]({ factory: function SessionSelectors_Factory() { return new SessionSelectors(_angular_core__WEBPACK_IMPORTED_MODULE_3__["inject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["Store"])); }, token: SessionSelectors, providedIn: "root" });
    return SessionSelectors;
}());




/***/ }),

/***/ "./src/app/store/session/session-store.module.ts":
/*!*******************************************************!*\
  !*** ./src/app/store/session/session-store.module.ts ***!
  \*******************************************************/
/*! exports provided: SessionStoreModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionStoreModule", function() { return SessionStoreModule; });
var SessionStoreModule = /** @class */ (function () {
    function SessionStoreModule() {
    }
    return SessionStoreModule;
}());



/***/ }),

/***/ "./src/app/store/session/session.service.ts":
/*!**************************************************!*\
  !*** ./src/app/store/session/session.service.ts ***!
  \**************************************************/
/*! exports provided: SessionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionService", function() { return SessionService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs-spy/operators/tag */ "./node_modules/rxjs-spy/operators/tag.js");
/* harmony import */ var rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @model */ "./src/app/model/index.ts");
/* harmony import */ var _entity_company_package_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @entity/company-package.service */ "./src/app/store/entity/company-package.service.ts");
/* harmony import */ var _entity_entity_dispatcher__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../entity/entity-dispatcher */ "./src/app/store/entity/entity-dispatcher.ts");
/* harmony import */ var _entity_entity_selectors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../entity/entity-selectors */ "./src/app/store/entity/entity-selectors.ts");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var _entity_entity_metadata__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @entity/entity-metadata */ "./src/app/store/entity/entity-metadata.ts");
/* harmony import */ var _core_services_id_generator_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @core/services/id-generator.service */ "./src/app/core/services/id-generator.service.ts");
/* harmony import */ var _core_services_logger_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @core/services/logger.service */ "./src/app/core/services/logger.service.ts");
/* harmony import */ var _session_dispatcher__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./session-dispatcher */ "./src/app/store/session/session-dispatcher.ts");
/* harmony import */ var _session_selectors__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./session-selectors */ "./src/app/store/session/session-selectors.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");























var SessionService = /** @class */ (function () {
    function SessionService(companyPackageService, entityDispatcher, entitySelectors, http, idGenerator, logger, sessionDispatcher, sessionSelectors) {
        this.companyPackageService = companyPackageService;
        this.entityDispatcher = entityDispatcher;
        this.entitySelectors = entitySelectors;
        this.http = http;
        this.idGenerator = idGenerator;
        this.logger = logger;
        this.sessionDispatcher = sessionDispatcher;
        this.sessionSelectors = sessionSelectors;
        this.authUser$ = sessionSelectors.authUser$;
        this.companyPackageLoaded$ = sessionSelectors.companyPackageLoaded$;
        this.companyPackageLoading$ = sessionSelectors.companyPackageLoading$;
        this.currentCompanyId$ = sessionSelectors.currentCompanyId$;
        this.currentEmployeeId$ = sessionSelectors.currentEmployeeId$;
        this.currentUserId$ = sessionSelectors.currentUserId$;
        this.currentCompanyEtag$ = sessionSelectors.currentCompanyEtag$;
        this.isAdmin$ = sessionSelectors.isAdmin$;
        this.isSignedIn$ = sessionSelectors.isSignedIn$;
        this.readOnly$ = sessionSelectors.readOnly$;
        this.currentCompany$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.currentCompanyId$, entitySelectors.company.entityMap$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var id = _a[0], entityMap = _a[1];
            return entityMap[id];
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])(), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__["tag"])('currentCompany$'), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
        this.currentEmployee$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.currentEmployeeId$, entitySelectors.employee.entityMap$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var id = _a[0], entityMap = _a[1];
            return entityMap[id];
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])(), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__["tag"])('currentEmployee$'), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
        this.currentUser$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.currentUserId$, entitySelectors.user.entityMap$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_a) {
            var id = _a[0], entityMap = _a[1];
            return id ? entityMap[id] : null;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])(), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__["tag"])('currentUser$'), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
        this.loadAccountWhenRegularUserSignsIn();
        this.setAccountStateTransitions$();
    }
    /** Clear the store of all company-specific collections + the User collection. A must during sign out */
    SessionService.prototype.clearCurrentAccount = function () {
        this.setReadOnly(false);
        this.sessionDispatcher.setCurrentAccount(null, null);
        var companyEntityTypes = Object.keys(_entity_entity_metadata__WEBPACK_IMPORTED_MODULE_9__["entityMetadata"]).filter(_entity_entity_metadata__WEBPACK_IMPORTED_MODULE_9__["isCompanyEntity"]);
        this.entityDispatcher.clearCollections(companyEntityTypes);
    };
    /**
     * Generate a new GUID-like string identifier
     */
    SessionService.prototype.generateId = function () {
        return this.idGenerator.generateId();
    };
    /**
     * Load the company package for a {companyId, userId} pair
     * Clears the company collections
     * and loads the company package for the given company and user.
     * Set current company and user.
     * @param companyId The id of the company to load.
     * @param userId The id of the current user for the account.
     *
     * @returns A COLD, terminating observable like an HttpClient method.
     * You MUST SUBSCRIBE to make it work.
     * You do not have to unsubscribe.
     * Emits true if succeeded; else returns error on the error channel.
     */
    SessionService.prototype.loadAccountByCompanyUserIds = function (companyId, userId) {
        var _this = this;
        this.clearCurrentAccount();
        if (!companyId) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])("Cannot load account without a company id");
        }
        if (!userId) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])("Cannot load account without a user id");
        }
        this.sessionDispatcher.setCurrentAccount(companyId, userId);
        return this.companyPackageService.loadCompanyPackageByCompanyId(companyId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (error) {
            _this.clearCurrentAccount();
            // TODO: The app will die because bound to data no longer in cache. Navigate to safety first?
            var emsg = "SessionService.loadAccountByCompanyUserIds failed for company: " + companyId + " and user: " + userId;
            _this.logger.error(emsg);
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])(emsg);
        }), 
        // return true upon success; don't want caller looking at the raw server data.
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (_) { return _this.isAdmin$; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (isAdmin) {
            // admin starts with ReadOnly view of account; regular user can edit
            _this.setReadOnly(isAdmin);
            return true;
        }), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__["tag"])('loadAccountByCompanyUserIds'));
    };
    SessionService.prototype.loadAccountWhenRegularUserSignsIn = function () {
        var _this = this;
        this.authUser$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["withLatestFrom"])(this.isAdmin$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["switchMap"])(function (_a) {
            var authUser = _a[0], isAdmin = _a[1];
            if (authUser && !isAdmin) {
                // This changed AuthUser is a regular user
                // Change the current account to this user, who becomes the current user,
                // and load that user's account data.
                // Do not wait for this to succeed.
                // If something must wait, such as a navigation guard,
                // it should look at the state of companyPackageLoading$.
                return _this.loadAccountByCompanyUserIds(authUser.companyId, authUser.id);
            }
            else {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(false);
            }
        }))
            .subscribe();
    };
    /**
     * Reload the CompanyPackage for the current company and user.
     * Error if either is missing/null
     * @returns Cold, terminating observable which succeeds if the package reloaded
     * or fails if it did not.
     * You must subscribe but do not have to unsubscribe.
     * Screwed if it fails because the attempt first erases the data in cache.
     * TODO: Could recover by holding EntityCache copy and restoring it on failure.
     */
    SessionService.prototype.reloadCurrentCompanyPackage = function () {
        var _this = this;
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.currentCompanyId$, this.currentUserId$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (_a) {
            var companyId = _a[0], userId = _a[1];
            if (companyId && userId) {
                return _this.loadAccountByCompanyUserIds(companyId, userId);
            }
            else {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["throwError"])('No companyId or userId');
            }
        }), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__["tag"])('reloadCurrentCompanyPackage'));
    };
    /** Setup the observable of AccountStateTransitions */
    SessionService.prototype.setAccountStateTransitions$ = function () {
        var _this = this;
        this.accountStateTransitions$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["defer"])(function () {
            if (_this.accountStateTransitionsCached) {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(_this.accountStateTransitionsCached);
            }
            return _this.http.get(_environment__WEBPACK_IMPORTED_MODULE_8__["environment"].apiRoot + "/account/accountStateTransitions").pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (response) {
                return response.reduce(function (prev, curr) {
                    prev[curr.current] = prev[curr.current] || {};
                    prev[curr.current][curr.next] = {
                        next: curr.next,
                        automaticTransition: curr.automaticTransition,
                        allowAdminOverride: curr.allowAdminOverride,
                        allowWithErrors: curr.allowWithErrors,
                        hideInUi: curr.hideInUi
                    };
                    return prev;
                }, {});
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (t) { return _this.accountStateTransitionsCached = t; }));
        }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
    };
    /**
     * Change the current company's AccountStatus by sending a setStatus request to the server.
     * If the server replies with success, reload the company package;
     * the company should have the updated AccountStatus.
     * @param status Change to this AccountStatus
     * @returns Cold, terminating observable which succeeds if the status changed
     * or fails if it did not.
     * You must subscribe but do not have to unsubscribe.
     */
    SessionService.prototype.setAccountStatus = function (status) {
        var _this = this;
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"])(this.currentUserId$, this.currentCompany$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["first"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (_a) {
            var userId = _a[0], company = _a[1];
            if (!userId || !company) {
                throw new Error('No current user or company');
            }
            else if (!_model__WEBPACK_IMPORTED_MODULE_4__["AccountStatusCodes"].getByValue(status)) {
                throw new Error("Invalid status code, \"" + status + "\"");
            }
            if (company.status === status) {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])([]); // no need to change
            }
            var companyId = company.id;
            var url = _environment__WEBPACK_IMPORTED_MODULE_8__["environment"].apiRoot + "/account/" + companyId + "/status";
            return _this.http.post(url, { status: status }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])(function (r) { return _this.loadAccountByCompanyUserIds(companyId, userId).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_) { return r; })); }));
        }), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__["tag"])('setAccountStatus'));
    };
    /** Set the etag for the current company  */
    SessionService.prototype.setCurrentCompanyEtag = function (etag) {
        this.sessionDispatcher.setCurrentCompanyEtag(etag);
    };
    SessionService.prototype.setCurrentEmployeeId = function (id) {
        this.sessionDispatcher.setCurrentEmployeeId(id);
    };
    /** Set session read-only flag to true or false. */
    SessionService.prototype.setReadOnly = function (readOnly) {
        this.sessionDispatcher.setReadOnly(readOnly);
    };
    SessionService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_14__["defineInjectable"]({ factory: function SessionService_Factory() { return new SessionService(_angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_entity_company_package_service__WEBPACK_IMPORTED_MODULE_5__["CompanyPackageService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_entity_entity_dispatcher__WEBPACK_IMPORTED_MODULE_6__["EntityDispatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_7__["EntitySelectors"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_core_services_id_generator_service__WEBPACK_IMPORTED_MODULE_10__["IdGeneratorService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_core_services_logger_service__WEBPACK_IMPORTED_MODULE_11__["LoggerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_session_dispatcher__WEBPACK_IMPORTED_MODULE_12__["SessionDispatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_14__["inject"](_session_selectors__WEBPACK_IMPORTED_MODULE_13__["SessionSelectors"])); }, token: SessionService, providedIn: "root" });
    return SessionService;
}());



/***/ }),

/***/ "./src/app/store/validation/default-validators.ts":
/*!********************************************************!*\
  !*** ./src/app/store/validation/default-validators.ts ***!
  \********************************************************/
/*! exports provided: RequiredValidator, MinLengthValidator, MaxLengthValidator, RegExpValidator, RangeValidator, InvalidValuesValidator, CurrencyValidator, CompareValidator, DateValidator, makeZipCodeValidator, makeEmailValidator, makePhoneValidator, makeCurrencyValidator, makeSocialSecurityNumberValidator, makeNumericValidator, makeFeinValidator, ExpressionValidator, defaultValidatorProviders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequiredValidator", function() { return RequiredValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MinLengthValidator", function() { return MinLengthValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaxLengthValidator", function() { return MaxLengthValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RegExpValidator", function() { return RegExpValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RangeValidator", function() { return RangeValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvalidValuesValidator", function() { return InvalidValuesValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CurrencyValidator", function() { return CurrencyValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompareValidator", function() { return CompareValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateValidator", function() { return DateValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeZipCodeValidator", function() { return makeZipCodeValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeEmailValidator", function() { return makeEmailValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makePhoneValidator", function() { return makePhoneValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeCurrencyValidator", function() { return makeCurrencyValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeSocialSecurityNumberValidator", function() { return makeSocialSecurityNumberValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeNumericValidator", function() { return makeNumericValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeFeinValidator", function() { return makeFeinValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpressionValidator", function() { return ExpressionValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultValidatorProviders", function() { return defaultValidatorProviders; });
/* harmony import */ var _validation_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validation.service */ "./src/app/store/validation/validation.service.ts");
/* harmony import */ var _validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validator */ "./src/app/store/validation/validator.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};



var RequiredValidator = /** @class */ (function (_super) {
    __extends(RequiredValidator, _super);
    function RequiredValidator(group, validatorContext) {
        return _super.call(this, 'required', group, function (value, context) { return value != null && (typeof value !== 'string' || value !== ''); }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || '%displayName% is required' })) || this;
    }
    RequiredValidator.create = function (group, context) {
        return new RequiredValidator(group, context);
    };
    return RequiredValidator;
}(_validator__WEBPACK_IMPORTED_MODULE_1__["Validator"]));

var MinLengthValidator = /** @class */ (function (_super) {
    __extends(MinLengthValidator, _super);
    function MinLengthValidator(group, validatorContext) {
        return _super.call(this, 'minLength', group, function (value, context) {
            if (!value) {
                return true;
            }
            return typeof (value) === 'string' && value.length >= context.minLength;
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || MinLengthValidator.messageTemplate })) || this;
    }
    MinLengthValidator.create = function (group, context) {
        return new MinLengthValidator(group, context);
    };
    MinLengthValidator.messageTemplate = '%displayName% must be a string with at least %minLength% characters';
    return MinLengthValidator;
}(_validator__WEBPACK_IMPORTED_MODULE_1__["Validator"]));

var MaxLengthValidator = /** @class */ (function (_super) {
    __extends(MaxLengthValidator, _super);
    function MaxLengthValidator(group, validatorContext) {
        return _super.call(this, 'maxLength', group, function (value, context) {
            if (!value) {
                return true;
            }
            return typeof (value) === 'string' && value.length <= context.maxLength;
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || MaxLengthValidator.messageTemplate })) || this;
    }
    MaxLengthValidator.create = function (group, context) {
        return new MaxLengthValidator(group, context);
    };
    MaxLengthValidator.messageTemplate = '%displayName% must be a string with at most %maxLength% characters';
    return MaxLengthValidator;
}(_validator__WEBPACK_IMPORTED_MODULE_1__["Validator"]));

var RegExpValidator = /** @class */ (function (_super) {
    __extends(RegExpValidator, _super);
    function RegExpValidator(name, group, validatorContext) {
        return _super.call(this, name, group, function (value, context) {
            if (!value) {
                return true;
            }
            var expression = context.expression;
            return typeof (value) === 'string' && expression.test(value);
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || RegExpValidator.messageTemplate })) || this;
    }
    RegExpValidator.create = function (name, group, context) {
        return new RegExpValidator(name, group, context);
    };
    RegExpValidator.messageTemplate = 'The %displayName% \'%value%\' does not match \'%expression%\'';
    return RegExpValidator;
}(_validator__WEBPACK_IMPORTED_MODULE_1__["Validator"]));

var RangeValidator = /** @class */ (function (_super) {
    __extends(RangeValidator, _super);
    function RangeValidator(group, validatorContext) {
        return _super.call(this, 'range', group, function (value, context) {
            if (!value) {
                return true;
            }
            return value >= context.minValue && value <= context.maxValue;
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || RangeValidator.messageTemplate })) || this;
    }
    RangeValidator.create = function (group, context) {
        return new RangeValidator(group, context);
    };
    RangeValidator.messageTemplate = '%displayName% must be between the values of %minValue% and %maxValue%';
    return RangeValidator;
}(_validator__WEBPACK_IMPORTED_MODULE_1__["Validator"]));

var InvalidValuesValidator = /** @class */ (function (_super) {
    __extends(InvalidValuesValidator, _super);
    function InvalidValuesValidator(group, validatorContext) {
        var _this = _super.call(this, 'invalidValues', group, function (value, context) {
            if (!value) {
                return true;
            }
            return !(context.values || []).some(function (v) { return _this.test(v, value); });
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || InvalidValuesValidator.messageTemplate })) || this;
        return _this;
    }
    InvalidValuesValidator.create = function (group, context) {
        return new InvalidValuesValidator(group, context);
    };
    InvalidValuesValidator.prototype.test = function (expression, value) {
        var match = expression.match(/\/(.*)\//);
        if (match) {
            return new RegExp(match[1]).test(value);
        }
        return expression === value;
    };
    InvalidValuesValidator.messageTemplate = 'The value \'%value%\' is not a valid input for %displayName%';
    return InvalidValuesValidator;
}(_validator__WEBPACK_IMPORTED_MODULE_1__["Validator"]));

var CurrencyValidator = /** @class */ (function (_super) {
    __extends(CurrencyValidator, _super);
    function CurrencyValidator(group, validatorContext) {
        var _this = _super.call(this, 'currency', group, function (value, context) {
            if (!value) {
                return true;
            }
            if (typeof (value) === 'number') {
                return true;
            }
            return typeof (value) === 'string' && !_this.regExpValidator.validate(value, context);
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || CurrencyValidator.messageTemplate })) || this;
        _this.regExpValidator = makeCurrencyValidator(group, validatorContext);
        return _this;
    }
    CurrencyValidator.create = function (group, context) {
        return new CurrencyValidator(group, context);
    };
    CurrencyValidator.messageTemplate = '%displayName% must be a valid currency amount';
    return CurrencyValidator;
}(_validator__WEBPACK_IMPORTED_MODULE_1__["Validator"]));

var CompareValidator = /** @class */ (function (_super) {
    __extends(CompareValidator, _super);
    function CompareValidator(group, validatorContext) {
        return _super.call(this, 'compare', group, function (value, context) {
            if (!value) {
                return true;
            }
            var otherValue = context.model[context.other];
            var op = context.op;
            if (op === '==') {
                return value === otherValue;
            }
            else if (op === '<') {
                return value < otherValue;
            }
            else if (op === '<=') {
                return value <= otherValue;
            }
            else if (op === '>') {
                return value > otherValue;
            }
            else if (op === '>=') {
                return value >= otherValue;
            }
            else if (op === '!=') {
                return value !== otherValue;
            }
            return false;
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || 'Invalid value' })) || this;
    }
    CompareValidator.create = function (group, context) {
        return new CompareValidator(group, context);
    };
    return CompareValidator;
}(_validator__WEBPACK_IMPORTED_MODULE_1__["Validator"]));

var DateValidator = /** @class */ (function (_super) {
    __extends(DateValidator, _super);
    function DateValidator(calendar, group, validatorContext) {
        var _this = _super.call(this, 'date', group, function (value, context) {
            if (!value) {
                return true;
            }
            if (typeof value === 'string') {
                try {
                    var date = new Date(value);
                    if (!_this.__isDate(date)) {
                        return false;
                    }
                    value = _this.__parse(value);
                    if (!value) {
                        return false;
                    }
                }
                catch (e) {
                    return false;
                }
            }
            if (_this.__isDate(value)) {
                var ngbDate = new _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbDate"](value.getFullYear(), value.getMonth() + 1, value.getDate());
                return _this.calendar.isValid(ngbDate);
            }
            else if (_this.__isDateStruct(value)) {
                var ngbDate = new _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbDate"](value.year, value.month, value.day);
                return _this.calendar.isValid(ngbDate);
            }
            else {
                return false;
            }
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || DateValidator.messageTemplate })) || this;
        _this.calendar = calendar;
        return _this;
    }
    DateValidator.factory = function (calendar) {
        return {
            name: 'date',
            fn: function (group, context) {
                return new DateValidator(calendar, group, context);
            }
        };
    };
    DateValidator.prototype.__isDate = function (o) {
        return o instanceof Date && !isNaN(o.getTime());
    };
    DateValidator.prototype.__isDateStruct = function (o) {
        return !!(o.year && o.month && o.day);
    };
    DateValidator.prototype.__parse = function (o) {
        var match;
        if (match = o.match(/^(\d{4}|\d{2})\s*-\s*(\d{2}|\d{1})\s*-\s*(\d{2}|\d{1})$/)) {
            return { year: +match[1], month: +match[2], day: +match[3] };
            // tslint:disable-next-line:max-line-length
        }
        else if (match = o.match(/^(\d{4})\D?(0[1-9]|1[0-2])\D?([12]\d|0[1-9]|3[01])(\D?([01]\d|2[0-3])\D?([0-5]\d)\D?([0-5]\d)?\D?(\d{3})?([zZ]|([\+-])([01]\d|2[0-3])\D?([0-5]\d)?)?)?$/)) {
            return { year: +match[1], month: +match[2], day: +match[3] };
        }
        else if (match = o.match(/^(\d{1,2})\s*[\/-]\s*(\d{1,2})\s*[\/-]\s*(\d{4}|\d{2})$/)) {
            // CASE 3: MM/dd/yyyy  (render values sent to validator)
            return { year: +match[3], month: +match[1], day: +match[2] };
        }
        return null;
    };
    DateValidator.messageTemplate = '%displayName% must be a valid date';
    return DateValidator;
}(_validator__WEBPACK_IMPORTED_MODULE_1__["Validator"]));

function makeZipCodeValidator(group, context) {
    context = __assign({}, context, { expression: /^\d{5}([\-]\d{4})?$/, messageTemplate: '%displayName% is not a valid U.S. zipcode' });
    return RegExpValidator.create('zipCode', group, context);
}
function makeEmailValidator(group, context) {
    // tslint:disable-next-line:max-line-length
    var reEmailAddress = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i;
    context = __assign({}, context, { expression: reEmailAddress, messageTemplate: '%displayName% is not a valid email address' });
    return RegExpValidator.create('email', group, context);
}
function makePhoneValidator(group, context) {
    context = __assign({}, context, { 
        // Too forgiving
        // expression: /^((\+|(0(\d+)?[-/.\s]?))[1-9]\d{0,2}[-/.\s]?)?((\(\d{1,6}\)|\d{1,6})[-/.\s]?)?(\d+[-/.\s]?)+\d+$/,
        // The following forces 10-digit US w/ no country code. You can insert punctuation and spaces
        // We will strip these out before sending to SP.
        expression: /^\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$/, messageTemplate: '%displayName% must be 10-digit phone number' });
    return RegExpValidator.create('phone', group, context);
}
function makeCurrencyValidator(group, context) {
    context = __assign({}, context, { expression: /^[+-]?[0-9]{1,3}(?:,?[0-9]{3})*(?:\.[0-9]{2})?$/, messageTemplate: '%displayName% must be a valid currency amount' });
    return RegExpValidator.create('currency', group, context);
}
function makeSocialSecurityNumberValidator(group, context) {
    context = __assign({}, context, { expression: /^(\d{3}-\d{2}-\d{4})|(\d{3}\d{2}\d{4})$/, messageTemplate: '%displayName% must be a valid Social Security number' });
    return RegExpValidator.create('social', group, context);
}
function makeNumericValidator(group, context) {
    var messageTemplate = '%displayName% must be a numeric value';
    var messageTemplateLeadingZeros = '%displayName% must be a numeric value with optional leading zeros';
    context = __assign({}, context, { expression: context && context.allowLeadingZeros ? /^([0-9]*)$/ : /^([1-9][0-9]*)$/, messageTemplate: context && context.messageTemplate ||
            context && context.allowLeadingZeros ? messageTemplateLeadingZeros : messageTemplate });
    return RegExpValidator.create('numeric', group, context);
}
function makeFeinValidator(group, context) {
    context = __assign({}, context, { expression: /^\d{2}?-\d{7}$/, messageTemplate: '%displayName% format is incorrect. Expected format is \'##-#######\'' });
    return RegExpValidator.create('fein', group, context);
}
var ExpressionValidator = /** @class */ (function (_super) {
    __extends(ExpressionValidator, _super);
    function ExpressionValidator(group, validatorContext) {
        var _this = _super.call(this, 'expression', group, function (value, context) {
            if (!value) {
                return true;
            }
            try {
                /**
                 * SECURITY: Safe because text passed to `Function` comes from our server, not the user
                 */
                if (!context.expressionFn) {
                    var evalFunc = "function(context, model, isClient, isServer){ return " + context.expression + " }";
                    context.expressionFn = Function("\"use strict\";return (" + evalFunc + ")")();
                }
                return context.expressionFn(context, context.model, context.isClient, context.isServer);
            }
            catch (e) {
                var message = "Expression '" + context.expression + "' failed for validator '" + _this.name + "'" +
                    (" and model type '" + context.modelType + "' with error '" + e.message + "'");
                return false;
            }
        }, __assign({}, validatorContext, { messageTemplate: validatorContext && validatorContext.messageTemplate || 'Invalid value' })) || this;
        return _this;
    }
    ExpressionValidator.create = function (group, context) {
        return new ExpressionValidator(group, context);
    };
    return ExpressionValidator;
}(_validator__WEBPACK_IMPORTED_MODULE_1__["Validator"]));

var defaultValidatorProviders = [
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'required', fn: RequiredValidator.create }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'minLength', fn: MinLengthValidator.create }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'maxLength', fn: MaxLengthValidator.create }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'zipCode', fn: makeZipCodeValidator }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'phone', fn: makePhoneValidator }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'email', fn: makeEmailValidator }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'currency', fn: CurrencyValidator.create }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'social', fn: makeSocialSecurityNumberValidator }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'fein', fn: makeFeinValidator }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'compare', fn: CompareValidator.create }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'range', fn: RangeValidator.create }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'numeric', fn: makeNumericValidator }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'invalidValues', fn: InvalidValuesValidator.create }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useValue: { name: 'expression', fn: ExpressionValidator.create }, multi: true },
    { provide: _validation_service__WEBPACK_IMPORTED_MODULE_0__["VALIDATOR_FACTORY"], useFactory: DateValidator.factory, deps: [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbCalendar"]], multi: true }
];


/***/ }),

/***/ "./src/app/store/validation/index.ts":
/*!*******************************************!*\
  !*** ./src/app/store/validation/index.ts ***!
  \*******************************************/
/*! exports provided: VALIDATION_ENTITY_METADATA, VALIDATOR_FACTORY, ValidationService, ValidationTriggerService, isValidatorGroupConfig, ValidatorMetadata, PropertyMetadata, ModelMetadata, ValidationMetadata, ValidationModule, ValidationError, ValidatorBase, Validator, AsyncValidator, RequiredValidator, MinLengthValidator, MaxLengthValidator, RegExpValidator, RangeValidator, InvalidValuesValidator, CurrencyValidator, CompareValidator, DateValidator, makeZipCodeValidator, makeEmailValidator, makePhoneValidator, makeCurrencyValidator, makeSocialSecurityNumberValidator, makeNumericValidator, makeFeinValidator, ExpressionValidator, defaultValidatorProviders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _validation_metadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validation-metadata */ "./src/app/store/validation/validation-metadata.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isValidatorGroupConfig", function() { return _validation_metadata__WEBPACK_IMPORTED_MODULE_0__["isValidatorGroupConfig"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidatorMetadata", function() { return _validation_metadata__WEBPACK_IMPORTED_MODULE_0__["ValidatorMetadata"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PropertyMetadata", function() { return _validation_metadata__WEBPACK_IMPORTED_MODULE_0__["PropertyMetadata"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModelMetadata", function() { return _validation_metadata__WEBPACK_IMPORTED_MODULE_0__["ModelMetadata"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidationMetadata", function() { return _validation_metadata__WEBPACK_IMPORTED_MODULE_0__["ValidationMetadata"]; });

/* harmony import */ var _validation_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validation.module */ "./src/app/store/validation/validation.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidationModule", function() { return _validation_module__WEBPACK_IMPORTED_MODULE_1__["ValidationModule"]; });

/* harmony import */ var _validation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validation.service */ "./src/app/store/validation/validation.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VALIDATION_ENTITY_METADATA", function() { return _validation_service__WEBPACK_IMPORTED_MODULE_2__["VALIDATION_ENTITY_METADATA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VALIDATOR_FACTORY", function() { return _validation_service__WEBPACK_IMPORTED_MODULE_2__["VALIDATOR_FACTORY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidationService", function() { return _validation_service__WEBPACK_IMPORTED_MODULE_2__["ValidationService"]; });

/* harmony import */ var _validation_trigger_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validation-trigger.service */ "./src/app/store/validation/validation-trigger.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidationTriggerService", function() { return _validation_trigger_service__WEBPACK_IMPORTED_MODULE_3__["ValidationTriggerService"]; });

/* harmony import */ var _validator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validator */ "./src/app/store/validation/validator.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidationError", function() { return _validator__WEBPACK_IMPORTED_MODULE_4__["ValidationError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValidatorBase", function() { return _validator__WEBPACK_IMPORTED_MODULE_4__["ValidatorBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Validator", function() { return _validator__WEBPACK_IMPORTED_MODULE_4__["Validator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AsyncValidator", function() { return _validator__WEBPACK_IMPORTED_MODULE_4__["AsyncValidator"]; });

/* harmony import */ var _default_validators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./default-validators */ "./src/app/store/validation/default-validators.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RequiredValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["RequiredValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MinLengthValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["MinLengthValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MaxLengthValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["MaxLengthValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RegExpValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["RegExpValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["RangeValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InvalidValuesValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["InvalidValuesValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CurrencyValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["CurrencyValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompareValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["CompareValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DateValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["DateValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "makeZipCodeValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["makeZipCodeValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "makeEmailValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["makeEmailValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "makePhoneValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["makePhoneValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "makeCurrencyValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["makeCurrencyValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "makeSocialSecurityNumberValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["makeSocialSecurityNumberValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "makeNumericValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["makeNumericValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "makeFeinValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["makeFeinValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExpressionValidator", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["ExpressionValidator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultValidatorProviders", function() { return _default_validators__WEBPACK_IMPORTED_MODULE_5__["defaultValidatorProviders"]; });









/***/ }),

/***/ "./src/app/store/validation/validation-metadata.ts":
/*!*********************************************************!*\
  !*** ./src/app/store/validation/validation-metadata.ts ***!
  \*********************************************************/
/*! exports provided: isValidatorGroupConfig, ValidatorMetadata, PropertyMetadata, ModelMetadata, ValidationMetadata */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidatorGroupConfig", function() { return isValidatorGroupConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidatorMetadata", function() { return ValidatorMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PropertyMetadata", function() { return PropertyMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelMetadata", function() { return ModelMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidationMetadata", function() { return ValidationMetadata; });
/* harmony import */ var _validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validator */ "./src/app/store/validation/validator.ts");

function isValidatorGroupConfig(config) {
    return !!config.group;
}
var ValidatorMetadata = /** @class */ (function () {
    function ValidatorMetadata(config, validatorFactories, groupConfig) {
        this.validatorFactories = validatorFactories;
        this.groupConfig = groupConfig;
        if (typeof (config) === 'string') {
            this.config = { name: config };
        }
        else {
            this.config = config;
        }
    }
    Object.defineProperty(ValidatorMetadata.prototype, "name", {
        get: function () { return this.config.name; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValidatorMetadata.prototype, "context", {
        get: function () { return this.config.context; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValidatorMetadata.prototype, "async", {
        get: function () { return !!this.config.async; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValidatorMetadata.prototype, "group", {
        get: function () { return this.groupConfig && this.groupConfig.group; },
        enumerable: true,
        configurable: true
    });
    ValidatorMetadata.prototype.evalCondition = function (context) {
        if (!this.config.condition) {
            return true;
        }
        try {
            /**
             * SECURITY: Safe because text passed to `Function` comes from our server, not the user
             */
            if (!this.condition) {
                var evalFunc = "function(context, model, isClient, isServer){ return " + this.config.condition + " }";
                this.condition = Function("\"use strict\";return (" + evalFunc + ")")();
            }
            return this.condition(context, context.model, context.isClient, context.isServer);
        }
        catch (e) {
            var message = "Condition '" + this.config.condition + "' failed for validator '" + this.name + "'" +
                (" and model type '" + context.modelType + "' with error '" + e.message + "'");
            throw new Error(message);
        }
    };
    ValidatorMetadata.prototype.getValidator = function () {
        var _this = this;
        var factory = this.validatorFactories.find(function (f) { return f.name === _this.name; });
        if (!factory) {
            throw new Error("ValidatorMetadata: No factory found with name '" + this.name + "'.");
        }
        var validator = factory.fn(this.group, this.context);
        if (this.async && !(validator instanceof _validator__WEBPACK_IMPORTED_MODULE_0__["AsyncValidator"])) {
            throw new Error("ValidationService: The validator with name '" + this.name + "' is not an asynchronous validator.");
        }
        else if (!this.async && !(validator instanceof _validator__WEBPACK_IMPORTED_MODULE_0__["Validator"])) {
            throw new Error("ValidationService: The validator with name '" + this.name + "' is not a synchronous validator.");
        }
        return validator;
    };
    return ValidatorMetadata;
}());

function asValidatorMetadata(validators, validatorFactories) {
    return (validators || [])
        .map(function (config) {
        if (isValidatorGroupConfig(config)) {
            return (config.validators || []).map(function (validatorConfig) { return new ValidatorMetadata(validatorConfig, validatorFactories, config); });
        }
        else {
            return [new ValidatorMetadata(config, validatorFactories)];
        }
    })
        .reduce(function (prev, curr) { return prev.concat(curr); }, []);
}
var PropertyMetadata = /** @class */ (function () {
    function PropertyMetadata(propertyName, config, validatorFactories) {
        this.propertyName = propertyName;
        this.config = config;
        this.validatorFactories = validatorFactories;
    }
    Object.defineProperty(PropertyMetadata.prototype, "displayName", {
        get: function () { return this.config.displayName; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PropertyMetadata.prototype, "validators", {
        get: function () {
            if (this._validators) {
                return this._validators;
            }
            this._validators = asValidatorMetadata(this.config.validators || [], this.validatorFactories);
            // Add well-known default validators
            if (this.config.required && !this._validators.some(function (validator) { return validator.name === 'required' && !validator.group; })) {
                this._validators.push(new ValidatorMetadata('required', this.validatorFactories));
            }
            if (this.config.minLength && !this._validators.some(function (validator) { return validator.name === 'minLength' && !validator.group; })) {
                var config = {
                    name: 'minLength',
                    context: {
                        minLength: this.config.minLength
                    }
                };
                this._validators.push(new ValidatorMetadata(config, this.validatorFactories));
            }
            if (this.config.maxLength && !this._validators.some(function (validator) { return validator.name === 'maxLength' && !validator.group; })) {
                var config = {
                    name: 'maxLength',
                    context: {
                        maxLength: this.config.maxLength
                    }
                };
                this._validators.push(new ValidatorMetadata(config, this.validatorFactories));
            }
            return this._validators;
        },
        enumerable: true,
        configurable: true
    });
    return PropertyMetadata;
}());

var ModelMetadata = /** @class */ (function () {
    function ModelMetadata(metadata, modelType, config, validatorFactories) {
        this.metadata = metadata;
        this.modelType = modelType;
        this.config = config;
        this.validatorFactories = validatorFactories;
    }
    Object.defineProperty(ModelMetadata.prototype, "validators", {
        get: function () {
            if (this._validators) {
                return this._validators;
            }
            this._validators = [];
            if (this.config.extends) {
                var parent_1 = this.metadata.getModelConfig(this.config.extends);
                if (parent_1) {
                    this._validators = parent_1.validators;
                }
            }
            this._validators = this._validators.concat(asValidatorMetadata(this.config.validators || [], this.validatorFactories));
            return this._validators;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModelMetadata.prototype, "properties", {
        get: function () {
            var _this = this;
            if (this._properties) {
                return this._properties;
            }
            this._properties = [];
            if (this.config.extends) {
                var parent_2 = this.metadata.getModelConfig(this.config.extends);
                if (parent_2) {
                    this._properties = parent_2.properties;
                }
            }
            var properties = Object.keys(this.config.properties || {})
                .map(function (propertyName) { return new PropertyMetadata(propertyName, _this.config.properties[propertyName], _this.validatorFactories); });
            this._properties = this._properties.concat(properties);
            return this._properties;
        },
        enumerable: true,
        configurable: true
    });
    ModelMetadata.prototype.getAsyncProperties = function () {
        return this.properties.filter(function (property) { return property.validators.some(function (validator) { return validator.async; }); });
    };
    ModelMetadata.prototype.evalCondition = function (entityInfos, model) {
        var parent = this.config.extends && this.metadata.getModelConfig(this.config.extends);
        var condition = this.config.condition || parent && parent.config.condition;
        if (!condition) {
            return true;
        }
        try {
            /**
             * SECURITY: Safe because text passed to `Function` comes from our server, not the user
             */
            if (!this.condition) {
                var entityHelpers = [
                    "function findEntity(id, type) {\n            var ei = entityInfos.find(function(entityInfo) {\n              return entityInfo.entity.id === id && entityInfo.entityType === type;\n            });\n            return ei && ei.entity;\n          }"
                ].join('\n\n');
                var evalFunc = "function(entityInfos, model, isClient, isServer){ return " + condition + "; " + entityHelpers + " }";
                this.condition = Function("\"use strict\";return (" + evalFunc + ")")();
            }
            return this.condition(entityInfos, model, true, false);
        }
        catch (e) {
            var message = "Condition '" + condition + "' failed for model type '" + this.modelType + "' with error '" + e.message + "'";
            throw new Error(message);
        }
    };
    return ModelMetadata;
}());

var ValidationMetadata = /** @class */ (function () {
    function ValidationMetadata(metadata, validatorFactories) {
        this.metadata = metadata;
        this.validatorFactories = validatorFactories;
        validatorFactories.forEach(function (factory, ix) {
            if (!factory.name) {
                throw new Error("Validator factory #" + ix + " lacks a name");
            }
            if (!factory.fn) {
                throw new Error("Validator factory #" + ix + " lacks a validator function");
            }
        });
    }
    ValidationMetadata.prototype.getModelConfig = function (modelType) {
        return this.getModelConfigs().find(function (config) { return config.modelType === modelType; });
    };
    ValidationMetadata.prototype.getModelConfigs = function () {
        return this.modelMetadata || (this.modelMetadata = this.getModelConfigsCore());
    };
    ValidationMetadata.prototype.getModelConfigsCore = function () {
        var _this = this;
        return this.metadata.map(function (metadata) {
            return Object.keys(metadata)
                .map(function (modelType) { return new ModelMetadata(_this, modelType, metadata[modelType], _this.validatorFactories); });
        }).reduce(function (prev, curr) { return prev.concat(curr); }, []);
    };
    return ValidationMetadata;
}());



/***/ }),

/***/ "./src/app/store/validation/validation-trigger.service.ts":
/*!****************************************************************!*\
  !*** ./src/app/store/validation/validation-trigger.service.ts ***!
  \****************************************************************/
/*! exports provided: ValidationTriggerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidationTriggerService", function() { return ValidationTriggerService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _entity_entity_selectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @entity/entity-selectors */ "./src/app/store/entity/entity-selectors.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");





// TODO: this service can be used to manually trigger validations.
// Its needed to trigger validation after taxes buildup or potentially other none store stateful data services.
var ValidationTriggerService = /** @class */ (function () {
    function ValidationTriggerService(entitySelectors) {
        this.entitySelectors = entitySelectors;
        this.triggerValidationsSubject = new rxjs__WEBPACK_IMPORTED_MODULE_0__["ReplaySubject"](1);
        this.triggerValidations$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["combineLatest"])(this.triggerValidationsSubject, this.entitySelectors.entityInfos$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (_a) {
            var _ = _a[0], entities = _a[1];
            return entities;
        }));
        this.triggerValidationsSubject.next();
    }
    ValidationTriggerService.prototype.validate = function () {
        this.triggerValidationsSubject.next();
    };
    ValidationTriggerService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_3__["defineInjectable"]({ factory: function ValidationTriggerService_Factory() { return new ValidationTriggerService(_angular_core__WEBPACK_IMPORTED_MODULE_3__["inject"](_entity_entity_selectors__WEBPACK_IMPORTED_MODULE_2__["EntitySelectors"])); }, token: ValidationTriggerService, providedIn: "root" });
    return ValidationTriggerService;
}());



/***/ }),

/***/ "./src/app/store/validation/validation.module.ts":
/*!*******************************************************!*\
  !*** ./src/app/store/validation/validation.module.ts ***!
  \*******************************************************/
/*! exports provided: ValidationModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidationModule", function() { return ValidationModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _validation_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validation.service */ "./src/app/store/validation/validation.service.ts");


var ValidationModule = /** @class */ (function () {
    function ValidationModule() {
    }
    ValidationModule.forRoot = function (config) {
        return {
            ngModule: ValidationModule,
            providers: [
                {
                    provide: _validation_service__WEBPACK_IMPORTED_MODULE_1__["VALIDATION_ENTITY_METADATA"],
                    useValue: config.validationMetadata || [],
                    multi: true
                }
            ]
        };
    };
    return ValidationModule;
}());



/***/ }),

/***/ "./src/app/store/validation/validation.service.ts":
/*!********************************************************!*\
  !*** ./src/app/store/validation/validation.service.ts ***!
  \********************************************************/
/*! exports provided: VALIDATION_ENTITY_METADATA, VALIDATOR_FACTORY, ValidationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VALIDATION_ENTITY_METADATA", function() { return VALIDATION_ENTITY_METADATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VALIDATOR_FACTORY", function() { return VALIDATOR_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidationService", function() { return ValidationService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs-spy/operators/tag */ "./node_modules/rxjs-spy/operators/tag.js");
/* harmony import */ var rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _validation_metadata__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validation-metadata */ "./src/app/store/validation/validation-metadata.ts");
/* harmony import */ var _validation_validation_trigger_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @validation/validation-trigger.service */ "./src/app/store/validation/validation-trigger.service.ts");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};








var VALIDATION_ENTITY_METADATA = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('ValidationEntityMetadata');
var VALIDATOR_FACTORY = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('ValidationFactory');
var ValidationService = /** @class */ (function () {
    function ValidationService(validationTriggerService, validationMetadata, factories) {
        this.validationTriggerService = validationTriggerService;
        this.modelValidated = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        var metadata = (validationMetadata || [])
            .map(function (item) { return Array.isArray(item) ? item : [item]; })
            .reduce(function (prev, curr) { return prev.concat(curr); }, []);
        this.validationMetadata = new _validation_metadata__WEBPACK_IMPORTED_MODULE_4__["ValidationMetadata"](metadata, factories || []);
    }
    Object.defineProperty(ValidationService.prototype, "modelValidated$", {
        get: function () {
            return this.modelValidated.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    ValidationService.prototype.validateModel = function (model, modelType, async, predicate) {
        var _this = this;
        var validationErrors = [];
        predicate = predicate || (function () { return true; });
        var modelValidationMetadata = this.validationMetadata.getModelConfig(modelType);
        if (modelValidationMetadata) {
            // Execute model level validators
            var modelValidators = this.filterValidators(modelValidationMetadata.validators, async, predicate);
            validationErrors = validationErrors.concat(modelValidators.map(function (modelValidator) {
                var context = __assign({ model: model, modelType: modelType, metadata: modelValidationMetadata, isClient: true, isServer: false }, modelValidator.context);
                if (!modelValidator.evalCondition(context)) {
                    return async ? Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null) : null;
                }
                var validator = modelValidator.getValidator();
                return validator.validate(model, context);
            }));
            // Execute property validators
            var properties = modelValidationMetadata.properties;
            properties.forEach(function (propertyMetadata) {
                var propertyValidators = _this.filterValidators(propertyMetadata.validators, async, function (validator) { return predicate(validator, propertyMetadata); });
                validationErrors = validationErrors.concat(propertyValidators.map(function (propertyValidator) {
                    var context = __assign({ model: model, modelType: modelType, metadata: modelValidationMetadata, propertyName: propertyMetadata.propertyName, displayName: propertyMetadata.displayName, isClient: true, isServer: false }, propertyValidator.context);
                    if (!propertyValidator.evalCondition(context)) {
                        return async ? Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(null) : null;
                    }
                    var validator = propertyValidator.getValidator();
                    return validator.validate(model[propertyMetadata.propertyName], context);
                }));
            });
        }
        if (async) {
            var asyncErrors = validationErrors;
            var asyncResult = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["forkJoin"])(asyncErrors).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (errors) {
                errors = errors.filter(function (error) { return !!error; });
                return errors.length ? errors : null;
            }));
            asyncResult.subscribe(function (errors) {
                _this.modelValidated.next({ model: model, validationErrors: errors });
            });
            return asyncResult;
        }
        validationErrors = validationErrors.filter(function (error) { return !!error; });
        var result = validationErrors.length ? validationErrors : null;
        this.modelValidated.next({ model: model, validationErrors: result });
        return result;
    };
    /**
     * Executes all asynchronous and synchronous validation rules for all entities in the cache
     * @param predicate Optional predicate to control execution of provided validator
     * @returns Observable emitting validation errors and entity info
     */
    ValidationService.prototype.validateEntityCache = function (predicate) {
        var _this = this;
        return this.validationTriggerService.triggerValidations$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["switchMap"])(function (entities) {
            if (entities.length === 0) {
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])({ entities: entities, validationErrors: [] });
            }
            var syncValidations = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(_this.validateEntities(entities, false, predicate));
            var asyncValidations = _this.validateEntities(entities, true, predicate)
                .map(function (o) { return o.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["startWith"])([])); });
            return rxjs__WEBPACK_IMPORTED_MODULE_1__["combineLatest"].apply(void 0, [syncValidations].concat(asyncValidations)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (results) { return results.reduce(function (prev, curr) { return prev.concat((curr || [])); }, []); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (validationErrors) {
                return { entities: entities, validationErrors: validationErrors };
            }));
        }), Object(rxjs_spy_operators_tag__WEBPACK_IMPORTED_MODULE_3__["tag"])('validateEntityCache'), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["shareReplay"])(1));
    };
    ValidationService.prototype.filterValidators = function (validators, async, predicate) {
        if (!async) {
            return validators.filter(function (validator) { return !validator.async && predicate(validator); });
        }
        return validators.filter(function (validator) { return validator.async && predicate(validator); });
    };
    ValidationService.prototype.validateEntities = function (entities, async, predicate) {
        var _this = this;
        var conditionalEntities = entities
            .filter(function (entityInfo) {
            var modelMetadata = _this.validationMetadata.getModelConfig(entityInfo.entityType);
            return modelMetadata && modelMetadata.evalCondition(entities, entityInfo.entity);
        });
        if (!async) {
            return conditionalEntities
                .map(function (entityInfo) { return _this.validateModel(entityInfo.entity, entityInfo.entityType, false, predicate); })
                .reduce(function (prev, curr) { return prev.concat((curr || [])); }, []);
        }
        return conditionalEntities
            .map(function (entityInfo) { return _this.validateModel(entityInfo.entity, entityInfo.entityType, true, predicate); });
    };
    ValidationService.ngInjectableDef = _angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"]({ factory: function ValidationService_Factory() { return new ValidationService(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](_validation_validation_trigger_service__WEBPACK_IMPORTED_MODULE_5__["ValidationTriggerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](VALIDATION_ENTITY_METADATA, 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"](VALIDATOR_FACTORY, 8)); }, token: ValidationService, providedIn: "root" });
    return ValidationService;
}());



/***/ }),

/***/ "./src/app/store/validation/validator.ts":
/*!***********************************************!*\
  !*** ./src/app/store/validation/validator.ts ***!
  \***********************************************/
/*! exports provided: ValidationError, ValidatorBase, Validator, AsyncValidator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidationError", function() { return ValidationError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidatorBase", function() { return ValidatorBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Validator", function() { return Validator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncValidator", function() { return AsyncValidator; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};


var ValidationError = /** @class */ (function () {
    function ValidationError(key, context, validator) {
        this.key = key;
        this.context = context;
        this.validator = validator;
        if (!context) {
            this.context = ((validator && validator.context) || {});
        }
    }
    ValidationError.prototype.getErrorMessage = function (displayName) {
        var ctx = __assign({}, this.context, { displayName: displayName || this.context.displayName || this.context.propertyName || '' });
        return this.formatMessage(ctx.messageTemplate, ctx);
    };
    ValidationError.prototype.formatMessage = function (template, context) {
        var _this = this;
        return template
            // replace tokens between % (e.g, %displayName%) with corresponding context property value.
            ? template.replace(/%([\w|\.]+)%/g, function (match, p1) { return _this.getPropertyValue(context, p1); })
            // Template is required. Getting here is a programmer error.
            : ValidationError.genericErrorMessage;
    };
    ValidationError.prototype.getPropertyValue = function (context, path) {
        var propertyPath = path && path.split('.');
        var result = propertyPath && context
            ? propertyPath.length === 1
                ? context[propertyPath[0]]
                : this.getPropertyValue(context[propertyPath[0]], propertyPath.slice(1).join('.'))
            : '';
        return result;
    };
    ValidationError.genericErrorMessage = 'Invalid value; contact customer support for assistance.';
    return ValidationError;
}());

var ValidatorBase = /** @class */ (function () {
    function ValidatorBase(name, group, context) {
        this.name = name;
        this.group = group;
        this.context = context;
        this.context = context || {};
    }
    ValidatorBase.prototype.getKey = function (context) {
        var key = this.name;
        if (this.group) {
            key = key + "_" + this.group;
        }
        if (context && context.propertyName) {
            key = key + "_" + context.propertyName;
        }
        return key;
    };
    ValidatorBase.prototype.getValidatorFunctionContext = function (value, context) {
        if (!context) {
            context = {};
        }
        return __assign({}, this.context, context, { displayName: context.displayName ||
                this.context.displayName ||
                context.propertyName ||
                this.context.propertyName ||
                '', value: value, validatorName: this.name });
    };
    return ValidatorBase;
}());

/**
 * Validator whose synchronous validate method returns a boolean.
 */
var Validator = /** @class */ (function (_super) {
    __extends(Validator, _super);
    function Validator(name, group, validatorFn, context) {
        var _this = _super.call(this, name, group, context) || this;
        _this.validatorFn = validatorFn;
        return _this;
    }
    /** Run this validator against the specified value.
    @param value {Object} Value to validate
    @param additionalContext {ValidationContext} Any additional contextual information that the Validator can make use of.
    @return {ValidationError|null}  null if the value is valid; a ValidationError if the value fails validation.
    */
    Validator.prototype.validate = function (value, context) {
        var ctx = this.getValidatorFunctionContext(value, context);
        return this.validatorFn(value, ctx) ? null : new ValidationError(this.getKey(ctx), ctx, this);
    };
    return Validator;
}(ValidatorBase));

/**
 * Validator whose validate method returns an observable boolean.
 * This observable is often asynchronous (as when validating on the server)
 * but could be synchronous (as any Observable can be).
 */
var AsyncValidator = /** @class */ (function (_super) {
    __extends(AsyncValidator, _super);
    function AsyncValidator(name, group, validatorFn, context) {
        var _this = _super.call(this, name, group, context) || this;
        _this.validatorFn = validatorFn;
        return _this;
    }
    /** Run this validator against the specified value.
    @param value {Object} Value to validate
    @param additionalContext {ValidationContext} Any additional contextual information that the Validator can make use of.
    @return {Observable<ValidationError | null>} A completing Observable of
    null if the value is valid; a ValidationError if the value fails validation.
    The observable must complete! If it emits multiple times, the last value is returned.
    */
    AsyncValidator.prototype.validate = function (value, context) {
        var _this = this;
        var ctx = this.getValidatorFunctionContext(value, context);
        try {
            return this.validatorFn(value, ctx).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["last"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (isValid) { return isValid ? null : _this.genError(ctx); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["catchError"])(function (error) { return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(_this.genError(ctx)); }));
        }
        catch (error) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["of"])(this.genError(ctx));
        }
    };
    AsyncValidator.prototype.genError = function (ctx) {
        return new ValidationError(this.getKey(ctx), ctx, this);
    };
    return AsyncValidator;
}(ValidatorBase));



/***/ }),

/***/ "./src/app/terms/terms.component.ngfactory.js":
/*!****************************************************!*\
  !*** ./src/app/terms/terms.component.ngfactory.js ***!
  \****************************************************/
/*! exports provided: RenderType_TermsComponent, View_TermsComponent_0, View_TermsComponent_Host_0, TermsComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_TermsComponent", function() { return RenderType_TermsComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_TermsComponent_0", function() { return View_TermsComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_TermsComponent_Host_0", function() { return View_TermsComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TermsComponentNgFactory", function() { return TermsComponentNgFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _terms_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./terms.component */ "./src/app/terms/terms.component.ts");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 


var styles_TermsComponent = [];
var RenderType_TermsComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵcrt"]({ encapsulation: 2, styles: styles_TermsComponent, data: {} });

function View_TermsComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 72, "div", [["class", "d-flex flex-column"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](1, 0, null, null, 5, "header", [["class", "header-bold"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](2, 0, null, null, 4, "div", [["class", "standard"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](3, 0, null, null, 1, "h1", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Terms of Service"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](5, 0, null, null, 1, "p", [["class", "text-muted"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Effective Date: October 2018"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](7, 0, null, null, 58, "div", [["class", "standard"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](8, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Please read these terms and conditions carefully. The software and/or applications (collectively \u201CMaterial\u201D) made available to you by SurePayroll, Inc. and/or its parent company, Paychex, Inc. or any affiliates (\u201CSurePayroll\u201D) through this website (\u201CSite\u201D) are subject to the following terms and conditions (\u201CTerms\u201D), and by accessing or using the Material and/or the Site, including using the services and/or Material enabled via the Site, you agree to be bound by the Terms. If you agree to these Terms on behalf of a company or other legal entity, you represent and warrant that you have the authority to bind that company or other legal entity to these Terms and, in such event, \"you\" or \"your\" will also refer and apply to that company or other legal entity."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](10, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["You acknowledge that you are responsible for the security of all usernames, passwords, or other login credentials used to access the Material and/or the Site. Unauthorized use of the Site, including but not limited to, unauthorized entry into SurePayroll\u2019s systems or misuse of passwords or other login credentials is strictly prohibited. You acknowledge that SurePayroll may disclose and transfer any information that you provide through the Site to (i) any SurePayroll employees, agents, or vendors as needed to provide the services; (ii) to any other person or entity with your consent; or (iii) if we have a right or duty to disclose or are permitted or compelled to so disclose such information by law. Use of the Site may be monitored, tracked and recorded."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](12, 0, null, null, 8, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](13, 0, null, null, 1, "h2", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Intellectual Property"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](15, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["SurePayroll owns all rights, title, and interest, including, but not limited to, copyright, patent, trade secret, and all other intellectual property rights, in the Material and/or the Site. The Material is protected by copyright and other intellectual property laws and by international treaties. If you are ever held or deemed to be the owner of any copyright rights in the Material or any changes, modifications, or corrections to the Material, you hereby irrevocably assign to SurePayroll all such rights, title, and interest. You are granted a limited, non-transferable, non-exclusive right to access and use the Material and/or the Site."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](17, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["You acknowledge that the Material contains valuable trade secrets and confidential information owned by SurePayroll or third parties. You agree that you will not, directly or indirectly: (i) sell, lease, assign, sublicense, or otherwise transfer; (ii) duplicate, reproduce, or copy; (iii) disclose, divulge, or otherwise make available to any third party; (iv) use, except as authorized by SurePayroll in these Terms or another agreement; or (v) decompile, disassemble, or otherwise analyze for reverse engineering purposes the Material. You agree to notify SurePayroll immediately of any unauthorized use or disclosure of any trade secrets or confidential information and to cooperate in remedying such unauthorized use or disclosure."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](19, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["The trademarks, service marks, trade names, trade dress, logos, designs, and/or any sounds associated with the Site are owned by SurePayroll or third parties who have authorized their use. SurePayroll does not grant any license or other authorization to any user of such copyrightable material, or any other intellectual property, by including them on the Site."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](21, 0, null, null, 4, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](22, 0, null, null, 1, "h2", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Web Content And Materials"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](24, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["You acknowledge that SurePayroll is not rendering legal, tax, accounting, or investment advice in connection with the services or your use of the Material and/or the Site. SurePayroll is not responsible for your compliance with, nor will SurePayroll provide legal or other financial advice, with respect to applicable federal, state, or local laws, regulations, or ordinances (collectively \u201CLaws\u201D). You agree to be responsible for your compliance with all applicable Laws."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](26, 0, null, null, 4, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](27, 0, null, null, 1, "h2", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Electronic Communications"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](29, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["When you visit the Site or send e-mails to SurePayroll, you are communicating with SurePayroll electronically. You consent to receive communications from SurePayroll electronically, andSurePayroll may communicate with you by e-mail or by posting notices on the Site. You agree that all agreements, notices, disclosures, and other communications that SurePayroll provides to you electronically satisfy any legal requirement that such communications be in writing."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](31, 0, null, null, 4, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](32, 0, null, null, 1, "h2", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Disclaimer of Warranties"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](34, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["YOU EXPRESSLY UNDERSTAND AND AGREE THAT TO THE EXTENT PERMITTED BY APPLICABLE LAW, YOUR USE OF THIS SITE (INCLUDING ALL INFORMATION AND MATERIALS CONTAINED ON THE SITE) IS AT YOUR SOLE RISK, AND IS PROVIDED \u201CAS IS\u201D AND \u201CAS AVAILABLE,\u201D WITH ALL FAULTS. SUREPAYROLL EXPRESSLY DISCLAIMS ALL WARRANTIES, REPRESENTATIONS, AND CONDITIONS OF ANY KIND WITH REGARD TO THE SITE, WHETHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR ANY PARTICULAR PURPOSE, TITLE, NONINFRINGEMENT OF THIRD PARTY RIGHTS, FREEDOM FROM VIRUSES OR OTHER HARMFUL CODE, OR ARISING FROM A COURSE OF DEALING, USUAGE OR TRADE PRACTICE. SUREPAYROLL WILL NOT BE LIABLE FOR ANY DELAY, DIFFICULTY IN USE, INACCURACY OF INFORMATION, COMPUTER VIRUSES, MALICIOUS CODE, OR OTHER DEFECTS IN THE SITE, OR FOR THE INCOMPATIBILITY BETWEEN THE SITE AND FILES AND THE USER\u2019S BROWSER OR OTHER SITE ACCESSING PROGRAM."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](36, 0, null, null, 4, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](37, 0, null, null, 1, "h2", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Limitation Of Liability"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](39, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["SUREPAYROLL WILL, UNDER NO CIRCUMSTANCES, BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR OTHER INDIRECT DAMAGES, INCLUDING, WITHOUT LIMITATION, ANY DAMAGES RESULTING FROM LOSS OF USE, DATA, OR PROFITS ARISING OUT OF ANY USE OF OR INABILITY TO USE THE SITE OR ANY PORTION THEREOF, HOWEVER CAUSED, ON ANY THEORY OF LIABILITY (INCLUDING CONTRACT, TORT, OR WARRANTY), OR AS A RESULT OF SUREPAYROLL\u2019S EXERCISE OF ITS RIGHTS UNDER THESE TERMS, EVEN IF SUREPAYROLL HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. This limitation of liability is in addition to and does not limit any additional liability limitations set forth in any separate SurePayroll services agreement."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](41, 0, null, null, 4, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](42, 0, null, null, 1, "h2", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Indemnification"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](44, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["You agree to indemnify, defend, and hold SurePayroll, its parents, subsidiaries, affiliates, officers, employees, agents, partners and licensors harmless from any and all claims, losses, costs, liabilities, and expenses (including reasonable attorneys\u2019 fees) relating to or arising out of: (a) your misuse of, or inability to use, the Material and/or the Site; (b) your violation of any of the Terms; (c) your violation of any rights of another party, including any other user of the Material and/or the Site; or (d) your violation of any applicable Laws."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](46, 0, null, null, 4, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](47, 0, null, null, 1, "h2", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Potential Disruption of Service"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](49, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Access to the Site may from time to time be unavailable, delayed, limited, or slowed due to, among other things, hardware and/or software failures, errors, or bugs; acts of God, war, or terrorism; or acts of any governmental body. SurePayroll shall not be liable for any delay or failure to perform resulting from these or other causes outside of its control."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](51, 0, null, null, 4, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](52, 0, null, null, 1, "h2", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Enforceability and Governing Law"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](54, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Your use of the Site shall be governed by the laws of the State of Illinois without regard to, or application of, its conflicts of laws, rules, and principles, except for the arbitration agreement contained herein which shall be governed exclusively by the Federal Arbitration Act, 9 U.S.C. section 1 et seq (the \u201CFAA\u201D). Except as provided herein, any dispute arising out of, or in connection with, the Terms will be determined only by binding arbitration in Chicago, Illinois, in accordance with the commercial rules of the American Arbitration Association. Arbitrable disputes include, without limitation, disputes about the formation, interpretation, applicability, or enforceability of these Terms. Any dispute arising under the Terms will be brought within two (2) years of when the claim accrued. The arbitrator will not be authorized to award exemplary or punitive damages, or any damages excluded in the Limitation of Liability provision. The parties will not be permitted to bring, or participate in, and the arbitrator will not have any authority or jurisdiction to hear or decide, any claims brought as any type of purported class action, coordinated action, aggregated action, or similar action or proceeding. Each party must only bring claims against each other in their individual capacity. In the event any of the terms or provisions of these Terms shall be held to be unenforceable, the remaining terms and provisions shall be unimpaired and the enforceable term or provision shall be replaced by such enforceable term or provision as comes closest to the intention underlying the unenforceable term or provision."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](56, 0, null, null, 4, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](57, 0, null, null, 1, "h2", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Changes to the Site; Termination"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](59, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["SurePayroll reserves the right to change or discontinue, temporarily or permanently, the Site, and those products and services available at the site, including but not limited to revising and/or deleting features or other information without prior notice. You agree that SurePayroll will not be liable to you for any damages resulting from its modification, suspension, discontinuance, or deletion of the Site, any elements comprising the Site, or any products or services available on the Site. We reserve the right, at our sole discretion, immediately and without notice to you, to suspend or terminate your account and/or your ability to access the Site and the products and services available on the Site, for any reason."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](61, 0, null, null, 4, "div", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](62, 0, null, null, 1, "h2", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["About these Terms and Conditions"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](64, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["These Terms were posted on the date set forth above. SurePayroll reserves the right to change, alter, or modify these Terms at its own discretion. Any revised Terms will be posted on the Site and will be effective immediately, unless otherwise stated."])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](66, 0, null, null, 6, "footer", [["class", "d-flex justify-content-between align-items-center"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](67, 0, null, null, 1, "span", [["class", "font-weight-bold"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["\u00A9 SurePayroll, Inc. 2018"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](69, 0, null, null, 3, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["Have questions? We're happy to help! "])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](71, 0, null, null, 1, "a", [["href", "tel:18009148088"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵted"](-1, null, ["1-800-914-8088"]))], null, null); }
function View_TermsComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵeld"](0, 0, null, null, 1, "sp-terms", [], null, null, null, View_TermsComponent_0, RenderType_TermsComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵdid"](1, 114688, null, 0, _terms_component__WEBPACK_IMPORTED_MODULE_1__["TermsComponent"], [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var TermsComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵccf"]("sp-terms", _terms_component__WEBPACK_IMPORTED_MODULE_1__["TermsComponent"], View_TermsComponent_Host_0, {}, {}, []);



/***/ }),

/***/ "./src/app/terms/terms.component.ts":
/*!******************************************!*\
  !*** ./src/app/terms/terms.component.ts ***!
  \******************************************/
/*! exports provided: TermsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TermsComponent", function() { return TermsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");

var TermsComponent = /** @class */ (function () {
    function TermsComponent() {
    }
    TermsComponent.prototype.ngOnInit = function () {
    };
    return TermsComponent;
}());



/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ "./src/environments/version.ts");

// The file contents for the local MOCKING environment which runs with mock services rather than SurePayroll services
// Build with the "mock" environment scripts
var environment = {
    production: false,
    version: _version__WEBPACK_IMPORTED_MODULE_0__["APP_VERSION"],
    env: 'mock',
    // ECommerce web api (no trailing '/'), e.g
    // 'https://my.prodserver.com',
    apiRoot: 'http://localhost:5105',
    /** You must run on port 5009 or 5015 if you turn mockServices:false **/
    authTracing: false,
    mockAuth: false,
    enableDeductions: true,
    enableMigration: true,
    mockServices: true,
    mockSpApiOnly: false,
    routerTracing: false,
    /*** IdentityServer (OIDC) endpoints ***/
    oidcAuthRealm: 'https://devidentity.surepayroll.com',
    oidcClientId: 'ecommerce',
    oidcRedirectUri: 'oidc-callback',
    oidcScope: 'document enrollment enrollment_api openid profile phone role permission tax tax_api cms_profile',
    /*** SurePayroll API  (not ECommerce) root path. No trailing slash! ***/
    spApiRoot: 'https://devcoreapi.surepayroll.com',
    // Google Analytics Key
    googleAnalyticsKey: 'UA-119769894-1',
    // Ward's private key on loan to the project
    googlePlacesApiUrl: 'https://maps.googleapis.com/maps/api/js?key=AIzaSyBl3MM25oNKAgODg9RzYYDqkiYNPQRNqY4&libraries=places',
    // googlePlacesApiUrl: 'https://maps.googleapis.com/maps/api/js?client=gme-paychexinc&libraries=places',
    // Google Tag Manager Key
    googleTagManagerKey: 'GTM-T7N5RDJ',
    // Sentry.io error reporting service
    enableSentry: false,
    // Sentry.io error reporting service URI
    sentryUri: 'https://c87cb8b815ec4e9baf41916056886e0f@sentry.io/1262423',
    // Pardot for handler uri
    pardotFormHandlerUri: 'https://easy.surepayroll.com/l/35372/2019-01-17/skx4d3',
    // Chat Live Agent Fields
    chatConfig: {
        BUTTON_ID: '5731b000000012J',
        DEPLOYMENT_ID: '5721b0000004CEm',
        ORGANIZATION_ID: '00D1b0000000kTv',
        LIVEAGENT_SCRIPT_URL: 'https://c.la4-c2cs-dfw.salesforceliveagent.com/content/g/js/43.0/deployment.js',
        CHAT_URL: 'https://d.la4-c2cs-dfw.salesforceliveagent.com/chat',
        TRACING: true
    },
    // env specific link on Enrolled page - Sign in to your payroll account now
    payrollLoginUrl: 'https://devsecure.surepayroll.local/SPF/Login/Auth.aspx'
};
if (environment.mockSpApiOnly) {
    environment.mockServices = true; // Has to be true to mock the SP APIs.
}
if (!environment.production) {
    console.log('ECommerce App Environment: ', environment);
    var hostname = location.hostname, port = location.port;
    if (environment.mockServices !== true &&
        hostname === 'localhost' &&
        '5009|5015'.indexOf(port) < 0) {
        throw new Error('You cannot run in localhost with mockServices:false EXCEPT on ports 5009 or 5015');
    }
}


/***/ }),

/***/ "./src/environments/version.ts":
/*!*************************************!*\
  !*** ./src/environments/version.ts ***!
  \*************************************/
/*! exports provided: APP_VERSION */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APP_VERSION", function() { return APP_VERSION; });
var APP_VERSION = '0.2.12';


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @environment */ "./src/environments/environment.ts");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hammerjs */ "./node_modules/hammerjs/hammer.js");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(hammerjs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _app_app_dev_module_ngfactory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/app-dev.module.ngfactory */ "./src/app/app-dev.module.ngfactory.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");





if (_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
_angular_platform_browser__WEBPACK_IMPORTED_MODULE_4__["platformBrowser"]().bootstrapModuleFactory(_app_app_dev_module_ngfactory__WEBPACK_IMPORTED_MODULE_3__["AppDevModuleNgFactory"]);
// platformBrowserDynamic().bootstrapModule(AppModule);


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\git\SurePayroll\surepayroll\Ecommerce\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.b17bc98a2b0838b4cc14.js.map