{"version":3,"sources":["webpack:///./src/app/ancillary/ancillary-helper.service.ts","webpack:///./src/app/ancillary/ancillary-modal.component.html","webpack:///./src/app/ancillary/ancillary-modal.component.ts","webpack:///./src/app/ancillary/ancillary.module.ts","webpack:///./src/app/shared/docs/view-docs.component.ts.ViewDocsComponent.html"],"names":[],"mappings":"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","file":"5.a833751b5b0cebceb642.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Ancillary, CompanyAncillary } from '@model';\r\nimport { ChangeSetAdd } from 'ngrx-data';\r\nimport { changeItemFactory as cif } from '@utils';\r\nimport { CompanyAncillaryService, AncillaryService } from '@entity';\r\nimport { map, first, concatMap } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { IdGeneratorService } from '@app/core';\r\nimport { environment } from '@environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AncillaryHelperService {\r\n  companyAncillaryVm$: Observable<CompanyAncillary[]>;\r\n  anc$: Observable<Ancillary[]>;\r\n  loadedAncillaryData = false;\r\n\r\n  constructor(private idGeneratorService: IdGeneratorService,\r\n    private companyAncillaryService: CompanyAncillaryService,\r\n    private ancillaryService: AncillaryService,\r\n    private http: HttpClient) {\r\n      this.companyAncillaryVm$ = this.companyAncillaryService.entities$;\r\n    }\r\n\r\n  // #region TODO: Refactor to pattern\r\n  getAncillaryData(): Observable<Ancillary[]> {\r\n      return this.ancillaryService.loaded$.pipe(first(), concatMap(vm1 => {\r\n        this.loadedAncillaryData = vm1;\r\n        if (this.loadedAncillaryData === true) {\r\n          return this.ancillaryService.entities$.pipe(map( col => this.updateAncillaryWithHtml(col) ));\r\n        } else {\r\n          return this.ancillaryService.load().pipe(map( col => this.updateAncillaryWithHtml(col) ));        }\r\n      }));\r\n    }\r\n\r\n  updateAncillaryWithHtml(col: Ancillary[]): Ancillary[] {\r\n    // Security: anc.Content is always authored by the documentation team\r\n    // and is considered to be safe.\r\n    for (const anc of col) {\r\n      this.http.get('/assets/ancillary/' + anc.content, { headers: new HttpHeaders({\r\n        'Accept':  'text/html'\r\n      }), responseType: 'text' }).subscribe(data => { anc.htmlVal = data; });\r\n    }\r\n    return col;\r\n  }\r\n  // #endregion TODO: Refactor to pattern\r\n\r\n  saveCompanyAncillary(ancillaryIds:  string[], companyId: string) {\r\n    const sUrl = environment.apiRoot + '/save/companyancillary';\r\n    if ( ancillaryIds.length > 0) {\r\n      const changes: ChangeSetAdd<CompanyAncillary>[] = [];\r\n      for (const ancId of ancillaryIds) {\r\n\r\n        const ancillary: CompanyAncillary = new CompanyAncillary();\r\n        ancillary.id = this.idGeneratorService.generateId();\r\n        ancillary.companyId = companyId;\r\n        ancillary.ancillaryId = ancId;\r\n\r\n        changes.push(cif.add('CompanyAncillary', ancillary));\r\n      }\r\n    this.companyAncillaryService.saveEntities({ changes }, sUrl).pipe(\r\n      map(_ => {})\r\n    );\r\n    }\r\n  }\r\n}\r\n","<ng-template\r\n  #ancillaryModal\r\n  let-d=\"dismiss()\"\r\n  let-ci=\"close('not-interested')\"\r\n  let-cs=\"close('send-me')\"\r\n  let-cc=\"close('cancel')\"\r\n>\r\n  <!--\r\n    cm and d vars based on the following work-around.\r\n    https://github.com/angular/vscode-ng-language-service/issues/234#issuecomment-385955606\r\n  -->\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Interested in other valuable services we offer?</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"(cc)\">\r\n      <i class=\"material-icons icon\" aria-hidden=\"true\">close</i>\r\n    </button>\r\n  </div>\r\n    <div class=\"modal-body\" (keyup.escape)=\"(d)\">\r\n      <span>Select one or multiple options below you wish to learn more about.</span>\r\n      <div class=\"checkbox-card-group\">\r\n        <div class=\"checkbox-card\" *ngFor=\"let ancillary of ancillaryVm\">\r\n          <input type=\"checkbox\" id=\"{{ancillary.id}}\" value=\"{{ancillary.id}}\"\r\n                 name=\"{{ancillary.id}}\"\r\n                 (change)=\"updateSelectedIds(ancillary.id)\"/>\r\n          <label for=\"{{ancillary.id}}\" [innerHTML]=\"cacheHtml(ancillary)\"></label>\r\n        </div>\r\n      </div>\r\n      <span>One of our customer success agents will contact you with more information on your selections.</span>\r\n    </div>\r\n    <div class=\"modal-footer d-flex\">\r\n      <button type=\"button\" class=\"btn btn-light\" (click)=\"(ci)\">I'm not interested</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"(cs)\">We'll contact you</button>\r\n    </div>\r\n\r\n</ng-template>\r\n","import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { concatMap, first } from 'rxjs/operators';\r\n\r\nimport { Ancillary, CompanyAncillary } from '@model';\r\nimport { AncillaryHelperService } from './ancillary-helper.service';\r\nimport { SessionService } from '@session';\r\n\r\n@Component({\r\n  selector: 'sp-ancillary-modal',\r\n  templateUrl: './ancillary-modal.component.html'\r\n})\r\n/**\r\n * Modal Address Editor\r\n */\r\nexport class AncillaryModalComponent implements OnInit {\r\n  private modalRef: NgbModalRef;\r\n  /** Snapshot of the current company from a terminating observable. No need to unsubscribe. */\r\n  ancillaryVm: Ancillary[];\r\n  companyAncillaryVm: CompanyAncillary[];\r\n  companyId: string;\r\n  ancillaryIdListSelected: string[] = [];\r\n  ancillaryViewModel$: Observable<Ancillary[]>;\r\n  states: {[id: string]: string } = {};\r\n\r\n  @ViewChild('ancillaryModal') ancillaryModal: ElementRef;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private sessionService: SessionService,\r\n    private ancillaryHelperService: AncillaryHelperService,\r\n    private sanitizer: DomSanitizer\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.ancillaryViewModel$ = this.ancillaryHelperService.companyAncillaryVm$.pipe(\r\n      first(),\r\n      concatMap(vm => {\r\n        this.companyAncillaryVm = vm;\r\n        if (this.companyAncillaryVm === undefined || this.companyAncillaryVm.length === 0) {\r\n          return this.ancillaryHelperService.getAncillaryData();\r\n        }\r\n      })\r\n    );\r\n    this.ancillaryViewModel$.pipe(first()).subscribe(vm1 => {\r\n      this.ancillaryVm = vm1;\r\n    });\r\n\r\n    this.sessionService.currentCompanyId$.pipe(first()).subscribe(c => {\r\n      this.companyId = c;\r\n    });\r\n  }\r\n\r\n  private openModalDialog() {\r\n    this.modalRef = this.modalService.open(this.ancillaryModal, { backdrop: 'static' });\r\n    this.modalRef.result.then(res => {\r\n      this.close(res);\r\n    });\r\n  }\r\n  close(reason: string) {\r\n    if (reason === 'send-me') {\r\n      this.save();\r\n    }\r\n  }\r\n\r\n  private htmlCache: any = {};\r\n  public cacheHtml(anc: Ancillary): SafeHtml {\r\n    // Need to cache the HTML. Due too much changes driven by the observables\r\n    // breaks in IE11. On the HTML is calculated, is not going to change for a given ID\r\n    if (!this.htmlCache[anc.id]) {\r\n      const html = <any> this.getSafeHtml(anc);\r\n      if (html.changingThisBreaksApplicationSecurity) {\r\n        this.htmlCache[anc.id] = html;\r\n      }\r\n    }\r\n    return this.htmlCache[anc.id] as SafeHtml;\r\n  }\r\n  public getSafeHtml(anc: Ancillary): SafeHtml {\r\n    // Security: `ancillary.htmlVal` is always authored by the documentation team\r\n    // and is considered to be safe.\r\n    return this.sanitizer.bypassSecurityTrustHtml(anc.htmlVal);\r\n  }\r\n  private save() {\r\n    this.ancillaryHelperService.saveCompanyAncillary(\r\n      this.ancillaryIdListSelected,\r\n      this.companyId\r\n    );\r\n  }\r\n\r\n  checkAncillaryResponse() {\r\n    if (this.companyAncillaryVm === undefined || this.companyAncillaryVm.length === 0) {\r\n      this.openModalDialog();\r\n    }\r\n  }\r\n\r\n  updateSelectedIds(itemId: string) {\r\n    const state = this.states[itemId];\r\n    if (state === 'checked') {\r\n      this.states[itemId] = 'unchecked';\r\n      const index: number = this.ancillaryIdListSelected.indexOf(itemId);\r\n      if (index !== -1) {\r\n        this.ancillaryIdListSelected.splice(index, 1);\r\n      }\r\n    } else {\r\n      this.states[itemId] = 'checked';\r\n      this.ancillaryIdListSelected.push(itemId);\r\n    }\r\n  }\r\n\r\n  closeModal() {\r\n    this.modalRef.close('ok');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { AncillaryModalComponent } from './ancillary-modal.component';\r\n\r\n@NgModule({\r\n  imports: [SharedModule],\r\n  exports: [AncillaryModalComponent],\r\n  declarations: [AncillaryModalComponent]\r\n})\r\nexport class AncillaryModule {}\r\n","\n  <button *ngIf=\"!!envelopeId\" class=\"btn btn-secondary btn-icon-combo mt-3\" type=\"button\"\n  (click)=\"viewDocs(envelopeId);\">\n    <span>View Signed Documents </span>\n    <i class=\"material-icons icon d-inline\">chevron_right</i>\n  </button>\n  "],"sourceRoot":""}